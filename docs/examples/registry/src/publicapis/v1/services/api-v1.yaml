components:
  schemas:
    Api:
      type: object
      properties:
        API:
          type: string
        Description:
          type: string
        Auth:
          type: string
        HTTPS:
          type: string
        Cors:
          type: boolean
        Link:
          type: string
    ApiList:
      type: object
      properties:
        count:
          type: integer
        entries:
          items:
            $ref: '#/components/schemas/Api'
          type: array
    CategoryList:
      type: object
      properties:
        count:
          type: integer
        categories:
          items:
            type: string
          type: array
    HealthStatus:
      type: string
  x-stackQL-resources:
    apis:
      id: publicapis.api.apis
      name: apis
      title: apis
      methods:
        list:
          operation:
            $ref: GET
          path:
            $ref: /entries
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: entries
    random:
      id: publicapis.api.random
      name: random
      title: random
      methods:
        list:
          operation:
            $ref: GET
          path:
            $ref: /random
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: entries
    categories:
      id: publicapis.api.categories
      name: categories
      title: categories
      methods:
        list:
          operation:
            $ref: GET
          path:
            $ref: /categories
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: categories
    health:
      id: publicapis.api.health
      name: health
      title: health
      methods:
        get:
          operation:
            $ref: GET
          path:
            $ref: /health
          response:
            mediaType: text/plain
            openAPIDocKey: '200'
externalDocs:
  description: Find more info here
  url: https://api.publicapis.org/
info:
  contact:
    url: https://api.publicapis.org/
  x-serviceName: api
openapi: 3.0.1
paths:
  /entries:
    get:
      description: apis currently present in the repository.
        Can be filtered through parameters.
      parameters:
      - description: 'name of entry (matches via substring - i.e. "at" would return "cat" and "atlas")'
        in: query
        name: title
        schema:
          type: string
      - description: description of entry (matches via substring)
        in: query
        name: description
        schema:
          type: string
      - description: auth type of entry (can only be values matching in project or null)
        in: query
        name: auth
        schema:
          type: string
      - description: return entries that support HTTPS or not
        in: query
        name: https
        schema:
          type: boolean
      - description: 'CORS support for entry ("yes", "no", or "unknown")'
        in: query
        name: cors
        schema:
          type: string
      - description: return entries of a specific category
        in: query
        name: category
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiList'
          description: Success
  /random:
    get:
      description: random selection from apis currently present in the repository.
        Can be filtered through parameters.
      parameters:
      - description: 'name of entry (matches via substring - i.e. "at" would return "cat" and "atlas")'
        in: query
        name: title
        schema:
          type: string
      - description: description of entry (matches via substring)
        in: query
        name: description
        schema:
          type: string
      - description: auth type of entry (can only be values matching in project or null)
        in: query
        name: auth
        schema:
          type: string
      - description: return entries that support HTTPS or not
        in: query
        name: https
        schema:
          type: boolean
      - description: 'CORS support for entry ("yes", "no", or "unknown")'
        in: query
        name: cors
        schema:
          type: string
      - description: return entries of a specific category
        in: query
        name: category
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiList'
          description: Success
  /categories:
    get:
      description: list of categories currently present.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryList'
          description: Success
  /health:
    get:
      description: apis currently present in the repository.
        Can be filtered through parameters.
      responses:
        '200':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/HealthStatus'
          description: Success
servers:
- url: https://api.publicapis.org
