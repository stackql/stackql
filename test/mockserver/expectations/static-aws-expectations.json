[
  {
    "httpRequest": {
      "method": "GET",
      "path": "/",
      "headers": {
        "Authorization": ["^.*ap-southeast-1.*SignedHeaders=.*host;x-amz-content-sha256;x-amz-date.*$" ]
      },
      "queryStringParameters": { 
        "max-keys": [ "1000" ]
      }
    },
    "httpResponse": {
      "headers": {
        "content-type": [ "text/xml" ]
      },
      "statusCode": 200,
      "body": {
        "type": "BINARY",
        "base64Bytes": "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPExpc3RCdWNrZXRSZXN1bHQgeG1sbnM9Imh0dHA6Ly9zMy5hbWF6b25hd3MuY29tL2RvYy8yMDA2LTAzLTAxLyI+PE5hbWU+c3RhY2txbC10cmlhbC1idWNrZXQtMDE8L05hbWU+PFByZWZpeD48L1ByZWZpeD48TWFya2VyPjwvTWFya2VyPjxNYXhLZXlzPjEwMDA8L01heEtleXM+PElzVHJ1bmNhdGVkPmZhbHNlPC9Jc1RydW5jYXRlZD48Q29udGVudHM+PEtleT5kdW1teS50eHQ8L0tleT48TGFzdE1vZGlmaWVkPjIwMjItMDgtMzFUMTI6NDY6NTQuMDAwWjwvTGFzdE1vZGlmaWVkPjxFVGFnPiZxdW90OzEwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCZxdW90OzwvRVRhZz48U2l6ZT4xMzwvU2l6ZT48T3duZXI+PElEPjEwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDwvSUQ+PERpc3BsYXlOYW1lPmpvZWJsb3c8L0Rpc3BsYXlOYW1lPjwvT3duZXI+PFN0b3JhZ2VDbGFzcz5TVEFOREFSRDwvU3RvcmFnZUNsYXNzPjwvQ29udGVudHM+PC9MaXN0QnVja2V0UmVzdWx0Pg=="
      }
    }
  },
  {
    "httpRequest": {
      "method": "GET",
      "path": "/",
      "headers": {
        "Authorization": ["^.*ap-southeast-2.*SignedHeaders=.*host;x-amz-content-sha256;x-amz-date.*$" ]
      },
      "queryStringParameters": { 
        "max-keys": [ "1000" ]
      }
    },
    "httpResponse": {
      "headers": {
        "content-type": [ "text/xml" ]
      },
      "statusCode": 200,
      "body": {
        "type": "BINARY",
        "base64Bytes": "PExpc3RCdWNrZXRSZXN1bHQgeG1sbnM9Imh0dHA6Ly9zMy5hbWF6b25hd3MuY29tL2RvYy8yMDA2LTAzLTAxLyI+PE5hbWU+c3RhY2txbC10cmlhbC1idWNrZXQtMDI8L05hbWU+PFByZWZpeD48L1ByZWZpeD48TWFya2VyPjwvTWFya2VyPjxNYXhLZXlzPjEwMDA8L01heEtleXM+PElzVHJ1bmNhdGVkPmZhbHNlPC9Jc1RydW5jYXRlZD48L0xpc3RCdWNrZXRSZXN1bHQ+"
      }
    }
  },
  {
    "httpRequest": {
      "method": "GET",
      "path": "/",
      "headers": {
        "Authorization": ["^.*SignedHeaders=.*host;.*x-amz-date.*$" ]
      },
      "queryStringParameters": { 
        "location": [ "" ]
      }
    },
    "httpResponse": {
      "headers": {
        "content-type": [ "text/xml" ]
      },
      "statusCode": 200,
      "body": {
        "type": "BINARY",
        "base64Bytes": "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPExvY2F0aW9uQ29uc3RyYWludCB4bWxucz0iaHR0cDovL3MzLmFtYXpvbmF3cy5jb20vZG9jLzIwMDYtMDMtMDEvIj5hcC1zb3V0aGVhc3QtMTwvTG9jYXRpb25Db25zdHJhaW50Pg=="
      }
    }
  },
  {
    "httpRequest": {
      "method": "GET",
      "path": "/",
      "headers": {
        "Authorization": ["^.*SignedHeaders=.*host.*x-amz-date.*$" ]
      }
    },
    "httpResponse": {
      "headers": {
        "content-type": [ "text/xml" ]
      },
      "statusCode": 200,
      "body": {
        "type": "BINARY",
        "base64Bytes": "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPExpc3RBbGxNeUJ1Y2tldHNSZXN1bHQgeG1sbnM9Imh0dHA6Ly9zMy5hbWF6b25hd3MuY29tL2RvYy8yMDA2LTAzLTAxLyI+PE93bmVyPjxJRD4xMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA8L0lEPjxEaXNwbGF5TmFtZT5qb2VibG93PC9EaXNwbGF5TmFtZT48L093bmVyPjxCdWNrZXRzPgogIDxCdWNrZXQ+PE5hbWU+c3RhY2txbC10cmlhbC1idWNrZXQtMDE8L05hbWU+PENyZWF0aW9uRGF0ZT4yMDIyLTA4LTI5VDEyOjEwOjA2LjAwMFo8L0NyZWF0aW9uRGF0ZT48L0J1Y2tldD4KICA8QnVja2V0PjxOYW1lPnN0YWNrcWwtdHJpYWwtYnVja2V0LTAyPC9OYW1lPjxDcmVhdGlvbkRhdGU+MjAyMi0wOC0yOVQxMjoxMTowNi4wMDBaPC9DcmVhdGlvbkRhdGU+PC9CdWNrZXQ+CiAgPEJ1Y2tldD48TmFtZT5zdGFja3FsLXRyaWFsLWJ1Y2tldC0wMzwvTmFtZT48Q3JlYXRpb25EYXRlPjIwMjItMDgtMjlUMTI6MTI6MDYuMDAwWjwvQ3JlYXRpb25EYXRlPjwvQnVja2V0Pgo8L0J1Y2tldHM+PC9MaXN0QWxsTXlCdWNrZXRzUmVzdWx0Pg=="
      }
    }
  },
  {
    "httpRequest": {
      "method": "POST",
      "path": "/",
      "headers": {
        "Authorization": ["^.*SignedHeaders=.*content-type;host;x-amz-date.*$" ]
      },
      "body" : {
        "type" : "PARAMETERS",
        "parameters": {
          "Action": [ "^DescribeVolumes$" ],
          "Version": [ "^2016\\-11\\-15$" ] 
        }
      }
    },
    "httpResponse": {
      "headers": {
        "content-type": [ "text/xml" ]
      },
      "statusCode": 200,
      "body": {
        "type": "BINARY",
        "base64Bytes": "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPERlc2NyaWJlVm9sdW1lc1Jlc3BvbnNlIHhtbG5zPSJodHRwOi8vZWMyLmFtYXpvbmF3cy5jb20vZG9jLzIwMTYtMTEtMTUvIj4KICAgIDxyZXF1ZXN0SWQ+NmI1ZTA0NzQtMDQyYi00NWQ2LWFkYWMtMDRiMGFmZjlhYjEwPC9yZXF1ZXN0SWQ+CiAgICA8dm9sdW1lU2V0PgogICAgICAgIDxpdGVtPgogICAgICAgICAgICA8dm9sdW1lSWQ+dm9sLTAwMTAwMDAwMDAwMDAwMDAwPC92b2x1bWVJZD4KICAgICAgICAgICAgPHNpemU+MTA8L3NpemU+CiAgICAgICAgICAgIDxzbmFwc2hvdElkLz4KICAgICAgICAgICAgPGF2YWlsYWJpbGl0eVpvbmU+YXAtc291dGhlYXN0LTFhPC9hdmFpbGFiaWxpdHlab25lPgogICAgICAgICAgICA8c3RhdHVzPmF2YWlsYWJsZTwvc3RhdHVzPgogICAgICAgICAgICA8Y3JlYXRlVGltZT4yMDIyLTA1LTAyVDIzOjA5OjMwLjE3MVo8L2NyZWF0ZVRpbWU+CiAgICAgICAgICAgIDxhdHRhY2htZW50U2V0Lz4KICAgICAgICAgICAgPHZvbHVtZVR5cGU+Z3AyPC92b2x1bWVUeXBlPgogICAgICAgICAgICA8aW9wcz4xMDA8L2lvcHM+CiAgICAgICAgICAgIDxlbmNyeXB0ZWQ+ZmFsc2U8L2VuY3J5cHRlZD4KICAgICAgICAgICAgPG11bHRpQXR0YWNoRW5hYmxlZD5mYWxzZTwvbXVsdGlBdHRhY2hFbmFibGVkPgogICAgICAgIDwvaXRlbT4KICAgICAgICA8aXRlbT4KICAgICAgICAgICAgPHZvbHVtZUlkPnZvbC0wMDIwMDAwMDAwMDAwMDAwMDwvdm9sdW1lSWQ+CiAgICAgICAgICAgIDxzaXplPjg8L3NpemU+CiAgICAgICAgICAgIDxzbmFwc2hvdElkLz4KICAgICAgICAgICAgPGF2YWlsYWJpbGl0eVpvbmU+YXAtc291dGhlYXN0LTFhPC9hdmFpbGFiaWxpdHlab25lPgogICAgICAgICAgICA8c3RhdHVzPmF2YWlsYWJsZTwvc3RhdHVzPgogICAgICAgICAgICA8Y3JlYXRlVGltZT4yMDIyLTA1LTExVDA0OjQ1OjQwLjYyN1o8L2NyZWF0ZVRpbWU+CiAgICAgICAgICAgIDxhdHRhY2htZW50U2V0Lz4KICAgICAgICAgICAgPHZvbHVtZVR5cGU+Z3AyPC92b2x1bWVUeXBlPgogICAgICAgICAgICA8aW9wcz4xMDA8L2lvcHM+CiAgICAgICAgICAgIDxlbmNyeXB0ZWQ+ZmFsc2U8L2VuY3J5cHRlZD4KICAgICAgICAgICAgPG11bHRpQXR0YWNoRW5hYmxlZD5mYWxzZTwvbXVsdGlBdHRhY2hFbmFibGVkPgogICAgICAgIDwvaXRlbT4KICAgIDwvdm9sdW1lU2V0Pgo8L0Rlc2NyaWJlVm9sdW1lc1Jlc3BvbnNlPg=="
      }
    }
  },
  {
    "httpRequest": {
      "method": "POST",
      "path": "/",
      "headers": {
        "Authorization": ["^.*SignedHeaders=.*content-type;host;x-amz-date.*$" ]
      },
      "body" : {
        "type" : "PARAMETERS",
        "parameters": {
          "Action": [ "^ListUsers$" ],
          "Version": [ "^2010\\-05\\-08$" ] 
        }
      }
    },
    "httpResponseTemplate": {
      "template": "#set( $joeDate = $!request.headers['X-Amz-Date'][0] ) \n{ 'statusCode': 200, 'headers': { 'Content-Type': [ 'text/xml' ] },  'body': { 'type': 'STRING', 'string': '<ListUsersResponse xmlns=\"https://iam.amazonaws.com/doc/2010-05-08/\"> <ListUsersResult>    <Users>       <member>          <UserId>AID2MAB8DPLSRHEXAMPLE</UserId>          <Path>/division_abc/subdivision_xyz/engineering/</Path>          <UserName>Andrew</UserName>          <Arn>arn:aws:iam::123456789012:user/division_abc/subdivision_xyz/engineering/Andrew</Arn>          <CreateDate>2012-09-05T19:38:48Z</CreateDate>          <PasswordLastUsed>2014-09-08T21:47:36Z</PasswordLastUsed>       </member>       <member>          <UserId>AIDIODR4TAW7CSEXAMPLE</UserId>          <Path>/division_abc/subdivision_xyz/engineering/</Path>          <UserName>Jackie</UserName>          <Arn>arn:aws:iam::123456789012:user/division_abc/subdivision_xyz/engineering/Jackie</Arn>          <CreateDate>2014-04-09T15:43:45Z</CreateDate>          <PasswordLastUsed>$joeDate.substring(0, 4)-$joeDate.substring(4, 6)-$joeDate.substring(6, 11):$joeDate.substring(11, 13):$joeDate.substring(13)</PasswordLastUsed>       </member>    </Users>    <IsTruncated>false</IsTruncated> </ListUsersResult> <ResponseMetadata>    <RequestId>7a62c49f-347e-4fc4-9331-6e8eEXAMPLE</RequestId> </ResponseMetadata> </ListUsersResponse>' } }",
      "templateType": "VELOCITY"
    }
  },
  {
    "httpRequest": {
      "method": "POST",
      "path": "/",
      "headers": {
        "Authorization": ["^.*SignedHeaders=.*content-type;host;x-amz-date.*$" ]
      },
      "body" : {
        "type" : "PARAMETERS",
        "parameters": {
          "Action": [ "^DescribeVpnGateways$" ],
          "Version": [ "^2016\\-11\\-15$" ] 
        }
      }
    },
    "httpResponse": {
      "headers": {
        "content-type": [ "text/xml" ]
      },
      "statusCode": 200,
      "body": {
        "type": "BINARY",
        "base64Bytes": "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPERlc2NyaWJlVnBuR2F0ZXdheXNSZXNwb25zZSB4bWxucz0iaHR0cDovL2VjMi5hbWF6b25hd3MuY29tL2RvYy8yMDE2LTExLTE1LyI+CiAgICA8cmVxdWVzdElkPjEwMDAxMDAwLTEwMDAtMTAwMC0xMDAwLTEwMDAxMDAwMTAwMDwvcmVxdWVzdElkPgogICAgPHZwbkdhdGV3YXlTZXQvPgo8L0Rlc2NyaWJlVnBuR2F0ZXdheXNSZXNwb25zZT4="
      }
    }
  },
  {
    "httpRequest": {
      "method": "POST",
      "path": "/",
      "headers": {
        "Authorization": ["^.*SignedHeaders=.*content-type;host;x-amz-date.*$" ]
      },
      "body" : {
        "type" : "PARAMETERS",
        "parameters": {
          "Action": [ "^DescribeInstances$" ],
          "Version": [ "^2016\\-11\\-15$" ] 
        }
      }
    },
    "httpResponse": {
      "headers": {
        "content-type": [ "text/xml" ]
      },
      "statusCode": 200,
      "body": {
        "type": "BINARY",
        "base64Bytes": ""
      }
    }
  },
  {
    "httpRequest": {
      "method": "POST",
      "path": "/",
      "headers": {
        "Authorization": ["^.*SignedHeaders=accept;content-type;host;x-amz-date;x-amz-target.*$" ],
        "X-Amz-Target": [ "CloudApiService.ListResources" ]
      },
      "body": {
        "type": "JSON",
        "json": {
          "TypeName":"AWS::EC2::VPC"
        },
        "matchType": "ONLY_MATCHING_FIELDS"
      }
    },
    "httpResponse": {
      "headers": {
        "content-type": [ "application/x-amz-json-1.0" ]
      },
      "statusCode": 200,
      "body": {
        "ResourceDescriptions": [
          {
            "Identifier": "vpc-0001", 
            "Properties": "{\"VpcId\":\"vpc-0001\"}"
          },
          {
            "Identifier": "vpc-0002",
            "Properties": "{\"VpcId\":\"vpc-0002\"}"
          },
          {
            "Identifier": "vpc-0003",
            "Properties": "{\"VpcId\":\"vpc-0003\"}"
          },
          {
            "Identifier": "vpc-0004",
            "Properties": "{\"VpcId\":\"vpc-0004\"}"
          },
          {
            "Identifier": "vpc-0005",
            "Properties": "{\"VpcId\":\"vpc-0005\"}"
          }
        ],
        "TypeName":"AWS::EC2::VPC"
      }
    }
  },
  {
    "httpRequest": {
      "method": "POST",
      "path": "/",
      "headers": {
        "Authorization": ["^.*SignedHeaders=content-encoding;content-type;host;x-amz-date;x-amz-target.*$" ],
        "X-Amz-Target": [ "Logs_20140328.GetLogEvents" ]
      },
      "body": {
        "type": "JSON",
        "json": {
          "logGroupName": "LogGroupResourceExample",
          "logStreamName": "test-01",
          "startTime": 1680528971190,
          "limit": 2
        },
        "matchType": "ONLY_MATCHING_FIELDS"
      }
    },
    "httpResponse": {
      "headers": {
        "content-type": [ "application/json" ]
      },
      "statusCode": 200,
      "body": {
        "events": [
          {
            "eventId": "10000000000000000000000000000000000000000000000000000001",
            "ingestionTime": 1680528971832,
            "message": "some rubbish 01",
            "timestamp": 1680528971193
          },
          {
            "eventId": "10000000000000000000000000000000000000000000000000000002",
            "ingestionTime": 1680528972832,
            "message": "some rubbish 02",
            "timestamp": 1680528972193
          }
        ],
        "nextBackwardToken": "b/31132629274945519779805322857203735586714454643391594505",
        "nextForwardToken": "f/31132629323784151764587387538205132201699397759403884544"
      }
    }
  },
  {
    "httpRequest": {
      "method": "POST",
      "path": "/",
      "headers": {
        "Authorization": ["^.*SignedHeaders.*content-type;host;x-amz-date;x-amz-target.*$" ],
        "X-Amz-Target": [ "CloudApiService.GetResource" ]
      },
      "body": {
        "type": "JSON",
        "json": {
          "TypeName":"AWS::EC2::VPC",
          "Identifier": "CloudControlExample"
        },
        "matchType": "ONLY_MATCHING_FIELDS"
      }
    },
    "httpResponse": {
      "headers": {
        "content-type": [ "application/x-amz-json-1.0" ]
      },
      "statusCode": 200,
      "body": {
        "ResourceDescription": {
          "Identifier": "CloudControlExample",
          "Properties": "{\"RetentionInDays\":90,\"LogGroupName\":\"CloudControlExample\",\"Arn\":\"arn:aws:logs:ap-southeast-1:0000000001:log-group:CloudControlExample:*\"}"
        }
      }
    }
  },
  {
    "httpRequest": {
      "method": "POST",
      "path": "/",
      "headers": {
        "Authorization": ["^.*SignedHeaders.*content-type;host;x-amz-date;x-amz-target.*$" ],
        "X-Amz-Target": [ "CloudApiService.GetResource" ]
      },
      "body": {
        "type": "JSON",
        "json": {
          "TypeName":"AWS::S3::Bucket",
          "Identifier": "stackql-trial-bucket-01"
        },
        "matchType": "ONLY_MATCHING_FIELDS"
      }
    },
    "httpResponse": {
      "headers": {
        "content-type": [ "application/x-amz-json-1.0" ]
      },
      "statusCode": 200,
      "body": {
        "ResourceDescription": {
          "Identifier": "stackql-trial-bucket-01",
          "Properties": "{\"PublicAccessBlockConfiguration\":{\"RestrictPublicBuckets\":true,\"BlockPublicPolicy\":true,\"BlockPublicAcls\":true,\"IgnorePublicAcls\":true},\"BucketName\":\"stackql-trial-bucket-01\",\"RegionalDomainName\":\"stackql-trial-bucket-01.s3.ap-southeast-1.amazonaws.com\",\"OwnershipControls\":{\"Rules\":[{\"ObjectOwnership\":\"BucketOwnerEnforced\"}]},\"DomainName\":\"stackql-trial-bucket-01.s3.amazonaws.com\",\"WebsiteURL\":\"http://stackql-trial-bucket-01.s3-website-ap-southeast-1.amazonaws.com\",\"DualStackDomainName\":\"stackql-trial-bucket-01.s3.dualstack.ap-southeast-1.amazonaws.com\",\"Arn\":\"arn:aws:s3:::stackql-trial-bucket-01\",\"Tags\":[{\"Value\":\"first-ever-bucket\",\"Key\":\"sundry\"}]}"
        }
      }
    }
  },
  {
    "httpRequest": {
      "method": "POST",
      "path": "/",
      "headers": {
        "Authorization": ["^.*SignedHeaders.*content-type;host;x-amz-date;x-amz-target.*$" ],
        "X-Amz-Target": [ "CloudApiService.ListResources" ]
      },
      "body": {
        "type": "JSON",
        "json": {
          "TypeName":"AWS::S3::Bucket"
        },
        "matchType": "ONLY_MATCHING_FIELDS"
      }
    },
    "httpResponse": {
      "headers": {
        "content-type": [ "application/x-amz-json-1.0" ]
      },
      "statusCode": 200,
      "body": {
        "ResourceDescriptions": [
          {
            "Identifier": "stackql-registry-artifacts",
            "Properties": "{\"BucketName\":\"stackql-registry-artifacts\"}"
          },
          {
            "Identifier": "stackql-trial-bucket-01",
            "Properties": "{\"BucketName\":\"stackql-trial-bucket-01\"}"
          },
          {
            "Identifier": "stackql-trial-bucket-02",
            "Properties": "{\"BucketName\":\"stackql-trial-bucket-02\"}"
          }
        ]
      }
    }
  },
  {
    "httpRequest": {
      "method": "POST",
      "path": "/",
      "headers": {
        "Authorization": ["^.*SignedHeaders=accept;content-type;host;x-amz-date;x-amz-target.*$" ],
        "X-Amz-Target": [ "CloudApiService.ListResourceRequests" ]
      },
      "body": {
        "type": "JSON",
        "json": {
          "ResourceRequestStatusFilter": {}
        },
        "matchType": "ONLY_MATCHING_FIELDS"
      }
    },
    "httpResponseTemplate": {
      "template": "#set($end = 2)\n#set($rb = $request.body.json)\n#set($rr = $rb.replaceAll('^.*NextToken\\D*(\\d+)?.*$|^.*()$', '$1'))\n#set($rn = $rr)\n#set($maxItems = 8)\n#set($thisCursor = \"#if (${rn})${rn}#{else}0#end\")\n#set($Integer = 0)\n#set($currentCursor = $Integer.parseInt($thisCursor))\n#set($nextCursor = $currentCursor + 1)\n#set($cFinal = ($currentCursor * 1) + $end + 1)\n{ 'statusCode': 200, 'headers': { 'Content-Type': [ 'application/x-amz-json-1.0' ] }, 'body': { #if($currentCursor < $maxItems) \"NextToken\": '$nextCursor', #end  \"ResourceRequestStatusSummaries\": [       #if($currentCursor < $maxItems)  \n#foreach($i in [1..$end])  \n#set($ci = $currentCursor * 1 + $i)\n     {      \"EventTime\": 1660714274.285,      \"Identifier\": \"LogGroupResourceExampleThird$ci\",      \"Operation\": \"CREATE\",      \"OperationStatus\": \"SUCCESS\",      \"RequestToken\": \"5ae5ae5a-0001-0001-001a-$ci\",      \"TypeName\": \"AWS::Logs::LogGroup\"    },    {      \"EventTime\": 1660709766.092,      \"Identifier\": \"LogGroupResourceExampleSecond$ci\",      \"Operation\": \"CREATE\",      \"OperationStatus\": \"SUCCESS\",      \"RequestToken\": \"5ae5ae5a-0002-0001-001a-$ci\",      \"TypeName\": \"AWS::Logs::LogGroup\"    },    {      \"EventTime\": 1660266055.925,      \"Identifier\": \"CloudControlExample$ci\",      \"Operation\": \"CREATE\",      \"OperationStatus\": \"SUCCESS\",      \"RequestToken\": \"5ae5ae5a-0003-0001-001a-$ci\",      \"TypeName\": \"AWS::Logs::LogGroup\"    },    {      \"ErrorCode\": \"InvalidRequest\",      \"EventTime\": 1660709730.739,      \"OperationStatus\": \"FAILED\",      \"RequestToken\": \"5ae5ae5a-0004-0001-001a-$ci\",      \"StatusMessage\": \"Model validation failed (#/RetentionInDays: #: only 1 subschema matches out of 2\n#/RetentionInDays: failed validation constraint for keyword [enum])\",      \"TypeName\": \"AWS::Logs::LogGroup\"    }, #end              {      \"EventTime\": 1660709644.835,      \"Identifier\": \"LogGroupResourceExample$cFinal\",      \"Operation\": \"CREATE\",      \"OperationStatus\": \"SUCCESS\",      \"RequestToken\": \"5ae5ae5a-0005-0001-001a-$cFinal\",      \"TypeName\": \"AWS::Logs::LogGroup\"    }     #{else}#end      ], \"rb\": $rb          }        }      }    }  }  } }",
      "templateType": "VELOCITY"
    }
  },
  {
    "httpRequest": {
      "method": "POST",
      "path": "/",
      "headers": {
        "Authorization": ["^.*SignedHeaders=.*content-type;host;x-amz-date;x-amz-target.*$" ],
        "X-Amz-Target": [ "CloudApiService.CreateResource" ]
      },
      "body": {
        "type": "JSON",
        "json": {
          "TypeName": "AWS::Logs::LogGroup",
          "DesiredState": "{ \"LogGroupName\": \"LogGroupResourceExampleThird\", \"RetentionInDays\":90}"
        },
        "matchType": "ONLY_MATCHING_FIELDS"
      }
    },
    "httpResponse": {
      "headers": {
        "content-type": [ "application/x-amz-json-1.0" ]
      },
      "statusCode": 200,
      "body": {
        "ProgressEvent":{
          "EventTime": 1.6607142738E9,
          "Identifier": "LogGroupResourceExampleThird",
          "Operation": "CREATE",
          "OperationStatus": "IN_PROGRESS",
          "RequestToken": "5ae9f962-8720-4a21-992e-1598cf5db273",
          "TypeName": "AWS::Logs::LogGroup"
        }
      }
    }
  },
  {
    "httpRequest": {
      "method": "POST",
      "path": "/",
      "headers": {
        "Authorization": ["^.*SignedHeaders=.*content-type;host;x-amz-date;x-amz-target.*$" ],
        "X-Amz-Target": [ "CloudApiService.UpdateResource" ]
      },
      "body": {
        "type": "JSON",
        "json": {
          "TypeName": "AWS::Logs::LogGroup",
          "Identifier": "LogGroupResourceExampleThird",
          "PatchDocument": "[{\"op\":\"replace\",\"path\":\"/RetentionInDays\",\"value\":180}]"
        },
        "matchType": "ONLY_MATCHING_FIELDS"
      }
    },
    "httpResponse": {
      "headers": {
        "content-type": [ "application/x-amz-json-1.0" ]
      },
      "statusCode": 200,
      "body": {
        "ProgressEvent":{
          "EventTime": 1.6607142738E9,
          "Identifier": "LogGroupResourceExampleThird",
          "Operation": "UPDATE",
          "OperationStatus": "IN_PROGRESS",
          "RequestToken": "5ae9f962-8720-4a21-992e-1598cf5db273",
          "TypeName": "AWS::Logs::LogGroup"
        }
      }
    }
  },
  {
    "httpRequest": {
      "method": "POST",
      "path": "/",
      "headers": {
        "Authorization": ["^.*SignedHeaders=.*content-type;host;x-amz-date;x-amz-target.*$" ],
        "X-Amz-Target": [ "CloudApiService.CreateResource" ]
      },
      "body": {
        "type": "JSON",
        "json": {
          "TypeName": "AWS::Logs::LogGroup",
          "DesiredState": "{\"LogGroupName\": \"LogGroupResourceExample3\",\"RetentionInDays\":90}" 
        },
        "matchType": "ONLY_MATCHING_FIELDS"
      }
    },
    "httpResponse": {
      "headers": {
        "content-type": [ "application/x-amz-json-1.0" ]
      },
      "statusCode": 200,
      "body": {
        "ProgressEvent":{
          "EventTime": 1.6607142738E9,
          "Identifier": "LogGroupResourceExample3",
          "Operation": "CREATE",
          "OperationStatus": "IN_PROGRESS",
          "RequestToken": "10000001-0000-0000-0000-000000000001",
          "TypeName": "AWS::Logs::LogGroup"
        }
      }
    }
  },
  {
    "httpRequest": {
      "method": "POST",
      "path": "/",
      "headers": {
        "Authorization": ["^.*SignedHeaders=.*content-type;host;x-amz-date;x-amz-target.*$" ],
        "X-Amz-Target": [ "CloudApiService.DeleteResource" ]
      },
      "body": {
        "type": "JSON",
        "json": {
          "TypeName": "AWS::Logs::LogGroup",
          "Identifier": "LogGroupResourceExampleThird" 
        },
        "matchType": "ONLY_MATCHING_FIELDS"
      }
    },
    "httpResponse": {
      "headers": {
        "content-type": [ "application/x-amz-json-1.0" ]
      },
      "statusCode": 200,
      "body": {
        "ProgressEvent":{
          "EventTime": 1.6607142738E9,
          "Identifier": "LogGroupResourceExampleThird",
          "Operation": "DELETE",
          "OperationStatus": "IN_PROGRESS",
          "RequestToken": "5ae9f962-8720-4a21-992e-1598cf5db273",
          "TypeName": "AWS::Logs::LogGroup"
        }
      }
    }
  },
  {
    "httpRequest": {
      "method": "POST",
      "path": "/",
      "headers": {
        "Authorization": ["^.*SignedHeaders=.*content-type;host;x-amz-date;x-amz-target.*$" ],
        "X-Amz-Target": [ "CloudApiService.CancelResourceRequest" ]
      },
      "body": {
        "type": "JSON",
        "json": {
          "RequestToken": "abc001" 
        },
        "matchType": "ONLY_MATCHING_FIELDS"
      }
    },
    "httpResponse": {
      "headers": {
        "content-type": [ "application/x-amz-json-1.0" ]
      },
      "statusCode": 200,
      "body": {
        "ProgressEvent":{
          "EventTime": 1.6607142738E9,
          "Identifier": "LogGroupResourceExampleThird",
          "Operation": "DELETE",
          "OperationStatus": "IN_PROGRESS",
          "RequestToken": "5ae9f962-8720-4a21-992e-1598cf5db273",
          "TypeName": "AWS::Logs::LogGroup"
        }
      }
    }
  },
  {
    "httpRequest": {
      "method": "POST",
      "path": "/",
      "headers": {
        "Authorization": ["^.*SignedHeaders=.*content-type;host;x-amz-date;x-amz-target.*$" ],
        "X-Amz-Target": [ "CloudApiService.GetResourceRequestStatus" ]
      },
      "body": {
        "type": "JSON",
        "json": {
          "RequestToken": "abc001" 
        },
        "matchType": "ONLY_MATCHING_FIELDS"
      }
    },
    "httpResponse": {
      "headers": {
        "content-type": [ "application/x-amz-json-1.0" ]
      },
      "statusCode": 200,
      "body": {
        "ProgressEvent":{
          "EventTime": 1.6607142738E9,
          "Identifier": "LogGroupResourceExampleThird",
          "Operation": "DELETE",
          "OperationStatus": "IN_PROGRESS",
          "RequestToken": "abc001",
          "TypeName": "AWS::Logs::LogGroup"
        }
      }
    }
  },
  {
    "httpRequest": {
      "method": "POST",
      "path": "/",
      "headers": {
        "Authorization": ["^.*SignedHeaders=.*content-type;host;x-amz-date.*$" ]
      },
      "body" : {
        "type" : "PARAMETERS",
        "parameters": {
          "Action": [ "^CreateVolume$" ],
          "Version": [ "^2016\\-11\\-15$" ],
          "Size": ["^10$"],
          "TagSpecification.1.ResourceType": [ "volume" ],
          "TagSpecification.1.Tag.1.Key": [ "stack" ],
          "TagSpecification.1.Tag.1.Value": [ "production" ],
          "TagSpecification.1.Tag.2.Key": [ "name" ],
          "TagSpecification.1.Tag.2.Value": [ "multi-tag-volume" ]
        }
      }
    },
    "httpResponse": {
      "headers": {
        "content-type": [ "text/xml" ]
      },
      "statusCode": 200,
      "body": {
        "type": "BINARY",
        "base64Bytes": "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPENyZWF0ZVZvbHVtZVJlc3BvbnNlIHhtbG5zPSJodHRwOi8vZWMyLmFtYXpvbmF3cy5jb20vZG9jLzIwMTYtMTEtMTUvIj4KICA8cmVxdWVzdElkPjFhMGZkODUyLWUwMWItNGY5Ni04Y2Y2LTRhZTRhZWVkMzdiMTwvcmVxdWVzdElkPgogIDx2b2x1bWVJZD52b2wtMDMyNjg5NWJlZDBmMzhlYTg8L3ZvbHVtZUlkPgogIDxzaXplPjEwPC9zaXplPgogIDxzbmFwc2hvdElkPjwvc25hcHNob3RJZD4KICA8YXZhaWxhYmlsaXR5Wm9uZT5hcC1zb3V0aGVhc3QtMWE8L2F2YWlsYWJpbGl0eVpvbmU+CiAgPHN0YXR1cz5jcmVhdGluZzwvc3RhdHVzPgogIDxjcmVhdGVUaW1lPjIwMjItMDYtMjBUMTM6MTE6MjMuMDAwWjwvY3JlYXRlVGltZT4KICA8dm9sdW1lVHlwZT5ncDI8L3ZvbHVtZVR5cGU+CiAgPGlvcHM+MTAwPC9pb3BzPgogIDxlbmNyeXB0ZWQ+ZmFsc2U8L2VuY3J5cHRlZD4KICA8dGFnU2V0Lz4KICA8bXVsdGlBdHRhY2hFbmFibGVkPmZhbHNlPC9tdWx0aUF0dGFjaEVuYWJsZWQ+CjwvQ3JlYXRlVm9sdW1lUmVzcG9uc2U+"
      }
    }
  },
  {
    "httpRequest": {
      "method": "POST",
      "path": "/",
      "headers": {
        "Authorization": ["^.*SignedHeaders=.*content-type;host;x-amz-date.*$" ]
      },
      "body" : {
        "type" : "PARAMETERS",
        "parameters": {
          "Action": [ "^ModifyVolume$" ],
          "Version": [ "^2016\\-11\\-15$" ],
          "Size": ["^12$"],
          "VolumeId": [ "vol-000000000000001" ]
        }
      }
    },
    "httpResponse": {
      "headers": {
        "content-type": [ "text/xml" ]
      },
      "statusCode": 200,
      "body": {
        "type": "BINARY",
        "base64Bytes": "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPE1vZGlmeVZvbHVtZVJlc3BvbnNlIHhtbG5zPSJodHRwOi8vZWMyLmFtYXpvbmF3cy5jb20vZG9jLzIwMTYtMTEtMTUvIj4KICAgIDxyZXF1ZXN0SWQ+MDAwMTAwMDEtMDAwMS0wMDAxLTAwMDEtMDAwMTAwMDEwMDAxPC9yZXF1ZXN0SWQ+CiAgICA8dm9sdW1lTW9kaWZpY2F0aW9uPgogICAgICAgIDxtb2RpZmljYXRpb25TdGF0ZT5tb2RpZnlpbmc8L21vZGlmaWNhdGlvblN0YXRlPgogICAgICAgIDxvcmlnaW5hbElvcHM+MTAwPC9vcmlnaW5hbElvcHM+CiAgICAgICAgPG9yaWdpbmFsTXVsdGlBdHRhY2hFbmFibGVkPmZhbHNlPC9vcmlnaW5hbE11bHRpQXR0YWNoRW5hYmxlZD4KICAgICAgICA8b3JpZ2luYWxTaXplPjExPC9vcmlnaW5hbFNpemU+CiAgICAgICAgPG9yaWdpbmFsVm9sdW1lVHlwZT5ncDI8L29yaWdpbmFsVm9sdW1lVHlwZT4KICAgICAgICA8cHJvZ3Jlc3M+MDwvcHJvZ3Jlc3M+CiAgICAgICAgPHN0YXJ0VGltZT4yMDIyLTA4LTI0VDIyOjAxOjM3LjAwMFo8L3N0YXJ0VGltZT4KICAgICAgICA8dGFyZ2V0SW9wcz4xMDA8L3RhcmdldElvcHM+CiAgICAgICAgPHRhcmdldE11bHRpQXR0YWNoRW5hYmxlZD5mYWxzZTwvdGFyZ2V0TXVsdGlBdHRhY2hFbmFibGVkPgogICAgICAgIDx0YXJnZXRTaXplPjEyPC90YXJnZXRTaXplPgogICAgICAgIDx0YXJnZXRWb2x1bWVUeXBlPmdwMjwvdGFyZ2V0Vm9sdW1lVHlwZT4KICAgICAgICA8dm9sdW1lSWQ+dm9sLTAwMDAwMDAwMDAwMDAwMTwvdm9sdW1lSWQ+CiAgICA8L3ZvbHVtZU1vZGlmaWNhdGlvbj4KPC9Nb2RpZnlWb2x1bWVSZXNwb25zZT4="
      }
    }
  }
]