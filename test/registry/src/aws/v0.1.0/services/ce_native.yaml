openapi: 3.0.0
info:
  version: '2017-10-25'
  x-release: v4
  title: AWS Cost Explorer Service
  description: 'You can use the Cost Explorer API to programmatically query your cost
    and usage data. You can query for aggregated data such as total monthly costs
    or total daily usage. You can also query for granular data. This might include
    the number of daily write operations for Amazon DynamoDB database tables in your
    production environment.  Service Endpoint The Cost Explorer API provides the following
    endpoint:    https://ce.us-east-1.amazonaws.com    For information about the costs
    that are associated with the Cost Explorer API, see Amazon Web Services Cost Management
    Pricing.'
  x-logo:
    url: https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png
    backgroundColor: '#FFFFFF'
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: ce
  x-aws-signingName: ce
  x-origin:
  - contentType: application/json
    url: 
      https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/ce-2017-10-25.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/ce/
servers:
- url: https://ce.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
  description: The AWS Cost Explorer multi-region endpoint
x-hasEquivalentPaths: true
paths:
  /?__X-Amz-Target=AWSInsightsIndexService.CreateAnomalyMonitor:
    post:
      operationId: CreateAnomalyMonitor
      description: "Creates a new cost anomaly detection monitor with the requested type and monitor specification. "
      responses:
        "200":
          description: Success
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/CreateAnomalyMonitorResponse"
        "480":
          description: LimitExceededException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAnomalyMonitorRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: false
          schema:
            default: AWSInsightsIndexService.CreateAnomalyMonitor
            type: string
            enum:
              - AWSInsightsIndexService.CreateAnomalyMonitor
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /?__X-Amz-Target=AWSInsightsIndexService.CreateAnomalySubscription:
    post:
      operationId: CreateAnomalySubscription
      description: "Adds an alert subscription to a cost anomaly detection monitor. You can use each subscription to define subscribers with email or SNS notifications. Email subscribers can set an absolute or percentage threshold and a time frequency for receiving notifications. "
      responses:
        "200":
          description: Success
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/CreateAnomalySubscriptionResponse"
        "480":
          description: UnknownMonitorException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/UnknownMonitorException"
        "481":
          description: LimitExceededException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAnomalySubscriptionRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: false
          schema:
            type: string
            default: AWSInsightsIndexService.CreateAnomalySubscription
            enum:
              - AWSInsightsIndexService.CreateAnomalySubscription
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /?__X-Amz-Target=AWSInsightsIndexService.CreateCostCategoryDefinition:
    post:
      operationId: CreateCostCategoryDefinition
      description: Creates a new Cost Category with the requested name and rules.
      responses:
        "200":
          description: Success
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/CreateCostCategoryDefinitionResponse"
        "480":
          description: ServiceQuotaExceededException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "481":
          description: LimitExceededException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCostCategoryDefinitionRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: false
          schema:
            type: string
            default: AWSInsightsIndexService.CreateCostCategoryDefinition
            enum:
              - AWSInsightsIndexService.CreateCostCategoryDefinition
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /?__X-Amz-Target=AWSInsightsIndexService.DeleteAnomalyMonitor:
    post:
      operationId: DeleteAnomalyMonitor
      description: "Deletes a cost anomaly monitor. "
      responses:
        "200":
          description: Success
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/DeleteAnomalyMonitorResponse"
        "480":
          description: LimitExceededException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: UnknownMonitorException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/UnknownMonitorException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteAnomalyMonitorRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: false
          schema:
            type: string
            default: AWSInsightsIndexService.DeleteAnomalyMonitor
            enum:
              - AWSInsightsIndexService.DeleteAnomalyMonitor
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /?__X-Amz-Target=AWSInsightsIndexService.DeleteAnomalySubscription:
    post:
      operationId: DeleteAnomalySubscription
      description: "Deletes a cost anomaly subscription. "
      responses:
        "200":
          description: Success
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/DeleteAnomalySubscriptionResponse"
        "480":
          description: LimitExceededException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: UnknownSubscriptionException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/UnknownSubscriptionException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteAnomalySubscriptionRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: false
          schema:
            type: string
            default: AWSInsightsIndexService.DeleteAnomalySubscription
            enum:
              - AWSInsightsIndexService.DeleteAnomalySubscription
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /?__X-Amz-Target=AWSInsightsIndexService.DeleteCostCategoryDefinition:
    post:
      operationId: DeleteCostCategoryDefinition
      description: Deletes a Cost Category. Expenses from this month going forward will no longer be categorized with this Cost Category.
      responses:
        "200":
          description: Success
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/DeleteCostCategoryDefinitionResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: LimitExceededException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteCostCategoryDefinitionRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: false
          schema:
            type: string
            default: AWSInsightsIndexService.DeleteCostCategoryDefinition
            enum:
              - AWSInsightsIndexService.DeleteCostCategoryDefinition
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /?__X-Amz-Target=AWSInsightsIndexService.DescribeCostCategoryDefinition:
    post:
      operationId: DescribeCostCategoryDefinition
      description: <p>Returns the name, Amazon Resource Name (ARN), rules, definition, and effective dates of a Cost Category that's defined in the account.</p> <p>You have the option to use <code>EffectiveOn</code> to return a Cost Category that's active on a specific date. If there's no <code>EffectiveOn</code> specified, you see a Cost Category that's effective on the current date. If Cost Category is still effective, <code>EffectiveEnd</code> is omitted in the response. </p>
      responses:
        "200":
          description: Success
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/DescribeCostCategoryDefinitionResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: LimitExceededException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeCostCategoryDefinitionRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: false
          schema:
            type: string
            default: AWSInsightsIndexService.DescribeCostCategoryDefinition
            enum:
              - AWSInsightsIndexService.DescribeCostCategoryDefinition
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /?__X-Amz-Target=AWSInsightsIndexService.GetAnomalies:
    post:
      operationId: GetAnomalies
      description: Retrieves all of the cost anomalies detected on your account during the time period that's specified by the <code>DateInterval</code> object. Anomalies are available for up to 90 days.
      responses:
        "200":
          description: Success
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/GetAnomaliesResponse"
        "480":
          description: LimitExceededException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: InvalidNextTokenException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetAnomaliesRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: false
          schema:
            type: string
            default: AWSInsightsIndexService.GetAnomalies
            enum:
              - AWSInsightsIndexService.GetAnomalies
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /?__X-Amz-Target=AWSInsightsIndexService.GetAnomalyMonitors:
    post:
      operationId: GetAnomalyMonitors
      description: "Retrieves the cost anomaly monitor definitions for your account. You can filter using a list of cost anomaly monitor Amazon Resource Names (ARNs). "
      responses:
        "200":
          description: Success
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/GetAnomalyMonitorsResponse"
        "480":
          description: LimitExceededException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: UnknownMonitorException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/UnknownMonitorException"
        "482":
          description: InvalidNextTokenException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetAnomalyMonitorsRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: false
          schema:
            type: string
            default: AWSInsightsIndexService.GetAnomalyMonitors
            enum:
              - AWSInsightsIndexService.GetAnomalyMonitors
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /?__X-Amz-Target=AWSInsightsIndexService.GetAnomalySubscriptions:
    post:
      operationId: GetAnomalySubscriptions
      description: "Retrieves the cost anomaly subscription objects for your account. You can filter using a list of cost anomaly monitor Amazon Resource Names (ARNs). "
      responses:
        "200":
          description: Success
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/GetAnomalySubscriptionsResponse"
        "480":
          description: LimitExceededException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: UnknownSubscriptionException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/UnknownSubscriptionException"
        "482":
          description: InvalidNextTokenException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetAnomalySubscriptionsRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: false
          schema:
            type: string
            default: AWSInsightsIndexService.GetAnomalyMonitors
            enum:
              - AWSInsightsIndexService.GetAnomalySubscriptions
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /?__X-Amz-Target=AWSInsightsIndexService.GetCostAndUsage:
    post:
      operationId: GetCostAndUsage
      description: <p>Retrieves cost and usage metrics for your account. You can specify which cost and usage-related metric that you want the request to return. For example, you can specify <code>BlendedCosts</code> or <code>UsageQuantity</code>. You can also filter and group your data by various dimensions, such as <code>SERVICE</code> or <code>AZ</code>, in a specific time range. For a complete list of valid dimensions, see the <a href="https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_GetDimensionValues.html">GetDimensionValues</a> operation. Management account in an organization in Organizations have access to all member accounts.</p> <p>For information about filter limitations, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/billing-limits.html">Quotas and restrictions</a> in the <i>Billing and Cost Management User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/GetCostAndUsageResponse"
        "480":
          description: LimitExceededException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: BillExpirationException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/BillExpirationException"
        "482":
          description: DataUnavailableException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/DataUnavailableException"
        "483":
          description: InvalidNextTokenException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "484":
          description: RequestChangedException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/RequestChangedException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetCostAndUsageRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: false
          schema:
            type: string
            default: AWSInsightsIndexService.GetCostAndUsage
            enum:
              - AWSInsightsIndexService.GetCostAndUsage
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /?__X-Amz-Target=AWSInsightsIndexService.GetCostAndUsageWithResources:
    post:
      operationId: GetCostAndUsageWithResources
      description: <p>Retrieves cost and usage metrics with resources for your account. You can specify which cost and usage-related metric, such as <code>BlendedCosts</code> or <code>UsageQuantity</code>, that you want the request to return. You can also filter and group your data by various dimensions, such as <code>SERVICE</code> or <code>AZ</code>, in a specific time range. For a complete list of valid dimensions, see the <a href="https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_GetDimensionValues.html">GetDimensionValues</a> operation. Management account in an organization in Organizations have access to all member accounts. This API is currently available for the Amazon Elastic Compute Cloud â€“ Compute service only.</p> <note> <p>This is an opt-in only feature. You can enable this feature from the Cost Explorer Settings page. For information about how to access the Settings page, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/ce-access.html">Controlling Access for Cost Explorer</a> in the <i>Billing and Cost Management User Guide</i>.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/GetCostAndUsageWithResourcesResponse"
        "480":
          description: DataUnavailableException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/DataUnavailableException"
        "481":
          description: LimitExceededException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "482":
          description: BillExpirationException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/BillExpirationException"
        "483":
          description: InvalidNextTokenException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "484":
          description: RequestChangedException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/RequestChangedException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetCostAndUsageWithResourcesRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: false
          schema:
            type: string
            default: AWSInsightsIndexService.GetCostAndUsageWithResources
            enum:
              - AWSInsightsIndexService.GetCostAndUsageWithResources
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /?__X-Amz-Target=AWSInsightsIndexService.GetCostCategories:
    post:
      operationId: GetCostCategories
      description: <p>Retrieves an array of Cost Category names and values incurred cost.</p> <note> <p>If some Cost Category names and values are not associated with any cost, they will not be returned by this API.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/GetCostCategoriesResponse"
        "480":
          description: LimitExceededException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: BillExpirationException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/BillExpirationException"
        "482":
          description: DataUnavailableException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/DataUnavailableException"
        "483":
          description: InvalidNextTokenException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "484":
          description: RequestChangedException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/RequestChangedException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetCostCategoriesRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: false
          schema:
            type: string
            default: AWSInsightsIndexService.GetCostCategories
            enum:
              - AWSInsightsIndexService.GetCostCategories
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /?__X-Amz-Target=AWSInsightsIndexService.GetCostForecast:
    post:
      operationId: GetCostForecast
      description: "Retrieves a forecast for how much Amazon Web Services predicts that you will spend over the forecast time period that you select, based on your past costs. "
      responses:
        "200":
          description: Success
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/GetCostForecastResponse"
        "480":
          description: LimitExceededException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: DataUnavailableException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/DataUnavailableException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetCostForecastRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: false
          schema:
            type: string
            default: AWSInsightsIndexService.GetCostForecast
            enum:
              - AWSInsightsIndexService.GetCostForecast
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /?__X-Amz-Target=AWSInsightsIndexService.GetDimensionValues:
    post:
      operationId: GetDimensionValues
      description: "Retrieves all available filter values for a specified filter over a period of time. You can search the dimension values for an arbitrary string. "
      responses:
        "200":
          description: Success
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/GetDimensionValuesResponse"
        "480":
          description: LimitExceededException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: BillExpirationException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/BillExpirationException"
        "482":
          description: DataUnavailableException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/DataUnavailableException"
        "483":
          description: InvalidNextTokenException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "484":
          description: RequestChangedException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/RequestChangedException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetDimensionValuesRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: false
          schema:
            type: string
            default: AWSInsightsIndexService.GetDimensionValues
            enum:
              - AWSInsightsIndexService.GetDimensionValues
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /?__X-Amz-Target=AWSInsightsIndexService.GetReservationCoverage:
    post:
      operationId: GetReservationCoverage
      description: <p>Retrieves the reservation coverage for your account, which you can use to see how much of your Amazon Elastic Compute Cloud, Amazon ElastiCache, Amazon Relational Database Service, or Amazon Redshift usage is covered by a reservation. An organization's management account can see the coverage of the associated member accounts. This supports dimensions, Cost Categories, and nested expressions. For any time period, you can filter data about reservation usage by the following dimensions:</p> <ul> <li> <p>AZ</p> </li> <li> <p>CACHE_ENGINE</p> </li> <li> <p>DATABASE_ENGINE</p> </li> <li> <p>DEPLOYMENT_OPTION</p> </li> <li> <p>INSTANCE_TYPE</p> </li> <li> <p>LINKED_ACCOUNT</p> </li> <li> <p>OPERATING_SYSTEM</p> </li> <li> <p>PLATFORM</p> </li> <li> <p>REGION</p> </li> <li> <p>SERVICE</p> </li> <li> <p>TAG</p> </li> <li> <p>TENANCY</p> </li> </ul> <p>To determine valid values for a dimension, use the <code>GetDimensionValues</code> operation. </p>
      responses:
        "200":
          description: Success
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/GetReservationCoverageResponse"
        "480":
          description: LimitExceededException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: DataUnavailableException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/DataUnavailableException"
        "482":
          description: InvalidNextTokenException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetReservationCoverageRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: false
          schema:
            type: string
            default: AWSInsightsIndexService.GetReservationCoverage
            enum:
              - AWSInsightsIndexService.GetReservationCoverage
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /?__X-Amz-Target=AWSInsightsIndexService.GetReservationPurchaseRecommendation:
    post:
      operationId: GetReservationPurchaseRecommendation
      description: <p>Gets recommendations for reservation purchases. These recommendations might help you to reduce your costs. Reservations provide a discounted hourly rate (up to 75%) compared to On-Demand pricing.</p> <p>Amazon Web Services generates your recommendations by identifying your On-Demand usage during a specific time period and collecting your usage into categories that are eligible for a reservation. After Amazon Web Services has these categories, it simulates every combination of reservations in each category of usage to identify the best number of each type of Reserved Instance (RI) to purchase to maximize your estimated savings. </p> <p>For example, Amazon Web Services automatically aggregates your Amazon EC2 Linux, shared tenancy, and c4 family usage in the US West (Oregon) Region and recommends that you buy size-flexible regional reservations to apply to the c4 family usage. Amazon Web Services recommends the smallest size instance in an instance family. This makes it easier to purchase a size-flexible Reserved Instance (RI). Amazon Web Services also shows the equal number of normalized units. This way, you can purchase any instance size that you want. For this example, your RI recommendation is for <code>c4.large</code> because that is the smallest size instance in the c4 instance family.</p>
      responses:
        "200":
          description: Success
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/GetReservationPurchaseRecommendationResponse"
        "480":
          description: LimitExceededException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: DataUnavailableException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/DataUnavailableException"
        "482":
          description: InvalidNextTokenException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetReservationPurchaseRecommendationRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: false
          schema:
            type: string
            default: AWSInsightsIndexService.GetReservationPurchaseRecommendation
            enum:
              - AWSInsightsIndexService.GetReservationPurchaseRecommendation
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /?__X-Amz-Target=AWSInsightsIndexService.GetReservationUtilization:
    post:
      operationId: GetReservationUtilization
      description: "Retrieves the reservation utilization for your account. Management account in an organization have access to member accounts. You can filter data by dimensions in a time period. You can use <code>GetDimensionValues</code> to determine the possible dimension values. Currently, you can group only by <code>SUBSCRIPTION_ID</code>. "
      responses:
        "200":
          description: Success
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/GetReservationUtilizationResponse"
        "480":
          description: LimitExceededException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: DataUnavailableException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/DataUnavailableException"
        "482":
          description: InvalidNextTokenException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetReservationUtilizationRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: false
          schema:
            type: string
            default: AWSInsightsIndexService.GetReservationUtilization
            enum:
              - AWSInsightsIndexService.GetReservationUtilization
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /?__X-Amz-Target=AWSInsightsIndexService.GetRightsizingRecommendation:
    post:
      operationId: GetRightsizingRecommendation
      description: <p>Creates recommendations that help you save cost by identifying idle and underutilized Amazon EC2 instances.</p> <p>Recommendations are generated to either downsize or terminate instances, along with providing savings detail and metrics. For more information about calculation and function, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/ce-rightsizing.html">Optimizing Your Cost with Rightsizing Recommendations</a> in the <i>Billing and Cost Management User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/GetRightsizingRecommendationResponse"
        "480":
          description: LimitExceededException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: InvalidNextTokenException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetRightsizingRecommendationRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: false
          schema:
            type: string
            default: AWSInsightsIndexService.GetRightsizingRecommendation
            enum:
              - AWSInsightsIndexService.GetRightsizingRecommendation
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /?__X-Amz-Target=AWSInsightsIndexService.GetSavingsPlansCoverage:
    post:
      operationId: GetSavingsPlansCoverage
      description: <p>Retrieves the Savings Plans covered for your account. This enables you to see how much of your cost is covered by a Savings Plan. An organizations management account can see the coverage of the associated member accounts. This supports dimensions, Cost Categories, and nested expressions. For any time period, you can filter data for Savings Plans usage with the following dimensions:</p> <ul> <li> <p> <code>LINKED_ACCOUNT</code> </p> </li> <li> <p> <code>REGION</code> </p> </li> <li> <p> <code>SERVICE</code> </p> </li> <li> <p> <code>INSTANCE_FAMILY</code> </p> </li> </ul> <p>To determine valid values for a dimension, use the <code>GetDimensionValues</code> operation.</p>
      responses:
        "200":
          description: Success
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/GetSavingsPlansCoverageResponse"
        "480":
          description: LimitExceededException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: DataUnavailableException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/DataUnavailableException"
        "482":
          description: InvalidNextTokenException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetSavingsPlansCoverageRequest"
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: false
          schema:
            type: string
            default: AWSInsightsIndexService.GetSavingsPlansCoverage
            enum:
              - AWSInsightsIndexService.GetSavingsPlansCoverage
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /?__X-Amz-Target=AWSInsightsIndexService.GetSavingsPlansPurchaseRecommendation:
    post:
      operationId: GetSavingsPlansPurchaseRecommendation
      description: Retrieves the Savings Plans recommendations for your account. First use <code>StartSavingsPlansPurchaseRecommendationGeneration</code> to generate a new set of recommendations, and then use <code>GetSavingsPlansPurchaseRecommendation</code> to retrieve them.
      responses:
        "200":
          description: Success
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/GetSavingsPlansPurchaseRecommendationResponse"
        "480":
          description: LimitExceededException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: InvalidNextTokenException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetSavingsPlansPurchaseRecommendationRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: false
          schema:
            type: string
            default: AWSInsightsIndexService.GetSavingsPlansPurchaseRecommendation
            enum:
              - AWSInsightsIndexService.GetSavingsPlansPurchaseRecommendation
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /?__X-Amz-Target=AWSInsightsIndexService.GetSavingsPlansUtilization:
    post:
      operationId: GetSavingsPlansUtilization
      description: <p>Retrieves the Savings Plans utilization for your account across date ranges with daily or monthly granularity. Management account in an organization have access to member accounts. You can use <code>GetDimensionValues</code> in <code>SAVINGS_PLANS</code> to determine the possible dimension values.</p> <note> <p>You can't group by any dimension values for <code>GetSavingsPlansUtilization</code>.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/GetSavingsPlansUtilizationResponse"
        "480":
          description: LimitExceededException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: DataUnavailableException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/DataUnavailableException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetSavingsPlansUtilizationRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: false
          schema:
            type: string
            default: AWSInsightsIndexService.GetSavingsPlansUtilization
            enum:
              - AWSInsightsIndexService.GetSavingsPlansUtilization
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /?__X-Amz-Target=AWSInsightsIndexService.GetSavingsPlansUtilizationDetails:
    post:
      operationId: GetSavingsPlansUtilizationDetails
      description: <p>Retrieves attribute data along with aggregate utilization and savings data for a given time period. This doesn't support granular or grouped data (daily/monthly) in response. You can't retrieve data by dates in a single response similar to <code>GetSavingsPlanUtilization</code>, but you have the option to make multiple calls to <code>GetSavingsPlanUtilizationDetails</code> by providing individual dates. You can use <code>GetDimensionValues</code> in <code>SAVINGS_PLANS</code> to determine the possible dimension values.</p> <note> <p> <code>GetSavingsPlanUtilizationDetails</code> internally groups data by <code>SavingsPlansArn</code>.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/GetSavingsPlansUtilizationDetailsResponse"
        "480":
          description: LimitExceededException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: DataUnavailableException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/DataUnavailableException"
        "482":
          description: InvalidNextTokenException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetSavingsPlansUtilizationDetailsRequest"
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: false
          schema:
            type: string
            default: AWSInsightsIndexService.GetSavingsPlansUtilizationDetails
            enum:
              - AWSInsightsIndexService.GetSavingsPlansUtilizationDetails
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /?__X-Amz-Target=AWSInsightsIndexService.GetTags:
    post:
      operationId: GetTags
      description: "Queries for available tag keys and tag values for a specified period. You can search the tag values for an arbitrary string. "
      responses:
        "200":
          description: Success
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/GetTagsResponse"
        "480":
          description: LimitExceededException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: BillExpirationException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/BillExpirationException"
        "482":
          description: DataUnavailableException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/DataUnavailableException"
        "483":
          description: InvalidNextTokenException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "484":
          description: RequestChangedException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/RequestChangedException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetTagsRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: false
          schema:
            type: string
            default: AWSInsightsIndexService.GetTags
            enum:
              - AWSInsightsIndexService.GetTags
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /?__X-Amz-Target=AWSInsightsIndexService.GetUsageForecast:
    post:
      operationId: GetUsageForecast
      description: "Retrieves a forecast for how much Amazon Web Services predicts that you will use over the forecast time period that you select, based on your past usage. "
      responses:
        "200":
          description: Success
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/GetUsageForecastResponse"
        "480":
          description: LimitExceededException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: DataUnavailableException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/DataUnavailableException"
        "482":
          description: UnresolvableUsageUnitException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/UnresolvableUsageUnitException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetUsageForecastRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: false
          schema:
            type: string
            default: AWSInsightsIndexService.GetUsageForecast
            enum:
              - AWSInsightsIndexService.GetUsageForecast
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /?__X-Amz-Target=AWSInsightsIndexService.ListCostAllocationTags:
    post:
      operationId: ListCostAllocationTags
      description: "Get a list of cost allocation tags. All inputs in the API are optional and serve as filters. By default, all cost allocation tags are returned. "
      responses:
        "200":
          description: Success
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/ListCostAllocationTagsResponse"
        "480":
          description: LimitExceededException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: InvalidNextTokenException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListCostAllocationTagsRequest"
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: false
          schema:
            type: string
            default: AWSInsightsIndexService.ListCostAllocationTags
            enum:
              - AWSInsightsIndexService.ListCostAllocationTags
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /?__X-Amz-Target=AWSInsightsIndexService.ListCostCategoryDefinitions:
    post:
      operationId: ListCostCategoryDefinitions
      description: Returns the name, Amazon Resource Name (ARN), <code>NumberOfRules</code> and effective dates of all Cost Categories defined in the account. You have the option to use <code>EffectiveOn</code> to return a list of Cost Categories that were active on a specific date. If there is no <code>EffectiveOn</code> specified, youll see Cost Categories that are effective on the current date. If Cost Category is still effective, <code>EffectiveEnd</code> is omitted in the response. <code>ListCostCategoryDefinitions</code> supports pagination. The request can have a <code>MaxResults</code> range up to 100.
      responses:
        "200":
          description: Success
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/ListCostCategoryDefinitionsResponse"
        "480":
          description: LimitExceededException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListCostCategoryDefinitionsRequest"
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: false
          schema:
            type: string
            default: AWSInsightsIndexService.ListCostCategoryDefinitions
            enum:
              - AWSInsightsIndexService.ListCostCategoryDefinitions
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /?__X-Amz-Target=AWSInsightsIndexService.ListSavingsPlansPurchaseRecommendationGeneration:
    post:
      operationId: ListSavingsPlansPurchaseRecommendationGeneration
      description: Retrieves a list of your historical recommendation generations within the past 30 days.
      responses:
        "200":
          description: Success
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/ListSavingsPlansPurchaseRecommendationGenerationResponse"
        "480":
          description: LimitExceededException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: InvalidNextTokenException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListSavingsPlansPurchaseRecommendationGenerationRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: false
          schema:
            type: string
            default: AWSInsightsIndexService.ListSavingsPlansPurchaseRecommendationGeneration
            enum:
              - AWSInsightsIndexService.ListSavingsPlansPurchaseRecommendationGeneration
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /?__X-Amz-Target=AWSInsightsIndexService.ListTagsForResource:
    post:
      operationId: ListTagsForResource
      description: "Returns a list of resource tags associated with the resource specified by the Amazon Resource Name (ARN). "
      responses:
        "200":
          description: Success
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/ListTagsForResourceResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: LimitExceededException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListTagsForResourceRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: false
          schema:
            type: string
            default: AWSInsightsIndexService.ListTagsForResource
            enum:
              - AWSInsightsIndexService.ListTagsForResource
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /?__X-Amz-Target=AWSInsightsIndexService.ProvideAnomalyFeedback:
    post:
      operationId: ProvideAnomalyFeedback
      description: "Modifies the feedback property of a given cost anomaly. "
      responses:
        "200":
          description: Success
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/ProvideAnomalyFeedbackResponse"
        "480":
          description: LimitExceededException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProvideAnomalyFeedbackRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: false
          schema:
            type: string
            default: AWSInsightsIndexService.ProvideAnomalyFeedback
            enum:
              - AWSInsightsIndexService.ProvideAnomalyFeedback
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /?__X-Amz-Target=AWSInsightsIndexService.StartSavingsPlansPurchaseRecommendationGeneration:
    post:
      operationId: StartSavingsPlansPurchaseRecommendationGeneration
      description: <p>Requests a Savings Plans recommendation generation. This enables you to calculate a fresh set of Savings Plans recommendations that takes your latest usage data and current Savings Plans inventory into account. You can refresh Savings Plans recommendations up to three times daily for a consolidated billing family.</p> <note> <p> <code>StartSavingsPlansPurchaseRecommendationGeneration</code> has no request syntax because no input parameters are needed to support this operation.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/StartSavingsPlansPurchaseRecommendationGenerationResponse"
        "480":
          description: LimitExceededException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: ServiceQuotaExceededException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "482":
          description: GenerationExistsException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/GenerationExistsException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartSavingsPlansPurchaseRecommendationGenerationRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: false          
          schema:
            default: AWSInsightsIndexService.StartSavingsPlansPurchaseRecommendationGeneration
            type: string
            enum:
              - AWSInsightsIndexService.StartSavingsPlansPurchaseRecommendationGeneration
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /?__X-Amz-Target=AWSInsightsIndexService.TagResource:
    post:
      operationId: TagResource
      description: <p>An API operation for adding one or more tags (key-value pairs) to a resource.</p> <p>You can use the <code>TagResource</code> operation with a resource that already has tags. If you specify a new tag key for the resource, this tag is appended to the list of tags associated with the resource. If you specify a tag key that is already associated with the resource, the new tag value you specify replaces the previous value for that tag.</p> <p>Although the maximum number of array members is 200, user-tag maximum is 50. The remaining are reserved for Amazon Web Services use.</p>
      responses:
        "200":
          description: Success
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/TagResourceResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: TooManyTagsException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/TooManyTagsException"
        "482":
          description: LimitExceededException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TagResourceRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: false
          schema:
            type: string
            default: AWSInsightsIndexService.TagResource
            enum:
              - AWSInsightsIndexService.TagResource
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /?__X-Amz-Target=AWSInsightsIndexService.UntagResource:
    post:
      operationId: UntagResource
      description: "Removes one or more tags from a resource. Specify only tag keys in your request. Don't specify the value. "
      responses:
        "200":
          description: Success
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/UntagResourceResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: LimitExceededException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UntagResourceRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: false
          schema:
            default: AWSInsightsIndexService.UntagResource
            type: string
            enum:
              - AWSInsightsIndexService.UntagResource
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /?__X-Amz-Target=AWSInsightsIndexService.UpdateAnomalyMonitor:
    post:
      operationId: UpdateAnomalyMonitor
      description: "Updates an existing cost anomaly monitor. The changes made are applied going forward, and doesn't change anomalies detected in the past. "
      responses:
        "200":
          description: Success
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/UpdateAnomalyMonitorResponse"
        "480":
          description: LimitExceededException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: UnknownMonitorException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/UnknownMonitorException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateAnomalyMonitorRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: false
          schema:
            default: AWSInsightsIndexService.UpdateAnomalyMonitor
            type: string
            enum:
              - AWSInsightsIndexService.UpdateAnomalyMonitor
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /?__X-Amz-Target=AWSInsightsIndexService.UpdateAnomalySubscription:
    post:
      operationId: UpdateAnomalySubscription
      description: "Updates an existing cost anomaly monitor subscription. "
      responses:
        "200":
          description: Success
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/UpdateAnomalySubscriptionResponse"
        "480":
          description: LimitExceededException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: UnknownMonitorException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/UnknownMonitorException"
        "482":
          description: UnknownSubscriptionException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/UnknownSubscriptionException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateAnomalySubscriptionRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: false
          schema:
            default: AWSInsightsIndexService.UpdateAnomalySubscription
            type: string
            enum:
              - AWSInsightsIndexService.UpdateAnomalySubscription
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /?__X-Amz-Target=AWSInsightsIndexService.UpdateCostAllocationTagsStatus:
    post:
      operationId: UpdateCostAllocationTagsStatus
      description: "Updates status for cost allocation tags in bulk, with maximum batch size of 20. If the tag status that's updated is the same as the existing tag status, the request doesn't fail. Instead, it doesn't have any effect on the tag status (for example, activating the active tag). "
      responses:
        "200":
          description: Success
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/UpdateCostAllocationTagsStatusResponse"
        "480":
          description: LimitExceededException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCostAllocationTagsStatusRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: false
          schema:
            default: AWSInsightsIndexService.UpdateCostAllocationTagsStatus
            type: string
            enum:
              - AWSInsightsIndexService.UpdateCostAllocationTagsStatus
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /?__X-Amz-Target=AWSInsightsIndexService.UpdateCostCategoryDefinition:
    post:
      operationId: UpdateCostCategoryDefinition
      description: Updates an existing Cost Category. Changes made to the Cost Category rules will be used to categorize the current months expenses and future expenses. This wont change categorization for the previous months.
      responses:
        "200":
          description: Success
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/UpdateCostCategoryDefinitionResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ServiceQuotaExceededException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "482":
          description: LimitExceededException
          content:
            application/x-amz-json-1.0:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCostCategoryDefinitionRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: false
          schema:
            default: AWSInsightsIndexService.UpdateCostCategoryDefinition
            type: string
            enum:
              - AWSInsightsIndexService.UpdateCostCategoryDefinition
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
components:
  x-stackQL-resources:
    cost_and_usage:
      id: aws.ce_native.cost_and_usage
      name: cost_and_usage
      title: Cost And Usage
      methods:
        get_cost_and_usage:
          operation:
            $ref: '#/paths/~1?__X-Amz-Target=AWSInsightsIndexService.GetCostAndUsage/post'
          response:
            mediaType: application/x-amz-json-1.0
            openAPIDocKey: '200'
            objectKey: '$'
            schemaRef: '#/components/schemas/GetCostAndUsageResponse'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/cost_and_usage/methods/get_cost_and_usage'
        insert: []
        update: []
        replace: []
        delete: []
    cost_and_usage_with_resources:
      id: aws.ce_native.cost_and_usage_with_resources
      name: cost_and_usage
      title: Cost And Usage
      methods:
        get_cost_and_usage_with_resources:
          operation:
            $ref: '#/paths/~1?__X-Amz-Target=AWSInsightsIndexService.GetCostAndUsageWithResources/post'
          response:
            mediaType: application/x-amz-json-1.0
            openAPIDocKey: '200'
            schemaRef: '#/components/schemas/GetCostAndUsageWithResourcesResponse'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/cost_and_usage_with_resources/methods/get_cost_and_usage_with_resources'
        insert: []
        update: []
        replace: []
        delete: []
    anomaly_monitor:
      id: aws.ce_native.anomaly_monitor
      name: anomaly_monitor
      title: Anomaly Monitor
      methods:
        create_anomaly_monitor:
          operation:
            $ref: '#/paths/~1?__X-Amz-Target=AWSInsightsIndexService.CreateAnomalyMonitor/post'
          response:
            mediaType: application/x-amz-json-1.0
            openAPIDocKey: '200'
            schemaRef: '#/components/schemas/CreateAnomalyMonitorResponse'
        delete_anomaly_monitor:
          operation:
            $ref: '#/paths/~1?__X-Amz-Target=AWSInsightsIndexService.DeleteAnomalyMonitor/post'
          response:
            mediaType: application/x-amz-json-1.0
            openAPIDocKey: '200'
            schemaRef: '#/components/schemas/DeleteAnomalyMonitorResponse'
        get_anomaly_monitors:
          operation:
            $ref: '#/paths/~1?__X-Amz-Target=AWSInsightsIndexService.GetAnomalyMonitors/post'
          response:
            mediaType: application/x-amz-json-1.0
            openAPIDocKey: '200'
            schemaRef: '#/components/schemas/GetAnomalyMonitorsResponse'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/anomaly_monitor/methods/get_anomaly_monitors'
        insert:
          - $ref: '#/components/x-stackQL-resources/anomaly_monitor/methods/create_anomaly_monitor'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/anomaly_monitor/methods/delete_anomaly_monitor'
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CreateAnomalyMonitorResponse:
      type: object
      required:
      - MonitorArn
      properties:
        MonitorArn:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The unique identifier of your newly created cost anomaly
              detection monitor.
    CreateAnomalyMonitorRequest:
      type: object
      required:
      - AnomalyMonitor
      title: CreateAnomalyMonitorRequest
      properties:
        AnomalyMonitor:
          allOf:
          - $ref: '#/components/schemas/AnomalyMonitor'
          - description: The cost anomaly detection monitor object that you want to
              create.
        ResourceTags:
          allOf:
          - $ref: '#/components/schemas/ResourceTagList'
          - description: 'An optional list of tags to associate with the specified  AnomalyMonitor
              . You can use resource tags to control access to your monitor using
              IAM policies. Each tag consists of a key and a value, and each key must
              be unique for the resource. The following restrictions apply to resource
              tags:   Although the maximum number of array members is 200, you can
              assign a maximum of 50 user-tags to one resource. The remaining are
              reserved for Amazon Web Services use   The maximum length of a key is
              128 characters   The maximum length of a value is 256 characters   Keys
              and values can only contain alphanumeric characters, spaces, and any
              of the following: _.:/=+@-    Keys and values are case sensitive   Keys
              and values are trimmed for any leading or trailing whitespaces   Don’t
              use aws: as a prefix for your keys. This prefix is reserved for Amazon
              Web Services use'
    LimitExceededException: {}
    CreateAnomalySubscriptionResponse:
      type: object
      required:
      - SubscriptionArn
      properties:
        SubscriptionArn:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The unique identifier of your newly created cost anomaly
              subscription.
    CreateAnomalySubscriptionRequest:
      type: object
      required:
      - AnomalySubscription
      title: CreateAnomalySubscriptionRequest
      properties:
        AnomalySubscription:
          allOf:
          - $ref: '#/components/schemas/AnomalySubscription'
          - description: The cost anomaly subscription object that you want to create.
        ResourceTags:
          allOf:
          - $ref: '#/components/schemas/ResourceTagList'
          - description: 'An optional list of tags to associate with the specified  AnomalySubscription
              . You can use resource tags to control access to your subscription using
              IAM policies. Each tag consists of a key and a value, and each key must
              be unique for the resource. The following restrictions apply to resource
              tags:   Although the maximum number of array members is 200, you can
              assign a maximum of 50 user-tags to one resource. The remaining are
              reserved for Amazon Web Services use   The maximum length of a key is
              128 characters   The maximum length of a value is 256 characters   Keys
              and values can only contain alphanumeric characters, spaces, and any
              of the following: _.:/=+@-    Keys and values are case sensitive   Keys
              and values are trimmed for any leading or trailing whitespaces   Don’t
              use aws: as a prefix for your keys. This prefix is reserved for Amazon
              Web Services use'
    UnknownMonitorException: {}
    CreateCostCategoryDefinitionResponse:
      type: object
      properties:
        CostCategoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The unique identifier for your newly created Cost Category.
        EffectiveStart:
          allOf:
          - $ref: '#/components/schemas/ZonedDateTime'
          - description: The Cost Category's effective start date. It can only be
              a billing start date (first day of the month).
    CreateCostCategoryDefinitionRequest:
      type: object
      required:
      - Name
      - RuleVersion
      - Rules
      title: CreateCostCategoryDefinitionRequest
      properties:
        Name:
          $ref: '#/components/schemas/CostCategoryName'
        EffectiveStart:
          allOf:
          - $ref: '#/components/schemas/ZonedDateTime'
          - description: The Cost Category's effective start date. It can only be
              a billing start date (first day of the month). If the date isn't provided,
              it's the first day of the current month. Dates can't be before the previous
              twelve months, or in the future.
        RuleVersion:
          $ref: '#/components/schemas/CostCategoryRuleVersion'
        Rules:
          allOf:
          - $ref: '#/components/schemas/CostCategoryRulesList'
          - description: The Cost Category rules used to categorize costs. For more
              information, see CostCategoryRule.
        DefaultValue:
          $ref: '#/components/schemas/CostCategoryValue'
        SplitChargeRules:
          allOf:
          - $ref: '#/components/schemas/CostCategorySplitChargeRulesList'
          - description: The split charge rules used to allocate your charges between
              your Cost Category values.
        ResourceTags:
          allOf:
          - $ref: '#/components/schemas/ResourceTagList'
          - description: 'An optional list of tags to associate with the specified  CostCategory
              . You can use resource tags to control access to your cost category
              using IAM policies. Each tag consists of a key and a value, and each
              key must be unique for the resource. The following restrictions apply
              to resource tags:   Although the maximum number of array members is
              200, you can assign a maximum of 50 user-tags to one resource. The remaining
              are reserved for Amazon Web Services use   The maximum length of a key
              is 128 characters   The maximum length of a value is 256 characters   Keys
              and values can only contain alphanumeric characters, spaces, and any
              of the following: _.:/=+@-    Keys and values are case sensitive   Keys
              and values are trimmed for any leading or trailing whitespaces   Don’t
              use aws: as a prefix for your keys. This prefix is reserved for Amazon
              Web Services use'
    ServiceQuotaExceededException: {}
    DeleteAnomalyMonitorResponse:
      type: object
      properties: {}
    DeleteAnomalyMonitorRequest:
      type: object
      required:
      - MonitorArn
      title: DeleteAnomalyMonitorRequest
      properties:
        MonitorArn:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The unique identifier of the cost anomaly monitor that you
              want to delete.
    DeleteAnomalySubscriptionResponse:
      type: object
      properties: {}
    DeleteAnomalySubscriptionRequest:
      type: object
      required:
      - SubscriptionArn
      title: DeleteAnomalySubscriptionRequest
      properties:
        SubscriptionArn:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The unique identifier of the cost anomaly subscription that
              you want to delete.
    UnknownSubscriptionException: {}
    DeleteCostCategoryDefinitionResponse:
      type: object
      properties:
        CostCategoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The unique identifier for your Cost Category.
        EffectiveEnd:
          allOf:
          - $ref: '#/components/schemas/ZonedDateTime'
          - description: The effective end date of the Cost Category as a result of
              deleting it. No costs after this date is categorized by the deleted
              Cost Category.
    DeleteCostCategoryDefinitionRequest:
      type: object
      required:
      - CostCategoryArn
      title: DeleteCostCategoryDefinitionRequest
      properties:
        CostCategoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The unique identifier for your Cost Category.
    ResourceNotFoundException: {}
    DescribeCostCategoryDefinitionResponse:
      type: object
      properties:
        CostCategory:
          $ref: '#/components/schemas/CostCategory'
    DescribeCostCategoryDefinitionRequest:
      type: object
      required:
      - CostCategoryArn
      title: DescribeCostCategoryDefinitionRequest
      properties:
        CostCategoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The unique identifier for your Cost Category.
        EffectiveOn:
          allOf:
          - $ref: '#/components/schemas/ZonedDateTime'
          - description: The date when the Cost Category was effective.
    GetAnomaliesResponse:
      type: object
      required:
      - Anomalies
      properties:
        Anomalies:
          allOf:
          - $ref: '#/components/schemas/Anomalies'
          - description: A list of cost anomalies.
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token to retrieve the next set of results. Amazon Web
              Services provides the token when the response from a previous call has
              more results than the maximum page size.
    GetAnomaliesRequest:
      type: object
      required:
      - DateInterval
      title: GetAnomaliesRequest
      properties:
        MonitorArn:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: Retrieves all of the cost anomalies detected for a specific
              cost anomaly monitor Amazon Resource Name (ARN).
        DateInterval:
          allOf:
          - $ref: '#/components/schemas/AnomalyDateInterval'
          - description: Assigns the start and end dates for retrieving cost anomalies.
              The returned anomaly object will have an AnomalyEndDate in the specified
              time range.
        Feedback:
          allOf:
          - $ref: '#/components/schemas/AnomalyFeedbackType'
          - description: Filters anomaly results by the feedback field on the anomaly
              object.
        TotalImpact:
          allOf:
          - $ref: '#/components/schemas/TotalImpactFilter'
          - description: Filters anomaly results by the total impact field on the
              anomaly object. For example, you can filter anomalies GREATER_THAN 200.00
              to retrieve anomalies, with an estimated dollar impact greater than
              200.
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token to retrieve the next set of results. Amazon Web
              Services provides the token when the response from a previous call has
              more results than the maximum page size.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The number of entries a paginated response contains.
    InvalidNextTokenException: {}
    GetAnomalyMonitorsResponse:
      type: object
      required:
      - AnomalyMonitors
      properties:
        AnomalyMonitors:
          allOf:
          - $ref: '#/components/schemas/AnomalyMonitors'
          - description: A list of cost anomaly monitors that includes the detailed
              metadata for each monitor.
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token to retrieve the next set of results. Amazon Web
              Services provides the token when the response from a previous call has
              more results than the maximum page size.
    GetAnomalyMonitorsRequest:
      type: object
      title: GetAnomalyMonitorsRequest
      properties:
        MonitorArnList:
          allOf:
          - $ref: '#/components/schemas/Values'
          - description: A list of cost anomaly monitor ARNs.
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token to retrieve the next set of results. Amazon Web
              Services provides the token when the response from a previous call has
              more results than the maximum page size.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The number of entries that a paginated response contains.
    GetAnomalySubscriptionsResponse:
      type: object
      required:
      - AnomalySubscriptions
      properties:
        AnomalySubscriptions:
          allOf:
          - $ref: '#/components/schemas/AnomalySubscriptions'
          - description: A list of cost anomaly subscriptions that includes the detailed
              metadata for each one.
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token to retrieve the next set of results. Amazon Web
              Services provides the token when the response from a previous call has
              more results than the maximum page size.
    GetAnomalySubscriptionsRequest:
      type: object
      title: GetAnomalySubscriptionsRequest
      properties:
        SubscriptionArnList:
          allOf:
          - $ref: '#/components/schemas/Values'
          - description: A list of cost anomaly subscription ARNs.
        MonitorArn:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: Cost anomaly monitor ARNs.
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token to retrieve the next set of results. Amazon Web
              Services provides the token when the response from a previous call has
              more results than the maximum page size.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The number of entries a paginated response contains.
    GetCostAndUsageResponse:
      type: object
      properties:
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token for the next set of retrievable results. Amazon
              Web Services provides the token when the response from a previous call
              has more results than the maximum page size.
        GroupDefinitions:
          allOf:
          - $ref: '#/components/schemas/GroupDefinitions'
          - description: The groups that are specified by the Filter or GroupBy parameters
              in the request.
        ResultsByTime:
          allOf:
          - $ref: '#/components/schemas/ResultsByTime'
          - description: The time period that's covered by the results in the response.
        DimensionValueAttributes:
          allOf:
          - $ref: '#/components/schemas/DimensionValuesWithAttributesList'
          - description: The attributes that apply to a specific dimension value.
              For example, if the value is a linked account, the attribute is that
              account name.
    GetCostAndUsageRequest:
      type: object
      required:
      - TimePeriod
      - Granularity
      - Metrics
      title: GetCostAndUsageRequest
      properties:
        TimePeriod:
          allOf:
          - $ref: '#/components/schemas/DateInterval'
          - description: Sets the start date and end date for retrieving Amazon Web
              Services costs. The start date is inclusive, but the end date is exclusive.
              For example, if start is 2017-01-01 and end is 2017-05-01, then the
              cost and usage data is retrieved from 2017-01-01 up to and including
              2017-04-30 but not including 2017-05-01.
        Granularity:
          allOf:
          - $ref: '#/components/schemas/Granularity'
          - description: Sets the Amazon Web Services cost granularity to MONTHLY
              or DAILY, or HOURLY. If Granularity isn't set, the response object doesn't
              include the Granularity, either MONTHLY or DAILY, or HOURLY.
        Filter:
          allOf:
          - $ref: '#/components/schemas/Expression'
          - description: Filters Amazon Web Services costs by different dimensions.
              For example, you can specify SERVICE and LINKED_ACCOUNT and get the
              costs that are associated with that account's usage of that service.
              You can nest Expression objects to define any combination of dimension
              filters. For more information, see Expression.  Valid values for MatchOptions
              for Dimensions are EQUALS and CASE_SENSITIVE. Valid values for MatchOptions
              for CostCategories and Tags are EQUALS, ABSENT, and CASE_SENSITIVE.
              Default values are EQUALS and CASE_SENSITIVE.
        Metrics:
          allOf:
          - $ref: '#/components/schemas/MetricNames'
          - description: Which metrics are returned in the query. For more information
              about blended and unblended rates, see Why does the "blended" annotation
              appear on some line items in my bill?.  Valid values are AmortizedCost,
              BlendedCost, NetAmortizedCost, NetUnblendedCost, NormalizedUsageAmount,
              UnblendedCost, and UsageQuantity.   If you return the UsageQuantity
              metric, the service aggregates all usage numbers without taking into
              account the units. For example, if you aggregate usageQuantity across
              all of Amazon EC2, the results aren't meaningful because Amazon EC2
              compute hours and data transfer are measured in different units (for
              example, hours and GB). To get more meaningful UsageQuantity metrics,
              filter by UsageType or UsageTypeGroups.    Metrics is required for GetCostAndUsage
              requests.
        GroupBy:
          allOf:
          - $ref: '#/components/schemas/GroupDefinitions'
          - description: You can group Amazon Web Services costs using up to two different
              groups, either dimensions, tag keys, cost categories, or any two group
              by types. Valid values for the DIMENSION type are AZ, INSTANCE_TYPE,
              LEGAL_ENTITY_NAME, INVOICING_ENTITY, LINKED_ACCOUNT, OPERATION, PLATFORM,
              PURCHASE_TYPE, SERVICE, TENANCY, RECORD_TYPE, and USAGE_TYPE. When you
              group by the TAG type and include a valid tag key, you get all tag values,
              including empty strings.
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token to retrieve the next set of results. Amazon Web
              Services provides the token when the response from a previous call has
              more results than the maximum page size.
    BillExpirationException: {}
    DataUnavailableException: {}
    RequestChangedException: {}
    GetCostAndUsageWithResourcesResponse:
      type: object
      properties:
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token for the next set of retrievable results. Amazon
              Web Services provides the token when the response from a previous call
              has more results than the maximum page size.
        GroupDefinitions:
          allOf:
          - $ref: '#/components/schemas/GroupDefinitions'
          - description: The groups that are specified by the Filter or GroupBy parameters
              in the request.
        ResultsByTime:
          allOf:
          - $ref: '#/components/schemas/ResultsByTime'
          - description: The time period that's covered by the results in the response.
        DimensionValueAttributes:
          allOf:
          - $ref: '#/components/schemas/DimensionValuesWithAttributesList'
          - description: The attributes that apply to a specific dimension value.
              For example, if the value is a linked account, the attribute is that
              account name.
    GetCostAndUsageWithResourcesRequest:
      type: object
      required:
      - TimePeriod
      - Granularity
      - Filter
      title: GetCostAndUsageWithResourcesRequest
      properties:
        TimePeriod:
          allOf:
          - $ref: '#/components/schemas/DateInterval'
          - description: Sets the start and end dates for retrieving Amazon Web Services
              costs. The range must be within the last 14 days (the start date cannot
              be earlier than 14 days ago). The start date is inclusive, but the end
              date is exclusive. For example, if start is 2017-01-01 and end is 2017-05-01,
              then the cost and usage data is retrieved from 2017-01-01 up to and
              including 2017-04-30 but not including 2017-05-01.
        Granularity:
          allOf:
          - $ref: '#/components/schemas/Granularity'
          - description: Sets the Amazon Web Services cost granularity to MONTHLY,
              DAILY, or HOURLY. If Granularity isn't set, the response object doesn't
              include the Granularity, MONTHLY, DAILY, or HOURLY.
        Filter:
          allOf:
          - $ref: '#/components/schemas/Expression'
          - description: Filters Amazon Web Services costs by different dimensions.
              For example, you can specify SERVICE and LINKED_ACCOUNT and get the
              costs that are associated with that account's usage of that service.
              You can nest Expression objects to define any combination of dimension
              filters. For more information, see Expression.  The GetCostAndUsageWithResources
              operation requires that you either group by or filter by a ResourceId.
              It requires the Expression "SERVICE = Amazon Elastic Compute Cloud -
              Compute" in the filter. Valid values for MatchOptions for Dimensions
              are EQUALS and CASE_SENSITIVE. Valid values for MatchOptions for CostCategories
              and Tags are EQUALS, ABSENT, and CASE_SENSITIVE. Default values are
              EQUALS and CASE_SENSITIVE.
        Metrics:
          allOf:
          - $ref: '#/components/schemas/MetricNames'
          - description: Which metrics are returned in the query. For more information
              about blended and unblended rates, see Why does the "blended" annotation
              appear on some line items in my bill?.  Valid values are AmortizedCost,
              BlendedCost, NetAmortizedCost, NetUnblendedCost, NormalizedUsageAmount,
              UnblendedCost, and UsageQuantity.   If you return the UsageQuantity
              metric, the service aggregates all usage numbers without taking the
              units into account. For example, if you aggregate usageQuantity across
              all of Amazon EC2, the results aren't meaningful because Amazon EC2
              compute hours and data transfer are measured in different units (for
              example, hour or GB). To get more meaningful UsageQuantity metrics,
              filter by UsageType or UsageTypeGroups.    Metrics is required for GetCostAndUsageWithResources
              requests.
        GroupBy:
          allOf:
          - $ref: '#/components/schemas/GroupDefinitions'
          - description: 'You can group Amazon Web Services costs using up to two
              different groups: DIMENSION, TAG, COST_CATEGORY.'
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token to retrieve the next set of results. Amazon Web
              Services provides the token when the response from a previous call has
              more results than the maximum page size.
    GetCostCategoriesResponse:
      type: object
      required:
      - ReturnSize
      - TotalSize
      properties:
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: If the number of objects that are still available for retrieval
              exceeds the quota, Amazon Web Services returns a NextPageToken value
              in the response. To retrieve the next batch of objects, provide the
              marker from the prior call in your next request.
        CostCategoryNames:
          allOf:
          - $ref: '#/components/schemas/CostCategoryNamesList'
          - description: The names of the Cost Categories.
        CostCategoryValues:
          allOf:
          - $ref: '#/components/schemas/CostCategoryValuesList'
          - description: The Cost Category values. If the CostCategoryName key isn't
              specified in the request, the CostCategoryValues fields aren't returned.
        ReturnSize:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The number of objects that are returned.
        TotalSize:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The total number of objects.
    GetCostCategoriesRequest:
      type: object
      required:
      - TimePeriod
      title: GetCostCategoriesRequest
      properties:
        SearchString:
          allOf:
          - $ref: '#/components/schemas/SearchString'
          - description: The value that you want to search the filter values for.
              If you don't specify a CostCategoryName, SearchString is used to filter
              Cost Category names that match the SearchString pattern. If you specify
              a CostCategoryName, SearchString is used to filter Cost Category values
              that match the SearchString pattern.
        TimePeriod:
          $ref: '#/components/schemas/DateInterval'
        CostCategoryName:
          $ref: '#/components/schemas/CostCategoryName'
        Filter:
          $ref: '#/components/schemas/Expression'
        SortBy:
          allOf:
          - $ref: '#/components/schemas/SortDefinitions'
          - description: "The value that you sort the data by. The key represents
              the cost and usage metrics. The following values are supported:    BlendedCost\
              \     UnblendedCost     AmortizedCost     NetAmortizedCost     NetUnblendedCost\
              \     UsageQuantity     NormalizedUsageAmount    The supported key values
              for the SortOrder value are ASCENDING and DESCENDING. When you use the
              SortBy value, the NextPageToken and SearchString key values aren't supported."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: This field is only used when the SortBy value is provided
              in the request. The maximum number of objects that are returned for
              this request. If MaxResults isn't specified with the SortBy value, the
              request returns 1000 results as the default value for this parameter.
              For GetCostCategories, MaxResults has an upper quota of 1000.
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: If the number of objects that are still available for retrieval
              exceeds the quota, Amazon Web Services returns a NextPageToken value
              in the response. To retrieve the next batch of objects, provide the
              NextPageToken from the previous call in your next request.
    GetCostForecastResponse:
      type: object
      properties:
        Total:
          allOf:
          - $ref: '#/components/schemas/MetricValue'
          - description: How much you are forecasted to spend over the forecast period,
              in USD.
        ForecastResultsByTime:
          allOf:
          - $ref: '#/components/schemas/ForecastResultsByTime'
          - description: The forecasts for your query, in order. For DAILY forecasts,
              this is a list of days. For MONTHLY forecasts, this is a list of months.
    GetCostForecastRequest:
      type: object
      required:
      - TimePeriod
      - Metric
      - Granularity
      title: GetCostForecastRequest
      properties:
        TimePeriod:
          allOf:
          - $ref: '#/components/schemas/DateInterval'
          - description: The period of time that you want the forecast to cover. The
              start date must be equal to or no later than the current date to avoid
              a validation error.
        Metric:
          allOf:
          - $ref: '#/components/schemas/Metric'
          - description: 'Which metric Cost Explorer uses to create your forecast.
              For more information about blended and unblended rates, see Why does
              the "blended" annotation appear on some line items in my bill?.  Valid
              values for a GetCostForecast call are the following:   AMORTIZED_COST   BLENDED_COST   NET_AMORTIZED_COST   NET_UNBLENDED_COST   UNBLENDED_COST'
        Granularity:
          allOf:
          - $ref: '#/components/schemas/Granularity'
          - description: How granular you want the forecast to be. You can get 3 months
              of DAILY forecasts or 12 months of MONTHLY forecasts. The GetCostForecast
              operation supports only DAILY and MONTHLY granularities.
        Filter:
          allOf:
          - $ref: '#/components/schemas/Expression'
          - description: 'The filters that you want to use to filter your forecast.
              The GetCostForecast API supports filtering by the following dimensions:    AZ     INSTANCE_TYPE     LINKED_ACCOUNT     LINKED_ACCOUNT_NAME     OPERATION     PURCHASE_TYPE     REGION     SERVICE     USAGE_TYPE     USAGE_TYPE_GROUP     RECORD_TYPE     OPERATING_SYSTEM     TENANCY     SCOPE     PLATFORM     SUBSCRIPTION_ID     LEGAL_ENTITY_NAME     DEPLOYMENT_OPTION     DATABASE_ENGINE     INSTANCE_TYPE_FAMILY     BILLING_ENTITY     RESERVATION_ID     SAVINGS_PLAN_ARN'
        PredictionIntervalLevel:
          allOf:
          - $ref: '#/components/schemas/PredictionIntervalLevel'
          - description: Cost Explorer always returns the mean forecast as a single
              point. You can request a prediction interval around the mean by specifying
              a confidence level. The higher the confidence level, the more confident
              Cost Explorer is about the actual value falling in the prediction interval.
              Higher confidence levels result in wider prediction intervals.
    GetDimensionValuesResponse:
      type: object
      required:
      - DimensionValues
      - ReturnSize
      - TotalSize
      properties:
        DimensionValues:
          allOf:
          - $ref: '#/components/schemas/DimensionValuesWithAttributesList'
          - description: 'The filters that you used to filter your request. Some dimensions
              are available only for a specific context. If you set the context to
              COST_AND_USAGE, you can use the following dimensions for searching:   AZ
              - The Availability Zone. An example is us-east-1a.   DATABASE_ENGINE
              - The Amazon Relational Database Service database. Examples are Aurora
              or MySQL.   INSTANCE_TYPE - The type of Amazon EC2 instance. An example
              is m4.xlarge.   LEGAL_ENTITY_NAME - The name of the organization that
              sells you Amazon Web Services services, such as Amazon Web Services.   LINKED_ACCOUNT
              - The description in the attribute map that includes the full name of
              the member account. The value field contains the Amazon Web Services
              ID of the member account.   OPERATING_SYSTEM - The operating system.
              Examples are Windows or Linux.   OPERATION - The action performed. Examples
              include RunInstance and CreateBucket.   PLATFORM - The Amazon EC2 operating
              system. Examples are Windows or Linux.   PURCHASE_TYPE - The reservation
              type of the purchase to which this usage is related. Examples include
              On-Demand Instances and Standard Reserved Instances.   SERVICE - The
              Amazon Web Services service such as Amazon DynamoDB.   USAGE_TYPE -
              The type of usage. An example is DataTransfer-In-Bytes. The response
              for the GetDimensionValues operation includes a unit attribute. Examples
              include GB and Hrs.   USAGE_TYPE_GROUP - The grouping of common usage
              types. An example is Amazon EC2: CloudWatch – Alarms. The response for
              this operation includes a unit attribute.   RECORD_TYPE - The different
              types of charges such as RI fees, usage costs, tax refunds, and credits.   RESOURCE_ID
              - The unique identifier of the resource. ResourceId is an opt-in feature
              only available for last 14 days for EC2-Compute Service. You can opt-in
              by enabling Hourly and Resource Level Data in Cost Management Console
              preferences.   If you set the context to RESERVATIONS, you can use the
              following dimensions for searching:   AZ - The Availability Zone. An
              example is us-east-1a.   CACHE_ENGINE - The Amazon ElastiCache operating
              system. Examples are Windows or Linux.   DEPLOYMENT_OPTION - The scope
              of Amazon Relational Database Service deployments. Valid values are
              SingleAZ and MultiAZ.   INSTANCE_TYPE - The type of Amazon EC2 instance.
              An example is m4.xlarge.   LINKED_ACCOUNT - The description in the attribute
              map that includes the full name of the member account. The value field
              contains the Amazon Web Services ID of the member account.   PLATFORM
              - The Amazon EC2 operating system. Examples are Windows or Linux.   REGION
              - The Amazon Web Services Region.   SCOPE (Utilization only) - The scope
              of a Reserved Instance (RI). Values are regional or a single Availability
              Zone.   TAG (Coverage only) - The tags that are associated with a Reserved
              Instance (RI).   TENANCY - The tenancy of a resource. Examples are shared
              or dedicated.   If you set the context to SAVINGS_PLANS, you can use
              the following dimensions for searching:   SAVINGS_PLANS_TYPE - Type
              of Savings Plans (EC2 Instance or Compute)   PAYMENT_OPTION - Payment
              option for the given Savings Plans (for example, All Upfront)   REGION
              - The Amazon Web Services Region.   INSTANCE_TYPE_FAMILY - The family
              of instances (For example, m5)   LINKED_ACCOUNT - The description in
              the attribute map that includes the full name of the member account.
              The value field contains the Amazon Web Services ID of the member account.   SAVINGS_PLAN_ARN
              - The unique identifier for your Savings Plan'
        ReturnSize:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The number of results that Amazon Web Services returned at
              one time.
        TotalSize:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The total number of search results.
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token for the next set of retrievable results. Amazon
              Web Services provides the token when the response from a previous call
              has more results than the maximum page size.
    GetDimensionValuesRequest:
      type: object
      required:
      - TimePeriod
      - Dimension
      title: GetDimensionValuesRequest
      properties:
        SearchString:
          allOf:
          - $ref: '#/components/schemas/SearchString'
          - description: The value that you want to search the filter values for.
        TimePeriod:
          allOf:
          - $ref: '#/components/schemas/DateInterval'
          - description: The start date and end date for retrieving the dimension
              values. The start date is inclusive, but the end date is exclusive.
              For example, if start is 2017-01-01 and end is 2017-05-01, then the
              cost and usage data is retrieved from 2017-01-01 up to and including
              2017-04-30 but not including 2017-05-01.
        Dimension:
          allOf:
          - $ref: '#/components/schemas/Dimension'
          - description: The name of the dimension. Each Dimension is available for
              a different Context. For more information, see Context. LINK_ACCOUNT_NAME
              and SERVICE_CODE can only be used in CostCategoryRule.
        Context:
          allOf:
          - $ref: '#/components/schemas/Context'
          - description: "The context for the call to GetDimensionValues. This can
              be RESERVATIONS or COST_AND_USAGE. The default value is COST_AND_USAGE.
              If the context is set to RESERVATIONS, the resulting dimension values
              can be used in the GetReservationUtilization operation. If the context
              is set to COST_AND_USAGE, the resulting dimension values can be used
              in the GetCostAndUsage operation. If you set the context to COST_AND_USAGE,
              you can use the following dimensions for searching:   AZ - The Availability
              Zone. An example is us-east-1a.   BILLING_ENTITY - The Amazon Web Services
              seller that your account is with. Possible values are the following:
              - Amazon Web Services(Amazon Web Services): The entity that sells Amazon
              Web Services. - AISPL (Amazon Internet Services Pvt. Ltd.): The local
              Indian entity that's an acting reseller for Amazon Web Services in India.
              - Amazon Web Services Marketplace: The entity that supports the sale
              of solutions that are built on Amazon Web Services by third-party software
              providers.   CACHE_ENGINE - The Amazon ElastiCache operating system.
              Examples are Windows or Linux.   DEPLOYMENT_OPTION - The scope of Amazon
              Relational Database Service deployments. Valid values are SingleAZ and
              MultiAZ.   DATABASE_ENGINE - The Amazon Relational Database Service
              database. Examples are Aurora or MySQL.   INSTANCE_TYPE - The type of
              Amazon EC2 instance. An example is m4.xlarge.   INSTANCE_TYPE_FAMILY
              - A family of instance types optimized to fit different use cases. Examples
              are Compute Optimized (for example, C4, C5, C6g, and C7g), Memory Optimization
              (for example, R4, R5n, R5b, and R6g).   INVOICING_ENTITY - The name
              of the entity that issues the Amazon Web Services invoice.   LEGAL_ENTITY_NAME
              - The name of the organization that sells you Amazon Web Services services,
              such as Amazon Web Services.   LINKED_ACCOUNT - The description in the
              attribute map that includes the full name of the member account. The
              value field contains the Amazon Web Services ID of the member account.\
              \   OPERATING_SYSTEM - The operating system. Examples are Windows or
              Linux.   OPERATION - The action performed. Examples include RunInstance
              and CreateBucket.   PLATFORM - The Amazon EC2 operating system. Examples
              are Windows or Linux.   PURCHASE_TYPE - The reservation type of the
              purchase that this usage is related to. Examples include On-Demand Instances
              and Standard Reserved Instances.   RESERVATION_ID - The unique identifier
              for an Amazon Web Services Reservation Instance.   SAVINGS_PLAN_ARN
              - The unique identifier for your Savings Plans.   SAVINGS_PLANS_TYPE
              - Type of Savings Plans (EC2 Instance or Compute).   SERVICE - The Amazon
              Web Services service such as Amazon DynamoDB.   TENANCY - The tenancy
              of a resource. Examples are shared or dedicated.   USAGE_TYPE - The
              type of usage. An example is DataTransfer-In-Bytes. The response for
              the GetDimensionValues operation includes a unit attribute. Examples
              include GB and Hrs.   USAGE_TYPE_GROUP - The grouping of common usage
              types. An example is Amazon EC2: CloudWatch – Alarms. The response for
              this operation includes a unit attribute.   REGION - The Amazon Web
              Services Region.   RECORD_TYPE - The different types of charges such
              as Reserved Instance (RI) fees, usage costs, tax refunds, and credits.\
              \   RESOURCE_ID - The unique identifier of the resource. ResourceId
              is an opt-in feature only available for last 14 days for EC2-Compute
              Service.   If you set the context to RESERVATIONS, you can use the following
              dimensions for searching:   AZ - The Availability Zone. An example is
              us-east-1a.   CACHE_ENGINE - The Amazon ElastiCache operating system.
              Examples are Windows or Linux.   DEPLOYMENT_OPTION - The scope of Amazon
              Relational Database Service deployments. Valid values are SingleAZ and
              MultiAZ.   INSTANCE_TYPE - The type of Amazon EC2 instance. An example
              is m4.xlarge.   LINKED_ACCOUNT - The description in the attribute map
              that includes the full name of the member account. The value field contains
              the Amazon Web Services ID of the member account.   PLATFORM - The Amazon
              EC2 operating system. Examples are Windows or Linux.   REGION - The
              Amazon Web Services Region.   SCOPE (Utilization only) - The scope of
              a Reserved Instance (RI). Values are regional or a single Availability
              Zone.   TAG (Coverage only) - The tags that are associated with a Reserved
              Instance (RI).   TENANCY - The tenancy of a resource. Examples are shared
              or dedicated.   If you set the context to SAVINGS_PLANS, you can use
              the following dimensions for searching:   SAVINGS_PLANS_TYPE - Type
              of Savings Plans (EC2 Instance or Compute)   PAYMENT_OPTION - The payment
              option for the given Savings Plans (for example, All Upfront)   REGION
              - The Amazon Web Services Region.   INSTANCE_TYPE_FAMILY - The family
              of instances (For example, m5)   LINKED_ACCOUNT - The description in
              the attribute map that includes the full name of the member account.
              The value field contains the Amazon Web Services ID of the member account.\
              \   SAVINGS_PLAN_ARN - The unique identifier for your Savings Plans."
        Filter:
          $ref: '#/components/schemas/Expression'
        SortBy:
          allOf:
          - $ref: '#/components/schemas/SortDefinitions'
          - description: "The value that you want to sort the data by. The key represents
              cost and usage metrics. The following values are supported:    BlendedCost\
              \     UnblendedCost     AmortizedCost     NetAmortizedCost     NetUnblendedCost\
              \     UsageQuantity     NormalizedUsageAmount    The supported values
              for the SortOrder key are ASCENDING or DESCENDING. When you specify
              a SortBy paramater, the context must be COST_AND_USAGE. Further, when
              using SortBy, NextPageToken and SearchString aren't supported."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: This field is only used when SortBy is provided in the request.
              The maximum number of objects that are returned for this request. If
              MaxResults isn't specified with SortBy, the request returns 1000 results
              as the default value for this parameter. For GetDimensionValues, MaxResults
              has an upper limit of 1000.
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token to retrieve the next set of results. Amazon Web
              Services provides the token when the response from a previous call has
              more results than the maximum page size.
    GetReservationCoverageResponse:
      type: object
      required:
      - CoveragesByTime
      properties:
        CoveragesByTime:
          allOf:
          - $ref: '#/components/schemas/CoveragesByTime'
          - description: The amount of time that your reservations covered.
        Total:
          allOf:
          - $ref: '#/components/schemas/Coverage'
          - description: The total amount of instance usage that a reservation covered.
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token for the next set of retrievable results. Amazon
              Web Services provides the token when the response from a previous call
              has more results than the maximum page size.
    GetReservationCoverageRequest:
      type: object
      required:
      - TimePeriod
      title: GetReservationCoverageRequest
      properties:
        TimePeriod:
          allOf:
          - $ref: '#/components/schemas/DateInterval'
          - description: 'The start and end dates of the period that you want to retrieve
              data about reservation coverage for. You can retrieve data for a maximum
              of 13 months: the last 12 months and the current month. The start date
              is inclusive, but the end date is exclusive. For example, if start is
              2017-01-01 and end is 2017-05-01, then the cost and usage data is retrieved
              from 2017-01-01 up to and including 2017-04-30 but not including 2017-05-01.'
        GroupBy:
          allOf:
          - $ref: '#/components/schemas/GroupDefinitions'
          - description: 'You can group the data by the following attributes:   AZ   CACHE_ENGINE   DATABASE_ENGINE   DEPLOYMENT_OPTION   INSTANCE_TYPE   INVOICING_ENTITY   LINKED_ACCOUNT   OPERATING_SYSTEM   PLATFORM   REGION   TENANCY'
        Granularity:
          allOf:
          - $ref: '#/components/schemas/Granularity'
          - description: The granularity of the Amazon Web Services cost data for
              the reservation. Valid values are MONTHLY and DAILY. If GroupBy is set,
              Granularity can't be set. If Granularity isn't set, the response object
              doesn't include Granularity, either MONTHLY or DAILY. The GetReservationCoverage
              operation supports only DAILY and MONTHLY granularities.
        Filter:
          allOf:
          - $ref: '#/components/schemas/Expression'
          - description: "Filters utilization data by dimensions. You can filter by
              the following dimensions:   AZ   CACHE_ENGINE   DATABASE_ENGINE   DEPLOYMENT_OPTION\
              \   INSTANCE_TYPE   LINKED_ACCOUNT   OPERATING_SYSTEM   PLATFORM   REGION\
              \   SERVICE   TAG   TENANCY    GetReservationCoverage uses the same
              Expression object as the other operations, but only AND is supported
              among each dimension. You can nest only one level deep. If there are
              multiple values for a dimension, they are OR'd together. If you don't
              provide a SERVICE filter, Cost Explorer defaults to EC2. Cost category
              is also supported."
        Metrics:
          allOf:
          - $ref: '#/components/schemas/MetricNames'
          - description: The measurement that you want your reservation coverage reported
              in. Valid values are Hour, Unit, and Cost. You can use multiple values
              in a request.
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token to retrieve the next set of results. Amazon Web
              Services provides the token when the response from a previous call has
              more results than the maximum page size.
        SortBy:
          allOf:
          - $ref: '#/components/schemas/SortDefinition'
          - description: 'The value by which you want to sort the data. The following
              values are supported for Key:    OnDemandCost     CoverageHoursPercentage     OnDemandHours     ReservedHours     TotalRunningHours     CoverageNormalizedUnitsPercentage     OnDemandNormalizedUnits     ReservedNormalizedUnits     TotalRunningNormalizedUnits     Time    Supported
              values for SortOrder are ASCENDING or DESCENDING.'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of objects that you returned for this
              request. If more objects are available, in the response, Amazon Web
              Services provides a NextPageToken value that you can use in a subsequent
              call to get the next batch of objects.
      description: You can use the following request parameters to query for how much
        of your instance usage a reservation covered.
    GetReservationPurchaseRecommendationResponse:
      type: object
      properties:
        Metadata:
          allOf:
          - $ref: '#/components/schemas/ReservationPurchaseRecommendationMetadata'
          - description: Information about this specific recommendation call, such
              as the time stamp for when Cost Explorer generated this recommendation.
        Recommendations:
          allOf:
          - $ref: '#/components/schemas/ReservationPurchaseRecommendations'
          - description: Recommendations for reservations to purchase.
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The pagination token for the next set of retrievable results.
    GetReservationPurchaseRecommendationRequest:
      type: object
      required:
      - Service
      title: GetReservationPurchaseRecommendationRequest
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The account ID that's associated with the recommendation.
        Service:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The specific service that you want recommendations for.
        Filter:
          $ref: '#/components/schemas/Expression'
        AccountScope:
          allOf:
          - $ref: '#/components/schemas/AccountScope'
          - description: The account scope that you want your recommendations for.
              Amazon Web Services calculates recommendations including the management
              account and member accounts if the value is set to PAYER. If the value
              is LINKED, recommendations are calculated for individual member accounts
              only.
        LookbackPeriodInDays:
          allOf:
          - $ref: '#/components/schemas/LookbackPeriodInDays'
          - description: The number of previous days that you want Amazon Web Services
              to consider when it calculates your recommendations.
        TermInYears:
          allOf:
          - $ref: '#/components/schemas/TermInYears'
          - description: The reservation term that you want recommendations for.
        PaymentOption:
          allOf:
          - $ref: '#/components/schemas/PaymentOption'
          - description: The reservation purchase option that you want recommendations
              for.
        ServiceSpecification:
          allOf:
          - $ref: '#/components/schemas/ServiceSpecification'
          - description: The hardware specifications for the service instances that
              you want recommendations for, such as standard or convertible Amazon
              EC2 instances.
        PageSize:
          allOf:
          - $ref: '#/components/schemas/NonNegativeInteger'
          - description: The number of recommendations that you want returned in a
              single response object.
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The pagination token that indicates the next set of results
              that you want to retrieve.
    GetReservationUtilizationResponse:
      type: object
      required:
      - UtilizationsByTime
      properties:
        UtilizationsByTime:
          allOf:
          - $ref: '#/components/schemas/UtilizationsByTime'
          - description: The amount of time that you used your Reserved Instances
              (RIs).
        Total:
          allOf:
          - $ref: '#/components/schemas/ReservationAggregates'
          - description: The total amount of time that you used your Reserved Instances
              (RIs).
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token for the next set of retrievable results. Amazon
              Web Services provides the token when the response from a previous call
              has more results than the maximum page size.
    GetReservationUtilizationRequest:
      type: object
      required:
      - TimePeriod
      title: GetReservationUtilizationRequest
      properties:
        TimePeriod:
          allOf:
          - $ref: '#/components/schemas/DateInterval'
          - description: Sets the start and end dates for retrieving Reserved Instance
              (RI) utilization. The start date is inclusive, but the end date is exclusive.
              For example, if start is 2017-01-01 and end is 2017-05-01, then the
              cost and usage data is retrieved from 2017-01-01 up to and including
              2017-04-30 but not including 2017-05-01.
        GroupBy:
          allOf:
          - $ref: '#/components/schemas/GroupDefinitions'
          - description: Groups only by SUBSCRIPTION_ID. Metadata is included.
        Granularity:
          allOf:
          - $ref: '#/components/schemas/Granularity'
          - description: If GroupBy is set, Granularity can't be set. If Granularity
              isn't set, the response object doesn't include Granularity, either MONTHLY
              or DAILY. If both GroupBy and Granularity aren't set, GetReservationUtilization
              defaults to DAILY. The GetReservationUtilization operation supports
              only DAILY and MONTHLY granularities.
        Filter:
          allOf:
          - $ref: '#/components/schemas/Expression'
          - description: "Filters utilization data by dimensions. You can filter by
              the following dimensions:   AZ   CACHE_ENGINE   DEPLOYMENT_OPTION  \
              \ INSTANCE_TYPE   LINKED_ACCOUNT   OPERATING_SYSTEM   PLATFORM   REGION\
              \   SERVICE   SCOPE   TENANCY    GetReservationUtilization uses the
              same Expression object as the other operations, but only AND is supported
              among each dimension, and nesting is supported up to only one level
              deep. If there are multiple values for a dimension, they are OR'd together."
        SortBy:
          allOf:
          - $ref: '#/components/schemas/SortDefinition'
          - description: 'The value that you want to sort the data by. The following
              values are supported for Key:    UtilizationPercentage     UtilizationPercentageInUnits     PurchasedHours     PurchasedUnits     TotalActualHours     TotalActualUnits     UnusedHours     UnusedUnits     OnDemandCostOfRIHoursUsed     NetRISavings     TotalPotentialRISavings     AmortizedUpfrontFee     AmortizedRecurringFee     TotalAmortizedFee     RICostForUnusedHours     RealizedSavings     UnrealizedSavings    The
              supported values for SortOrder are ASCENDING and DESCENDING.'
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token to retrieve the next set of results. Amazon Web
              Services provides the token when the response from a previous call has
              more results than the maximum page size.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of objects that you returned for this
              request. If more objects are available, in the response, Amazon Web
              Services provides a NextPageToken value that you can use in a subsequent
              call to get the next batch of objects.
    GetRightsizingRecommendationResponse:
      type: object
      properties:
        Metadata:
          allOf:
          - $ref: '#/components/schemas/RightsizingRecommendationMetadata'
          - description: Information regarding this specific recommendation set.
        Summary:
          allOf:
          - $ref: '#/components/schemas/RightsizingRecommendationSummary'
          - description: Summary of this recommendation set.
        RightsizingRecommendations:
          allOf:
          - $ref: '#/components/schemas/RightsizingRecommendationList'
          - description: Recommendations to rightsize resources.
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token to retrieve the next set of results.
        Configuration:
          allOf:
          - $ref: '#/components/schemas/RightsizingRecommendationConfiguration'
          - description: You can use Configuration to customize recommendations across
              two attributes. You can choose to view recommendations for instances
              within the same instance families or across different instance families.
              You can also choose to view your estimated savings that are associated
              with recommendations with consideration of existing Savings Plans or
              RI benefits, or neither.
    GetRightsizingRecommendationRequest:
      type: object
      required:
      - Service
      title: GetRightsizingRecommendationRequest
      properties:
        Filter:
          $ref: '#/components/schemas/Expression'
        Configuration:
          allOf:
          - $ref: '#/components/schemas/RightsizingRecommendationConfiguration'
          - description: You can use Configuration to customize recommendations across
              two attributes. You can choose to view recommendations for instances
              within the same instance families or across different instance families.
              You can also choose to view your estimated savings that are associated
              with recommendations with consideration of existing Savings Plans or
              RI benefits, or neither.
        Service:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The specific service that you want recommendations for. The
              only valid value for GetRightsizingRecommendation is "AmazonEC2".
        PageSize:
          allOf:
          - $ref: '#/components/schemas/NonNegativeInteger'
          - description: The number of recommendations that you want returned in a
              single response object.
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The pagination token that indicates the next set of results
              that you want to retrieve.
    GetSavingsPlansCoverageResponse:
      type: object
      required:
      - SavingsPlansCoverages
      properties:
        SavingsPlansCoverages:
          allOf:
          - $ref: '#/components/schemas/SavingsPlansCoverages'
          - description: The amount of spend that your Savings Plans covered.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token to retrieve the next set of results. Amazon Web
              Services provides the token when the response from a previous call has
              more results than the maximum page size.
    GetSavingsPlansCoverageRequest:
      type: object
      required:
      - TimePeriod
      title: GetSavingsPlansCoverageRequest
      properties:
        TimePeriod:
          allOf:
          - $ref: '#/components/schemas/DateInterval'
          - description: The time period that you want the usage and costs for. The
              Start date must be within 13 months. The End date must be after the
              Start date, and before the current date. Future dates can't be used
              as an End date.
        GroupBy:
          allOf:
          - $ref: '#/components/schemas/GroupDefinitions'
          - description: You can group the data using the attributes INSTANCE_FAMILY,
              REGION, or SERVICE.
        Granularity:
          allOf:
          - $ref: '#/components/schemas/Granularity'
          - description: The granularity of the Amazon Web Services cost data for
              your Savings Plans. Granularity can't be set if GroupBy is set. The
              GetSavingsPlansCoverage operation supports only DAILY and MONTHLY granularities.
        Filter:
          allOf:
          - $ref: '#/components/schemas/Expression'
          - description: "Filters Savings Plans coverage data by dimensions. You can
              filter data for Savings Plans usage with the following dimensions: \
              \   LINKED_ACCOUNT     REGION     SERVICE     INSTANCE_FAMILY     GetSavingsPlansCoverage
              uses the same Expression object as the other operations, but only AND
              is supported among each dimension. If there are multiple values for
              a dimension, they are OR'd together. Cost category is also supported."
        Metrics:
          allOf:
          - $ref: '#/components/schemas/MetricNames'
          - description: The measurement that you want your Savings Plans coverage
              reported in. The only valid value is SpendCoveredBySavingsPlans.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token to retrieve the next set of results. Amazon Web
              Services provides the token when the response from a previous call has
              more results than the maximum page size.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The number of items to be returned in a response. The default
              is 20, with a minimum value of 1.
        SortBy:
          allOf:
          - $ref: '#/components/schemas/SortDefinition'
          - description: 'The value that you want to sort the data by. The following
              values are supported for Key:    SpendCoveredBySavingsPlan     OnDemandCost     CoveragePercentage     TotalCost     InstanceFamily     Region     Service    The
              supported values for SortOrder are ASCENDING and DESCENDING.'
    GetSavingsPlansPurchaseRecommendationResponse:
      type: object
      properties:
        Metadata:
          allOf:
          - $ref: '#/components/schemas/SavingsPlansPurchaseRecommendationMetadata'
          - description: Information that regards this specific recommendation set.
        SavingsPlansPurchaseRecommendation:
          allOf:
          - $ref: '#/components/schemas/SavingsPlansPurchaseRecommendation'
          - description: Contains your request parameters, Savings Plan Recommendations
              Summary, and Details.
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token for the next set of retrievable results. Amazon
              Web Services provides the token when the response from a previous call
              has more results than the maximum page size.
    GetSavingsPlansPurchaseRecommendationRequest:
      type: object
      required:
      - SavingsPlansType
      - TermInYears
      - PaymentOption
      - LookbackPeriodInDays
      title: GetSavingsPlansPurchaseRecommendationRequest
      properties:
        SavingsPlansType:
          allOf:
          - $ref: '#/components/schemas/SupportedSavingsPlansType'
          - description: The Savings Plans recommendation type that's requested.
        TermInYears:
          allOf:
          - $ref: '#/components/schemas/TermInYears'
          - description: The savings plan recommendation term that's used to generate
              these recommendations.
        PaymentOption:
          allOf:
          - $ref: '#/components/schemas/PaymentOption'
          - description: The payment option that's used to generate these recommendations.
        AccountScope:
          allOf:
          - $ref: '#/components/schemas/AccountScope'
          - description: The account scope that you want your recommendations for.
              Amazon Web Services calculates recommendations including the management
              account and member accounts if the value is set to PAYER. If the value
              is LINKED, recommendations are calculated for individual member accounts
              only.
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token to retrieve the next set of results. Amazon Web
              Services provides the token when the response from a previous call has
              more results than the maximum page size.
        PageSize:
          allOf:
          - $ref: '#/components/schemas/NonNegativeInteger'
          - description: The number of recommendations that you want returned in a
              single response object.
        LookbackPeriodInDays:
          allOf:
          - $ref: '#/components/schemas/LookbackPeriodInDays'
          - description: The lookback period that's used to generate the recommendation.
        Filter:
          allOf:
          - $ref: '#/components/schemas/Expression'
          - description: You can filter your recommendations by Account ID with the
              LINKED_ACCOUNT dimension. To filter your recommendations by Account
              ID, specify Key as LINKED_ACCOUNT and Value as the comma-separated Acount
              ID(s) that you want to see Savings Plans purchase recommendations for.
              For GetSavingsPlansPurchaseRecommendation, the Filter doesn't include
              CostCategories or Tags. It only includes Dimensions. With Dimensions,
              Key must be LINKED_ACCOUNT and Value can be a single Account ID or multiple
              comma-separated Account IDs that you want to see Savings Plans Purchase
              Recommendations for. AND and OR operators are not supported.
    GetSavingsPlansUtilizationResponse:
      type: object
      required:
      - Total
      properties:
        SavingsPlansUtilizationsByTime:
          allOf:
          - $ref: '#/components/schemas/SavingsPlansUtilizationsByTime'
          - description: The amount of cost/commitment that you used your Savings
              Plans. You can use it to specify date ranges.
        Total:
          allOf:
          - $ref: '#/components/schemas/SavingsPlansUtilizationAggregates'
          - description: The total amount of cost/commitment that you used your Savings
              Plans, regardless of date ranges.
    GetSavingsPlansUtilizationRequest:
      type: object
      required:
      - TimePeriod
      title: GetSavingsPlansUtilizationRequest
      properties:
        TimePeriod:
          allOf:
          - $ref: '#/components/schemas/DateInterval'
          - description: The time period that you want the usage and costs for. The
              Start date must be within 13 months. The End date must be after the
              Start date, and before the current date. Future dates can't be used
              as an End date.
        Granularity:
          allOf:
          - $ref: '#/components/schemas/Granularity'
          - description: The granularity of the Amazon Web Services utillization data
              for your Savings Plans. The GetSavingsPlansUtilization operation supports
              only DAILY and MONTHLY granularities.
        Filter:
          allOf:
          - $ref: '#/components/schemas/Expression'
          - description: 'Filters Savings Plans utilization coverage data for active
              Savings Plans dimensions. You can filter data with the following dimensions:    LINKED_ACCOUNT     SAVINGS_PLAN_ARN     SAVINGS_PLANS_TYPE     REGION     PAYMENT_OPTION     INSTANCE_TYPE_FAMILY     GetSavingsPlansUtilization
              uses the same Expression object as the other operations, but only AND
              is supported among each dimension.'
        SortBy:
          allOf:
          - $ref: '#/components/schemas/SortDefinition'
          - description: 'The value that you want to sort the data by. The following
              values are supported for Key:    UtilizationPercentage     TotalCommitment     UsedCommitment     UnusedCommitment     NetSavings    The
              supported values for SortOrder are ASCENDING and DESCENDING.'
    GetSavingsPlansUtilizationDetailsResponse:
      type: object
      required:
      - SavingsPlansUtilizationDetails
      - TimePeriod
      properties:
        SavingsPlansUtilizationDetails:
          allOf:
          - $ref: '#/components/schemas/SavingsPlansUtilizationDetails'
          - description: Retrieves a single daily or monthly Savings Plans utilization
              rate and details for your account.
        Total:
          allOf:
          - $ref: '#/components/schemas/SavingsPlansUtilizationAggregates'
          - description: The total Savings Plans utilization, regardless of time period.
        TimePeriod:
          $ref: '#/components/schemas/DateInterval'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token to retrieve the next set of results. Amazon Web
              Services provides the token when the response from a previous call has
              more results than the maximum page size.
    GetSavingsPlansUtilizationDetailsRequest:
      type: object
      required:
      - TimePeriod
      title: GetSavingsPlansUtilizationDetailsRequest
      properties:
        TimePeriod:
          allOf:
          - $ref: '#/components/schemas/DateInterval'
          - description: The time period that you want the usage and costs for. The
              Start date must be within 13 months. The End date must be after the
              Start date, and before the current date. Future dates can't be used
              as an End date.
        Filter:
          allOf:
          - $ref: '#/components/schemas/Expression'
          - description: 'Filters Savings Plans utilization coverage data for active
              Savings Plans dimensions. You can filter data with the following dimensions:    LINKED_ACCOUNT     SAVINGS_PLAN_ARN     REGION     PAYMENT_OPTION     INSTANCE_TYPE_FAMILY     GetSavingsPlansUtilizationDetails
              uses the same Expression object as the other operations, but only AND
              is supported among each dimension.'
        DataType:
          allOf:
          - $ref: '#/components/schemas/SavingsPlansDataTypes'
          - description: The data type.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token to retrieve the next set of results. Amazon Web
              Services provides the token when the response from a previous call has
              more results than the maximum page size.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The number of items to be returned in a response. The default
              is 20, with a minimum value of 1.
        SortBy:
          allOf:
          - $ref: '#/components/schemas/SortDefinition'
          - description: 'The value that you want to sort the data by. The following
              values are supported for Key:    UtilizationPercentage     TotalCommitment     UsedCommitment     UnusedCommitment     NetSavings     AmortizedRecurringCommitment     AmortizedUpfrontCommitment    The
              supported values for SortOrder are ASCENDING and DESCENDING.'
    GetTagsResponse:
      type: object
      required:
      - Tags
      - ReturnSize
      - TotalSize
      properties:
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token for the next set of retrievable results. Amazon
              Web Services provides the token when the response from a previous call
              has more results than the maximum page size.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags that match your request.
        ReturnSize:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The number of query results that Amazon Web Services returns
              at a time.
        TotalSize:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The total number of query results.
    GetTagsRequest:
      type: object
      required:
      - TimePeriod
      title: GetTagsRequest
      properties:
        SearchString:
          allOf:
          - $ref: '#/components/schemas/SearchString'
          - description: The value that you want to search for.
        TimePeriod:
          allOf:
          - $ref: '#/components/schemas/DateInterval'
          - description: The start and end dates for retrieving the dimension values.
              The start date is inclusive, but the end date is exclusive. For example,
              if start is 2017-01-01 and end is 2017-05-01, then the cost and usage
              data is retrieved from 2017-01-01 up to and including 2017-04-30 but
              not including 2017-05-01.
        TagKey:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: The key of the tag that you want to return values for.
        Filter:
          $ref: '#/components/schemas/Expression'
        SortBy:
          allOf:
          - $ref: '#/components/schemas/SortDefinitions'
          - description: "The value that you want to sort the data by. The key represents
              cost and usage metrics. The following values are supported:    BlendedCost\
              \     UnblendedCost     AmortizedCost     NetAmortizedCost     NetUnblendedCost\
              \     UsageQuantity     NormalizedUsageAmount    The supported values
              for SortOrder are ASCENDING and DESCENDING. When you use SortBy, NextPageToken
              and SearchString aren't supported."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: This field is only used when SortBy is provided in the request.
              The maximum number of objects that are returned for this request. If
              MaxResults isn't specified with SortBy, the request returns 1000 results
              as the default value for this parameter. For GetTags, MaxResults has
              an upper quota of 1000.
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token to retrieve the next set of results. Amazon Web
              Services provides the token when the response from a previous call has
              more results than the maximum page size.
    GetUsageForecastResponse:
      type: object
      properties:
        Total:
          allOf:
          - $ref: '#/components/schemas/MetricValue'
          - description: How much you're forecasted to use over the forecast period.
        ForecastResultsByTime:
          allOf:
          - $ref: '#/components/schemas/ForecastResultsByTime'
          - description: The forecasts for your query, in order. For DAILY forecasts,
              this is a list of days. For MONTHLY forecasts, this is a list of months.
    GetUsageForecastRequest:
      type: object
      required:
      - TimePeriod
      - Metric
      - Granularity
      title: GetUsageForecastRequest
      properties:
        TimePeriod:
          allOf:
          - $ref: '#/components/schemas/DateInterval'
          - description: The start and end dates of the period that you want to retrieve
              usage forecast for. The start date is included in the period, but the
              end date isn't included in the period. For example, if start is 2017-01-01
              and end is 2017-05-01, then the cost and usage data is retrieved from
              2017-01-01 up to and including 2017-04-30 but not including 2017-05-01.
              The start date must be equal to or later than the current date to avoid
              a validation error.
        Metric:
          allOf:
          - $ref: '#/components/schemas/Metric'
          - description: 'Which metric Cost Explorer uses to create your forecast.
              Valid values for a GetUsageForecast call are the following:   USAGE_QUANTITY   NORMALIZED_USAGE_AMOUNT'
        Granularity:
          allOf:
          - $ref: '#/components/schemas/Granularity'
          - description: How granular you want the forecast to be. You can get 3 months
              of DAILY forecasts or 12 months of MONTHLY forecasts. The GetUsageForecast
              operation supports only DAILY and MONTHLY granularities.
        Filter:
          allOf:
          - $ref: '#/components/schemas/Expression'
          - description: 'The filters that you want to use to filter your forecast.
              The GetUsageForecast API supports filtering by the following dimensions:    AZ     INSTANCE_TYPE     LINKED_ACCOUNT     LINKED_ACCOUNT_NAME     OPERATION     PURCHASE_TYPE     REGION     SERVICE     USAGE_TYPE     USAGE_TYPE_GROUP     RECORD_TYPE     OPERATING_SYSTEM     TENANCY     SCOPE     PLATFORM     SUBSCRIPTION_ID     LEGAL_ENTITY_NAME     DEPLOYMENT_OPTION     DATABASE_ENGINE     INSTANCE_TYPE_FAMILY     BILLING_ENTITY     RESERVATION_ID     SAVINGS_PLAN_ARN'
        PredictionIntervalLevel:
          allOf:
          - $ref: '#/components/schemas/PredictionIntervalLevel'
          - description: Amazon Web Services Cost Explorer always returns the mean
              forecast as a single point. You can request a prediction interval around
              the mean by specifying a confidence level. The higher the confidence
              level, the more confident Cost Explorer is about the actual value falling
              in the prediction interval. Higher confidence levels result in wider
              prediction intervals.
    UnresolvableUsageUnitException: {}
    ListCostAllocationTagsResponse:
      type: object
      properties:
        CostAllocationTags:
          allOf:
          - $ref: '#/components/schemas/CostAllocationTagList'
          - description: A list of cost allocation tags that includes the detailed
              metadata for each one.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token to retrieve the next set of results. Amazon Web
              Services provides the token when the response from a previous call has
              more results than the maximum page size.
    ListCostAllocationTagsRequest:
      type: object
      title: ListCostAllocationTagsRequest
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/CostAllocationTagStatus'
          - description: The status of cost allocation tag keys that are returned
              for this request.
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/CostAllocationTagKeyList'
          - description: The list of cost allocation tag keys that are returned for
              this request.
        Type:
          allOf:
          - $ref: '#/components/schemas/CostAllocationTagType'
          - description: The type of CostAllocationTag object that are returned for
              this request. The AWSGenerated type tags are tags that Amazon Web Services
              defines and applies to support Amazon Web Services resources for cost
              allocation purposes. The UserDefined type tags are tags that you define,
              create, and apply to resources.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token to retrieve the next set of results. Amazon Web
              Services provides the token when the response from a previous call has
              more results than the maximum page size.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/CostAllocationTagsMaxResults'
          - description: The maximum number of objects that are returned for this
              request. By default, the request returns 100 results.
    ListCostCategoryDefinitionsResponse:
      type: object
      properties:
        CostCategoryReferences:
          allOf:
          - $ref: '#/components/schemas/CostCategoryReferencesList'
          - description: A reference to a Cost Category that contains enough information
              to identify the Cost Category.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token to retrieve the next set of results. Amazon Web
              Services provides the token when the response from a previous call has
              more results than the maximum page size.
    ListCostCategoryDefinitionsRequest:
      type: object
      title: ListCostCategoryDefinitionsRequest
      properties:
        EffectiveOn:
          allOf:
          - $ref: '#/components/schemas/ZonedDateTime'
          - description: The date when the Cost Category was effective.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token to retrieve the next set of results. Amazon Web
              Services provides the token when the response from a previous call has
              more results than the maximum page size.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/CostCategoryMaxResults'
          - description: The number of entries a paginated response contains.
    ListSavingsPlansPurchaseRecommendationGenerationResponse:
      type: object
      properties:
        GenerationSummaryList:
          allOf:
          - $ref: '#/components/schemas/GenerationSummaryList'
          - description: The list of historical recommendation generations.
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token to retrieve the next set of results.
    ListSavingsPlansPurchaseRecommendationGenerationRequest:
      type: object
      title: ListSavingsPlansPurchaseRecommendationGenerationRequest
      properties:
        GenerationStatus:
          allOf:
          - $ref: '#/components/schemas/GenerationStatus'
          - description: The status of the recommendation generation.
        RecommendationIds:
          allOf:
          - $ref: '#/components/schemas/RecommendationIdList'
          - description: The IDs for each specific recommendation.
        PageSize:
          allOf:
          - $ref: '#/components/schemas/NonNegativeInteger'
          - description: The number of recommendations that you want returned in a
              single response object.
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/NextPageToken'
          - description: The token to retrieve the next set of results.
    ListTagsForResourceResponse:
      type: object
      properties:
        ResourceTags:
          allOf:
          - $ref: '#/components/schemas/ResourceTagList'
          - description: A list of tag key value pairs that are associated with the
              resource.
    ListTagsForResourceRequest:
      type: object
      required:
      - ResourceArn
      title: ListTagsForResourceRequest
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the resource. For a list
              of supported resources, see ResourceTag.
    ProvideAnomalyFeedbackResponse:
      type: object
      required:
      - AnomalyId
      properties:
        AnomalyId:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The ID of the modified cost anomaly.
    ProvideAnomalyFeedbackRequest:
      type: object
      required:
      - AnomalyId
      - Feedback
      title: ProvideAnomalyFeedbackRequest
      properties:
        AnomalyId:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: A cost anomaly ID.
        Feedback:
          allOf:
          - $ref: '#/components/schemas/AnomalyFeedbackType'
          - description: Describes whether the cost anomaly was a planned activity
              or you considered it an anomaly.
    StartSavingsPlansPurchaseRecommendationGenerationResponse:
      type: object
      properties:
        RecommendationId:
          allOf:
          - $ref: '#/components/schemas/RecommendationId'
          - description: The ID for this specific recommendation.
        GenerationStartedTime:
          allOf:
          - $ref: '#/components/schemas/ZonedDateTime'
          - description: The start time of the recommendation generation.
        EstimatedCompletionTime:
          allOf:
          - $ref: '#/components/schemas/ZonedDateTime'
          - description: The estimated time for when the recommendation generation
              will complete.
    StartSavingsPlansPurchaseRecommendationGenerationRequest:
      type: object
      title: StartSavingsPlansPurchaseRecommendationGenerationRequest
      properties: {}
    GenerationExistsException: {}
    TagResourceResponse:
      type: object
      properties: {}
    TagResourceRequest:
      type: object
      required:
      - ResourceArn
      - ResourceTags
      title: TagResourceRequest
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the resource. For a list
              of supported resources, see ResourceTag.
        ResourceTags:
          allOf:
          - $ref: '#/components/schemas/ResourceTagList'
          - description: 'A list of tag key-value pairs to be added to the resource.
              Each tag consists of a key and a value, and each key must be unique
              for the resource. The following restrictions apply to resource tags:   Although
              the maximum number of array members is 200, you can assign a maximum
              of 50 user-tags to one resource. The remaining are reserved for Amazon
              Web Services use   The maximum length of a key is 128 characters   The
              maximum length of a value is 256 characters   Keys and values can only
              contain alphanumeric characters, spaces, and any of the following: _.:/=+@-    Keys
              and values are case sensitive   Keys and values are trimmed for any
              leading or trailing whitespaces   Don’t use aws: as a prefix for your
              keys. This prefix is reserved for Amazon Web Services use'
    TooManyTagsException: {}
    UntagResourceResponse:
      type: object
      properties: {}
    UntagResourceRequest:
      type: object
      required:
      - ResourceArn
      - ResourceTagKeys
      title: UntagResourceRequest
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the resource. For a list
              of supported resources, see ResourceTag.
        ResourceTagKeys:
          allOf:
          - $ref: '#/components/schemas/ResourceTagKeyList'
          - description: A list of tag keys associated with tags that need to be removed
              from the resource. If you specify a tag key that doesn't exist, it's
              ignored. Although the maximum number of array members is 200, user-tag
              maximum is 50. The remaining are reserved for Amazon Web Services use.
    UpdateAnomalyMonitorResponse:
      type: object
      required:
      - MonitorArn
      properties:
        MonitorArn:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: A cost anomaly monitor ARN.
    UpdateAnomalyMonitorRequest:
      type: object
      required:
      - MonitorArn
      title: UpdateAnomalyMonitorRequest
      properties:
        MonitorArn:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: Cost anomaly monitor Amazon Resource Names (ARNs).
        MonitorName:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The new name for the cost anomaly monitor.
    UpdateAnomalySubscriptionResponse:
      type: object
      required:
      - SubscriptionArn
      properties:
        SubscriptionArn:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: A cost anomaly subscription ARN.
    UpdateAnomalySubscriptionRequest:
      type: object
      required:
      - SubscriptionArn
      title: UpdateAnomalySubscriptionRequest
      properties:
        SubscriptionArn:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: A cost anomaly subscription Amazon Resource Name (ARN).
        Threshold:
          allOf:
          - $ref: '#/components/schemas/NullableNonNegativeDouble'
          - deprecated: true
            description: (deprecated) The update to the threshold value for receiving
              notifications.  This field has been deprecated. To update a threshold,
              use ThresholdExpression. Continued use of Threshold will be treated
              as shorthand syntax for a ThresholdExpression.Threshold has been deprecated
              in favor of ThresholdExpression
        Frequency:
          allOf:
          - $ref: '#/components/schemas/AnomalySubscriptionFrequency'
          - description: The update to the frequency value that subscribers receive
              notifications.
        MonitorArnList:
          allOf:
          - $ref: '#/components/schemas/MonitorArnList'
          - description: A list of cost anomaly monitor ARNs.
        Subscribers:
          allOf:
          - $ref: '#/components/schemas/Subscribers'
          - description: The update to the subscriber list.
        SubscriptionName:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The new name of the subscription.
        ThresholdExpression:
          allOf:
          - $ref: '#/components/schemas/Expression'
          - description: 'The update to the Expression object used to specify the
              anomalies that you want to generate alerts for. This supports dimensions
              and nested expressions. The supported dimensions are ANOMALY_TOTAL_IMPACT_ABSOLUTE
              and ANOMALY_TOTAL_IMPACT_PERCENTAGE. The supported nested expression
              types are AND and OR. The match option GREATER_THAN_OR_EQUAL is required.
              Values must be numbers between 0 and 10,000,000,000. The following are
              examples of valid ThresholdExpressions:   Absolute threshold: { "Dimensions":
              { "Key": "ANOMALY_TOTAL_IMPACT_ABSOLUTE", "MatchOptions": [ "GREATER_THAN_OR_EQUAL"
              ], "Values": [ "100" ] } }    Percentage threshold: { "Dimensions":
              { "Key": "ANOMALY_TOTAL_IMPACT_PERCENTAGE", "MatchOptions": [ "GREATER_THAN_OR_EQUAL"
              ], "Values": [ "100" ] } }     AND two thresholds together: { "And":
              [ { "Dimensions": { "Key": "ANOMALY_TOTAL_IMPACT_ABSOLUTE", "MatchOptions":
              [ "GREATER_THAN_OR_EQUAL" ], "Values": [ "100" ] } }, { "Dimensions":
              { "Key": "ANOMALY_TOTAL_IMPACT_PERCENTAGE", "MatchOptions": [ "GREATER_THAN_OR_EQUAL"
              ], "Values": [ "100" ] } } ] }     OR two thresholds together: { "Or":
              [ { "Dimensions": { "Key": "ANOMALY_TOTAL_IMPACT_ABSOLUTE", "MatchOptions":
              [ "GREATER_THAN_OR_EQUAL" ], "Values": [ "100" ] } }, { "Dimensions":
              { "Key": "ANOMALY_TOTAL_IMPACT_PERCENTAGE", "MatchOptions": [ "GREATER_THAN_OR_EQUAL"
              ], "Values": [ "100" ] } } ] }'
    UpdateCostAllocationTagsStatusResponse:
      type: object
      properties:
        Errors:
          allOf:
          - $ref: '#/components/schemas/UpdateCostAllocationTagsStatusErrors'
          - description: A list of UpdateCostAllocationTagsStatusError objects with
              error details about each cost allocation tag that can't be updated.
              If there's no failure, an empty array returns.
    UpdateCostAllocationTagsStatusRequest:
      type: object
      required:
      - CostAllocationTagsStatus
      title: UpdateCostAllocationTagsStatusRequest
      properties:
        CostAllocationTagsStatus:
          allOf:
          - $ref: '#/components/schemas/CostAllocationTagStatusList'
          - description: The list of CostAllocationTagStatusEntry objects that are
              used to update cost allocation tags status for this request.
    UpdateCostCategoryDefinitionResponse:
      type: object
      properties:
        CostCategoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The unique identifier for your Cost Category.
        EffectiveStart:
          allOf:
          - $ref: '#/components/schemas/ZonedDateTime'
          - description: The Cost Category's effective start date. It can only be
              a billing start date (first day of the month).
    UpdateCostCategoryDefinitionRequest:
      type: object
      required:
      - CostCategoryArn
      - RuleVersion
      - Rules
      title: UpdateCostCategoryDefinitionRequest
      properties:
        CostCategoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The unique identifier for your Cost Category.
        EffectiveStart:
          allOf:
          - $ref: '#/components/schemas/ZonedDateTime'
          - description: The Cost Category's effective start date. It can only be
              a billing start date (first day of the month). If the date isn't provided,
              it's the first day of the current month. Dates can't be before the previous
              twelve months, or in the future.
        RuleVersion:
          $ref: '#/components/schemas/CostCategoryRuleVersion'
        Rules:
          allOf:
          - $ref: '#/components/schemas/CostCategoryRulesList'
          - description: The Expression object used to categorize costs. For more
              information, see CostCategoryRule .
        DefaultValue:
          $ref: '#/components/schemas/CostCategoryValue'
        SplitChargeRules:
          allOf:
          - $ref: '#/components/schemas/CostCategorySplitChargeRulesList'
          - description: The split charge rules used to allocate your charges between
              your Cost Category values.
    AccountScope:
      type: string
      enum:
      - PAYER
      - LINKED
    AmortizedRecurringFee:
      type: string
    AmortizedUpfrontFee:
      type: string
    Anomaly:
      type: object
      required:
      - AnomalyId
      - AnomalyScore
      - Impact
      - MonitorArn
      properties:
        AnomalyId:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The unique identifier for the anomaly.
        AnomalyStartDate:
          allOf:
          - $ref: '#/components/schemas/YearMonthDay'
          - description: The first day the anomaly is detected.
        AnomalyEndDate:
          allOf:
          - $ref: '#/components/schemas/YearMonthDay'
          - description: The last day the anomaly is detected.
        DimensionValue:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The dimension for the anomaly (for example, an Amazon Web
              Service in a service monitor).
        RootCauses:
          allOf:
          - $ref: '#/components/schemas/RootCauses'
          - description: The list of identified root causes for the anomaly.
        AnomalyScore:
          allOf:
          - $ref: '#/components/schemas/AnomalyScore'
          - description: The latest and maximum score for the anomaly.
        Impact:
          allOf:
          - $ref: '#/components/schemas/Impact'
          - description: The dollar impact for the anomaly.
        MonitorArn:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The Amazon Resource Name (ARN) for the cost monitor that
              generated this anomaly.
        Feedback:
          allOf:
          - $ref: '#/components/schemas/AnomalyFeedbackType'
          - description: The feedback value.
      description: An unusual cost pattern. This consists of the detailed metadata
        and the current status of the anomaly object.
    Anomalies:
      type: array
      items:
        $ref: '#/components/schemas/Anomaly'
    GenericString:
      type: string
      pattern: '[\S\s]*'
      minLength: 0
      maxLength: 1024
    YearMonthDay:
      type: string
      pattern: (\d{4}-\d{2}-\d{2})(T\d{2}:\d{2}:\d{2}Z)?
      minLength: 0
      maxLength: 40
    RootCauses:
      type: array
      items:
        $ref: '#/components/schemas/RootCause'
    AnomalyScore:
      type: object
      required:
      - MaxScore
      - CurrentScore
      properties:
        MaxScore:
          allOf:
          - $ref: '#/components/schemas/GenericDouble'
          - description: The maximum score that's observed during the AnomalyDateInterval.
        CurrentScore:
          allOf:
          - $ref: '#/components/schemas/GenericDouble'
          - description: The last observed score.
      description: Quantifies the anomaly. The higher score means that it's more anomalous.
    Impact:
      type: object
      required:
      - MaxImpact
      properties:
        MaxImpact:
          allOf:
          - $ref: '#/components/schemas/GenericDouble'
          - description: The maximum dollar value that's observed for an anomaly.
        TotalImpact:
          allOf:
          - $ref: '#/components/schemas/GenericDouble'
          - description: The cumulative dollar difference between the total actual
              spend and total expected spend. It is calculated as TotalActualSpend
              - TotalExpectedSpend.
        TotalActualSpend:
          allOf:
          - $ref: '#/components/schemas/NullableNonNegativeDouble'
          - description: The cumulative dollar amount that was actually spent during
              the anomaly.
        TotalExpectedSpend:
          allOf:
          - $ref: '#/components/schemas/NullableNonNegativeDouble'
          - description: The cumulative dollar amount that was expected to be spent
              during the anomaly. It is calculated using advanced machine learning
              models to determine the typical spending pattern based on historical
              data for a customer.
        TotalImpactPercentage:
          allOf:
          - $ref: '#/components/schemas/NullableNonNegativeDouble'
          - description: The cumulative percentage difference between the total actual
              spend and total expected spend. It is calculated as (TotalImpact / TotalExpectedSpend)
              * 100. When TotalExpectedSpend is zero, this field is omitted. Expected
              spend can be zero in situations such as when you start to use a service
              for the first time.
      description: The dollar value of the anomaly.
    AnomalyFeedbackType:
      type: string
      enum:
      - YES
      - NO
      - PLANNED_ACTIVITY
    AnomalyDateInterval:
      type: object
      required:
      - StartDate
      properties:
        StartDate:
          allOf:
          - $ref: '#/components/schemas/YearMonthDay'
          - description: The first date an anomaly was observed.
        EndDate:
          allOf:
          - $ref: '#/components/schemas/YearMonthDay'
          - description: The last date an anomaly was observed.
      description: The time period for an anomaly.
    MonitorType:
      type: string
      enum:
      - DIMENSIONAL
      - CUSTOM
    MonitorDimension:
      type: string
      enum:
      - SERVICE
    # Expression:
    #   type: object
    #   properties:
    #     Or:
    #       allOf:
    #       - $ref: '#/components/schemas/Expressions'
    #       - description: Return results that match either Dimension object.
    #     And:
    #       allOf:
    #       - $ref: '#/components/schemas/Expressions'
    #       - description: Return results that match both Dimension objects.
    #     Not:
    #       type: object
    #       additionalProperties: true  # <-- Replaces direct recursion with a flexible object
    #       description: Return results that don't match a Dimension object.
    #     Dimensions:
    #       allOf:
    #       - $ref: '#/components/schemas/DimensionValues'
    #       - description: The specific Dimension to use for Expression.
    #     Tags:
    #       allOf:
    #       - $ref: '#/components/schemas/TagValues'
    #       - description: The specific Tag to use for Expression.
    #     CostCategories:
    #       allOf:
    #       - $ref: '#/components/schemas/CostCategoryValues'
    #       - description: The filter that's based on CostCategory values.
    #   description: "Use Expression to filter in various Cost Explorer APIs. Not all
    #     Expression types are supported in each API. Refer to the documentation for
    #     each specific API to see what is supported. There are two patterns:   Simple
    #     dimension values.   There are three types of simple dimension values: CostCategories,
    #     Tags, and Dimensions.   Specify the CostCategories field to define a filter
    #     that acts on Cost Categories.   Specify the Tags field to define a filter
    #     that acts on Cost Allocation Tags.   Specify the Dimensions field to define
    #     a filter that acts on the  DimensionValues .     For each filter type, you
    #     can set the dimension name and values for the filters that you plan to use.\
    #     \   For example, you can filter for REGION==us-east-1 OR REGION==us-west-1.
    #     For GetRightsizingRecommendation, the Region is a full name (for example,
    #     REGION==US East (N. Virginia).   The corresponding Expression for this example
    #     is as follows: { \"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\"\
    #     , “us-west-1” ] } }    As shown in the previous example, lists of dimension
    #     values are combined with OR when applying the filter.     You can also set
    #     different match options to further control how the filter behaves. Not all
    #     APIs support match options. Refer to the documentation for each specific API
    #     to see what is supported.   For example, you can filter for linked account
    #     names that start with “a”.   The corresponding Expression for this example
    #     is as follows: { \"Dimensions\": { \"Key\": \"LINKED_ACCOUNT_NAME\", \"MatchOptions\"\
    #     : [ \"STARTS_WITH\" ], \"Values\": [ \"a\" ] } }        Compound Expression
    #     types with logical operations.   You can use multiple Expression types and
    #     the logical operators AND/OR/NOT to create a list of one or more Expression
    #     objects. By doing this, you can filter by more advanced options.   For example,
    #     you can filter by ((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type
    #     == Type1)) AND (USAGE_TYPE != DataTransfer).   The corresponding Expression
    #     for this example is as follows: { \"And\": [ {\"Or\": [ {\"Dimensions\": {
    #     \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"\
    #     Tags\": { \"Key\": \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\"
    #     : {\"Dimensions\": { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"\
    #     ] }}} ] }      Because each Expression can have only one operator, the service
    #     returns an error if more than one is specified. The following example shows
    #     an Expression object that creates an error:  { \"And\": [ ... ], \"Dimensions\"\
    #     : { \"Key\": \"USAGE_TYPE\", \"Values\": [ \"DataTransfer\" ] } }   The following
    #     is an example of the corresponding error message: \"Expression has more than
    #     one roots. Only one root operator is allowed for each expression: And, Or,
    #     Not, Dimensions, Tags, CostCategories\"      For the GetRightsizingRecommendation
    #     action, a combination of OR and NOT isn't supported. OR isn't supported between
    #     different dimensions, or dimensions and tags. NOT operators aren't supported.
    #     Dimensions are also limited to LINKED_ACCOUNT, REGION, or RIGHTSIZING_TYPE.
    #     For the GetReservationPurchaseRecommendation action, only NOT is supported.
    #     AND and OR aren't supported. Dimensions are limited to LINKED_ACCOUNT."
    Expression:
      type: object
      additionalProperties: true  # <-- Allows any key-value pairs (fully flexible)
      description: "Use Expression to filter in various Cost Explorer APIs. Not all \
        Expression types are supported in each API. Refer to the documentation for \
        each specific API to see what is supported. There are two patterns: \
        Simple dimension values and Compound Expressions with logical operations."
    NonNegativeInteger:
      type: integer
      minimum: 0
    AnomalyMonitor:
      type: object
      required:
      - MonitorName
      - MonitorType
      properties:
        MonitorArn:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The Amazon Resource Name (ARN) value.
        MonitorName:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The name of the monitor.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/YearMonthDay'
          - description: The date when the monitor was created.
        LastUpdatedDate:
          allOf:
          - $ref: '#/components/schemas/YearMonthDay'
          - description: The date when the monitor was last updated.
        LastEvaluatedDate:
          allOf:
          - $ref: '#/components/schemas/YearMonthDay'
          - description: The date when the monitor last evaluated for anomalies.
        MonitorType:
          allOf:
          - $ref: '#/components/schemas/MonitorType'
          - description: The possible type values.
        MonitorDimension:
          allOf:
          - $ref: '#/components/schemas/MonitorDimension'
          - description: The dimensions to evaluate.
        MonitorSpecification:
          $ref: '#/components/schemas/Expression'
        DimensionalValueCount:
          allOf:
          - $ref: '#/components/schemas/NonNegativeInteger'
          - description: The value for evaluated dimensions.
      description: This object continuously inspects your account's cost data for
        anomalies. It's based on MonitorType and MonitorSpecification. The content
        consists of detailed metadata and the current status of the monitor object.
    AnomalyMonitors:
      type: array
      items:
        $ref: '#/components/schemas/AnomalyMonitor'
    GenericDouble:
      type: number
      format: double
    MonitorArnList:
      type: array
      items:
        $ref: '#/components/schemas/Arn'
    Subscribers:
      type: array
      items:
        $ref: '#/components/schemas/Subscriber'
    NullableNonNegativeDouble:
      type: number
      format: double
      minimum: 0
    AnomalySubscriptionFrequency:
      type: string
      enum:
      - DAILY
      - IMMEDIATE
      - WEEKLY
    AnomalySubscription:
      type: object
      required:
      - MonitorArnList
      - Subscribers
      - Frequency
      - SubscriptionName
      properties:
        SubscriptionArn:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The AnomalySubscription Amazon Resource Name (ARN).
        AccountId:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: Your unique account identifier.
        MonitorArnList:
          allOf:
          - $ref: '#/components/schemas/MonitorArnList'
          - description: A list of cost anomaly monitors.
        Subscribers:
          allOf:
          - $ref: '#/components/schemas/Subscribers'
          - description: A list of subscribers to notify.
        Threshold:
          allOf:
          - $ref: '#/components/schemas/NullableNonNegativeDouble'
          - deprecated: true
            description: (deprecated) The dollar value that triggers a notification
              if the threshold is exceeded.  This field has been deprecated. To specify
              a threshold, use ThresholdExpression. Continued use of Threshold will
              be treated as shorthand syntax for a ThresholdExpression. One of Threshold
              or ThresholdExpression is required for this resource.Threshold has been
              deprecated in favor of ThresholdExpression
        Frequency:
          allOf:
          - $ref: '#/components/schemas/AnomalySubscriptionFrequency'
          - description: The frequency that anomaly reports are sent over email.
        SubscriptionName:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The name for the subscription.
        ThresholdExpression:
          allOf:
          - $ref: '#/components/schemas/Expression'
          - description: 'An Expression object used to specify the anomalies that
              you want to generate alerts for. This supports dimensions and nested
              expressions. The supported dimensions are ANOMALY_TOTAL_IMPACT_ABSOLUTE
              and ANOMALY_TOTAL_IMPACT_PERCENTAGE. The supported nested expression
              types are AND and OR. The match option GREATER_THAN_OR_EQUAL is required.
              Values must be numbers between 0 and 10,000,000,000. One of Threshold
              or ThresholdExpression is required for this resource. The following
              are examples of valid ThresholdExpressions:   Absolute threshold: {
              "Dimensions": { "Key": "ANOMALY_TOTAL_IMPACT_ABSOLUTE", "MatchOptions":
              [ "GREATER_THAN_OR_EQUAL" ], "Values": [ "100" ] } }    Percentage threshold:
              { "Dimensions": { "Key": "ANOMALY_TOTAL_IMPACT_PERCENTAGE", "MatchOptions":
              [ "GREATER_THAN_OR_EQUAL" ], "Values": [ "100" ] } }     AND two thresholds
              together: { "And": [ { "Dimensions": { "Key": "ANOMALY_TOTAL_IMPACT_ABSOLUTE",
              "MatchOptions": [ "GREATER_THAN_OR_EQUAL" ], "Values": [ "100" ] } },
              { "Dimensions": { "Key": "ANOMALY_TOTAL_IMPACT_PERCENTAGE", "MatchOptions":
              [ "GREATER_THAN_OR_EQUAL" ], "Values": [ "100" ] } } ] }     OR two
              thresholds together: { "Or": [ { "Dimensions": { "Key": "ANOMALY_TOTAL_IMPACT_ABSOLUTE",
              "MatchOptions": [ "GREATER_THAN_OR_EQUAL" ], "Values": [ "100" ] } },
              { "Dimensions": { "Key": "ANOMALY_TOTAL_IMPACT_PERCENTAGE", "MatchOptions":
              [ "GREATER_THAN_OR_EQUAL" ], "Values": [ "100" ] } } ] }'
      description: The association between a monitor, threshold, and list of subscribers
        used to deliver notifications about anomalies detected by a monitor that exceeds
        a threshold. The content consists of the detailed metadata and the current
        status of the AnomalySubscription object.
    AnomalySubscriptions:
      type: array
      items:
        $ref: '#/components/schemas/AnomalySubscription'
    Arn:
      type: string
      pattern: arn:aws[-a-z0-9]*:[a-z0-9]+:[-a-z0-9]*:[0-9]{12}:[-a-zA-Z0-9/:_]+
      minLength: 20
      maxLength: 2048
    AttributeType:
      type: string
    AttributeValue:
      type: string
    Attributes:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/AttributeValue'
    Context:
      type: string
      enum:
      - COST_AND_USAGE
      - RESERVATIONS
      - SAVINGS_PLANS
    TagKey:
      type: string
      pattern: '[\S\s]*'
      minLength: 0
      maxLength: 1024
    CostAllocationTagType:
      type: string
      enum:
      - AWSGenerated
      - UserDefined
    CostAllocationTagStatus:
      type: string
      enum:
      - Active
      - Inactive
    CostAllocationTag:
      type: object
      required:
      - TagKey
      - Type
      - Status
      properties:
        TagKey:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: The key for the cost allocation tag.
        Type:
          allOf:
          - $ref: '#/components/schemas/CostAllocationTagType'
          - description: The type of cost allocation tag. You can use AWSGenerated
              or UserDefined type tags. AWSGenerated type tags are tags that Amazon
              Web Services defines and applies to support Amazon Web Services resources
              for cost allocation purposes. UserDefined type tags are tags that you
              define, create, and apply to resources.
        Status:
          allOf:
          - $ref: '#/components/schemas/CostAllocationTagStatus'
          - description: The status of a cost allocation tag.
      description: The cost allocation tag structure. This includes detailed metadata
        for the CostAllocationTag object.
    CostAllocationTagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      minItems: 1
      maxItems: 100
    CostAllocationTagList:
      type: array
      items:
        $ref: '#/components/schemas/CostAllocationTag'
      minItems: 0
      maxItems: 100
    CostAllocationTagStatusEntry:
      type: object
      required:
      - TagKey
      - Status
      properties:
        TagKey:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: The key for the cost allocation tag.
        Status:
          allOf:
          - $ref: '#/components/schemas/CostAllocationTagStatus'
          - description: The status of a cost allocation tag.
      description: The cost allocation tag status. The status of a key can either
        be active or inactive.
    CostAllocationTagStatusList:
      type: array
      items:
        $ref: '#/components/schemas/CostAllocationTagStatusEntry'
      minItems: 1
      maxItems: 20
    CostAllocationTagsMaxResults:
      type: integer
      minimum: 1
      maximum: 1000
    ZonedDateTime:
      type: string
      pattern: ^\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d(([+-]\d\d:\d\d)|Z)$
      description: The period of time that you want the usage and costs for.
      minLength: 20
      maxLength: 25
    CostCategoryName:
      type: string
      description: The unique name of the Cost Category.
      minLength: 1
      maxLength: 50
      x-pattern: ^\(\?! \)[\p\{L\}\p\{N\}\p\{Z\}-_]*$
    CostCategoryRuleVersion:
      type: string
      enum:
      - CostCategoryExpression.v1
      description: The rule schema version in this particular Cost Category.
    CostCategoryRulesList:
      type: array
      items:
        $ref: '#/components/schemas/CostCategoryRule'
      minItems: 1
      maxItems: 500
    CostCategorySplitChargeRulesList:
      type: array
      items:
        $ref: '#/components/schemas/CostCategorySplitChargeRule'
      minItems: 1
      maxItems: 10
    CostCategoryProcessingStatusList:
      type: array
      items:
        $ref: '#/components/schemas/CostCategoryProcessingStatus'
    CostCategoryValue:
      type: string
      description: The default value for the cost category.
      minLength: 1
      maxLength: 50
      x-pattern: ^\(\?! \)[\p\{L\}\p\{N\}\p\{Z\}-_]*$
    CostCategory:
      type: object
      required:
      - CostCategoryArn
      - EffectiveStart
      - Name
      - RuleVersion
      - Rules
      properties:
        CostCategoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The unique identifier for your Cost Category.
        EffectiveStart:
          allOf:
          - $ref: '#/components/schemas/ZonedDateTime'
          - description: The effective start date of your Cost Category.
        EffectiveEnd:
          allOf:
          - $ref: '#/components/schemas/ZonedDateTime'
          - description: The effective end date of your Cost Category.
        Name:
          $ref: '#/components/schemas/CostCategoryName'
        RuleVersion:
          $ref: '#/components/schemas/CostCategoryRuleVersion'
        Rules:
          allOf:
          - $ref: '#/components/schemas/CostCategoryRulesList'
          - description: The rules are processed in order. If there are multiple rules
              that match the line item, then the first rule to match is used to determine
              that Cost Category value.
        SplitChargeRules:
          allOf:
          - $ref: '#/components/schemas/CostCategorySplitChargeRulesList'
          - description: The split charge rules that are used to allocate your charges
              between your Cost Category values.
        ProcessingStatus:
          allOf:
          - $ref: '#/components/schemas/CostCategoryProcessingStatusList'
          - description: The list of processing statuses for Cost Management products
              for a specific cost category.
        DefaultValue:
          $ref: '#/components/schemas/CostCategoryValue'
      description: The structure of Cost Categories. This includes detailed metadata
        and the set of rules for the CostCategory object.
    CostCategoryInheritedValueDimensionName:
      type: string
      enum:
      - LINKED_ACCOUNT_NAME
      - TAG
    CostCategoryInheritedValueDimension:
      type: object
      properties:
        DimensionName:
          allOf:
          - $ref: '#/components/schemas/CostCategoryInheritedValueDimensionName'
          - description: The name of the dimension that's used to group costs. If
              you specify LINKED_ACCOUNT_NAME, the cost category value is based on
              account name. If you specify TAG, the cost category value is based on
              the value of the specified tag key.
        DimensionKey:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The key to extract cost category values.
      description: When you create or update a cost category, you can define the CostCategoryRule
        rule type as INHERITED_VALUE. This rule type adds the flexibility to define
        a rule that dynamically inherits the cost category value from the dimension
        value that's defined by CostCategoryInheritedValueDimension. For example,
        suppose that you want to dynamically group costs that are based on the value
        of a specific tag key. First, choose an inherited value rule type, and then
        choose the tag dimension and specify the tag key to use.
    CostCategoryMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    CostCategoryNamesList:
      type: array
      items:
        $ref: '#/components/schemas/CostCategoryName'
    CostCategoryStatusComponent:
      type: string
      enum:
      - COST_EXPLORER
    CostCategoryStatus:
      type: string
      enum:
      - PROCESSING
      - APPLIED
    CostCategoryProcessingStatus:
      type: object
      properties:
        Component:
          allOf:
          - $ref: '#/components/schemas/CostCategoryStatusComponent'
          - description: The Cost Management product name of the applied status.
        Status:
          allOf:
          - $ref: '#/components/schemas/CostCategoryStatus'
          - description: The process status for a specific cost category.
      description: The list of processing statuses for Cost Management products for
        a specific cost category.
    CostCategoryValuesList:
      type: array
      items:
        $ref: '#/components/schemas/CostCategoryValue'
    CostCategoryReference:
      type: object
      properties:
        CostCategoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The unique identifier for your Cost Category.
        Name:
          $ref: '#/components/schemas/CostCategoryName'
        EffectiveStart:
          allOf:
          - $ref: '#/components/schemas/ZonedDateTime'
          - description: The Cost Category's effective start date.
        EffectiveEnd:
          allOf:
          - $ref: '#/components/schemas/ZonedDateTime'
          - description: The Cost Category's effective end date.
        NumberOfRules:
          allOf:
          - $ref: '#/components/schemas/NonNegativeInteger'
          - description: The number of rules that are associated with a specific Cost
              Category.
        ProcessingStatus:
          allOf:
          - $ref: '#/components/schemas/CostCategoryProcessingStatusList'
          - description: The list of processing statuses for Cost Management products
              for a specific cost category.
        Values:
          allOf:
          - $ref: '#/components/schemas/CostCategoryValuesList'
          - description: A list of unique cost category values in a specific cost
              category.
        DefaultValue:
          $ref: '#/components/schemas/CostCategoryValue'
      description: A reference to a Cost Category containing only enough information
        to identify the Cost Category. You can use this information to retrieve the
        full Cost Category information using DescribeCostCategory.
    CostCategoryReferencesList:
      type: array
      items:
        $ref: '#/components/schemas/CostCategoryReference'
    CostCategoryRuleType:
      type: string
      enum:
      - REGULAR
      - INHERITED_VALUE
    CostCategoryRule:
      type: object
      properties:
        Value:
          $ref: '#/components/schemas/CostCategoryValue'
        Rule:
          allOf:
          - $ref: '#/components/schemas/Expression'
          - description: An Expression object used to categorize costs. This supports
              dimensions, tags, and nested expressions. Currently the only dimensions
              supported are LINKED_ACCOUNT, SERVICE_CODE, RECORD_TYPE, and LINKED_ACCOUNT_NAME.
              Root level OR isn't supported. We recommend that you create a separate
              rule instead.  RECORD_TYPE is a dimension used for Cost Explorer APIs,
              and is also supported for Cost Category expressions. This dimension
              uses different terms, depending on whether you're using the console
              or API/JSON editor. For a detailed comparison, see Term Comparisons
              in the Billing and Cost Management User Guide.
        InheritedValue:
          allOf:
          - $ref: '#/components/schemas/CostCategoryInheritedValueDimension'
          - description: The value the line item is categorized as if the line item
              contains the matched dimension.
        Type:
          allOf:
          - $ref: '#/components/schemas/CostCategoryRuleType'
          - description: You can define the CostCategoryRule rule type as either REGULAR
              or INHERITED_VALUE. The INHERITED_VALUE rule type adds the flexibility
              to define a rule that dynamically inherits the cost category value.
              This value is from the dimension value that's defined by CostCategoryInheritedValueDimension.
              For example, suppose that you want to costs to be dynamically grouped
              based on the value of a specific tag key. First, choose an inherited
              value rule type, and then choose the tag dimension and specify the tag
              key to use.
      description: Rules are processed in order. If there are multiple rules that
        match the line item, then the first rule to match is used to determine that
        Cost Category value.
    CostCategorySplitChargeMethod:
      type: string
      enum:
      - FIXED
      - PROPORTIONAL
      - EVEN
    CostCategorySplitChargeRuleTargetsList:
      type: array
      items:
        $ref: '#/components/schemas/GenericString'
      minItems: 1
      maxItems: 500
    CostCategorySplitChargeRuleParametersList:
      type: array
      items:
        $ref: '#/components/schemas/CostCategorySplitChargeRuleParameter'
      minItems: 1
      maxItems: 10
    CostCategorySplitChargeRule:
      type: object
      required:
      - Source
      - Targets
      - Method
      properties:
        Source:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The Cost Category value that you want to split. That value
              can't be used as a source or a target in other split charge rules. To
              indicate uncategorized costs, you can use an empty string as the source.
        Targets:
          allOf:
          - $ref: '#/components/schemas/CostCategorySplitChargeRuleTargetsList'
          - description: The Cost Category values that you want to split costs across.
              These values can't be used as a source in other split charge rules.
        Method:
          allOf:
          - $ref: '#/components/schemas/CostCategorySplitChargeMethod'
          - description: The method that's used to define how to split your source
              costs across your targets.   Proportional - Allocates charges across
              your targets based on the proportional weighted cost of each target.  Fixed
              - Allocates charges across your targets based on your defined allocation
              percentage. &gt;Even - Allocates costs evenly across all targets.
        Parameters:
          allOf:
          - $ref: '#/components/schemas/CostCategorySplitChargeRuleParametersList'
          - description: The parameters for a split charge method. This is only required
              for the FIXED method.
      description: Use the split charge rule to split the cost of one Cost Category
        value across several other target values.
    CostCategorySplitChargeRuleParameterType:
      type: string
      enum:
      - ALLOCATION_PERCENTAGES
    CostCategorySplitChargeRuleParameterValuesList:
      type: array
      items:
        $ref: '#/components/schemas/GenericString'
      minItems: 1
      maxItems: 500
    CostCategorySplitChargeRuleParameter:
      type: object
      required:
      - Type
      - Values
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/CostCategorySplitChargeRuleParameterType'
          - description: The parameter type.
        Values:
          allOf:
          - $ref: '#/components/schemas/CostCategorySplitChargeRuleParameterValuesList'
          - description: The parameter values.
      description: The parameters for a split charge method.
    Values:
      type: array
      items:
        $ref: '#/components/schemas/Value'
    MatchOptions:
      type: array
      items:
        $ref: '#/components/schemas/MatchOption'
    CostCategoryValues:
      type: object
      properties:
        Key:
          $ref: '#/components/schemas/CostCategoryName'
        Values:
          allOf:
          - $ref: '#/components/schemas/Values'
          - description: The specific value of the Cost Category.
        MatchOptions:
          allOf:
          - $ref: '#/components/schemas/MatchOptions'
          - description: The match options that you can use to filter your results.
              MatchOptions is only applicable for actions related to cost category.
              The default values for MatchOptions is EQUALS and CASE_SENSITIVE.
      description: The Cost Categories values used for filtering the costs. If Values
        and Key are not specified, the ABSENT MatchOption is applied to all Cost Categories.
        That is, it filters on resources that aren't mapped to any Cost Categories.
        If Values is provided and Key isn't specified, the ABSENT MatchOption is applied
        to the Cost Categories Key only. That is, it filters on resources without
        the given Cost Categories key.
    CoverageHours:
      type: object
      properties:
        OnDemandHours:
          allOf:
          - $ref: '#/components/schemas/OnDemandHours'
          - description: The number of instance running hours that On-Demand Instances
              covered.
        ReservedHours:
          allOf:
          - $ref: '#/components/schemas/ReservedHours'
          - description: The number of instance running hours that reservations covered.
        TotalRunningHours:
          allOf:
          - $ref: '#/components/schemas/TotalRunningHours'
          - description: The total instance usage, in hours.
        CoverageHoursPercentage:
          allOf:
          - $ref: '#/components/schemas/CoverageHoursPercentage'
          - description: The percentage of instance hours that a reservation covered.
      description: How long a running instance either used a reservation or was On-Demand.
    CoverageNormalizedUnits:
      type: object
      properties:
        OnDemandNormalizedUnits:
          allOf:
          - $ref: '#/components/schemas/OnDemandNormalizedUnits'
          - description: The number of normalized units that are covered by On-Demand
              Instances instead of a reservation.
        ReservedNormalizedUnits:
          allOf:
          - $ref: '#/components/schemas/ReservedNormalizedUnits'
          - description: The number of normalized units that a reservation covers.
        TotalRunningNormalizedUnits:
          allOf:
          - $ref: '#/components/schemas/TotalRunningNormalizedUnits'
          - description: The total number of normalized units that you used.
        CoverageNormalizedUnitsPercentage:
          allOf:
          - $ref: '#/components/schemas/CoverageNormalizedUnitsPercentage'
          - description: The percentage of your used instance normalized units that
              a reservation covers.
      description: The amount of instance usage, in normalized units. You can use
        normalized units to see your EC2 usage for multiple sizes of instances in
        a uniform way. For example, suppose that you run an xlarge instance and a
        2xlarge instance. If you run both instances for the same amount of time, the
        2xlarge instance uses twice as much of your reservation as the xlarge instance,
        even though both instances show only one instance-hour. When you use normalized
        units instead of instance-hours, the xlarge instance used 8 normalized units,
        and the 2xlarge instance used 16 normalized units. For more information, see
        Modifying Reserved Instances in the Amazon Elastic Compute Cloud User Guide
        for Linux Instances.
    CoverageCost:
      type: object
      properties:
        OnDemandCost:
          allOf:
          - $ref: '#/components/schemas/OnDemandCost'
          - description: How much an On-Demand Instance costs.
      description: How much it costs to run an instance.
    Coverage:
      type: object
      properties:
        CoverageHours:
          allOf:
          - $ref: '#/components/schemas/CoverageHours'
          - description: The amount of instance usage that the reservation covered,
              in hours.
        CoverageNormalizedUnits:
          allOf:
          - $ref: '#/components/schemas/CoverageNormalizedUnits'
          - description: The amount of instance usage that the reservation covered,
              in normalized units.
        CoverageCost:
          allOf:
          - $ref: '#/components/schemas/CoverageCost'
          - description: The amount of cost that the reservation covered.
      description: The amount of instance usage that a reservation covered.
    DateInterval:
      type: object
      required:
      - Start
      - End
      properties:
        Start:
          allOf:
          - $ref: '#/components/schemas/YearMonthDay'
          - description: The beginning of the time period. The start date is inclusive.
              For example, if start is 2017-01-01, Amazon Web Services retrieves cost
              and usage data starting at 2017-01-01 up to the end date. The start
              date must be equal to or no later than the current date to avoid a validation
              error.
        End:
          allOf:
          - $ref: '#/components/schemas/YearMonthDay'
          - description: The end of the time period. The end date is exclusive. For
              example, if end is 2017-05-01, Amazon Web Services retrieves cost and
              usage data from the start date up to, but not including, 2017-05-01.
      description: The time period of the request.
    ReservationCoverageGroups:
      type: array
      items:
        $ref: '#/components/schemas/ReservationCoverageGroup'
    CoverageByTime:
      type: object
      properties:
        TimePeriod:
          allOf:
          - $ref: '#/components/schemas/DateInterval'
          - description: The period that this coverage was used over.
        Groups:
          allOf:
          - $ref: '#/components/schemas/ReservationCoverageGroups'
          - description: The groups of instances that the reservation covered.
        Total:
          allOf:
          - $ref: '#/components/schemas/Coverage'
          - description: The total reservation coverage, in hours.
      description: Reservation coverage for a specified period, in hours.
    OnDemandCost:
      type: string
    OnDemandHours:
      type: string
    ReservedHours:
      type: string
    TotalRunningHours:
      type: string
    CoverageHoursPercentage:
      type: string
    OnDemandNormalizedUnits:
      type: string
    ReservedNormalizedUnits:
      type: string
    TotalRunningNormalizedUnits:
      type: string
    CoverageNormalizedUnitsPercentage:
      type: string
    CoveragesByTime:
      type: array
      items:
        $ref: '#/components/schemas/CoverageByTime'
    ResourceTagList:
      type: array
      items:
        $ref: '#/components/schemas/ResourceTag'
      minItems: 0
      maxItems: 200
    TagValuesList:
      type: array
      items:
        $ref: '#/components/schemas/TagValues'
    ResourceDetails:
      type: object
      properties:
        EC2ResourceDetails:
          allOf:
          - $ref: '#/components/schemas/EC2ResourceDetails'
          - description: Details for the Amazon EC2 resource.
      description: Details for the resource.
    ResourceUtilization:
      type: object
      properties:
        EC2ResourceUtilization:
          allOf:
          - $ref: '#/components/schemas/EC2ResourceUtilization'
          - description: The utilization of current Amazon EC2 instance.
      description: Resource utilization of current resource.
    CurrentInstance:
      type: object
      properties:
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: Resource ID of the current instance.
        InstanceName:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The name that you given an instance. This field shows as
              blank if you haven't given the instance a name.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagValuesList'
          - description: Cost allocation resource tags that are applied to the instance.
        ResourceDetails:
          allOf:
          - $ref: '#/components/schemas/ResourceDetails'
          - description: Details about the resource and utilization.
        ResourceUtilization:
          allOf:
          - $ref: '#/components/schemas/ResourceUtilization'
          - description: Utilization information of the current instance during the
              lookback period.
        ReservationCoveredHoursInLookbackPeriod:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The number of hours during the lookback period that's covered
              by reservations.
        SavingsPlansCoveredHoursInLookbackPeriod:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The number of hours during the lookback period that's covered
              by Savings Plans.
        OnDemandHoursInLookbackPeriod:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The number of hours during the lookback period that's billed
              at On-Demand rates.
        TotalRunningHoursInLookbackPeriod:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The total number of hours that the instance ran during the
              lookback period.
        MonthlyCost:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The current On-Demand cost of operating this instance on
              a monthly basis.
        CurrencyCode:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The currency code that Amazon Web Services used to calculate
              the costs for this instance.
      description: Context about the current instance.
    Dimension:
      type: string
      enum:
      - AZ
      - INSTANCE_TYPE
      - LINKED_ACCOUNT
      - LINKED_ACCOUNT_NAME
      - OPERATION
      - PURCHASE_TYPE
      - REGION
      - SERVICE
      - SERVICE_CODE
      - USAGE_TYPE
      - USAGE_TYPE_GROUP
      - RECORD_TYPE
      - OPERATING_SYSTEM
      - TENANCY
      - SCOPE
      - PLATFORM
      - SUBSCRIPTION_ID
      - LEGAL_ENTITY_NAME
      - DEPLOYMENT_OPTION
      - DATABASE_ENGINE
      - CACHE_ENGINE
      - INSTANCE_TYPE_FAMILY
      - BILLING_ENTITY
      - RESERVATION_ID
      - RESOURCE_ID
      - RIGHTSIZING_TYPE
      - SAVINGS_PLANS_TYPE
      - SAVINGS_PLAN_ARN
      - PAYMENT_OPTION
      - AGREEMENT_END_DATE_TIME_AFTER
      - AGREEMENT_END_DATE_TIME_BEFORE
      - INVOICING_ENTITY
      - ANOMALY_TOTAL_IMPACT_ABSOLUTE
      - ANOMALY_TOTAL_IMPACT_PERCENTAGE
    DimensionValues:
      type: object
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/Dimension'
          - description: The names of the metadata types that you can use to filter
              and group your results. For example, AZ returns a list of Availability
              Zones. Not all dimensions are supported in each API. Refer to the documentation
              for each specific API to see what is supported.  LINK_ACCOUNT_NAME and
              SERVICE_CODE can only be used in CostCategoryRule.  ANOMALY_TOTAL_IMPACT_ABSOLUTE
              and ANOMALY_TOTAL_IMPACT_PERCENTAGE can only be used in AnomalySubscriptions.
        Values:
          allOf:
          - $ref: '#/components/schemas/Values'
          - description: The metadata values that you can use to filter and group
              your results. You can use GetDimensionValues to find specific values.
        MatchOptions:
          allOf:
          - $ref: '#/components/schemas/MatchOptions'
          - description: The match options that you can use to filter your results.  MatchOptions
              is only applicable for actions related to Cost Category and Anomaly
              Subscriptions. Refer to the documentation for each specific API to see
              what is supported. The default values for MatchOptions are EQUALS and
              CASE_SENSITIVE.
      description: The metadata that you can use to filter and group your results.
        You can use GetDimensionValues to find specific values.
    Value:
      type: string
      pattern: '[\S\s]*'
      minLength: 0
      maxLength: 1024
    DimensionValuesWithAttributes:
      type: object
      properties:
        Value:
          allOf:
          - $ref: '#/components/schemas/Value'
          - description: The value of a dimension with a specific attribute.
        Attributes:
          allOf:
          - $ref: '#/components/schemas/Attributes'
          - description: The attribute that applies to a specific Dimension.
      description: The metadata of a specific type that you can use to filter and
        group your results. You can use GetDimensionValues to find specific values.
    DimensionValuesWithAttributesList:
      type: array
      items:
        $ref: '#/components/schemas/DimensionValuesWithAttributes'
    DiskResourceUtilization:
      type: object
      properties:
        DiskReadOpsPerSecond:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The maximum number of read operations per second.
        DiskWriteOpsPerSecond:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The maximum number of write operations per second.
        DiskReadBytesPerSecond:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The maximum read throughput operations per second.
        DiskWriteBytesPerSecond:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The maximum write throughput operations per second.
      description: The field that contains a list of disk (local storage) metrics
        that are associated with the current instance.
    EBSResourceUtilization:
      type: object
      properties:
        EbsReadOpsPerSecond:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The maximum number of read operations per second.
        EbsWriteOpsPerSecond:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The maximum number of write operations per second.
        EbsReadBytesPerSecond:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The maximum size of read operations per second
        EbsWriteBytesPerSecond:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The maximum size of write operations per second.
      description: The EBS field that contains a list of EBS metrics that are associated
        with the current instance.
    GenericBoolean:
      type: boolean
    EC2InstanceDetails:
      type: object
      properties:
        Family:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The instance family of the recommended reservation.
        InstanceType:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The type of instance that Amazon Web Services recommends.
        Region:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The Amazon Web Services Region of the recommended reservation.
        AvailabilityZone:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The Availability Zone of the recommended reservation.
        Platform:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The platform of the recommended reservation. The platform
              is the specific combination of operating system, license model, and
              software on an instance.
        Tenancy:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: Determines whether the recommended reservation is dedicated
              or shared.
        CurrentGeneration:
          allOf:
          - $ref: '#/components/schemas/GenericBoolean'
          - description: Determines whether the recommendation is for a current-generation
              instance.
        SizeFlexEligible:
          allOf:
          - $ref: '#/components/schemas/GenericBoolean'
          - description: Determines whether the recommended reservation is size flexible.
      description: Details about the Amazon EC2 instances that Amazon Web Services
        recommends that you purchase.
    EC2ResourceDetails:
      type: object
      properties:
        HourlyOnDemandRate:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The hourly public On-Demand rate for the instance type.
        InstanceType:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The type of Amazon Web Services instance.
        Platform:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The platform of the Amazon Web Services instance. The platform
              is the specific combination of operating system, license model, and
              software on an instance.
        Region:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The Amazon Web Services Region of the instance.
        Sku:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The SKU of the product.
        Memory:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The memory capacity of the Amazon Web Services instance.
        NetworkPerformance:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The network performance capacity of the Amazon Web Services
              instance.
        Storage:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The disk storage of the Amazon Web Services instance. This
              doesn't include EBS storage.
        Vcpu:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The number of VCPU cores in the Amazon Web Services instance
              type.
      description: Details on the Amazon EC2 Resource.
    NetworkResourceUtilization:
      type: object
      properties:
        NetworkInBytesPerSecond:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The network inbound throughput utilization measured in Bytes
              per second (Bps).
        NetworkOutBytesPerSecond:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The network outbound throughput utilization measured in Bytes
              per second (Bps).
        NetworkPacketsInPerSecond:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The network inbound packets that are measured in packets
              per second.
        NetworkPacketsOutPerSecond:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The network outbound packets that are measured in packets
              per second.
      description: The network field that contains a list of network metrics that
        are associated with the current instance.
    EC2ResourceUtilization:
      type: object
      properties:
        MaxCpuUtilizationPercentage:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The maximum observed or expected CPU utilization of the instance.
        MaxMemoryUtilizationPercentage:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The maximum observed or expected memory utilization of the
              instance.
        MaxStorageUtilizationPercentage:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The maximum observed or expected storage utilization of the
              instance. This doesn't include EBS storage.
        EBSResourceUtilization:
          allOf:
          - $ref: '#/components/schemas/EBSResourceUtilization'
          - description: The EBS field that contains a list of EBS metrics that are
              associated with the current instance.
        DiskResourceUtilization:
          allOf:
          - $ref: '#/components/schemas/DiskResourceUtilization'
          - description: The field that contains a list of disk (local storage) metrics
              that are associated with the current instance.
        NetworkResourceUtilization:
          allOf:
          - $ref: '#/components/schemas/NetworkResourceUtilization'
          - description: The network field that contains a list of network metrics
              that are associated with the current instance.
      description: Utilization metrics for the instance.
    OfferingClass:
      type: string
      enum:
      - STANDARD
      - CONVERTIBLE
    EC2Specification:
      type: object
      properties:
        OfferingClass:
          allOf:
          - $ref: '#/components/schemas/OfferingClass'
          - description: Indicates whether you want a recommendation for standard
              or convertible reservations.
      description: The Amazon EC2 hardware specifications that you want Amazon Web
        Services to provide recommendations for.
    ESInstanceDetails:
      type: object
      properties:
        InstanceClass:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The class of instance that Amazon Web Services recommends.
        InstanceSize:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The size of instance that Amazon Web Services recommends.
        Region:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The Amazon Web Services Region of the recommended reservation.
        CurrentGeneration:
          allOf:
          - $ref: '#/components/schemas/GenericBoolean'
          - description: Determines whether the recommendation is for a current-generation
              instance.
        SizeFlexEligible:
          allOf:
          - $ref: '#/components/schemas/GenericBoolean'
          - description: Determines whether the recommended reservation is size flexible.
      description: Details about the Amazon OpenSearch Service instances that Amazon
        Web Services recommends that you purchase.
    ElastiCacheInstanceDetails:
      type: object
      properties:
        Family:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The instance family of the recommended reservation.
        NodeType:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The type of node that Amazon Web Services recommends.
        Region:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The Amazon Web Services Region of the recommended reservation.
        ProductDescription:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The description of the recommended reservation.
        CurrentGeneration:
          allOf:
          - $ref: '#/components/schemas/GenericBoolean'
          - description: Determines whether the recommendation is for a current generation
              instance.
        SizeFlexEligible:
          allOf:
          - $ref: '#/components/schemas/GenericBoolean'
          - description: Determines whether the recommended reservation is size flexible.
      description: Details about the Amazon ElastiCache instances that Amazon Web
        Services recommends that you purchase.
    Entity:
      type: string
    ErrorMessage:
      type: string
    Estimated:
      type: boolean
    Expressions:
      type: array
      items:
        $ref: '#/components/schemas/Expression'
    TagValues:
      type: object
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: The key for the tag.
        Values:
          allOf:
          - $ref: '#/components/schemas/Values'
          - description: The specific value of the tag.
        MatchOptions:
          allOf:
          - $ref: '#/components/schemas/MatchOptions'
          - description: The match options that you can use to filter your results.
              MatchOptions is only applicable for actions related to Cost Category.
              The default values for MatchOptions are EQUALS and CASE_SENSITIVE.
      description: The values that are available for a tag. If Values and Key aren't
        specified, the ABSENT MatchOption is applied to all tags. That is, it's filtered
        on resources with no tags. If Key is provided and Values isn't specified,
        the ABSENT MatchOption is applied to the tag Key only. That is, it's filtered
        on resources without the given tag key.
    FindingReasonCode:
      type: string
      enum:
      - CPU_OVER_PROVISIONED
      - CPU_UNDER_PROVISIONED
      - MEMORY_OVER_PROVISIONED
      - MEMORY_UNDER_PROVISIONED
      - EBS_THROUGHPUT_OVER_PROVISIONED
      - EBS_THROUGHPUT_UNDER_PROVISIONED
      - EBS_IOPS_OVER_PROVISIONED
      - EBS_IOPS_UNDER_PROVISIONED
      - NETWORK_BANDWIDTH_OVER_PROVISIONED
      - NETWORK_BANDWIDTH_UNDER_PROVISIONED
      - NETWORK_PPS_OVER_PROVISIONED
      - NETWORK_PPS_UNDER_PROVISIONED
      - DISK_IOPS_OVER_PROVISIONED
      - DISK_IOPS_UNDER_PROVISIONED
      - DISK_THROUGHPUT_OVER_PROVISIONED
      - DISK_THROUGHPUT_UNDER_PROVISIONED
    FindingReasonCodes:
      type: array
      items:
        $ref: '#/components/schemas/FindingReasonCode'
    ForecastResult:
      type: object
      properties:
        TimePeriod:
          allOf:
          - $ref: '#/components/schemas/DateInterval'
          - description: The period of time that the forecast covers.
        MeanValue:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The mean value of the forecast.
        PredictionIntervalLowerBound:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The lower limit for the prediction interval.
        PredictionIntervalUpperBound:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The upper limit for the prediction interval.
      description: The forecast that's created for your query.
    ForecastResultsByTime:
      type: array
      items:
        $ref: '#/components/schemas/ForecastResult'
    GenerationStatus:
      type: string
      enum:
      - SUCCEEDED
      - PROCESSING
      - FAILED
    RecommendationId:
      type: string
      pattern: ^[\S\s]{8}-[\S\s]{4}-[\S\s]{4}-[\S\s]{4}-[\S\s]{12}$
      minLength: 36
      maxLength: 36
    GenerationSummary:
      type: object
      properties:
        RecommendationId:
          allOf:
          - $ref: '#/components/schemas/RecommendationId'
          - description: Indicates the ID for this specific recommendation.
        GenerationStatus:
          allOf:
          - $ref: '#/components/schemas/GenerationStatus'
          - description: Indicates whether the recommendation generation succeeded,
              is processing, or failed.
        GenerationStartedTime:
          allOf:
          - $ref: '#/components/schemas/ZonedDateTime'
          - description: Indicates the start time of the recommendation generation.
        GenerationCompletionTime:
          allOf:
          - $ref: '#/components/schemas/ZonedDateTime'
          - description: Indicates the completion time of the recommendation generation.
        EstimatedCompletionTime:
          allOf:
          - $ref: '#/components/schemas/ZonedDateTime'
          - description: Indicates the estimated time for when the recommendation
              generation will complete.
      description: The summary of the Savings Plans recommendation generation.
    GenerationSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/GenerationSummary'
    TotalImpactFilter:
      type: object
      required:
      - NumericOperator
      - StartValue
      properties:
        NumericOperator:
          allOf:
          - $ref: '#/components/schemas/NumericOperator'
          - description: The comparing value that's used in the filter.
        StartValue:
          allOf:
          - $ref: '#/components/schemas/GenericDouble'
          - description: The lower bound dollar value that's used in the filter.
        EndValue:
          allOf:
          - $ref: '#/components/schemas/GenericDouble'
          - description: The upper bound dollar value that's used in the filter.
      description: Filters cost anomalies based on the total impact.
    NextPageToken:
      type: string
      pattern: '[\S\s]*'
      minLength: 0
      maxLength: 8192
    PageSize:
      type: integer
    Granularity:
      type: string
      enum:
      - DAILY
      - MONTHLY
      - HOURLY
    MetricNames:
      type: array
      items:
        $ref: '#/components/schemas/MetricName'
    GroupDefinitions:
      type: array
      items:
        $ref: '#/components/schemas/GroupDefinition'
    ResultsByTime:
      type: array
      items:
        $ref: '#/components/schemas/ResultByTime'
    SearchString:
      type: string
      pattern: '[\S\s]*'
      minLength: 0
      maxLength: 1024
    SortDefinitions:
      type: array
      items:
        $ref: '#/components/schemas/SortDefinition'
    MaxResults:
      type: integer
      minimum: 1
    Metric:
      type: string
      enum:
      - BLENDED_COST
      - UNBLENDED_COST
      - AMORTIZED_COST
      - NET_UNBLENDED_COST
      - NET_AMORTIZED_COST
      - USAGE_QUANTITY
      - NORMALIZED_USAGE_AMOUNT
    PredictionIntervalLevel:
      type: integer
      minimum: 51
      maximum: 99
    MetricValue:
      type: object
      properties:
        Amount:
          allOf:
          - $ref: '#/components/schemas/MetricAmount'
          - description: The actual number that represents the metric.
        Unit:
          allOf:
          - $ref: '#/components/schemas/MetricUnit'
          - description: The unit that the metric is given in.
      description: The aggregated value for a metric.
    SortDefinition:
      type: object
      required:
      - Key
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/SortDefinitionKey'
          - description: The key that's used to sort the data.
        SortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          - description: The order that's used to sort the data.
      description: The details for how to sort the data.
    LookbackPeriodInDays:
      type: string
      enum:
      - SEVEN_DAYS
      - THIRTY_DAYS
      - SIXTY_DAYS
    TermInYears:
      type: string
      enum:
      - ONE_YEAR
      - THREE_YEARS
    PaymentOption:
      type: string
      enum:
      - NO_UPFRONT
      - PARTIAL_UPFRONT
      - ALL_UPFRONT
      - LIGHT_UTILIZATION
      - MEDIUM_UTILIZATION
      - HEAVY_UTILIZATION
    ServiceSpecification:
      type: object
      properties:
        EC2Specification:
          allOf:
          - $ref: '#/components/schemas/EC2Specification'
          - description: The Amazon EC2 hardware specifications that you want Amazon
              Web Services to provide recommendations for.
      description: Hardware specifications for the service that you want recommendations
        for.
    ReservationPurchaseRecommendationMetadata:
      type: object
      properties:
        RecommendationId:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The ID for this specific recommendation.
        GenerationTimestamp:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The timestamp for when Amazon Web Services made this recommendation.
      description: Information about this specific recommendation, such as the timestamp
        for when Amazon Web Services made a specific recommendation.
    ReservationPurchaseRecommendations:
      type: array
      items:
        $ref: '#/components/schemas/ReservationPurchaseRecommendation'
    UtilizationsByTime:
      type: array
      items:
        $ref: '#/components/schemas/UtilizationByTime'
    ReservationAggregates:
      type: object
      properties:
        UtilizationPercentage:
          allOf:
          - $ref: '#/components/schemas/UtilizationPercentage'
          - description: The percentage of reservation time that you used.
        UtilizationPercentageInUnits:
          allOf:
          - $ref: '#/components/schemas/UtilizationPercentageInUnits'
          - description: The percentage of Amazon EC2 reservation time that you used.
              It's converted to normalized units. Normalized units are available only
              for Amazon EC2 usage after November 11, 2017.
        PurchasedHours:
          allOf:
          - $ref: '#/components/schemas/PurchasedHours'
          - description: How many reservation hours that you purchased.
        PurchasedUnits:
          allOf:
          - $ref: '#/components/schemas/PurchasedUnits'
          - description: The number of Amazon EC2 reservation hours that you purchased.
              It's converted to normalized units. Normalized units are available only
              for Amazon EC2 usage after November 11, 2017.
        TotalActualHours:
          allOf:
          - $ref: '#/components/schemas/TotalActualHours'
          - description: The total number of reservation hours that you used.
        TotalActualUnits:
          allOf:
          - $ref: '#/components/schemas/TotalActualUnits'
          - description: The total number of Amazon EC2 reservation hours that you
              used. It's converted to normalized units. Normalized units are available
              only for Amazon EC2 usage after November 11, 2017.
        UnusedHours:
          allOf:
          - $ref: '#/components/schemas/UnusedHours'
          - description: The number of reservation hours that you didn't use.
        UnusedUnits:
          allOf:
          - $ref: '#/components/schemas/UnusedUnits'
          - description: The number of Amazon EC2 reservation hours that you didn't
              use. It's converted to normalized units. Normalized units are available
              only for Amazon EC2 usage after November 11, 2017.
        OnDemandCostOfRIHoursUsed:
          allOf:
          - $ref: '#/components/schemas/OnDemandCostOfRIHoursUsed'
          - description: How much your reservation costs if charged On-Demand rates.
        NetRISavings:
          allOf:
          - $ref: '#/components/schemas/NetRISavings'
          - description: How much you saved due to purchasing and utilizing reservation.
              Amazon Web Services calculates this by subtracting TotalAmortizedFee
              from OnDemandCostOfRIHoursUsed.
        TotalPotentialRISavings:
          allOf:
          - $ref: '#/components/schemas/TotalPotentialRISavings'
          - description: How much you might save if you use your entire reservation.
        AmortizedUpfrontFee:
          allOf:
          - $ref: '#/components/schemas/AmortizedUpfrontFee'
          - description: The upfront cost of your reservation. It's amortized over
              the reservation period.
        AmortizedRecurringFee:
          allOf:
          - $ref: '#/components/schemas/AmortizedRecurringFee'
          - description: The monthly cost of your reservation. It's amortized over
              the reservation period.
        TotalAmortizedFee:
          allOf:
          - $ref: '#/components/schemas/TotalAmortizedFee'
          - description: The total cost of your reservation. It's amortized over the
              reservation period.
        RICostForUnusedHours:
          allOf:
          - $ref: '#/components/schemas/RICostForUnusedHours'
          - description: The cost of unused hours for your reservation.
        RealizedSavings:
          allOf:
          - $ref: '#/components/schemas/RealizedSavings'
          - description: The realized savings because of purchasing and using a reservation.
        UnrealizedSavings:
          allOf:
          - $ref: '#/components/schemas/UnrealizedSavings'
          - description: The unrealized savings because of purchasing and using a
              reservation.
      description: The aggregated numbers for your reservation usage.
    RightsizingRecommendationConfiguration:
      type: object
      required:
      - RecommendationTarget
      - BenefitsConsidered
      properties:
        RecommendationTarget:
          allOf:
          - $ref: '#/components/schemas/RecommendationTarget'
          - description: The option to see recommendations within the same instance
              family or recommendations for instances across other families. The default
              value is SAME_INSTANCE_FAMILY.
        BenefitsConsidered:
          allOf:
          - $ref: '#/components/schemas/GenericBoolean'
          - description: The option to consider RI or Savings Plans discount benefits
              in your savings calculation. The default value is TRUE.
      description: You can use RightsizingRecommendationConfiguration to customize
        recommendations across two attributes. You can choose to view recommendations
        for instances within the same instance families or across different instance
        families. You can also choose to view your estimated savings that are associated
        with recommendations with consideration of existing Savings Plans or Reserved
        Instance (RI) benefits, or neither.
    RightsizingRecommendationMetadata:
      type: object
      properties:
        RecommendationId:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The ID for this specific recommendation.
        GenerationTimestamp:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The timestamp for when Amazon Web Services made this recommendation.
        LookbackPeriodInDays:
          allOf:
          - $ref: '#/components/schemas/LookbackPeriodInDays'
          - description: The number of days of previous usage that Amazon Web Services
              considers when making this recommendation.
        AdditionalMetadata:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: Additional metadata that might be applicable to the recommendation.
      description: Metadata for this recommendation set.
    RightsizingRecommendationSummary:
      type: object
      properties:
        TotalRecommendationCount:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The total number of instance recommendations.
        EstimatedTotalMonthlySavingsAmount:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The estimated total savings resulting from modifications,
              on a monthly basis.
        SavingsCurrencyCode:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The currency code that Amazon Web Services used to calculate
              the savings.
        SavingsPercentage:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The savings percentage based on the recommended modifications.
              It's relative to the total On-Demand costs that are associated with
              these instances.
      description: The summary of rightsizing recommendations
    RightsizingRecommendationList:
      type: array
      items:
        $ref: '#/components/schemas/RightsizingRecommendation'
    SavingsPlansCoverages:
      type: array
      items:
        $ref: '#/components/schemas/SavingsPlansCoverage'
    SupportedSavingsPlansType:
      type: string
      enum:
      - COMPUTE_SP
      - EC2_INSTANCE_SP
      - SAGEMAKER_SP
    SavingsPlansPurchaseRecommendationMetadata:
      type: object
      properties:
        RecommendationId:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The unique identifier for the recommendation set.
        GenerationTimestamp:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The timestamp that shows when the recommendations were generated.
        AdditionalMetadata:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: Additional metadata that might be applicable to the recommendation.
      description: Metadata about your Savings Plans Purchase Recommendations.
    SavingsPlansPurchaseRecommendation:
      type: object
      properties:
        AccountScope:
          allOf:
          - $ref: '#/components/schemas/AccountScope'
          - description: The account scope that you want your recommendations for.
              Amazon Web Services calculates recommendations that include the management
              account and member accounts if the value is set to PAYER. If the value
              is LINKED, recommendations are calculated for individual member accounts
              only.
        SavingsPlansType:
          allOf:
          - $ref: '#/components/schemas/SupportedSavingsPlansType'
          - description: The requested Savings Plans recommendation type.
        TermInYears:
          allOf:
          - $ref: '#/components/schemas/TermInYears'
          - description: The Savings Plans recommendation term in years. It's used
              to generate the recommendation.
        PaymentOption:
          allOf:
          - $ref: '#/components/schemas/PaymentOption'
          - description: The payment option that's used to generate the recommendation.
        LookbackPeriodInDays:
          allOf:
          - $ref: '#/components/schemas/LookbackPeriodInDays'
          - description: The lookback period in days that's used to generate the recommendation.
        SavingsPlansPurchaseRecommendationDetails:
          allOf:
          - $ref: '#/components/schemas/SavingsPlansPurchaseRecommendationDetailList'
          - description: Details for the Savings Plans that we recommend that you
              purchase to cover existing Savings Plans eligible workloads.
        SavingsPlansPurchaseRecommendationSummary:
          allOf:
          - $ref: '#/components/schemas/SavingsPlansPurchaseRecommendationSummary'
          - description: Summary metrics for your Savings Plans Recommendations.
      description: Contains your request parameters, Savings Plan Recommendations
        Summary, and Details.
    SavingsPlansDataTypes:
      type: array
      items:
        $ref: '#/components/schemas/SavingsPlansDataType'
    SavingsPlansUtilizationDetails:
      type: array
      items:
        $ref: '#/components/schemas/SavingsPlansUtilizationDetail'
    SavingsPlansUtilizationAggregates:
      type: object
      required:
      - Utilization
      properties:
        Utilization:
          allOf:
          - $ref: '#/components/schemas/SavingsPlansUtilization'
          - description: A ratio of your effectiveness of using existing Savings Plans
              to apply to workloads that are Savings Plans eligible.
        Savings:
          allOf:
          - $ref: '#/components/schemas/SavingsPlansSavings'
          - description: The amount that's saved by using existing Savings Plans.
              Savings returns both net savings from Savings Plans and also the onDemandCostEquivalent
              of the Savings Plans when considering the utilization rate.
        AmortizedCommitment:
          allOf:
          - $ref: '#/components/schemas/SavingsPlansAmortizedCommitment'
          - description: The total amortized commitment for a Savings Plans. This
              includes the sum of the upfront and recurring Savings Plans fees.
      description: The aggregated utilization metrics for your Savings Plans usage.
    SavingsPlansUtilizationsByTime:
      type: array
      items:
        $ref: '#/components/schemas/SavingsPlansUtilizationByTime'
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Entity'
    Keys:
      type: array
      items:
        $ref: '#/components/schemas/Key'
    Metrics:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/MetricValue'
    Group:
      type: object
      properties:
        Keys:
          allOf:
          - $ref: '#/components/schemas/Keys'
          - description: The keys that are included in this group.
        Metrics:
          allOf:
          - $ref: '#/components/schemas/Metrics'
          - description: The metrics that are included in this group.
      description: One level of grouped data in the results.
    GroupDefinitionType:
      type: string
      enum:
      - DIMENSION
      - TAG
      - COST_CATEGORY
    GroupDefinitionKey:
      type: string
      pattern: '[\S\s]*'
      minLength: 0
      maxLength: 1024
    GroupDefinition:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/GroupDefinitionType'
          - description: The string that represents the type of group.
        Key:
          allOf:
          - $ref: '#/components/schemas/GroupDefinitionKey'
          - description: The string that represents a key for a specified group.
      description: Represents a group when you specify a group by criteria or in the
        response to a query with a specific grouping.
    Groups:
      type: array
      items:
        $ref: '#/components/schemas/Group'
    RDSInstanceDetails:
      type: object
      properties:
        Family:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The instance family of the recommended reservation.
        InstanceType:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The type of instance that Amazon Web Services recommends.
        Region:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The Amazon Web Services Region of the recommended reservation.
        DatabaseEngine:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The database engine that the recommended reservation supports.
        DatabaseEdition:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The database edition that the recommended reservation supports.
        DeploymentOption:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: Determines whether the recommendation is for a reservation
              in a single Availability Zone or a reservation with a backup in a second
              Availability Zone.
        LicenseModel:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The license model that the recommended reservation supports.
        CurrentGeneration:
          allOf:
          - $ref: '#/components/schemas/GenericBoolean'
          - description: Determines whether the recommendation is for a current-generation
              instance.
        SizeFlexEligible:
          allOf:
          - $ref: '#/components/schemas/GenericBoolean'
          - description: Determines whether the recommended reservation is size flexible.
      description: Details about the Amazon RDS instances that Amazon Web Services
        recommends that you purchase.
    RedshiftInstanceDetails:
      type: object
      properties:
        Family:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The instance family of the recommended reservation.
        NodeType:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The type of node that Amazon Web Services recommends.
        Region:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The Amazon Web Services Region of the recommended reservation.
        CurrentGeneration:
          allOf:
          - $ref: '#/components/schemas/GenericBoolean'
          - description: Determines whether the recommendation is for a current-generation
              instance.
        SizeFlexEligible:
          allOf:
          - $ref: '#/components/schemas/GenericBoolean'
          - description: Determines whether the recommended reservation is size flexible.
      description: Details about the Amazon Redshift instances that Amazon Web Services
        recommends that you purchase.
    InstanceDetails:
      type: object
      properties:
        EC2InstanceDetails:
          allOf:
          - $ref: '#/components/schemas/EC2InstanceDetails'
          - description: The Amazon EC2 instances that Amazon Web Services recommends
              that you purchase.
        RDSInstanceDetails:
          allOf:
          - $ref: '#/components/schemas/RDSInstanceDetails'
          - description: The Amazon RDS instances that Amazon Web Services recommends
              that you purchase.
        RedshiftInstanceDetails:
          allOf:
          - $ref: '#/components/schemas/RedshiftInstanceDetails'
          - description: The Amazon Redshift instances that Amazon Web Services recommends
              that you purchase.
        ElastiCacheInstanceDetails:
          allOf:
          - $ref: '#/components/schemas/ElastiCacheInstanceDetails'
          - description: The ElastiCache instances that Amazon Web Services recommends
              that you purchase.
        ESInstanceDetails:
          allOf:
          - $ref: '#/components/schemas/ESInstanceDetails'
          - description: The Amazon OpenSearch Service instances that Amazon Web Services
              recommends that you purchase.
      description: Details about the instances that Amazon Web Services recommends
        that you purchase.
    Key:
      type: string
    RecommendationIdList:
      type: array
      items:
        $ref: '#/components/schemas/RecommendationId'
    MatchOption:
      type: string
      enum:
      - EQUALS
      - ABSENT
      - STARTS_WITH
      - ENDS_WITH
      - CONTAINS
      - CASE_SENSITIVE
      - CASE_INSENSITIVE
      - GREATER_THAN_OR_EQUAL
    MetricAmount:
      type: string
    MetricName:
      type: string
      pattern: '[\S\s]*'
      minLength: 0
      maxLength: 1024
    MetricUnit:
      type: string
    TargetInstancesList:
      type: array
      items:
        $ref: '#/components/schemas/TargetInstance'
    ModifyRecommendationDetail:
      type: object
      properties:
        TargetInstances:
          allOf:
          - $ref: '#/components/schemas/TargetInstancesList'
          - description: Determines whether this instance type is the Amazon Web Services
              default recommendation.
      description: Details for the modification recommendation.
    NetRISavings:
      type: string
    NumericOperator:
      type: string
      enum:
      - EQUAL
      - GREATER_THAN_OR_EQUAL
      - LESS_THAN_OR_EQUAL
      - GREATER_THAN
      - LESS_THAN
      - BETWEEN
    OnDemandCostOfRIHoursUsed:
      type: string
    PlatformDifference:
      type: string
      enum:
      - HYPERVISOR
      - NETWORK_INTERFACE
      - STORAGE_INTERFACE
      - INSTANCE_STORE_AVAILABILITY
      - VIRTUALIZATION_TYPE
    PlatformDifferences:
      type: array
      items:
        $ref: '#/components/schemas/PlatformDifference'
    PurchasedHours:
      type: string
    PurchasedUnits:
      type: string
    RICostForUnusedHours:
      type: string
    RealizedSavings:
      type: string
    RecommendationTarget:
      type: string
      enum:
      - SAME_INSTANCE_FAMILY
      - CROSS_INSTANCE_FAMILY
    UtilizationPercentage:
      type: string
    UtilizationPercentageInUnits:
      type: string
    TotalActualHours:
      type: string
    TotalActualUnits:
      type: string
    UnusedHours:
      type: string
    UnusedUnits:
      type: string
    TotalPotentialRISavings:
      type: string
    TotalAmortizedFee:
      type: string
    UnrealizedSavings:
      type: string
    ReservationCoverageGroup:
      type: object
      properties:
        Attributes:
          allOf:
          - $ref: '#/components/schemas/Attributes'
          - description: The attributes for this group of reservations.
        Coverage:
          allOf:
          - $ref: '#/components/schemas/Coverage'
          - description: How much instance usage this group of reservations covered.
      description: A group of reservations that share a set of attributes.
    ReservationGroupKey:
      type: string
    ReservationGroupValue:
      type: string
    ReservationPurchaseRecommendationDetails:
      type: array
      items:
        $ref: '#/components/schemas/ReservationPurchaseRecommendationDetail'
    ReservationPurchaseRecommendationSummary:
      type: object
      properties:
        TotalEstimatedMonthlySavingsAmount:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The total amount that Amazon Web Services estimates that
              this recommendation could save you in a month.
        TotalEstimatedMonthlySavingsPercentage:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The total amount that Amazon Web Services estimates that
              this recommendation could save you in a month, as a percentage of your
              costs.
        CurrencyCode:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The currency code used for this recommendation.
      description: A summary about this recommendation, such as the currency code,
        the amount that Amazon Web Services estimates that you could save, and the
        total amount of reservation to purchase.
    ReservationPurchaseRecommendation:
      type: object
      properties:
        AccountScope:
          allOf:
          - $ref: '#/components/schemas/AccountScope'
          - description: The account scope that Amazon Web Services recommends that
              you purchase this instance for. For example, you can purchase this reservation
              for an entire organization in Amazon Web Services Organizations.
        LookbackPeriodInDays:
          allOf:
          - $ref: '#/components/schemas/LookbackPeriodInDays'
          - description: How many days of previous usage that Amazon Web Services
              considers when making this recommendation.
        TermInYears:
          allOf:
          - $ref: '#/components/schemas/TermInYears'
          - description: The term of the reservation that you want recommendations
              for, in years.
        PaymentOption:
          allOf:
          - $ref: '#/components/schemas/PaymentOption'
          - description: The payment option for the reservation (for example, AllUpfront
              or NoUpfront).
        ServiceSpecification:
          allOf:
          - $ref: '#/components/schemas/ServiceSpecification'
          - description: Hardware specifications for the service that you want recommendations
              for.
        RecommendationDetails:
          allOf:
          - $ref: '#/components/schemas/ReservationPurchaseRecommendationDetails'
          - description: Details about the recommended purchases.
        RecommendationSummary:
          allOf:
          - $ref: '#/components/schemas/ReservationPurchaseRecommendationSummary'
          - description: A summary about the recommended purchase.
      description: A specific reservation that Amazon Web Services recommends for
        purchase.
    ReservationPurchaseRecommendationDetail:
      type: object
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The account that this Reserved Instance (RI) recommendation
              is for.
        InstanceDetails:
          allOf:
          - $ref: '#/components/schemas/InstanceDetails'
          - description: Details about the instances that Amazon Web Services recommends
              that you purchase.
        RecommendedNumberOfInstancesToPurchase:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The number of instances that Amazon Web Services recommends
              that you purchase.
        RecommendedNormalizedUnitsToPurchase:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The number of normalized units that Amazon Web Services recommends
              that you purchase.
        MinimumNumberOfInstancesUsedPerHour:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The minimum number of instances that you used in an hour
              during the historical period. Amazon Web Services uses this to calculate
              your recommended reservation purchases.
        MinimumNormalizedUnitsUsedPerHour:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The minimum number of normalized units that you used in an
              hour during the historical period. Amazon Web Services uses this to
              calculate your recommended reservation purchases.
        MaximumNumberOfInstancesUsedPerHour:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The maximum number of instances that you used in an hour
              during the historical period. Amazon Web Services uses this to calculate
              your recommended reservation purchases.
        MaximumNormalizedUnitsUsedPerHour:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The maximum number of normalized units that you used in an
              hour during the historical period. Amazon Web Services uses this to
              calculate your recommended reservation purchases.
        AverageNumberOfInstancesUsedPerHour:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The average number of instances that you used in an hour
              during the historical period. Amazon Web Services uses this to calculate
              your recommended reservation purchases.
        AverageNormalizedUnitsUsedPerHour:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The average number of normalized units that you used in an
              hour during the historical period. Amazon Web Services uses this to
              calculate your recommended reservation purchases.
        AverageUtilization:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The average utilization of your instances. Amazon Web Services
              uses this to calculate your recommended reservation purchases.
        EstimatedBreakEvenInMonths:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: How long Amazon Web Services estimates that it takes for
              this instance to start saving you money, in months.
        CurrencyCode:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The currency code that Amazon Web Services used to calculate
              the costs for this instance.
        EstimatedMonthlySavingsAmount:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: How much Amazon Web Services estimates that this specific
              recommendation might save you in a month.
        EstimatedMonthlySavingsPercentage:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: How much Amazon Web Services estimates that this specific
              recommendation might save you in a month, as a percentage of your overall
              costs.
        EstimatedMonthlyOnDemandCost:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: How much Amazon Web Services estimates that you spend on
              On-Demand Instances in a month.
        EstimatedReservationCostForLookbackPeriod:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: How much Amazon Web Services estimates that you might spend
              for all usage during the specified historical period if you had a reservation.
        UpfrontCost:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: How much purchasing this instance costs you upfront.
        RecurringStandardMonthlyCost:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: How much purchasing this instance costs you on a monthly
              basis.
      description: Details about your recommended reservation purchase.
    ReservationUtilizationGroup:
      type: object
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/ReservationGroupKey'
          - description: The key for a specific reservation attribute.
        Value:
          allOf:
          - $ref: '#/components/schemas/ReservationGroupValue'
          - description: The value of a specific reservation attribute.
        Attributes:
          allOf:
          - $ref: '#/components/schemas/Attributes'
          - description: The attributes for this group of reservations.
        Utilization:
          allOf:
          - $ref: '#/components/schemas/ReservationAggregates'
          - description: How much you used this group of reservations.
      description: A group of reservations that share a set of attributes.
    ReservationUtilizationGroups:
      type: array
      items:
        $ref: '#/components/schemas/ReservationUtilizationGroup'
    ResourceTagKey:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 128
    ResourceTagValue:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 0
      maxLength: 256
    ResourceTag:
      type: object
      required:
      - Key
      - Value
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/ResourceTagKey'
          - description: The key that's associated with the tag.
        Value:
          allOf:
          - $ref: '#/components/schemas/ResourceTagValue'
          - description: The value that's associated with the tag.
      description: 'The tag structure that contains a tag key and value.   Tagging
        is supported only for the following Cost Explorer resource types:  AnomalyMonitor
        ,  AnomalySubscription ,  CostCategory .'
    ResourceTagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/ResourceTagKey'
      minItems: 0
      maxItems: 200
    ResultByTime:
      type: object
      properties:
        TimePeriod:
          allOf:
          - $ref: '#/components/schemas/DateInterval'
          - description: The time period that the result covers.
        Total:
          allOf:
          - $ref: '#/components/schemas/Metrics'
          - description: The total amount of cost or usage accrued during the time
              period.
        Groups:
          allOf:
          - $ref: '#/components/schemas/Groups'
          - description: The groups that this time period includes.
        Estimated:
          allOf:
          - $ref: '#/components/schemas/Estimated'
          - description: Determines whether the result is estimated.
      description: The result that's associated with a time period.
    RightsizingType:
      type: string
      enum:
      - TERMINATE
      - MODIFY
    TerminateRecommendationDetail:
      type: object
      properties:
        EstimatedMonthlySavings:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The estimated savings that result from modification, on a
              monthly basis.
        CurrencyCode:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The currency code that Amazon Web Services used to calculate
              the costs for this instance.
      description: Details on termination recommendation.
    RightsizingRecommendation:
      type: object
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The account that this recommendation is for.
        CurrentInstance:
          allOf:
          - $ref: '#/components/schemas/CurrentInstance'
          - description: Context regarding the current instance.
        RightsizingType:
          allOf:
          - $ref: '#/components/schemas/RightsizingType'
          - description: A recommendation to either terminate or modify the resource.
        ModifyRecommendationDetail:
          allOf:
          - $ref: '#/components/schemas/ModifyRecommendationDetail'
          - description: The details for the modification recommendations.
        TerminateRecommendationDetail:
          allOf:
          - $ref: '#/components/schemas/TerminateRecommendationDetail'
          - description: The details for termination recommendations.
        FindingReasonCodes:
          allOf:
          - $ref: '#/components/schemas/FindingReasonCodes'
          - description: The list of possible reasons why the recommendation is generated,
              such as under- or over-utilization of specific metrics (for example,
              CPU, Memory, Network).
      description: Recommendations to rightsize resources.
    RootCause:
      type: object
      properties:
        Service:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The Amazon Web Service name that's associated with the cost
              anomaly.
        Region:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The Amazon Web Services Region that's associated with the
              cost anomaly.
        LinkedAccount:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The member account value that's associated with the cost
              anomaly.
        UsageType:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The UsageType value that's associated with the cost anomaly.
        LinkedAccountName:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The member account name value that's associated with the
              cost anomaly.
      description: The combination of Amazon Web Service, linked account, linked account
        name, Region, and usage type where a cost anomaly is observed. The linked
        account name will only be available when the account name can be identified.
    SavingsPlanArn:
      type: string
    SavingsPlansAmortizedCommitment:
      type: object
      properties:
        AmortizedRecurringCommitment:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The amortized amount of your Savings Plans commitment that
              was purchased with either a Partial or a NoUpfront.
        AmortizedUpfrontCommitment:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The amortized amount of your Savings Plans commitment that
              was purchased with an Upfront or PartialUpfront Savings Plans.
        TotalAmortizedCommitment:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The total amortized amount of your Savings Plans commitment,
              regardless of your Savings Plans purchase method.
      description: The amortized amount of Savings Plans purchased in a specific account
        during a specific time interval.
    SavingsPlansCoverageData:
      type: object
      properties:
        SpendCoveredBySavingsPlans:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The amount of your Amazon Web Services usage that's covered
              by a Savings Plans.
        OnDemandCost:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The cost of your Amazon Web Services usage at the public
              On-Demand rate.
        TotalCost:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The total cost of your Amazon Web Services usage, regardless
              of your purchase option.
        CoveragePercentage:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The percentage of your existing Savings Plans covered usage,
              divided by all of your eligible Savings Plans usage in an account (or
              set of accounts).
      description: Specific coverage percentage, On-Demand costs, and spend covered
        by Savings Plans, and total Savings Plans costs for an account.
    SavingsPlansCoverage:
      type: object
      properties:
        Attributes:
          allOf:
          - $ref: '#/components/schemas/Attributes'
          - description: The attribute that applies to a specific Dimension.
        Coverage:
          allOf:
          - $ref: '#/components/schemas/SavingsPlansCoverageData'
          - description: The amount of Savings Plans eligible usage that the Savings
              Plans covered.
        TimePeriod:
          $ref: '#/components/schemas/DateInterval'
      description: The amount of Savings Plans eligible usage that's covered by Savings
        Plans. All calculations consider the On-Demand equivalent of your Savings
        Plans usage.
    SavingsPlansDataType:
      type: string
      enum:
      - ATTRIBUTES
      - UTILIZATION
      - AMORTIZED_COMMITMENT
      - SAVINGS
    SavingsPlansDetails:
      type: object
      properties:
        Region:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: A collection of Amazon Web Services resources in a geographic
              area. Each Amazon Web Services Region is isolated and independent of
              the other Regions.
        InstanceFamily:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: A group of instance types that Savings Plans applies to.
        OfferingId:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The unique ID that's used to distinguish Savings Plans from
              one another.
      description: The attribute details on a specific Savings Plan.
    SavingsPlansPurchaseRecommendationDetailList:
      type: array
      items:
        $ref: '#/components/schemas/SavingsPlansPurchaseRecommendationDetail'
    SavingsPlansPurchaseRecommendationSummary:
      type: object
      properties:
        EstimatedROI:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The estimated return on investment that's based on the recommended
              Savings Plans and estimated savings.
        CurrencyCode:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The currency code that Amazon Web Services used to generate
              the recommendations and present potential savings.
        EstimatedTotalCost:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The estimated total cost of the usage after purchasing the
              recommended Savings Plans. This is a sum of the cost of Savings Plans
              during this term, and the remaining On-Demand usage.
        CurrentOnDemandSpend:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The current total on demand spend of the applicable usage
              types over the lookback period.
        EstimatedSavingsAmount:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The estimated total savings over the lookback period, based
              on the purchase of the recommended Savings Plans.
        TotalRecommendationCount:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The aggregate number of Savings Plans recommendations that
              exist for your account.
        DailyCommitmentToPurchase:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The recommended Savings Plans cost on a daily (24 hourly)
              basis.
        HourlyCommitmentToPurchase:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The recommended hourly commitment that's based on the recommendation
              parameters.
        EstimatedSavingsPercentage:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The estimated savings relative to the total cost of On-Demand
              usage, over the lookback period. This is calculated as estimatedSavingsAmount/
              CurrentOnDemandSpend*100.
        EstimatedMonthlySavingsAmount:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The estimated monthly savings amount that's based on the
              recommended Savings Plans purchase.
        EstimatedOnDemandCostWithCurrentCommitment:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The estimated On-Demand costs you expect with no additional
              commitment. It's based on your usage of the selected time period and
              the Savings Plans you own.
      description: Summary metrics for your Savings Plans Purchase Recommendations.
    SavingsPlansPurchaseRecommendationDetail:
      type: object
      properties:
        SavingsPlansDetails:
          allOf:
          - $ref: '#/components/schemas/SavingsPlansDetails'
          - description: Details for your recommended Savings Plans.
        AccountId:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The AccountID the recommendation is generated for.
        UpfrontCost:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The upfront cost of the recommended Savings Plans, based
              on the selected payment option.
        EstimatedROI:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The estimated return on investment that's based on the recommended
              Savings Plans that you purchased. This is calculated as estimatedSavingsAmount/
              estimatedSPCost*100.
        CurrencyCode:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The currency code that Amazon Web Services used to generate
              the recommendations and present potential savings.
        EstimatedSPCost:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The cost of the recommended Savings Plans over the length
              of the lookback period.
        EstimatedOnDemandCost:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The remaining On-Demand cost estimated to not be covered
              by the recommended Savings Plans, over the length of the lookback period.
        EstimatedOnDemandCostWithCurrentCommitment:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The estimated On-Demand costs you expect with no additional
              commitment, based on your usage of the selected time period and the
              Savings Plans you own.
        EstimatedSavingsAmount:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The estimated savings amount that's based on the recommended
              Savings Plans over the length of the lookback period.
        EstimatedSavingsPercentage:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The estimated savings percentage relative to the total cost
              of applicable On-Demand usage over the lookback period.
        HourlyCommitmentToPurchase:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The recommended hourly commitment level for the Savings Plans
              type and the configuration that's based on the usage during the lookback
              period.
        EstimatedAverageUtilization:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The estimated utilization of the recommended Savings Plans.
        EstimatedMonthlySavingsAmount:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The estimated monthly savings amount based on the recommended
              Savings Plans.
        CurrentMinimumHourlyOnDemandSpend:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The lowest value of hourly On-Demand spend over the lookback
              period of the applicable usage type.
        CurrentMaximumHourlyOnDemandSpend:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The highest value of hourly On-Demand spend over the lookback
              period of the applicable usage type.
        CurrentAverageHourlyOnDemandSpend:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The average value of hourly On-Demand spend over the lookback
              period of the applicable usage type.
      description: Details for your recommended Savings Plans.
    SavingsPlansSavings:
      type: object
      properties:
        NetSavings:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The savings amount that you're accumulating for the usage
              that's covered by a Savings Plans, when compared to the On-Demand equivalent
              of the same usage.
        OnDemandCostEquivalent:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: How much the amount that the usage would have cost if it
              was accrued at the On-Demand rate.
      description: The amount of savings that you're accumulating, against the public
        On-Demand rate of the usage accrued in an account.
    SavingsPlansUtilization:
      type: object
      properties:
        TotalCommitment:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The total amount of Savings Plans commitment that's been
              purchased in an account (or set of accounts).
        UsedCommitment:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The amount of your Savings Plans commitment that was consumed
              from Savings Plans eligible usage in a specific period.
        UnusedCommitment:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The amount of your Savings Plans commitment that wasn't consumed
              from Savings Plans eligible usage in a specific period.
        UtilizationPercentage:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The amount of UsedCommitment divided by the TotalCommitment
              for your Savings Plans.
      description: The measurement of how well you're using your existing Savings
        Plans.
    SavingsPlansUtilizationByTime:
      type: object
      required:
      - TimePeriod
      - Utilization
      properties:
        TimePeriod:
          $ref: '#/components/schemas/DateInterval'
        Utilization:
          allOf:
          - $ref: '#/components/schemas/SavingsPlansUtilization'
          - description: A ratio of your effectiveness of using existing Savings Plans
              to apply to workloads that are Savings Plans eligible.
        Savings:
          allOf:
          - $ref: '#/components/schemas/SavingsPlansSavings'
          - description: The amount that's saved by using existing Savings Plans.
              Savings returns both net savings from Savings Plans and also the onDemandCostEquivalent
              of the Savings Plans when considering the utilization rate.
        AmortizedCommitment:
          allOf:
          - $ref: '#/components/schemas/SavingsPlansAmortizedCommitment'
          - description: The total amortized commitment for a Savings Plans. This
              includes the sum of the upfront and recurring Savings Plans fees.
      description: The amount of Savings Plans utilization (in hours).
    SavingsPlansUtilizationDetail:
      type: object
      properties:
        SavingsPlanArn:
          allOf:
          - $ref: '#/components/schemas/SavingsPlanArn'
          - description: The unique Amazon Resource Name (ARN) for a particular Savings
              Plan.
        Attributes:
          allOf:
          - $ref: '#/components/schemas/Attributes'
          - description: The attribute that applies to a specific Dimension.
        Utilization:
          allOf:
          - $ref: '#/components/schemas/SavingsPlansUtilization'
          - description: A ratio of your effectiveness of using existing Savings Plans
              to apply to workloads that are Savings Plans eligible.
        Savings:
          allOf:
          - $ref: '#/components/schemas/SavingsPlansSavings'
          - description: The amount saved by using existing Savings Plans. Savings
              returns both net savings from savings plans and also the onDemandCostEquivalent
              of the Savings Plans when considering the utilization rate.
        AmortizedCommitment:
          allOf:
          - $ref: '#/components/schemas/SavingsPlansAmortizedCommitment'
          - description: The total amortized commitment for a Savings Plans. Includes
              the sum of the upfront and recurring Savings Plans fees.
      description: A single daily or monthly Savings Plans utilization rate and details
        for your account. A management account in an organization have access to member
        accounts. You can use GetDimensionValues to determine the possible dimension
        values.
    SortDefinitionKey:
      type: string
      pattern: '[\S\s]*'
      minLength: 0
      maxLength: 1024
    SortOrder:
      type: string
      enum:
      - ASCENDING
      - DESCENDING
    SubscriberAddress:
      type: string
      pattern: 
        (^[a-zA-Z0-9.!#$%&'*+=?^_‘{|}~-]+@[a-zA-Z0-9_-]+(\.[a-zA-Z0-9_-]+)+$)|(^arn:(aws[a-zA-Z-]*):sns:[a-zA-Z0-9-]+:[0-9]{12}:[a-zA-Z0-9_-]+(\.fifo)?$)
      minLength: 6
      maxLength: 302
    SubscriberType:
      type: string
      enum:
      - EMAIL
      - SNS
    SubscriberStatus:
      type: string
      enum:
      - CONFIRMED
      - DECLINED
    Subscriber:
      type: object
      properties:
        Address:
          allOf:
          - $ref: '#/components/schemas/SubscriberAddress'
          - description: The email address or SNS Amazon Resource Name (ARN). This
              depends on the Type.
        Type:
          allOf:
          - $ref: '#/components/schemas/SubscriberType'
          - description: The notification delivery channel.
        Status:
          allOf:
          - $ref: '#/components/schemas/SubscriberStatus'
          - description: Indicates if the subscriber accepts the notifications.
      description: The recipient of AnomalySubscription notifications.
    TargetInstance:
      type: object
      properties:
        EstimatedMonthlyCost:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The expected cost to operate this instance type on a monthly
              basis.
        EstimatedMonthlySavings:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The estimated savings that result from modification, on a
              monthly basis.
        CurrencyCode:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The currency code that Amazon Web Services used to calculate
              the costs for this instance.
        DefaultTargetInstance:
          allOf:
          - $ref: '#/components/schemas/GenericBoolean'
          - description: Determines whether this recommendation is the defaulted Amazon
              Web Services recommendation.
        ResourceDetails:
          allOf:
          - $ref: '#/components/schemas/ResourceDetails'
          - description: Details on the target instance type.
        ExpectedResourceUtilization:
          allOf:
          - $ref: '#/components/schemas/ResourceUtilization'
          - description: The expected utilization metrics for target instance type.
        PlatformDifferences:
          allOf:
          - $ref: '#/components/schemas/PlatformDifferences'
          - description: Explains the actions that you might need to take to successfully
              migrate your workloads from the current instance type to the recommended
              instance type.
      description: Details on recommended instance.
    UpdateCostAllocationTagsStatusError:
      type: object
      properties:
        TagKey:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: The key for the cost allocation tag.
        Code:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: An error code representing why the action failed on this
              entry.
        Message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          - description: A message explaining why the action failed on this entry.
      description: Gives a detailed description of the result of an action. It's on
        each cost allocation tag entry in the request.
    UpdateCostAllocationTagsStatusErrors:
      type: array
      items:
        $ref: '#/components/schemas/UpdateCostAllocationTagsStatusError'
      minItems: 0
      maxItems: 20
    UtilizationByTime:
      type: object
      properties:
        TimePeriod:
          allOf:
          - $ref: '#/components/schemas/DateInterval'
          - description: The period of time that this utilization was used for.
        Groups:
          allOf:
          - $ref: '#/components/schemas/ReservationUtilizationGroups'
          - description: The groups that this utilization result uses.
        Total:
          allOf:
          - $ref: '#/components/schemas/ReservationAggregates'
          - description: The total number of reservation hours that were used.
      description: The amount of utilization, in hours.
security:
- hmac: []
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextPageToken
      location: body
    responseToken:
      key: NextPageToken
      location: body