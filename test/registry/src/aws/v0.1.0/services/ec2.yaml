openapi: 3.0.0
info:
  version: '2016-11-15'
  x-release: v4
  title: Amazon Elastic Compute Cloud
  description: '<fullname>Amazon Elastic Compute Cloud</fullname> <p>Amazon Elastic Compute Cloud (Amazon EC2) provides secure and resizable computing capacity in the Amazon Web Services Cloud. Using Amazon EC2 eliminates the need to invest in hardware up front, so you can develop and deploy applications faster. Amazon Virtual Private Cloud (Amazon VPC) enables you to provision a logically isolated section of the Amazon Web Services Cloud where you can launch Amazon Web Services resources in a virtual network that you''ve defined. Amazon Elastic Block Store (Amazon EBS) provides block level storage volumes for use with EC2 instances. EBS volumes are highly available and reliable storage volumes that can be attached to any running instance and used like a hard drive.</p> <p>To learn more, see the following resources:</p> <ul> <li> <p>Amazon EC2: <a href="http://aws.amazon.com/ec2">AmazonEC2 product page</a>, <a href="http://aws.amazon.com/documentation/ec2">Amazon EC2 documentation</a> </p> </li> <li> <p>Amazon EBS: <a href="http://aws.amazon.com/ebs">Amazon EBS product page</a>, <a href="http://aws.amazon.com/documentation/ebs">Amazon EBS documentation</a> </p> </li> <li> <p>Amazon VPC: <a href="http://aws.amazon.com/vpc">Amazon VPC product page</a>, <a href="http://aws.amazon.com/documentation/vpc">Amazon VPC documentation</a> </p> </li> <li> <p>Amazon Web Services VPN: <a href="http://aws.amazon.com/vpn">Amazon Web Services VPN product page</a>, <a href="http://aws.amazon.com/documentation/vpn">Amazon Web Services VPN documentation</a> </p> </li> </ul>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: ec2
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/ec2-2016-11-15.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/ec2/'
servers:
  - url: 'https://ec2.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon EC2 multi-region endpoint
  - url: 'https://ec2.amazonaws.com'
    variables: {}
    description: The general Amazon EC2 endpoint for US East (N. Virginia)
  - url: 'https://ec2.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon EC2 endpoint for China (Beijing) and China (Ningxia)
paths:
  /?Action=AcceptReservedInstancesExchangeQuote&Version=2016-11-15:
    get:
      x-aws-operation-name: AcceptReservedInstancesExchangeQuote
      operationId: GET_AcceptReservedInstancesExchangeQuote
      description: Accepts the Convertible Reserved Instance exchange quote described in the <a>GetReservedInstancesExchangeQuote</a> call.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AcceptReservedInstancesExchangeQuoteResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: ReservedInstanceId
          in: query
          required: true
          description: The IDs of the Convertible Reserved Instances to exchange for another Convertible Reserved Instance of the same or higher value.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/ReservationId'
                - xml:
                    name: ReservedInstanceId
        - name: TargetConfiguration
          in: query
          required: false
          description: The configuration of the target Convertible Reserved Instance to exchange for your current Convertible Reserved Instances.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TargetConfigurationRequest'
                - xml:
                    name: TargetConfigurationRequest
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: AcceptReservedInstancesExchangeQuote
      operationId: POST_AcceptReservedInstancesExchangeQuote
      description: Accepts the Convertible Reserved Instance exchange quote described in the <a>GetReservedInstancesExchangeQuote</a> call.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AcceptReservedInstancesExchangeQuoteResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AcceptReservedInstancesExchangeQuoteRequest'
      parameters: []
  /?Action=AcceptTransitGatewayMulticastDomainAssociations&Version=2016-11-15:
    get:
      x-aws-operation-name: AcceptTransitGatewayMulticastDomainAssociations
      operationId: GET_AcceptTransitGatewayMulticastDomainAssociations
      description: Accepts a request to associate subnets with a transit gateway multicast domain.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AcceptTransitGatewayMulticastDomainAssociationsResult'
      parameters:
        - name: TransitGatewayMulticastDomainId
          in: query
          required: false
          description: The ID of the transit gateway multicast domain.
          schema:
            type: string
        - name: TransitGatewayAttachmentId
          in: query
          required: false
          description: The ID of the transit gateway attachment.
          schema:
            type: string
        - name: SubnetIds
          in: query
          required: false
          description: The IDs of the subnets to associate with the transit gateway multicast domain.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: item
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: AcceptTransitGatewayMulticastDomainAssociations
      operationId: POST_AcceptTransitGatewayMulticastDomainAssociations
      description: Accepts a request to associate subnets with a transit gateway multicast domain.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AcceptTransitGatewayMulticastDomainAssociationsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AcceptTransitGatewayMulticastDomainAssociationsRequest'
      parameters: []
  /?Action=AcceptTransitGatewayPeeringAttachment&Version=2016-11-15:
    get:
      x-aws-operation-name: AcceptTransitGatewayPeeringAttachment
      operationId: GET_AcceptTransitGatewayPeeringAttachment
      description: Accepts a transit gateway peering attachment request. The peering attachment must be in the <code>pendingAcceptance</code> state.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AcceptTransitGatewayPeeringAttachmentResult'
      parameters:
        - name: TransitGatewayAttachmentId
          in: query
          required: true
          description: The ID of the transit gateway attachment.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: AcceptTransitGatewayPeeringAttachment
      operationId: POST_AcceptTransitGatewayPeeringAttachment
      description: Accepts a transit gateway peering attachment request. The peering attachment must be in the <code>pendingAcceptance</code> state.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AcceptTransitGatewayPeeringAttachmentResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AcceptTransitGatewayPeeringAttachmentRequest'
      parameters: []
  /?Action=AcceptTransitGatewayVpcAttachment&Version=2016-11-15:
    get:
      x-aws-operation-name: AcceptTransitGatewayVpcAttachment
      operationId: GET_AcceptTransitGatewayVpcAttachment
      description: <p>Accepts a request to attach a VPC to a transit gateway.</p> <p>The VPC attachment must be in the <code>pendingAcceptance</code> state. Use <a>DescribeTransitGatewayVpcAttachments</a> to view your pending VPC attachment requests. Use <a>RejectTransitGatewayVpcAttachment</a> to reject a VPC attachment request.</p>
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AcceptTransitGatewayVpcAttachmentResult'
      parameters:
        - name: TransitGatewayAttachmentId
          in: query
          required: true
          description: The ID of the attachment.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: AcceptTransitGatewayVpcAttachment
      operationId: POST_AcceptTransitGatewayVpcAttachment
      description: <p>Accepts a request to attach a VPC to a transit gateway.</p> <p>The VPC attachment must be in the <code>pendingAcceptance</code> state. Use <a>DescribeTransitGatewayVpcAttachments</a> to view your pending VPC attachment requests. Use <a>RejectTransitGatewayVpcAttachment</a> to reject a VPC attachment request.</p>
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AcceptTransitGatewayVpcAttachmentResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AcceptTransitGatewayVpcAttachmentRequest'
      parameters: []
  /?Action=AcceptVpcEndpointConnections&Version=2016-11-15:
    get:
      x-aws-operation-name: AcceptVpcEndpointConnections
      operationId: GET_AcceptVpcEndpointConnections
      description: Accepts one or more interface VPC endpoint connection requests to your VPC endpoint service.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AcceptVpcEndpointConnectionsResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: ServiceId
          in: query
          required: true
          description: The ID of the VPC endpoint service.
          schema:
            type: string
        - name: VpcEndpointId
          in: query
          required: true
          description: The IDs of one or more interface VPC endpoints.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/VpcEndpointId'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: AcceptVpcEndpointConnections
      operationId: POST_AcceptVpcEndpointConnections
      description: Accepts one or more interface VPC endpoint connection requests to your VPC endpoint service.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AcceptVpcEndpointConnectionsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AcceptVpcEndpointConnectionsRequest'
      parameters: []
  /?Action=AcceptVpcPeeringConnection&Version=2016-11-15:
    get:
      x-aws-operation-name: AcceptVpcPeeringConnection
      operationId: GET_AcceptVpcPeeringConnection
      description: '<p>Accept a VPC peering connection request. To accept a request, the VPC peering connection must be in the <code>pending-acceptance</code> state, and you must be the owner of the peer VPC. Use <a>DescribeVpcPeeringConnections</a> to view your outstanding VPC peering connection requests.</p> <p>For an inter-Region VPC peering connection request, you must accept the VPC peering connection in the Region of the accepter VPC.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AcceptVpcPeeringConnectionResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: VpcPeeringConnectionId
          in: query
          required: false
          description: The ID of the VPC peering connection. You must specify this parameter in the request.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: AcceptVpcPeeringConnection
      operationId: POST_AcceptVpcPeeringConnection
      description: '<p>Accept a VPC peering connection request. To accept a request, the VPC peering connection must be in the <code>pending-acceptance</code> state, and you must be the owner of the peer VPC. Use <a>DescribeVpcPeeringConnections</a> to view your outstanding VPC peering connection requests.</p> <p>For an inter-Region VPC peering connection request, you must accept the VPC peering connection in the Region of the accepter VPC.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AcceptVpcPeeringConnectionResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AcceptVpcPeeringConnectionRequest'
      parameters: []
  /?Action=AdvertiseByoipCidr&Version=2016-11-15:
    get:
      x-aws-operation-name: AdvertiseByoipCidr
      operationId: GET_AdvertiseByoipCidr
      description: '<p>Advertises an IPv4 or IPv6 address range that is provisioned for use with your Amazon Web Services resources through bring your own IP addresses (BYOIP).</p> <p>You can perform this operation at most once every 10 seconds, even if you specify different address ranges each time.</p> <p>We recommend that you stop advertising the BYOIP CIDR from other locations when you advertise it from Amazon Web Services. To minimize down time, you can configure your Amazon Web Services resources to use an address from a BYOIP CIDR before it is advertised, and then simultaneously stop advertising it from the current location and start advertising it through Amazon Web Services.</p> <p>It can take a few minutes before traffic to the specified addresses starts routing to Amazon Web Services because of BGP propagation delays.</p> <p>To stop advertising the BYOIP CIDR, use <a>WithdrawByoipCidr</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AdvertiseByoipCidrResult'
      parameters:
        - name: Cidr
          in: query
          required: true
          description: 'The address range, in CIDR notation. This must be the exact range that you provisioned. You can''t advertise only a portion of the provisioned range.'
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: AdvertiseByoipCidr
      operationId: POST_AdvertiseByoipCidr
      description: '<p>Advertises an IPv4 or IPv6 address range that is provisioned for use with your Amazon Web Services resources through bring your own IP addresses (BYOIP).</p> <p>You can perform this operation at most once every 10 seconds, even if you specify different address ranges each time.</p> <p>We recommend that you stop advertising the BYOIP CIDR from other locations when you advertise it from Amazon Web Services. To minimize down time, you can configure your Amazon Web Services resources to use an address from a BYOIP CIDR before it is advertised, and then simultaneously stop advertising it from the current location and start advertising it through Amazon Web Services.</p> <p>It can take a few minutes before traffic to the specified addresses starts routing to Amazon Web Services because of BGP propagation delays.</p> <p>To stop advertising the BYOIP CIDR, use <a>WithdrawByoipCidr</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AdvertiseByoipCidrResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AdvertiseByoipCidrRequest'
      parameters: []
  /?Action=AllocateAddress&Version=2016-11-15:
    get:
      x-aws-operation-name: AllocateAddress
      operationId: GET_AllocateAddress
      description: '<p>Allocates an Elastic IP address to your Amazon Web Services account. After you allocate the Elastic IP address you can associate it with an instance or network interface. After you release an Elastic IP address, it is released to the IP address pool and can be allocated to a different Amazon Web Services account.</p> <p>You can allocate an Elastic IP address from an address pool owned by Amazon Web Services or from an address pool created from a public IPv4 address range that you have brought to Amazon Web Services for use with your Amazon Web Services resources using bring your own IP addresses (BYOIP). For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-byoip.html">Bring Your Own IP Addresses (BYOIP)</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>[EC2-VPC] If you release an Elastic IP address, you might be able to recover it. You cannot recover an Elastic IP address that you released after it is allocated to another Amazon Web Services account. You cannot recover an Elastic IP address for EC2-Classic. To attempt to recover an Elastic IP address that you released, specify it in this operation.</p> <p>An Elastic IP address is for use either in the EC2-Classic platform or in a VPC. By default, you can allocate 5 Elastic IP addresses for EC2-Classic per Region and 5 Elastic IP addresses for EC2-VPC per Region.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>You can allocate a carrier IP address which is a public IP address from a telecommunication carrier, to a network interface which resides in a subnet in a Wavelength Zone (for example an EC2 instance). </p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AllocateAddressResult'
      parameters:
        - name: Domain
          in: query
          required: false
          description: '<p>Indicates whether the Elastic IP address is for use with instances in a VPC or instances in EC2-Classic.</p> <p>Default: If the Region supports EC2-Classic, the default is <code>standard</code>. Otherwise, the default is <code>vpc</code>.</p>'
          schema:
            type: string
            enum:
              - vpc
              - standard
        - name: Address
          in: query
          required: false
          description: '[EC2-VPC] The Elastic IP address to recover or an IPv4 address from an address pool.'
          schema:
            type: string
        - name: PublicIpv4Pool
          in: query
          required: false
          description: 'The ID of an address pool that you own. Use this parameter to let Amazon EC2 select an address from the address pool. To specify a specific address from the address pool, use the <code>Address</code> parameter instead.'
          schema:
            type: string
        - name: NetworkBorderGroup
          in: query
          required: false
          description: '<p> A unique set of Availability Zones, Local Zones, or Wavelength Zones from which Amazon Web Services advertises IP addresses. Use this parameter to limit the IP address to this location. IP addresses cannot move between network border groups.</p> <p>Use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeAvailabilityZones.html">DescribeAvailabilityZones</a> to view the network border groups.</p> <p>You cannot use a network border group with EC2 Classic. If you attempt this operation on EC2 Classic, you receive an <code>InvalidParameterCombination</code> error.</p>'
          schema:
            type: string
        - name: CustomerOwnedIpv4Pool
          in: query
          required: false
          description: 'The ID of a customer-owned address pool. Use this parameter to let Amazon EC2 select an address from the address pool. Alternatively, specify a specific address from the address pool.'
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: TagSpecification
          in: query
          required: false
          description: The tags to assign to the Elastic IP address.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: AllocateAddress
      operationId: POST_AllocateAddress
      description: '<p>Allocates an Elastic IP address to your Amazon Web Services account. After you allocate the Elastic IP address you can associate it with an instance or network interface. After you release an Elastic IP address, it is released to the IP address pool and can be allocated to a different Amazon Web Services account.</p> <p>You can allocate an Elastic IP address from an address pool owned by Amazon Web Services or from an address pool created from a public IPv4 address range that you have brought to Amazon Web Services for use with your Amazon Web Services resources using bring your own IP addresses (BYOIP). For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-byoip.html">Bring Your Own IP Addresses (BYOIP)</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>[EC2-VPC] If you release an Elastic IP address, you might be able to recover it. You cannot recover an Elastic IP address that you released after it is allocated to another Amazon Web Services account. You cannot recover an Elastic IP address for EC2-Classic. To attempt to recover an Elastic IP address that you released, specify it in this operation.</p> <p>An Elastic IP address is for use either in the EC2-Classic platform or in a VPC. By default, you can allocate 5 Elastic IP addresses for EC2-Classic per Region and 5 Elastic IP addresses for EC2-VPC per Region.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>You can allocate a carrier IP address which is a public IP address from a telecommunication carrier, to a network interface which resides in a subnet in a Wavelength Zone (for example an EC2 instance). </p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AllocateAddressResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AllocateAddressRequest'
      parameters: []
  /?Action=AllocateHosts&Version=2016-11-15:
    get:
      x-aws-operation-name: AllocateHosts
      operationId: GET_AllocateHosts
      description: 'Allocates a Dedicated Host to your account. At a minimum, specify the supported instance type or instance family, the Availability Zone in which to allocate the host, and the number of hosts to allocate.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AllocateHostsResult'
      parameters:
        - name: AutoPlacement
          in: query
          required: false
          description: '<p>Indicates whether the host accepts any untargeted instance launches that match its instance type configuration, or if it only accepts Host tenancy instance launches that specify its unique host ID. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/how-dedicated-hosts-work.html#dedicated-hosts-understanding"> Understanding auto-placement and affinity</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>Default: <code>on</code> </p>'
          schema:
            type: string
            enum:
              - 'on'
              - 'off'
        - name: AvailabilityZone
          in: query
          required: true
          description: The Availability Zone in which to allocate the Dedicated Host.
          schema:
            type: string
        - name: ClientToken
          in: query
          required: false
          description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.'
          schema:
            type: string
        - name: InstanceType
          in: query
          required: false
          description: '<p>Specifies the instance type to be supported by the Dedicated Hosts. If you specify an instance type, the Dedicated Hosts support instances of the specified instance type only.</p> <p>If you want the Dedicated Hosts to support multiple instance types in a specific instance family, omit this parameter and specify <b>InstanceFamily</b> instead. You cannot specify <b>InstanceType</b> and <b>InstanceFamily</b> in the same request.</p>'
          schema:
            type: string
        - name: InstanceFamily
          in: query
          required: false
          description: '<p>Specifies the instance family to be supported by the Dedicated Hosts. If you specify an instance family, the Dedicated Hosts support multiple instance types within that instance family.</p> <p>If you want the Dedicated Hosts to support a specific instance type only, omit this parameter and specify <b>InstanceType</b> instead. You cannot specify <b>InstanceFamily</b> and <b>InstanceType</b> in the same request.</p>'
          schema:
            type: string
        - name: Quantity
          in: query
          required: true
          description: The number of Dedicated Hosts to allocate to your account with these parameters.
          schema:
            type: integer
        - name: TagSpecification
          in: query
          required: false
          description: The tags to apply to the Dedicated Host during creation.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
        - name: HostRecovery
          in: query
          required: false
          description: '<p>Indicates whether to enable or disable host recovery for the Dedicated Host. Host recovery is disabled by default. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-recovery.html"> Host recovery</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>Default: <code>off</code> </p>'
          schema:
            type: string
            enum:
              - 'on'
              - 'off'
        - name: OutpostArn
          in: query
          required: false
          description: The Amazon Resource Name (ARN) of the Amazon Web Services Outpost on which to allocate the Dedicated Host.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: AllocateHosts
      operationId: POST_AllocateHosts
      description: 'Allocates a Dedicated Host to your account. At a minimum, specify the supported instance type or instance family, the Availability Zone in which to allocate the host, and the number of hosts to allocate.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AllocateHostsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AllocateHostsRequest'
      parameters: []
  /?Action=AllocateIpamPoolCidr&Version=2016-11-15:
    get:
      x-aws-operation-name: AllocateIpamPoolCidr
      operationId: GET_AllocateIpamPoolCidr
      description: 'Allocate a CIDR from an IPAM pool. In IPAM, an allocation is a CIDR assignment from an IPAM pool to another resource or IPAM pool. For more information, see <a href="/vpc/latest/ipam/allocate-cidrs-ipam.html">Allocate CIDRs</a> in the <i>Amazon VPC IPAM User Guide</i>. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AllocateIpamPoolCidrResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: IpamPoolId
          in: query
          required: true
          description: The ID of the IPAM pool from which you would like to allocate a CIDR.
          schema:
            type: string
        - name: Cidr
          in: query
          required: false
          description: '<p>The CIDR you would like to allocate from the IPAM pool. Note the following:</p> <ul> <li> <p>If there is no DefaultNetmaskLength allocation rule set on the pool, you must specify either the NetmaskLength or the CIDR.</p> </li> <li> <p>If the DefaultNetmaskLength allocation rule is set on the pool, you can specify either the NetmaskLength or the CIDR and the DefaultNetmaskLength allocation rule will be ignored.</p> </li> </ul> <p>Possible values: Any available IPv4 or IPv6 CIDR.</p>'
          schema:
            type: string
        - name: NetmaskLength
          in: query
          required: false
          description: '<p>The netmask length of the CIDR you would like to allocate from the IPAM pool. Note the following:</p> <ul> <li> <p>If there is no DefaultNetmaskLength allocation rule set on the pool, you must specify either the NetmaskLength or the CIDR.</p> </li> <li> <p>If the DefaultNetmaskLength allocation rule is set on the pool, you can specify either the NetmaskLength or the CIDR and the DefaultNetmaskLength allocation rule will be ignored.</p> </li> </ul> <p>Possible netmask lengths for IPv4 addresses are 0 - 32. Possible netmask lengths for IPv6 addresses are 0 - 128.</p>'
          schema:
            type: integer
        - name: ClientToken
          in: query
          required: false
          description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.'
          schema:
            type: string
        - name: Description
          in: query
          required: false
          description: A description for the allocation.
          schema:
            type: string
        - name: PreviewNextCidr
          in: query
          required: false
          description: A preview of the next available CIDR in a pool.
          schema:
            type: boolean
        - name: DisallowedCidr
          in: query
          required: false
          description: Exclude a particular CIDR range from being returned by the pool.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: AllocateIpamPoolCidr
      operationId: POST_AllocateIpamPoolCidr
      description: 'Allocate a CIDR from an IPAM pool. In IPAM, an allocation is a CIDR assignment from an IPAM pool to another resource or IPAM pool. For more information, see <a href="/vpc/latest/ipam/allocate-cidrs-ipam.html">Allocate CIDRs</a> in the <i>Amazon VPC IPAM User Guide</i>. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AllocateIpamPoolCidrResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AllocateIpamPoolCidrRequest'
      parameters: []
  /?Action=ApplySecurityGroupsToClientVpnTargetNetwork&Version=2016-11-15:
    get:
      x-aws-operation-name: ApplySecurityGroupsToClientVpnTargetNetwork
      operationId: GET_ApplySecurityGroupsToClientVpnTargetNetwork
      description: Applies a security group to the association between the target network and the Client VPN endpoint. This action replaces the existing security groups with the specified security groups.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ApplySecurityGroupsToClientVpnTargetNetworkResult'
      parameters:
        - name: ClientVpnEndpointId
          in: query
          required: true
          description: The ID of the Client VPN endpoint.
          schema:
            type: string
        - name: VpcId
          in: query
          required: true
          description: The ID of the VPC in which the associated target network is located.
          schema:
            type: string
        - name: SecurityGroupId
          in: query
          required: true
          description: The IDs of the security groups to apply to the associated target network. Up to 5 security groups can be applied to an associated target network.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/SecurityGroupId'
                - xml:
                    name: item
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ApplySecurityGroupsToClientVpnTargetNetwork
      operationId: POST_ApplySecurityGroupsToClientVpnTargetNetwork
      description: Applies a security group to the association between the target network and the Client VPN endpoint. This action replaces the existing security groups with the specified security groups.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ApplySecurityGroupsToClientVpnTargetNetworkResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ApplySecurityGroupsToClientVpnTargetNetworkRequest'
      parameters: []
  /?Action=AssignIpv6Addresses&Version=2016-11-15:
    get:
      x-aws-operation-name: AssignIpv6Addresses
      operationId: GET_AssignIpv6Addresses
      description: '<p>Assigns one or more IPv6 addresses to the specified network interface. You can specify one or more specific IPv6 addresses, or you can specify the number of IPv6 addresses to be automatically assigned from within the subnet''s IPv6 CIDR block range. You can assign as many IPv6 addresses to a network interface as you can assign private IPv4 addresses, and the limit varies per instance type. For information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI">IP Addresses Per Network Interface Per Instance Type</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>You must specify either the IPv6 addresses or the IPv6 address count in the request. </p> <p>You can optionally use Prefix Delegation on the network interface. You must specify either the IPV6 Prefix Delegation prefixes, or the IPv6 Prefix Delegation count. For information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-prefix-eni.html"> Assigning prefixes to Amazon EC2 network interfaces</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AssignIpv6AddressesResult'
      parameters:
        - name: Ipv6AddressCount
          in: query
          required: false
          description: The number of additional IPv6 addresses to assign to the network interface. The specified number of IPv6 addresses are assigned in addition to the existing IPv6 addresses that are already assigned to the network interface. Amazon EC2 automatically selects the IPv6 addresses from the subnet range. You can't use this option if specifying specific IPv6 addresses.
          schema:
            type: integer
        - name: Ipv6Addresses
          in: query
          required: false
          description: One or more specific IPv6 addresses to be assigned to the network interface. You can't use this option if you're specifying a number of IPv6 addresses.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: item
        - name: Ipv6PrefixCount
          in: query
          required: false
          description: The number of IPv6 prefixes that Amazon Web Services automatically assigns to the network interface. You cannot use this option if you use the <code>Ipv6Prefixes</code> option.
          schema:
            type: integer
        - name: Ipv6Prefix
          in: query
          required: false
          description: One or more IPv6 prefixes assigned to the network interface. You cannot use this option if you use the <code>Ipv6PrefixCount</code> option.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: item
        - name: NetworkInterfaceId
          in: query
          required: true
          description: The ID of the network interface.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: AssignIpv6Addresses
      operationId: POST_AssignIpv6Addresses
      description: '<p>Assigns one or more IPv6 addresses to the specified network interface. You can specify one or more specific IPv6 addresses, or you can specify the number of IPv6 addresses to be automatically assigned from within the subnet''s IPv6 CIDR block range. You can assign as many IPv6 addresses to a network interface as you can assign private IPv4 addresses, and the limit varies per instance type. For information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI">IP Addresses Per Network Interface Per Instance Type</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>You must specify either the IPv6 addresses or the IPv6 address count in the request. </p> <p>You can optionally use Prefix Delegation on the network interface. You must specify either the IPV6 Prefix Delegation prefixes, or the IPv6 Prefix Delegation count. For information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-prefix-eni.html"> Assigning prefixes to Amazon EC2 network interfaces</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AssignIpv6AddressesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AssignIpv6AddressesRequest'
      parameters: []
  /?Action=AssignPrivateIpAddresses&Version=2016-11-15:
    get:
      x-aws-operation-name: AssignPrivateIpAddresses
      operationId: GET_AssignPrivateIpAddresses
      description: '<p>Assigns one or more secondary private IP addresses to the specified network interface.</p> <p>You can specify one or more specific secondary IP addresses, or you can specify the number of secondary IP addresses to be automatically assigned within the subnet''s CIDR block range. The number of secondary IP addresses that you can assign to an instance varies by instance type. For information about instance types, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance Types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. For more information about Elastic IP addresses, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>When you move a secondary private IP address to another network interface, any Elastic IP address that is associated with the IP address is also moved.</p> <p>Remapping an IP address is an asynchronous operation. When you move an IP address from one network interface to another, check <code>network/interfaces/macs/mac/local-ipv4s</code> in the instance metadata to confirm that the remapping is complete.</p> <p>You must specify either the IP addresses or the IP address count in the request.</p> <p>You can optionally use Prefix Delegation on the network interface. You must specify either the IPv4 Prefix Delegation prefixes, or the IPv4 Prefix Delegation count. For information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-prefix-eni.html"> Assigning prefixes to Amazon EC2 network interfaces</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AssignPrivateIpAddressesResult'
      parameters:
        - name: AllowReassignment
          in: query
          required: false
          description: Indicates whether to allow an IP address that is already assigned to another network interface or instance to be reassigned to the specified network interface.
          schema:
            type: boolean
        - name: NetworkInterfaceId
          in: query
          required: true
          description: The ID of the network interface.
          schema:
            type: string
        - name: PrivateIpAddress
          in: query
          required: false
          description: '<p>One or more IP addresses to be assigned as a secondary private IP address to the network interface. You can''t specify this parameter when also specifying a number of secondary IP addresses.</p> <p>If you don''t specify an IP address, Amazon EC2 automatically selects an IP address within the subnet range.</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: PrivateIpAddress
        - name: SecondaryPrivateIpAddressCount
          in: query
          required: false
          description: The number of secondary IP addresses to assign to the network interface. You can't specify this parameter when also specifying private IP addresses.
          schema:
            type: integer
        - name: Ipv4Prefix
          in: query
          required: false
          description: One or more IPv4 prefixes assigned to the network interface. You cannot use this option if you use the <code>Ipv4PrefixCount</code> option.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: item
        - name: Ipv4PrefixCount
          in: query
          required: false
          description: The number of IPv4 prefixes that Amazon Web Services automatically assigns to the network interface. You cannot use this option if you use the <code>Ipv4 Prefixes</code> option.
          schema:
            type: integer
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: AssignPrivateIpAddresses
      operationId: POST_AssignPrivateIpAddresses
      description: '<p>Assigns one or more secondary private IP addresses to the specified network interface.</p> <p>You can specify one or more specific secondary IP addresses, or you can specify the number of secondary IP addresses to be automatically assigned within the subnet''s CIDR block range. The number of secondary IP addresses that you can assign to an instance varies by instance type. For information about instance types, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance Types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. For more information about Elastic IP addresses, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>When you move a secondary private IP address to another network interface, any Elastic IP address that is associated with the IP address is also moved.</p> <p>Remapping an IP address is an asynchronous operation. When you move an IP address from one network interface to another, check <code>network/interfaces/macs/mac/local-ipv4s</code> in the instance metadata to confirm that the remapping is complete.</p> <p>You must specify either the IP addresses or the IP address count in the request.</p> <p>You can optionally use Prefix Delegation on the network interface. You must specify either the IPv4 Prefix Delegation prefixes, or the IPv4 Prefix Delegation count. For information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-prefix-eni.html"> Assigning prefixes to Amazon EC2 network interfaces</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AssignPrivateIpAddressesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AssignPrivateIpAddressesRequest'
      parameters: []
  /?Action=AssociateAddress&Version=2016-11-15:
    get:
      x-aws-operation-name: AssociateAddress
      operationId: GET_AssociateAddress
      description: '<p>Associates an Elastic IP address, or carrier IP address (for instances that are in subnets in Wavelength Zones) with an instance or a network interface. Before you can use an Elastic IP address, you must allocate it to your account.</p> <p>An Elastic IP address is for use in either the EC2-Classic platform or in a VPC. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>[EC2-Classic, VPC in an EC2-VPC-only account] If the Elastic IP address is already associated with a different instance, it is disassociated from that instance and associated with the specified instance. If you associate an Elastic IP address with an instance that has an existing Elastic IP address, the existing address is disassociated from the instance, but remains allocated to your account.</p> <p>[VPC in an EC2-Classic account] If you don''t specify a private IP address, the Elastic IP address is associated with the primary IP address. If the Elastic IP address is already associated with a different instance or a network interface, you get an error unless you allow reassociation. You cannot associate an Elastic IP address with an instance or network interface that has an existing Elastic IP address.</p> <p>[Subnets in Wavelength Zones] You can associate an IP address from the telecommunication carrier to the instance or network interface. </p> <p>You cannot associate an Elastic IP address with an interface in a different network border group.</p> <important> <p>This is an idempotent operation. If you perform the operation more than once, Amazon EC2 doesn''t return an error, and you may be charged for each time the Elastic IP address is remapped to the same instance. For more information, see the <i>Elastic IP Addresses</i> section of <a href="http://aws.amazon.com/ec2/pricing/">Amazon EC2 Pricing</a>.</p> </important>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AssociateAddressResult'
      parameters:
        - name: AllocationId
          in: query
          required: false
          description: '[EC2-VPC] The allocation ID. This is required for EC2-VPC.'
          schema:
            type: string
        - name: InstanceId
          in: query
          required: false
          description: 'The ID of the instance. The instance must have exactly one attached network interface. For EC2-VPC, you can specify either the instance ID or the network interface ID, but not both. For EC2-Classic, you must specify an instance ID and the instance must be in the running state.'
          schema:
            type: string
        - name: PublicIp
          in: query
          required: false
          description: '[EC2-Classic] The Elastic IP address to associate with the instance. This is required for EC2-Classic.'
          schema:
            type: string
        - name: AllowReassociation
          in: query
          required: false
          description: '[EC2-VPC] For a VPC in an EC2-Classic account, specify true to allow an Elastic IP address that is already associated with an instance or network interface to be reassociated with the specified instance or network interface. Otherwise, the operation fails. In a VPC in an EC2-VPC-only account, reassociation is automatic, therefore you can specify false to ensure the operation fails if the Elastic IP address is already associated with another resource.'
          schema:
            type: boolean
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: NetworkInterfaceId
          in: query
          required: false
          description: '<p>[EC2-VPC] The ID of the network interface. If the instance has more than one network interface, you must specify a network interface ID.</p> <p>For EC2-VPC, you can specify either the instance ID or the network interface ID, but not both. </p>'
          schema:
            type: string
        - name: PrivateIpAddress
          in: query
          required: false
          description: '[EC2-VPC] The primary or secondary private IP address to associate with the Elastic IP address. If no private IP address is specified, the Elastic IP address is associated with the primary private IP address.'
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: AssociateAddress
      operationId: POST_AssociateAddress
      description: '<p>Associates an Elastic IP address, or carrier IP address (for instances that are in subnets in Wavelength Zones) with an instance or a network interface. Before you can use an Elastic IP address, you must allocate it to your account.</p> <p>An Elastic IP address is for use in either the EC2-Classic platform or in a VPC. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>[EC2-Classic, VPC in an EC2-VPC-only account] If the Elastic IP address is already associated with a different instance, it is disassociated from that instance and associated with the specified instance. If you associate an Elastic IP address with an instance that has an existing Elastic IP address, the existing address is disassociated from the instance, but remains allocated to your account.</p> <p>[VPC in an EC2-Classic account] If you don''t specify a private IP address, the Elastic IP address is associated with the primary IP address. If the Elastic IP address is already associated with a different instance or a network interface, you get an error unless you allow reassociation. You cannot associate an Elastic IP address with an instance or network interface that has an existing Elastic IP address.</p> <p>[Subnets in Wavelength Zones] You can associate an IP address from the telecommunication carrier to the instance or network interface. </p> <p>You cannot associate an Elastic IP address with an interface in a different network border group.</p> <important> <p>This is an idempotent operation. If you perform the operation more than once, Amazon EC2 doesn''t return an error, and you may be charged for each time the Elastic IP address is remapped to the same instance. For more information, see the <i>Elastic IP Addresses</i> section of <a href="http://aws.amazon.com/ec2/pricing/">Amazon EC2 Pricing</a>.</p> </important>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AssociateAddressResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AssociateAddressRequest'
      parameters: []
  /?Action=AssociateClientVpnTargetNetwork&Version=2016-11-15:
    get:
      x-aws-operation-name: AssociateClientVpnTargetNetwork
      operationId: GET_AssociateClientVpnTargetNetwork
      description: '<p>Associates a target network with a Client VPN endpoint. A target network is a subnet in a VPC. You can associate multiple subnets from the same VPC with a Client VPN endpoint. You can associate only one subnet in each Availability Zone. We recommend that you associate at least two subnets to provide Availability Zone redundancy.</p> <p>If you specified a VPC when you created the Client VPN endpoint or if you have previous subnet associations, the specified subnet must be in the same VPC. To specify a subnet that''s in a different VPC, you must first modify the Client VPN endpoint (<a>ModifyClientVpnEndpoint</a>) and change the VPC that''s associated with it.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AssociateClientVpnTargetNetworkResult'
      parameters:
        - name: ClientVpnEndpointId
          in: query
          required: true
          description: The ID of the Client VPN endpoint.
          schema:
            type: string
        - name: SubnetId
          in: query
          required: true
          description: The ID of the subnet to associate with the Client VPN endpoint.
          schema:
            type: string
        - name: ClientToken
          in: query
          required: false
          description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to ensure idempotency</a>.'
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: AssociateClientVpnTargetNetwork
      operationId: POST_AssociateClientVpnTargetNetwork
      description: '<p>Associates a target network with a Client VPN endpoint. A target network is a subnet in a VPC. You can associate multiple subnets from the same VPC with a Client VPN endpoint. You can associate only one subnet in each Availability Zone. We recommend that you associate at least two subnets to provide Availability Zone redundancy.</p> <p>If you specified a VPC when you created the Client VPN endpoint or if you have previous subnet associations, the specified subnet must be in the same VPC. To specify a subnet that''s in a different VPC, you must first modify the Client VPN endpoint (<a>ModifyClientVpnEndpoint</a>) and change the VPC that''s associated with it.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AssociateClientVpnTargetNetworkResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AssociateClientVpnTargetNetworkRequest'
      parameters: []
  /?Action=AssociateDhcpOptions&Version=2016-11-15:
    get:
      x-aws-operation-name: AssociateDhcpOptions
      operationId: GET_AssociateDhcpOptions
      description: '<p>Associates a set of DHCP options (that you''ve previously created) with the specified VPC, or associates no DHCP options with the VPC.</p> <p>After you associate the options with the VPC, any existing instances and all new instances that you launch in that VPC use the options. You don''t need to restart or relaunch the instances. They automatically pick up the changes within a few hours, depending on how frequently the instance renews its DHCP lease. You can explicitly renew the lease using the operating system on the instance.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_DHCP_Options.html">DHCP options sets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
      parameters:
        - name: DhcpOptionsId
          in: query
          required: true
          description: 'The ID of the DHCP options set, or <code>default</code> to associate no DHCP options with the VPC.'
          schema:
            type: string
        - name: VpcId
          in: query
          required: true
          description: The ID of the VPC.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: AssociateDhcpOptions
      operationId: POST_AssociateDhcpOptions
      description: '<p>Associates a set of DHCP options (that you''ve previously created) with the specified VPC, or associates no DHCP options with the VPC.</p> <p>After you associate the options with the VPC, any existing instances and all new instances that you launch in that VPC use the options. You don''t need to restart or relaunch the instances. They automatically pick up the changes within a few hours, depending on how frequently the instance renews its DHCP lease. You can explicitly renew the lease using the operating system on the instance.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_DHCP_Options.html">DHCP options sets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AssociateDhcpOptionsRequest'
      parameters: []
  /?Action=AssociateEnclaveCertificateIamRole&Version=2016-11-15:
    get:
      x-aws-operation-name: AssociateEnclaveCertificateIamRole
      operationId: GET_AssociateEnclaveCertificateIamRole
      description: '<p>Associates an Identity and Access Management (IAM) role with an Certificate Manager (ACM) certificate. This enables the certificate to be used by the ACM for Nitro Enclaves application inside an enclave. For more information, see <a href="https://docs.aws.amazon.com/enclaves/latest/user/nitro-enclave-refapp.html">Certificate Manager for Nitro Enclaves</a> in the <i>Amazon Web Services Nitro Enclaves User Guide</i>.</p> <p>When the IAM role is associated with the ACM certificate, the certificate, certificate chain, and encrypted private key are placed in an Amazon S3 bucket that only the associated IAM role can access. The private key of the certificate is encrypted with an Amazon Web Services managed key that has an attached attestation-based key policy.</p> <p>To enable the IAM role to access the Amazon S3 object, you must grant it permission to call <code>s3:GetObject</code> on the Amazon S3 bucket returned by the command. To enable the IAM role to access the KMS key, you must grant it permission to call <code>kms:Decrypt</code> on the KMS key returned by the command. For more information, see <a href="https://docs.aws.amazon.com/enclaves/latest/user/nitro-enclave-refapp.html#add-policy"> Grant the role permission to access the certificate and encryption key</a> in the <i>Amazon Web Services Nitro Enclaves User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AssociateEnclaveCertificateIamRoleResult'
      parameters:
        - name: CertificateArn
          in: query
          required: false
          description: The ARN of the ACM certificate with which to associate the IAM role.
          schema:
            type: string
            minLength: 1
            maxLength: 1283
        - name: RoleArn
          in: query
          required: false
          description: The ARN of the IAM role to associate with the ACM certificate. You can associate up to 16 IAM roles with an ACM certificate.
          schema:
            type: string
            minLength: 1
            maxLength: 1283
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: AssociateEnclaveCertificateIamRole
      operationId: POST_AssociateEnclaveCertificateIamRole
      description: '<p>Associates an Identity and Access Management (IAM) role with an Certificate Manager (ACM) certificate. This enables the certificate to be used by the ACM for Nitro Enclaves application inside an enclave. For more information, see <a href="https://docs.aws.amazon.com/enclaves/latest/user/nitro-enclave-refapp.html">Certificate Manager for Nitro Enclaves</a> in the <i>Amazon Web Services Nitro Enclaves User Guide</i>.</p> <p>When the IAM role is associated with the ACM certificate, the certificate, certificate chain, and encrypted private key are placed in an Amazon S3 bucket that only the associated IAM role can access. The private key of the certificate is encrypted with an Amazon Web Services managed key that has an attached attestation-based key policy.</p> <p>To enable the IAM role to access the Amazon S3 object, you must grant it permission to call <code>s3:GetObject</code> on the Amazon S3 bucket returned by the command. To enable the IAM role to access the KMS key, you must grant it permission to call <code>kms:Decrypt</code> on the KMS key returned by the command. For more information, see <a href="https://docs.aws.amazon.com/enclaves/latest/user/nitro-enclave-refapp.html#add-policy"> Grant the role permission to access the certificate and encryption key</a> in the <i>Amazon Web Services Nitro Enclaves User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AssociateEnclaveCertificateIamRoleResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AssociateEnclaveCertificateIamRoleRequest'
      parameters: []
  /?Action=AssociateIamInstanceProfile&Version=2016-11-15:
    get:
      x-aws-operation-name: AssociateIamInstanceProfile
      operationId: GET_AssociateIamInstanceProfile
      description: Associates an IAM instance profile with a running or stopped instance. You cannot associate more than one IAM instance profile with an instance.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AssociateIamInstanceProfileResult'
      parameters:
        - name: IamInstanceProfile
          in: query
          required: true
          description: The IAM instance profile.
          schema:
            type: object
            properties:
              arn:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: The Amazon Resource Name (ARN) of the instance profile.
              name:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: The name of the instance profile.
            description: Describes an IAM instance profile.
        - name: InstanceId
          in: query
          required: true
          description: The ID of the instance.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: AssociateIamInstanceProfile
      operationId: POST_AssociateIamInstanceProfile
      description: Associates an IAM instance profile with a running or stopped instance. You cannot associate more than one IAM instance profile with an instance.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AssociateIamInstanceProfileResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AssociateIamInstanceProfileRequest'
      parameters: []
  /?Action=AssociateInstanceEventWindow&Version=2016-11-15:
    get:
      x-aws-operation-name: AssociateInstanceEventWindow
      operationId: GET_AssociateInstanceEventWindow
      description: '<p>Associates one or more targets with an event window. Only one type of target (instance IDs, Dedicated Host IDs, or tags) can be specified with an event window.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/event-windows.html">Define event windows for scheduled events</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AssociateInstanceEventWindowResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: InstanceEventWindowId
          in: query
          required: true
          description: The ID of the event window.
          schema:
            type: string
        - name: AssociationTarget
          in: query
          required: true
          description: One or more targets associated with the specified event window.
          schema:
            type: object
            properties:
              InstanceId:
                allOf:
                  - $ref: '#/components/schemas/InstanceIdList'
                  - description: 'The IDs of the instances to associate with the event window. If the instance is on a Dedicated Host, you can''t specify the Instance ID parameter; you must use the Dedicated Host ID parameter.'
              InstanceTag:
                allOf:
                  - $ref: '#/components/schemas/TagList'
                  - description: The instance tags to associate with the event window. Any instances associated with the tags will be associated with the event window.
              DedicatedHostId:
                allOf:
                  - $ref: '#/components/schemas/DedicatedHostIdList'
                  - description: The IDs of the Dedicated Hosts to associate with the event window.
            description: 'One or more targets associated with the specified event window. Only one <i>type</i> of target (instance ID, instance tag, or Dedicated Host ID) can be associated with an event window.'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: AssociateInstanceEventWindow
      operationId: POST_AssociateInstanceEventWindow
      description: '<p>Associates one or more targets with an event window. Only one type of target (instance IDs, Dedicated Host IDs, or tags) can be specified with an event window.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/event-windows.html">Define event windows for scheduled events</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AssociateInstanceEventWindowResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AssociateInstanceEventWindowRequest'
      parameters: []
  /?Action=AssociateRouteTable&Version=2016-11-15:
    get:
      x-aws-operation-name: AssociateRouteTable
      operationId: GET_AssociateRouteTable
      description: '<p>Associates a subnet in your VPC or an internet gateway or virtual private gateway attached to your VPC with a route table in your VPC. This association causes traffic from the subnet or gateway to be routed according to the routes in the route table. The action returns an association ID, which you need in order to disassociate the route table later. A route table can be associated with multiple subnets.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html">Route tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AssociateRouteTableResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: RouteTableId
          in: query
          required: true
          description: The ID of the route table.
          schema:
            type: string
        - name: SubnetId
          in: query
          required: false
          description: The ID of the subnet.
          schema:
            type: string
        - name: GatewayId
          in: query
          required: false
          description: The ID of the internet gateway or virtual private gateway.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: AssociateRouteTable
      operationId: POST_AssociateRouteTable
      description: '<p>Associates a subnet in your VPC or an internet gateway or virtual private gateway attached to your VPC with a route table in your VPC. This association causes traffic from the subnet or gateway to be routed according to the routes in the route table. The action returns an association ID, which you need in order to disassociate the route table later. A route table can be associated with multiple subnets.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html">Route tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AssociateRouteTableResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AssociateRouteTableRequest'
      parameters: []
  /?Action=AssociateSubnetCidrBlock&Version=2016-11-15:
    get:
      x-aws-operation-name: AssociateSubnetCidrBlock
      operationId: GET_AssociateSubnetCidrBlock
      description: Associates a CIDR block with your subnet. You can only associate a single IPv6 CIDR block with your subnet. An IPv6 CIDR block must have a prefix length of /64.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AssociateSubnetCidrBlockResult'
      parameters:
        - name: Ipv6CidrBlock
          in: query
          required: true
          description: The IPv6 CIDR block for your subnet. The subnet must have a /64 prefix length.
          schema:
            type: string
        - name: SubnetId
          in: query
          required: true
          description: The ID of your subnet.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: AssociateSubnetCidrBlock
      operationId: POST_AssociateSubnetCidrBlock
      description: Associates a CIDR block with your subnet. You can only associate a single IPv6 CIDR block with your subnet. An IPv6 CIDR block must have a prefix length of /64.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AssociateSubnetCidrBlockResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AssociateSubnetCidrBlockRequest'
      parameters: []
  /?Action=AssociateTransitGatewayMulticastDomain&Version=2016-11-15:
    get:
      x-aws-operation-name: AssociateTransitGatewayMulticastDomain
      operationId: GET_AssociateTransitGatewayMulticastDomain
      description: '<p>Associates the specified subnets and transit gateway attachments with the specified transit gateway multicast domain.</p> <p>The transit gateway attachment must be in the available state before you can add a resource. Use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayAttachments.html">DescribeTransitGatewayAttachments</a> to see the state of the attachment.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AssociateTransitGatewayMulticastDomainResult'
      parameters:
        - name: TransitGatewayMulticastDomainId
          in: query
          required: false
          description: The ID of the transit gateway multicast domain.
          schema:
            type: string
        - name: TransitGatewayAttachmentId
          in: query
          required: false
          description: The ID of the transit gateway attachment to associate with the transit gateway multicast domain.
          schema:
            type: string
        - name: SubnetIds
          in: query
          required: false
          description: The IDs of the subnets to associate with the transit gateway multicast domain.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/SubnetId'
                - xml:
                    name: item
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: AssociateTransitGatewayMulticastDomain
      operationId: POST_AssociateTransitGatewayMulticastDomain
      description: '<p>Associates the specified subnets and transit gateway attachments with the specified transit gateway multicast domain.</p> <p>The transit gateway attachment must be in the available state before you can add a resource. Use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayAttachments.html">DescribeTransitGatewayAttachments</a> to see the state of the attachment.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AssociateTransitGatewayMulticastDomainResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AssociateTransitGatewayMulticastDomainRequest'
      parameters: []
  /?Action=AssociateTransitGatewayRouteTable&Version=2016-11-15:
    get:
      x-aws-operation-name: AssociateTransitGatewayRouteTable
      operationId: GET_AssociateTransitGatewayRouteTable
      description: Associates the specified attachment with the specified transit gateway route table. You can associate only one route table with an attachment.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AssociateTransitGatewayRouteTableResult'
      parameters:
        - name: TransitGatewayRouteTableId
          in: query
          required: true
          description: The ID of the transit gateway route table.
          schema:
            type: string
        - name: TransitGatewayAttachmentId
          in: query
          required: true
          description: The ID of the attachment.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: AssociateTransitGatewayRouteTable
      operationId: POST_AssociateTransitGatewayRouteTable
      description: Associates the specified attachment with the specified transit gateway route table. You can associate only one route table with an attachment.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AssociateTransitGatewayRouteTableResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AssociateTransitGatewayRouteTableRequest'
      parameters: []
  /?Action=AssociateTrunkInterface&Version=2016-11-15:
    get:
      x-aws-operation-name: AssociateTrunkInterface
      operationId: GET_AssociateTrunkInterface
      description: '<note> <p>This API action is currently in <b>limited preview only</b>. If you are interested in using this feature, contact your account manager.</p> </note> <p>Associates a branch network interface with a trunk network interface.</p> <p>Before you create the association, run the <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkInterface.html">create-network-interface</a> command and set <code>--interface-type</code> to <code>trunk</code>. You must also create a network interface for each branch network interface that you want to associate with the trunk network interface.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AssociateTrunkInterfaceResult'
      parameters:
        - name: BranchInterfaceId
          in: query
          required: true
          description: The ID of the branch network interface.
          schema:
            type: string
        - name: TrunkInterfaceId
          in: query
          required: true
          description: The ID of the trunk network interface.
          schema:
            type: string
        - name: VlanId
          in: query
          required: false
          description: The ID of the VLAN. This applies to the VLAN protocol.
          schema:
            type: integer
        - name: GreKey
          in: query
          required: false
          description: The application key. This applies to the GRE protocol.
          schema:
            type: integer
        - name: ClientToken
          in: query
          required: false
          description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to Ensure Idempotency</a>.'
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: AssociateTrunkInterface
      operationId: POST_AssociateTrunkInterface
      description: '<note> <p>This API action is currently in <b>limited preview only</b>. If you are interested in using this feature, contact your account manager.</p> </note> <p>Associates a branch network interface with a trunk network interface.</p> <p>Before you create the association, run the <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkInterface.html">create-network-interface</a> command and set <code>--interface-type</code> to <code>trunk</code>. You must also create a network interface for each branch network interface that you want to associate with the trunk network interface.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AssociateTrunkInterfaceResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AssociateTrunkInterfaceRequest'
      parameters: []
  /?Action=AssociateVpcCidrBlock&Version=2016-11-15:
    get:
      x-aws-operation-name: AssociateVpcCidrBlock
      operationId: GET_AssociateVpcCidrBlock
      description: '<p>Associates a CIDR block with your VPC. You can associate a secondary IPv4 CIDR block, an Amazon-provided IPv6 CIDR block, or an IPv6 CIDR block from an IPv6 address pool that you provisioned through bring your own IP addresses (<a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-byoip.html">BYOIP</a>). The IPv6 CIDR block size is fixed at /56.</p> <p>You must specify one of the following in the request: an IPv4 CIDR block, an IPv6 pool, or an Amazon-provided IPv6 CIDR block.</p> <p>For more information about associating CIDR blocks with your VPC and applicable restrictions, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html#VPC_Sizing">VPC and subnet sizing</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AssociateVpcCidrBlockResult'
      parameters:
        - name: AmazonProvidedIpv6CidrBlock
          in: query
          required: false
          description: 'Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IPv6 addresses, or the size of the CIDR block.'
          schema:
            type: boolean
        - name: CidrBlock
          in: query
          required: false
          description: An IPv4 CIDR block to associate with the VPC.
          schema:
            type: string
        - name: VpcId
          in: query
          required: true
          description: The ID of the VPC.
          schema:
            type: string
        - name: Ipv6CidrBlockNetworkBorderGroup
          in: query
          required: false
          description: <p>The name of the location from which we advertise the IPV6 CIDR block. Use this parameter to limit the CIDR block to this location.</p> <p> You must set <code>AmazonProvidedIpv6CidrBlock</code> to <code>true</code> to use this parameter.</p> <p> You can have one IPv6 CIDR block association per network border group.</p>
          schema:
            type: string
        - name: Ipv6Pool
          in: query
          required: false
          description: The ID of an IPv6 address pool from which to allocate the IPv6 CIDR block.
          schema:
            type: string
        - name: Ipv6CidrBlock
          in: query
          required: false
          description: '<p>An IPv6 CIDR block from the IPv6 address pool. You must also specify <code>Ipv6Pool</code> in the request.</p> <p>To let Amazon choose the IPv6 CIDR block for you, omit this parameter.</p>'
          schema:
            type: string
        - name: Ipv4IpamPoolId
          in: query
          required: false
          description: 'Associate a CIDR allocated from an IPv4 IPAM pool to a VPC. For more information about Amazon VPC IP Address Manager (IPAM), see <a href="/vpc/latest/ipam/what-is-it-ipam.html">What is IPAM?</a> in the <i>Amazon VPC IPAM User Guide</i>.'
          schema:
            type: string
        - name: Ipv4NetmaskLength
          in: query
          required: false
          description: 'The netmask length of the IPv4 CIDR you would like to associate from an Amazon VPC IP Address Manager (IPAM) pool. For more information about IPAM, see <a href="/vpc/latest/ipam/what-is-it-ipam.html">What is IPAM?</a> in the <i>Amazon VPC IPAM User Guide</i>. '
          schema:
            type: integer
        - name: Ipv6IpamPoolId
          in: query
          required: false
          description: 'Associates a CIDR allocated from an IPv6 IPAM pool to a VPC. For more information about Amazon VPC IP Address Manager (IPAM), see <a href="/vpc/latest/ipam/what-is-it-ipam.html">What is IPAM?</a> in the <i>Amazon VPC IPAM User Guide</i>.'
          schema:
            type: string
        - name: Ipv6NetmaskLength
          in: query
          required: false
          description: 'The netmask length of the IPv6 CIDR you would like to associate from an Amazon VPC IP Address Manager (IPAM) pool. For more information about IPAM, see <a href="/vpc/latest/ipam/what-is-it-ipam.html">What is IPAM?</a> in the <i>Amazon VPC IPAM User Guide</i>. '
          schema:
            type: integer
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: AssociateVpcCidrBlock
      operationId: POST_AssociateVpcCidrBlock
      description: '<p>Associates a CIDR block with your VPC. You can associate a secondary IPv4 CIDR block, an Amazon-provided IPv6 CIDR block, or an IPv6 CIDR block from an IPv6 address pool that you provisioned through bring your own IP addresses (<a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-byoip.html">BYOIP</a>). The IPv6 CIDR block size is fixed at /56.</p> <p>You must specify one of the following in the request: an IPv4 CIDR block, an IPv6 pool, or an Amazon-provided IPv6 CIDR block.</p> <p>For more information about associating CIDR blocks with your VPC and applicable restrictions, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html#VPC_Sizing">VPC and subnet sizing</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AssociateVpcCidrBlockResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AssociateVpcCidrBlockRequest'
      parameters: []
  /?Action=AttachClassicLinkVpc&Version=2016-11-15:
    get:
      x-aws-operation-name: AttachClassicLinkVpc
      operationId: GET_AttachClassicLinkVpc
      description: '<p>Links an EC2-Classic instance to a ClassicLink-enabled VPC through one or more of the VPC''s security groups. You cannot link an EC2-Classic instance to more than one VPC at a time. You can only link an instance that''s in the <code>running</code> state. An instance is automatically unlinked from a VPC when it''s stopped - you can link it to the VPC again when you restart it.</p> <p>After you''ve linked an instance, you cannot change the VPC security groups that are associated with it. To change the security groups, you must first unlink the instance, and then link it again.</p> <p>Linking your instance to a VPC is sometimes referred to as <i>attaching</i> your instance.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AttachClassicLinkVpcResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: SecurityGroupId
          in: query
          required: true
          description: The ID of one or more of the VPC's security groups. You cannot specify security groups from a different VPC.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/SecurityGroupId'
                - xml:
                    name: groupId
        - name: InstanceId
          in: query
          required: true
          description: The ID of an EC2-Classic instance to link to the ClassicLink-enabled VPC.
          schema:
            type: string
        - name: VpcId
          in: query
          required: true
          description: The ID of a ClassicLink-enabled VPC.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: AttachClassicLinkVpc
      operationId: POST_AttachClassicLinkVpc
      description: '<p>Links an EC2-Classic instance to a ClassicLink-enabled VPC through one or more of the VPC''s security groups. You cannot link an EC2-Classic instance to more than one VPC at a time. You can only link an instance that''s in the <code>running</code> state. An instance is automatically unlinked from a VPC when it''s stopped - you can link it to the VPC again when you restart it.</p> <p>After you''ve linked an instance, you cannot change the VPC security groups that are associated with it. To change the security groups, you must first unlink the instance, and then link it again.</p> <p>Linking your instance to a VPC is sometimes referred to as <i>attaching</i> your instance.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AttachClassicLinkVpcResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AttachClassicLinkVpcRequest'
      parameters: []
  /?Action=AttachInternetGateway&Version=2016-11-15:
    get:
      x-aws-operation-name: AttachInternetGateway
      operationId: GET_AttachInternetGateway
      description: 'Attaches an internet gateway or a virtual private gateway to a VPC, enabling connectivity between the internet and the VPC. For more information about your VPC and internet gateway, see the <a href="https://docs.aws.amazon.com/vpc/latest/userguide/">Amazon Virtual Private Cloud User Guide</a>.'
      responses:
        '200':
          description: Success
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: InternetGatewayId
          in: query
          required: true
          description: The ID of the internet gateway.
          schema:
            type: string
        - name: VpcId
          in: query
          required: true
          description: The ID of the VPC.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: AttachInternetGateway
      operationId: POST_AttachInternetGateway
      description: 'Attaches an internet gateway or a virtual private gateway to a VPC, enabling connectivity between the internet and the VPC. For more information about your VPC and internet gateway, see the <a href="https://docs.aws.amazon.com/vpc/latest/userguide/">Amazon Virtual Private Cloud User Guide</a>.'
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AttachInternetGatewayRequest'
      parameters: []
  /?Action=AttachNetworkInterface&Version=2016-11-15:
    get:
      x-aws-operation-name: AttachNetworkInterface
      operationId: GET_AttachNetworkInterface
      description: Attaches a network interface to an instance.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AttachNetworkInterfaceResult'
      parameters:
        - name: DeviceIndex
          in: query
          required: true
          description: The index of the device for the network interface attachment.
          schema:
            type: integer
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: InstanceId
          in: query
          required: true
          description: The ID of the instance.
          schema:
            type: string
        - name: NetworkInterfaceId
          in: query
          required: true
          description: The ID of the network interface.
          schema:
            type: string
        - name: NetworkCardIndex
          in: query
          required: false
          description: The index of the network card. Some instance types support multiple network cards. The primary network interface must be assigned to network card index 0. The default is network card index 0.
          schema:
            type: integer
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: AttachNetworkInterface
      operationId: POST_AttachNetworkInterface
      description: Attaches a network interface to an instance.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AttachNetworkInterfaceResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AttachNetworkInterfaceRequest'
      parameters: []
  /?Action=AttachVolume&Version=2016-11-15:
    get:
      x-aws-operation-name: AttachVolume
      operationId: GET_AttachVolume
      description: '<p>Attaches an EBS volume to a running or stopped instance and exposes it to the instance with the specified device name.</p> <p>Encrypted EBS volumes must be attached to instances that support Amazon EBS encryption. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>After you attach an EBS volume, you must make it available. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-using-volumes.html">Make an EBS volume available for use</a>.</p> <p>If a volume has an Amazon Web Services Marketplace product code:</p> <ul> <li> <p>The volume can be attached only to a stopped instance.</p> </li> <li> <p>Amazon Web Services Marketplace product codes are copied from the volume to the instance.</p> </li> <li> <p>You must be subscribed to the product.</p> </li> <li> <p>The instance type and operating system of the instance must support the product. For example, you can''t detach a volume from a Windows instance and attach it to a Linux instance.</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-attaching-volume.html">Attach an Amazon EBS volume to an instance</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/VolumeAttachment'
      parameters:
        - name: Device
          in: query
          required: true
          description: 'The device name (for example, <code>/dev/sdh</code> or <code>xvdh</code>).'
          schema:
            type: string
        - name: InstanceId
          in: query
          required: true
          description: The ID of the instance.
          schema:
            type: string
        - name: VolumeId
          in: query
          required: true
          description: The ID of the EBS volume. The volume and instance must be within the same Availability Zone.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: AttachVolume
      operationId: POST_AttachVolume
      description: '<p>Attaches an EBS volume to a running or stopped instance and exposes it to the instance with the specified device name.</p> <p>Encrypted EBS volumes must be attached to instances that support Amazon EBS encryption. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>After you attach an EBS volume, you must make it available. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-using-volumes.html">Make an EBS volume available for use</a>.</p> <p>If a volume has an Amazon Web Services Marketplace product code:</p> <ul> <li> <p>The volume can be attached only to a stopped instance.</p> </li> <li> <p>Amazon Web Services Marketplace product codes are copied from the volume to the instance.</p> </li> <li> <p>You must be subscribed to the product.</p> </li> <li> <p>The instance type and operating system of the instance must support the product. For example, you can''t detach a volume from a Windows instance and attach it to a Linux instance.</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-attaching-volume.html">Attach an Amazon EBS volume to an instance</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/VolumeAttachment'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AttachVolumeRequest'
      parameters: []
  /?Action=AttachVpnGateway&Version=2016-11-15:
    get:
      x-aws-operation-name: AttachVpnGateway
      operationId: GET_AttachVpnGateway
      description: '<p>Attaches a virtual private gateway to a VPC. You can attach one virtual private gateway to one VPC at a time.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/vpn/latest/s2svpn/VPC_VPN.html">Amazon Web Services Site-to-Site VPN</a> in the <i>Amazon Web Services Site-to-Site VPN User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AttachVpnGatewayResult'
      parameters:
        - name: VpcId
          in: query
          required: true
          description: The ID of the VPC.
          schema:
            type: string
        - name: VpnGatewayId
          in: query
          required: true
          description: The ID of the virtual private gateway.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: AttachVpnGateway
      operationId: POST_AttachVpnGateway
      description: '<p>Attaches a virtual private gateway to a VPC. You can attach one virtual private gateway to one VPC at a time.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/vpn/latest/s2svpn/VPC_VPN.html">Amazon Web Services Site-to-Site VPN</a> in the <i>Amazon Web Services Site-to-Site VPN User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AttachVpnGatewayResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AttachVpnGatewayRequest'
      parameters: []
  /?Action=AuthorizeClientVpnIngress&Version=2016-11-15:
    get:
      x-aws-operation-name: AuthorizeClientVpnIngress
      operationId: GET_AuthorizeClientVpnIngress
      description: Adds an ingress authorization rule to a Client VPN endpoint. Ingress authorization rules act as firewall rules that grant access to networks. You must configure ingress authorization rules to enable clients to access resources in Amazon Web Services or on-premises networks.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizeClientVpnIngressResult'
      parameters:
        - name: ClientVpnEndpointId
          in: query
          required: true
          description: The ID of the Client VPN endpoint.
          schema:
            type: string
        - name: TargetNetworkCidr
          in: query
          required: true
          description: 'The IPv4 address range, in CIDR notation, of the network for which access is being authorized.'
          schema:
            type: string
        - name: AccessGroupId
          in: query
          required: false
          description: 'The ID of the group to grant access to, for example, the Active Directory group or identity provider (IdP) group. Required if <code>AuthorizeAllGroups</code> is <code>false</code> or not specified.'
          schema:
            type: string
        - name: AuthorizeAllGroups
          in: query
          required: false
          description: Indicates whether to grant access to all clients. Specify <code>true</code> to grant all clients who successfully establish a VPN connection access to the network. Must be set to <code>true</code> if <code>AccessGroupId</code> is not specified.
          schema:
            type: boolean
        - name: Description
          in: query
          required: false
          description: A brief description of the authorization rule.
          schema:
            type: string
        - name: ClientToken
          in: query
          required: false
          description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to ensure idempotency</a>.'
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: AuthorizeClientVpnIngress
      operationId: POST_AuthorizeClientVpnIngress
      description: Adds an ingress authorization rule to a Client VPN endpoint. Ingress authorization rules act as firewall rules that grant access to networks. You must configure ingress authorization rules to enable clients to access resources in Amazon Web Services or on-premises networks.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizeClientVpnIngressResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AuthorizeClientVpnIngressRequest'
      parameters: []
  /?Action=AuthorizeSecurityGroupEgress&Version=2016-11-15:
    get:
      x-aws-operation-name: AuthorizeSecurityGroupEgress
      operationId: GET_AuthorizeSecurityGroupEgress
      description: '<p>[VPC only] Adds the specified outbound (egress) rules to a security group for use with a VPC.</p> <p>An outbound rule permits instances to send traffic to the specified IPv4 or IPv6 CIDR address ranges, or to the instances that are associated with the specified source security groups.</p> <p>You specify a protocol for each rule (for example, TCP). For the TCP and UDP protocols, you must also specify the destination port or port range. For the ICMP protocol, you must also specify the ICMP type and code. You can use -1 for the type or code to mean all types or all codes.</p> <p>Rule changes are propagated to affected instances as quickly as possible. However, a small delay might occur.</p> <p>For information about VPC security group quotas, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/amazon-vpc-limits.html">Amazon VPC quotas</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizeSecurityGroupEgressResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: GroupId
          in: query
          required: true
          description: The ID of the security group.
          schema:
            type: string
        - name: IpPermissions
          in: query
          required: false
          description: The sets of IP permissions. You can't specify a destination security group and a CIDR IP address range in the same set of permissions.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/IpPermission'
                - xml:
                    name: item
        - name: TagSpecification
          in: query
          required: false
          description: The tags applied to the security group rule.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
        - name: CidrIp
          in: query
          required: false
          description: Not supported. Use a set of IP permissions to specify the CIDR.
          schema:
            type: string
        - name: FromPort
          in: query
          required: false
          description: Not supported. Use a set of IP permissions to specify the port.
          schema:
            type: integer
        - name: IpProtocol
          in: query
          required: false
          description: Not supported. Use a set of IP permissions to specify the protocol name or number.
          schema:
            type: string
        - name: ToPort
          in: query
          required: false
          description: Not supported. Use a set of IP permissions to specify the port.
          schema:
            type: integer
        - name: SourceSecurityGroupName
          in: query
          required: false
          description: Not supported. Use a set of IP permissions to specify a destination security group.
          schema:
            type: string
        - name: SourceSecurityGroupOwnerId
          in: query
          required: false
          description: Not supported. Use a set of IP permissions to specify a destination security group.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: AuthorizeSecurityGroupEgress
      operationId: POST_AuthorizeSecurityGroupEgress
      description: '<p>[VPC only] Adds the specified outbound (egress) rules to a security group for use with a VPC.</p> <p>An outbound rule permits instances to send traffic to the specified IPv4 or IPv6 CIDR address ranges, or to the instances that are associated with the specified source security groups.</p> <p>You specify a protocol for each rule (for example, TCP). For the TCP and UDP protocols, you must also specify the destination port or port range. For the ICMP protocol, you must also specify the ICMP type and code. You can use -1 for the type or code to mean all types or all codes.</p> <p>Rule changes are propagated to affected instances as quickly as possible. However, a small delay might occur.</p> <p>For information about VPC security group quotas, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/amazon-vpc-limits.html">Amazon VPC quotas</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizeSecurityGroupEgressResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AuthorizeSecurityGroupEgressRequest'
      parameters: []
  /?Action=AuthorizeSecurityGroupIngress&Version=2016-11-15:
    get:
      x-aws-operation-name: AuthorizeSecurityGroupIngress
      operationId: GET_AuthorizeSecurityGroupIngress
      description: '<p>Adds the specified inbound (ingress) rules to a security group.</p> <p>An inbound rule permits instances to receive traffic from the specified IPv4 or IPv6 CIDR address range, or from the instances that are associated with the specified destination security groups.</p> <p>You specify a protocol for each rule (for example, TCP). For TCP and UDP, you must also specify the destination port or port range. For ICMP/ICMPv6, you must also specify the ICMP/ICMPv6 type and code. You can use -1 to mean all types or all codes.</p> <p>Rule changes are propagated to instances within the security group as quickly as possible. However, a small delay might occur.</p> <p>For more information about VPC security group quotas, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/amazon-vpc-limits.html">Amazon VPC quotas</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizeSecurityGroupIngressResult'
      parameters:
        - name: CidrIp
          in: query
          required: false
          description: '<p>The IPv4 address range, in CIDR format. You can''t specify this parameter when specifying a source security group. To specify an IPv6 address range, use a set of IP permissions.</p> <p>Alternatively, use a set of IP permissions to specify multiple rules and a description for the rule.</p>'
          schema:
            type: string
        - name: FromPort
          in: query
          required: false
          description: '<p>The start of port range for the TCP and UDP protocols, or an ICMP type number. For the ICMP type number, use <code>-1</code> to specify all types. If you specify all ICMP types, you must specify all codes.</p> <p>Alternatively, use a set of IP permissions to specify multiple rules and a description for the rule.</p>'
          schema:
            type: integer
        - name: GroupId
          in: query
          required: false
          description: 'The ID of the security group. You must specify either the security group ID or the security group name in the request. For security groups in a nondefault VPC, you must specify the security group ID.'
          schema:
            type: string
        - name: GroupName
          in: query
          required: false
          description: '[EC2-Classic, default VPC] The name of the security group. You must specify either the security group ID or the security group name in the request.'
          schema:
            type: string
        - name: IpPermissions
          in: query
          required: false
          description: The sets of IP permissions.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/IpPermission'
                - xml:
                    name: item
        - name: IpProtocol
          in: query
          required: false
          description: '<p>The IP protocol name (<code>tcp</code>, <code>udp</code>, <code>icmp</code>) or number (see <a href="http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml">Protocol Numbers</a>). To specify <code>icmpv6</code>, use a set of IP permissions.</p> <p>[VPC only] Use <code>-1</code> to specify all protocols. If you specify <code>-1</code> or a protocol other than <code>tcp</code>, <code>udp</code>, or <code>icmp</code>, traffic on all ports is allowed, regardless of any ports you specify.</p> <p>Alternatively, use a set of IP permissions to specify multiple rules and a description for the rule.</p>'
          schema:
            type: string
        - name: SourceSecurityGroupName
          in: query
          required: false
          description: '[EC2-Classic, default VPC] The name of the source security group. You can''t specify this parameter in combination with the following parameters: the CIDR IP address range, the start of the port range, the IP protocol, and the end of the port range. Creates rules that grant full ICMP, UDP, and TCP access. To create a rule with a specific IP protocol and port range, use a set of IP permissions instead. For EC2-VPC, the source security group must be in the same VPC.'
          schema:
            type: string
        - name: SourceSecurityGroupOwnerId
          in: query
          required: false
          description: '[nondefault VPC] The Amazon Web Services account ID for the source security group, if the source security group is in a different account. You can''t specify this parameter in combination with the following parameters: the CIDR IP address range, the IP protocol, the start of the port range, and the end of the port range. Creates rules that grant full ICMP, UDP, and TCP access. To create a rule with a specific IP protocol and port range, use a set of IP permissions instead.'
          schema:
            type: string
        - name: ToPort
          in: query
          required: false
          description: '<p>The end of port range for the TCP and UDP protocols, or an ICMP code number. For the ICMP code number, use <code>-1</code> to specify all codes. If you specify all ICMP types, you must specify all codes.</p> <p>Alternatively, use a set of IP permissions to specify multiple rules and a description for the rule.</p>'
          schema:
            type: integer
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: TagSpecification
          in: query
          required: false
          description: '[VPC Only] The tags applied to the security group rule.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: AuthorizeSecurityGroupIngress
      operationId: POST_AuthorizeSecurityGroupIngress
      description: '<p>Adds the specified inbound (ingress) rules to a security group.</p> <p>An inbound rule permits instances to receive traffic from the specified IPv4 or IPv6 CIDR address range, or from the instances that are associated with the specified destination security groups.</p> <p>You specify a protocol for each rule (for example, TCP). For TCP and UDP, you must also specify the destination port or port range. For ICMP/ICMPv6, you must also specify the ICMP/ICMPv6 type and code. You can use -1 to mean all types or all codes.</p> <p>Rule changes are propagated to instances within the security group as quickly as possible. However, a small delay might occur.</p> <p>For more information about VPC security group quotas, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/amazon-vpc-limits.html">Amazon VPC quotas</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizeSecurityGroupIngressResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AuthorizeSecurityGroupIngressRequest'
      parameters: []
  /?Action=BundleInstance&Version=2016-11-15:
    get:
      x-aws-operation-name: BundleInstance
      operationId: GET_BundleInstance
      description: '<p>Bundles an Amazon instance store-backed Windows instance.</p> <p>During bundling, only the root device volume (C:\) is bundled. Data on other instance store volumes is not preserved.</p> <note> <p>This action is not applicable for Linux/Unix instances or Windows instances that are backed by Amazon EBS.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BundleInstanceResult'
      parameters:
        - name: InstanceId
          in: query
          required: true
          description: '<p>The ID of the instance to bundle.</p> <p>Type: String</p> <p>Default: None</p> <p>Required: Yes</p>'
          schema:
            type: string
        - name: Storage
          in: query
          required: true
          description: 'The bucket in which to store the AMI. You can specify a bucket that you already own or a new bucket that Amazon EC2 creates on your behalf. If you specify a bucket that belongs to someone else, Amazon EC2 returns an error.'
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/S3Storage'
                  - description: An Amazon S3 storage location.
            description: Describes the storage location for an instance store-backed AMI.
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: BundleInstance
      operationId: POST_BundleInstance
      description: '<p>Bundles an Amazon instance store-backed Windows instance.</p> <p>During bundling, only the root device volume (C:\) is bundled. Data on other instance store volumes is not preserved.</p> <note> <p>This action is not applicable for Linux/Unix instances or Windows instances that are backed by Amazon EBS.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BundleInstanceResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/BundleInstanceRequest'
      parameters: []
  /?Action=CancelBundleTask&Version=2016-11-15:
    get:
      x-aws-operation-name: CancelBundleTask
      operationId: GET_CancelBundleTask
      description: Cancels a bundling operation for an instance store-backed Windows instance.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CancelBundleTaskResult'
      parameters:
        - name: BundleId
          in: query
          required: true
          description: The ID of the bundle task.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CancelBundleTask
      operationId: POST_CancelBundleTask
      description: Cancels a bundling operation for an instance store-backed Windows instance.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CancelBundleTaskResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CancelBundleTaskRequest'
      parameters: []
  /?Action=CancelCapacityReservation&Version=2016-11-15:
    get:
      x-aws-operation-name: CancelCapacityReservation
      operationId: GET_CancelCapacityReservation
      description: '<p>Cancels the specified Capacity Reservation, releases the reserved capacity, and changes the Capacity Reservation''s state to <code>cancelled</code>.</p> <p>Instances running in the reserved capacity continue running until you stop them. Stopped instances that target the Capacity Reservation can no longer launch. Modify these instances to either target a different Capacity Reservation, launch On-Demand Instance capacity, or run in any open Capacity Reservation that has matching attributes and sufficient capacity.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CancelCapacityReservationResult'
      parameters:
        - name: CapacityReservationId
          in: query
          required: true
          description: The ID of the Capacity Reservation to be cancelled.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CancelCapacityReservation
      operationId: POST_CancelCapacityReservation
      description: '<p>Cancels the specified Capacity Reservation, releases the reserved capacity, and changes the Capacity Reservation''s state to <code>cancelled</code>.</p> <p>Instances running in the reserved capacity continue running until you stop them. Stopped instances that target the Capacity Reservation can no longer launch. Modify these instances to either target a different Capacity Reservation, launch On-Demand Instance capacity, or run in any open Capacity Reservation that has matching attributes and sufficient capacity.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CancelCapacityReservationResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CancelCapacityReservationRequest'
      parameters: []
  /?Action=CancelCapacityReservationFleets&Version=2016-11-15:
    get:
      x-aws-operation-name: CancelCapacityReservationFleets
      operationId: GET_CancelCapacityReservationFleets
      description: '<p>Cancels one or more Capacity Reservation Fleets. When you cancel a Capacity Reservation Fleet, the following happens:</p> <ul> <li> <p>The Capacity Reservation Fleet''s status changes to <code>cancelled</code>.</p> </li> <li> <p>The individual Capacity Reservations in the Fleet are cancelled. Instances running in the Capacity Reservations at the time of cancelling the Fleet continue to run in shared capacity.</p> </li> <li> <p>The Fleet stops creating new Capacity Reservations.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CancelCapacityReservationFleetsResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: CapacityReservationFleetId
          in: query
          required: true
          description: The IDs of the Capacity Reservation Fleets to cancel.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/CapacityReservationFleetId'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CancelCapacityReservationFleets
      operationId: POST_CancelCapacityReservationFleets
      description: '<p>Cancels one or more Capacity Reservation Fleets. When you cancel a Capacity Reservation Fleet, the following happens:</p> <ul> <li> <p>The Capacity Reservation Fleet''s status changes to <code>cancelled</code>.</p> </li> <li> <p>The individual Capacity Reservations in the Fleet are cancelled. Instances running in the Capacity Reservations at the time of cancelling the Fleet continue to run in shared capacity.</p> </li> <li> <p>The Fleet stops creating new Capacity Reservations.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CancelCapacityReservationFleetsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CancelCapacityReservationFleetsRequest'
      parameters: []
  /?Action=CancelConversionTask&Version=2016-11-15:
    get:
      x-aws-operation-name: CancelConversionTask
      operationId: GET_CancelConversionTask
      description: '<p>Cancels an active conversion task. The task can be the import of an instance or volume. The action removes all artifacts of the conversion, including a partially uploaded volume or instance. If the conversion is complete or is in the process of transferring the final disk image, the command fails and returns an exception.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/CommandLineReference/ec2-cli-vmimport-export.html">Importing a Virtual Machine Using the Amazon EC2 CLI</a>.</p>'
      responses:
        '200':
          description: Success
      parameters:
        - name: ConversionTaskId
          in: query
          required: true
          description: The ID of the conversion task.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: ReasonMessage
          in: query
          required: false
          description: The reason for canceling the conversion task.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CancelConversionTask
      operationId: POST_CancelConversionTask
      description: '<p>Cancels an active conversion task. The task can be the import of an instance or volume. The action removes all artifacts of the conversion, including a partially uploaded volume or instance. If the conversion is complete or is in the process of transferring the final disk image, the command fails and returns an exception.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/CommandLineReference/ec2-cli-vmimport-export.html">Importing a Virtual Machine Using the Amazon EC2 CLI</a>.</p>'
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CancelConversionRequest'
      parameters: []
  /?Action=CancelExportTask&Version=2016-11-15:
    get:
      x-aws-operation-name: CancelExportTask
      operationId: GET_CancelExportTask
      description: 'Cancels an active export task. The request removes all artifacts of the export, including any partially-created Amazon S3 objects. If the export task is complete or is in the process of transferring the final disk image, the command fails and returns an error.'
      responses:
        '200':
          description: Success
      parameters:
        - name: ExportTaskId
          in: query
          required: true
          description: The ID of the export task. This is the ID returned by <code>CreateInstanceExportTask</code>.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CancelExportTask
      operationId: POST_CancelExportTask
      description: 'Cancels an active export task. The request removes all artifacts of the export, including any partially-created Amazon S3 objects. If the export task is complete or is in the process of transferring the final disk image, the command fails and returns an error.'
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CancelExportTaskRequest'
      parameters: []
  /?Action=CancelImportTask&Version=2016-11-15:
    get:
      x-aws-operation-name: CancelImportTask
      operationId: GET_CancelImportTask
      description: Cancels an in-process import virtual machine or import snapshot task.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CancelImportTaskResult'
      parameters:
        - name: CancelReason
          in: query
          required: false
          description: The reason for canceling the task.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: ImportTaskId
          in: query
          required: false
          description: The ID of the import image or import snapshot task to be canceled.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CancelImportTask
      operationId: POST_CancelImportTask
      description: Cancels an in-process import virtual machine or import snapshot task.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CancelImportTaskResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CancelImportTaskRequest'
      parameters: []
  /?Action=CancelReservedInstancesListing&Version=2016-11-15:
    get:
      x-aws-operation-name: CancelReservedInstancesListing
      operationId: GET_CancelReservedInstancesListing
      description: '<p>Cancels the specified Reserved Instance listing in the Reserved Instance Marketplace.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved Instance Marketplace</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CancelReservedInstancesListingResult'
      parameters:
        - name: ReservedInstancesListingId
          in: query
          required: true
          description: The ID of the Reserved Instance listing.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CancelReservedInstancesListing
      operationId: POST_CancelReservedInstancesListing
      description: '<p>Cancels the specified Reserved Instance listing in the Reserved Instance Marketplace.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved Instance Marketplace</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CancelReservedInstancesListingResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CancelReservedInstancesListingRequest'
      parameters: []
  /?Action=CancelSpotFleetRequests&Version=2016-11-15:
    get:
      x-aws-operation-name: CancelSpotFleetRequests
      operationId: GET_CancelSpotFleetRequests
      description: '<p>Cancels the specified Spot Fleet requests.</p> <p>After you cancel a Spot Fleet request, the Spot Fleet launches no new Spot Instances. You must specify whether the Spot Fleet should also terminate its Spot Instances. If you terminate the instances, the Spot Fleet request enters the <code>cancelled_terminating</code> state. Otherwise, the Spot Fleet request enters the <code>cancelled_running</code> state and the instances continue to run until they are interrupted or you terminate them manually.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CancelSpotFleetRequestsResponse'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: SpotFleetRequestId
          in: query
          required: true
          description: The IDs of the Spot Fleet requests.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/SpotFleetRequestId'
                - xml:
                    name: item
        - name: TerminateInstances
          in: query
          required: true
          description: Indicates whether to terminate instances for a Spot Fleet request if it is canceled successfully.
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CancelSpotFleetRequests
      operationId: POST_CancelSpotFleetRequests
      description: '<p>Cancels the specified Spot Fleet requests.</p> <p>After you cancel a Spot Fleet request, the Spot Fleet launches no new Spot Instances. You must specify whether the Spot Fleet should also terminate its Spot Instances. If you terminate the instances, the Spot Fleet request enters the <code>cancelled_terminating</code> state. Otherwise, the Spot Fleet request enters the <code>cancelled_running</code> state and the instances continue to run until they are interrupted or you terminate them manually.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CancelSpotFleetRequestsResponse'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CancelSpotFleetRequestsRequest'
      parameters: []
  /?Action=CancelSpotInstanceRequests&Version=2016-11-15:
    get:
      x-aws-operation-name: CancelSpotInstanceRequests
      operationId: GET_CancelSpotInstanceRequests
      description: <p>Cancels one or more Spot Instance requests.</p> <important> <p>Canceling a Spot Instance request does not terminate running Spot Instances associated with the request.</p> </important>
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CancelSpotInstanceRequestsResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: SpotInstanceRequestId
          in: query
          required: true
          description: One or more Spot Instance request IDs.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/SpotInstanceRequestId'
                - xml:
                    name: SpotInstanceRequestId
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CancelSpotInstanceRequests
      operationId: POST_CancelSpotInstanceRequests
      description: <p>Cancels one or more Spot Instance requests.</p> <important> <p>Canceling a Spot Instance request does not terminate running Spot Instances associated with the request.</p> </important>
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CancelSpotInstanceRequestsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CancelSpotInstanceRequestsRequest'
      parameters: []
  /?Action=ConfirmProductInstance&Version=2016-11-15:
    get:
      x-aws-operation-name: ConfirmProductInstance
      operationId: GET_ConfirmProductInstance
      description: Determines whether a product code is associated with an instance. This action can only be used by the owner of the product code. It is useful when a product code owner must verify whether another user's instance is eligible for support.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConfirmProductInstanceResult'
      parameters:
        - name: InstanceId
          in: query
          required: true
          description: The ID of the instance.
          schema:
            type: string
        - name: ProductCode
          in: query
          required: true
          description: The product code. This must be a product code that you own.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ConfirmProductInstance
      operationId: POST_ConfirmProductInstance
      description: Determines whether a product code is associated with an instance. This action can only be used by the owner of the product code. It is useful when a product code owner must verify whether another user's instance is eligible for support.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConfirmProductInstanceResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ConfirmProductInstanceRequest'
      parameters: []
  /?Action=CopyFpgaImage&Version=2016-11-15:
    get:
      x-aws-operation-name: CopyFpgaImage
      operationId: GET_CopyFpgaImage
      description: Copies the specified Amazon FPGA Image (AFI) to the current Region.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CopyFpgaImageResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: SourceFpgaImageId
          in: query
          required: true
          description: The ID of the source AFI.
          schema:
            type: string
        - name: Description
          in: query
          required: false
          description: The description for the new AFI.
          schema:
            type: string
        - name: Name
          in: query
          required: false
          description: The name for the new AFI. The default is the name of the source AFI.
          schema:
            type: string
        - name: SourceRegion
          in: query
          required: true
          description: The Region that contains the source AFI.
          schema:
            type: string
        - name: ClientToken
          in: query
          required: false
          description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">Ensuring idempotency</a>.'
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CopyFpgaImage
      operationId: POST_CopyFpgaImage
      description: Copies the specified Amazon FPGA Image (AFI) to the current Region.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CopyFpgaImageResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CopyFpgaImageRequest'
      parameters: []
  /?Action=CopyImage&Version=2016-11-15:
    get:
      x-aws-operation-name: CopyImage
      operationId: GET_CopyImage
      description: '<p>Initiates the copy of an AMI. You can copy an AMI from one Region to another, or from a Region to an Outpost. You can''t copy an AMI from an Outpost to a Region, from one Outpost to another, or within the same Outpost. To copy an AMI to another partition, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateStoreImageTask.html">CreateStoreImageTask</a>.</p> <p>To copy an AMI from one Region to another, specify the source Region using the <b>SourceRegion</b> parameter, and specify the destination Region using its endpoint. Copies of encrypted backing snapshots for the AMI are encrypted. Copies of unencrypted backing snapshots remain unencrypted, unless you set <code>Encrypted</code> during the copy operation. You cannot create an unencrypted copy of an encrypted backing snapshot.</p> <p>To copy an AMI from a Region to an Outpost, specify the source Region using the <b>SourceRegion</b> parameter, and specify the ARN of the destination Outpost using <b>DestinationOutpostArn</b>. Backing snapshots copied to an Outpost are encrypted by default using the default encryption key for the Region, or a different key that you specify in the request using <b>KmsKeyId</b>. Outposts do not support unencrypted snapshots. For more information, <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshots-outposts.html#ami"> Amazon EBS local snapshots on Outposts</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>For more information about the prerequisites and limits when copying an AMI, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/CopyingAMIs.html">Copying an AMI</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CopyImageResult'
      parameters:
        - name: ClientToken
          in: query
          required: false
          description: 'Unique, case-sensitive identifier you provide to ensure idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring idempotency</a> in the <i>Amazon EC2 API Reference</i>.'
          schema:
            type: string
        - name: Description
          in: query
          required: false
          description: A description for the new AMI in the destination Region.
          schema:
            type: string
        - name: Encrypted
          in: query
          required: false
          description: 'Specifies whether the destination snapshots of the copied image should be encrypted. You can encrypt a copy of an unencrypted snapshot, but you cannot create an unencrypted copy of an encrypted snapshot. The default KMS key for Amazon EBS is used unless you specify a non-default Key Management Service (KMS) KMS key using <code>KmsKeyId</code>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.'
          schema:
            type: boolean
        - name: KmsKeyId
          in: query
          required: false
          description: '<p>The identifier of the symmetric Key Management Service (KMS) KMS key to use when creating encrypted volumes. If this parameter is not specified, your Amazon Web Services managed KMS key for Amazon EBS is used. If you specify a KMS key, you must also set the encrypted state to <code>true</code>.</p> <p>You can specify a KMS key using any of the following:</p> <ul> <li> <p>Key ID. For example, 1234abcd-12ab-34cd-56ef-1234567890ab.</p> </li> <li> <p>Key alias. For example, alias/ExampleAlias.</p> </li> <li> <p>Key ARN. For example, arn:aws:kms:us-east-1:012345678910:key/1234abcd-12ab-34cd-56ef-1234567890ab.</p> </li> <li> <p>Alias ARN. For example, arn:aws:kms:us-east-1:012345678910:alias/ExampleAlias.</p> </li> </ul> <p>Amazon Web Services authenticates the KMS key asynchronously. Therefore, if you specify an identifier that is not valid, the action can appear to complete, but eventually fails.</p> <p>The specified KMS key must exist in the destination Region.</p> <p>Amazon EBS does not support asymmetric KMS keys.</p>'
          schema:
            type: string
        - name: Name
          in: query
          required: true
          description: The name of the new AMI in the destination Region.
          schema:
            type: string
        - name: SourceImageId
          in: query
          required: true
          description: The ID of the AMI to copy.
          schema:
            type: string
        - name: SourceRegion
          in: query
          required: true
          description: The name of the Region that contains the AMI to copy.
          schema:
            type: string
        - name: DestinationOutpostArn
          in: query
          required: false
          description: '<p>The Amazon Resource Name (ARN) of the Outpost to which to copy the AMI. Only specify this parameter when copying an AMI from an Amazon Web Services Region to an Outpost. The AMI must be in the Region of the destination Outpost. You cannot copy an AMI from an Outpost to a Region, from one Outpost to another, or within the same Outpost.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshots-outposts.html#copy-amis"> Copying AMIs from an Amazon Web Services Region to an Outpost</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CopyImage
      operationId: POST_CopyImage
      description: '<p>Initiates the copy of an AMI. You can copy an AMI from one Region to another, or from a Region to an Outpost. You can''t copy an AMI from an Outpost to a Region, from one Outpost to another, or within the same Outpost. To copy an AMI to another partition, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateStoreImageTask.html">CreateStoreImageTask</a>.</p> <p>To copy an AMI from one Region to another, specify the source Region using the <b>SourceRegion</b> parameter, and specify the destination Region using its endpoint. Copies of encrypted backing snapshots for the AMI are encrypted. Copies of unencrypted backing snapshots remain unencrypted, unless you set <code>Encrypted</code> during the copy operation. You cannot create an unencrypted copy of an encrypted backing snapshot.</p> <p>To copy an AMI from a Region to an Outpost, specify the source Region using the <b>SourceRegion</b> parameter, and specify the ARN of the destination Outpost using <b>DestinationOutpostArn</b>. Backing snapshots copied to an Outpost are encrypted by default using the default encryption key for the Region, or a different key that you specify in the request using <b>KmsKeyId</b>. Outposts do not support unencrypted snapshots. For more information, <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshots-outposts.html#ami"> Amazon EBS local snapshots on Outposts</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>For more information about the prerequisites and limits when copying an AMI, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/CopyingAMIs.html">Copying an AMI</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CopyImageResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CopyImageRequest'
      parameters: []
  /?Action=CopySnapshot&Version=2016-11-15:
    get:
      x-aws-operation-name: CopySnapshot
      operationId: GET_CopySnapshot
      description: '<p>Copies a point-in-time snapshot of an EBS volume and stores it in Amazon S3. You can copy a snapshot within the same Region, from one Region to another, or from a Region to an Outpost. You can''t copy a snapshot from an Outpost to a Region, from one Outpost to another, or within the same Outpost.</p> <p>You can use the snapshot to create EBS volumes or Amazon Machine Images (AMIs).</p> <p>When copying snapshots to a Region, copies of encrypted EBS snapshots remain encrypted. Copies of unencrypted snapshots remain unencrypted, unless you enable encryption for the snapshot copy operation. By default, encrypted snapshot copies use the default Key Management Service (KMS) KMS key; however, you can specify a different KMS key. To copy an encrypted snapshot that has been shared from another account, you must have permissions for the KMS key used to encrypt the snapshot.</p> <p>Snapshots copied to an Outpost are encrypted by default using the default encryption key for the Region, or a different key that you specify in the request using <b>KmsKeyId</b>. Outposts do not support unencrypted snapshots. For more information, <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshots-outposts.html#ami"> Amazon EBS local snapshots on Outposts</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>Snapshots created by copying another snapshot have an arbitrary volume ID that should not be used for any purpose.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-copy-snapshot.html">Copy an Amazon EBS snapshot</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CopySnapshotResult'
      parameters:
        - name: Description
          in: query
          required: false
          description: A description for the EBS snapshot.
          schema:
            type: string
        - name: DestinationOutpostArn
          in: query
          required: false
          description: '<p>The Amazon Resource Name (ARN) of the Outpost to which to copy the snapshot. Only specify this parameter when copying a snapshot from an Amazon Web Services Region to an Outpost. The snapshot must be in the Region for the destination Outpost. You cannot copy a snapshot from an Outpost to a Region, from one Outpost to another, or within the same Outpost.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshots-outposts.html#copy-snapshots"> Copy snapshots from an Amazon Web Services Region to an Outpost</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
          schema:
            type: string
        - name: DestinationRegion
          in: query
          required: false
          description: '<p>The destination Region to use in the <code>PresignedUrl</code> parameter of a snapshot copy operation. This parameter is only valid for specifying the destination Region in a <code>PresignedUrl</code> parameter, where it is required.</p> <p>The snapshot copy is sent to the regional endpoint that you sent the HTTP request to (for example, <code>ec2.us-east-1.amazonaws.com</code>). With the CLI, this is specified using the <code>--region</code> parameter or the default Region in your Amazon Web Services configuration file.</p>'
          schema:
            type: string
        - name: Encrypted
          in: query
          required: false
          description: 'To encrypt a copy of an unencrypted snapshot if encryption by default is not enabled, enable encryption using this parameter. Otherwise, omit this parameter. Encrypted snapshots are encrypted, even if you omit this parameter and encryption by default is not enabled. You cannot set this parameter to false. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.'
          schema:
            type: boolean
        - name: KmsKeyId
          in: query
          required: false
          description: '<p>The identifier of the Key Management Service (KMS) KMS key to use for Amazon EBS encryption. If this parameter is not specified, your KMS key for Amazon EBS is used. If <code>KmsKeyId</code> is specified, the encrypted state must be <code>true</code>.</p> <p>You can specify the KMS key using any of the following:</p> <ul> <li> <p>Key ID. For example, 1234abcd-12ab-34cd-56ef-1234567890ab.</p> </li> <li> <p>Key alias. For example, alias/ExampleAlias.</p> </li> <li> <p>Key ARN. For example, arn:aws:kms:us-east-1:012345678910:key/1234abcd-12ab-34cd-56ef-1234567890ab.</p> </li> <li> <p>Alias ARN. For example, arn:aws:kms:us-east-1:012345678910:alias/ExampleAlias.</p> </li> </ul> <p>Amazon Web Services authenticates the KMS key asynchronously. Therefore, if you specify an ID, alias, or ARN that is not valid, the action can appear to complete, but eventually fails.</p>'
          schema:
            type: string
        - name: PresignedUrl
          in: query
          required: false
          description: '<p>When you copy an encrypted source snapshot using the Amazon EC2 Query API, you must supply a pre-signed URL. This parameter is optional for unencrypted snapshots. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Query-Requests.html">Query requests</a>.</p> <p>The <code>PresignedUrl</code> should use the snapshot source endpoint, the <code>CopySnapshot</code> action, and include the <code>SourceRegion</code>, <code>SourceSnapshotId</code>, and <code>DestinationRegion</code> parameters. The <code>PresignedUrl</code> must be signed using Amazon Web Services Signature Version 4. Because EBS snapshots are stored in Amazon S3, the signing algorithm for this parameter uses the same logic that is described in <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html">Authenticating Requests: Using Query Parameters (Amazon Web Services Signature Version 4)</a> in the <i>Amazon Simple Storage Service API Reference</i>. An invalid or improperly signed <code>PresignedUrl</code> will cause the copy operation to fail asynchronously, and the snapshot will move to an <code>error</code> state.</p>'
          schema:
            type: string
        - name: SourceRegion
          in: query
          required: true
          description: The ID of the Region that contains the snapshot to be copied.
          schema:
            type: string
        - name: SourceSnapshotId
          in: query
          required: true
          description: The ID of the EBS snapshot to copy.
          schema:
            type: string
        - name: TagSpecification
          in: query
          required: false
          description: The tags to apply to the new snapshot.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CopySnapshot
      operationId: POST_CopySnapshot
      description: '<p>Copies a point-in-time snapshot of an EBS volume and stores it in Amazon S3. You can copy a snapshot within the same Region, from one Region to another, or from a Region to an Outpost. You can''t copy a snapshot from an Outpost to a Region, from one Outpost to another, or within the same Outpost.</p> <p>You can use the snapshot to create EBS volumes or Amazon Machine Images (AMIs).</p> <p>When copying snapshots to a Region, copies of encrypted EBS snapshots remain encrypted. Copies of unencrypted snapshots remain unencrypted, unless you enable encryption for the snapshot copy operation. By default, encrypted snapshot copies use the default Key Management Service (KMS) KMS key; however, you can specify a different KMS key. To copy an encrypted snapshot that has been shared from another account, you must have permissions for the KMS key used to encrypt the snapshot.</p> <p>Snapshots copied to an Outpost are encrypted by default using the default encryption key for the Region, or a different key that you specify in the request using <b>KmsKeyId</b>. Outposts do not support unencrypted snapshots. For more information, <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshots-outposts.html#ami"> Amazon EBS local snapshots on Outposts</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>Snapshots created by copying another snapshot have an arbitrary volume ID that should not be used for any purpose.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-copy-snapshot.html">Copy an Amazon EBS snapshot</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CopySnapshotResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CopySnapshotRequest'
      parameters: []
  /?Action=CreateCapacityReservation&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateCapacityReservation
      operationId: GET_CreateCapacityReservation
      description: '<p>Creates a new Capacity Reservation with the specified attributes.</p> <p>Capacity Reservations enable you to reserve capacity for your Amazon EC2 instances in a specific Availability Zone for any duration. This gives you the flexibility to selectively add capacity reservations and still get the Regional RI discounts for that usage. By creating Capacity Reservations, you ensure that you always have access to Amazon EC2 capacity when you need it, for as long as you need it. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-capacity-reservations.html">Capacity Reservations</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>Your request to create a Capacity Reservation could fail if Amazon EC2 does not have sufficient capacity to fulfill the request. If your request fails due to Amazon EC2 capacity constraints, either try again at a later time, try in a different Availability Zone, or request a smaller capacity reservation. If your application is flexible across instance types and sizes, try to create a Capacity Reservation with different instance attributes.</p> <p>Your request could also fail if the requested quantity exceeds your On-Demand Instance limit for the selected instance type. If your request fails due to limit constraints, increase your On-Demand Instance limit for the required instance type and try again. For more information about increasing your instance limits, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-resource-limits.html">Amazon EC2 Service Quotas</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateCapacityReservationResult'
      parameters:
        - name: ClientToken
          in: query
          required: false
          description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensure Idempotency</a>.'
          schema:
            type: string
        - name: InstanceType
          in: query
          required: true
          description: 'The instance type for which to reserve capacity. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance types</a> in the <i>Amazon EC2 User Guide</i>.'
          schema:
            type: string
        - name: InstancePlatform
          in: query
          required: true
          description: The type of operating system for which to reserve capacity.
          schema:
            type: string
            enum:
              - Linux/UNIX
              - Red Hat Enterprise Linux
              - SUSE Linux
              - Windows
              - Windows with SQL Server
              - Windows with SQL Server Enterprise
              - Windows with SQL Server Standard
              - Windows with SQL Server Web
              - Linux with SQL Server Standard
              - Linux with SQL Server Web
              - Linux with SQL Server Enterprise
              - RHEL with SQL Server Standard
              - RHEL with SQL Server Enterprise
              - RHEL with SQL Server Web
              - RHEL with HA
              - RHEL with HA and SQL Server Standard
              - RHEL with HA and SQL Server Enterprise
        - name: AvailabilityZone
          in: query
          required: false
          description: The Availability Zone in which to create the Capacity Reservation.
          schema:
            type: string
        - name: AvailabilityZoneId
          in: query
          required: false
          description: The ID of the Availability Zone in which to create the Capacity Reservation.
          schema:
            type: string
        - name: Tenancy
          in: query
          required: false
          description: '<p>Indicates the tenancy of the Capacity Reservation. A Capacity Reservation can have one of the following tenancy settings:</p> <ul> <li> <p> <code>default</code> - The Capacity Reservation is created on hardware that is shared with other Amazon Web Services accounts.</p> </li> <li> <p> <code>dedicated</code> - The Capacity Reservation is created on single-tenant hardware that is dedicated to a single Amazon Web Services account.</p> </li> </ul>'
          schema:
            type: string
            enum:
              - default
              - dedicated
        - name: InstanceCount
          in: query
          required: true
          description: '<p>The number of instances for which to reserve capacity.</p> <p>Valid range: 1 - 1000</p>'
          schema:
            type: integer
        - name: EbsOptimized
          in: query
          required: false
          description: Indicates whether the Capacity Reservation supports EBS-optimized instances. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS- optimized instance.
          schema:
            type: boolean
        - name: EphemeralStorage
          in: query
          required: false
          description: 'Indicates whether the Capacity Reservation supports instances with temporary, block-level storage.'
          schema:
            type: boolean
        - name: EndDate
          in: query
          required: false
          description: '<p>The date and time at which the Capacity Reservation expires. When a Capacity Reservation expires, the reserved capacity is released and you can no longer launch instances into it. The Capacity Reservation''s state changes to <code>expired</code> when it reaches its end date and time.</p> <p>You must provide an <code>EndDate</code> value if <code>EndDateType</code> is <code>limited</code>. Omit <code>EndDate</code> if <code>EndDateType</code> is <code>unlimited</code>.</p> <p>If the <code>EndDateType</code> is <code>limited</code>, the Capacity Reservation is cancelled within an hour from the specified time. For example, if you specify 5/31/2019, 13:30:55, the Capacity Reservation is guaranteed to end between 13:30:55 and 14:30:55 on 5/31/2019.</p>'
          schema:
            type: string
            format: date-time
        - name: EndDateType
          in: query
          required: false
          description: '<p>Indicates the way in which the Capacity Reservation ends. A Capacity Reservation can have one of the following end types:</p> <ul> <li> <p> <code>unlimited</code> - The Capacity Reservation remains active until you explicitly cancel it. Do not provide an <code>EndDate</code> if the <code>EndDateType</code> is <code>unlimited</code>.</p> </li> <li> <p> <code>limited</code> - The Capacity Reservation expires automatically at a specified date and time. You must provide an <code>EndDate</code> value if the <code>EndDateType</code> value is <code>limited</code>.</p> </li> </ul>'
          schema:
            type: string
            enum:
              - unlimited
              - limited
        - name: InstanceMatchCriteria
          in: query
          required: false
          description: '<p>Indicates the type of instance launches that the Capacity Reservation accepts. The options include:</p> <ul> <li> <p> <code>open</code> - The Capacity Reservation automatically matches all instances that have matching attributes (instance type, platform, and Availability Zone). Instances that have matching attributes run in the Capacity Reservation automatically without specifying any additional parameters.</p> </li> <li> <p> <code>targeted</code> - The Capacity Reservation only accepts instances that have matching attributes (instance type, platform, and Availability Zone), and explicitly target the Capacity Reservation. This ensures that only permitted instances can use the reserved capacity. </p> </li> </ul> <p>Default: <code>open</code> </p>'
          schema:
            type: string
            enum:
              - open
              - targeted
        - name: TagSpecifications
          in: query
          required: false
          description: The tags to apply to the Capacity Reservation during launch.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: OutpostArn
          in: query
          required: false
          description: The Amazon Resource Name (ARN) of the Outpost on which to create the Capacity Reservation.
          schema:
            type: string
            pattern: '^arn:aws([a-z-]+)?:outposts:[a-z\d-]+:\d{12}:outpost/op-[a-f0-9]{17}$'
        - name: PlacementGroupArn
          in: query
          required: false
          description: 'The Amazon Resource Name (ARN) of the cluster placement group in which to create the Capacity Reservation. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/cr-cpg.html"> Capacity Reservations for cluster placement groups</a> in the <i>Amazon EC2 User Guide</i>.'
          schema:
            type: string
            pattern: '^arn:aws([a-z-]+)?:ec2:[a-z\d-]+:\d{12}:placement-group/([^\s].+[^\s]){1,255}$'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateCapacityReservation
      operationId: POST_CreateCapacityReservation
      description: '<p>Creates a new Capacity Reservation with the specified attributes.</p> <p>Capacity Reservations enable you to reserve capacity for your Amazon EC2 instances in a specific Availability Zone for any duration. This gives you the flexibility to selectively add capacity reservations and still get the Regional RI discounts for that usage. By creating Capacity Reservations, you ensure that you always have access to Amazon EC2 capacity when you need it, for as long as you need it. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-capacity-reservations.html">Capacity Reservations</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>Your request to create a Capacity Reservation could fail if Amazon EC2 does not have sufficient capacity to fulfill the request. If your request fails due to Amazon EC2 capacity constraints, either try again at a later time, try in a different Availability Zone, or request a smaller capacity reservation. If your application is flexible across instance types and sizes, try to create a Capacity Reservation with different instance attributes.</p> <p>Your request could also fail if the requested quantity exceeds your On-Demand Instance limit for the selected instance type. If your request fails due to limit constraints, increase your On-Demand Instance limit for the required instance type and try again. For more information about increasing your instance limits, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-resource-limits.html">Amazon EC2 Service Quotas</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateCapacityReservationResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateCapacityReservationRequest'
      parameters: []
  /?Action=CreateCapacityReservationFleet&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateCapacityReservationFleet
      operationId: GET_CreateCapacityReservationFleet
      description: 'Creates a Capacity Reservation Fleet. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/work-with-cr-fleets.html#create-crfleet">Create a Capacity Reservation Fleet</a> in the Amazon EC2 User Guide.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateCapacityReservationFleetResult'
      parameters:
        - name: AllocationStrategy
          in: query
          required: false
          description: '<p>The strategy used by the Capacity Reservation Fleet to determine which of the specified instance types to use. Currently, only the <code>prioritized</code> allocation strategy is supported. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/crfleet-concepts.html#allocation-strategy"> Allocation strategy</a> in the Amazon EC2 User Guide.</p> <p>Valid values: <code>prioritized</code> </p>'
          schema:
            type: string
        - name: ClientToken
          in: query
          required: false
          description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensure Idempotency</a>.'
          schema:
            type: string
        - name: InstanceTypeSpecification
          in: query
          required: true
          description: Information about the instance types for which to reserve the capacity.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ReservationFleetInstanceSpecification'
        - name: Tenancy
          in: query
          required: false
          description: '<p>Indicates the tenancy of the Capacity Reservation Fleet. All Capacity Reservations in the Fleet inherit this tenancy. The Capacity Reservation Fleet can have one of the following tenancy settings:</p> <ul> <li> <p> <code>default</code> - The Capacity Reservation Fleet is created on hardware that is shared with other Amazon Web Services accounts.</p> </li> <li> <p> <code>dedicated</code> - The Capacity Reservations are created on single-tenant hardware that is dedicated to a single Amazon Web Services account.</p> </li> </ul>'
          schema:
            type: string
            enum:
              - default
        - name: TotalTargetCapacity
          in: query
          required: true
          description: 'The total number of capacity units to be reserved by the Capacity Reservation Fleet. This value, together with the instance type weights that you assign to each instance type used by the Fleet determine the number of instances for which the Fleet reserves capacity. Both values are based on units that make sense for your workload. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/crfleet-concepts.html#target-capacity"> Total target capacity</a> in the Amazon EC2 User Guide.'
          schema:
            type: integer
        - name: EndDate
          in: query
          required: false
          description: '<p>The date and time at which the Capacity Reservation Fleet expires. When the Capacity Reservation Fleet expires, its state changes to <code>expired</code> and all of the Capacity Reservations in the Fleet expire.</p> <p>The Capacity Reservation Fleet expires within an hour after the specified time. For example, if you specify <code>5/31/2019</code>, <code>13:30:55</code>, the Capacity Reservation Fleet is guaranteed to expire between <code>13:30:55</code> and <code>14:30:55</code> on <code>5/31/2019</code>. </p>'
          schema:
            type: string
            format: date-time
        - name: InstanceMatchCriteria
          in: query
          required: false
          description: '<p>Indicates the type of instance launches that the Capacity Reservation Fleet accepts. All Capacity Reservations in the Fleet inherit this instance matching criteria.</p> <p>Currently, Capacity Reservation Fleets support <code>open</code> instance matching criteria only. This means that instances that have matching attributes (instance type, platform, and Availability Zone) run in the Capacity Reservations automatically. Instances do not need to explicitly target a Capacity Reservation Fleet to use its reserved capacity.</p>'
          schema:
            type: string
            enum:
              - open
        - name: TagSpecification
          in: query
          required: false
          description: The tags to assign to the Capacity Reservation Fleet. The tags are automatically assigned to the Capacity Reservations in the Fleet.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateCapacityReservationFleet
      operationId: POST_CreateCapacityReservationFleet
      description: 'Creates a Capacity Reservation Fleet. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/work-with-cr-fleets.html#create-crfleet">Create a Capacity Reservation Fleet</a> in the Amazon EC2 User Guide.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateCapacityReservationFleetResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateCapacityReservationFleetRequest'
      parameters: []
  /?Action=CreateCarrierGateway&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateCarrierGateway
      operationId: GET_CreateCarrierGateway
      description: 'Creates a carrier gateway. For more information about carrier gateways, see <a href="https://docs.aws.amazon.com/wavelength/latest/developerguide/how-wavelengths-work.html#wavelength-carrier-gateway">Carrier gateways</a> in the <i>Amazon Web Services Wavelength Developer Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateCarrierGatewayResult'
      parameters:
        - name: VpcId
          in: query
          required: true
          description: The ID of the VPC to associate with the carrier gateway.
          schema:
            type: string
        - name: TagSpecification
          in: query
          required: false
          description: The tags to associate with the carrier gateway.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: ClientToken
          in: query
          required: false
          description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to ensure idempotency</a>.'
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateCarrierGateway
      operationId: POST_CreateCarrierGateway
      description: 'Creates a carrier gateway. For more information about carrier gateways, see <a href="https://docs.aws.amazon.com/wavelength/latest/developerguide/how-wavelengths-work.html#wavelength-carrier-gateway">Carrier gateways</a> in the <i>Amazon Web Services Wavelength Developer Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateCarrierGatewayResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateCarrierGatewayRequest'
      parameters: []
  /?Action=CreateClientVpnEndpoint&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateClientVpnEndpoint
      operationId: GET_CreateClientVpnEndpoint
      description: Creates a Client VPN endpoint. A Client VPN endpoint is the resource you create and configure to enable and manage client VPN sessions. It is the destination endpoint at which all client VPN sessions are terminated.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateClientVpnEndpointResult'
      parameters:
        - name: ClientCidrBlock
          in: query
          required: true
          description: 'The IPv4 address range, in CIDR notation, from which to assign client IP addresses. The address range cannot overlap with the local CIDR of the VPC in which the associated subnet is located, or the routes that you add manually. The address range cannot be changed after the Client VPN endpoint has been created. The CIDR block should be /22 or greater.'
          schema:
            type: string
        - name: ServerCertificateArn
          in: query
          required: true
          description: 'The ARN of the server certificate. For more information, see the <a href="https://docs.aws.amazon.com/acm/latest/userguide/">Certificate Manager User Guide</a>.'
          schema:
            type: string
        - name: Authentication
          in: query
          required: true
          description: Information about the authentication method to be used to authenticate clients.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ClientVpnAuthenticationRequest'
        - name: ConnectionLogOptions
          in: query
          required: true
          description: '<p>Information about the client connection logging options.</p> <p>If you enable client connection logging, data about client connections is sent to a Cloudwatch Logs log stream. The following information is logged:</p> <ul> <li> <p>Client connection requests</p> </li> <li> <p>Client connection results (successful and unsuccessful)</p> </li> <li> <p>Reasons for unsuccessful client connection requests</p> </li> <li> <p>Client connection termination time</p> </li> </ul>'
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: The name of the CloudWatch Logs log stream to which the connection data is published.
            description: Describes the client connection logging options for the Client VPN endpoint.
        - name: DnsServers
          in: query
          required: false
          description: 'Information about the DNS servers to be used for DNS resolution. A Client VPN endpoint can have up to two DNS servers. If no DNS server is specified, the DNS address configured on the device is used for the DNS server.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: item
        - name: TransportProtocol
          in: query
          required: false
          description: '<p>The transport protocol to be used by the VPN session.</p> <p>Default value: <code>udp</code> </p>'
          schema:
            type: string
            enum:
              - tcp
              - udp
        - name: VpnPort
          in: query
          required: false
          description: '<p>The port number to assign to the Client VPN endpoint for TCP and UDP traffic.</p> <p>Valid Values: <code>443</code> | <code>1194</code> </p> <p>Default Value: <code>443</code> </p>'
          schema:
            type: integer
        - name: Description
          in: query
          required: false
          description: A brief description of the Client VPN endpoint.
          schema:
            type: string
        - name: SplitTunnel
          in: query
          required: false
          description: '<p>Indicates whether split-tunnel is enabled on the Client VPN endpoint.</p> <p>By default, split-tunnel on a VPN endpoint is disabled.</p> <p>For information about split-tunnel VPN endpoints, see <a href="https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/split-tunnel-vpn.html">Split-tunnel Client VPN endpoint</a> in the <i>Client VPN Administrator Guide</i>.</p>'
          schema:
            type: boolean
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: ClientToken
          in: query
          required: false
          description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to ensure idempotency</a>.'
          schema:
            type: string
        - name: TagSpecification
          in: query
          required: false
          description: The tags to apply to the Client VPN endpoint during creation.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
        - name: SecurityGroupId
          in: query
          required: false
          description: The IDs of one or more security groups to apply to the target network. You must also specify the ID of the VPC that contains the security groups.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/SecurityGroupId'
                - xml:
                    name: item
        - name: VpcId
          in: query
          required: false
          description: 'The ID of the VPC to associate with the Client VPN endpoint. If no security group IDs are specified in the request, the default security group for the VPC is applied.'
          schema:
            type: string
        - name: SelfServicePortal
          in: query
          required: false
          description: '<p>Specify whether to enable the self-service portal for the Client VPN endpoint.</p> <p>Default Value: <code>enabled</code> </p>'
          schema:
            type: string
            enum:
              - enabled
              - disabled
        - name: ClientConnectOptions
          in: query
          required: false
          description: The options for managing connection authorization for new client connections.
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: The Amazon Resource Name (ARN) of the Lambda function used for connection authorization.
            description: The options for managing connection authorization for new client connections.
        - name: SessionTimeoutHours
          in: query
          required: false
          description: '<p>The maximum VPN session duration time in hours.</p> <p>Valid values: <code>8 | 10 | 12 | 24</code> </p> <p>Default value: <code>24</code> </p>'
          schema:
            type: integer
        - name: ClientLoginBannerOptions
          in: query
          required: false
          description: Options for enabling a customizable text banner that will be displayed on Amazon Web Services provided clients when a VPN session is established.
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: Customizable text that will be displayed in a banner on Amazon Web Services provided clients when a VPN session is established. UTF-8 encoded characters only. Maximum of 1400 characters.
            description: Options for enabling a customizable text banner that will be displayed on Amazon Web Services provided clients when a VPN session is established.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateClientVpnEndpoint
      operationId: POST_CreateClientVpnEndpoint
      description: Creates a Client VPN endpoint. A Client VPN endpoint is the resource you create and configure to enable and manage client VPN sessions. It is the destination endpoint at which all client VPN sessions are terminated.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateClientVpnEndpointResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateClientVpnEndpointRequest'
      parameters: []
  /?Action=CreateClientVpnRoute&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateClientVpnRoute
      operationId: GET_CreateClientVpnRoute
      description: Adds a route to a network to a Client VPN endpoint. Each Client VPN endpoint has a route table that describes the available destination network routes. Each route in the route table specifies the path for traﬃc to speciﬁc resources or networks.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateClientVpnRouteResult'
      parameters:
        - name: ClientVpnEndpointId
          in: query
          required: true
          description: The ID of the Client VPN endpoint to which to add the route.
          schema:
            type: string
        - name: DestinationCidrBlock
          in: query
          required: true
          description: '<p>The IPv4 address range, in CIDR notation, of the route destination. For example:</p> <ul> <li> <p>To add a route for Internet access, enter <code>0.0.0.0/0</code> </p> </li> <li> <p>To add a route for a peered VPC, enter the peered VPC''s IPv4 CIDR range</p> </li> <li> <p>To add a route for an on-premises network, enter the Amazon Web Services Site-to-Site VPN connection''s IPv4 CIDR range</p> </li> <li> <p>To add a route for the local network, enter the client CIDR range</p> </li> </ul>'
          schema:
            type: string
        - name: TargetVpcSubnetId
          in: query
          required: true
          description: '<p>The ID of the subnet through which you want to route traffic. The specified subnet must be an existing target network of the Client VPN endpoint.</p> <p>Alternatively, if you''re adding a route for the local network, specify <code>local</code>.</p>'
          schema:
            type: string
        - name: Description
          in: query
          required: false
          description: A brief description of the route.
          schema:
            type: string
        - name: ClientToken
          in: query
          required: false
          description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to ensure idempotency</a>.'
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateClientVpnRoute
      operationId: POST_CreateClientVpnRoute
      description: Adds a route to a network to a Client VPN endpoint. Each Client VPN endpoint has a route table that describes the available destination network routes. Each route in the route table specifies the path for traﬃc to speciﬁc resources or networks.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateClientVpnRouteResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateClientVpnRouteRequest'
      parameters: []
  /?Action=CreateCustomerGateway&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateCustomerGateway
      operationId: GET_CreateCustomerGateway
      description: '<p>Provides information to Amazon Web Services about your VPN customer gateway device. The customer gateway is the appliance at your end of the VPN connection. (The device on the Amazon Web Services side of the VPN connection is the virtual private gateway.) You must provide the internet-routable IP address of the customer gateway''s external interface. The IP address must be static and can be behind a device performing network address translation (NAT).</p> <p>For devices that use Border Gateway Protocol (BGP), you can also provide the device''s BGP Autonomous System Number (ASN). You can use an existing ASN assigned to your network. If you don''t have an ASN already, you can use a private ASN. For more information, see <a href="https://docs.aws.amazon.com/vpn/latest/s2svpn/cgw-options.html">Customer gateway options for your Site-to-Site VPN connection</a> in the <i>Amazon Web Services Site-to-Site VPN User Guide</i>.</p> <p>To create more than one customer gateway with the same VPN type, IP address, and BGP ASN, specify a unique device name for each customer gateway. An identical request returns information about the existing customer gateway; it doesn''t create a new customer gateway.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateCustomerGatewayResult'
      parameters:
        - name: BgpAsn
          in: query
          required: true
          description: '<p>For devices that support BGP, the customer gateway''s BGP ASN.</p> <p>Default: 65000</p>'
          schema:
            type: integer
        - name: IpAddress
          in: query
          required: false
          description: The Internet-routable IP address for the customer gateway's outside interface. The address must be static.
          schema:
            type: string
        - name: CertificateArn
          in: query
          required: false
          description: The Amazon Resource Name (ARN) for the customer gateway certificate.
          schema:
            type: string
        - name: Type
          in: query
          required: true
          description: The type of VPN connection that this customer gateway supports (<code>ipsec.1</code>).
          schema:
            type: string
            enum:
              - ipsec.1
        - name: TagSpecification
          in: query
          required: false
          description: The tags to apply to the customer gateway.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
        - name: DeviceName
          in: query
          required: false
          description: '<p>A name for the customer gateway device.</p> <p>Length Constraints: Up to 255 characters.</p>'
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateCustomerGateway
      operationId: POST_CreateCustomerGateway
      description: '<p>Provides information to Amazon Web Services about your VPN customer gateway device. The customer gateway is the appliance at your end of the VPN connection. (The device on the Amazon Web Services side of the VPN connection is the virtual private gateway.) You must provide the internet-routable IP address of the customer gateway''s external interface. The IP address must be static and can be behind a device performing network address translation (NAT).</p> <p>For devices that use Border Gateway Protocol (BGP), you can also provide the device''s BGP Autonomous System Number (ASN). You can use an existing ASN assigned to your network. If you don''t have an ASN already, you can use a private ASN. For more information, see <a href="https://docs.aws.amazon.com/vpn/latest/s2svpn/cgw-options.html">Customer gateway options for your Site-to-Site VPN connection</a> in the <i>Amazon Web Services Site-to-Site VPN User Guide</i>.</p> <p>To create more than one customer gateway with the same VPN type, IP address, and BGP ASN, specify a unique device name for each customer gateway. An identical request returns information about the existing customer gateway; it doesn''t create a new customer gateway.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateCustomerGatewayResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateCustomerGatewayRequest'
      parameters: []
  /?Action=CreateDefaultSubnet&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateDefaultSubnet
      operationId: GET_CreateDefaultSubnet
      description: 'Creates a default subnet with a size <code>/20</code> IPv4 CIDR block in the specified Availability Zone in your default VPC. You can have only one default subnet per Availability Zone. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/default-vpc.html#create-default-subnet">Creating a default subnet</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateDefaultSubnetResult'
      parameters:
        - name: AvailabilityZone
          in: query
          required: true
          description: The Availability Zone in which to create the default subnet.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: Ipv6Native
          in: query
          required: false
          description: 'Indicates whether to create an IPv6 only subnet. If you already have a default subnet for this Availability Zone, you must delete it before you can create an IPv6 only subnet.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateDefaultSubnet
      operationId: POST_CreateDefaultSubnet
      description: 'Creates a default subnet with a size <code>/20</code> IPv4 CIDR block in the specified Availability Zone in your default VPC. You can have only one default subnet per Availability Zone. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/default-vpc.html#create-default-subnet">Creating a default subnet</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateDefaultSubnetResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateDefaultSubnetRequest'
      parameters: []
  /?Action=CreateDefaultVpc&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateDefaultVpc
      operationId: GET_CreateDefaultVpc
      description: '<p>Creates a default VPC with a size <code>/16</code> IPv4 CIDR block and a default subnet in each Availability Zone. For more information about the components of a default VPC, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/default-vpc.html">Default VPC and default subnets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>. You cannot specify the components of the default VPC yourself.</p> <p>If you deleted your previous default VPC, you can create a default VPC. You cannot have more than one default VPC per Region.</p> <p>If your account supports EC2-Classic, you cannot use this action to create a default VPC in a Region that supports EC2-Classic. If you want a default VPC in a Region that supports EC2-Classic, see "I really want a default VPC for my existing EC2 account. Is that possible?" in the <a href="http://aws.amazon.com/vpc/faqs/#Default_VPCs">Default VPCs FAQ</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateDefaultVpcResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateDefaultVpc
      operationId: POST_CreateDefaultVpc
      description: '<p>Creates a default VPC with a size <code>/16</code> IPv4 CIDR block and a default subnet in each Availability Zone. For more information about the components of a default VPC, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/default-vpc.html">Default VPC and default subnets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>. You cannot specify the components of the default VPC yourself.</p> <p>If you deleted your previous default VPC, you can create a default VPC. You cannot have more than one default VPC per Region.</p> <p>If your account supports EC2-Classic, you cannot use this action to create a default VPC in a Region that supports EC2-Classic. If you want a default VPC in a Region that supports EC2-Classic, see "I really want a default VPC for my existing EC2 account. Is that possible?" in the <a href="http://aws.amazon.com/vpc/faqs/#Default_VPCs">Default VPCs FAQ</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateDefaultVpcResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateDefaultVpcRequest'
      parameters: []
  /?Action=CreateDhcpOptions&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateDhcpOptions
      operationId: GET_CreateDhcpOptions
      description: '<p>Creates a set of DHCP options for your VPC. After creating the set, you must associate it with the VPC, causing all existing and new instances that you launch in the VPC to use this set of DHCP options. The following are the individual DHCP options you can specify. For more information about the options, see <a href="http://www.ietf.org/rfc/rfc2132.txt">RFC 2132</a>.</p> <ul> <li> <p> <code>domain-name-servers</code> - The IP addresses of up to four domain name servers, or AmazonProvidedDNS. The default DHCP option set specifies AmazonProvidedDNS. If specifying more than one domain name server, specify the IP addresses in a single parameter, separated by commas. To have your instance receive a custom DNS hostname as specified in <code>domain-name</code>, you must set <code>domain-name-servers</code> to a custom DNS server.</p> </li> <li> <p> <code>domain-name</code> - If you''re using AmazonProvidedDNS in <code>us-east-1</code>, specify <code>ec2.internal</code>. If you''re using AmazonProvidedDNS in another Region, specify <code>region.compute.internal</code> (for example, <code>ap-northeast-1.compute.internal</code>). Otherwise, specify a domain name (for example, <code>ExampleCompany.com</code>). This value is used to complete unqualified DNS hostnames. <b>Important</b>: Some Linux operating systems accept multiple domain names separated by spaces. However, Windows and other Linux operating systems treat the value as a single domain, which results in unexpected behavior. If your DHCP options set is associated with a VPC that has instances with multiple operating systems, specify only one domain name.</p> </li> <li> <p> <code>ntp-servers</code> - The IP addresses of up to four Network Time Protocol (NTP) servers.</p> </li> <li> <p> <code>netbios-name-servers</code> - The IP addresses of up to four NetBIOS name servers.</p> </li> <li> <p> <code>netbios-node-type</code> - The NetBIOS node type (1, 2, 4, or 8). We recommend that you specify 2 (broadcast and multicast are not currently supported). For more information about these node types, see <a href="http://www.ietf.org/rfc/rfc2132.txt">RFC 2132</a>.</p> </li> </ul> <p>Your VPC automatically starts out with a set of DHCP options that includes only a DNS server that we provide (AmazonProvidedDNS). If you create a set of options, and if your VPC has an internet gateway, make sure to set the <code>domain-name-servers</code> option either to <code>AmazonProvidedDNS</code> or to a domain name server of your choice. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_DHCP_Options.html">DHCP options sets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateDhcpOptionsResult'
      parameters:
        - name: DhcpConfiguration
          in: query
          required: true
          description: A DHCP configuration option.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/NewDhcpConfiguration'
                - xml:
                    name: item
        - name: TagSpecification
          in: query
          required: false
          description: The tags to assign to the DHCP option.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateDhcpOptions
      operationId: POST_CreateDhcpOptions
      description: '<p>Creates a set of DHCP options for your VPC. After creating the set, you must associate it with the VPC, causing all existing and new instances that you launch in the VPC to use this set of DHCP options. The following are the individual DHCP options you can specify. For more information about the options, see <a href="http://www.ietf.org/rfc/rfc2132.txt">RFC 2132</a>.</p> <ul> <li> <p> <code>domain-name-servers</code> - The IP addresses of up to four domain name servers, or AmazonProvidedDNS. The default DHCP option set specifies AmazonProvidedDNS. If specifying more than one domain name server, specify the IP addresses in a single parameter, separated by commas. To have your instance receive a custom DNS hostname as specified in <code>domain-name</code>, you must set <code>domain-name-servers</code> to a custom DNS server.</p> </li> <li> <p> <code>domain-name</code> - If you''re using AmazonProvidedDNS in <code>us-east-1</code>, specify <code>ec2.internal</code>. If you''re using AmazonProvidedDNS in another Region, specify <code>region.compute.internal</code> (for example, <code>ap-northeast-1.compute.internal</code>). Otherwise, specify a domain name (for example, <code>ExampleCompany.com</code>). This value is used to complete unqualified DNS hostnames. <b>Important</b>: Some Linux operating systems accept multiple domain names separated by spaces. However, Windows and other Linux operating systems treat the value as a single domain, which results in unexpected behavior. If your DHCP options set is associated with a VPC that has instances with multiple operating systems, specify only one domain name.</p> </li> <li> <p> <code>ntp-servers</code> - The IP addresses of up to four Network Time Protocol (NTP) servers.</p> </li> <li> <p> <code>netbios-name-servers</code> - The IP addresses of up to four NetBIOS name servers.</p> </li> <li> <p> <code>netbios-node-type</code> - The NetBIOS node type (1, 2, 4, or 8). We recommend that you specify 2 (broadcast and multicast are not currently supported). For more information about these node types, see <a href="http://www.ietf.org/rfc/rfc2132.txt">RFC 2132</a>.</p> </li> </ul> <p>Your VPC automatically starts out with a set of DHCP options that includes only a DNS server that we provide (AmazonProvidedDNS). If you create a set of options, and if your VPC has an internet gateway, make sure to set the <code>domain-name-servers</code> option either to <code>AmazonProvidedDNS</code> or to a domain name server of your choice. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_DHCP_Options.html">DHCP options sets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateDhcpOptionsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateDhcpOptionsRequest'
      parameters: []
  /?Action=CreateEgressOnlyInternetGateway&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateEgressOnlyInternetGateway
      operationId: GET_CreateEgressOnlyInternetGateway
      description: '[IPv6 only] Creates an egress-only internet gateway for your VPC. An egress-only internet gateway is used to enable outbound communication over IPv6 from instances in your VPC to the internet, and prevents hosts outside of your VPC from initiating an IPv6 connection with your instance.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateEgressOnlyInternetGatewayResult'
      parameters:
        - name: ClientToken
          in: query
          required: false
          description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to ensure idempotency</a>.'
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: VpcId
          in: query
          required: true
          description: The ID of the VPC for which to create the egress-only internet gateway.
          schema:
            type: string
        - name: TagSpecification
          in: query
          required: false
          description: The tags to assign to the egress-only internet gateway.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateEgressOnlyInternetGateway
      operationId: POST_CreateEgressOnlyInternetGateway
      description: '[IPv6 only] Creates an egress-only internet gateway for your VPC. An egress-only internet gateway is used to enable outbound communication over IPv6 from instances in your VPC to the internet, and prevents hosts outside of your VPC from initiating an IPv6 connection with your instance.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateEgressOnlyInternetGatewayResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateEgressOnlyInternetGatewayRequest'
      parameters: []
  /?Action=CreateFleet&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateFleet
      operationId: GET_CreateFleet
      description: '<p>Launches an EC2 Fleet.</p> <p>You can create a single EC2 Fleet that includes multiple launch specifications that vary by instance type, AMI, Availability Zone, or subnet.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet.html">EC2 Fleet</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateFleetResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: ClientToken
          in: query
          required: false
          description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring idempotency</a>.'
          schema:
            type: string
        - name: SpotOptions
          in: query
          required: false
          description: Describes the configuration of Spot Instances in an EC2 Fleet.
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: The maximum amount per hour for Spot Instances that you're willing to pay.
            description: Describes the configuration of Spot Instances in an EC2 Fleet request.
        - name: OnDemandOptions
          in: query
          required: false
          description: Describes the configuration of On-Demand Instances in an EC2 Fleet.
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: The maximum amount per hour for On-Demand Instances that you're willing to pay.
            description: Describes the configuration of On-Demand Instances in an EC2 Fleet.
        - name: ExcessCapacityTerminationPolicy
          in: query
          required: false
          description: Indicates whether running instances should be terminated if the total target capacity of the EC2 Fleet is decreased below the current size of the EC2 Fleet.
          schema:
            type: string
            enum:
              - no-termination
              - termination
        - name: LaunchTemplateConfigs
          in: query
          required: true
          description: The configuration for the EC2 Fleet.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/FleetLaunchTemplateConfigRequest'
                - xml:
                    name: item
            minItems: 0
            maxItems: 50
        - name: TargetCapacitySpecification
          in: query
          required: true
          description: The number of units to request.
          schema:
            type: object
            required:
              - TotalTargetCapacity
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/TargetCapacityUnitType'
                  - description: '<p>The unit for the target capacity.</p> <p>Default: <code>units</code> (translates to number of instances)</p>'
            description: '<p>The number of units to request. You can choose to set the target capacity as the number of instances. Or you can set the target capacity to a performance characteristic that is important to your application workload, such as vCPUs, memory, or I/O. If the request type is <code>maintain</code>, you can specify a target capacity of 0 and add capacity later.</p> <p>You can use the On-Demand Instance <code>MaxTotalPrice</code> parameter, the Spot Instance <code>MaxTotalPrice</code> parameter, or both parameters to ensure that your fleet cost does not exceed your budget. If you set a maximum price per hour for the On-Demand Instances and Spot Instances in your request, EC2 Fleet will launch instances until it reaches the maximum amount that you''re willing to pay. When the maximum amount you''re willing to pay is reached, the fleet stops launching instances even if it hasn’t met the target capacity. The <code>MaxTotalPrice</code> parameters are located in <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_OnDemandOptionsRequest">OnDemandOptionsRequest</a> and <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SpotOptionsRequest">SpotOptionsRequest</a>.</p>'
        - name: TerminateInstancesWithExpiration
          in: query
          required: false
          description: Indicates whether running instances should be terminated when the EC2 Fleet expires.
          schema:
            type: boolean
        - name: Type
          in: query
          required: false
          description: '<p>The fleet type. The default value is <code>maintain</code>.</p> <ul> <li> <p> <code>maintain</code> - The EC2 Fleet places an asynchronous request for your desired capacity, and continues to maintain your desired Spot capacity by replenishing interrupted Spot Instances.</p> </li> <li> <p> <code>request</code> - The EC2 Fleet places an asynchronous one-time request for your desired capacity, but does submit Spot requests in alternative capacity pools if Spot capacity is unavailable, and does not maintain Spot capacity if Spot Instances are interrupted.</p> </li> <li> <p> <code>instant</code> - The EC2 Fleet places a synchronous one-time request for your desired capacity, and returns errors for any instances that could not be launched.</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-request-type.html">EC2 Fleet request types</a> in the <i>Amazon EC2 User Guide</i>.</p>'
          schema:
            type: string
            enum:
              - request
              - maintain
              - instant
        - name: ValidFrom
          in: query
          required: false
          description: 'The start date and time of the request, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). The default is to start fulfilling the request immediately.'
          schema:
            type: string
            format: date-time
        - name: ValidUntil
          in: query
          required: false
          description: 'The end date and time of the request, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). At this point, no new EC2 Fleet requests are placed or able to fulfill the request. If no value is specified, the request remains until you cancel it.'
          schema:
            type: string
            format: date-time
        - name: ReplaceUnhealthyInstances
          in: query
          required: false
          description: 'Indicates whether EC2 Fleet should replace unhealthy Spot Instances. Supported only for fleets of type <code>maintain</code>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/manage-ec2-fleet.html#ec2-fleet-health-checks">EC2 Fleet health checks</a> in the <i>Amazon EC2 User Guide</i>.'
          schema:
            type: boolean
        - name: TagSpecification
          in: query
          required: false
          description: '<p>The key-value pair for tagging the EC2 Fleet request on creation. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#tag-resources">Tagging your resources</a>.</p> <p>If the fleet type is <code>instant</code>, specify a resource type of <code>fleet</code> to tag the fleet or <code>instance</code> to tag the instances at launch.</p> <p>If the fleet type is <code>maintain</code> or <code>request</code>, specify a resource type of <code>fleet</code> to tag the fleet. You cannot specify a resource type of <code>instance</code>. To tag instances at launch, specify the tags in a <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html#create-launch-template">launch template</a>.</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
        - name: Context
          in: query
          required: false
          description: Reserved.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateFleet
      operationId: POST_CreateFleet
      description: '<p>Launches an EC2 Fleet.</p> <p>You can create a single EC2 Fleet that includes multiple launch specifications that vary by instance type, AMI, Availability Zone, or subnet.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet.html">EC2 Fleet</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateFleetResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateFleetRequest'
      parameters: []
  /?Action=CreateFlowLogs&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateFlowLogs
      operationId: GET_CreateFlowLogs
      description: '<p>Creates one or more flow logs to capture information about IP traffic for a specific network interface, subnet, or VPC. </p> <p>Flow log data for a monitored network interface is recorded as flow log records, which are log events consisting of fields that describe the traffic flow. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs.html#flow-log-records">Flow log records</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p> <p>When publishing to CloudWatch Logs, flow log records are published to a log group, and each network interface has a unique log stream in the log group. When publishing to Amazon S3, flow log records for all of the monitored network interfaces are published to a single log file object that is stored in the specified bucket.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs.html">VPC Flow Logs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateFlowLogsResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: ClientToken
          in: query
          required: false
          description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to ensure idempotency</a>.'
          schema:
            type: string
        - name: DeliverLogsPermissionArn
          in: query
          required: false
          description: '<p>The ARN for the IAM role that permits Amazon EC2 to publish flow logs to a CloudWatch Logs log group in your account.</p> <p>If you specify <code>LogDestinationType</code> as <code>s3</code>, do not specify <code>DeliverLogsPermissionArn</code> or <code>LogGroupName</code>.</p>'
          schema:
            type: string
        - name: LogGroupName
          in: query
          required: false
          description: '<p>The name of a new or existing CloudWatch Logs log group where Amazon EC2 publishes your flow logs.</p> <p>If you specify <code>LogDestinationType</code> as <code>s3</code>, do not specify <code>DeliverLogsPermissionArn</code> or <code>LogGroupName</code>.</p>'
          schema:
            type: string
        - name: ResourceId
          in: query
          required: true
          description: '<p>The ID of the subnet, network interface, or VPC for which you want to create a flow log.</p> <p>Constraints: Maximum of 1000 resources</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/FlowLogResourceId'
                - xml:
                    name: item
        - name: ResourceType
          in: query
          required: true
          description: 'The type of resource for which to create the flow log. For example, if you specified a VPC ID for the <code>ResourceId</code> property, specify <code>VPC</code> for this property.'
          schema:
            type: string
            enum:
              - VPC
              - Subnet
              - NetworkInterface
        - name: TrafficType
          in: query
          required: true
          description: 'The type of traffic to log. You can log traffic that the resource accepts or rejects, or all traffic.'
          schema:
            type: string
            enum:
              - ACCEPT
              - REJECT
              - ALL
        - name: LogDestinationType
          in: query
          required: false
          description: '<p>The type of destination to which the flow log data is to be published. Flow log data can be published to CloudWatch Logs or Amazon S3. To publish flow log data to CloudWatch Logs, specify <code>cloud-watch-logs</code>. To publish flow log data to Amazon S3, specify <code>s3</code>.</p> <p>If you specify <code>LogDestinationType</code> as <code>s3</code>, do not specify <code>DeliverLogsPermissionArn</code> or <code>LogGroupName</code>.</p> <p>Default: <code>cloud-watch-logs</code> </p>'
          schema:
            type: string
            enum:
              - cloud-watch-logs
              - s3
        - name: LogDestination
          in: query
          required: false
          description: '<p>The destination to which the flow log data is to be published. Flow log data can be published to a CloudWatch Logs log group or an Amazon S3 bucket. The value specified for this parameter depends on the value specified for <code>LogDestinationType</code>.</p> <p>If <code>LogDestinationType</code> is not specified or <code>cloud-watch-logs</code>, specify the Amazon Resource Name (ARN) of the CloudWatch Logs log group. For example, to publish to a log group called <code>my-logs</code>, specify <code>arn:aws:logs:us-east-1:123456789012:log-group:my-logs</code>. Alternatively, use <code>LogGroupName</code> instead.</p> <p>If LogDestinationType is <code>s3</code>, specify the ARN of the Amazon S3 bucket. You can also specify a subfolder in the bucket. To specify a subfolder in the bucket, use the following ARN format: <code>bucket_ARN/subfolder_name/</code>. For example, to specify a subfolder named <code>my-logs</code> in a bucket named <code>my-bucket</code>, use the following ARN: <code>arn:aws:s3:::my-bucket/my-logs/</code>. You cannot use <code>AWSLogs</code> as a subfolder name. This is a reserved term.</p>'
          schema:
            type: string
        - name: LogFormat
          in: query
          required: false
          description: '<p>The fields to include in the flow log record, in the order in which they should appear. For a list of available fields, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs.html#flow-log-records">Flow log records</a>. If you omit this parameter, the flow log is created using the default format. If you specify this parameter, you must specify at least one field.</p> <p>Specify the fields using the <code>${field-id}</code> format, separated by spaces. For the CLI, surround this parameter value with single quotes on Linux or double quotes on Windows.</p>'
          schema:
            type: string
        - name: TagSpecification
          in: query
          required: false
          description: The tags to apply to the flow logs.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
        - name: MaxAggregationInterval
          in: query
          required: false
          description: '<p>The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. You can specify 60 seconds (1 minute) or 600 seconds (10 minutes).</p> <p>When a network interface is attached to a <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances">Nitro-based instance</a>, the aggregation interval is always 60 seconds or less, regardless of the value that you specify.</p> <p>Default: 600</p>'
          schema:
            type: integer
        - name: DestinationOptions
          in: query
          required: false
          description: The destination options.
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/Boolean'
                  - description: Indicates whether to partition the flow log per hour. This reduces the cost and response time for queries. The default is <code>false</code>.
            description: Describes the destination options for a flow log.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateFlowLogs
      operationId: POST_CreateFlowLogs
      description: '<p>Creates one or more flow logs to capture information about IP traffic for a specific network interface, subnet, or VPC. </p> <p>Flow log data for a monitored network interface is recorded as flow log records, which are log events consisting of fields that describe the traffic flow. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs.html#flow-log-records">Flow log records</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p> <p>When publishing to CloudWatch Logs, flow log records are published to a log group, and each network interface has a unique log stream in the log group. When publishing to Amazon S3, flow log records for all of the monitored network interfaces are published to a single log file object that is stored in the specified bucket.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs.html">VPC Flow Logs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateFlowLogsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateFlowLogsRequest'
      parameters: []
  /?Action=CreateFpgaImage&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateFpgaImage
      operationId: GET_CreateFpgaImage
      description: '<p>Creates an Amazon FPGA Image (AFI) from the specified design checkpoint (DCP).</p> <p>The create operation is asynchronous. To verify that the AFI is ready for use, check the output logs.</p> <p>An AFI contains the FPGA bitstream that is ready to download to an FPGA. You can securely deploy an AFI on multiple FPGA-accelerated instances. For more information, see the <a href="https://github.com/aws/aws-fpga/">Amazon Web Services FPGA Hardware Development Kit</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateFpgaImageResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: InputStorageLocation
          in: query
          required: true
          description: The location of the encrypted design checkpoint in Amazon S3. The input must be a tarball.
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: The key.
            description: Describes a storage location in Amazon S3.
        - name: LogsStorageLocation
          in: query
          required: false
          description: The location in Amazon S3 for the output logs.
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: The key.
            description: Describes a storage location in Amazon S3.
        - name: Description
          in: query
          required: false
          description: A description for the AFI.
          schema:
            type: string
        - name: Name
          in: query
          required: false
          description: A name for the AFI.
          schema:
            type: string
        - name: ClientToken
          in: query
          required: false
          description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.'
          schema:
            type: string
        - name: TagSpecification
          in: query
          required: false
          description: The tags to apply to the FPGA image during creation.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateFpgaImage
      operationId: POST_CreateFpgaImage
      description: '<p>Creates an Amazon FPGA Image (AFI) from the specified design checkpoint (DCP).</p> <p>The create operation is asynchronous. To verify that the AFI is ready for use, check the output logs.</p> <p>An AFI contains the FPGA bitstream that is ready to download to an FPGA. You can securely deploy an AFI on multiple FPGA-accelerated instances. For more information, see the <a href="https://github.com/aws/aws-fpga/">Amazon Web Services FPGA Hardware Development Kit</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateFpgaImageResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateFpgaImageRequest'
      parameters: []
  /?Action=CreateImage&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateImage
      operationId: GET_CreateImage
      description: '<p>Creates an Amazon EBS-backed AMI from an Amazon EBS-backed instance that is either running or stopped.</p> <p>By default, when Amazon EC2 creates the new AMI, it reboots the instance so that it can take snapshots of the attached volumes while data is at rest, in order to ensure a consistent state. You can set the <code>NoReboot</code> parameter to <code>true</code> in the API request, or use the <code>--no-reboot</code> option in the CLI to prevent Amazon EC2 from shutting down and rebooting the instance.</p> <important> <p>If you choose to bypass the shutdown and reboot process by setting the <code>NoReboot</code> parameter to <code>true</code> in the API request, or by using the <code>--no-reboot</code> option in the CLI, we can''t guarantee the file system integrity of the created image.</p> </important> <p>If you customized your instance with instance store volumes or Amazon EBS volumes in addition to the root device volume, the new AMI contains block device mapping information for those volumes. When you launch an instance from this new AMI, the instance automatically launches with those additional volumes.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/creating-an-ami-ebs.html">Creating Amazon EBS-Backed Linux AMIs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateImageResult'
      parameters:
        - name: BlockDeviceMapping
          in: query
          required: false
          description: 'The block device mappings. This parameter cannot be used to modify the encryption status of existing volumes or snapshots. To create an AMI with encrypted snapshots, use the <a>CopyImage</a> action.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/BlockDeviceMapping'
                - xml:
                    name: BlockDeviceMapping
        - name: Description
          in: query
          required: false
          description: A description for the new image.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: InstanceId
          in: query
          required: true
          description: The ID of the instance.
          schema:
            type: string
        - name: Name
          in: query
          required: true
          description: '<p>A name for the new image.</p> <p>Constraints: 3-128 alphanumeric characters, parentheses (()), square brackets ([]), spaces ( ), periods (.), slashes (/), dashes (-), single quotes (''), at-signs (@), or underscores(_)</p>'
          schema:
            type: string
        - name: NoReboot
          in: query
          required: false
          description: '<p>By default, when Amazon EC2 creates the new AMI, it reboots the instance so that it can take snapshots of the attached volumes while data is at rest, in order to ensure a consistent state. You can set the <code>NoReboot</code> parameter to <code>true</code> in the API request, or use the <code>--no-reboot</code> option in the CLI to prevent Amazon EC2 from shutting down and rebooting the instance.</p> <important> <p>If you choose to bypass the shutdown and reboot process by setting the <code>NoReboot</code> parameter to <code>true</code> in the API request, or by using the <code>--no-reboot</code> option in the CLI, we can''t guarantee the file system integrity of the created image.</p> </important> <p>Default: <code>false</code> (follow standard reboot process)</p>'
          schema:
            type: boolean
        - name: TagSpecification
          in: query
          required: false
          description: '<p>The tags to apply to the AMI and snapshots on creation. You can tag the AMI, the snapshots, or both.</p> <ul> <li> <p>To tag the AMI, the value for <code>ResourceType</code> must be <code>image</code>.</p> </li> <li> <p>To tag the snapshots that are created of the root volume and of other Amazon EBS volumes that are attached to the instance, the value for <code>ResourceType</code> must be <code>snapshot</code>. The same tag is applied to all of the snapshots that are created.</p> </li> </ul> <p>If you specify other values for <code>ResourceType</code>, the request fails.</p> <p>To tag an AMI or snapshot after it has been created, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html">CreateTags</a>. </p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateImage
      operationId: POST_CreateImage
      description: '<p>Creates an Amazon EBS-backed AMI from an Amazon EBS-backed instance that is either running or stopped.</p> <p>By default, when Amazon EC2 creates the new AMI, it reboots the instance so that it can take snapshots of the attached volumes while data is at rest, in order to ensure a consistent state. You can set the <code>NoReboot</code> parameter to <code>true</code> in the API request, or use the <code>--no-reboot</code> option in the CLI to prevent Amazon EC2 from shutting down and rebooting the instance.</p> <important> <p>If you choose to bypass the shutdown and reboot process by setting the <code>NoReboot</code> parameter to <code>true</code> in the API request, or by using the <code>--no-reboot</code> option in the CLI, we can''t guarantee the file system integrity of the created image.</p> </important> <p>If you customized your instance with instance store volumes or Amazon EBS volumes in addition to the root device volume, the new AMI contains block device mapping information for those volumes. When you launch an instance from this new AMI, the instance automatically launches with those additional volumes.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/creating-an-ami-ebs.html">Creating Amazon EBS-Backed Linux AMIs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateImageResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateImageRequest'
      parameters: []
  /?Action=CreateInstanceEventWindow&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateInstanceEventWindow
      operationId: GET_CreateInstanceEventWindow
      description: '<p>Creates an event window in which scheduled events for the associated Amazon EC2 instances can run.</p> <p>You can define either a set of time ranges or a cron expression when creating the event window, but not both. All event window times are in UTC.</p> <p>You can create up to 200 event windows per Amazon Web Services Region.</p> <p>When you create the event window, targets (instance IDs, Dedicated Host IDs, or tags) are not yet associated with it. To ensure that the event window can be used, you must associate one or more targets with it by using the <a>AssociateInstanceEventWindow</a> API.</p> <important> <p>Event windows are applicable only for scheduled events that stop, reboot, or terminate instances.</p> <p>Event windows are <i>not</i> applicable for:</p> <ul> <li> <p>Expedited scheduled events and network maintenance events. </p> </li> <li> <p>Unscheduled maintenance such as AutoRecovery and unplanned reboots.</p> </li> </ul> </important> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/event-windows.html">Define event windows for scheduled events</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateInstanceEventWindowResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: Name
          in: query
          required: false
          description: The name of the event window.
          schema:
            type: string
        - name: TimeRange
          in: query
          required: false
          description: 'The time range for the event window. If you specify a time range, you can''t specify a cron expression.'
          schema:
            type: array
            items:
              $ref: '#/components/schemas/InstanceEventWindowTimeRangeRequest'
        - name: CronExpression
          in: query
          required: false
          description: '<p>The cron expression for the event window, for example, <code>* 0-4,20-23 * * 1,5</code>. If you specify a cron expression, you can''t specify a time range.</p> <p>Constraints:</p> <ul> <li> <p>Only hour and day of the week values are supported.</p> </li> <li> <p>For day of the week values, you can specify either integers <code>0</code> through <code>6</code>, or alternative single values <code>SUN</code> through <code>SAT</code>.</p> </li> <li> <p>The minute, month, and year must be specified by <code>*</code>.</p> </li> <li> <p>The hour value must be one or a multiple range, for example, <code>0-4</code> or <code>0-4,20-23</code>.</p> </li> <li> <p>Each hour range must be &gt;= 2 hours, for example, <code>0-2</code> or <code>20-23</code>.</p> </li> <li> <p>The event window must be &gt;= 4 hours. The combined total time ranges in the event window must be &gt;= 4 hours.</p> </li> </ul> <p>For more information about cron expressions, see <a href="https://en.wikipedia.org/wiki/Cron">cron</a> on the <i>Wikipedia website</i>.</p>'
          schema:
            type: string
        - name: TagSpecification
          in: query
          required: false
          description: The tags to apply to the event window.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateInstanceEventWindow
      operationId: POST_CreateInstanceEventWindow
      description: '<p>Creates an event window in which scheduled events for the associated Amazon EC2 instances can run.</p> <p>You can define either a set of time ranges or a cron expression when creating the event window, but not both. All event window times are in UTC.</p> <p>You can create up to 200 event windows per Amazon Web Services Region.</p> <p>When you create the event window, targets (instance IDs, Dedicated Host IDs, or tags) are not yet associated with it. To ensure that the event window can be used, you must associate one or more targets with it by using the <a>AssociateInstanceEventWindow</a> API.</p> <important> <p>Event windows are applicable only for scheduled events that stop, reboot, or terminate instances.</p> <p>Event windows are <i>not</i> applicable for:</p> <ul> <li> <p>Expedited scheduled events and network maintenance events. </p> </li> <li> <p>Unscheduled maintenance such as AutoRecovery and unplanned reboots.</p> </li> </ul> </important> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/event-windows.html">Define event windows for scheduled events</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateInstanceEventWindowResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateInstanceEventWindowRequest'
      parameters: []
  /?Action=CreateInstanceExportTask&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateInstanceExportTask
      operationId: GET_CreateInstanceExportTask
      description: '<p>Exports a running or stopped instance to an Amazon S3 bucket.</p> <p>For information about the supported operating systems, image formats, and known limitations for the types of instances you can export, see <a href="https://docs.aws.amazon.com/vm-import/latest/userguide/vmexport.html">Exporting an instance as a VM Using VM Import/Export</a> in the <i>VM Import/Export User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateInstanceExportTaskResult'
      parameters:
        - name: Description
          in: query
          required: false
          description: A description for the conversion task or the resource being exported. The maximum length is 255 characters.
          schema:
            type: string
        - name: ExportToS3
          in: query
          required: true
          description: The format and location for an export instance task.
          schema:
            type: object
            properties:
              containerFormat:
                allOf:
                  - $ref: '#/components/schemas/ContainerFormat'
                  - description: 'The container format used to combine disk images with metadata (such as OVF). If absent, only the disk image is exported.'
              diskImageFormat:
                allOf:
                  - $ref: '#/components/schemas/DiskImageFormat'
                  - description: The format for the exported image.
              s3Bucket:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: The Amazon S3 bucket for the destination image. The destination bucket must exist and grant WRITE and READ_ACP permissions to the Amazon Web Services account <code>vm-import-export@amazon.com</code>.
              s3Prefix:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: The image is written to a single object in the Amazon S3 bucket at the S3 key s3prefix + exportTaskId + '.' + diskImageFormat.
            description: Describes an export instance task.
        - name: InstanceId
          in: query
          required: true
          description: The ID of the instance.
          schema:
            type: string
        - name: TargetEnvironment
          in: query
          required: true
          description: The target virtualization environment.
          schema:
            type: string
            enum:
              - citrix
              - vmware
              - microsoft
        - name: TagSpecification
          in: query
          required: false
          description: The tags to apply to the export instance task during creation.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateInstanceExportTask
      operationId: POST_CreateInstanceExportTask
      description: '<p>Exports a running or stopped instance to an Amazon S3 bucket.</p> <p>For information about the supported operating systems, image formats, and known limitations for the types of instances you can export, see <a href="https://docs.aws.amazon.com/vm-import/latest/userguide/vmexport.html">Exporting an instance as a VM Using VM Import/Export</a> in the <i>VM Import/Export User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateInstanceExportTaskResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateInstanceExportTaskRequest'
      parameters: []
  /?Action=CreateInternetGateway&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateInternetGateway
      operationId: GET_CreateInternetGateway
      description: '<p>Creates an internet gateway for use with a VPC. After creating the internet gateway, you attach it to a VPC using <a>AttachInternetGateway</a>.</p> <p>For more information about your VPC and internet gateway, see the <a href="https://docs.aws.amazon.com/vpc/latest/userguide/">Amazon Virtual Private Cloud User Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateInternetGatewayResult'
      parameters:
        - name: TagSpecification
          in: query
          required: false
          description: The tags to assign to the internet gateway.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateInternetGateway
      operationId: POST_CreateInternetGateway
      description: '<p>Creates an internet gateway for use with a VPC. After creating the internet gateway, you attach it to a VPC using <a>AttachInternetGateway</a>.</p> <p>For more information about your VPC and internet gateway, see the <a href="https://docs.aws.amazon.com/vpc/latest/userguide/">Amazon Virtual Private Cloud User Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateInternetGatewayResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateInternetGatewayRequest'
      parameters: []
  /?Action=CreateIpam&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateIpam
      operationId: GET_CreateIpam
      description: '<p>Create an IPAM. Amazon VPC IP Address Manager (IPAM) is a VPC feature that you can use to automate your IP address management workflows including assigning, tracking, troubleshooting, and auditing IP addresses across Amazon Web Services Regions and accounts throughout your Amazon Web Services Organization.</p> <p>For more information, see <a href="/vpc/latest/ipam/create-ipam.html">Create an IPAM</a> in the <i>Amazon VPC IPAM User Guide</i>. </p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateIpamResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: Description
          in: query
          required: false
          description: A description for the IPAM.
          schema:
            type: string
        - name: OperatingRegion
          in: query
          required: false
          description: '<p>The operating Regions for the IPAM. Operating Regions are Amazon Web Services Regions where the IPAM is allowed to manage IP address CIDRs. IPAM only discovers and monitors resources in the Amazon Web Services Regions you select as operating Regions.</p> <p>For more information about operating Regions, see <a href="/vpc/latest/ipam/create-ipam.html">Create an IPAM</a> in the <i>Amazon VPC IPAM User Guide</i>. </p>'
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AddIpamOperatingRegion'
            minItems: 0
            maxItems: 50
        - name: TagSpecification
          in: query
          required: false
          description: 'The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
        - name: ClientToken
          in: query
          required: false
          description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.'
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateIpam
      operationId: POST_CreateIpam
      description: '<p>Create an IPAM. Amazon VPC IP Address Manager (IPAM) is a VPC feature that you can use to automate your IP address management workflows including assigning, tracking, troubleshooting, and auditing IP addresses across Amazon Web Services Regions and accounts throughout your Amazon Web Services Organization.</p> <p>For more information, see <a href="/vpc/latest/ipam/create-ipam.html">Create an IPAM</a> in the <i>Amazon VPC IPAM User Guide</i>. </p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateIpamResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateIpamRequest'
      parameters: []
  /?Action=CreateIpamPool&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateIpamPool
      operationId: GET_CreateIpamPool
      description: '<p>Create an IP address pool for Amazon VPC IP Address Manager (IPAM). In IPAM, a pool is a collection of contiguous IP addresses CIDRs. Pools enable you to organize your IP addresses according to your routing and security needs. For example, if you have separate routing and security needs for development and production applications, you can create a pool for each.</p> <p>For more information, see <a href="/vpc/latest/ipam/create-top-ipam.html">Create a top-level pool</a> in the <i>Amazon VPC IPAM User Guide</i>. </p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateIpamPoolResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: IpamScopeId
          in: query
          required: true
          description: The ID of the scope in which you would like to create the IPAM pool.
          schema:
            type: string
        - name: Locale
          in: query
          required: false
          description: '<p>In IPAM, the locale is the Amazon Web Services Region where you want to make an IPAM pool available for allocations. Only resources in the same Region as the locale of the pool can get IP address allocations from the pool. You can only allocate a CIDR for a VPC, for example, from an IPAM pool that shares a locale with the VPC’s Region. Note that once you choose a Locale for a pool, you cannot modify it. If you do not choose a locale, resources in Regions others than the IPAM''s home region cannot use CIDRs from this pool.</p> <p>Possible values: Any Amazon Web Services Region, such as us-east-1.</p>'
          schema:
            type: string
        - name: SourceIpamPoolId
          in: query
          required: false
          description: The ID of the source IPAM pool. Use this option to create a pool within an existing pool. Note that the CIDR you provision for the pool within the source pool must be available in the source pool's CIDR range.
          schema:
            type: string
        - name: Description
          in: query
          required: false
          description: A description for the IPAM pool.
          schema:
            type: string
        - name: AddressFamily
          in: query
          required: true
          description: The IP protocol assigned to this IPAM pool. You must choose either IPv4 or IPv6 protocol for a pool.
          schema:
            type: string
            enum:
              - ipv4
              - ipv6
        - name: AutoImport
          in: query
          required: false
          description: '<p>If selected, IPAM will continuously look for resources within the CIDR range of this pool and automatically import them as allocations into your IPAM. The CIDRs that will be allocated for these resources must not already be allocated to other resources in order for the import to succeed. IPAM will import a CIDR regardless of its compliance with the pool''s allocation rules, so a resource might be imported and subsequently marked as noncompliant. If IPAM discovers multiple CIDRs that overlap, IPAM will import the largest CIDR only. If IPAM discovers multiple CIDRs with matching CIDRs, IPAM will randomly import one of them only. </p> <p>A locale must be set on the pool for this feature to work.</p>'
          schema:
            type: boolean
        - name: PubliclyAdvertisable
          in: query
          required: false
          description: Determines if the pool is publicly advertisable. This option is not available for pools with AddressFamily set to <code>ipv4</code>.
          schema:
            type: boolean
        - name: AllocationMinNetmaskLength
          in: query
          required: false
          description: The minimum netmask length required for CIDR allocations in this IPAM pool to be compliant. The minimum netmask length must be less than the maximum netmask length. Possible netmask lengths for IPv4 addresses are 0 - 32. Possible netmask lengths for IPv6 addresses are 0 - 128.
          schema:
            type: integer
            minimum: 0
            maximum: 128
        - name: AllocationMaxNetmaskLength
          in: query
          required: false
          description: The maximum netmask length possible for CIDR allocations in this IPAM pool to be compliant. The maximum netmask length must be greater than the minimum netmask length. Possible netmask lengths for IPv4 addresses are 0 - 32. Possible netmask lengths for IPv6 addresses are 0 - 128.
          schema:
            type: integer
            minimum: 0
            maximum: 128
        - name: AllocationDefaultNetmaskLength
          in: query
          required: false
          description: 'The default netmask length for allocations added to this pool. If, for example, the CIDR assigned to this pool is 10.0.0.0/8 and you enter 16 here, new allocations will default to 10.0.0.0/16.'
          schema:
            type: integer
            minimum: 0
            maximum: 128
        - name: AllocationResourceTag
          in: query
          required: false
          description: 'Tags that are required for resources that use CIDRs from this IPAM pool. Resources that do not have these tags will not be allowed to allocate space from the pool. If the resources have their tags changed after they have allocated space or if the allocation tagging requirements are changed on the pool, the resource may be marked as noncompliant.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/RequestIpamResourceTag'
                - xml:
                    name: item
        - name: TagSpecification
          in: query
          required: false
          description: 'The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
        - name: ClientToken
          in: query
          required: false
          description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.'
          schema:
            type: string
        - name: AwsService
          in: query
          required: false
          description: 'Limits which service in Amazon Web Services that the pool can be used in. "ec2", for example, allows users to use space for Elastic IP addresses and VPCs.'
          schema:
            type: string
            enum:
              - ec2
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateIpamPool
      operationId: POST_CreateIpamPool
      description: '<p>Create an IP address pool for Amazon VPC IP Address Manager (IPAM). In IPAM, a pool is a collection of contiguous IP addresses CIDRs. Pools enable you to organize your IP addresses according to your routing and security needs. For example, if you have separate routing and security needs for development and production applications, you can create a pool for each.</p> <p>For more information, see <a href="/vpc/latest/ipam/create-top-ipam.html">Create a top-level pool</a> in the <i>Amazon VPC IPAM User Guide</i>. </p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateIpamPoolResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateIpamPoolRequest'
      parameters: []
  /?Action=CreateIpamScope&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateIpamScope
      operationId: GET_CreateIpamScope
      description: '<p>Create an IPAM scope. In IPAM, a scope is the highest-level container within IPAM. An IPAM contains two default scopes. Each scope represents the IP space for a single network. The private scope is intended for all private IP address space. The public scope is intended for all public IP address space. Scopes enable you to reuse IP addresses across multiple unconnected networks without causing IP address overlap or conflict.</p> <p>For more information, see <a href="/vpc/latest/ipam/add-scope-ipam.html">Add a scope</a> in the <i>Amazon VPC IPAM User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateIpamScopeResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: IpamId
          in: query
          required: true
          description: The ID of the IPAM for which you're creating this scope.
          schema:
            type: string
        - name: Description
          in: query
          required: false
          description: A description for the scope you're creating.
          schema:
            type: string
        - name: TagSpecification
          in: query
          required: false
          description: 'The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
        - name: ClientToken
          in: query
          required: false
          description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.'
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateIpamScope
      operationId: POST_CreateIpamScope
      description: '<p>Create an IPAM scope. In IPAM, a scope is the highest-level container within IPAM. An IPAM contains two default scopes. Each scope represents the IP space for a single network. The private scope is intended for all private IP address space. The public scope is intended for all public IP address space. Scopes enable you to reuse IP addresses across multiple unconnected networks without causing IP address overlap or conflict.</p> <p>For more information, see <a href="/vpc/latest/ipam/add-scope-ipam.html">Add a scope</a> in the <i>Amazon VPC IPAM User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateIpamScopeResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateIpamScopeRequest'
      parameters: []
  /?Action=CreateKeyPair&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateKeyPair
      operationId: GET_CreateKeyPair
      description: '<p>Creates an ED25519 or 2048-bit RSA key pair with the specified name and in the specified PEM or PPK format. Amazon EC2 stores the public key and displays the private key for you to save to a file. The private key is returned as an unencrypted PEM encoded PKCS#1 private key or an unencrypted PPK formatted private key for use with PuTTY. If a key with the specified name already exists, Amazon EC2 returns an error.</p> <p>The key pair returned to you is available only in the Amazon Web Services Region in which you create it. If you prefer, you can create your own key pair using a third-party tool and upload it to any Region using <a>ImportKeyPair</a>.</p> <p>You can have up to 5,000 key pairs per Amazon Web Services Region.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Amazon EC2 key pairs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/KeyPair'
      parameters:
        - name: KeyName
          in: query
          required: true
          description: '<p>A unique name for the key pair.</p> <p>Constraints: Up to 255 ASCII characters</p>'
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: KeyType
          in: query
          required: false
          description: '<p>The type of key pair. Note that ED25519 keys are not supported for Windows instances.</p> <p>Default: <code>rsa</code> </p>'
          schema:
            type: string
            enum:
              - rsa
              - ed25519
        - name: TagSpecification
          in: query
          required: false
          description: The tags to apply to the new key pair.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
        - name: KeyFormat
          in: query
          required: false
          description: '<p>The format of the key pair.</p> <p>Default: <code>pem</code> </p>'
          schema:
            type: string
            enum:
              - pem
              - ppk
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateKeyPair
      operationId: POST_CreateKeyPair
      description: '<p>Creates an ED25519 or 2048-bit RSA key pair with the specified name and in the specified PEM or PPK format. Amazon EC2 stores the public key and displays the private key for you to save to a file. The private key is returned as an unencrypted PEM encoded PKCS#1 private key or an unencrypted PPK formatted private key for use with PuTTY. If a key with the specified name already exists, Amazon EC2 returns an error.</p> <p>The key pair returned to you is available only in the Amazon Web Services Region in which you create it. If you prefer, you can create your own key pair using a third-party tool and upload it to any Region using <a>ImportKeyPair</a>.</p> <p>You can have up to 5,000 key pairs per Amazon Web Services Region.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Amazon EC2 key pairs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/KeyPair'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateKeyPairRequest'
      parameters: []
  /?Action=CreateLaunchTemplate&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateLaunchTemplate
      operationId: GET_CreateLaunchTemplate
      description: '<p>Creates a launch template.</p> <p>A launch template contains the parameters to launch an instance. When you launch an instance using <a>RunInstances</a>, you can specify a launch template instead of providing the launch parameters in the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html">Launching an instance from a launch template</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>If you want to clone an existing launch template as the basis for creating a new launch template, you can use the Amazon EC2 console. The API, SDKs, and CLI do not support cloning a template. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html#create-launch-template-from-existing-launch-template">Create a launch template from an existing launch template</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateLaunchTemplateResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: ClientToken
          in: query
          required: false
          description: '<p>Unique, case-sensitive identifier you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.</p> <p>Constraint: Maximum 128 ASCII characters.</p>'
          schema:
            type: string
        - name: LaunchTemplateName
          in: query
          required: true
          description: A name for the launch template.
          schema:
            type: string
            pattern: '[a-zA-Z0-9\(\)\.\-/_]+'
            minLength: 3
            maxLength: 128
        - name: VersionDescription
          in: query
          required: false
          description: A description for the first version of the launch template.
          schema:
            type: string
            minLength: 0
            maxLength: 255
        - name: LaunchTemplateData
          in: query
          required: true
          description: The information for the launch template.
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/LaunchTemplateIamInstanceProfileSpecificationRequest'
                  - description: The name or Amazon Resource Name (ARN) of an IAM instance profile.
              BlockDeviceMapping:
                allOf:
                  - $ref: '#/components/schemas/LaunchTemplateBlockDeviceMappingRequestList'
                  - description: The block device mapping.
              NetworkInterface:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: '<p>The user data to make available to the instance. You must provide base64-encoded text. User data is limited to 16 KB. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html">Running Commands on Your Linux Instance at Launch</a> (Linux) or <a href="https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ec2-instance-metadata.html#instancedata-add-user-data">Adding User Data</a> (Windows).</p> <p>If you are creating the launch template for use with Batch, the user data must be provided in the <a href="https://cloudinit.readthedocs.io/en/latest/topics/format.html#mime-multi-part-archive"> MIME multi-part archive format</a>. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/launch-templates.html">Amazon EC2 user data in launch templates</a> in the <i>Batch User Guide</i>.</p>'
              TagSpecification:
                allOf:
                  - $ref: '#/components/schemas/LaunchTemplateTagSpecificationRequestList'
                  - description: 'The tags to apply to the resources during launch. You can only tag instances and volumes on launch. The specified tags are applied to all instances or volumes that are created during launch. To tag a resource after it has been created, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html">CreateTags</a>.'
              ElasticGpuSpecification:
                allOf:
                  - $ref: '#/components/schemas/ElasticGpuSpecificationList'
                  - description: An elastic GPU to associate with the instance.
              ElasticInferenceAccelerator:
                allOf:
                  - $ref: '#/components/schemas/LaunchTemplateElasticInferenceAcceleratorList'
                  - description: ' The elastic inference accelerator for the instance. '
              SecurityGroupId:
                allOf:
                  - $ref: '#/components/schemas/SecurityGroupIdStringList'
                  - description: 'One or more security group IDs. You can create a security group using <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSecurityGroup.html">CreateSecurityGroup</a>. You cannot specify both a security group ID and security name in the same request.'
              SecurityGroup:
                allOf:
                  - $ref: '#/components/schemas/LaunchTemplateCapacityReservationSpecificationRequest'
                  - description: 'The Capacity Reservation targeting option. If you do not specify this parameter, the instance''s Capacity Reservation preference defaults to <code>open</code>, which enables it to run in any open Capacity Reservation that has matching attributes (instance type, platform, Availability Zone).'
              LicenseSpecification:
                allOf:
                  - $ref: '#/components/schemas/LaunchTemplateInstanceMaintenanceOptionsRequest'
                  - description: The maintenance options for the instance.
            description: <p>The information to include in the launch template.</p> <note> <p>You must specify at least one parameter for the launch template data.</p> </note>
        - name: TagSpecification
          in: query
          required: false
          description: The tags to apply to the launch template during creation.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateLaunchTemplate
      operationId: POST_CreateLaunchTemplate
      description: '<p>Creates a launch template.</p> <p>A launch template contains the parameters to launch an instance. When you launch an instance using <a>RunInstances</a>, you can specify a launch template instead of providing the launch parameters in the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html">Launching an instance from a launch template</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>If you want to clone an existing launch template as the basis for creating a new launch template, you can use the Amazon EC2 console. The API, SDKs, and CLI do not support cloning a template. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html#create-launch-template-from-existing-launch-template">Create a launch template from an existing launch template</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateLaunchTemplateResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateLaunchTemplateRequest'
      parameters: []
  /?Action=CreateLaunchTemplateVersion&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateLaunchTemplateVersion
      operationId: GET_CreateLaunchTemplateVersion
      description: '<p>Creates a new version for a launch template. You can specify an existing version of launch template from which to base the new version.</p> <p>Launch template versions are numbered in the order in which they are created. You cannot specify, change, or replace the numbering of launch template versions.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html#manage-launch-template-versions">Managing launch template versions</a>in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateLaunchTemplateVersionResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: ClientToken
          in: query
          required: false
          description: '<p>Unique, case-sensitive identifier you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.</p> <p>Constraint: Maximum 128 ASCII characters.</p>'
          schema:
            type: string
        - name: LaunchTemplateId
          in: query
          required: false
          description: The ID of the launch template. You must specify either the launch template ID or launch template name in the request.
          schema:
            type: string
        - name: LaunchTemplateName
          in: query
          required: false
          description: The name of the launch template. You must specify either the launch template ID or launch template name in the request.
          schema:
            type: string
            pattern: '[a-zA-Z0-9\(\)\.\-/_]+'
            minLength: 3
            maxLength: 128
        - name: SourceVersion
          in: query
          required: false
          description: 'The version number of the launch template version on which to base the new version. The new version inherits the same launch parameters as the source version, except for parameters that you specify in <code>LaunchTemplateData</code>. Snapshots applied to the block device mapping are ignored when creating a new version unless they are explicitly included.'
          schema:
            type: string
        - name: VersionDescription
          in: query
          required: false
          description: A description for the version of the launch template.
          schema:
            type: string
            minLength: 0
            maxLength: 255
        - name: LaunchTemplateData
          in: query
          required: true
          description: The information for the launch template.
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/LaunchTemplateIamInstanceProfileSpecificationRequest'
                  - description: The name or Amazon Resource Name (ARN) of an IAM instance profile.
              BlockDeviceMapping:
                allOf:
                  - $ref: '#/components/schemas/LaunchTemplateBlockDeviceMappingRequestList'
                  - description: The block device mapping.
              NetworkInterface:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: '<p>The user data to make available to the instance. You must provide base64-encoded text. User data is limited to 16 KB. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html">Running Commands on Your Linux Instance at Launch</a> (Linux) or <a href="https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ec2-instance-metadata.html#instancedata-add-user-data">Adding User Data</a> (Windows).</p> <p>If you are creating the launch template for use with Batch, the user data must be provided in the <a href="https://cloudinit.readthedocs.io/en/latest/topics/format.html#mime-multi-part-archive"> MIME multi-part archive format</a>. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/launch-templates.html">Amazon EC2 user data in launch templates</a> in the <i>Batch User Guide</i>.</p>'
              TagSpecification:
                allOf:
                  - $ref: '#/components/schemas/LaunchTemplateTagSpecificationRequestList'
                  - description: 'The tags to apply to the resources during launch. You can only tag instances and volumes on launch. The specified tags are applied to all instances or volumes that are created during launch. To tag a resource after it has been created, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html">CreateTags</a>.'
              ElasticGpuSpecification:
                allOf:
                  - $ref: '#/components/schemas/ElasticGpuSpecificationList'
                  - description: An elastic GPU to associate with the instance.
              ElasticInferenceAccelerator:
                allOf:
                  - $ref: '#/components/schemas/LaunchTemplateElasticInferenceAcceleratorList'
                  - description: ' The elastic inference accelerator for the instance. '
              SecurityGroupId:
                allOf:
                  - $ref: '#/components/schemas/SecurityGroupIdStringList'
                  - description: 'One or more security group IDs. You can create a security group using <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSecurityGroup.html">CreateSecurityGroup</a>. You cannot specify both a security group ID and security name in the same request.'
              SecurityGroup:
                allOf:
                  - $ref: '#/components/schemas/LaunchTemplateCapacityReservationSpecificationRequest'
                  - description: 'The Capacity Reservation targeting option. If you do not specify this parameter, the instance''s Capacity Reservation preference defaults to <code>open</code>, which enables it to run in any open Capacity Reservation that has matching attributes (instance type, platform, Availability Zone).'
              LicenseSpecification:
                allOf:
                  - $ref: '#/components/schemas/LaunchTemplateInstanceMaintenanceOptionsRequest'
                  - description: The maintenance options for the instance.
            description: <p>The information to include in the launch template.</p> <note> <p>You must specify at least one parameter for the launch template data.</p> </note>
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateLaunchTemplateVersion
      operationId: POST_CreateLaunchTemplateVersion
      description: '<p>Creates a new version for a launch template. You can specify an existing version of launch template from which to base the new version.</p> <p>Launch template versions are numbered in the order in which they are created. You cannot specify, change, or replace the numbering of launch template versions.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html#manage-launch-template-versions">Managing launch template versions</a>in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateLaunchTemplateVersionResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateLaunchTemplateVersionRequest'
      parameters: []
  /?Action=CreateLocalGatewayRoute&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateLocalGatewayRoute
      operationId: GET_CreateLocalGatewayRoute
      description: Creates a static route for the specified local gateway route table.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateLocalGatewayRouteResult'
      parameters:
        - name: DestinationCidrBlock
          in: query
          required: true
          description: The CIDR range used for destination matches. Routing decisions are based on the most specific match.
          schema:
            type: string
        - name: LocalGatewayRouteTableId
          in: query
          required: true
          description: The ID of the local gateway route table.
          schema:
            type: string
        - name: LocalGatewayVirtualInterfaceGroupId
          in: query
          required: true
          description: The ID of the virtual interface group.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateLocalGatewayRoute
      operationId: POST_CreateLocalGatewayRoute
      description: Creates a static route for the specified local gateway route table.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateLocalGatewayRouteResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateLocalGatewayRouteRequest'
      parameters: []
  /?Action=CreateLocalGatewayRouteTableVpcAssociation&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateLocalGatewayRouteTableVpcAssociation
      operationId: GET_CreateLocalGatewayRouteTableVpcAssociation
      description: Associates the specified VPC with the specified local gateway route table.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateLocalGatewayRouteTableVpcAssociationResult'
      parameters:
        - name: LocalGatewayRouteTableId
          in: query
          required: true
          description: The ID of the local gateway route table.
          schema:
            type: string
        - name: VpcId
          in: query
          required: true
          description: The ID of the VPC.
          schema:
            type: string
        - name: TagSpecification
          in: query
          required: false
          description: The tags to assign to the local gateway route table VPC association.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateLocalGatewayRouteTableVpcAssociation
      operationId: POST_CreateLocalGatewayRouteTableVpcAssociation
      description: Associates the specified VPC with the specified local gateway route table.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateLocalGatewayRouteTableVpcAssociationResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateLocalGatewayRouteTableVpcAssociationRequest'
      parameters: []
  /?Action=CreateManagedPrefixList&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateManagedPrefixList
      operationId: GET_CreateManagedPrefixList
      description: Creates a managed prefix list. You can specify one or more entries for the prefix list. Each entry consists of a CIDR block and an optional description.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateManagedPrefixListResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: PrefixListName
          in: query
          required: true
          description: '<p>A name for the prefix list.</p> <p>Constraints: Up to 255 characters in length. The name cannot start with <code>com.amazonaws</code>.</p>'
          schema:
            type: string
        - name: Entry
          in: query
          required: false
          description: One or more entries for the prefix list.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AddPrefixListEntry'
            minItems: 0
            maxItems: 100
        - name: MaxEntries
          in: query
          required: true
          description: The maximum number of entries for the prefix list.
          schema:
            type: integer
        - name: TagSpecification
          in: query
          required: false
          description: The tags to apply to the prefix list during creation.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
        - name: AddressFamily
          in: query
          required: true
          description: '<p>The IP address type.</p> <p>Valid Values: <code>IPv4</code> | <code>IPv6</code> </p>'
          schema:
            type: string
        - name: ClientToken
          in: query
          required: false
          description: '<p>Unique, case-sensitive identifier you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.</p> <p>Constraints: Up to 255 UTF-8 characters in length.</p>'
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateManagedPrefixList
      operationId: POST_CreateManagedPrefixList
      description: Creates a managed prefix list. You can specify one or more entries for the prefix list. Each entry consists of a CIDR block and an optional description.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateManagedPrefixListResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateManagedPrefixListRequest'
      parameters: []
  /?Action=CreateNatGateway&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateNatGateway
      operationId: GET_CreateNatGateway
      description: '<p>Creates a NAT gateway in the specified subnet. This action creates a network interface in the specified subnet with a private IP address from the IP address range of the subnet. You can create either a public NAT gateway or a private NAT gateway.</p> <p>With a public NAT gateway, internet-bound traffic from a private subnet can be routed to the NAT gateway, so that instances in a private subnet can connect to the internet.</p> <p>With a private NAT gateway, private communication is routed across VPCs and on-premises networks through a transit gateway or virtual private gateway. Common use cases include running large workloads behind a small pool of allowlisted IPv4 addresses, preserving private IPv4 addresses, and communicating between overlapping networks.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html">NAT gateways</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateNatGatewayResult'
      parameters:
        - name: AllocationId
          in: query
          required: false
          description: '[Public NAT gateways only] The allocation ID of an Elastic IP address to associate with the NAT gateway. You cannot specify an Elastic IP address with a private NAT gateway. If the Elastic IP address is associated with another resource, you must first disassociate it.'
          schema:
            type: string
        - name: ClientToken
          in: query
          required: false
          description: '<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to ensure idempotency</a>.</p> <p>Constraint: Maximum 64 ASCII characters.</p>'
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: SubnetId
          in: query
          required: true
          description: The subnet in which to create the NAT gateway.
          schema:
            type: string
        - name: TagSpecification
          in: query
          required: false
          description: The tags to assign to the NAT gateway.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
        - name: ConnectivityType
          in: query
          required: false
          description: Indicates whether the NAT gateway supports public or private connectivity. The default is public connectivity.
          schema:
            type: string
            enum:
              - private
              - public
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateNatGateway
      operationId: POST_CreateNatGateway
      description: '<p>Creates a NAT gateway in the specified subnet. This action creates a network interface in the specified subnet with a private IP address from the IP address range of the subnet. You can create either a public NAT gateway or a private NAT gateway.</p> <p>With a public NAT gateway, internet-bound traffic from a private subnet can be routed to the NAT gateway, so that instances in a private subnet can connect to the internet.</p> <p>With a private NAT gateway, private communication is routed across VPCs and on-premises networks through a transit gateway or virtual private gateway. Common use cases include running large workloads behind a small pool of allowlisted IPv4 addresses, preserving private IPv4 addresses, and communicating between overlapping networks.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html">NAT gateways</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateNatGatewayResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateNatGatewayRequest'
      parameters: []
  /?Action=CreateNetworkAcl&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateNetworkAcl
      operationId: GET_CreateNetworkAcl
      description: '<p>Creates a network ACL in a VPC. Network ACLs provide an optional layer of security (in addition to security groups) for the instances in your VPC.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_ACLs.html">Network ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateNetworkAclResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: VpcId
          in: query
          required: true
          description: The ID of the VPC.
          schema:
            type: string
        - name: TagSpecification
          in: query
          required: false
          description: The tags to assign to the network ACL.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateNetworkAcl
      operationId: POST_CreateNetworkAcl
      description: '<p>Creates a network ACL in a VPC. Network ACLs provide an optional layer of security (in addition to security groups) for the instances in your VPC.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_ACLs.html">Network ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateNetworkAclResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateNetworkAclRequest'
      parameters: []
  /?Action=CreateNetworkAclEntry&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateNetworkAclEntry
      operationId: GET_CreateNetworkAclEntry
      description: '<p>Creates an entry (a rule) in a network ACL with the specified rule number. Each network ACL has a set of numbered ingress rules and a separate set of numbered egress rules. When determining whether a packet should be allowed in or out of a subnet associated with the ACL, we process the entries in the ACL according to the rule numbers, in ascending order. Each network ACL has a set of ingress rules and a separate set of egress rules.</p> <p>We recommend that you leave room between the rule numbers (for example, 100, 110, 120, ...), and not number them one right after the other (for example, 101, 102, 103, ...). This makes it easier to add a rule between existing ones without having to renumber the rules.</p> <p>After you add an entry, you can''t modify it; you must either replace it, or create an entry and delete the old one.</p> <p>For more information about network ACLs, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_ACLs.html">Network ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
      parameters:
        - name: CidrBlock
          in: query
          required: false
          description: 'The IPv4 network range to allow or deny, in CIDR notation (for example <code>172.16.0.0/24</code>). We modify the specified CIDR block to its canonical form; for example, if you specify <code>100.68.0.18/18</code>, we modify it to <code>100.68.0.0/18</code>.'
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: Egress
          in: query
          required: true
          description: Indicates whether this is an egress rule (rule is applied to traffic leaving the subnet).
          schema:
            type: boolean
        - name: Icmp
          in: query
          required: false
          description: 'ICMP protocol: The ICMP or ICMPv6 type and code. Required if specifying protocol 1 (ICMP) or protocol 58 (ICMPv6) with an IPv6 CIDR block.'
          schema:
            type: object
            properties:
              code:
                allOf:
                  - $ref: '#/components/schemas/Integer'
                  - description: The ICMP code. A value of -1 means all codes for the specified ICMP type.
              type:
                allOf:
                  - $ref: '#/components/schemas/Integer'
                  - description: The ICMP type. A value of -1 means all types.
            description: Describes the ICMP type and code.
        - name: Ipv6CidrBlock
          in: query
          required: false
          description: 'The IPv6 network range to allow or deny, in CIDR notation (for example <code>2001:db8:1234:1a00::/64</code>).'
          schema:
            type: string
        - name: NetworkAclId
          in: query
          required: true
          description: The ID of the network ACL.
          schema:
            type: string
        - name: PortRange
          in: query
          required: false
          description: 'TCP or UDP protocols: The range of ports the rule applies to. Required if specifying protocol 6 (TCP) or 17 (UDP).'
          schema:
            type: object
            properties:
              from:
                allOf:
                  - $ref: '#/components/schemas/Integer'
                  - description: The first port in the range.
              to:
                allOf:
                  - $ref: '#/components/schemas/Integer'
                  - description: The last port in the range.
            description: Describes a range of ports.
        - name: Protocol
          in: query
          required: true
          description: 'The protocol number. A value of "-1" means all protocols. If you specify "-1" or a protocol number other than "6" (TCP), "17" (UDP), or "1" (ICMP), traffic on all ports is allowed, regardless of any ports or ICMP types or codes that you specify. If you specify protocol "58" (ICMPv6) and specify an IPv4 CIDR block, traffic for all ICMP types and codes allowed, regardless of any that you specify. If you specify protocol "58" (ICMPv6) and specify an IPv6 CIDR block, you must specify an ICMP type and code.'
          schema:
            type: string
        - name: RuleAction
          in: query
          required: true
          description: Indicates whether to allow or deny the traffic that matches the rule.
          schema:
            type: string
            enum:
              - allow
              - deny
        - name: RuleNumber
          in: query
          required: true
          description: '<p>The rule number for the entry (for example, 100). ACL entries are processed in ascending order by rule number.</p> <p>Constraints: Positive integer from 1 to 32766. The range 32767 to 65535 is reserved for internal use.</p>'
          schema:
            type: integer
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateNetworkAclEntry
      operationId: POST_CreateNetworkAclEntry
      description: '<p>Creates an entry (a rule) in a network ACL with the specified rule number. Each network ACL has a set of numbered ingress rules and a separate set of numbered egress rules. When determining whether a packet should be allowed in or out of a subnet associated with the ACL, we process the entries in the ACL according to the rule numbers, in ascending order. Each network ACL has a set of ingress rules and a separate set of egress rules.</p> <p>We recommend that you leave room between the rule numbers (for example, 100, 110, 120, ...), and not number them one right after the other (for example, 101, 102, 103, ...). This makes it easier to add a rule between existing ones without having to renumber the rules.</p> <p>After you add an entry, you can''t modify it; you must either replace it, or create an entry and delete the old one.</p> <p>For more information about network ACLs, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_ACLs.html">Network ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateNetworkAclEntryRequest'
      parameters: []
  /?Action=CreateNetworkInsightsAccessScope&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateNetworkInsightsAccessScope
      operationId: GET_CreateNetworkInsightsAccessScope
      description: '<p>Creates a Network Access Scope.</p> <p>Amazon Web Services Network Access Analyzer enables cloud networking and cloud operations teams to verify that their networks on Amazon Web Services conform to their network security and governance objectives. For more information, see the <a href="https://docs.aws.amazon.com/vpc/latest/network-access-analyzer/">Amazon Web Services Network Access Analyzer Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateNetworkInsightsAccessScopeResult'
      parameters:
        - name: MatchPath
          in: query
          required: false
          description: The paths to match.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/AccessScopePathRequest'
                - xml:
                    name: item
        - name: ExcludePath
          in: query
          required: false
          description: The paths to exclude.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/AccessScopePathRequest'
                - xml:
                    name: item
        - name: ClientToken
          in: query
          required: true
          description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to ensure idempotency</a>.'
          schema:
            type: string
        - name: TagSpecification
          in: query
          required: false
          description: The tags to apply.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateNetworkInsightsAccessScope
      operationId: POST_CreateNetworkInsightsAccessScope
      description: '<p>Creates a Network Access Scope.</p> <p>Amazon Web Services Network Access Analyzer enables cloud networking and cloud operations teams to verify that their networks on Amazon Web Services conform to their network security and governance objectives. For more information, see the <a href="https://docs.aws.amazon.com/vpc/latest/network-access-analyzer/">Amazon Web Services Network Access Analyzer Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateNetworkInsightsAccessScopeResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateNetworkInsightsAccessScopeRequest'
      parameters: []
  /?Action=CreateNetworkInsightsPath&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateNetworkInsightsPath
      operationId: GET_CreateNetworkInsightsPath
      description: '<p>Creates a path to analyze for reachability.</p> <p>Reachability Analyzer enables you to analyze and debug network reachability between two resources in your virtual private cloud (VPC). For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/reachability/">What is Reachability Analyzer</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateNetworkInsightsPathResult'
      parameters:
        - name: SourceIp
          in: query
          required: false
          description: The IP address of the Amazon Web Services resource that is the source of the path.
          schema:
            type: string
            pattern: '^([0-9]{1,3}.){3}[0-9]{1,3}$'
            minLength: 0
            maxLength: 15
        - name: DestinationIp
          in: query
          required: false
          description: The IP address of the Amazon Web Services resource that is the destination of the path.
          schema:
            type: string
            pattern: '^([0-9]{1,3}.){3}[0-9]{1,3}$'
            minLength: 0
            maxLength: 15
        - name: Source
          in: query
          required: true
          description: The Amazon Web Services resource that is the source of the path.
          schema:
            type: string
        - name: Destination
          in: query
          required: true
          description: The Amazon Web Services resource that is the destination of the path.
          schema:
            type: string
        - name: Protocol
          in: query
          required: true
          description: The protocol.
          schema:
            type: string
            enum:
              - tcp
              - udp
        - name: DestinationPort
          in: query
          required: false
          description: The destination port.
          schema:
            type: integer
            minimum: 1
            maximum: 65535
        - name: TagSpecification
          in: query
          required: false
          description: The tags to add to the path.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: ClientToken
          in: query
          required: true
          description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to ensure idempotency</a>.'
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateNetworkInsightsPath
      operationId: POST_CreateNetworkInsightsPath
      description: '<p>Creates a path to analyze for reachability.</p> <p>Reachability Analyzer enables you to analyze and debug network reachability between two resources in your virtual private cloud (VPC). For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/reachability/">What is Reachability Analyzer</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateNetworkInsightsPathResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateNetworkInsightsPathRequest'
      parameters: []
  /?Action=CreateNetworkInterface&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateNetworkInterface
      operationId: GET_CreateNetworkInterface
      description: '<p>Creates a network interface in the specified subnet.</p> <p>For more information about network interfaces, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html">Elastic Network Interfaces</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateNetworkInterfaceResult'
      parameters:
        - name: Description
          in: query
          required: false
          description: A description for the network interface.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: SecurityGroupId
          in: query
          required: false
          description: The IDs of one or more security groups.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/SecurityGroupId'
                - xml:
                    name: SecurityGroupId
        - name: Ipv6AddressCount
          in: query
          required: false
          description: 'The number of IPv6 addresses to assign to a network interface. Amazon EC2 automatically selects the IPv6 addresses from the subnet range. You can''t use this option if specifying specific IPv6 addresses. If your subnet has the <code>AssignIpv6AddressOnCreation</code> attribute set to <code>true</code>, you can specify <code>0</code> to override this setting.'
          schema:
            type: integer
        - name: Ipv6Addresses
          in: query
          required: false
          description: One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. You can't use this option if you're specifying a number of IPv6 addresses.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/InstanceIpv6Address'
                - xml:
                    name: item
        - name: PrivateIpAddress
          in: query
          required: false
          description: 'The primary private IPv4 address of the network interface. If you don''t specify an IPv4 address, Amazon EC2 selects one for you from the subnet''s IPv4 CIDR range. If you specify an IP address, you cannot indicate any IP addresses specified in <code>privateIpAddresses</code> as primary (only one IP address can be designated as primary).'
          schema:
            type: string
        - name: PrivateIpAddresses
          in: query
          required: false
          description: One or more private IPv4 addresses.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/PrivateIpAddressSpecification'
                - xml:
                    name: item
        - name: SecondaryPrivateIpAddressCount
          in: query
          required: false
          description: '<p>The number of secondary private IPv4 addresses to assign to a network interface. When you specify a number of secondary IPv4 addresses, Amazon EC2 selects these IP addresses within the subnet''s IPv4 CIDR range. You can''t specify this option and specify more than one private IP address using <code>privateIpAddresses</code>.</p> <p>The number of IP addresses you can assign to a network interface varies by instance type. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI">IP Addresses Per ENI Per Instance Type</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>'
          schema:
            type: integer
        - name: Ipv4Prefix
          in: query
          required: false
          description: One or more IPv4 prefixes assigned to the network interface. You cannot use this option if you use the <code>Ipv4PrefixCount</code> option.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Ipv4PrefixSpecificationRequest'
                - xml:
                    name: item
        - name: Ipv4PrefixCount
          in: query
          required: false
          description: The number of IPv4 prefixes that Amazon Web Services automatically assigns to the network interface. You cannot use this option if you use the <code>Ipv4 Prefixes</code> option.
          schema:
            type: integer
        - name: Ipv6Prefix
          in: query
          required: false
          description: One or more IPv6 prefixes assigned to the network interface. You cannot use this option if you use the <code>Ipv6PrefixCount</code> option.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Ipv6PrefixSpecificationRequest'
                - xml:
                    name: item
        - name: Ipv6PrefixCount
          in: query
          required: false
          description: The number of IPv6 prefixes that Amazon Web Services automatically assigns to the network interface. You cannot use this option if you use the <code>Ipv6Prefixes</code> option.
          schema:
            type: integer
        - name: InterfaceType
          in: query
          required: false
          description: <p>The type of network interface. The default is <code>interface</code>.</p> <p>The only supported values are <code>efa</code> and <code>trunk</code>.</p>
          schema:
            type: string
            enum:
              - efa
              - branch
              - trunk
        - name: SubnetId
          in: query
          required: true
          description: The ID of the subnet to associate with the network interface.
          schema:
            type: string
        - name: TagSpecification
          in: query
          required: false
          description: The tags to apply to the new network interface.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
        - name: ClientToken
          in: query
          required: false
          description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.'
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateNetworkInterface
      operationId: POST_CreateNetworkInterface
      description: '<p>Creates a network interface in the specified subnet.</p> <p>For more information about network interfaces, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html">Elastic Network Interfaces</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateNetworkInterfaceResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateNetworkInterfaceRequest'
      parameters: []
  /?Action=CreateNetworkInterfacePermission&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateNetworkInterfacePermission
      operationId: GET_CreateNetworkInterfacePermission
      description: '<p>Grants an Amazon Web Services-authorized account permission to attach the specified network interface to an instance in their account.</p> <p>You can grant permission to a single Amazon Web Services account only, and only one account at a time.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateNetworkInterfacePermissionResult'
      parameters:
        - name: NetworkInterfaceId
          in: query
          required: true
          description: The ID of the network interface.
          schema:
            type: string
        - name: AwsAccountId
          in: query
          required: false
          description: The Amazon Web Services account ID.
          schema:
            type: string
        - name: AwsService
          in: query
          required: false
          description: The Amazon Web Service. Currently not supported.
          schema:
            type: string
        - name: Permission
          in: query
          required: true
          description: The type of permission to grant.
          schema:
            type: string
            enum:
              - INSTANCE-ATTACH
              - EIP-ASSOCIATE
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateNetworkInterfacePermission
      operationId: POST_CreateNetworkInterfacePermission
      description: '<p>Grants an Amazon Web Services-authorized account permission to attach the specified network interface to an instance in their account.</p> <p>You can grant permission to a single Amazon Web Services account only, and only one account at a time.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateNetworkInterfacePermissionResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateNetworkInterfacePermissionRequest'
      parameters: []
  /?Action=CreatePlacementGroup&Version=2016-11-15:
    get:
      x-aws-operation-name: CreatePlacementGroup
      operationId: GET_CreatePlacementGroup
      description: '<p>Creates a placement group in which to launch instances. The strategy of the placement group determines how the instances are organized within the group. </p> <p>A <code>cluster</code> placement group is a logical grouping of instances within a single Availability Zone that benefit from low network latency, high network throughput. A <code>spread</code> placement group places instances on distinct hardware. A <code>partition</code> placement group places groups of instances in different partitions, where instances in one partition do not share the same hardware with instances in another partition.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html">Placement groups</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreatePlacementGroupResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: GroupName
          in: query
          required: false
          description: '<p>A name for the placement group. Must be unique within the scope of your account for the Region.</p> <p>Constraints: Up to 255 ASCII characters</p>'
          schema:
            type: string
        - name: Strategy
          in: query
          required: false
          description: The placement strategy.
          schema:
            type: string
            enum:
              - cluster
              - spread
              - partition
        - name: PartitionCount
          in: query
          required: false
          description: The number of partitions. Valid only when <b>Strategy</b> is set to <code>partition</code>.
          schema:
            type: integer
        - name: TagSpecification
          in: query
          required: false
          description: The tags to apply to the new placement group.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreatePlacementGroup
      operationId: POST_CreatePlacementGroup
      description: '<p>Creates a placement group in which to launch instances. The strategy of the placement group determines how the instances are organized within the group. </p> <p>A <code>cluster</code> placement group is a logical grouping of instances within a single Availability Zone that benefit from low network latency, high network throughput. A <code>spread</code> placement group places instances on distinct hardware. A <code>partition</code> placement group places groups of instances in different partitions, where instances in one partition do not share the same hardware with instances in another partition.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html">Placement groups</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreatePlacementGroupResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreatePlacementGroupRequest'
      parameters: []
  /?Action=CreatePublicIpv4Pool&Version=2016-11-15:
    get:
      x-aws-operation-name: CreatePublicIpv4Pool
      operationId: GET_CreatePublicIpv4Pool
      description: 'Creates a public IPv4 address pool. A public IPv4 pool is an EC2 IP address pool required for the public IPv4 CIDRs that you own and bring to Amazon Web Services to manage with IPAM. IPv6 addresses you bring to Amazon Web Services, however, use IPAM pools only. To monitor the status of pool creation, use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribePublicIpv4Pools.html">DescribePublicIpv4Pools</a>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreatePublicIpv4PoolResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: TagSpecification
          in: query
          required: false
          description: 'The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreatePublicIpv4Pool
      operationId: POST_CreatePublicIpv4Pool
      description: 'Creates a public IPv4 address pool. A public IPv4 pool is an EC2 IP address pool required for the public IPv4 CIDRs that you own and bring to Amazon Web Services to manage with IPAM. IPv6 addresses you bring to Amazon Web Services, however, use IPAM pools only. To monitor the status of pool creation, use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribePublicIpv4Pools.html">DescribePublicIpv4Pools</a>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreatePublicIpv4PoolResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreatePublicIpv4PoolRequest'
      parameters: []
  /?Action=CreateReplaceRootVolumeTask&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateReplaceRootVolumeTask
      operationId: GET_CreateReplaceRootVolumeTask
      description: '<p>Creates a root volume replacement task for an Amazon EC2 instance. The root volume can either be restored to its initial launch state, or it can be restored using a specific snapshot.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-restoring-volume.html#replace-root">Replace a root volume</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateReplaceRootVolumeTaskResult'
      parameters:
        - name: InstanceId
          in: query
          required: true
          description: The ID of the instance for which to replace the root volume.
          schema:
            type: string
        - name: SnapshotId
          in: query
          required: false
          description: 'The ID of the snapshot from which to restore the replacement root volume. If you want to restore the volume to the initial launch state, omit this parameter.'
          schema:
            type: string
        - name: ClientToken
          in: query
          required: false
          description: 'Unique, case-sensitive identifier you provide to ensure the idempotency of the request. If you do not specify a client token, a randomly generated token is used for the request to ensure idempotency. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring idempotency</a>.'
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: TagSpecification
          in: query
          required: false
          description: The tags to apply to the root volume replacement task.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateReplaceRootVolumeTask
      operationId: POST_CreateReplaceRootVolumeTask
      description: '<p>Creates a root volume replacement task for an Amazon EC2 instance. The root volume can either be restored to its initial launch state, or it can be restored using a specific snapshot.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-restoring-volume.html#replace-root">Replace a root volume</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateReplaceRootVolumeTaskResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateReplaceRootVolumeTaskRequest'
      parameters: []
  /?Action=CreateReservedInstancesListing&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateReservedInstancesListing
      operationId: GET_CreateReservedInstancesListing
      description: '<p>Creates a listing for Amazon EC2 Standard Reserved Instances to be sold in the Reserved Instance Marketplace. You can submit one Standard Reserved Instance listing at a time. To get a list of your Standard Reserved Instances, you can use the <a>DescribeReservedInstances</a> operation.</p> <note> <p>Only Standard Reserved Instances can be sold in the Reserved Instance Marketplace. Convertible Reserved Instances cannot be sold.</p> </note> <p>The Reserved Instance Marketplace matches sellers who want to resell Standard Reserved Instance capacity that they no longer need with buyers who want to purchase additional capacity. Reserved Instances bought and sold through the Reserved Instance Marketplace work like any other Reserved Instances.</p> <p>To sell your Standard Reserved Instances, you must first register as a seller in the Reserved Instance Marketplace. After completing the registration process, you can create a Reserved Instance Marketplace listing of some or all of your Standard Reserved Instances, and specify the upfront price to receive for them. Your Standard Reserved Instance listings then become available for purchase. To view the details of your Standard Reserved Instance listing, you can use the <a>DescribeReservedInstancesListings</a> operation.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved Instance Marketplace</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateReservedInstancesListingResult'
      parameters:
        - name: ClientToken
          in: query
          required: true
          description: 'Unique, case-sensitive identifier you provide to ensure idempotency of your listings. This helps avoid duplicate listings. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.'
          schema:
            type: string
        - name: InstanceCount
          in: query
          required: true
          description: The number of instances that are a part of a Reserved Instance account to be listed in the Reserved Instance Marketplace. This number should be less than or equal to the instance count associated with the Reserved Instance ID specified in this call.
          schema:
            type: integer
        - name: PriceSchedules
          in: query
          required: true
          description: A list specifying the price of the Standard Reserved Instance for each month remaining in the Reserved Instance term.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/PriceScheduleSpecification'
                - xml:
                    name: item
        - name: ReservedInstancesId
          in: query
          required: true
          description: The ID of the active Standard Reserved Instance.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateReservedInstancesListing
      operationId: POST_CreateReservedInstancesListing
      description: '<p>Creates a listing for Amazon EC2 Standard Reserved Instances to be sold in the Reserved Instance Marketplace. You can submit one Standard Reserved Instance listing at a time. To get a list of your Standard Reserved Instances, you can use the <a>DescribeReservedInstances</a> operation.</p> <note> <p>Only Standard Reserved Instances can be sold in the Reserved Instance Marketplace. Convertible Reserved Instances cannot be sold.</p> </note> <p>The Reserved Instance Marketplace matches sellers who want to resell Standard Reserved Instance capacity that they no longer need with buyers who want to purchase additional capacity. Reserved Instances bought and sold through the Reserved Instance Marketplace work like any other Reserved Instances.</p> <p>To sell your Standard Reserved Instances, you must first register as a seller in the Reserved Instance Marketplace. After completing the registration process, you can create a Reserved Instance Marketplace listing of some or all of your Standard Reserved Instances, and specify the upfront price to receive for them. Your Standard Reserved Instance listings then become available for purchase. To view the details of your Standard Reserved Instance listing, you can use the <a>DescribeReservedInstancesListings</a> operation.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved Instance Marketplace</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateReservedInstancesListingResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateReservedInstancesListingRequest'
      parameters: []
  /?Action=CreateRestoreImageTask&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateRestoreImageTask
      operationId: GET_CreateRestoreImageTask
      description: '<p>Starts a task that restores an AMI from an Amazon S3 object that was previously created by using <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateStoreImageTask.html">CreateStoreImageTask</a>.</p> <p>To use this API, you must have the required permissions. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-store-restore.html#ami-s3-permissions">Permissions for storing and restoring AMIs using Amazon S3</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-store-restore.html">Store and restore an AMI using Amazon S3</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateRestoreImageTaskResult'
      parameters:
        - name: Bucket
          in: query
          required: true
          description: The name of the Amazon S3 bucket that contains the stored AMI object.
          schema:
            type: string
        - name: ObjectKey
          in: query
          required: true
          description: The name of the stored AMI object in the bucket.
          schema:
            type: string
        - name: Name
          in: query
          required: false
          description: 'The name for the restored AMI. The name must be unique for AMIs in the Region for this account. If you do not provide a name, the new AMI gets the same name as the original AMI.'
          schema:
            type: string
        - name: TagSpecification
          in: query
          required: false
          description: '<p>The tags to apply to the AMI and snapshots on restoration. You can tag the AMI, the snapshots, or both.</p> <ul> <li> <p>To tag the AMI, the value for <code>ResourceType</code> must be <code>image</code>.</p> </li> <li> <p>To tag the snapshots, the value for <code>ResourceType</code> must be <code>snapshot</code>. The same tag is applied to all of the snapshots that are created.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateRestoreImageTask
      operationId: POST_CreateRestoreImageTask
      description: '<p>Starts a task that restores an AMI from an Amazon S3 object that was previously created by using <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateStoreImageTask.html">CreateStoreImageTask</a>.</p> <p>To use this API, you must have the required permissions. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-store-restore.html#ami-s3-permissions">Permissions for storing and restoring AMIs using Amazon S3</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-store-restore.html">Store and restore an AMI using Amazon S3</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateRestoreImageTaskResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateRestoreImageTaskRequest'
      parameters: []
  /?Action=CreateRoute&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateRoute
      operationId: GET_CreateRoute
      description: '<p>Creates a route in a route table within a VPC.</p> <p>You must specify one of the following targets: internet gateway or virtual private gateway, NAT instance, NAT gateway, VPC peering connection, network interface, egress-only internet gateway, or transit gateway.</p> <p>When determining how to route traffic, we use the route with the most specific match. For example, traffic is destined for the IPv4 address <code>192.0.2.3</code>, and the route table includes the following two IPv4 routes:</p> <ul> <li> <p> <code>192.0.2.0/24</code> (goes to some target A)</p> </li> <li> <p> <code>192.0.2.0/28</code> (goes to some target B)</p> </li> </ul> <p>Both routes apply to the traffic destined for <code>192.0.2.3</code>. However, the second route in the list covers a smaller number of IP addresses and is therefore more specific, so we use that route to determine where to target the traffic.</p> <p>For more information about route tables, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html">Route tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateRouteResult'
      parameters:
        - name: DestinationCidrBlock
          in: query
          required: false
          description: 'The IPv4 CIDR address block used for the destination match. Routing decisions are based on the most specific match. We modify the specified CIDR block to its canonical form; for example, if you specify <code>100.68.0.18/18</code>, we modify it to <code>100.68.0.0/18</code>.'
          schema:
            type: string
        - name: DestinationIpv6CidrBlock
          in: query
          required: false
          description: The IPv6 CIDR block used for the destination match. Routing decisions are based on the most specific match.
          schema:
            type: string
        - name: DestinationPrefixListId
          in: query
          required: false
          description: The ID of a prefix list used for the destination match.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: VpcEndpointId
          in: query
          required: false
          description: The ID of a VPC endpoint. Supported for Gateway Load Balancer endpoints only.
          schema:
            type: string
        - name: EgressOnlyInternetGatewayId
          in: query
          required: false
          description: '[IPv6 traffic only] The ID of an egress-only internet gateway.'
          schema:
            type: string
        - name: GatewayId
          in: query
          required: false
          description: The ID of an internet gateway or virtual private gateway attached to your VPC.
          schema:
            type: string
        - name: InstanceId
          in: query
          required: false
          description: The ID of a NAT instance in your VPC. The operation fails if you specify an instance ID unless exactly one network interface is attached.
          schema:
            type: string
        - name: NatGatewayId
          in: query
          required: false
          description: '[IPv4 traffic only] The ID of a NAT gateway.'
          schema:
            type: string
        - name: TransitGatewayId
          in: query
          required: false
          description: The ID of a transit gateway.
          schema:
            type: string
        - name: LocalGatewayId
          in: query
          required: false
          description: The ID of the local gateway.
          schema:
            type: string
        - name: CarrierGatewayId
          in: query
          required: false
          description: <p>The ID of the carrier gateway.</p> <p>You can only use this option when the VPC contains a subnet which is associated with a Wavelength Zone.</p>
          schema:
            type: string
        - name: NetworkInterfaceId
          in: query
          required: false
          description: The ID of a network interface.
          schema:
            type: string
        - name: RouteTableId
          in: query
          required: true
          description: The ID of the route table for the route.
          schema:
            type: string
        - name: VpcPeeringConnectionId
          in: query
          required: false
          description: The ID of a VPC peering connection.
          schema:
            type: string
        - name: CoreNetworkArn
          in: query
          required: false
          description: The Amazon Resource Name (ARN) of the core network.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateRoute
      operationId: POST_CreateRoute
      description: '<p>Creates a route in a route table within a VPC.</p> <p>You must specify one of the following targets: internet gateway or virtual private gateway, NAT instance, NAT gateway, VPC peering connection, network interface, egress-only internet gateway, or transit gateway.</p> <p>When determining how to route traffic, we use the route with the most specific match. For example, traffic is destined for the IPv4 address <code>192.0.2.3</code>, and the route table includes the following two IPv4 routes:</p> <ul> <li> <p> <code>192.0.2.0/24</code> (goes to some target A)</p> </li> <li> <p> <code>192.0.2.0/28</code> (goes to some target B)</p> </li> </ul> <p>Both routes apply to the traffic destined for <code>192.0.2.3</code>. However, the second route in the list covers a smaller number of IP addresses and is therefore more specific, so we use that route to determine where to target the traffic.</p> <p>For more information about route tables, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html">Route tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateRouteResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateRouteRequest'
      parameters: []
  /?Action=CreateRouteTable&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateRouteTable
      operationId: GET_CreateRouteTable
      description: '<p>Creates a route table for the specified VPC. After you create a route table, you can add routes and associate the table with a subnet.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html">Route tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateRouteTableResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: VpcId
          in: query
          required: true
          description: The ID of the VPC.
          schema:
            type: string
        - name: TagSpecification
          in: query
          required: false
          description: The tags to assign to the route table.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateRouteTable
      operationId: POST_CreateRouteTable
      description: '<p>Creates a route table for the specified VPC. After you create a route table, you can add routes and associate the table with a subnet.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html">Route tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateRouteTableResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateRouteTableRequest'
      parameters: []
  /?Action=CreateSecurityGroup&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateSecurityGroup
      operationId: GET_CreateSecurityGroup
      description: '<p>Creates a security group.</p> <p>A security group acts as a virtual firewall for your instance to control inbound and outbound traffic. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html">Amazon EC2 security groups</a> in the <i>Amazon Elastic Compute Cloud User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html">Security groups for your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p> <p>When you create a security group, you specify a friendly name of your choice. You can have a security group for use in EC2-Classic with the same name as a security group for use in a VPC. However, you can''t have two security groups for use in EC2-Classic with the same name or two security groups for use in a VPC with the same name.</p> <p>You have a default security group for use in EC2-Classic and a default security group for use in your VPC. If you don''t specify a security group when you launch an instance, the instance is launched into the appropriate default security group. A default security group includes a default rule that grants instances unrestricted network access to each other.</p> <p>You can add or remove rules from your security groups using <a>AuthorizeSecurityGroupIngress</a>, <a>AuthorizeSecurityGroupEgress</a>, <a>RevokeSecurityGroupIngress</a>, and <a>RevokeSecurityGroupEgress</a>.</p> <p>For more information about VPC security group limits, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/amazon-vpc-limits.html">Amazon VPC Limits</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateSecurityGroupResult'
      parameters:
        - name: GroupDescription
          in: query
          required: true
          description: '<p>A description for the security group. This is informational only.</p> <p>Constraints: Up to 255 characters in length</p> <p>Constraints for EC2-Classic: ASCII characters</p> <p>Constraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&amp;;{}!$*</p>'
          schema:
            type: string
        - name: GroupName
          in: query
          required: true
          description: '<p>The name of the security group.</p> <p>Constraints: Up to 255 characters in length. Cannot start with <code>sg-</code>.</p> <p>Constraints for EC2-Classic: ASCII characters</p> <p>Constraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&amp;;{}!$*</p>'
          schema:
            type: string
        - name: VpcId
          in: query
          required: false
          description: '[EC2-VPC] The ID of the VPC. Required for EC2-VPC.'
          schema:
            type: string
        - name: TagSpecification
          in: query
          required: false
          description: The tags to assign to the security group.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateSecurityGroup
      operationId: POST_CreateSecurityGroup
      description: '<p>Creates a security group.</p> <p>A security group acts as a virtual firewall for your instance to control inbound and outbound traffic. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html">Amazon EC2 security groups</a> in the <i>Amazon Elastic Compute Cloud User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html">Security groups for your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p> <p>When you create a security group, you specify a friendly name of your choice. You can have a security group for use in EC2-Classic with the same name as a security group for use in a VPC. However, you can''t have two security groups for use in EC2-Classic with the same name or two security groups for use in a VPC with the same name.</p> <p>You have a default security group for use in EC2-Classic and a default security group for use in your VPC. If you don''t specify a security group when you launch an instance, the instance is launched into the appropriate default security group. A default security group includes a default rule that grants instances unrestricted network access to each other.</p> <p>You can add or remove rules from your security groups using <a>AuthorizeSecurityGroupIngress</a>, <a>AuthorizeSecurityGroupEgress</a>, <a>RevokeSecurityGroupIngress</a>, and <a>RevokeSecurityGroupEgress</a>.</p> <p>For more information about VPC security group limits, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/amazon-vpc-limits.html">Amazon VPC Limits</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateSecurityGroupResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateSecurityGroupRequest'
      parameters: []
  /?Action=CreateSnapshot&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateSnapshot
      operationId: GET_CreateSnapshot
      description: '<p>Creates a snapshot of an EBS volume and stores it in Amazon S3. You can use snapshots for backups, to make copies of EBS volumes, and to save data before shutting down an instance.</p> <p>You can create snapshots of volumes in a Region and volumes on an Outpost. If you create a snapshot of a volume in a Region, the snapshot must be stored in the same Region as the volume. If you create a snapshot of a volume on an Outpost, the snapshot can be stored on the same Outpost as the volume, or in the Region for that Outpost.</p> <p>When a snapshot is created, any Amazon Web Services Marketplace product codes that are associated with the source volume are propagated to the snapshot.</p> <p>You can take a snapshot of an attached volume that is in use. However, snapshots only capture data that has been written to your Amazon EBS volume at the time the snapshot command is issued; this might exclude any data that has been cached by any applications or the operating system. If you can pause any file systems on the volume long enough to take a snapshot, your snapshot should be complete. However, if you cannot pause all file writes to the volume, you should unmount the volume from within the instance, issue the snapshot command, and then remount the volume to ensure a consistent and complete snapshot. You may remount and use your volume while the snapshot status is <code>pending</code>.</p> <p>To create a snapshot for Amazon EBS volumes that serve as root devices, you should stop the instance before taking the snapshot.</p> <p>Snapshots that are taken from encrypted volumes are automatically encrypted. Volumes that are created from encrypted snapshots are also automatically encrypted. Your encrypted volumes and any associated snapshots always remain protected.</p> <p>You can tag your snapshots during creation. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tag your Amazon EC2 resources</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AmazonEBS.html">Amazon Elastic Block Store</a> and <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/Snapshot'
      parameters:
        - name: Description
          in: query
          required: false
          description: A description for the snapshot.
          schema:
            type: string
        - name: OutpostArn
          in: query
          required: false
          description: '<p>The Amazon Resource Name (ARN) of the Outpost on which to create a local snapshot.</p> <ul> <li> <p>To create a snapshot of a volume in a Region, omit this parameter. The snapshot is created in the same Region as the volume.</p> </li> <li> <p>To create a snapshot of a volume on an Outpost and store the snapshot in the Region, omit this parameter. The snapshot is created in the Region for the Outpost.</p> </li> <li> <p>To create a snapshot of a volume on an Outpost and store the snapshot on an Outpost, specify the ARN of the destination Outpost. The snapshot must be created on the same Outpost as the volume.</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshots-outposts.html#create-snapshot">Create local snapshots from volumes on an Outpost</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
          schema:
            type: string
        - name: VolumeId
          in: query
          required: true
          description: The ID of the Amazon EBS volume.
          schema:
            type: string
        - name: TagSpecification
          in: query
          required: false
          description: The tags to apply to the snapshot during creation.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateSnapshot
      operationId: POST_CreateSnapshot
      description: '<p>Creates a snapshot of an EBS volume and stores it in Amazon S3. You can use snapshots for backups, to make copies of EBS volumes, and to save data before shutting down an instance.</p> <p>You can create snapshots of volumes in a Region and volumes on an Outpost. If you create a snapshot of a volume in a Region, the snapshot must be stored in the same Region as the volume. If you create a snapshot of a volume on an Outpost, the snapshot can be stored on the same Outpost as the volume, or in the Region for that Outpost.</p> <p>When a snapshot is created, any Amazon Web Services Marketplace product codes that are associated with the source volume are propagated to the snapshot.</p> <p>You can take a snapshot of an attached volume that is in use. However, snapshots only capture data that has been written to your Amazon EBS volume at the time the snapshot command is issued; this might exclude any data that has been cached by any applications or the operating system. If you can pause any file systems on the volume long enough to take a snapshot, your snapshot should be complete. However, if you cannot pause all file writes to the volume, you should unmount the volume from within the instance, issue the snapshot command, and then remount the volume to ensure a consistent and complete snapshot. You may remount and use your volume while the snapshot status is <code>pending</code>.</p> <p>To create a snapshot for Amazon EBS volumes that serve as root devices, you should stop the instance before taking the snapshot.</p> <p>Snapshots that are taken from encrypted volumes are automatically encrypted. Volumes that are created from encrypted snapshots are also automatically encrypted. Your encrypted volumes and any associated snapshots always remain protected.</p> <p>You can tag your snapshots during creation. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tag your Amazon EC2 resources</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AmazonEBS.html">Amazon Elastic Block Store</a> and <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/Snapshot'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateSnapshotRequest'
      parameters: []
  /?Action=CreateSnapshots&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateSnapshots
      operationId: GET_CreateSnapshots
      description: '<p>Creates crash-consistent snapshots of multiple EBS volumes and stores the data in S3. Volumes are chosen by specifying an instance. Any attached volumes will produce one snapshot each that is crash-consistent across the instance. Boot volumes can be excluded by changing the parameters. </p> <p>You can create multi-volume snapshots of instances in a Region and instances on an Outpost. If you create snapshots from an instance in a Region, the snapshots must be stored in the same Region as the instance. If you create snapshots from an instance on an Outpost, the snapshots can be stored on the same Outpost as the instance, or in the Region for that Outpost.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateSnapshotsResult'
      parameters:
        - name: Description
          in: query
          required: false
          description: ' A description propagated to every snapshot specified by the instance.'
          schema:
            type: string
        - name: InstanceSpecification
          in: query
          required: true
          description: The instance to specify which volumes should be included in the snapshots.
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/Boolean'
                  - description: Excludes the root volume from being snapshotted.
            description: The instance details to specify which volumes should be snapshotted.
        - name: OutpostArn
          in: query
          required: false
          description: '<p>The Amazon Resource Name (ARN) of the Outpost on which to create the local snapshots.</p> <ul> <li> <p>To create snapshots from an instance in a Region, omit this parameter. The snapshots are created in the same Region as the instance.</p> </li> <li> <p>To create snapshots from an instance on an Outpost and store the snapshots in the Region, omit this parameter. The snapshots are created in the Region for the Outpost.</p> </li> <li> <p>To create snapshots from an instance on an Outpost and store the snapshots on an Outpost, specify the ARN of the destination Outpost. The snapshots must be created on the same Outpost as the instance.</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshots-outposts.html#create-multivol-snapshot"> Create multi-volume local snapshots from instances on an Outpost</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
          schema:
            type: string
        - name: TagSpecification
          in: query
          required: false
          description: Tags to apply to every snapshot specified by the instance.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: CopyTagsFromSource
          in: query
          required: false
          description: Copies the tags from the specified volume to corresponding snapshot.
          schema:
            type: string
            enum:
              - volume
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateSnapshots
      operationId: POST_CreateSnapshots
      description: '<p>Creates crash-consistent snapshots of multiple EBS volumes and stores the data in S3. Volumes are chosen by specifying an instance. Any attached volumes will produce one snapshot each that is crash-consistent across the instance. Boot volumes can be excluded by changing the parameters. </p> <p>You can create multi-volume snapshots of instances in a Region and instances on an Outpost. If you create snapshots from an instance in a Region, the snapshots must be stored in the same Region as the instance. If you create snapshots from an instance on an Outpost, the snapshots can be stored on the same Outpost as the instance, or in the Region for that Outpost.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateSnapshotsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateSnapshotsRequest'
      parameters: []
  /?Action=CreateSpotDatafeedSubscription&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateSpotDatafeedSubscription
      operationId: GET_CreateSpotDatafeedSubscription
      description: 'Creates a data feed for Spot Instances, enabling you to view Spot Instance usage logs. You can create one data feed per Amazon Web Services account. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-data-feeds.html">Spot Instance data feed</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateSpotDatafeedSubscriptionResult'
      parameters:
        - name: Bucket
          in: query
          required: true
          description: 'The name of the Amazon S3 bucket in which to store the Spot Instance data feed. For more information about bucket names, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html#bucketnamingrules">Rules for bucket naming</a> in the <i>Amazon S3 Developer Guide</i>.'
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: Prefix
          in: query
          required: false
          description: The prefix for the data feed file names.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateSpotDatafeedSubscription
      operationId: POST_CreateSpotDatafeedSubscription
      description: 'Creates a data feed for Spot Instances, enabling you to view Spot Instance usage logs. You can create one data feed per Amazon Web Services account. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-data-feeds.html">Spot Instance data feed</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateSpotDatafeedSubscriptionResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateSpotDatafeedSubscriptionRequest'
      parameters: []
  /?Action=CreateStoreImageTask&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateStoreImageTask
      operationId: GET_CreateStoreImageTask
      description: '<p>Stores an AMI as a single object in an Amazon S3 bucket.</p> <p>To use this API, you must have the required permissions. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-store-restore.html#ami-s3-permissions">Permissions for storing and restoring AMIs using Amazon S3</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-store-restore.html">Store and restore an AMI using Amazon S3</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateStoreImageTaskResult'
      parameters:
        - name: ImageId
          in: query
          required: true
          description: The ID of the AMI.
          schema:
            type: string
        - name: Bucket
          in: query
          required: true
          description: 'The name of the Amazon S3 bucket in which the AMI object will be stored. The bucket must be in the Region in which the request is being made. The AMI object appears in the bucket only after the upload task has completed. '
          schema:
            type: string
        - name: S3ObjectTag
          in: query
          required: false
          description: 'The tags to apply to the AMI object that will be stored in the Amazon S3 bucket. '
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/S3ObjectTag'
                - xml:
                    name: item
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateStoreImageTask
      operationId: POST_CreateStoreImageTask
      description: '<p>Stores an AMI as a single object in an Amazon S3 bucket.</p> <p>To use this API, you must have the required permissions. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-store-restore.html#ami-s3-permissions">Permissions for storing and restoring AMIs using Amazon S3</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-store-restore.html">Store and restore an AMI using Amazon S3</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateStoreImageTaskResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateStoreImageTaskRequest'
      parameters: []
  /?Action=CreateSubnet&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateSubnet
      operationId: GET_CreateSubnet
      description: '<p>Creates a subnet in a specified VPC.</p> <p>You must specify an IPv4 CIDR block for the subnet. After you create a subnet, you can''t change its CIDR block. The allowed block size is between a /16 netmask (65,536 IP addresses) and /28 netmask (16 IP addresses). The CIDR block must not overlap with the CIDR block of an existing subnet in the VPC.</p> <p>If you''ve associated an IPv6 CIDR block with your VPC, you can create a subnet with an IPv6 CIDR block that uses a /64 prefix length. </p> <important> <p>Amazon Web Services reserves both the first four and the last IPv4 address in each subnet''s CIDR block. They''re not available for use.</p> </important> <p>If you add more than one subnet to a VPC, they''re set up in a star topology with a logical router in the middle.</p> <p>When you stop an instance in a subnet, it retains its private IPv4 address. It''s therefore possible to have a subnet with no running instances (they''re all stopped), but no remaining IP addresses available.</p> <p>For more information about subnets, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html">Your VPC and subnets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateSubnetResult'
      parameters:
        - name: TagSpecification
          in: query
          required: false
          description: The tags to assign to the subnet.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
        - name: AvailabilityZone
          in: query
          required: false
          description: '<p>The Availability Zone or Local Zone for the subnet.</p> <p>Default: Amazon Web Services selects one for you. If you create more than one subnet in your VPC, we do not necessarily select a different zone for each subnet.</p> <p>To create a subnet in a Local Zone, set this value to the Local Zone ID, for example <code>us-west-2-lax-1a</code>. For information about the Regions that support Local Zones, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-available-regions">Available Regions</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>To create a subnet in an Outpost, set this value to the Availability Zone for the Outpost and specify the Outpost ARN.</p>'
          schema:
            type: string
        - name: AvailabilityZoneId
          in: query
          required: false
          description: The AZ ID or the Local Zone ID of the subnet.
          schema:
            type: string
        - name: CidrBlock
          in: query
          required: false
          description: '<p>The IPv4 network range for the subnet, in CIDR notation. For example, <code>10.0.0.0/24</code>. We modify the specified CIDR block to its canonical form; for example, if you specify <code>100.68.0.18/18</code>, we modify it to <code>100.68.0.0/18</code>.</p> <p>This parameter is not supported for an IPv6 only subnet.</p>'
          schema:
            type: string
        - name: Ipv6CidrBlock
          in: query
          required: false
          description: '<p>The IPv6 network range for the subnet, in CIDR notation. The subnet size must use a /64 prefix length.</p> <p>This parameter is required for an IPv6 only subnet.</p>'
          schema:
            type: string
        - name: OutpostArn
          in: query
          required: false
          description: 'The Amazon Resource Name (ARN) of the Outpost. If you specify an Outpost ARN, you must also specify the Availability Zone of the Outpost subnet.'
          schema:
            type: string
        - name: VpcId
          in: query
          required: true
          description: The ID of the VPC.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: Ipv6Native
          in: query
          required: false
          description: Indicates whether to create an IPv6 only subnet.
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateSubnet
      operationId: POST_CreateSubnet
      description: '<p>Creates a subnet in a specified VPC.</p> <p>You must specify an IPv4 CIDR block for the subnet. After you create a subnet, you can''t change its CIDR block. The allowed block size is between a /16 netmask (65,536 IP addresses) and /28 netmask (16 IP addresses). The CIDR block must not overlap with the CIDR block of an existing subnet in the VPC.</p> <p>If you''ve associated an IPv6 CIDR block with your VPC, you can create a subnet with an IPv6 CIDR block that uses a /64 prefix length. </p> <important> <p>Amazon Web Services reserves both the first four and the last IPv4 address in each subnet''s CIDR block. They''re not available for use.</p> </important> <p>If you add more than one subnet to a VPC, they''re set up in a star topology with a logical router in the middle.</p> <p>When you stop an instance in a subnet, it retains its private IPv4 address. It''s therefore possible to have a subnet with no running instances (they''re all stopped), but no remaining IP addresses available.</p> <p>For more information about subnets, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html">Your VPC and subnets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateSubnetResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateSubnetRequest'
      parameters: []
  /?Action=CreateSubnetCidrReservation&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateSubnetCidrReservation
      operationId: GET_CreateSubnetCidrReservation
      description: 'Creates a subnet CIDR reservation. For information about subnet CIDR reservations, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/subnet-cidr-reservation.html">Subnet CIDR reservations</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateSubnetCidrReservationResult'
      parameters:
        - name: SubnetId
          in: query
          required: true
          description: The ID of the subnet.
          schema:
            type: string
        - name: Cidr
          in: query
          required: true
          description: The IPv4 or IPV6 CIDR range to reserve.
          schema:
            type: string
        - name: ReservationType
          in: query
          required: true
          description: '<p>The type of reservation.</p> <p>The following are valid values:</p> <ul> <li> <p> <code>prefix</code>: The Amazon EC2 Prefix Delegation feature assigns the IP addresses to network interfaces that are associated with an instance. For information about Prefix Delegation, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-prefix-delegation.html">Prefix Delegation for Amazon EC2 network interfaces</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> </li> <li> <p> <code>explicit</code>: You manually assign the IP addresses to resources that reside in your subnet. </p> </li> </ul>'
          schema:
            type: string
            enum:
              - prefix
              - explicit
        - name: Description
          in: query
          required: false
          description: The description to assign to the subnet CIDR reservation.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: TagSpecification
          in: query
          required: false
          description: The tags to assign to the subnet CIDR reservation.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateSubnetCidrReservation
      operationId: POST_CreateSubnetCidrReservation
      description: 'Creates a subnet CIDR reservation. For information about subnet CIDR reservations, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/subnet-cidr-reservation.html">Subnet CIDR reservations</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateSubnetCidrReservationResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateSubnetCidrReservationRequest'
      parameters: []
  /?Action=CreateTags&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateTags
      operationId: GET_CreateTags
      description: '<p>Adds or overwrites only the specified tags for the specified Amazon EC2 resource or resources. When you specify an existing tag key, the value is overwritten with the new value. Each resource can have a maximum of 50 tags. Each tag consists of a key and optional value. Tag keys must be unique per resource.</p> <p>For more information about tags, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging Your Resources</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. For more information about creating IAM policies that control users'' access to resources based on tags, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-supported-iam-actions-resources.html">Supported Resource-Level Permissions for Amazon EC2 API Actions</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: ResourceId
          in: query
          required: true
          description: '<p>The IDs of the resources, separated by spaces.</p> <p>Constraints: Up to 1000 resource IDs. We recommend breaking up this request into smaller batches.</p>'
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TaggableResourceId'
        - name: Tag
          in: query
          required: true
          description: 'The tags. The <code>value</code> parameter is required, but if you don''t want the tag to have a value, specify the parameter with no value, and we set the value to an empty string.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Tag'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateTags
      operationId: POST_CreateTags
      description: '<p>Adds or overwrites only the specified tags for the specified Amazon EC2 resource or resources. When you specify an existing tag key, the value is overwritten with the new value. Each resource can have a maximum of 50 tags. Each tag consists of a key and optional value. Tag keys must be unique per resource.</p> <p>For more information about tags, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging Your Resources</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. For more information about creating IAM policies that control users'' access to resources based on tags, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-supported-iam-actions-resources.html">Supported Resource-Level Permissions for Amazon EC2 API Actions</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateTagsRequest'
      parameters: []
  /?Action=CreateTrafficMirrorFilter&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateTrafficMirrorFilter
      operationId: GET_CreateTrafficMirrorFilter
      description: '<p>Creates a Traffic Mirror filter.</p> <p>A Traffic Mirror filter is a set of rules that defines the traffic to mirror.</p> <p>By default, no traffic is mirrored. To mirror traffic, use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTrafficMirrorFilterRule.htm">CreateTrafficMirrorFilterRule</a> to add Traffic Mirror rules to the filter. The rules you add define what traffic gets mirrored. You can also use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyTrafficMirrorFilterNetworkServices.html">ModifyTrafficMirrorFilterNetworkServices</a> to mirror supported network services.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateTrafficMirrorFilterResult'
      parameters:
        - name: Description
          in: query
          required: false
          description: The description of the Traffic Mirror filter.
          schema:
            type: string
        - name: TagSpecification
          in: query
          required: false
          description: The tags to assign to a Traffic Mirror filter.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: ClientToken
          in: query
          required: false
          description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to ensure idempotency</a>.'
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateTrafficMirrorFilter
      operationId: POST_CreateTrafficMirrorFilter
      description: '<p>Creates a Traffic Mirror filter.</p> <p>A Traffic Mirror filter is a set of rules that defines the traffic to mirror.</p> <p>By default, no traffic is mirrored. To mirror traffic, use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTrafficMirrorFilterRule.htm">CreateTrafficMirrorFilterRule</a> to add Traffic Mirror rules to the filter. The rules you add define what traffic gets mirrored. You can also use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyTrafficMirrorFilterNetworkServices.html">ModifyTrafficMirrorFilterNetworkServices</a> to mirror supported network services.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateTrafficMirrorFilterResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateTrafficMirrorFilterRequest'
      parameters: []
  /?Action=CreateTrafficMirrorFilterRule&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateTrafficMirrorFilterRule
      operationId: GET_CreateTrafficMirrorFilterRule
      description: <p>Creates a Traffic Mirror filter rule.</p> <p>A Traffic Mirror rule defines the Traffic Mirror source traffic to mirror.</p> <p>You need the Traffic Mirror filter ID when you create the rule.</p>
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateTrafficMirrorFilterRuleResult'
      parameters:
        - name: TrafficMirrorFilterId
          in: query
          required: true
          description: The ID of the filter that this rule is associated with.
          schema:
            type: string
        - name: TrafficDirection
          in: query
          required: true
          description: The type of traffic.
          schema:
            type: string
            enum:
              - ingress
              - egress
        - name: RuleNumber
          in: query
          required: true
          description: The number of the Traffic Mirror rule. This number must be unique for each Traffic Mirror rule in a given direction. The rules are processed in ascending order by rule number.
          schema:
            type: integer
        - name: RuleAction
          in: query
          required: true
          description: The action to take on the filtered traffic.
          schema:
            type: string
            enum:
              - accept
              - reject
        - name: DestinationPortRange
          in: query
          required: false
          description: The destination port range.
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/Integer'
                  - description: The last port in the Traffic Mirror port range. This applies to the TCP and UDP protocols.
            description: Information about the Traffic Mirror filter rule port range.
        - name: SourcePortRange
          in: query
          required: false
          description: The source port range.
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/Integer'
                  - description: The last port in the Traffic Mirror port range. This applies to the TCP and UDP protocols.
            description: Information about the Traffic Mirror filter rule port range.
        - name: Protocol
          in: query
          required: false
          description: '<p>The protocol, for example UDP, to assign to the Traffic Mirror rule.</p> <p>For information about the protocol value, see <a href="https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml">Protocol Numbers</a> on the Internet Assigned Numbers Authority (IANA) website.</p>'
          schema:
            type: integer
        - name: DestinationCidrBlock
          in: query
          required: true
          description: The destination CIDR block to assign to the Traffic Mirror rule.
          schema:
            type: string
        - name: SourceCidrBlock
          in: query
          required: true
          description: The source CIDR block to assign to the Traffic Mirror rule.
          schema:
            type: string
        - name: Description
          in: query
          required: false
          description: The description of the Traffic Mirror rule.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: ClientToken
          in: query
          required: false
          description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to ensure idempotency</a>.'
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateTrafficMirrorFilterRule
      operationId: POST_CreateTrafficMirrorFilterRule
      description: <p>Creates a Traffic Mirror filter rule.</p> <p>A Traffic Mirror rule defines the Traffic Mirror source traffic to mirror.</p> <p>You need the Traffic Mirror filter ID when you create the rule.</p>
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateTrafficMirrorFilterRuleResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateTrafficMirrorFilterRuleRequest'
      parameters: []
  /?Action=CreateTrafficMirrorSession&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateTrafficMirrorSession
      operationId: GET_CreateTrafficMirrorSession
      description: '<p>Creates a Traffic Mirror session.</p> <p>A Traffic Mirror session actively copies packets from a Traffic Mirror source to a Traffic Mirror target. Create a filter, and then assign it to the session to define a subset of the traffic to mirror, for example all TCP traffic.</p> <p>The Traffic Mirror source and the Traffic Mirror target (monitoring appliances) can be in the same VPC, or in a different VPC connected via VPC peering or a transit gateway. </p> <p>By default, no traffic is mirrored. Use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTrafficMirrorFilter.htm">CreateTrafficMirrorFilter</a> to create filter rules that specify the traffic to mirror.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateTrafficMirrorSessionResult'
      parameters:
        - name: NetworkInterfaceId
          in: query
          required: true
          description: The ID of the source network interface.
          schema:
            type: string
        - name: TrafficMirrorTargetId
          in: query
          required: true
          description: The ID of the Traffic Mirror target.
          schema:
            type: string
        - name: TrafficMirrorFilterId
          in: query
          required: true
          description: The ID of the Traffic Mirror filter.
          schema:
            type: string
        - name: PacketLength
          in: query
          required: false
          description: '<p>The number of bytes in each packet to mirror. These are bytes after the VXLAN header. Do not specify this parameter when you want to mirror the entire packet. To mirror a subset of the packet, set this to the length (in bytes) that you want to mirror. For example, if you set this value to 100, then the first 100 bytes that meet the filter criteria are copied to the target.</p> <p>If you do not want to mirror the entire packet, use the <code>PacketLength</code> parameter to specify the number of bytes in each packet to mirror.</p>'
          schema:
            type: integer
        - name: SessionNumber
          in: query
          required: true
          description: <p>The session number determines the order in which sessions are evaluated when an interface is used by multiple sessions. The first session with a matching filter is the one that mirrors the packets.</p> <p>Valid values are 1-32766.</p>
          schema:
            type: integer
        - name: VirtualNetworkId
          in: query
          required: false
          description: 'The VXLAN ID for the Traffic Mirror session. For more information about the VXLAN protocol, see <a href="https://tools.ietf.org/html/rfc7348">RFC 7348</a>. If you do not specify a <code>VirtualNetworkId</code>, an account-wide unique id is chosen at random.'
          schema:
            type: integer
        - name: Description
          in: query
          required: false
          description: The description of the Traffic Mirror session.
          schema:
            type: string
        - name: TagSpecification
          in: query
          required: false
          description: The tags to assign to a Traffic Mirror session.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: ClientToken
          in: query
          required: false
          description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to ensure idempotency</a>.'
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateTrafficMirrorSession
      operationId: POST_CreateTrafficMirrorSession
      description: '<p>Creates a Traffic Mirror session.</p> <p>A Traffic Mirror session actively copies packets from a Traffic Mirror source to a Traffic Mirror target. Create a filter, and then assign it to the session to define a subset of the traffic to mirror, for example all TCP traffic.</p> <p>The Traffic Mirror source and the Traffic Mirror target (monitoring appliances) can be in the same VPC, or in a different VPC connected via VPC peering or a transit gateway. </p> <p>By default, no traffic is mirrored. Use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTrafficMirrorFilter.htm">CreateTrafficMirrorFilter</a> to create filter rules that specify the traffic to mirror.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateTrafficMirrorSessionResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateTrafficMirrorSessionRequest'
      parameters: []
  /?Action=CreateTrafficMirrorTarget&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateTrafficMirrorTarget
      operationId: GET_CreateTrafficMirrorTarget
      description: '<p>Creates a target for your Traffic Mirror session.</p> <p>A Traffic Mirror target is the destination for mirrored traffic. The Traffic Mirror source and the Traffic Mirror target (monitoring appliances) can be in the same VPC, or in different VPCs connected via VPC peering or a transit gateway.</p> <p>A Traffic Mirror target can be a network interface, a Network Load Balancer, or a Gateway Load Balancer endpoint.</p> <p>To use the target in a Traffic Mirror session, use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTrafficMirrorSession.htm">CreateTrafficMirrorSession</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateTrafficMirrorTargetResult'
      parameters:
        - name: NetworkInterfaceId
          in: query
          required: false
          description: The network interface ID that is associated with the target.
          schema:
            type: string
        - name: NetworkLoadBalancerArn
          in: query
          required: false
          description: The Amazon Resource Name (ARN) of the Network Load Balancer that is associated with the target.
          schema:
            type: string
        - name: Description
          in: query
          required: false
          description: The description of the Traffic Mirror target.
          schema:
            type: string
        - name: TagSpecification
          in: query
          required: false
          description: The tags to assign to the Traffic Mirror target.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: ClientToken
          in: query
          required: false
          description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to ensure idempotency</a>.'
          schema:
            type: string
        - name: GatewayLoadBalancerEndpointId
          in: query
          required: false
          description: The ID of the Gateway Load Balancer endpoint.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateTrafficMirrorTarget
      operationId: POST_CreateTrafficMirrorTarget
      description: '<p>Creates a target for your Traffic Mirror session.</p> <p>A Traffic Mirror target is the destination for mirrored traffic. The Traffic Mirror source and the Traffic Mirror target (monitoring appliances) can be in the same VPC, or in different VPCs connected via VPC peering or a transit gateway.</p> <p>A Traffic Mirror target can be a network interface, a Network Load Balancer, or a Gateway Load Balancer endpoint.</p> <p>To use the target in a Traffic Mirror session, use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTrafficMirrorSession.htm">CreateTrafficMirrorSession</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateTrafficMirrorTargetResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateTrafficMirrorTargetRequest'
      parameters: []
  /?Action=CreateTransitGateway&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateTransitGateway
      operationId: GET_CreateTransitGateway
      description: '<p>Creates a transit gateway.</p> <p>You can use a transit gateway to interconnect your virtual private clouds (VPC) and on-premises networks. After the transit gateway enters the <code>available</code> state, you can attach your VPCs and VPN connections to the transit gateway.</p> <p>To attach your VPCs, use <a>CreateTransitGatewayVpcAttachment</a>.</p> <p>To attach a VPN connection, use <a>CreateCustomerGateway</a> to create a customer gateway and specify the ID of the customer gateway and the ID of the transit gateway in a call to <a>CreateVpnConnection</a>.</p> <p>When you create a transit gateway, we create a default transit gateway route table and use it as the default association route table and the default propagation route table. You can use <a>CreateTransitGatewayRouteTable</a> to create additional transit gateway route tables. If you disable automatic route propagation, we do not create a default transit gateway route table. You can use <a>EnableTransitGatewayRouteTablePropagation</a> to propagate routes from a resource attachment to a transit gateway route table. If you disable automatic associations, you can use <a>AssociateTransitGatewayRouteTable</a> to associate a resource attachment with a transit gateway route table.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateTransitGatewayResult'
      parameters:
        - name: Description
          in: query
          required: false
          description: A description of the transit gateway.
          schema:
            type: string
        - name: Options
          in: query
          required: false
          description: The transit gateway options.
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/TransitGatewayCidrBlockStringList'
                  - description: 'One or more IPv4 or IPv6 CIDR blocks for the transit gateway. Must be a size /24 CIDR block or larger for IPv4, or a size /64 CIDR block or larger for IPv6.'
            description: Describes the options for a transit gateway.
        - name: TagSpecification
          in: query
          required: false
          description: The tags to apply to the transit gateway.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateTransitGateway
      operationId: POST_CreateTransitGateway
      description: '<p>Creates a transit gateway.</p> <p>You can use a transit gateway to interconnect your virtual private clouds (VPC) and on-premises networks. After the transit gateway enters the <code>available</code> state, you can attach your VPCs and VPN connections to the transit gateway.</p> <p>To attach your VPCs, use <a>CreateTransitGatewayVpcAttachment</a>.</p> <p>To attach a VPN connection, use <a>CreateCustomerGateway</a> to create a customer gateway and specify the ID of the customer gateway and the ID of the transit gateway in a call to <a>CreateVpnConnection</a>.</p> <p>When you create a transit gateway, we create a default transit gateway route table and use it as the default association route table and the default propagation route table. You can use <a>CreateTransitGatewayRouteTable</a> to create additional transit gateway route tables. If you disable automatic route propagation, we do not create a default transit gateway route table. You can use <a>EnableTransitGatewayRouteTablePropagation</a> to propagate routes from a resource attachment to a transit gateway route table. If you disable automatic associations, you can use <a>AssociateTransitGatewayRouteTable</a> to associate a resource attachment with a transit gateway route table.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateTransitGatewayResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateTransitGatewayRequest'
      parameters: []
  /?Action=CreateTransitGatewayConnect&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateTransitGatewayConnect
      operationId: GET_CreateTransitGatewayConnect
      description: <p>Creates a Connect attachment from a specified transit gateway attachment. A Connect attachment is a GRE-based tunnel attachment that you can use to establish a connection between a transit gateway and an appliance.</p> <p>A Connect attachment uses an existing VPC or Amazon Web Services Direct Connect attachment as the underlying transport mechanism.</p>
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateTransitGatewayConnectResult'
      parameters:
        - name: TransportTransitGatewayAttachmentId
          in: query
          required: true
          description: The ID of the transit gateway attachment. You can specify a VPC attachment or Amazon Web Services Direct Connect attachment.
          schema:
            type: string
        - name: Options
          in: query
          required: true
          description: The Connect attachment options.
          schema:
            type: object
            required:
              - Protocol
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/ProtocolValue'
                  - description: The tunnel protocol.
            description: The options for a Connect attachment.
        - name: TagSpecification
          in: query
          required: false
          description: The tags to apply to the Connect attachment.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateTransitGatewayConnect
      operationId: POST_CreateTransitGatewayConnect
      description: <p>Creates a Connect attachment from a specified transit gateway attachment. A Connect attachment is a GRE-based tunnel attachment that you can use to establish a connection between a transit gateway and an appliance.</p> <p>A Connect attachment uses an existing VPC or Amazon Web Services Direct Connect attachment as the underlying transport mechanism.</p>
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateTransitGatewayConnectResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateTransitGatewayConnectRequest'
      parameters: []
  /?Action=CreateTransitGatewayConnectPeer&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateTransitGatewayConnectPeer
      operationId: GET_CreateTransitGatewayConnectPeer
      description: '<p>Creates a Connect peer for a specified transit gateway Connect attachment between a transit gateway and an appliance.</p> <p>The peer address and transit gateway address must be the same IP address family (IPv4 or IPv6).</p> <p>For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/tgw/tgw-connect.html#tgw-connect-peer">Connect peers</a> in the <i>Transit Gateways Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateTransitGatewayConnectPeerResult'
      parameters:
        - name: TransitGatewayAttachmentId
          in: query
          required: true
          description: The ID of the Connect attachment.
          schema:
            type: string
        - name: TransitGatewayAddress
          in: query
          required: false
          description: 'The peer IP address (GRE outer IP address) on the transit gateway side of the Connect peer, which must be specified from a transit gateway CIDR block. If not specified, Amazon automatically assigns the first available IP address from the transit gateway CIDR block.'
          schema:
            type: string
        - name: PeerAddress
          in: query
          required: true
          description: The peer IP address (GRE outer IP address) on the appliance side of the Connect peer.
          schema:
            type: string
        - name: BgpOptions
          in: query
          required: false
          description: The BGP options for the Connect peer.
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/Long'
                  - description: The peer Autonomous System Number (ASN).
            description: The BGP options for the Connect attachment.
        - name: InsideCidrBlocks
          in: query
          required: true
          description: 'The range of inside IP addresses that are used for BGP peering. You must specify a size /29 IPv4 CIDR block from the <code>169.254.0.0/16</code> range. The first address from the range must be configured on the appliance as the BGP IP address. You can also optionally specify a size /125 IPv6 CIDR block from the <code>fd00::/8</code> range.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: item
        - name: TagSpecification
          in: query
          required: false
          description: The tags to apply to the Connect peer.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateTransitGatewayConnectPeer
      operationId: POST_CreateTransitGatewayConnectPeer
      description: '<p>Creates a Connect peer for a specified transit gateway Connect attachment between a transit gateway and an appliance.</p> <p>The peer address and transit gateway address must be the same IP address family (IPv4 or IPv6).</p> <p>For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/tgw/tgw-connect.html#tgw-connect-peer">Connect peers</a> in the <i>Transit Gateways Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateTransitGatewayConnectPeerResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateTransitGatewayConnectPeerRequest'
      parameters: []
  /?Action=CreateTransitGatewayMulticastDomain&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateTransitGatewayMulticastDomain
      operationId: GET_CreateTransitGatewayMulticastDomain
      description: '<p>Creates a multicast domain using the specified transit gateway.</p> <p>The transit gateway must be in the available state before you create a domain. Use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGateways.html">DescribeTransitGateways</a> to see the state of transit gateway.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateTransitGatewayMulticastDomainResult'
      parameters:
        - name: TransitGatewayId
          in: query
          required: true
          description: The ID of the transit gateway.
          schema:
            type: string
        - name: Options
          in: query
          required: false
          description: The options for the transit gateway multicast domain.
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/AutoAcceptSharedAssociationsValue'
                  - description: Indicates whether to automatically accept cross-account subnet associations that are associated with the transit gateway multicast domain.
            description: The options for the transit gateway multicast domain.
        - name: TagSpecification
          in: query
          required: false
          description: The tags for the transit gateway multicast domain.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateTransitGatewayMulticastDomain
      operationId: POST_CreateTransitGatewayMulticastDomain
      description: '<p>Creates a multicast domain using the specified transit gateway.</p> <p>The transit gateway must be in the available state before you create a domain. Use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGateways.html">DescribeTransitGateways</a> to see the state of transit gateway.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateTransitGatewayMulticastDomainResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateTransitGatewayMulticastDomainRequest'
      parameters: []
  /?Action=CreateTransitGatewayPeeringAttachment&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateTransitGatewayPeeringAttachment
      operationId: GET_CreateTransitGatewayPeeringAttachment
      description: '<p>Requests a transit gateway peering attachment between the specified transit gateway (requester) and a peer transit gateway (accepter). The transit gateways must be in different Regions. The peer transit gateway can be in your account or a different Amazon Web Services account.</p> <p>After you create the peering attachment, the owner of the accepter transit gateway must accept the attachment request.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateTransitGatewayPeeringAttachmentResult'
      parameters:
        - name: TransitGatewayId
          in: query
          required: true
          description: The ID of the transit gateway.
          schema:
            type: string
        - name: PeerTransitGatewayId
          in: query
          required: true
          description: The ID of the peer transit gateway with which to create the peering attachment.
          schema:
            type: string
        - name: PeerAccountId
          in: query
          required: true
          description: The ID of the Amazon Web Services account that owns the peer transit gateway.
          schema:
            type: string
        - name: PeerRegion
          in: query
          required: true
          description: The Region where the peer transit gateway is located.
          schema:
            type: string
        - name: TagSpecification
          in: query
          required: false
          description: The tags to apply to the transit gateway peering attachment.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateTransitGatewayPeeringAttachment
      operationId: POST_CreateTransitGatewayPeeringAttachment
      description: '<p>Requests a transit gateway peering attachment between the specified transit gateway (requester) and a peer transit gateway (accepter). The transit gateways must be in different Regions. The peer transit gateway can be in your account or a different Amazon Web Services account.</p> <p>After you create the peering attachment, the owner of the accepter transit gateway must accept the attachment request.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateTransitGatewayPeeringAttachmentResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateTransitGatewayPeeringAttachmentRequest'
      parameters: []
  /?Action=CreateTransitGatewayPrefixListReference&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateTransitGatewayPrefixListReference
      operationId: GET_CreateTransitGatewayPrefixListReference
      description: Creates a reference (route) to a prefix list in a specified transit gateway route table.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateTransitGatewayPrefixListReferenceResult'
      parameters:
        - name: TransitGatewayRouteTableId
          in: query
          required: true
          description: The ID of the transit gateway route table.
          schema:
            type: string
        - name: PrefixListId
          in: query
          required: true
          description: The ID of the prefix list that is used for destination matches.
          schema:
            type: string
        - name: TransitGatewayAttachmentId
          in: query
          required: false
          description: The ID of the attachment to which traffic is routed.
          schema:
            type: string
        - name: Blackhole
          in: query
          required: false
          description: Indicates whether to drop traffic that matches this route.
          schema:
            type: boolean
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateTransitGatewayPrefixListReference
      operationId: POST_CreateTransitGatewayPrefixListReference
      description: Creates a reference (route) to a prefix list in a specified transit gateway route table.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateTransitGatewayPrefixListReferenceResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateTransitGatewayPrefixListReferenceRequest'
      parameters: []
  /?Action=CreateTransitGatewayRoute&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateTransitGatewayRoute
      operationId: GET_CreateTransitGatewayRoute
      description: Creates a static route for the specified transit gateway route table.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateTransitGatewayRouteResult'
      parameters:
        - name: DestinationCidrBlock
          in: query
          required: true
          description: The CIDR range used for destination matches. Routing decisions are based on the most specific match.
          schema:
            type: string
        - name: TransitGatewayRouteTableId
          in: query
          required: true
          description: The ID of the transit gateway route table.
          schema:
            type: string
        - name: TransitGatewayAttachmentId
          in: query
          required: false
          description: The ID of the attachment.
          schema:
            type: string
        - name: Blackhole
          in: query
          required: false
          description: Indicates whether to drop traffic that matches this route.
          schema:
            type: boolean
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateTransitGatewayRoute
      operationId: POST_CreateTransitGatewayRoute
      description: Creates a static route for the specified transit gateway route table.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateTransitGatewayRouteResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateTransitGatewayRouteRequest'
      parameters: []
  /?Action=CreateTransitGatewayRouteTable&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateTransitGatewayRouteTable
      operationId: GET_CreateTransitGatewayRouteTable
      description: Creates a route table for the specified transit gateway.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateTransitGatewayRouteTableResult'
      parameters:
        - name: TransitGatewayId
          in: query
          required: true
          description: The ID of the transit gateway.
          schema:
            type: string
        - name: TagSpecifications
          in: query
          required: false
          description: The tags to apply to the transit gateway route table.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateTransitGatewayRouteTable
      operationId: POST_CreateTransitGatewayRouteTable
      description: Creates a route table for the specified transit gateway.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateTransitGatewayRouteTableResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateTransitGatewayRouteTableRequest'
      parameters: []
  /?Action=CreateTransitGatewayVpcAttachment&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateTransitGatewayVpcAttachment
      operationId: GET_CreateTransitGatewayVpcAttachment
      description: '<p>Attaches the specified VPC to the specified transit gateway.</p> <p>If you attach a VPC with a CIDR range that overlaps the CIDR range of a VPC that is already attached, the new VPC CIDR range is not propagated to the default propagation route table.</p> <p>To send VPC traffic to an attached transit gateway, add a route to the VPC route table using <a>CreateRoute</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateTransitGatewayVpcAttachmentResult'
      parameters:
        - name: TransitGatewayId
          in: query
          required: true
          description: The ID of the transit gateway.
          schema:
            type: string
        - name: VpcId
          in: query
          required: true
          description: The ID of the VPC.
          schema:
            type: string
        - name: SubnetIds
          in: query
          required: true
          description: 'The IDs of one or more subnets. You can specify only one subnet per Availability Zone. You must specify at least one subnet, but we recommend that you specify two subnets for better availability. The transit gateway uses one IP address from each specified subnet.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/SubnetId'
                - xml:
                    name: item
        - name: Options
          in: query
          required: false
          description: The VPC attachment options.
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/ApplianceModeSupportValue'
                  - description: 'Enable or disable support for appliance mode. If enabled, a traffic flow between a source and destination uses the same Availability Zone for the VPC attachment for the lifetime of that flow. The default is <code>disable</code>.'
            description: Describes the options for a VPC attachment.
        - name: TagSpecifications
          in: query
          required: false
          description: The tags to apply to the VPC attachment.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateTransitGatewayVpcAttachment
      operationId: POST_CreateTransitGatewayVpcAttachment
      description: '<p>Attaches the specified VPC to the specified transit gateway.</p> <p>If you attach a VPC with a CIDR range that overlaps the CIDR range of a VPC that is already attached, the new VPC CIDR range is not propagated to the default propagation route table.</p> <p>To send VPC traffic to an attached transit gateway, add a route to the VPC route table using <a>CreateRoute</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateTransitGatewayVpcAttachmentResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateTransitGatewayVpcAttachmentRequest'
      parameters: []
  /?Action=CreateVolume&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateVolume
      operationId: GET_CreateVolume
      description: '<p>Creates an EBS volume that can be attached to an instance in the same Availability Zone.</p> <p>You can create a new empty volume or restore a volume from an EBS snapshot. Any Amazon Web Services Marketplace product codes from the snapshot are propagated to the volume.</p> <p>You can create encrypted volumes. Encrypted volumes must be attached to instances that support Amazon EBS encryption. Volumes that are created from encrypted snapshots are also automatically encrypted. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>You can tag your volumes during creation. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tag your Amazon EC2 resources</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-creating-volume.html">Create an Amazon EBS volume</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/Volume'
      parameters:
        - name: AvailabilityZone
          in: query
          required: true
          description: The Availability Zone in which to create the volume.
          schema:
            type: string
        - name: Encrypted
          in: query
          required: false
          description: '<p>Indicates whether the volume should be encrypted. The effect of setting the encryption state to <code>true</code> depends on the volume origin (new or from a snapshot), starting encryption state, ownership, and whether encryption by default is enabled. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#encryption-by-default">Encryption by default</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>Encrypted Amazon EBS volumes must be attached to instances that support Amazon EBS encryption. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#EBSEncryption_supported_instances">Supported instance types</a>.</p>'
          schema:
            type: boolean
        - name: Iops
          in: query
          required: false
          description: '<p>The number of I/O operations per second (IOPS). For <code>gp3</code>, <code>io1</code>, and <code>io2</code> volumes, this represents the number of IOPS that are provisioned for the volume. For <code>gp2</code> volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting.</p> <p>The following are the supported values for each volume type:</p> <ul> <li> <p> <code>gp3</code>: 3,000-16,000 IOPS</p> </li> <li> <p> <code>io1</code>: 100-64,000 IOPS</p> </li> <li> <p> <code>io2</code>: 100-64,000 IOPS</p> </li> </ul> <p> <code>io1</code> and <code>io2</code> volumes support up to 64,000 IOPS only on <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances">Instances built on the Nitro System</a>. Other instance families support performance up to 32,000 IOPS.</p> <p>This parameter is required for <code>io1</code> and <code>io2</code> volumes. The default for <code>gp3</code> volumes is 3,000 IOPS. This parameter is not supported for <code>gp2</code>, <code>st1</code>, <code>sc1</code>, or <code>standard</code> volumes.</p>'
          schema:
            type: integer
        - name: KmsKeyId
          in: query
          required: false
          description: '<p>The identifier of the Key Management Service (KMS) KMS key to use for Amazon EBS encryption. If this parameter is not specified, your KMS key for Amazon EBS is used. If <code>KmsKeyId</code> is specified, the encrypted state must be <code>true</code>.</p> <p>You can specify the KMS key using any of the following:</p> <ul> <li> <p>Key ID. For example, 1234abcd-12ab-34cd-56ef-1234567890ab.</p> </li> <li> <p>Key alias. For example, alias/ExampleAlias.</p> </li> <li> <p>Key ARN. For example, arn:aws:kms:us-east-1:012345678910:key/1234abcd-12ab-34cd-56ef-1234567890ab.</p> </li> <li> <p>Alias ARN. For example, arn:aws:kms:us-east-1:012345678910:alias/ExampleAlias.</p> </li> </ul> <p>Amazon Web Services authenticates the KMS key asynchronously. Therefore, if you specify an ID, alias, or ARN that is not valid, the action can appear to complete, but eventually fails.</p>'
          schema:
            type: string
        - name: OutpostArn
          in: query
          required: false
          description: The Amazon Resource Name (ARN) of the Outpost.
          schema:
            type: string
        - name: Size
          in: query
          required: false
          description: '<p>The size of the volume, in GiBs. You must specify either a snapshot ID or a volume size. If you specify a snapshot, the default is the snapshot size. You can specify a volume size that is equal to or larger than the snapshot size.</p> <p>The following are the supported volumes sizes for each volume type:</p> <ul> <li> <p> <code>gp2</code> and <code>gp3</code>: 1-16,384</p> </li> <li> <p> <code>io1</code> and <code>io2</code>: 4-16,384</p> </li> <li> <p> <code>st1</code> and <code>sc1</code>: 125-16,384</p> </li> <li> <p> <code>standard</code>: 1-1,024</p> </li> </ul>'
          schema:
            type: integer
        - name: SnapshotId
          in: query
          required: false
          description: The snapshot from which to create the volume. You must specify either a snapshot ID or a volume size.
          schema:
            type: string
        - name: VolumeType
          in: query
          required: false
          description: '<p>The volume type. This parameter can be one of the following values:</p> <ul> <li> <p>General Purpose SSD: <code>gp2</code> | <code>gp3</code> </p> </li> <li> <p>Provisioned IOPS SSD: <code>io1</code> | <code>io2</code> </p> </li> <li> <p>Throughput Optimized HDD: <code>st1</code> </p> </li> <li> <p>Cold HDD: <code>sc1</code> </p> </li> <li> <p>Magnetic: <code>standard</code> </p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html">Amazon EBS volume types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>Default: <code>gp2</code> </p>'
          schema:
            type: string
            enum:
              - standard
              - io1
              - io2
              - gp2
              - sc1
              - st1
              - gp3
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: TagSpecification
          in: query
          required: false
          description: The tags to apply to the volume during creation.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
        - name: MultiAttachEnabled
          in: query
          required: false
          description: 'Indicates whether to enable Amazon EBS Multi-Attach. If you enable Multi-Attach, you can attach the volume to up to 16 <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances">Instances built on the Nitro System</a> in the same Availability Zone. This parameter is supported with <code>io1</code> and <code>io2</code> volumes only. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-volumes-multi.html"> Amazon EBS Multi-Attach</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.'
          schema:
            type: boolean
        - name: Throughput
          in: query
          required: false
          description: '<p>The throughput to provision for a volume, with a maximum of 1,000 MiB/s.</p> <p>This parameter is valid only for <code>gp3</code> volumes.</p> <p>Valid Range: Minimum value of 125. Maximum value of 1000.</p>'
          schema:
            type: integer
        - name: ClientToken
          in: query
          required: false
          description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensure Idempotency</a>.'
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateVolume
      operationId: POST_CreateVolume
      description: '<p>Creates an EBS volume that can be attached to an instance in the same Availability Zone.</p> <p>You can create a new empty volume or restore a volume from an EBS snapshot. Any Amazon Web Services Marketplace product codes from the snapshot are propagated to the volume.</p> <p>You can create encrypted volumes. Encrypted volumes must be attached to instances that support Amazon EBS encryption. Volumes that are created from encrypted snapshots are also automatically encrypted. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>You can tag your volumes during creation. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tag your Amazon EC2 resources</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-creating-volume.html">Create an Amazon EBS volume</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/Volume'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateVolumeRequest'
      parameters: []
  /?Action=CreateVpc&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateVpc
      operationId: GET_CreateVpc
      description: '<p>Creates a VPC with the specified IPv4 CIDR block. The smallest VPC you can create uses a /28 netmask (16 IPv4 addresses), and the largest uses a /16 netmask (65,536 IPv4 addresses). For more information about how large to make your VPC, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html">Your VPC and subnets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p> <p>You can optionally request an IPv6 CIDR block for the VPC. You can request an Amazon-provided IPv6 CIDR block from Amazon''s pool of IPv6 addresses, or an IPv6 CIDR block from an IPv6 address pool that you provisioned through bring your own IP addresses (<a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-byoip.html">BYOIP</a>).</p> <p>By default, each instance you launch in the VPC has the default DHCP options, which include only a default DNS server that we provide (AmazonProvidedDNS). For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_DHCP_Options.html">DHCP options sets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p> <p>You can specify the instance tenancy value for the VPC when you create it. You can''t change this value for the VPC after you create it. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-instance.html">Dedicated Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateVpcResult'
      parameters:
        - name: CidrBlock
          in: query
          required: false
          description: 'The IPv4 network range for the VPC, in CIDR notation. For example, <code>10.0.0.0/16</code>. We modify the specified CIDR block to its canonical form; for example, if you specify <code>100.68.0.18/18</code>, we modify it to <code>100.68.0.0/18</code>.'
          schema:
            type: string
        - name: AmazonProvidedIpv6CidrBlock
          in: query
          required: false
          description: 'Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IP addresses, or the size of the CIDR block.'
          schema:
            type: boolean
        - name: Ipv6Pool
          in: query
          required: false
          description: The ID of an IPv6 address pool from which to allocate the IPv6 CIDR block.
          schema:
            type: string
        - name: Ipv6CidrBlock
          in: query
          required: false
          description: '<p>The IPv6 CIDR block from the IPv6 address pool. You must also specify <code>Ipv6Pool</code> in the request.</p> <p>To let Amazon choose the IPv6 CIDR block for you, omit this parameter.</p>'
          schema:
            type: string
        - name: Ipv4IpamPoolId
          in: query
          required: false
          description: 'The ID of an IPv4 IPAM pool you want to use for allocating this VPC''s CIDR. For more information, see <a href="/vpc/latest/ipam/what-is-it-ipam.html">What is IPAM?</a> in the <i>Amazon VPC IPAM User Guide</i>. '
          schema:
            type: string
        - name: Ipv4NetmaskLength
          in: query
          required: false
          description: 'The netmask length of the IPv4 CIDR you want to allocate to this VPC from an Amazon VPC IP Address Manager (IPAM) pool. For more information about IPAM, see <a href="/vpc/latest/ipam/what-is-it-ipam.html">What is IPAM?</a> in the <i>Amazon VPC IPAM User Guide</i>.'
          schema:
            type: integer
        - name: Ipv6IpamPoolId
          in: query
          required: false
          description: 'The ID of an IPv6 IPAM pool which will be used to allocate this VPC an IPv6 CIDR. IPAM is a VPC feature that you can use to automate your IP address management workflows including assigning, tracking, troubleshooting, and auditing IP addresses across Amazon Web Services Regions and accounts throughout your Amazon Web Services Organization. For more information, see <a href="/vpc/latest/ipam/what-is-it-ipam.html">What is IPAM?</a> in the <i>Amazon VPC IPAM User Guide</i>.'
          schema:
            type: string
        - name: Ipv6NetmaskLength
          in: query
          required: false
          description: 'The netmask length of the IPv6 CIDR you want to allocate to this VPC from an Amazon VPC IP Address Manager (IPAM) pool. For more information about IPAM, see <a href="/vpc/latest/ipam/what-is-it-ipam.html">What is IPAM?</a> in the <i>Amazon VPC IPAM User Guide</i>.'
          schema:
            type: integer
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: InstanceTenancy
          in: query
          required: false
          description: '<p>The tenancy options for instances launched into the VPC. For <code>default</code>, instances are launched with shared tenancy by default. You can launch instances with any tenancy into a shared tenancy VPC. For <code>dedicated</code>, instances are launched as dedicated tenancy instances by default. You can only launch instances with a tenancy of <code>dedicated</code> or <code>host</code> into a dedicated tenancy VPC. </p> <p> <b>Important:</b> The <code>host</code> value cannot be used with this parameter. Use the <code>default</code> or <code>dedicated</code> values only.</p> <p>Default: <code>default</code> </p>'
          schema:
            type: string
            enum:
              - default
              - dedicated
              - host
        - name: Ipv6CidrBlockNetworkBorderGroup
          in: query
          required: false
          description: <p>The name of the location from which we advertise the IPV6 CIDR block. Use this parameter to limit the address to this location.</p> <p> You must set <code>AmazonProvidedIpv6CidrBlock</code> to <code>true</code> to use this parameter.</p>
          schema:
            type: string
        - name: TagSpecification
          in: query
          required: false
          description: The tags to assign to the VPC.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateVpc
      operationId: POST_CreateVpc
      description: '<p>Creates a VPC with the specified IPv4 CIDR block. The smallest VPC you can create uses a /28 netmask (16 IPv4 addresses), and the largest uses a /16 netmask (65,536 IPv4 addresses). For more information about how large to make your VPC, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html">Your VPC and subnets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p> <p>You can optionally request an IPv6 CIDR block for the VPC. You can request an Amazon-provided IPv6 CIDR block from Amazon''s pool of IPv6 addresses, or an IPv6 CIDR block from an IPv6 address pool that you provisioned through bring your own IP addresses (<a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-byoip.html">BYOIP</a>).</p> <p>By default, each instance you launch in the VPC has the default DHCP options, which include only a default DNS server that we provide (AmazonProvidedDNS). For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_DHCP_Options.html">DHCP options sets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p> <p>You can specify the instance tenancy value for the VPC when you create it. You can''t change this value for the VPC after you create it. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-instance.html">Dedicated Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateVpcResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateVpcRequest'
      parameters: []
  /?Action=CreateVpcEndpoint&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateVpcEndpoint
      operationId: GET_CreateVpcEndpoint
      description: 'Creates a VPC endpoint for a specified service. An endpoint enables you to create a private connection between your VPC and the service. The service may be provided by Amazon Web Services, an Amazon Web Services Marketplace Partner, or another Amazon Web Services account. For more information, see the <a href="https://docs.aws.amazon.com/vpc/latest/privatelink/">Amazon Web Services PrivateLink Guide</a>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateVpcEndpointResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: VpcEndpointType
          in: query
          required: false
          description: '<p>The type of endpoint.</p> <p>Default: Gateway</p>'
          schema:
            type: string
            enum:
              - Interface
              - Gateway
              - GatewayLoadBalancer
        - name: VpcId
          in: query
          required: true
          description: The ID of the VPC in which the endpoint will be used.
          schema:
            type: string
        - name: ServiceName
          in: query
          required: true
          description: 'The service name. To get a list of available services, use the <a>DescribeVpcEndpointServices</a> request, or get the name from the service provider.'
          schema:
            type: string
        - name: PolicyDocument
          in: query
          required: false
          description: '(Interface and gateway endpoints) A policy to attach to the endpoint that controls access to the service. The policy must be in valid JSON format. If this parameter is not specified, we attach a default policy that allows full access to the service.'
          schema:
            type: string
        - name: RouteTableId
          in: query
          required: false
          description: (Gateway endpoint) One or more route table IDs.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/RouteTableId'
                - xml:
                    name: item
        - name: SubnetId
          in: query
          required: false
          description: '(Interface and Gateway Load Balancer endpoints) The ID of one or more subnets in which to create an endpoint network interface. For a Gateway Load Balancer endpoint, you can specify one subnet only.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/SubnetId'
                - xml:
                    name: item
        - name: SecurityGroupId
          in: query
          required: false
          description: (Interface endpoint) The ID of one or more security groups to associate with the endpoint network interface.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/SecurityGroupId'
                - xml:
                    name: item
        - name: IpAddressType
          in: query
          required: false
          description: The IP address type for the endpoint.
          schema:
            type: string
            enum:
              - ipv4
              - dualstack
              - ipv6
        - name: DnsOptions
          in: query
          required: false
          description: The DNS options for the endpoint.
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/DnsRecordIpType'
                  - description: The DNS records created for the endpoint.
            description: Describes the DNS options for an endpoint.
        - name: ClientToken
          in: query
          required: false
          description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to ensure idempotency</a>.'
          schema:
            type: string
        - name: PrivateDnsEnabled
          in: query
          required: false
          description: '<p>(Interface endpoint) Indicates whether to associate a private hosted zone with the specified VPC. The private hosted zone contains a record set for the default public DNS name for the service for the Region (for example, <code>kinesis.us-east-1.amazonaws.com</code>), which resolves to the private IP addresses of the endpoint network interfaces in the VPC. This enables you to make requests to the default public DNS name for the service instead of the public DNS names that are automatically generated by the VPC endpoint service.</p> <p>To use a private hosted zone, you must set the following VPC attributes to <code>true</code>: <code>enableDnsHostnames</code> and <code>enableDnsSupport</code>. Use <a>ModifyVpcAttribute</a> to set the VPC attributes.</p> <p>Default: <code>true</code> </p>'
          schema:
            type: boolean
        - name: TagSpecification
          in: query
          required: false
          description: The tags to associate with the endpoint.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateVpcEndpoint
      operationId: POST_CreateVpcEndpoint
      description: 'Creates a VPC endpoint for a specified service. An endpoint enables you to create a private connection between your VPC and the service. The service may be provided by Amazon Web Services, an Amazon Web Services Marketplace Partner, or another Amazon Web Services account. For more information, see the <a href="https://docs.aws.amazon.com/vpc/latest/privatelink/">Amazon Web Services PrivateLink Guide</a>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateVpcEndpointResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateVpcEndpointRequest'
      parameters: []
  /?Action=CreateVpcEndpointConnectionNotification&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateVpcEndpointConnectionNotification
      operationId: GET_CreateVpcEndpointConnectionNotification
      description: '<p>Creates a connection notification for a specified VPC endpoint or VPC endpoint service. A connection notification notifies you of specific endpoint events. You must create an SNS topic to receive notifications. For more information, see <a href="https://docs.aws.amazon.com/sns/latest/dg/CreateTopic.html">Create a Topic</a> in the <i>Amazon Simple Notification Service Developer Guide</i>.</p> <p>You can create a connection notification for interface endpoints only.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateVpcEndpointConnectionNotificationResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: ServiceId
          in: query
          required: false
          description: The ID of the endpoint service.
          schema:
            type: string
        - name: VpcEndpointId
          in: query
          required: false
          description: The ID of the endpoint.
          schema:
            type: string
        - name: ConnectionNotificationArn
          in: query
          required: true
          description: The ARN of the SNS topic for the notifications.
          schema:
            type: string
        - name: ConnectionEvents
          in: query
          required: true
          description: 'One or more endpoint events for which to receive notifications. Valid values are <code>Accept</code>, <code>Connect</code>, <code>Delete</code>, and <code>Reject</code>.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: item
        - name: ClientToken
          in: query
          required: false
          description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to ensure idempotency</a>.'
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateVpcEndpointConnectionNotification
      operationId: POST_CreateVpcEndpointConnectionNotification
      description: '<p>Creates a connection notification for a specified VPC endpoint or VPC endpoint service. A connection notification notifies you of specific endpoint events. You must create an SNS topic to receive notifications. For more information, see <a href="https://docs.aws.amazon.com/sns/latest/dg/CreateTopic.html">Create a Topic</a> in the <i>Amazon Simple Notification Service Developer Guide</i>.</p> <p>You can create a connection notification for interface endpoints only.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateVpcEndpointConnectionNotificationResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateVpcEndpointConnectionNotificationRequest'
      parameters: []
  /?Action=CreateVpcEndpointServiceConfiguration&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateVpcEndpointServiceConfiguration
      operationId: GET_CreateVpcEndpointServiceConfiguration
      description: '<p>Creates a VPC endpoint service to which service consumers (Amazon Web Services accounts, IAM users, and IAM roles) can connect.</p> <p>Before you create an endpoint service, you must create one of the following for your service:</p> <ul> <li> <p>A <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/network/">Network Load Balancer</a>. Service consumers connect to your service using an interface endpoint.</p> </li> <li> <p>A <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/gateway/">Gateway Load Balancer</a>. Service consumers connect to your service using a Gateway Load Balancer endpoint.</p> </li> </ul> <p>If you set the private DNS name, you must prove that you own the private DNS domain name.</p> <p>For more information, see the <a href="https://docs.aws.amazon.com/vpc/latest/privatelink/">Amazon Web Services PrivateLink Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateVpcEndpointServiceConfigurationResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: AcceptanceRequired
          in: query
          required: false
          description: Indicates whether requests from service consumers to create an endpoint to your service must be accepted manually.
          schema:
            type: boolean
        - name: PrivateDnsName
          in: query
          required: false
          description: (Interface endpoint configuration) The private DNS name to assign to the VPC endpoint service.
          schema:
            type: string
        - name: NetworkLoadBalancerArn
          in: query
          required: false
          description: The Amazon Resource Names (ARNs) of one or more Network Load Balancers for your service.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: item
        - name: GatewayLoadBalancerArn
          in: query
          required: false
          description: The Amazon Resource Names (ARNs) of one or more Gateway Load Balancers.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: item
        - name: SupportedIpAddressType
          in: query
          required: false
          description: The supported IP address types. The possible values are <code>ipv4</code> and <code>ipv6</code>.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: item
        - name: ClientToken
          in: query
          required: false
          description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to ensure idempotency</a>.'
          schema:
            type: string
        - name: TagSpecification
          in: query
          required: false
          description: The tags to associate with the service.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateVpcEndpointServiceConfiguration
      operationId: POST_CreateVpcEndpointServiceConfiguration
      description: '<p>Creates a VPC endpoint service to which service consumers (Amazon Web Services accounts, IAM users, and IAM roles) can connect.</p> <p>Before you create an endpoint service, you must create one of the following for your service:</p> <ul> <li> <p>A <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/network/">Network Load Balancer</a>. Service consumers connect to your service using an interface endpoint.</p> </li> <li> <p>A <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/gateway/">Gateway Load Balancer</a>. Service consumers connect to your service using a Gateway Load Balancer endpoint.</p> </li> </ul> <p>If you set the private DNS name, you must prove that you own the private DNS domain name.</p> <p>For more information, see the <a href="https://docs.aws.amazon.com/vpc/latest/privatelink/">Amazon Web Services PrivateLink Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateVpcEndpointServiceConfigurationResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateVpcEndpointServiceConfigurationRequest'
      parameters: []
  /?Action=CreateVpcPeeringConnection&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateVpcPeeringConnection
      operationId: GET_CreateVpcPeeringConnection
      description: '<p>Requests a VPC peering connection between two VPCs: a requester VPC that you own and an accepter VPC with which to create the connection. The accepter VPC can belong to another Amazon Web Services account and can be in a different Region to the requester VPC. The requester VPC and accepter VPC cannot have overlapping CIDR blocks.</p> <note> <p>Limitations and rules apply to a VPC peering connection. For more information, see the <a href="https://docs.aws.amazon.com/vpc/latest/peering/vpc-peering-basics.html#vpc-peering-limitations">limitations</a> section in the <i>VPC Peering Guide</i>.</p> </note> <p>The owner of the accepter VPC must accept the peering request to activate the peering connection. The VPC peering connection request expires after 7 days, after which it cannot be accepted or rejected.</p> <p>If you create a VPC peering connection request between VPCs with overlapping CIDR blocks, the VPC peering connection has a status of <code>failed</code>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateVpcPeeringConnectionResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: PeerOwnerId
          in: query
          required: false
          description: '<p>The Amazon Web Services account ID of the owner of the accepter VPC.</p> <p>Default: Your Amazon Web Services account ID</p>'
          schema:
            type: string
        - name: PeerVpcId
          in: query
          required: false
          description: The ID of the VPC with which you are creating the VPC peering connection. You must specify this parameter in the request.
          schema:
            type: string
        - name: VpcId
          in: query
          required: false
          description: The ID of the requester VPC. You must specify this parameter in the request.
          schema:
            type: string
        - name: PeerRegion
          in: query
          required: false
          description: '<p>The Region code for the accepter VPC, if the accepter VPC is located in a Region other than the Region in which you make the request.</p> <p>Default: The Region in which you make the request.</p>'
          schema:
            type: string
        - name: TagSpecification
          in: query
          required: false
          description: The tags to assign to the peering connection.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateVpcPeeringConnection
      operationId: POST_CreateVpcPeeringConnection
      description: '<p>Requests a VPC peering connection between two VPCs: a requester VPC that you own and an accepter VPC with which to create the connection. The accepter VPC can belong to another Amazon Web Services account and can be in a different Region to the requester VPC. The requester VPC and accepter VPC cannot have overlapping CIDR blocks.</p> <note> <p>Limitations and rules apply to a VPC peering connection. For more information, see the <a href="https://docs.aws.amazon.com/vpc/latest/peering/vpc-peering-basics.html#vpc-peering-limitations">limitations</a> section in the <i>VPC Peering Guide</i>.</p> </note> <p>The owner of the accepter VPC must accept the peering request to activate the peering connection. The VPC peering connection request expires after 7 days, after which it cannot be accepted or rejected.</p> <p>If you create a VPC peering connection request between VPCs with overlapping CIDR blocks, the VPC peering connection has a status of <code>failed</code>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateVpcPeeringConnectionResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateVpcPeeringConnectionRequest'
      parameters: []
  /?Action=CreateVpnConnection&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateVpnConnection
      operationId: GET_CreateVpnConnection
      description: '<p>Creates a VPN connection between an existing virtual private gateway or transit gateway and a customer gateway. The supported connection type is <code>ipsec.1</code>.</p> <p>The response includes information that you need to give to your network administrator to configure your customer gateway.</p> <important> <p>We strongly recommend that you use HTTPS when calling this operation because the response contains sensitive cryptographic information for configuring your customer gateway device.</p> </important> <p>If you decide to shut down your VPN connection for any reason and later create a new VPN connection, you must reconfigure your customer gateway with the new information returned from this call.</p> <p>This is an idempotent operation. If you perform the operation more than once, Amazon EC2 doesn''t return an error.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/vpn/latest/s2svpn/VPC_VPN.html">Amazon Web Services Site-to-Site VPN</a> in the <i>Amazon Web Services Site-to-Site VPN User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateVpnConnectionResult'
      parameters:
        - name: CustomerGatewayId
          in: query
          required: true
          description: The ID of the customer gateway.
          schema:
            type: string
        - name: Type
          in: query
          required: true
          description: The type of VPN connection (<code>ipsec.1</code>).
          schema:
            type: string
        - name: VpnGatewayId
          in: query
          required: false
          description: 'The ID of the virtual private gateway. If you specify a virtual private gateway, you cannot specify a transit gateway.'
          schema:
            type: string
        - name: TransitGatewayId
          in: query
          required: false
          description: 'The ID of the transit gateway. If you specify a transit gateway, you cannot specify a virtual private gateway.'
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: Options
          in: query
          required: false
          description: The options for the VPN connection.
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/Boolean'
                  - description: '<p>Indicate whether to enable acceleration for the VPN connection.</p> <p>Default: <code>false</code> </p>'
              staticRoutesOnly:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: '<p>The IPv6 CIDR on the Amazon Web Services side of the VPN connection.</p> <p>Default: <code>::/0</code> </p>'
            description: Describes VPN connection options.
        - name: TagSpecification
          in: query
          required: false
          description: The tags to apply to the VPN connection.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateVpnConnection
      operationId: POST_CreateVpnConnection
      description: '<p>Creates a VPN connection between an existing virtual private gateway or transit gateway and a customer gateway. The supported connection type is <code>ipsec.1</code>.</p> <p>The response includes information that you need to give to your network administrator to configure your customer gateway.</p> <important> <p>We strongly recommend that you use HTTPS when calling this operation because the response contains sensitive cryptographic information for configuring your customer gateway device.</p> </important> <p>If you decide to shut down your VPN connection for any reason and later create a new VPN connection, you must reconfigure your customer gateway with the new information returned from this call.</p> <p>This is an idempotent operation. If you perform the operation more than once, Amazon EC2 doesn''t return an error.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/vpn/latest/s2svpn/VPC_VPN.html">Amazon Web Services Site-to-Site VPN</a> in the <i>Amazon Web Services Site-to-Site VPN User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateVpnConnectionResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateVpnConnectionRequest'
      parameters: []
  /?Action=CreateVpnConnectionRoute&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateVpnConnectionRoute
      operationId: GET_CreateVpnConnectionRoute
      description: '<p>Creates a static route associated with a VPN connection between an existing virtual private gateway and a VPN customer gateway. The static route allows traffic to be routed from the virtual private gateway to the VPN customer gateway.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/vpn/latest/s2svpn/VPC_VPN.html">Amazon Web Services Site-to-Site VPN</a> in the <i>Amazon Web Services Site-to-Site VPN User Guide</i>.</p>'
      responses:
        '200':
          description: Success
      parameters:
        - name: DestinationCidrBlock
          in: query
          required: true
          description: The CIDR block associated with the local subnet of the customer network.
          schema:
            type: string
        - name: VpnConnectionId
          in: query
          required: true
          description: The ID of the VPN connection.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateVpnConnectionRoute
      operationId: POST_CreateVpnConnectionRoute
      description: '<p>Creates a static route associated with a VPN connection between an existing virtual private gateway and a VPN customer gateway. The static route allows traffic to be routed from the virtual private gateway to the VPN customer gateway.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/vpn/latest/s2svpn/VPC_VPN.html">Amazon Web Services Site-to-Site VPN</a> in the <i>Amazon Web Services Site-to-Site VPN User Guide</i>.</p>'
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateVpnConnectionRouteRequest'
      parameters: []
  /?Action=CreateVpnGateway&Version=2016-11-15:
    get:
      x-aws-operation-name: CreateVpnGateway
      operationId: GET_CreateVpnGateway
      description: '<p>Creates a virtual private gateway. A virtual private gateway is the endpoint on the VPC side of your VPN connection. You can create a virtual private gateway before creating the VPC itself.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/vpn/latest/s2svpn/VPC_VPN.html">Amazon Web Services Site-to-Site VPN</a> in the <i>Amazon Web Services Site-to-Site VPN User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateVpnGatewayResult'
      parameters:
        - name: AvailabilityZone
          in: query
          required: false
          description: The Availability Zone for the virtual private gateway.
          schema:
            type: string
        - name: Type
          in: query
          required: true
          description: The type of VPN connection this virtual private gateway supports.
          schema:
            type: string
            enum:
              - ipsec.1
        - name: TagSpecification
          in: query
          required: false
          description: The tags to apply to the virtual private gateway.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
        - name: AmazonSideAsn
          in: query
          required: false
          description: '<p>A private Autonomous System Number (ASN) for the Amazon side of a BGP session. If you''re using a 16-bit ASN, it must be in the 64512 to 65534 range. If you''re using a 32-bit ASN, it must be in the 4200000000 to 4294967294 range.</p> <p>Default: 64512</p>'
          schema:
            type: integer
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateVpnGateway
      operationId: POST_CreateVpnGateway
      description: '<p>Creates a virtual private gateway. A virtual private gateway is the endpoint on the VPC side of your VPN connection. You can create a virtual private gateway before creating the VPC itself.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/vpn/latest/s2svpn/VPC_VPN.html">Amazon Web Services Site-to-Site VPN</a> in the <i>Amazon Web Services Site-to-Site VPN User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateVpnGatewayResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateVpnGatewayRequest'
      parameters: []
  /?Action=DeleteCarrierGateway&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteCarrierGateway
      operationId: GET_DeleteCarrierGateway
      description: '<p>Deletes a carrier gateway.</p> <important> <p>If you do not delete the route that contains the carrier gateway as the Target, the route is a blackhole route. For information about how to delete a route, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteRoute.html">DeleteRoute</a>.</p> </important>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteCarrierGatewayResult'
      parameters:
        - name: CarrierGatewayId
          in: query
          required: true
          description: The ID of the carrier gateway.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteCarrierGateway
      operationId: POST_DeleteCarrierGateway
      description: '<p>Deletes a carrier gateway.</p> <important> <p>If you do not delete the route that contains the carrier gateway as the Target, the route is a blackhole route. For information about how to delete a route, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteRoute.html">DeleteRoute</a>.</p> </important>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteCarrierGatewayResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteCarrierGatewayRequest'
      parameters: []
  /?Action=DeleteClientVpnEndpoint&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteClientVpnEndpoint
      operationId: GET_DeleteClientVpnEndpoint
      description: Deletes the specified Client VPN endpoint. You must disassociate all target networks before you can delete a Client VPN endpoint.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteClientVpnEndpointResult'
      parameters:
        - name: ClientVpnEndpointId
          in: query
          required: true
          description: The ID of the Client VPN to be deleted.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteClientVpnEndpoint
      operationId: POST_DeleteClientVpnEndpoint
      description: Deletes the specified Client VPN endpoint. You must disassociate all target networks before you can delete a Client VPN endpoint.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteClientVpnEndpointResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteClientVpnEndpointRequest'
      parameters: []
  /?Action=DeleteClientVpnRoute&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteClientVpnRoute
      operationId: GET_DeleteClientVpnRoute
      description: 'Deletes a route from a Client VPN endpoint. You can only delete routes that you manually added using the <b>CreateClientVpnRoute</b> action. You cannot delete routes that were automatically added when associating a subnet. To remove routes that have been automatically added, disassociate the target subnet from the Client VPN endpoint.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteClientVpnRouteResult'
      parameters:
        - name: ClientVpnEndpointId
          in: query
          required: true
          description: The ID of the Client VPN endpoint from which the route is to be deleted.
          schema:
            type: string
        - name: TargetVpcSubnetId
          in: query
          required: false
          description: The ID of the target subnet used by the route.
          schema:
            type: string
        - name: DestinationCidrBlock
          in: query
          required: true
          description: 'The IPv4 address range, in CIDR notation, of the route to be deleted.'
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteClientVpnRoute
      operationId: POST_DeleteClientVpnRoute
      description: 'Deletes a route from a Client VPN endpoint. You can only delete routes that you manually added using the <b>CreateClientVpnRoute</b> action. You cannot delete routes that were automatically added when associating a subnet. To remove routes that have been automatically added, disassociate the target subnet from the Client VPN endpoint.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteClientVpnRouteResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteClientVpnRouteRequest'
      parameters: []
  /?Action=DeleteCustomerGateway&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteCustomerGateway
      operationId: GET_DeleteCustomerGateway
      description: Deletes the specified customer gateway. You must delete the VPN connection before you can delete the customer gateway.
      responses:
        '200':
          description: Success
      parameters:
        - name: CustomerGatewayId
          in: query
          required: true
          description: The ID of the customer gateway.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteCustomerGateway
      operationId: POST_DeleteCustomerGateway
      description: Deletes the specified customer gateway. You must delete the VPN connection before you can delete the customer gateway.
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteCustomerGatewayRequest'
      parameters: []
  /?Action=DeleteDhcpOptions&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteDhcpOptions
      operationId: GET_DeleteDhcpOptions
      description: Deletes the specified set of DHCP options. You must disassociate the set of DHCP options before you can delete it. You can disassociate the set of DHCP options by associating either a new set of options or the default set of options with the VPC.
      responses:
        '200':
          description: Success
      parameters:
        - name: DhcpOptionsId
          in: query
          required: true
          description: The ID of the DHCP options set.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteDhcpOptions
      operationId: POST_DeleteDhcpOptions
      description: Deletes the specified set of DHCP options. You must disassociate the set of DHCP options before you can delete it. You can disassociate the set of DHCP options by associating either a new set of options or the default set of options with the VPC.
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteDhcpOptionsRequest'
      parameters: []
  /?Action=DeleteEgressOnlyInternetGateway&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteEgressOnlyInternetGateway
      operationId: GET_DeleteEgressOnlyInternetGateway
      description: Deletes an egress-only internet gateway.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteEgressOnlyInternetGatewayResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: EgressOnlyInternetGatewayId
          in: query
          required: true
          description: The ID of the egress-only internet gateway.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteEgressOnlyInternetGateway
      operationId: POST_DeleteEgressOnlyInternetGateway
      description: Deletes an egress-only internet gateway.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteEgressOnlyInternetGatewayResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteEgressOnlyInternetGatewayRequest'
      parameters: []
  /?Action=DeleteFleets&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteFleets
      operationId: GET_DeleteFleets
      description: '<p>Deletes the specified EC2 Fleet.</p> <p>After you delete an EC2 Fleet, it launches no new instances.</p> <p>You must specify whether a deleted EC2 Fleet should also terminate its instances. If you choose to terminate the instances, the EC2 Fleet enters the <code>deleted_terminating</code> state. Otherwise, the EC2 Fleet enters the <code>deleted_running</code> state, and the instances continue to run until they are interrupted or you terminate them manually.</p> <p>For <code>instant</code> fleets, EC2 Fleet must terminate the instances when the fleet is deleted. A deleted <code>instant</code> fleet with running instances is not supported.</p> <p class="title"> <b>Restrictions</b> </p> <ul> <li> <p>You can delete up to 25 <code>instant</code> fleets in a single request. If you exceed this number, no <code>instant</code> fleets are deleted and an error is returned. There is no restriction on the number of fleets of type <code>maintain</code> or <code>request</code> that can be deleted in a single request.</p> </li> <li> <p>Up to 1000 instances can be terminated in a single request to delete <code>instant</code> fleets.</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/manage-ec2-fleet.html#delete-fleet">Delete an EC2 Fleet</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteFleetsResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: FleetId
          in: query
          required: true
          description: The IDs of the EC2 Fleets.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/FleetId'
        - name: TerminateInstances
          in: query
          required: true
          description: '<p>Indicates whether to terminate the instances when the EC2 Fleet is deleted. The default is to terminate the instances.</p> <p>To let the instances continue to run after the EC2 Fleet is deleted, specify <code>NoTerminateInstances</code>. Supported only for fleets of type <code>maintain</code> and <code>request</code>.</p> <p>For <code>instant</code> fleets, you cannot specify <code>NoTerminateInstances</code>. A deleted <code>instant</code> fleet with running instances is not supported.</p>'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteFleets
      operationId: POST_DeleteFleets
      description: '<p>Deletes the specified EC2 Fleet.</p> <p>After you delete an EC2 Fleet, it launches no new instances.</p> <p>You must specify whether a deleted EC2 Fleet should also terminate its instances. If you choose to terminate the instances, the EC2 Fleet enters the <code>deleted_terminating</code> state. Otherwise, the EC2 Fleet enters the <code>deleted_running</code> state, and the instances continue to run until they are interrupted or you terminate them manually.</p> <p>For <code>instant</code> fleets, EC2 Fleet must terminate the instances when the fleet is deleted. A deleted <code>instant</code> fleet with running instances is not supported.</p> <p class="title"> <b>Restrictions</b> </p> <ul> <li> <p>You can delete up to 25 <code>instant</code> fleets in a single request. If you exceed this number, no <code>instant</code> fleets are deleted and an error is returned. There is no restriction on the number of fleets of type <code>maintain</code> or <code>request</code> that can be deleted in a single request.</p> </li> <li> <p>Up to 1000 instances can be terminated in a single request to delete <code>instant</code> fleets.</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/manage-ec2-fleet.html#delete-fleet">Delete an EC2 Fleet</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteFleetsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteFleetsRequest'
      parameters: []
  /?Action=DeleteFlowLogs&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteFlowLogs
      operationId: GET_DeleteFlowLogs
      description: Deletes one or more flow logs.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteFlowLogsResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: FlowLogId
          in: query
          required: true
          description: '<p>One or more flow log IDs.</p> <p>Constraint: Maximum of 1000 flow log IDs.</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/VpcFlowLogId'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteFlowLogs
      operationId: POST_DeleteFlowLogs
      description: Deletes one or more flow logs.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteFlowLogsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteFlowLogsRequest'
      parameters: []
  /?Action=DeleteFpgaImage&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteFpgaImage
      operationId: GET_DeleteFpgaImage
      description: Deletes the specified Amazon FPGA Image (AFI).
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteFpgaImageResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: FpgaImageId
          in: query
          required: true
          description: The ID of the AFI.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteFpgaImage
      operationId: POST_DeleteFpgaImage
      description: Deletes the specified Amazon FPGA Image (AFI).
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteFpgaImageResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteFpgaImageRequest'
      parameters: []
  /?Action=DeleteInstanceEventWindow&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteInstanceEventWindow
      operationId: GET_DeleteInstanceEventWindow
      description: '<p>Deletes the specified event window.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/event-windows.html">Define event windows for scheduled events</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteInstanceEventWindowResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: ForceDelete
          in: query
          required: false
          description: Specify <code>true</code> to force delete the event window. Use the force delete parameter if the event window is currently associated with targets.
          schema:
            type: boolean
        - name: InstanceEventWindowId
          in: query
          required: true
          description: The ID of the event window.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteInstanceEventWindow
      operationId: POST_DeleteInstanceEventWindow
      description: '<p>Deletes the specified event window.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/event-windows.html">Define event windows for scheduled events</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteInstanceEventWindowResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteInstanceEventWindowRequest'
      parameters: []
  /?Action=DeleteInternetGateway&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteInternetGateway
      operationId: GET_DeleteInternetGateway
      description: Deletes the specified internet gateway. You must detach the internet gateway from the VPC before you can delete it.
      responses:
        '200':
          description: Success
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: InternetGatewayId
          in: query
          required: true
          description: The ID of the internet gateway.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteInternetGateway
      operationId: POST_DeleteInternetGateway
      description: Deletes the specified internet gateway. You must detach the internet gateway from the VPC before you can delete it.
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteInternetGatewayRequest'
      parameters: []
  /?Action=DeleteIpam&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteIpam
      operationId: GET_DeleteIpam
      description: '<p>Delete an IPAM. Deleting an IPAM removes all monitored data associated with the IPAM including the historical data for CIDRs.</p> <p>For more information, see <a href="/vpc/latest/ipam/delete-ipam.html">Delete an IPAM</a> in the <i>Amazon VPC IPAM User Guide</i>. </p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteIpamResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: IpamId
          in: query
          required: true
          description: The ID of the IPAM to delete.
          schema:
            type: string
        - name: Cascade
          in: query
          required: false
          description: '<p>Enables you to quickly delete an IPAM, private scopes, pools in private scopes, and any allocations in the pools in private scopes. You cannot delete the IPAM with this option if there is a pool in your public scope. If you use this option, IPAM does the following:</p> <ul> <li> <p>Deallocates any CIDRs allocated to VPC resources (such as VPCs) in pools in private scopes.</p> <note> <p>No VPC resources are deleted as a result of enabling this option. The CIDR associated with the resource will no longer be allocated from an IPAM pool, but the CIDR itself will remain unchanged.</p> </note> </li> <li> <p>Deprovisions all IPv4 CIDRs provisioned to IPAM pools in private scopes.</p> </li> <li> <p>Deletes all IPAM pools in private scopes.</p> </li> <li> <p>Deletes all non-default private scopes in the IPAM.</p> </li> <li> <p>Deletes the default public and private scopes and the IPAM.</p> </li> </ul>'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteIpam
      operationId: POST_DeleteIpam
      description: '<p>Delete an IPAM. Deleting an IPAM removes all monitored data associated with the IPAM including the historical data for CIDRs.</p> <p>For more information, see <a href="/vpc/latest/ipam/delete-ipam.html">Delete an IPAM</a> in the <i>Amazon VPC IPAM User Guide</i>. </p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteIpamResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteIpamRequest'
      parameters: []
  /?Action=DeleteIpamPool&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteIpamPool
      operationId: GET_DeleteIpamPool
      description: '<p>Delete an IPAM pool.</p> <note> <p>You cannot delete an IPAM pool if there are allocations in it or CIDRs provisioned to it. To release allocations, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReleaseIpamPoolAllocation.html">ReleaseIpamPoolAllocation</a>. To deprovision pool CIDRs, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeprovisionIpamPoolCidr.html">DeprovisionIpamPoolCidr</a>.</p> </note> <p>For more information, see <a href="/vpc/latest/ipam/delete-pool-ipam.html">Delete a pool</a> in the <i>Amazon VPC IPAM User Guide</i>. </p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteIpamPoolResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: IpamPoolId
          in: query
          required: true
          description: The ID of the pool to delete.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteIpamPool
      operationId: POST_DeleteIpamPool
      description: '<p>Delete an IPAM pool.</p> <note> <p>You cannot delete an IPAM pool if there are allocations in it or CIDRs provisioned to it. To release allocations, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReleaseIpamPoolAllocation.html">ReleaseIpamPoolAllocation</a>. To deprovision pool CIDRs, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeprovisionIpamPoolCidr.html">DeprovisionIpamPoolCidr</a>.</p> </note> <p>For more information, see <a href="/vpc/latest/ipam/delete-pool-ipam.html">Delete a pool</a> in the <i>Amazon VPC IPAM User Guide</i>. </p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteIpamPoolResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteIpamPoolRequest'
      parameters: []
  /?Action=DeleteIpamScope&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteIpamScope
      operationId: GET_DeleteIpamScope
      description: '<p>Delete the scope for an IPAM. You cannot delete the default scopes.</p> <p>For more information, see <a href="/vpc/latest/ipam/delete-scope-ipam.html">Delete a scope</a> in the <i>Amazon VPC IPAM User Guide</i>. </p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteIpamScopeResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: IpamScopeId
          in: query
          required: true
          description: The ID of the scope to delete.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteIpamScope
      operationId: POST_DeleteIpamScope
      description: '<p>Delete the scope for an IPAM. You cannot delete the default scopes.</p> <p>For more information, see <a href="/vpc/latest/ipam/delete-scope-ipam.html">Delete a scope</a> in the <i>Amazon VPC IPAM User Guide</i>. </p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteIpamScopeResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteIpamScopeRequest'
      parameters: []
  /?Action=DeleteKeyPair&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteKeyPair
      operationId: GET_DeleteKeyPair
      description: 'Deletes the specified key pair, by removing the public key from Amazon EC2.'
      responses:
        '200':
          description: Success
      parameters:
        - name: KeyName
          in: query
          required: false
          description: The name of the key pair.
          schema:
            type: string
        - name: KeyPairId
          in: query
          required: false
          description: The ID of the key pair.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteKeyPair
      operationId: POST_DeleteKeyPair
      description: 'Deletes the specified key pair, by removing the public key from Amazon EC2.'
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteKeyPairRequest'
      parameters: []
  /?Action=DeleteLaunchTemplate&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteLaunchTemplate
      operationId: GET_DeleteLaunchTemplate
      description: Deletes a launch template. Deleting a launch template deletes all of its versions.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteLaunchTemplateResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: LaunchTemplateId
          in: query
          required: false
          description: The ID of the launch template. You must specify either the launch template ID or launch template name in the request.
          schema:
            type: string
        - name: LaunchTemplateName
          in: query
          required: false
          description: The name of the launch template. You must specify either the launch template ID or launch template name in the request.
          schema:
            type: string
            pattern: '[a-zA-Z0-9\(\)\.\-/_]+'
            minLength: 3
            maxLength: 128
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteLaunchTemplate
      operationId: POST_DeleteLaunchTemplate
      description: Deletes a launch template. Deleting a launch template deletes all of its versions.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteLaunchTemplateResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteLaunchTemplateRequest'
      parameters: []
  /?Action=DeleteLaunchTemplateVersions&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteLaunchTemplateVersions
      operationId: GET_DeleteLaunchTemplateVersions
      description: 'Deletes one or more versions of a launch template. You cannot delete the default version of a launch template; you must first assign a different version as the default. If the default version is the only version for the launch template, you must delete the entire launch template using <a>DeleteLaunchTemplate</a>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteLaunchTemplateVersionsResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: LaunchTemplateId
          in: query
          required: false
          description: The ID of the launch template. You must specify either the launch template ID or launch template name in the request.
          schema:
            type: string
        - name: LaunchTemplateName
          in: query
          required: false
          description: The name of the launch template. You must specify either the launch template ID or launch template name in the request.
          schema:
            type: string
            pattern: '[a-zA-Z0-9\(\)\.\-/_]+'
            minLength: 3
            maxLength: 128
        - name: LaunchTemplateVersion
          in: query
          required: true
          description: The version numbers of one or more launch template versions to delete.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteLaunchTemplateVersions
      operationId: POST_DeleteLaunchTemplateVersions
      description: 'Deletes one or more versions of a launch template. You cannot delete the default version of a launch template; you must first assign a different version as the default. If the default version is the only version for the launch template, you must delete the entire launch template using <a>DeleteLaunchTemplate</a>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteLaunchTemplateVersionsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteLaunchTemplateVersionsRequest'
      parameters: []
  /?Action=DeleteLocalGatewayRoute&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteLocalGatewayRoute
      operationId: GET_DeleteLocalGatewayRoute
      description: Deletes the specified route from the specified local gateway route table.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteLocalGatewayRouteResult'
      parameters:
        - name: DestinationCidrBlock
          in: query
          required: true
          description: The CIDR range for the route. This must match the CIDR for the route exactly.
          schema:
            type: string
        - name: LocalGatewayRouteTableId
          in: query
          required: true
          description: The ID of the local gateway route table.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteLocalGatewayRoute
      operationId: POST_DeleteLocalGatewayRoute
      description: Deletes the specified route from the specified local gateway route table.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteLocalGatewayRouteResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteLocalGatewayRouteRequest'
      parameters: []
  /?Action=DeleteLocalGatewayRouteTableVpcAssociation&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteLocalGatewayRouteTableVpcAssociation
      operationId: GET_DeleteLocalGatewayRouteTableVpcAssociation
      description: Deletes the specified association between a VPC and local gateway route table.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteLocalGatewayRouteTableVpcAssociationResult'
      parameters:
        - name: LocalGatewayRouteTableVpcAssociationId
          in: query
          required: true
          description: The ID of the association.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteLocalGatewayRouteTableVpcAssociation
      operationId: POST_DeleteLocalGatewayRouteTableVpcAssociation
      description: Deletes the specified association between a VPC and local gateway route table.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteLocalGatewayRouteTableVpcAssociationResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteLocalGatewayRouteTableVpcAssociationRequest'
      parameters: []
  /?Action=DeleteManagedPrefixList&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteManagedPrefixList
      operationId: GET_DeleteManagedPrefixList
      description: Deletes the specified managed prefix list. You must first remove all references to the prefix list in your resources.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteManagedPrefixListResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: PrefixListId
          in: query
          required: true
          description: The ID of the prefix list.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteManagedPrefixList
      operationId: POST_DeleteManagedPrefixList
      description: Deletes the specified managed prefix list. You must first remove all references to the prefix list in your resources.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteManagedPrefixListResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteManagedPrefixListRequest'
      parameters: []
  /?Action=DeleteNatGateway&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteNatGateway
      operationId: GET_DeleteNatGateway
      description: 'Deletes the specified NAT gateway. Deleting a public NAT gateway disassociates its Elastic IP address, but does not release the address from your account. Deleting a NAT gateway does not delete any NAT gateway routes in your route tables.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteNatGatewayResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: NatGatewayId
          in: query
          required: true
          description: The ID of the NAT gateway.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteNatGateway
      operationId: POST_DeleteNatGateway
      description: 'Deletes the specified NAT gateway. Deleting a public NAT gateway disassociates its Elastic IP address, but does not release the address from your account. Deleting a NAT gateway does not delete any NAT gateway routes in your route tables.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteNatGatewayResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteNatGatewayRequest'
      parameters: []
  /?Action=DeleteNetworkAcl&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteNetworkAcl
      operationId: GET_DeleteNetworkAcl
      description: Deletes the specified network ACL. You can't delete the ACL if it's associated with any subnets. You can't delete the default network ACL.
      responses:
        '200':
          description: Success
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: NetworkAclId
          in: query
          required: true
          description: The ID of the network ACL.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteNetworkAcl
      operationId: POST_DeleteNetworkAcl
      description: Deletes the specified network ACL. You can't delete the ACL if it's associated with any subnets. You can't delete the default network ACL.
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteNetworkAclRequest'
      parameters: []
  /?Action=DeleteNetworkAclEntry&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteNetworkAclEntry
      operationId: GET_DeleteNetworkAclEntry
      description: Deletes the specified ingress or egress entry (rule) from the specified network ACL.
      responses:
        '200':
          description: Success
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: Egress
          in: query
          required: true
          description: Indicates whether the rule is an egress rule.
          schema:
            type: boolean
        - name: NetworkAclId
          in: query
          required: true
          description: The ID of the network ACL.
          schema:
            type: string
        - name: RuleNumber
          in: query
          required: true
          description: The rule number of the entry to delete.
          schema:
            type: integer
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteNetworkAclEntry
      operationId: POST_DeleteNetworkAclEntry
      description: Deletes the specified ingress or egress entry (rule) from the specified network ACL.
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteNetworkAclEntryRequest'
      parameters: []
  /?Action=DeleteNetworkInsightsAccessScope&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteNetworkInsightsAccessScope
      operationId: GET_DeleteNetworkInsightsAccessScope
      description: Deletes the specified Network Access Scope.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteNetworkInsightsAccessScopeResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: NetworkInsightsAccessScopeId
          in: query
          required: true
          description: The ID of the Network Access Scope.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteNetworkInsightsAccessScope
      operationId: POST_DeleteNetworkInsightsAccessScope
      description: Deletes the specified Network Access Scope.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteNetworkInsightsAccessScopeResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteNetworkInsightsAccessScopeRequest'
      parameters: []
  /?Action=DeleteNetworkInsightsAccessScopeAnalysis&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteNetworkInsightsAccessScopeAnalysis
      operationId: GET_DeleteNetworkInsightsAccessScopeAnalysis
      description: Deletes the specified Network Access Scope analysis.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteNetworkInsightsAccessScopeAnalysisResult'
      parameters:
        - name: NetworkInsightsAccessScopeAnalysisId
          in: query
          required: true
          description: The ID of the Network Access Scope analysis.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteNetworkInsightsAccessScopeAnalysis
      operationId: POST_DeleteNetworkInsightsAccessScopeAnalysis
      description: Deletes the specified Network Access Scope analysis.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteNetworkInsightsAccessScopeAnalysisResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteNetworkInsightsAccessScopeAnalysisRequest'
      parameters: []
  /?Action=DeleteNetworkInsightsAnalysis&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteNetworkInsightsAnalysis
      operationId: GET_DeleteNetworkInsightsAnalysis
      description: Deletes the specified network insights analysis.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteNetworkInsightsAnalysisResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: NetworkInsightsAnalysisId
          in: query
          required: true
          description: The ID of the network insights analysis.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteNetworkInsightsAnalysis
      operationId: POST_DeleteNetworkInsightsAnalysis
      description: Deletes the specified network insights analysis.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteNetworkInsightsAnalysisResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteNetworkInsightsAnalysisRequest'
      parameters: []
  /?Action=DeleteNetworkInsightsPath&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteNetworkInsightsPath
      operationId: GET_DeleteNetworkInsightsPath
      description: Deletes the specified path.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteNetworkInsightsPathResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: NetworkInsightsPathId
          in: query
          required: true
          description: The ID of the path.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteNetworkInsightsPath
      operationId: POST_DeleteNetworkInsightsPath
      description: Deletes the specified path.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteNetworkInsightsPathResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteNetworkInsightsPathRequest'
      parameters: []
  /?Action=DeleteNetworkInterface&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteNetworkInterface
      operationId: GET_DeleteNetworkInterface
      description: Deletes the specified network interface. You must detach the network interface before you can delete it.
      responses:
        '200':
          description: Success
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: NetworkInterfaceId
          in: query
          required: true
          description: The ID of the network interface.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteNetworkInterface
      operationId: POST_DeleteNetworkInterface
      description: Deletes the specified network interface. You must detach the network interface before you can delete it.
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteNetworkInterfaceRequest'
      parameters: []
  /?Action=DeleteNetworkInterfacePermission&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteNetworkInterfacePermission
      operationId: GET_DeleteNetworkInterfacePermission
      description: 'Deletes a permission for a network interface. By default, you cannot delete the permission if the account for which you''re removing the permission has attached the network interface to an instance. However, you can force delete the permission, regardless of any attachment.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteNetworkInterfacePermissionResult'
      parameters:
        - name: NetworkInterfacePermissionId
          in: query
          required: true
          description: The ID of the network interface permission.
          schema:
            type: string
        - name: Force
          in: query
          required: false
          description: Specify <code>true</code> to remove the permission even if the network interface is attached to an instance.
          schema:
            type: boolean
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteNetworkInterfacePermission
      operationId: POST_DeleteNetworkInterfacePermission
      description: 'Deletes a permission for a network interface. By default, you cannot delete the permission if the account for which you''re removing the permission has attached the network interface to an instance. However, you can force delete the permission, regardless of any attachment.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteNetworkInterfacePermissionResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteNetworkInterfacePermissionRequest'
      parameters: []
  /?Action=DeletePlacementGroup&Version=2016-11-15:
    get:
      x-aws-operation-name: DeletePlacementGroup
      operationId: GET_DeletePlacementGroup
      description: 'Deletes the specified placement group. You must terminate all instances in the placement group before you can delete the placement group. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html">Placement groups</a> in the <i>Amazon EC2 User Guide</i>.'
      responses:
        '200':
          description: Success
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: GroupName
          in: query
          required: true
          description: The name of the placement group.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeletePlacementGroup
      operationId: POST_DeletePlacementGroup
      description: 'Deletes the specified placement group. You must terminate all instances in the placement group before you can delete the placement group. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html">Placement groups</a> in the <i>Amazon EC2 User Guide</i>.'
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeletePlacementGroupRequest'
      parameters: []
  /?Action=DeletePublicIpv4Pool&Version=2016-11-15:
    get:
      x-aws-operation-name: DeletePublicIpv4Pool
      operationId: GET_DeletePublicIpv4Pool
      description: 'Delete a public IPv4 pool. A public IPv4 pool is an EC2 IP address pool required for the public IPv4 CIDRs that you own and bring to Amazon Web Services to manage with IPAM. IPv6 addresses you bring to Amazon Web Services, however, use IPAM pools only.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeletePublicIpv4PoolResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: PoolId
          in: query
          required: true
          description: The ID of the public IPv4 pool you want to delete.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeletePublicIpv4Pool
      operationId: POST_DeletePublicIpv4Pool
      description: 'Delete a public IPv4 pool. A public IPv4 pool is an EC2 IP address pool required for the public IPv4 CIDRs that you own and bring to Amazon Web Services to manage with IPAM. IPv6 addresses you bring to Amazon Web Services, however, use IPAM pools only.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeletePublicIpv4PoolResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeletePublicIpv4PoolRequest'
      parameters: []
  /?Action=DeleteQueuedReservedInstances&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteQueuedReservedInstances
      operationId: GET_DeleteQueuedReservedInstances
      description: Deletes the queued purchases for the specified Reserved Instances.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteQueuedReservedInstancesResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: ReservedInstancesId
          in: query
          required: true
          description: The IDs of the Reserved Instances.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/ReservationId'
                - xml:
                    name: item
            minItems: 1
            maxItems: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteQueuedReservedInstances
      operationId: POST_DeleteQueuedReservedInstances
      description: Deletes the queued purchases for the specified Reserved Instances.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteQueuedReservedInstancesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteQueuedReservedInstancesRequest'
      parameters: []
  /?Action=DeleteRoute&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteRoute
      operationId: GET_DeleteRoute
      description: Deletes the specified route from the specified route table.
      responses:
        '200':
          description: Success
      parameters:
        - name: DestinationCidrBlock
          in: query
          required: false
          description: The IPv4 CIDR range for the route. The value you specify must match the CIDR for the route exactly.
          schema:
            type: string
        - name: DestinationIpv6CidrBlock
          in: query
          required: false
          description: The IPv6 CIDR range for the route. The value you specify must match the CIDR for the route exactly.
          schema:
            type: string
        - name: DestinationPrefixListId
          in: query
          required: false
          description: The ID of the prefix list for the route.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: RouteTableId
          in: query
          required: true
          description: The ID of the route table.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteRoute
      operationId: POST_DeleteRoute
      description: Deletes the specified route from the specified route table.
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteRouteRequest'
      parameters: []
  /?Action=DeleteRouteTable&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteRouteTable
      operationId: GET_DeleteRouteTable
      description: Deletes the specified route table. You must disassociate the route table from any subnets before you can delete it. You can't delete the main route table.
      responses:
        '200':
          description: Success
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: RouteTableId
          in: query
          required: true
          description: The ID of the route table.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteRouteTable
      operationId: POST_DeleteRouteTable
      description: Deletes the specified route table. You must disassociate the route table from any subnets before you can delete it. You can't delete the main route table.
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteRouteTableRequest'
      parameters: []
  /?Action=DeleteSecurityGroup&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteSecurityGroup
      operationId: GET_DeleteSecurityGroup
      description: '<p>Deletes a security group.</p> <p>If you attempt to delete a security group that is associated with an instance, or is referenced by another security group, the operation fails with <code>InvalidGroup.InUse</code> in EC2-Classic or <code>DependencyViolation</code> in EC2-VPC.</p>'
      responses:
        '200':
          description: Success
      parameters:
        - name: GroupId
          in: query
          required: false
          description: The ID of the security group. Required for a nondefault VPC.
          schema:
            type: string
        - name: GroupName
          in: query
          required: false
          description: '[EC2-Classic, default VPC] The name of the security group. You can specify either the security group name or the security group ID.'
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteSecurityGroup
      operationId: POST_DeleteSecurityGroup
      description: '<p>Deletes a security group.</p> <p>If you attempt to delete a security group that is associated with an instance, or is referenced by another security group, the operation fails with <code>InvalidGroup.InUse</code> in EC2-Classic or <code>DependencyViolation</code> in EC2-VPC.</p>'
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteSecurityGroupRequest'
      parameters: []
  /?Action=DeleteSnapshot&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteSnapshot
      operationId: GET_DeleteSnapshot
      description: '<p>Deletes the specified snapshot.</p> <p>When you make periodic snapshots of a volume, the snapshots are incremental, and only the blocks on the device that have changed since your last snapshot are saved in the new snapshot. When you delete a snapshot, only the data not needed for any other snapshot is removed. So regardless of which prior snapshots have been deleted, all active snapshots will have access to all the information needed to restore the volume.</p> <p>You cannot delete a snapshot of the root device of an EBS volume used by a registered AMI. You must first de-register the AMI before you can delete the snapshot.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-deleting-snapshot.html">Delete an Amazon EBS snapshot</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
      parameters:
        - name: SnapshotId
          in: query
          required: true
          description: The ID of the EBS snapshot.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteSnapshot
      operationId: POST_DeleteSnapshot
      description: '<p>Deletes the specified snapshot.</p> <p>When you make periodic snapshots of a volume, the snapshots are incremental, and only the blocks on the device that have changed since your last snapshot are saved in the new snapshot. When you delete a snapshot, only the data not needed for any other snapshot is removed. So regardless of which prior snapshots have been deleted, all active snapshots will have access to all the information needed to restore the volume.</p> <p>You cannot delete a snapshot of the root device of an EBS volume used by a registered AMI. You must first de-register the AMI before you can delete the snapshot.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-deleting-snapshot.html">Delete an Amazon EBS snapshot</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteSnapshotRequest'
      parameters: []
  /?Action=DeleteSpotDatafeedSubscription&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteSpotDatafeedSubscription
      operationId: GET_DeleteSpotDatafeedSubscription
      description: Deletes the data feed for Spot Instances.
      responses:
        '200':
          description: Success
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteSpotDatafeedSubscription
      operationId: POST_DeleteSpotDatafeedSubscription
      description: Deletes the data feed for Spot Instances.
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteSpotDatafeedSubscriptionRequest'
      parameters: []
  /?Action=DeleteSubnet&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteSubnet
      operationId: GET_DeleteSubnet
      description: Deletes the specified subnet. You must terminate all running instances in the subnet before you can delete the subnet.
      responses:
        '200':
          description: Success
      parameters:
        - name: SubnetId
          in: query
          required: true
          description: The ID of the subnet.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteSubnet
      operationId: POST_DeleteSubnet
      description: Deletes the specified subnet. You must terminate all running instances in the subnet before you can delete the subnet.
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteSubnetRequest'
      parameters: []
  /?Action=DeleteSubnetCidrReservation&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteSubnetCidrReservation
      operationId: GET_DeleteSubnetCidrReservation
      description: Deletes a subnet CIDR reservation.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteSubnetCidrReservationResult'
      parameters:
        - name: SubnetCidrReservationId
          in: query
          required: true
          description: The ID of the subnet CIDR reservation.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteSubnetCidrReservation
      operationId: POST_DeleteSubnetCidrReservation
      description: Deletes a subnet CIDR reservation.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteSubnetCidrReservationResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteSubnetCidrReservationRequest'
      parameters: []
  /?Action=DeleteTags&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteTags
      operationId: GET_DeleteTags
      description: '<p>Deletes the specified set of tags from the specified set of resources.</p> <p>To list the current tags, use <a>DescribeTags</a>. For more information about tags, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging Your Resources</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: ResourceId
          in: query
          required: true
          description: '<p>The IDs of the resources, separated by spaces.</p> <p>Constraints: Up to 1000 resource IDs. We recommend breaking up this request into smaller batches.</p>'
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TaggableResourceId'
        - name: Tag
          in: query
          required: false
          description: '<p>The tags to delete. Specify a tag key and an optional tag value to delete specific tags. If you specify a tag key without a tag value, we delete any tag with this key regardless of its value. If you specify a tag key with an empty string as the tag value, we delete the tag only if its value is an empty string.</p> <p>If you omit this parameter, we delete all user-defined tags for the specified resources. We do not delete Amazon Web Services-generated tags (tags that have the <code>aws:</code> prefix).</p> <p>Constraints: Up to 1000 tags.</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Tag'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteTags
      operationId: POST_DeleteTags
      description: '<p>Deletes the specified set of tags from the specified set of resources.</p> <p>To list the current tags, use <a>DescribeTags</a>. For more information about tags, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging Your Resources</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteTagsRequest'
      parameters: []
  /?Action=DeleteTrafficMirrorFilter&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteTrafficMirrorFilter
      operationId: GET_DeleteTrafficMirrorFilter
      description: <p>Deletes the specified Traffic Mirror filter.</p> <p>You cannot delete a Traffic Mirror filter that is in use by a Traffic Mirror session.</p>
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteTrafficMirrorFilterResult'
      parameters:
        - name: TrafficMirrorFilterId
          in: query
          required: true
          description: The ID of the Traffic Mirror filter.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteTrafficMirrorFilter
      operationId: POST_DeleteTrafficMirrorFilter
      description: <p>Deletes the specified Traffic Mirror filter.</p> <p>You cannot delete a Traffic Mirror filter that is in use by a Traffic Mirror session.</p>
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteTrafficMirrorFilterResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteTrafficMirrorFilterRequest'
      parameters: []
  /?Action=DeleteTrafficMirrorFilterRule&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteTrafficMirrorFilterRule
      operationId: GET_DeleteTrafficMirrorFilterRule
      description: Deletes the specified Traffic Mirror rule.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteTrafficMirrorFilterRuleResult'
      parameters:
        - name: TrafficMirrorFilterRuleId
          in: query
          required: true
          description: The ID of the Traffic Mirror rule.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteTrafficMirrorFilterRule
      operationId: POST_DeleteTrafficMirrorFilterRule
      description: Deletes the specified Traffic Mirror rule.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteTrafficMirrorFilterRuleResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteTrafficMirrorFilterRuleRequest'
      parameters: []
  /?Action=DeleteTrafficMirrorSession&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteTrafficMirrorSession
      operationId: GET_DeleteTrafficMirrorSession
      description: Deletes the specified Traffic Mirror session.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteTrafficMirrorSessionResult'
      parameters:
        - name: TrafficMirrorSessionId
          in: query
          required: true
          description: The ID of the Traffic Mirror session.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteTrafficMirrorSession
      operationId: POST_DeleteTrafficMirrorSession
      description: Deletes the specified Traffic Mirror session.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteTrafficMirrorSessionResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteTrafficMirrorSessionRequest'
      parameters: []
  /?Action=DeleteTrafficMirrorTarget&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteTrafficMirrorTarget
      operationId: GET_DeleteTrafficMirrorTarget
      description: <p>Deletes the specified Traffic Mirror target.</p> <p>You cannot delete a Traffic Mirror target that is in use by a Traffic Mirror session.</p>
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteTrafficMirrorTargetResult'
      parameters:
        - name: TrafficMirrorTargetId
          in: query
          required: true
          description: The ID of the Traffic Mirror target.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteTrafficMirrorTarget
      operationId: POST_DeleteTrafficMirrorTarget
      description: <p>Deletes the specified Traffic Mirror target.</p> <p>You cannot delete a Traffic Mirror target that is in use by a Traffic Mirror session.</p>
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteTrafficMirrorTargetResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteTrafficMirrorTargetRequest'
      parameters: []
  /?Action=DeleteTransitGateway&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteTransitGateway
      operationId: GET_DeleteTransitGateway
      description: Deletes the specified transit gateway.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteTransitGatewayResult'
      parameters:
        - name: TransitGatewayId
          in: query
          required: true
          description: The ID of the transit gateway.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteTransitGateway
      operationId: POST_DeleteTransitGateway
      description: Deletes the specified transit gateway.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteTransitGatewayResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteTransitGatewayRequest'
      parameters: []
  /?Action=DeleteTransitGatewayConnect&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteTransitGatewayConnect
      operationId: GET_DeleteTransitGatewayConnect
      description: Deletes the specified Connect attachment. You must first delete any Connect peers for the attachment.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteTransitGatewayConnectResult'
      parameters:
        - name: TransitGatewayAttachmentId
          in: query
          required: true
          description: The ID of the Connect attachment.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteTransitGatewayConnect
      operationId: POST_DeleteTransitGatewayConnect
      description: Deletes the specified Connect attachment. You must first delete any Connect peers for the attachment.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteTransitGatewayConnectResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteTransitGatewayConnectRequest'
      parameters: []
  /?Action=DeleteTransitGatewayConnectPeer&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteTransitGatewayConnectPeer
      operationId: GET_DeleteTransitGatewayConnectPeer
      description: Deletes the specified Connect peer.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteTransitGatewayConnectPeerResult'
      parameters:
        - name: TransitGatewayConnectPeerId
          in: query
          required: true
          description: The ID of the Connect peer.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteTransitGatewayConnectPeer
      operationId: POST_DeleteTransitGatewayConnectPeer
      description: Deletes the specified Connect peer.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteTransitGatewayConnectPeerResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteTransitGatewayConnectPeerRequest'
      parameters: []
  /?Action=DeleteTransitGatewayMulticastDomain&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteTransitGatewayMulticastDomain
      operationId: GET_DeleteTransitGatewayMulticastDomain
      description: Deletes the specified transit gateway multicast domain.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteTransitGatewayMulticastDomainResult'
      parameters:
        - name: TransitGatewayMulticastDomainId
          in: query
          required: true
          description: The ID of the transit gateway multicast domain.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteTransitGatewayMulticastDomain
      operationId: POST_DeleteTransitGatewayMulticastDomain
      description: Deletes the specified transit gateway multicast domain.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteTransitGatewayMulticastDomainResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteTransitGatewayMulticastDomainRequest'
      parameters: []
  /?Action=DeleteTransitGatewayPeeringAttachment&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteTransitGatewayPeeringAttachment
      operationId: GET_DeleteTransitGatewayPeeringAttachment
      description: Deletes a transit gateway peering attachment.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteTransitGatewayPeeringAttachmentResult'
      parameters:
        - name: TransitGatewayAttachmentId
          in: query
          required: true
          description: The ID of the transit gateway peering attachment.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteTransitGatewayPeeringAttachment
      operationId: POST_DeleteTransitGatewayPeeringAttachment
      description: Deletes a transit gateway peering attachment.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteTransitGatewayPeeringAttachmentResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteTransitGatewayPeeringAttachmentRequest'
      parameters: []
  /?Action=DeleteTransitGatewayPrefixListReference&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteTransitGatewayPrefixListReference
      operationId: GET_DeleteTransitGatewayPrefixListReference
      description: Deletes a reference (route) to a prefix list in a specified transit gateway route table.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteTransitGatewayPrefixListReferenceResult'
      parameters:
        - name: TransitGatewayRouteTableId
          in: query
          required: true
          description: The ID of the route table.
          schema:
            type: string
        - name: PrefixListId
          in: query
          required: true
          description: The ID of the prefix list.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteTransitGatewayPrefixListReference
      operationId: POST_DeleteTransitGatewayPrefixListReference
      description: Deletes a reference (route) to a prefix list in a specified transit gateway route table.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteTransitGatewayPrefixListReferenceResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteTransitGatewayPrefixListReferenceRequest'
      parameters: []
  /?Action=DeleteTransitGatewayRoute&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteTransitGatewayRoute
      operationId: GET_DeleteTransitGatewayRoute
      description: Deletes the specified route from the specified transit gateway route table.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteTransitGatewayRouteResult'
      parameters:
        - name: TransitGatewayRouteTableId
          in: query
          required: true
          description: The ID of the transit gateway route table.
          schema:
            type: string
        - name: DestinationCidrBlock
          in: query
          required: true
          description: The CIDR range for the route. This must match the CIDR for the route exactly.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteTransitGatewayRoute
      operationId: POST_DeleteTransitGatewayRoute
      description: Deletes the specified route from the specified transit gateway route table.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteTransitGatewayRouteResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteTransitGatewayRouteRequest'
      parameters: []
  /?Action=DeleteTransitGatewayRouteTable&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteTransitGatewayRouteTable
      operationId: GET_DeleteTransitGatewayRouteTable
      description: Deletes the specified transit gateway route table. You must disassociate the route table from any transit gateway route tables before you can delete it.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteTransitGatewayRouteTableResult'
      parameters:
        - name: TransitGatewayRouteTableId
          in: query
          required: true
          description: The ID of the transit gateway route table.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteTransitGatewayRouteTable
      operationId: POST_DeleteTransitGatewayRouteTable
      description: Deletes the specified transit gateway route table. You must disassociate the route table from any transit gateway route tables before you can delete it.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteTransitGatewayRouteTableResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteTransitGatewayRouteTableRequest'
      parameters: []
  /?Action=DeleteTransitGatewayVpcAttachment&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteTransitGatewayVpcAttachment
      operationId: GET_DeleteTransitGatewayVpcAttachment
      description: Deletes the specified VPC attachment.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteTransitGatewayVpcAttachmentResult'
      parameters:
        - name: TransitGatewayAttachmentId
          in: query
          required: true
          description: The ID of the attachment.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteTransitGatewayVpcAttachment
      operationId: POST_DeleteTransitGatewayVpcAttachment
      description: Deletes the specified VPC attachment.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteTransitGatewayVpcAttachmentResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteTransitGatewayVpcAttachmentRequest'
      parameters: []
  /?Action=DeleteVolume&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteVolume
      operationId: GET_DeleteVolume
      description: '<p>Deletes the specified EBS volume. The volume must be in the <code>available</code> state (not attached to an instance).</p> <p>The volume can remain in the <code>deleting</code> state for several minutes.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-deleting-volume.html">Delete an Amazon EBS volume</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
      parameters:
        - name: VolumeId
          in: query
          required: true
          description: The ID of the volume.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteVolume
      operationId: POST_DeleteVolume
      description: '<p>Deletes the specified EBS volume. The volume must be in the <code>available</code> state (not attached to an instance).</p> <p>The volume can remain in the <code>deleting</code> state for several minutes.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-deleting-volume.html">Delete an Amazon EBS volume</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteVolumeRequest'
      parameters: []
  /?Action=DeleteVpc&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteVpc
      operationId: GET_DeleteVpc
      description: 'Deletes the specified VPC. You must detach or delete all gateways and resources that are associated with the VPC before you can delete it. For example, you must terminate all instances running in the VPC, delete all security groups associated with the VPC (except the default one), delete all route tables associated with the VPC (except the default one), and so on.'
      responses:
        '200':
          description: Success
      parameters:
        - name: VpcId
          in: query
          required: true
          description: The ID of the VPC.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteVpc
      operationId: POST_DeleteVpc
      description: 'Deletes the specified VPC. You must detach or delete all gateways and resources that are associated with the VPC before you can delete it. For example, you must terminate all instances running in the VPC, delete all security groups associated with the VPC (except the default one), delete all route tables associated with the VPC (except the default one), and so on.'
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteVpcRequest'
      parameters: []
  /?Action=DeleteVpcEndpointConnectionNotifications&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteVpcEndpointConnectionNotifications
      operationId: GET_DeleteVpcEndpointConnectionNotifications
      description: Deletes one or more VPC endpoint connection notifications.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteVpcEndpointConnectionNotificationsResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: ConnectionNotificationId
          in: query
          required: true
          description: One or more notification IDs.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/ConnectionNotificationId'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteVpcEndpointConnectionNotifications
      operationId: POST_DeleteVpcEndpointConnectionNotifications
      description: Deletes one or more VPC endpoint connection notifications.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteVpcEndpointConnectionNotificationsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteVpcEndpointConnectionNotificationsRequest'
      parameters: []
  /?Action=DeleteVpcEndpointServiceConfigurations&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteVpcEndpointServiceConfigurations
      operationId: GET_DeleteVpcEndpointServiceConfigurations
      description: 'Deletes one or more VPC endpoint service configurations in your account. Before you delete the endpoint service configuration, you must reject any <code>Available</code> or <code>PendingAcceptance</code> interface endpoint connections that are attached to the service.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteVpcEndpointServiceConfigurationsResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: ServiceId
          in: query
          required: true
          description: The IDs of one or more services.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/VpcEndpointServiceId'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteVpcEndpointServiceConfigurations
      operationId: POST_DeleteVpcEndpointServiceConfigurations
      description: 'Deletes one or more VPC endpoint service configurations in your account. Before you delete the endpoint service configuration, you must reject any <code>Available</code> or <code>PendingAcceptance</code> interface endpoint connections that are attached to the service.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteVpcEndpointServiceConfigurationsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteVpcEndpointServiceConfigurationsRequest'
      parameters: []
  /?Action=DeleteVpcEndpoints&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteVpcEndpoints
      operationId: GET_DeleteVpcEndpoints
      description: '<p>Deletes one or more specified VPC endpoints. You can delete any of the following types of VPC endpoints. </p> <ul> <li> <p>Gateway endpoint,</p> </li> <li> <p>Gateway Load Balancer endpoint,</p> </li> <li> <p>Interface endpoint</p> </li> </ul> <p>The following rules apply when you delete a VPC endpoint:</p> <ul> <li> <p>When you delete a gateway endpoint, we delete the endpoint routes in the route tables that are associated with the endpoint.</p> </li> <li> <p>When you delete a Gateway Load Balancer endpoint, we delete the endpoint network interfaces. </p> <p>You can only delete Gateway Load Balancer endpoints when the routes that are associated with the endpoint are deleted.</p> </li> <li> <p>When you delete an interface endpoint, we delete the endpoint network interfaces.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteVpcEndpointsResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: VpcEndpointId
          in: query
          required: true
          description: One or more VPC endpoint IDs.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/VpcEndpointId'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteVpcEndpoints
      operationId: POST_DeleteVpcEndpoints
      description: '<p>Deletes one or more specified VPC endpoints. You can delete any of the following types of VPC endpoints. </p> <ul> <li> <p>Gateway endpoint,</p> </li> <li> <p>Gateway Load Balancer endpoint,</p> </li> <li> <p>Interface endpoint</p> </li> </ul> <p>The following rules apply when you delete a VPC endpoint:</p> <ul> <li> <p>When you delete a gateway endpoint, we delete the endpoint routes in the route tables that are associated with the endpoint.</p> </li> <li> <p>When you delete a Gateway Load Balancer endpoint, we delete the endpoint network interfaces. </p> <p>You can only delete Gateway Load Balancer endpoints when the routes that are associated with the endpoint are deleted.</p> </li> <li> <p>When you delete an interface endpoint, we delete the endpoint network interfaces.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteVpcEndpointsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteVpcEndpointsRequest'
      parameters: []
  /?Action=DeleteVpcPeeringConnection&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteVpcPeeringConnection
      operationId: GET_DeleteVpcPeeringConnection
      description: Deletes a VPC peering connection. Either the owner of the requester VPC or the owner of the accepter VPC can delete the VPC peering connection if it's in the <code>active</code> state. The owner of the requester VPC can delete a VPC peering connection in the <code>pending-acceptance</code> state. You cannot delete a VPC peering connection that's in the <code>failed</code> state.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteVpcPeeringConnectionResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: VpcPeeringConnectionId
          in: query
          required: true
          description: The ID of the VPC peering connection.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteVpcPeeringConnection
      operationId: POST_DeleteVpcPeeringConnection
      description: Deletes a VPC peering connection. Either the owner of the requester VPC or the owner of the accepter VPC can delete the VPC peering connection if it's in the <code>active</code> state. The owner of the requester VPC can delete a VPC peering connection in the <code>pending-acceptance</code> state. You cannot delete a VPC peering connection that's in the <code>failed</code> state.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteVpcPeeringConnectionResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteVpcPeeringConnectionRequest'
      parameters: []
  /?Action=DeleteVpnConnection&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteVpnConnection
      operationId: GET_DeleteVpnConnection
      description: '<p>Deletes the specified VPN connection.</p> <p>If you''re deleting the VPC and its associated components, we recommend that you detach the virtual private gateway from the VPC and delete the VPC before deleting the VPN connection. If you believe that the tunnel credentials for your VPN connection have been compromised, you can delete the VPN connection and create a new one that has new keys, without needing to delete the VPC or virtual private gateway. If you create a new VPN connection, you must reconfigure the customer gateway device using the new configuration information returned with the new VPN connection ID.</p> <p>For certificate-based authentication, delete all Certificate Manager (ACM) private certificates used for the Amazon Web Services-side tunnel endpoints for the VPN connection before deleting the VPN connection.</p>'
      responses:
        '200':
          description: Success
      parameters:
        - name: VpnConnectionId
          in: query
          required: true
          description: The ID of the VPN connection.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteVpnConnection
      operationId: POST_DeleteVpnConnection
      description: '<p>Deletes the specified VPN connection.</p> <p>If you''re deleting the VPC and its associated components, we recommend that you detach the virtual private gateway from the VPC and delete the VPC before deleting the VPN connection. If you believe that the tunnel credentials for your VPN connection have been compromised, you can delete the VPN connection and create a new one that has new keys, without needing to delete the VPC or virtual private gateway. If you create a new VPN connection, you must reconfigure the customer gateway device using the new configuration information returned with the new VPN connection ID.</p> <p>For certificate-based authentication, delete all Certificate Manager (ACM) private certificates used for the Amazon Web Services-side tunnel endpoints for the VPN connection before deleting the VPN connection.</p>'
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteVpnConnectionRequest'
      parameters: []
  /?Action=DeleteVpnConnectionRoute&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteVpnConnectionRoute
      operationId: GET_DeleteVpnConnectionRoute
      description: Deletes the specified static route associated with a VPN connection between an existing virtual private gateway and a VPN customer gateway. The static route allows traffic to be routed from the virtual private gateway to the VPN customer gateway.
      responses:
        '200':
          description: Success
      parameters:
        - name: DestinationCidrBlock
          in: query
          required: true
          description: The CIDR block associated with the local subnet of the customer network.
          schema:
            type: string
        - name: VpnConnectionId
          in: query
          required: true
          description: The ID of the VPN connection.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteVpnConnectionRoute
      operationId: POST_DeleteVpnConnectionRoute
      description: Deletes the specified static route associated with a VPN connection between an existing virtual private gateway and a VPN customer gateway. The static route allows traffic to be routed from the virtual private gateway to the VPN customer gateway.
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteVpnConnectionRouteRequest'
      parameters: []
  /?Action=DeleteVpnGateway&Version=2016-11-15:
    get:
      x-aws-operation-name: DeleteVpnGateway
      operationId: GET_DeleteVpnGateway
      description: Deletes the specified virtual private gateway. You must first detach the virtual private gateway from the VPC. Note that you don't need to delete the virtual private gateway if you plan to delete and recreate the VPN connection between your VPC and your network.
      responses:
        '200':
          description: Success
      parameters:
        - name: VpnGatewayId
          in: query
          required: true
          description: The ID of the virtual private gateway.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteVpnGateway
      operationId: POST_DeleteVpnGateway
      description: Deletes the specified virtual private gateway. You must first detach the virtual private gateway from the VPC. Note that you don't need to delete the virtual private gateway if you plan to delete and recreate the VPN connection between your VPC and your network.
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteVpnGatewayRequest'
      parameters: []
  /?Action=DeprovisionByoipCidr&Version=2016-11-15:
    get:
      x-aws-operation-name: DeprovisionByoipCidr
      operationId: GET_DeprovisionByoipCidr
      description: '<p>Releases the specified address range that you provisioned for use with your Amazon Web Services resources through bring your own IP addresses (BYOIP) and deletes the corresponding address pool.</p> <p>Before you can release an address range, you must stop advertising it using <a>WithdrawByoipCidr</a> and you must not have any IP addresses allocated from its address range.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeprovisionByoipCidrResult'
      parameters:
        - name: Cidr
          in: query
          required: true
          description: 'The address range, in CIDR notation. The prefix must be the same prefix that you specified when you provisioned the address range.'
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeprovisionByoipCidr
      operationId: POST_DeprovisionByoipCidr
      description: '<p>Releases the specified address range that you provisioned for use with your Amazon Web Services resources through bring your own IP addresses (BYOIP) and deletes the corresponding address pool.</p> <p>Before you can release an address range, you must stop advertising it using <a>WithdrawByoipCidr</a> and you must not have any IP addresses allocated from its address range.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeprovisionByoipCidrResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeprovisionByoipCidrRequest'
      parameters: []
  /?Action=DeprovisionIpamPoolCidr&Version=2016-11-15:
    get:
      x-aws-operation-name: DeprovisionIpamPoolCidr
      operationId: GET_DeprovisionIpamPoolCidr
      description: 'Deprovision a CIDR provisioned from an IPAM pool. If you deprovision a CIDR from a pool that has a source pool, the CIDR is recycled back into the source pool. For more information, see <a href="/vpc/latest/ipam/depro-pool-cidr-ipam.html">Deprovision pool CIDRs</a> in the <i>Amazon VPC IPAM User Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeprovisionIpamPoolCidrResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: IpamPoolId
          in: query
          required: true
          description: The ID of the pool that has the CIDR you want to deprovision.
          schema:
            type: string
        - name: Cidr
          in: query
          required: false
          description: The CIDR which you want to deprovision from the pool.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeprovisionIpamPoolCidr
      operationId: POST_DeprovisionIpamPoolCidr
      description: 'Deprovision a CIDR provisioned from an IPAM pool. If you deprovision a CIDR from a pool that has a source pool, the CIDR is recycled back into the source pool. For more information, see <a href="/vpc/latest/ipam/depro-pool-cidr-ipam.html">Deprovision pool CIDRs</a> in the <i>Amazon VPC IPAM User Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeprovisionIpamPoolCidrResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeprovisionIpamPoolCidrRequest'
      parameters: []
  /?Action=DeprovisionPublicIpv4PoolCidr&Version=2016-11-15:
    get:
      x-aws-operation-name: DeprovisionPublicIpv4PoolCidr
      operationId: GET_DeprovisionPublicIpv4PoolCidr
      description: Deprovision a CIDR from a public IPv4 pool.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeprovisionPublicIpv4PoolCidrResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: PoolId
          in: query
          required: true
          description: The ID of the pool that you want to deprovision the CIDR from.
          schema:
            type: string
        - name: Cidr
          in: query
          required: true
          description: The CIDR you want to deprovision from the pool.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeprovisionPublicIpv4PoolCidr
      operationId: POST_DeprovisionPublicIpv4PoolCidr
      description: Deprovision a CIDR from a public IPv4 pool.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeprovisionPublicIpv4PoolCidrResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeprovisionPublicIpv4PoolCidrRequest'
      parameters: []
  /?Action=DeregisterImage&Version=2016-11-15:
    get:
      x-aws-operation-name: DeregisterImage
      operationId: GET_DeregisterImage
      description: '<p>Deregisters the specified AMI. After you deregister an AMI, it can''t be used to launch new instances.</p> <p>If you deregister an AMI that matches a Recycle Bin retention rule, the AMI is retained in the Recycle Bin for the specified retention period. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/recycle-bin.html">Recycle Bin</a> in the Amazon Elastic Compute Cloud User Guide.</p> <p>When you deregister an AMI, it doesn''t affect any instances that you''ve already launched from the AMI. You''ll continue to incur usage costs for those instances until you terminate them.</p> <p>When you deregister an Amazon EBS-backed AMI, it doesn''t affect the snapshot that was created for the root volume of the instance during the AMI creation process. When you deregister an instance store-backed AMI, it doesn''t affect the files that you uploaded to Amazon S3 when you created the AMI.</p>'
      responses:
        '200':
          description: Success
      parameters:
        - name: ImageId
          in: query
          required: true
          description: The ID of the AMI.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeregisterImage
      operationId: POST_DeregisterImage
      description: '<p>Deregisters the specified AMI. After you deregister an AMI, it can''t be used to launch new instances.</p> <p>If you deregister an AMI that matches a Recycle Bin retention rule, the AMI is retained in the Recycle Bin for the specified retention period. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/recycle-bin.html">Recycle Bin</a> in the Amazon Elastic Compute Cloud User Guide.</p> <p>When you deregister an AMI, it doesn''t affect any instances that you''ve already launched from the AMI. You''ll continue to incur usage costs for those instances until you terminate them.</p> <p>When you deregister an Amazon EBS-backed AMI, it doesn''t affect the snapshot that was created for the root volume of the instance during the AMI creation process. When you deregister an instance store-backed AMI, it doesn''t affect the files that you uploaded to Amazon S3 when you created the AMI.</p>'
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeregisterImageRequest'
      parameters: []
  /?Action=DeregisterInstanceEventNotificationAttributes&Version=2016-11-15:
    get:
      x-aws-operation-name: DeregisterInstanceEventNotificationAttributes
      operationId: GET_DeregisterInstanceEventNotificationAttributes
      description: Deregisters tag keys to prevent tags that have the specified tag keys from being included in scheduled event notifications for resources in the Region.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeregisterInstanceEventNotificationAttributesResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: InstanceTagAttribute
          in: query
          required: false
          description: Information about the tag keys to deregister.
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/Boolean'
                  - description: Indicates whether to deregister all tag keys in the current Region. Specify <code>false</code> to deregister all tag keys.
              InstanceTagKey:
                allOf:
                  - $ref: '#/components/schemas/InstanceTagKeySet'
                  - description: Information about the tag keys to deregister.
            description: Information about the tag keys to deregister for the current Region. You can either specify individual tag keys or deregister all tag keys in the current Region. You must specify either <code>IncludeAllTagsOfInstance</code> or <code>InstanceTagKeys</code> in the request
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeregisterInstanceEventNotificationAttributes
      operationId: POST_DeregisterInstanceEventNotificationAttributes
      description: Deregisters tag keys to prevent tags that have the specified tag keys from being included in scheduled event notifications for resources in the Region.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeregisterInstanceEventNotificationAttributesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeregisterInstanceEventNotificationAttributesRequest'
      parameters: []
  /?Action=DeregisterTransitGatewayMulticastGroupMembers&Version=2016-11-15:
    get:
      x-aws-operation-name: DeregisterTransitGatewayMulticastGroupMembers
      operationId: GET_DeregisterTransitGatewayMulticastGroupMembers
      description: Deregisters the specified members (network interfaces) from the transit gateway multicast group.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeregisterTransitGatewayMulticastGroupMembersResult'
      parameters:
        - name: TransitGatewayMulticastDomainId
          in: query
          required: false
          description: The ID of the transit gateway multicast domain.
          schema:
            type: string
        - name: GroupIpAddress
          in: query
          required: false
          description: The IP address assigned to the transit gateway multicast group.
          schema:
            type: string
        - name: NetworkInterfaceIds
          in: query
          required: false
          description: The IDs of the group members' network interfaces.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/NetworkInterfaceId'
                - xml:
                    name: item
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeregisterTransitGatewayMulticastGroupMembers
      operationId: POST_DeregisterTransitGatewayMulticastGroupMembers
      description: Deregisters the specified members (network interfaces) from the transit gateway multicast group.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeregisterTransitGatewayMulticastGroupMembersResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeregisterTransitGatewayMulticastGroupMembersRequest'
      parameters: []
  /?Action=DeregisterTransitGatewayMulticastGroupSources&Version=2016-11-15:
    get:
      x-aws-operation-name: DeregisterTransitGatewayMulticastGroupSources
      operationId: GET_DeregisterTransitGatewayMulticastGroupSources
      description: Deregisters the specified sources (network interfaces) from the transit gateway multicast group.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeregisterTransitGatewayMulticastGroupSourcesResult'
      parameters:
        - name: TransitGatewayMulticastDomainId
          in: query
          required: false
          description: The ID of the transit gateway multicast domain.
          schema:
            type: string
        - name: GroupIpAddress
          in: query
          required: false
          description: The IP address assigned to the transit gateway multicast group.
          schema:
            type: string
        - name: NetworkInterfaceIds
          in: query
          required: false
          description: The IDs of the group sources' network interfaces.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/NetworkInterfaceId'
                - xml:
                    name: item
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeregisterTransitGatewayMulticastGroupSources
      operationId: POST_DeregisterTransitGatewayMulticastGroupSources
      description: Deregisters the specified sources (network interfaces) from the transit gateway multicast group.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeregisterTransitGatewayMulticastGroupSourcesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeregisterTransitGatewayMulticastGroupSourcesRequest'
      parameters: []
  /?Action=DescribeAccountAttributes&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeAccountAttributes
      operationId: GET_DescribeAccountAttributes
      description: '<p>Describes attributes of your Amazon Web Services account. The following are the supported account attributes:</p> <ul> <li> <p> <code>supported-platforms</code>: Indicates whether your account can launch instances into EC2-Classic and EC2-VPC, or only into EC2-VPC.</p> </li> <li> <p> <code>default-vpc</code>: The ID of the default VPC for your account, or <code>none</code>.</p> </li> <li> <p> <code>max-instances</code>: This attribute is no longer supported. The returned value does not reflect your actual vCPU limit for running On-Demand Instances. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-on-demand-instances.html#ec2-on-demand-instances-limits">On-Demand Instance Limits</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> </li> <li> <p> <code>vpc-max-security-groups-per-interface</code>: The maximum number of security groups that you can assign to a network interface.</p> </li> <li> <p> <code>max-elastic-ips</code>: The maximum number of Elastic IP addresses that you can allocate for use with EC2-Classic. </p> </li> <li> <p> <code>vpc-max-elastic-ips</code>: The maximum number of Elastic IP addresses that you can allocate for use with EC2-VPC.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeAccountAttributesResult'
      parameters:
        - name: AttributeName
          in: query
          required: false
          description: The account attribute names.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/AccountAttributeName'
                - xml:
                    name: attributeName
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeAccountAttributes
      operationId: POST_DescribeAccountAttributes
      description: '<p>Describes attributes of your Amazon Web Services account. The following are the supported account attributes:</p> <ul> <li> <p> <code>supported-platforms</code>: Indicates whether your account can launch instances into EC2-Classic and EC2-VPC, or only into EC2-VPC.</p> </li> <li> <p> <code>default-vpc</code>: The ID of the default VPC for your account, or <code>none</code>.</p> </li> <li> <p> <code>max-instances</code>: This attribute is no longer supported. The returned value does not reflect your actual vCPU limit for running On-Demand Instances. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-on-demand-instances.html#ec2-on-demand-instances-limits">On-Demand Instance Limits</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> </li> <li> <p> <code>vpc-max-security-groups-per-interface</code>: The maximum number of security groups that you can assign to a network interface.</p> </li> <li> <p> <code>max-elastic-ips</code>: The maximum number of Elastic IP addresses that you can allocate for use with EC2-Classic. </p> </li> <li> <p> <code>vpc-max-elastic-ips</code>: The maximum number of Elastic IP addresses that you can allocate for use with EC2-VPC.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeAccountAttributesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeAccountAttributesRequest'
      parameters: []
  /?Action=DescribeAddresses&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeAddresses
      operationId: GET_DescribeAddresses
      description: '<p>Describes the specified Elastic IP addresses or all of your Elastic IP addresses.</p> <p>An Elastic IP address is for use in either the EC2-Classic platform or in a VPC. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeAddressesResult'
      parameters:
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters. Filter names and values are case-sensitive.</p> <ul> <li> <p> <code>allocation-id</code> - [EC2-VPC] The allocation ID for the address.</p> </li> <li> <p> <code>association-id</code> - [EC2-VPC] The association ID for the address.</p> </li> <li> <p> <code>domain</code> - Indicates whether the address is for use in EC2-Classic (<code>standard</code>) or in a VPC (<code>vpc</code>).</p> </li> <li> <p> <code>instance-id</code> - The ID of the instance the address is associated with, if any.</p> </li> <li> <p> <code>network-border-group</code> - A unique set of Availability Zones, Local Zones, or Wavelength Zones from where Amazon Web Services advertises IP addresses. </p> </li> <li> <p> <code>network-interface-id</code> - [EC2-VPC] The ID of the network interface that the address is associated with, if any.</p> </li> <li> <p> <code>network-interface-owner-id</code> - The Amazon Web Services account ID of the owner.</p> </li> <li> <p> <code>private-ip-address</code> - [EC2-VPC] The private IP address associated with the Elastic IP address.</p> </li> <li> <p> <code>public-ip</code> - The Elastic IP address, or the carrier IP address.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: PublicIp
          in: query
          required: false
          description: '<p>One or more Elastic IP addresses.</p> <p>Default: Describes all your Elastic IP addresses.</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: PublicIp
        - name: AllocationId
          in: query
          required: false
          description: '[EC2-VPC] Information about the allocation IDs.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/AllocationId'
                - xml:
                    name: AllocationId
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeAddresses
      operationId: POST_DescribeAddresses
      description: '<p>Describes the specified Elastic IP addresses or all of your Elastic IP addresses.</p> <p>An Elastic IP address is for use in either the EC2-Classic platform or in a VPC. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeAddressesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeAddressesRequest'
      parameters: []
  /?Action=DescribeAddressesAttribute&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeAddressesAttribute
      operationId: GET_DescribeAddressesAttribute
      description: 'Describes the attributes of the specified Elastic IP addresses. For requirements, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html#Using_Elastic_Addressing_Reverse_DNS">Using reverse DNS for email applications</a>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeAddressesAttributeResult'
      parameters:
        - name: AllocationId
          in: query
          required: false
          description: '[EC2-VPC] The allocation IDs.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/AllocationId'
                - xml:
                    name: item
        - name: Attribute
          in: query
          required: false
          description: The attribute of the IP address.
          schema:
            type: string
            enum:
              - domain-name
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeAddressesAttribute
      operationId: POST_DescribeAddressesAttribute
      description: 'Describes the attributes of the specified Elastic IP addresses. For requirements, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html#Using_Elastic_Addressing_Reverse_DNS">Using reverse DNS for email applications</a>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeAddressesAttributeResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeAddressesAttributeRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeAggregateIdFormat&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeAggregateIdFormat
      operationId: GET_DescribeAggregateIdFormat
      description: '<p>Describes the longer ID format settings for all resource types in a specific Region. This request is useful for performing a quick audit to determine whether a specific Region is fully opted in for longer IDs (17-character IDs).</p> <p>This request only returns information about resource types that support longer IDs.</p> <p>The following resource types support longer IDs: <code>bundle</code> | <code>conversion-task</code> | <code>customer-gateway</code> | <code>dhcp-options</code> | <code>elastic-ip-allocation</code> | <code>elastic-ip-association</code> | <code>export-task</code> | <code>flow-log</code> | <code>image</code> | <code>import-task</code> | <code>instance</code> | <code>internet-gateway</code> | <code>network-acl</code> | <code>network-acl-association</code> | <code>network-interface</code> | <code>network-interface-attachment</code> | <code>prefix-list</code> | <code>reservation</code> | <code>route-table</code> | <code>route-table-association</code> | <code>security-group</code> | <code>snapshot</code> | <code>subnet</code> | <code>subnet-cidr-block-association</code> | <code>volume</code> | <code>vpc</code> | <code>vpc-cidr-block-association</code> | <code>vpc-endpoint</code> | <code>vpc-peering-connection</code> | <code>vpn-connection</code> | <code>vpn-gateway</code>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeAggregateIdFormatResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeAggregateIdFormat
      operationId: POST_DescribeAggregateIdFormat
      description: '<p>Describes the longer ID format settings for all resource types in a specific Region. This request is useful for performing a quick audit to determine whether a specific Region is fully opted in for longer IDs (17-character IDs).</p> <p>This request only returns information about resource types that support longer IDs.</p> <p>The following resource types support longer IDs: <code>bundle</code> | <code>conversion-task</code> | <code>customer-gateway</code> | <code>dhcp-options</code> | <code>elastic-ip-allocation</code> | <code>elastic-ip-association</code> | <code>export-task</code> | <code>flow-log</code> | <code>image</code> | <code>import-task</code> | <code>instance</code> | <code>internet-gateway</code> | <code>network-acl</code> | <code>network-acl-association</code> | <code>network-interface</code> | <code>network-interface-attachment</code> | <code>prefix-list</code> | <code>reservation</code> | <code>route-table</code> | <code>route-table-association</code> | <code>security-group</code> | <code>snapshot</code> | <code>subnet</code> | <code>subnet-cidr-block-association</code> | <code>volume</code> | <code>vpc</code> | <code>vpc-cidr-block-association</code> | <code>vpc-endpoint</code> | <code>vpc-peering-connection</code> | <code>vpn-connection</code> | <code>vpn-gateway</code>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeAggregateIdFormatResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeAggregateIdFormatRequest'
      parameters: []
  /?Action=DescribeAvailabilityZones&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeAvailabilityZones
      operationId: GET_DescribeAvailabilityZones
      description: '<p>Describes the Availability Zones, Local Zones, and Wavelength Zones that are available to you. If there is an event impacting a zone, you can use this request to view the state and any provided messages for that zone.</p> <p>For more information about Availability Zones, Local Zones, and Wavelength Zones, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html">Regions and zones</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeAvailabilityZonesResult'
      parameters:
        - name: Filter
          in: query
          required: false
          description: '<p>The filters.</p> <ul> <li> <p> <code>group-name</code> - For Availability Zones, use the Region name. For Local Zones, use the name of the group associated with the Local Zone (for example, <code>us-west-2-lax-1</code>) For Wavelength Zones, use the name of the group associated with the Wavelength Zone (for example, <code>us-east-1-wl1-bos-wlz-1</code>).</p> </li> <li> <p> <code>message</code> - The Zone message.</p> </li> <li> <p> <code>opt-in-status</code> - The opt-in status (<code>opted-in</code>, and <code>not-opted-in</code> | <code>opt-in-not-required</code>).</p> </li> <li> <p> <code>parent-zoneID</code> - The ID of the zone that handles some of the Local Zone and Wavelength Zone control plane operations, such as API calls.</p> </li> <li> <p> <code>parent-zoneName</code> - The ID of the zone that handles some of the Local Zone and Wavelength Zone control plane operations, such as API calls.</p> </li> <li> <p> <code>region-name</code> - The name of the Region for the Zone (for example, <code>us-east-1</code>).</p> </li> <li> <p> <code>state</code> - The state of the Availability Zone, the Local Zone, or the Wavelength Zone (<code>available</code>).</p> </li> <li> <p> <code>zone-id</code> - The ID of the Availability Zone (for example, <code>use1-az1</code>), the Local Zone (for example, <code>usw2-lax1-az1</code>), or the Wavelength Zone (for example, <code>us-east-1-wl1-bos-wlz-1</code>).</p> </li> <li> <p> <code>zone-type</code> - The type of zone, for example, <code>local-zone</code>.</p> </li> <li> <p> <code>zone-name</code> - The name of the Availability Zone (for example, <code>us-east-1a</code>), the Local Zone (for example, <code>us-west-2-lax-1a</code>), or the Wavelength Zone (for example, <code>us-east-1-wl1-bos-wlz-1</code>).</p> </li> <li> <p> <code>zone-type</code> - The type of zone, for example, <code>local-zone</code>.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: ZoneName
          in: query
          required: false
          description: 'The names of the Availability Zones, Local Zones, and Wavelength Zones.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: ZoneName
        - name: ZoneId
          in: query
          required: false
          description: 'The IDs of the Availability Zones, Local Zones, and Wavelength Zones.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: ZoneId
        - name: AllAvailabilityZones
          in: query
          required: false
          description: '<p>Include all Availability Zones, Local Zones, and Wavelength Zones regardless of your opt-in status.</p> <p>If you do not use this parameter, the results include only the zones for the Regions where you have chosen the option to opt in.</p>'
          schema:
            type: boolean
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeAvailabilityZones
      operationId: POST_DescribeAvailabilityZones
      description: '<p>Describes the Availability Zones, Local Zones, and Wavelength Zones that are available to you. If there is an event impacting a zone, you can use this request to view the state and any provided messages for that zone.</p> <p>For more information about Availability Zones, Local Zones, and Wavelength Zones, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html">Regions and zones</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeAvailabilityZonesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeAvailabilityZonesRequest'
      parameters: []
  /?Action=DescribeBundleTasks&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeBundleTasks
      operationId: GET_DescribeBundleTasks
      description: '<p>Describes the specified bundle tasks or all of your bundle tasks.</p> <note> <p>Completed bundle tasks are listed for only a limited time. If your bundle task is no longer in the list, you can still register an AMI from it. Just use <code>RegisterImage</code> with the Amazon S3 bucket name and image manifest name you provided to the bundle task.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeBundleTasksResult'
      parameters:
        - name: BundleId
          in: query
          required: false
          description: '<p>The bundle task IDs.</p> <p>Default: Describes all your bundle tasks.</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/BundleId'
                - xml:
                    name: BundleId
        - name: Filter
          in: query
          required: false
          description: '<p>The filters.</p> <ul> <li> <p> <code>bundle-id</code> - The ID of the bundle task.</p> </li> <li> <p> <code>error-code</code> - If the task failed, the error code returned.</p> </li> <li> <p> <code>error-message</code> - If the task failed, the error message returned.</p> </li> <li> <p> <code>instance-id</code> - The ID of the instance.</p> </li> <li> <p> <code>progress</code> - The level of task completion, as a percentage (for example, 20%).</p> </li> <li> <p> <code>s3-bucket</code> - The Amazon S3 bucket to store the AMI.</p> </li> <li> <p> <code>s3-prefix</code> - The beginning of the AMI name.</p> </li> <li> <p> <code>start-time</code> - The time the task started (for example, 2013-09-15T17:15:20.000Z).</p> </li> <li> <p> <code>state</code> - The state of the task (<code>pending</code> | <code>waiting-for-shutdown</code> | <code>bundling</code> | <code>storing</code> | <code>cancelling</code> | <code>complete</code> | <code>failed</code>).</p> </li> <li> <p> <code>update-time</code> - The time of the most recent update for the task.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeBundleTasks
      operationId: POST_DescribeBundleTasks
      description: '<p>Describes the specified bundle tasks or all of your bundle tasks.</p> <note> <p>Completed bundle tasks are listed for only a limited time. If your bundle task is no longer in the list, you can still register an AMI from it. Just use <code>RegisterImage</code> with the Amazon S3 bucket name and image manifest name you provided to the bundle task.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeBundleTasksResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeBundleTasksRequest'
      parameters: []
  /?Action=DescribeByoipCidrs&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeByoipCidrs
      operationId: GET_DescribeByoipCidrs
      description: '<p>Describes the IP address ranges that were specified in calls to <a>ProvisionByoipCidr</a>.</p> <p>To describe the address pools that were created when you provisioned the address ranges, use <a>DescribePublicIpv4Pools</a> or <a>DescribeIpv6Pools</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeByoipCidrsResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: MaxResults
          in: query
          required: true
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeByoipCidrs
      operationId: POST_DescribeByoipCidrs
      description: '<p>Describes the IP address ranges that were specified in calls to <a>ProvisionByoipCidr</a>.</p> <p>To describe the address pools that were created when you provisioned the address ranges, use <a>DescribePublicIpv4Pools</a> or <a>DescribeIpv6Pools</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeByoipCidrsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeByoipCidrsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeCapacityReservationFleets&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeCapacityReservationFleets
      operationId: GET_DescribeCapacityReservationFleets
      description: Describes one or more Capacity Reservation Fleets.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeCapacityReservationFleetsResult'
      parameters:
        - name: CapacityReservationFleetId
          in: query
          required: false
          description: The IDs of the Capacity Reservation Fleets to describe.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/CapacityReservationFleetId'
                - xml:
                    name: item
        - name: NextToken
          in: query
          required: false
          description: The token to use to retrieve the next page of results.
          schema:
            type: string
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned <code>nextToken</code> value. This value can be between 5 and 500. If <code>maxResults</code> is given a larger value than 500, you receive an error.'
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: Filter
          in: query
          required: false
          description: <p>One or more filters.</p> <ul> <li> <p> <code>state</code> - The state of the Fleet (<code>submitted</code> | <code>modifying</code> | <code>active</code> | <code>partially_fulfilled</code> | <code>expiring</code> | <code>expired</code> | <code>cancelling</code> | <code>cancelled</code> | <code>failed</code>).</p> </li> <li> <p> <code>instance-match-criteria</code> - The instance matching criteria for the Fleet. Only <code>open</code> is supported.</p> </li> <li> <p> <code>tenancy</code> - The tenancy of the Fleet (<code>default</code> | <code>dedicated</code>).</p> </li> <li> <p> <code>allocation-strategy</code> - The allocation strategy used by the Fleet. Only <code>prioritized</code> is supported.</p> </li> </ul>
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeCapacityReservationFleets
      operationId: POST_DescribeCapacityReservationFleets
      description: Describes one or more Capacity Reservation Fleets.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeCapacityReservationFleetsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeCapacityReservationFleetsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeCapacityReservations&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeCapacityReservations
      operationId: GET_DescribeCapacityReservations
      description: Describes one or more of your Capacity Reservations. The results describe only the Capacity Reservations in the Amazon Web Services Region that you're currently using.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeCapacityReservationsResult'
      parameters:
        - name: CapacityReservationId
          in: query
          required: false
          description: The ID of the Capacity Reservation.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/CapacityReservationId'
                - xml:
                    name: item
        - name: NextToken
          in: query
          required: false
          description: The token to use to retrieve the next page of results.
          schema:
            type: string
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned <code>nextToken</code> value. This value can be between 5 and 500. If <code>maxResults</code> is given a larger value than 500, you receive an error.'
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters.</p> <ul> <li> <p> <code>instance-type</code> - The type of instance for which the Capacity Reservation reserves capacity.</p> </li> <li> <p> <code>owner-id</code> - The ID of the Amazon Web Services account that owns the Capacity Reservation.</p> </li> <li> <p> <code>instance-platform</code> - The type of operating system for which the Capacity Reservation reserves capacity.</p> </li> <li> <p> <code>availability-zone</code> - The Availability Zone of the Capacity Reservation.</p> </li> <li> <p> <code>tenancy</code> - Indicates the tenancy of the Capacity Reservation. A Capacity Reservation can have one of the following tenancy settings:</p> <ul> <li> <p> <code>default</code> - The Capacity Reservation is created on hardware that is shared with other Amazon Web Services accounts.</p> </li> <li> <p> <code>dedicated</code> - The Capacity Reservation is created on single-tenant hardware that is dedicated to a single Amazon Web Services account.</p> </li> </ul> </li> <li> <p> <code>outpost-arn</code> - The Amazon Resource Name (ARN) of the Outpost on which the Capacity Reservation was created.</p> </li> <li> <p> <code>state</code> - The current state of the Capacity Reservation. A Capacity Reservation can be in one of the following states:</p> <ul> <li> <p> <code>active</code>- The Capacity Reservation is active and the capacity is available for your use.</p> </li> <li> <p> <code>expired</code> - The Capacity Reservation expired automatically at the date and time specified in your request. The reserved capacity is no longer available for your use.</p> </li> <li> <p> <code>cancelled</code> - The Capacity Reservation was cancelled. The reserved capacity is no longer available for your use.</p> </li> <li> <p> <code>pending</code> - The Capacity Reservation request was successful but the capacity provisioning is still pending.</p> </li> <li> <p> <code>failed</code> - The Capacity Reservation request has failed. A request might fail due to invalid request parameters, capacity constraints, or instance limit constraints. Failed requests are retained for 60 minutes.</p> </li> </ul> </li> <li> <p> <code>start-date</code> - The date and time at which the Capacity Reservation was started.</p> </li> <li> <p> <code>end-date</code> - The date and time at which the Capacity Reservation expires. When a Capacity Reservation expires, the reserved capacity is released and you can no longer launch instances into it. The Capacity Reservation''s state changes to expired when it reaches its end date and time.</p> </li> <li> <p> <code>end-date-type</code> - Indicates the way in which the Capacity Reservation ends. A Capacity Reservation can have one of the following end types:</p> <ul> <li> <p> <code>unlimited</code> - The Capacity Reservation remains active until you explicitly cancel it.</p> </li> <li> <p> <code>limited</code> - The Capacity Reservation expires automatically at a specified date and time.</p> </li> </ul> </li> <li> <p> <code>instance-match-criteria</code> - Indicates the type of instance launches that the Capacity Reservation accepts. The options include:</p> <ul> <li> <p> <code>open</code> - The Capacity Reservation accepts all instances that have matching attributes (instance type, platform, and Availability Zone). Instances that have matching attributes launch into the Capacity Reservation automatically without specifying any additional parameters.</p> </li> <li> <p> <code>targeted</code> - The Capacity Reservation only accepts instances that have matching attributes (instance type, platform, and Availability Zone), and explicitly target the Capacity Reservation. This ensures that only permitted instances can use the reserved capacity.</p> </li> </ul> </li> <li> <p> <code>placement-group-arn</code> - The ARN of the cluster placement group in which the Capacity Reservation was created.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeCapacityReservations
      operationId: POST_DescribeCapacityReservations
      description: Describes one or more of your Capacity Reservations. The results describe only the Capacity Reservations in the Amazon Web Services Region that you're currently using.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeCapacityReservationsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeCapacityReservationsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeCarrierGateways&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeCarrierGateways
      operationId: GET_DescribeCarrierGateways
      description: Describes one or more of your carrier gateways.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeCarrierGatewaysResult'
      parameters:
        - name: CarrierGatewayId
          in: query
          required: false
          description: One or more carrier gateway IDs.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/CarrierGatewayId'
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters.</p> <ul> <li> <p> <code>carrier-gateway-id</code> - The ID of the carrier gateway.</p> </li> <li> <p> <code>state</code> - The state of the carrier gateway (<code>pending</code> | <code>failed</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>).</p> </li> <li> <p> <code>owner-id</code> - The Amazon Web Services account ID of the owner of the carrier gateway.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC associated with the carrier gateway.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 5
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeCarrierGateways
      operationId: POST_DescribeCarrierGateways
      description: Describes one or more of your carrier gateways.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeCarrierGatewaysResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeCarrierGatewaysRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeClassicLinkInstances&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeClassicLinkInstances
      operationId: GET_DescribeClassicLinkInstances
      description: Describes one or more of your linked EC2-Classic instances. This request only returns information about EC2-Classic instances linked to a VPC through ClassicLink. You cannot use this request to return information about other instances.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeClassicLinkInstancesResult'
      parameters:
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters.</p> <ul> <li> <p> <code>group-id</code> - The ID of a VPC security group that''s associated with the instance.</p> </li> <li> <p> <code>instance-id</code> - The ID of the instance.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC to which the instance is linked.</p> <p> <code>vpc-id</code> - The ID of the VPC that the instance is linked to.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: InstanceId
          in: query
          required: false
          description: One or more instance IDs. Must be instances linked to a VPC through ClassicLink.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/InstanceId'
                - xml:
                    name: InstanceId
        - name: MaxResults
          in: query
          required: false
          description: '<p>The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p> <p>Constraint: If the value is greater than 1000, we return only 1000 items.</p>'
          schema:
            type: integer
            minimum: 5
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeClassicLinkInstances
      operationId: POST_DescribeClassicLinkInstances
      description: Describes one or more of your linked EC2-Classic instances. This request only returns information about EC2-Classic instances linked to a VPC through ClassicLink. You cannot use this request to return information about other instances.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeClassicLinkInstancesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeClassicLinkInstancesRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeClientVpnAuthorizationRules&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeClientVpnAuthorizationRules
      operationId: GET_DescribeClientVpnAuthorizationRules
      description: Describes the authorization rules for a specified Client VPN endpoint.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeClientVpnAuthorizationRulesResult'
      parameters:
        - name: ClientVpnEndpointId
          in: query
          required: true
          description: The ID of the Client VPN endpoint.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: NextToken
          in: query
          required: false
          description: The token to retrieve the next page of results.
          schema:
            type: string
        - name: Filter
          in: query
          required: false
          description: <p>One or more filters. Filter names and values are case-sensitive.</p> <ul> <li> <p> <code>description</code> - The description of the authorization rule.</p> </li> <li> <p> <code>destination-cidr</code> - The CIDR of the network to which the authorization rule applies.</p> </li> <li> <p> <code>group-id</code> - The ID of the Active Directory group to which the authorization rule grants access.</p> </li> </ul>
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the nextToken value.
          schema:
            type: integer
            minimum: 5
            maximum: 1000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeClientVpnAuthorizationRules
      operationId: POST_DescribeClientVpnAuthorizationRules
      description: Describes the authorization rules for a specified Client VPN endpoint.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeClientVpnAuthorizationRulesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeClientVpnAuthorizationRulesRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeClientVpnConnections&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeClientVpnConnections
      operationId: GET_DescribeClientVpnConnections
      description: Describes active client connections and connections that have been terminated within the last 60 minutes for the specified Client VPN endpoint.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeClientVpnConnectionsResult'
      parameters:
        - name: ClientVpnEndpointId
          in: query
          required: true
          description: The ID of the Client VPN endpoint.
          schema:
            type: string
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters. Filter names and values are case-sensitive.</p> <ul> <li> <p> <code>connection-id</code> - The ID of the connection.</p> </li> <li> <p> <code>username</code> - For Active Directory client authentication, the user name of the client who established the client connection.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: NextToken
          in: query
          required: false
          description: The token to retrieve the next page of results.
          schema:
            type: string
        - name: MaxResults
          in: query
          required: false
          description: The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the nextToken value.
          schema:
            type: integer
            minimum: 5
            maximum: 1000
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeClientVpnConnections
      operationId: POST_DescribeClientVpnConnections
      description: Describes active client connections and connections that have been terminated within the last 60 minutes for the specified Client VPN endpoint.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeClientVpnConnectionsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeClientVpnConnectionsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeClientVpnEndpoints&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeClientVpnEndpoints
      operationId: GET_DescribeClientVpnEndpoints
      description: Describes one or more Client VPN endpoints in the account.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeClientVpnEndpointsResult'
      parameters:
        - name: ClientVpnEndpointId
          in: query
          required: false
          description: The ID of the Client VPN endpoint.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/ClientVpnEndpointId'
                - xml:
                    name: item
        - name: MaxResults
          in: query
          required: false
          description: The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the nextToken value.
          schema:
            type: integer
            minimum: 5
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token to retrieve the next page of results.
          schema:
            type: string
        - name: Filter
          in: query
          required: false
          description: <p>One or more filters. Filter names and values are case-sensitive.</p> <ul> <li> <p> <code>endpoint-id</code> - The ID of the Client VPN endpoint.</p> </li> <li> <p> <code>transport-protocol</code> - The transport protocol (<code>tcp</code> | <code>udp</code>).</p> </li> </ul>
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeClientVpnEndpoints
      operationId: POST_DescribeClientVpnEndpoints
      description: Describes one or more Client VPN endpoints in the account.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeClientVpnEndpointsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeClientVpnEndpointsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeClientVpnRoutes&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeClientVpnRoutes
      operationId: GET_DescribeClientVpnRoutes
      description: Describes the routes for the specified Client VPN endpoint.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeClientVpnRoutesResult'
      parameters:
        - name: ClientVpnEndpointId
          in: query
          required: true
          description: The ID of the Client VPN endpoint.
          schema:
            type: string
        - name: Filter
          in: query
          required: false
          description: <p>One or more filters. Filter names and values are case-sensitive.</p> <ul> <li> <p> <code>destination-cidr</code> - The CIDR of the route destination.</p> </li> <li> <p> <code>origin</code> - How the route was associated with the Client VPN endpoint (<code>associate</code> | <code>add-route</code>).</p> </li> <li> <p> <code>target-subnet</code> - The ID of the subnet through which traffic is routed.</p> </li> </ul>
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the nextToken value.
          schema:
            type: integer
            minimum: 5
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token to retrieve the next page of results.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeClientVpnRoutes
      operationId: POST_DescribeClientVpnRoutes
      description: Describes the routes for the specified Client VPN endpoint.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeClientVpnRoutesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeClientVpnRoutesRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeClientVpnTargetNetworks&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeClientVpnTargetNetworks
      operationId: GET_DescribeClientVpnTargetNetworks
      description: Describes the target networks associated with the specified Client VPN endpoint.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeClientVpnTargetNetworksResult'
      parameters:
        - name: ClientVpnEndpointId
          in: query
          required: true
          description: The ID of the Client VPN endpoint.
          schema:
            type: string
        - name: AssociationIds
          in: query
          required: false
          description: The IDs of the target network associations.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: item
        - name: MaxResults
          in: query
          required: false
          description: The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the nextToken value.
          schema:
            type: integer
            minimum: 5
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token to retrieve the next page of results.
          schema:
            type: string
        - name: Filter
          in: query
          required: false
          description: <p>One or more filters. Filter names and values are case-sensitive.</p> <ul> <li> <p> <code>association-id</code> - The ID of the association.</p> </li> <li> <p> <code>target-network-id</code> - The ID of the subnet specified as the target network.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC in which the target network is located.</p> </li> </ul>
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeClientVpnTargetNetworks
      operationId: POST_DescribeClientVpnTargetNetworks
      description: Describes the target networks associated with the specified Client VPN endpoint.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeClientVpnTargetNetworksResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeClientVpnTargetNetworksRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeCoipPools&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeCoipPools
      operationId: GET_DescribeCoipPools
      description: Describes the specified customer-owned address pools or all of your customer-owned address pools.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeCoipPoolsResult'
      parameters:
        - name: PoolId
          in: query
          required: false
          description: The IDs of the address pools.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Ipv4PoolCoipId'
                - xml:
                    name: item
        - name: Filter
          in: query
          required: false
          description: <p>One or more filters.</p> <ul> <li> <p> <code>coip-pool.local-gateway-route-table-id</code> - The ID of the local gateway route table.</p> </li> <li> <p> <code>coip-pool.pool-id</code> - The ID of the address pool.</p> </li> </ul>
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 5
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeCoipPools
      operationId: POST_DescribeCoipPools
      description: Describes the specified customer-owned address pools or all of your customer-owned address pools.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeCoipPoolsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeCoipPoolsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeConversionTasks&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeConversionTasks
      operationId: GET_DescribeConversionTasks
      description: '<p>Describes the specified conversion tasks or all your conversion tasks. For more information, see the <a href="https://docs.aws.amazon.com/vm-import/latest/userguide/">VM Import/Export User Guide</a>.</p> <p>For information about the import manifest referenced by this API action, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html">VM Import Manifest</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeConversionTasksResult'
      parameters:
        - name: ConversionTaskId
          in: query
          required: false
          description: The conversion task IDs.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/ConversionTaskId'
                - xml:
                    name: item
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeConversionTasks
      operationId: POST_DescribeConversionTasks
      description: '<p>Describes the specified conversion tasks or all your conversion tasks. For more information, see the <a href="https://docs.aws.amazon.com/vm-import/latest/userguide/">VM Import/Export User Guide</a>.</p> <p>For information about the import manifest referenced by this API action, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html">VM Import Manifest</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeConversionTasksResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeConversionTasksRequest'
      parameters: []
  /?Action=DescribeCustomerGateways&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeCustomerGateways
      operationId: GET_DescribeCustomerGateways
      description: '<p>Describes one or more of your VPN customer gateways.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/vpn/latest/s2svpn/VPC_VPN.html">Amazon Web Services Site-to-Site VPN</a> in the <i>Amazon Web Services Site-to-Site VPN User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeCustomerGatewaysResult'
      parameters:
        - name: CustomerGatewayId
          in: query
          required: false
          description: '<p>One or more customer gateway IDs.</p> <p>Default: Describes all your customer gateways.</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/CustomerGatewayId'
                - xml:
                    name: CustomerGatewayId
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters.</p> <ul> <li> <p> <code>bgp-asn</code> - The customer gateway''s Border Gateway Protocol (BGP) Autonomous System Number (ASN).</p> </li> <li> <p> <code>customer-gateway-id</code> - The ID of the customer gateway.</p> </li> <li> <p> <code>ip-address</code> - The IP address of the customer gateway''s Internet-routable external interface.</p> </li> <li> <p> <code>state</code> - The state of the customer gateway (<code>pending</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>).</p> </li> <li> <p> <code>type</code> - The type of customer gateway. Currently, the only supported type is <code>ipsec.1</code>.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeCustomerGateways
      operationId: POST_DescribeCustomerGateways
      description: '<p>Describes one or more of your VPN customer gateways.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/vpn/latest/s2svpn/VPC_VPN.html">Amazon Web Services Site-to-Site VPN</a> in the <i>Amazon Web Services Site-to-Site VPN User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeCustomerGatewaysResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeCustomerGatewaysRequest'
      parameters: []
  /?Action=DescribeDhcpOptions&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeDhcpOptions
      operationId: GET_DescribeDhcpOptions
      description: '<p>Describes one or more of your DHCP options sets.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_DHCP_Options.html">DHCP options sets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeDhcpOptionsResult'
      parameters:
        - name: DhcpOptionsId
          in: query
          required: false
          description: '<p>The IDs of one or more DHCP options sets.</p> <p>Default: Describes all your DHCP options sets.</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/DhcpOptionsId'
                - xml:
                    name: DhcpOptionsId
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters.</p> <ul> <li> <p> <code>dhcp-options-id</code> - The ID of a DHCP options set.</p> </li> <li> <p> <code>key</code> - The key for one of the options (for example, <code>domain-name</code>).</p> </li> <li> <p> <code>value</code> - The value for one of the options.</p> </li> <li> <p> <code>owner-id</code> - The ID of the Amazon Web Services account that owns the DHCP options set.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 5
            maximum: 1000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeDhcpOptions
      operationId: POST_DescribeDhcpOptions
      description: '<p>Describes one or more of your DHCP options sets.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_DHCP_Options.html">DHCP options sets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeDhcpOptionsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeDhcpOptionsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeEgressOnlyInternetGateways&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeEgressOnlyInternetGateways
      operationId: GET_DescribeEgressOnlyInternetGateways
      description: Describes one or more of your egress-only internet gateways.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeEgressOnlyInternetGatewaysResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: EgressOnlyInternetGatewayId
          in: query
          required: false
          description: One or more egress-only internet gateway IDs.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/EgressOnlyInternetGatewayId'
                - xml:
                    name: item
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 5
            maximum: 255
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters.</p> <ul> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeEgressOnlyInternetGateways
      operationId: POST_DescribeEgressOnlyInternetGateways
      description: Describes one or more of your egress-only internet gateways.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeEgressOnlyInternetGatewaysResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeEgressOnlyInternetGatewaysRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeElasticGpus&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeElasticGpus
      operationId: GET_DescribeElasticGpus
      description: 'Describes the Elastic Graphics accelerator associated with your instances. For more information about Elastic Graphics, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-graphics.html">Amazon Elastic Graphics</a>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeElasticGpusResult'
      parameters:
        - name: ElasticGpuId
          in: query
          required: false
          description: The Elastic Graphics accelerator IDs.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/ElasticGpuId'
                - xml:
                    name: item
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: Filter
          in: query
          required: false
          description: '<p>The filters.</p> <ul> <li> <p> <code>availability-zone</code> - The Availability Zone in which the Elastic Graphics accelerator resides.</p> </li> <li> <p> <code>elastic-gpu-health</code> - The status of the Elastic Graphics accelerator (<code>OK</code> | <code>IMPAIRED</code>).</p> </li> <li> <p> <code>elastic-gpu-state</code> - The state of the Elastic Graphics accelerator (<code>ATTACHED</code>).</p> </li> <li> <p> <code>elastic-gpu-type</code> - The type of Elastic Graphics accelerator; for example, <code>eg1.medium</code>.</p> </li> <li> <p> <code>instance-id</code> - The ID of the instance to which the Elastic Graphics accelerator is associated.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value. This value can be between 5 and 1000.'
          schema:
            type: integer
            minimum: 10
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token to request the next page of results.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeElasticGpus
      operationId: POST_DescribeElasticGpus
      description: 'Describes the Elastic Graphics accelerator associated with your instances. For more information about Elastic Graphics, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-graphics.html">Amazon Elastic Graphics</a>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeElasticGpusResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeElasticGpusRequest'
      parameters: []
  /?Action=DescribeExportImageTasks&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeExportImageTasks
      operationId: GET_DescribeExportImageTasks
      description: Describes the specified export image tasks or all of your export image tasks.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeExportImageTasksResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: Filter
          in: query
          required: false
          description: 'Filter tasks using the <code>task-state</code> filter and one of the following values: <code>active</code>, <code>completed</code>, <code>deleting</code>, or <code>deleted</code>.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: ExportImageTaskId
          in: query
          required: false
          description: The IDs of the export image tasks.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/ExportImageTaskId'
                - xml:
                    name: ExportImageTaskId
        - name: MaxResults
          in: query
          required: false
          description: The maximum number of results to return in a single call.
          schema:
            type: integer
            minimum: 1
            maximum: 500
        - name: NextToken
          in: query
          required: false
          description: A token that indicates the next page of results.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeExportImageTasks
      operationId: POST_DescribeExportImageTasks
      description: Describes the specified export image tasks or all of your export image tasks.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeExportImageTasksResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeExportImageTasksRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeExportTasks&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeExportTasks
      operationId: GET_DescribeExportTasks
      description: Describes the specified export instance tasks or all of your export instance tasks.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeExportTasksResult'
      parameters:
        - name: ExportTaskId
          in: query
          required: false
          description: The export task IDs.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/ExportTaskId'
                - xml:
                    name: ExportTaskId
        - name: Filter
          in: query
          required: false
          description: the filters for the export tasks.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeExportTasks
      operationId: POST_DescribeExportTasks
      description: Describes the specified export instance tasks or all of your export instance tasks.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeExportTasksResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeExportTasksRequest'
      parameters: []
  /?Action=DescribeFastLaunchImages&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeFastLaunchImages
      operationId: GET_DescribeFastLaunchImages
      description: Describe details for Windows AMIs that are configured for faster launching.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeFastLaunchImagesResult'
      parameters:
        - name: ImageId
          in: query
          required: false
          description: Details for one or more Windows AMI image IDs.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/ImageId'
                - xml:
                    name: ImageId
        - name: Filter
          in: query
          required: false
          description: <p>Use the following filters to streamline results.</p> <ul> <li> <p> <code>resource-type</code> - The resource type for pre-provisioning.</p> </li> <li> <p> <code>launch-template</code> - The launch template that is associated with the pre-provisioned Windows AMI.</p> </li> <li> <p> <code>owner-id</code> - The owner ID for the pre-provisioning resource.</p> </li> <li> <p> <code>state</code> - The current state of fast launching for the Windows AMI.</p> </li> </ul>
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return in a single call. To retrieve the remaining results, make another request with the returned NextToken value. If this parameter is not specified, then all results are returned.'
          schema:
            type: integer
            minimum: 0
            maximum: 200
        - name: NextToken
          in: query
          required: false
          description: The token for the next set of results.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeFastLaunchImages
      operationId: POST_DescribeFastLaunchImages
      description: Describe details for Windows AMIs that are configured for faster launching.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeFastLaunchImagesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeFastLaunchImagesRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeFastSnapshotRestores&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeFastSnapshotRestores
      operationId: GET_DescribeFastSnapshotRestores
      description: Describes the state of fast snapshot restores for your snapshots.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeFastSnapshotRestoresResult'
      parameters:
        - name: Filter
          in: query
          required: false
          description: '<p>The filters. The possible values are:</p> <ul> <li> <p> <code>availability-zone</code>: The Availability Zone of the snapshot.</p> </li> <li> <p> <code>owner-id</code>: The ID of the Amazon Web Services account that enabled fast snapshot restore on the snapshot.</p> </li> <li> <p> <code>snapshot-id</code>: The ID of the snapshot.</p> </li> <li> <p> <code>state</code>: The state of fast snapshot restores for the snapshot (<code>enabling</code> | <code>optimizing</code> | <code>enabled</code> | <code>disabling</code> | <code>disabled</code>).</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 0
            maximum: 200
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeFastSnapshotRestores
      operationId: POST_DescribeFastSnapshotRestores
      description: Describes the state of fast snapshot restores for your snapshots.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeFastSnapshotRestoresResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeFastSnapshotRestoresRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeFleetHistory&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeFleetHistory
      operationId: GET_DescribeFleetHistory
      description: '<p>Describes the events for the specified EC2 Fleet during the specified time.</p> <p>EC2 Fleet events are delayed by up to 30 seconds before they can be described. This ensures that you can query by the last evaluated time and not miss a recorded event. EC2 Fleet events are available for 48 hours.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/fleet-monitor.html">Monitor fleet events using Amazon EventBridge</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeFleetHistoryResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: EventType
          in: query
          required: false
          description: 'The type of events to describe. By default, all events are described.'
          schema:
            type: string
            enum:
              - instance-change
              - fleet-change
              - service-error
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.'
          schema:
            type: integer
        - name: NextToken
          in: query
          required: false
          description: The token for the next set of results.
          schema:
            type: string
        - name: FleetId
          in: query
          required: true
          description: The ID of the EC2 Fleet.
          schema:
            type: string
        - name: StartTime
          in: query
          required: true
          description: 'The start date and time for the events, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).'
          schema:
            type: string
            format: date-time
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeFleetHistory
      operationId: POST_DescribeFleetHistory
      description: '<p>Describes the events for the specified EC2 Fleet during the specified time.</p> <p>EC2 Fleet events are delayed by up to 30 seconds before they can be described. This ensures that you can query by the last evaluated time and not miss a recorded event. EC2 Fleet events are available for 48 hours.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/fleet-monitor.html">Monitor fleet events using Amazon EventBridge</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeFleetHistoryResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeFleetHistoryRequest'
      parameters: []
  /?Action=DescribeFleetInstances&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeFleetInstances
      operationId: GET_DescribeFleetInstances
      description: '<p>Describes the running instances for the specified EC2 Fleet.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/manage-ec2-fleet.html#monitor-ec2-fleet">Monitor your EC2 Fleet</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeFleetInstancesResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.'
          schema:
            type: integer
        - name: NextToken
          in: query
          required: false
          description: The token for the next set of results.
          schema:
            type: string
        - name: FleetId
          in: query
          required: true
          description: The ID of the EC2 Fleet.
          schema:
            type: string
        - name: Filter
          in: query
          required: false
          description: <p>The filters.</p> <ul> <li> <p> <code>instance-type</code> - The instance type.</p> </li> </ul>
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeFleetInstances
      operationId: POST_DescribeFleetInstances
      description: '<p>Describes the running instances for the specified EC2 Fleet.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/manage-ec2-fleet.html#monitor-ec2-fleet">Monitor your EC2 Fleet</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeFleetInstancesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeFleetInstancesRequest'
      parameters: []
  /?Action=DescribeFleets&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeFleets
      operationId: GET_DescribeFleets
      description: '<p>Describes the specified EC2 Fleets or all of your EC2 Fleets.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/manage-ec2-fleet.html#monitor-ec2-fleet">Monitor your EC2 Fleet</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeFleetsResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.'
          schema:
            type: integer
        - name: NextToken
          in: query
          required: false
          description: The token for the next set of results.
          schema:
            type: string
        - name: FleetId
          in: query
          required: false
          description: '<p>The IDs of the EC2 Fleets.</p> <note> <p>If a fleet is of type <code>instant</code>, you must specify the fleet ID, otherwise it does not appear in the response.</p> </note>'
          schema:
            type: array
            items:
              $ref: '#/components/schemas/FleetId'
        - name: Filter
          in: query
          required: false
          description: <p>The filters.</p> <ul> <li> <p> <code>activity-status</code> - The progress of the EC2 Fleet ( <code>error</code> | <code>pending-fulfillment</code> | <code>pending-termination</code> | <code>fulfilled</code>).</p> </li> <li> <p> <code>excess-capacity-termination-policy</code> - Indicates whether to terminate running instances if the target capacity is decreased below the current EC2 Fleet size (<code>true</code> | <code>false</code>).</p> </li> <li> <p> <code>fleet-state</code> - The state of the EC2 Fleet (<code>submitted</code> | <code>active</code> | <code>deleted</code> | <code>failed</code> | <code>deleted-running</code> | <code>deleted-terminating</code> | <code>modifying</code>).</p> </li> <li> <p> <code>replace-unhealthy-instances</code> - Indicates whether EC2 Fleet should replace unhealthy instances (<code>true</code> | <code>false</code>).</p> </li> <li> <p> <code>type</code> - The type of request (<code>instant</code> | <code>request</code> | <code>maintain</code>).</p> </li> </ul>
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeFleets
      operationId: POST_DescribeFleets
      description: '<p>Describes the specified EC2 Fleets or all of your EC2 Fleets.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/manage-ec2-fleet.html#monitor-ec2-fleet">Monitor your EC2 Fleet</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeFleetsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeFleetsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeFlowLogs&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeFlowLogs
      operationId: GET_DescribeFlowLogs
      description: 'Describes one or more flow logs. To view the information in your flow logs (the log streams for the network interfaces), you must use the CloudWatch Logs console or the CloudWatch Logs API.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeFlowLogsResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters.</p> <ul> <li> <p> <code>deliver-log-status</code> - The status of the logs delivery (<code>SUCCESS</code> | <code>FAILED</code>).</p> </li> <li> <p> <code>log-destination-type</code> - The type of destination to which the flow log publishes data. Possible destination types include <code>cloud-watch-logs</code> and <code>s3</code>.</p> </li> <li> <p> <code>flow-log-id</code> - The ID of the flow log.</p> </li> <li> <p> <code>log-group-name</code> - The name of the log group.</p> </li> <li> <p> <code>resource-id</code> - The ID of the VPC, subnet, or network interface.</p> </li> <li> <p> <code>traffic-type</code> - The type of traffic (<code>ACCEPT</code> | <code>REJECT</code> | <code>ALL</code>).</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: FlowLogId
          in: query
          required: false
          description: '<p>One or more flow log IDs.</p> <p>Constraint: Maximum of 1000 flow log IDs.</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/VpcFlowLogId'
                - xml:
                    name: item
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeFlowLogs
      operationId: POST_DescribeFlowLogs
      description: 'Describes one or more flow logs. To view the information in your flow logs (the log streams for the network interfaces), you must use the CloudWatch Logs console or the CloudWatch Logs API.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeFlowLogsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeFlowLogsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeFpgaImageAttribute&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeFpgaImageAttribute
      operationId: GET_DescribeFpgaImageAttribute
      description: Describes the specified attribute of the specified Amazon FPGA Image (AFI).
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeFpgaImageAttributeResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: FpgaImageId
          in: query
          required: true
          description: The ID of the AFI.
          schema:
            type: string
        - name: Attribute
          in: query
          required: true
          description: The AFI attribute.
          schema:
            type: string
            enum:
              - description
              - name
              - loadPermission
              - productCodes
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeFpgaImageAttribute
      operationId: POST_DescribeFpgaImageAttribute
      description: Describes the specified attribute of the specified Amazon FPGA Image (AFI).
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeFpgaImageAttributeResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeFpgaImageAttributeRequest'
      parameters: []
  /?Action=DescribeFpgaImages&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeFpgaImages
      operationId: GET_DescribeFpgaImages
      description: 'Describes the Amazon FPGA Images (AFIs) available to you. These include public AFIs, private AFIs that you own, and AFIs owned by other Amazon Web Services accounts for which you have load permissions.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeFpgaImagesResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: FpgaImageId
          in: query
          required: false
          description: The AFI IDs.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/FpgaImageId'
                - xml:
                    name: item
        - name: Owner
          in: query
          required: false
          description: 'Filters the AFI by owner. Specify an Amazon Web Services account ID, <code>self</code> (owner is the sender of the request), or an Amazon Web Services owner alias (valid values are <code>amazon</code> | <code>aws-marketplace</code>).'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: Owner
        - name: Filter
          in: query
          required: false
          description: '<p>The filters.</p> <ul> <li> <p> <code>create-time</code> - The creation time of the AFI.</p> </li> <li> <p> <code>fpga-image-id</code> - The FPGA image identifier (AFI ID).</p> </li> <li> <p> <code>fpga-image-global-id</code> - The global FPGA image identifier (AGFI ID).</p> </li> <li> <p> <code>name</code> - The name of the AFI.</p> </li> <li> <p> <code>owner-id</code> - The Amazon Web Services account ID of the AFI owner.</p> </li> <li> <p> <code>product-code</code> - The product code.</p> </li> <li> <p> <code>shell-version</code> - The version of the Amazon Web Services Shell that was used to create the bitstream.</p> </li> <li> <p> <code>state</code> - The state of the AFI (<code>pending</code> | <code>failed</code> | <code>available</code> | <code>unavailable</code>).</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>update-time</code> - The time of the most recent update.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: NextToken
          in: query
          required: false
          description: The token to retrieve the next page of results.
          schema:
            type: string
        - name: MaxResults
          in: query
          required: false
          description: The maximum number of results to return in a single call.
          schema:
            type: integer
            minimum: 5
            maximum: 1000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeFpgaImages
      operationId: POST_DescribeFpgaImages
      description: 'Describes the Amazon FPGA Images (AFIs) available to you. These include public AFIs, private AFIs that you own, and AFIs owned by other Amazon Web Services accounts for which you have load permissions.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeFpgaImagesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeFpgaImagesRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeHostReservationOfferings&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeHostReservationOfferings
      operationId: GET_DescribeHostReservationOfferings
      description: '<p>Describes the Dedicated Host reservations that are available to purchase.</p> <p>The results describe all of the Dedicated Host reservation offerings, including offerings that might not match the instance family and Region of your Dedicated Hosts. When purchasing an offering, ensure that the instance family and Region of the offering matches that of the Dedicated Hosts with which it is to be associated. For more information about supported instance types, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-overview.html">Dedicated Hosts</a> in the <i>Amazon EC2 User Guide</i>. </p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeHostReservationOfferingsResult'
      parameters:
        - name: Filter
          in: query
          required: false
          description: '<p>The filters.</p> <ul> <li> <p> <code>instance-family</code> - The instance family of the offering (for example, <code>m4</code>).</p> </li> <li> <p> <code>payment-option</code> - The payment option (<code>NoUpfront</code> | <code>PartialUpfront</code> | <code>AllUpfront</code>).</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxDuration
          in: query
          required: false
          description: 'This is the maximum duration of the reservation to purchase, specified in seconds. Reservations are available in one-year and three-year terms. The number of seconds specified must be the number of seconds in a year (365x24x60x60) times one of the supported durations (1 or 3). For example, specify 94608000 for three years.'
          schema:
            type: integer
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned <code>nextToken</code> value. This value can be between 5 and 500. If <code>maxResults</code> is given a larger value than 500, you receive an error.'
          schema:
            type: integer
            minimum: 5
            maximum: 500
        - name: MinDuration
          in: query
          required: false
          description: 'This is the minimum duration of the reservation you''d like to purchase, specified in seconds. Reservations are available in one-year and three-year terms. The number of seconds specified must be the number of seconds in a year (365x24x60x60) times one of the supported durations (1 or 3). For example, specify 31536000 for one year.'
          schema:
            type: integer
        - name: NextToken
          in: query
          required: false
          description: The token to use to retrieve the next page of results.
          schema:
            type: string
        - name: OfferingId
          in: query
          required: false
          description: The ID of the reservation offering.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeHostReservationOfferings
      operationId: POST_DescribeHostReservationOfferings
      description: '<p>Describes the Dedicated Host reservations that are available to purchase.</p> <p>The results describe all of the Dedicated Host reservation offerings, including offerings that might not match the instance family and Region of your Dedicated Hosts. When purchasing an offering, ensure that the instance family and Region of the offering matches that of the Dedicated Hosts with which it is to be associated. For more information about supported instance types, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-overview.html">Dedicated Hosts</a> in the <i>Amazon EC2 User Guide</i>. </p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeHostReservationOfferingsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeHostReservationOfferingsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeHostReservations&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeHostReservations
      operationId: GET_DescribeHostReservations
      description: Describes reservations that are associated with Dedicated Hosts in your account.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeHostReservationsResult'
      parameters:
        - name: Filter
          in: query
          required: false
          description: '<p>The filters.</p> <ul> <li> <p> <code>instance-family</code> - The instance family (for example, <code>m4</code>).</p> </li> <li> <p> <code>payment-option</code> - The payment option (<code>NoUpfront</code> | <code>PartialUpfront</code> | <code>AllUpfront</code>).</p> </li> <li> <p> <code>state</code> - The state of the reservation (<code>payment-pending</code> | <code>payment-failed</code> | <code>active</code> | <code>retired</code>).</p> </li> <li> <p> <code>tag:&lt;key&gt;</code> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: HostReservationIdSet
          in: query
          required: false
          description: The host reservation IDs.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/HostReservationId'
                - xml:
                    name: item
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned <code>nextToken</code> value. This value can be between 5 and 500. If <code>maxResults</code> is given a larger value than 500, you receive an error.'
          schema:
            type: integer
        - name: NextToken
          in: query
          required: false
          description: The token to use to retrieve the next page of results.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeHostReservations
      operationId: POST_DescribeHostReservations
      description: Describes reservations that are associated with Dedicated Hosts in your account.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeHostReservationsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeHostReservationsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeHosts&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeHosts
      operationId: GET_DescribeHosts
      description: <p>Describes the specified Dedicated Hosts or all your Dedicated Hosts.</p> <p>The results describe only the Dedicated Hosts in the Region you're currently using. All listed instances consume capacity on your Dedicated Host. Dedicated Hosts that have recently been released are listed with the state <code>released</code>.</p>
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeHostsResult'
      parameters:
        - name: Filter
          in: query
          required: false
          description: '<p>The filters.</p> <ul> <li> <p> <code>auto-placement</code> - Whether auto-placement is enabled or disabled (<code>on</code> | <code>off</code>).</p> </li> <li> <p> <code>availability-zone</code> - The Availability Zone of the host.</p> </li> <li> <p> <code>client-token</code> - The idempotency token that you provided when you allocated the host.</p> </li> <li> <p> <code>host-reservation-id</code> - The ID of the reservation assigned to this host.</p> </li> <li> <p> <code>instance-type</code> - The instance type size that the Dedicated Host is configured to support.</p> </li> <li> <p> <code>state</code> - The allocation state of the Dedicated Host (<code>available</code> | <code>under-assessment</code> | <code>permanent-failure</code> | <code>released</code> | <code>released-permanent-failure</code>).</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: HostId
          in: query
          required: false
          description: The IDs of the Dedicated Hosts. The IDs are used for targeted instance launches.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/DedicatedHostId'
                - xml:
                    name: item
        - name: MaxResults
          in: query
          required: false
          description: '<p>The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned <code>nextToken</code> value. This value can be between 5 and 500. If <code>maxResults</code> is given a larger value than 500, you receive an error.</p> <p>You cannot specify this parameter and the host IDs parameter in the same request.</p>'
          schema:
            type: integer
        - name: NextToken
          in: query
          required: false
          description: The token to use to retrieve the next page of results.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeHosts
      operationId: POST_DescribeHosts
      description: <p>Describes the specified Dedicated Hosts or all your Dedicated Hosts.</p> <p>The results describe only the Dedicated Hosts in the Region you're currently using. All listed instances consume capacity on your Dedicated Host. Dedicated Hosts that have recently been released are listed with the state <code>released</code>.</p>
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeHostsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeHostsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeIamInstanceProfileAssociations&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeIamInstanceProfileAssociations
      operationId: GET_DescribeIamInstanceProfileAssociations
      description: Describes your IAM instance profile associations.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeIamInstanceProfileAssociationsResult'
      parameters:
        - name: AssociationId
          in: query
          required: false
          description: The IAM instance profile associations.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/IamInstanceProfileAssociationId'
                - xml:
                    name: AssociationId
        - name: Filter
          in: query
          required: false
          description: <p>The filters.</p> <ul> <li> <p> <code>instance-id</code> - The ID of the instance.</p> </li> <li> <p> <code>state</code> - The state of the association (<code>associating</code> | <code>associated</code> | <code>disassociating</code>).</p> </li> </ul>
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.'
          schema:
            type: integer
            minimum: 5
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token to request the next page of results.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeIamInstanceProfileAssociations
      operationId: POST_DescribeIamInstanceProfileAssociations
      description: Describes your IAM instance profile associations.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeIamInstanceProfileAssociationsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeIamInstanceProfileAssociationsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeIdFormat&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeIdFormat
      operationId: GET_DescribeIdFormat
      description: '<p>Describes the ID format settings for your resources on a per-Region basis, for example, to view which resource types are enabled for longer IDs. This request only returns information about resource types whose ID formats can be modified; it does not return information about other resource types.</p> <p>The following resource types support longer IDs: <code>bundle</code> | <code>conversion-task</code> | <code>customer-gateway</code> | <code>dhcp-options</code> | <code>elastic-ip-allocation</code> | <code>elastic-ip-association</code> | <code>export-task</code> | <code>flow-log</code> | <code>image</code> | <code>import-task</code> | <code>instance</code> | <code>internet-gateway</code> | <code>network-acl</code> | <code>network-acl-association</code> | <code>network-interface</code> | <code>network-interface-attachment</code> | <code>prefix-list</code> | <code>reservation</code> | <code>route-table</code> | <code>route-table-association</code> | <code>security-group</code> | <code>snapshot</code> | <code>subnet</code> | <code>subnet-cidr-block-association</code> | <code>volume</code> | <code>vpc</code> | <code>vpc-cidr-block-association</code> | <code>vpc-endpoint</code> | <code>vpc-peering-connection</code> | <code>vpn-connection</code> | <code>vpn-gateway</code>. </p> <p>These settings apply to the IAM user who makes the request; they do not apply to the entire Amazon Web Services account. By default, an IAM user defaults to the same settings as the root user, unless they explicitly override the settings by running the <a>ModifyIdFormat</a> command. Resources created with longer IDs are visible to all IAM users, regardless of these settings and provided that they have permission to use the relevant <code>Describe</code> command for the resource type.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeIdFormatResult'
      parameters:
        - name: Resource
          in: query
          required: false
          description: 'The type of resource: <code>bundle</code> | <code>conversion-task</code> | <code>customer-gateway</code> | <code>dhcp-options</code> | <code>elastic-ip-allocation</code> | <code>elastic-ip-association</code> | <code>export-task</code> | <code>flow-log</code> | <code>image</code> | <code>import-task</code> | <code>instance</code> | <code>internet-gateway</code> | <code>network-acl</code> | <code>network-acl-association</code> | <code>network-interface</code> | <code>network-interface-attachment</code> | <code>prefix-list</code> | <code>reservation</code> | <code>route-table</code> | <code>route-table-association</code> | <code>security-group</code> | <code>snapshot</code> | <code>subnet</code> | <code>subnet-cidr-block-association</code> | <code>volume</code> | <code>vpc</code> | <code>vpc-cidr-block-association</code> | <code>vpc-endpoint</code> | <code>vpc-peering-connection</code> | <code>vpn-connection</code> | <code>vpn-gateway</code> '
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeIdFormat
      operationId: POST_DescribeIdFormat
      description: '<p>Describes the ID format settings for your resources on a per-Region basis, for example, to view which resource types are enabled for longer IDs. This request only returns information about resource types whose ID formats can be modified; it does not return information about other resource types.</p> <p>The following resource types support longer IDs: <code>bundle</code> | <code>conversion-task</code> | <code>customer-gateway</code> | <code>dhcp-options</code> | <code>elastic-ip-allocation</code> | <code>elastic-ip-association</code> | <code>export-task</code> | <code>flow-log</code> | <code>image</code> | <code>import-task</code> | <code>instance</code> | <code>internet-gateway</code> | <code>network-acl</code> | <code>network-acl-association</code> | <code>network-interface</code> | <code>network-interface-attachment</code> | <code>prefix-list</code> | <code>reservation</code> | <code>route-table</code> | <code>route-table-association</code> | <code>security-group</code> | <code>snapshot</code> | <code>subnet</code> | <code>subnet-cidr-block-association</code> | <code>volume</code> | <code>vpc</code> | <code>vpc-cidr-block-association</code> | <code>vpc-endpoint</code> | <code>vpc-peering-connection</code> | <code>vpn-connection</code> | <code>vpn-gateway</code>. </p> <p>These settings apply to the IAM user who makes the request; they do not apply to the entire Amazon Web Services account. By default, an IAM user defaults to the same settings as the root user, unless they explicitly override the settings by running the <a>ModifyIdFormat</a> command. Resources created with longer IDs are visible to all IAM users, regardless of these settings and provided that they have permission to use the relevant <code>Describe</code> command for the resource type.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeIdFormatResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeIdFormatRequest'
      parameters: []
  /?Action=DescribeIdentityIdFormat&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeIdentityIdFormat
      operationId: GET_DescribeIdentityIdFormat
      description: '<p>Describes the ID format settings for resources for the specified IAM user, IAM role, or root user. For example, you can view the resource types that are enabled for longer IDs. This request only returns information about resource types whose ID formats can be modified; it does not return information about other resource types. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/resource-ids.html">Resource IDs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. </p> <p>The following resource types support longer IDs: <code>bundle</code> | <code>conversion-task</code> | <code>customer-gateway</code> | <code>dhcp-options</code> | <code>elastic-ip-allocation</code> | <code>elastic-ip-association</code> | <code>export-task</code> | <code>flow-log</code> | <code>image</code> | <code>import-task</code> | <code>instance</code> | <code>internet-gateway</code> | <code>network-acl</code> | <code>network-acl-association</code> | <code>network-interface</code> | <code>network-interface-attachment</code> | <code>prefix-list</code> | <code>reservation</code> | <code>route-table</code> | <code>route-table-association</code> | <code>security-group</code> | <code>snapshot</code> | <code>subnet</code> | <code>subnet-cidr-block-association</code> | <code>volume</code> | <code>vpc</code> | <code>vpc-cidr-block-association</code> | <code>vpc-endpoint</code> | <code>vpc-peering-connection</code> | <code>vpn-connection</code> | <code>vpn-gateway</code>. </p> <p>These settings apply to the principal specified in the request. They do not apply to the principal that makes the request.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeIdentityIdFormatResult'
      parameters:
        - name: PrincipalArn
          in: query
          required: true
          description: 'The ARN of the principal, which can be an IAM role, IAM user, or the root user.'
          schema:
            type: string
        - name: Resource
          in: query
          required: false
          description: 'The type of resource: <code>bundle</code> | <code>conversion-task</code> | <code>customer-gateway</code> | <code>dhcp-options</code> | <code>elastic-ip-allocation</code> | <code>elastic-ip-association</code> | <code>export-task</code> | <code>flow-log</code> | <code>image</code> | <code>import-task</code> | <code>instance</code> | <code>internet-gateway</code> | <code>network-acl</code> | <code>network-acl-association</code> | <code>network-interface</code> | <code>network-interface-attachment</code> | <code>prefix-list</code> | <code>reservation</code> | <code>route-table</code> | <code>route-table-association</code> | <code>security-group</code> | <code>snapshot</code> | <code>subnet</code> | <code>subnet-cidr-block-association</code> | <code>volume</code> | <code>vpc</code> | <code>vpc-cidr-block-association</code> | <code>vpc-endpoint</code> | <code>vpc-peering-connection</code> | <code>vpn-connection</code> | <code>vpn-gateway</code> '
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeIdentityIdFormat
      operationId: POST_DescribeIdentityIdFormat
      description: '<p>Describes the ID format settings for resources for the specified IAM user, IAM role, or root user. For example, you can view the resource types that are enabled for longer IDs. This request only returns information about resource types whose ID formats can be modified; it does not return information about other resource types. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/resource-ids.html">Resource IDs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. </p> <p>The following resource types support longer IDs: <code>bundle</code> | <code>conversion-task</code> | <code>customer-gateway</code> | <code>dhcp-options</code> | <code>elastic-ip-allocation</code> | <code>elastic-ip-association</code> | <code>export-task</code> | <code>flow-log</code> | <code>image</code> | <code>import-task</code> | <code>instance</code> | <code>internet-gateway</code> | <code>network-acl</code> | <code>network-acl-association</code> | <code>network-interface</code> | <code>network-interface-attachment</code> | <code>prefix-list</code> | <code>reservation</code> | <code>route-table</code> | <code>route-table-association</code> | <code>security-group</code> | <code>snapshot</code> | <code>subnet</code> | <code>subnet-cidr-block-association</code> | <code>volume</code> | <code>vpc</code> | <code>vpc-cidr-block-association</code> | <code>vpc-endpoint</code> | <code>vpc-peering-connection</code> | <code>vpn-connection</code> | <code>vpn-gateway</code>. </p> <p>These settings apply to the principal specified in the request. They do not apply to the principal that makes the request.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeIdentityIdFormatResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeIdentityIdFormatRequest'
      parameters: []
  /?Action=DescribeImageAttribute&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeImageAttribute
      operationId: GET_DescribeImageAttribute
      description: Describes the specified attribute of the specified AMI. You can specify only one attribute at a time.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ImageAttribute'
      parameters:
        - name: Attribute
          in: query
          required: true
          description: '<p>The AMI attribute.</p> <p> <b>Note</b>: The <code>blockDeviceMapping</code> attribute is deprecated. Using this attribute returns the <code>Client.AuthFailure</code> error. To get information about the block device mappings for an AMI, use the <a>DescribeImages</a> action.</p>'
          schema:
            type: string
            enum:
              - description
              - kernel
              - ramdisk
              - launchPermission
              - productCodes
              - blockDeviceMapping
              - sriovNetSupport
              - bootMode
              - tpmSupport
              - uefiData
              - lastLaunchedTime
        - name: ImageId
          in: query
          required: true
          description: The ID of the AMI.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeImageAttribute
      operationId: POST_DescribeImageAttribute
      description: Describes the specified attribute of the specified AMI. You can specify only one attribute at a time.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ImageAttribute'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeImageAttributeRequest'
      parameters: []
  /?Action=DescribeImages&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeImages
      operationId: GET_DescribeImages
      description: '<p>Describes the specified images (AMIs, AKIs, and ARIs) available to you or all of the images available to you.</p> <p>The images available to you include public images, private images that you own, and private images owned by other Amazon Web Services accounts for which you have explicit launch permissions.</p> <p>Recently deregistered images appear in the returned results for a short interval and then return empty results. After all instances that reference a deregistered AMI are terminated, specifying the ID of the image will eventually return an error indicating that the AMI ID cannot be found.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeImagesResult'
      parameters:
        - name: ExecutableBy
          in: query
          required: false
          description: '<p>Scopes the images by users with explicit launch permissions. Specify an Amazon Web Services account ID, <code>self</code> (the sender of the request), or <code>all</code> (public AMIs).</p> <ul> <li> <p>If you specify an Amazon Web Services account ID that is not your own, only AMIs shared with that specific Amazon Web Services account ID are returned. However, AMIs that are shared with the account’s organization or organizational unit (OU) are not returned.</p> </li> <li> <p>If you specify <code>self</code> or your own Amazon Web Services account ID, AMIs shared with your account are returned. In addition, AMIs that are shared with the organization or OU of which you are member are also returned. </p> </li> <li> <p>If you specify <code>all</code>, all public AMIs are returned.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: ExecutableBy
        - name: Filter
          in: query
          required: false
          description: '<p>The filters.</p> <ul> <li> <p> <code>architecture</code> - The image architecture (<code>i386</code> | <code>x86_64</code> | <code>arm64</code>).</p> </li> <li> <p> <code>block-device-mapping.delete-on-termination</code> - A Boolean value that indicates whether the Amazon EBS volume is deleted on instance termination.</p> </li> <li> <p> <code>block-device-mapping.device-name</code> - The device name specified in the block device mapping (for example, <code>/dev/sdh</code> or <code>xvdh</code>).</p> </li> <li> <p> <code>block-device-mapping.snapshot-id</code> - The ID of the snapshot used for the Amazon EBS volume.</p> </li> <li> <p> <code>block-device-mapping.volume-size</code> - The volume size of the Amazon EBS volume, in GiB.</p> </li> <li> <p> <code>block-device-mapping.volume-type</code> - The volume type of the Amazon EBS volume (<code>io1</code> | <code>io2</code> | <code>gp2</code> | <code>gp3</code> | <code>sc1 </code>| <code>st1</code> | <code>standard</code>).</p> </li> <li> <p> <code>block-device-mapping.encrypted</code> - A Boolean that indicates whether the Amazon EBS volume is encrypted.</p> </li> <li> <p> <code>creation-date</code> - The time when the image was created, in the ISO 8601 format in the UTC time zone (YYYY-MM-DDThh:mm:ss.sssZ), for example, <code>2021-09-29T11:04:43.305Z</code>. You can use a wildcard (<code>*</code>), for example, <code>2021-09-29T*</code>, which matches an entire day.</p> </li> <li> <p> <code>description</code> - The description of the image (provided during image creation).</p> </li> <li> <p> <code>ena-support</code> - A Boolean that indicates whether enhanced networking with ENA is enabled.</p> </li> <li> <p> <code>hypervisor</code> - The hypervisor type (<code>ovm</code> | <code>xen</code>).</p> </li> <li> <p> <code>image-id</code> - The ID of the image.</p> </li> <li> <p> <code>image-type</code> - The image type (<code>machine</code> | <code>kernel</code> | <code>ramdisk</code>).</p> </li> <li> <p> <code>is-public</code> - A Boolean that indicates whether the image is public.</p> </li> <li> <p> <code>kernel-id</code> - The kernel ID.</p> </li> <li> <p> <code>manifest-location</code> - The location of the image manifest.</p> </li> <li> <p> <code>name</code> - The name of the AMI (provided during image creation).</p> </li> <li> <p> <code>owner-alias</code> - The owner alias (<code>amazon</code> | <code>aws-marketplace</code>). The valid aliases are defined in an Amazon-maintained list. This is not the Amazon Web Services account alias that can be set using the IAM console. We recommend that you use the <b>Owner</b> request parameter instead of this filter.</p> </li> <li> <p> <code>owner-id</code> - The Amazon Web Services account ID of the owner. We recommend that you use the <b>Owner</b> request parameter instead of this filter.</p> </li> <li> <p> <code>platform</code> - The platform. To only list Windows-based AMIs, use <code>windows</code>.</p> </li> <li> <p> <code>product-code</code> - The product code.</p> </li> <li> <p> <code>product-code.type</code> - The type of the product code (<code>marketplace</code>).</p> </li> <li> <p> <code>ramdisk-id</code> - The RAM disk ID.</p> </li> <li> <p> <code>root-device-name</code> - The device name of the root device volume (for example, <code>/dev/sda1</code>).</p> </li> <li> <p> <code>root-device-type</code> - The type of the root device volume (<code>ebs</code> | <code>instance-store</code>).</p> </li> <li> <p> <code>state</code> - The state of the image (<code>available</code> | <code>pending</code> | <code>failed</code>).</p> </li> <li> <p> <code>state-reason-code</code> - The reason code for the state change.</p> </li> <li> <p> <code>state-reason-message</code> - The message for the state change.</p> </li> <li> <p> <code>sriov-net-support</code> - A value of <code>simple</code> indicates that enhanced networking with the Intel 82599 VF interface is enabled.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>virtualization-type</code> - The virtualization type (<code>paravirtual</code> | <code>hvm</code>).</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: ImageId
          in: query
          required: false
          description: '<p>The image IDs.</p> <p>Default: Describes all images available to you.</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/ImageId'
                - xml:
                    name: ImageId
        - name: Owner
          in: query
          required: false
          description: 'Scopes the results to images with the specified owners. You can specify a combination of Amazon Web Services account IDs, <code>self</code>, <code>amazon</code>, and <code>aws-marketplace</code>. If you omit this parameter, the results include all images for which you have launch permissions, regardless of ownership.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: Owner
        - name: IncludeDeprecated
          in: query
          required: false
          description: '<p>If <code>true</code>, all deprecated AMIs are included in the response. If <code>false</code>, no deprecated AMIs are included in the response. If no value is specified, the default value is <code>false</code>.</p> <note> <p>If you are the AMI owner, all deprecated AMIs appear in the response regardless of the value (<code>true</code> or <code>false</code>) that you set for this parameter.</p> </note>'
          schema:
            type: boolean
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeImages
      operationId: POST_DescribeImages
      description: '<p>Describes the specified images (AMIs, AKIs, and ARIs) available to you or all of the images available to you.</p> <p>The images available to you include public images, private images that you own, and private images owned by other Amazon Web Services accounts for which you have explicit launch permissions.</p> <p>Recently deregistered images appear in the returned results for a short interval and then return empty results. After all instances that reference a deregistered AMI are terminated, specifying the ID of the image will eventually return an error indicating that the AMI ID cannot be found.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeImagesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeImagesRequest'
      parameters: []
  /?Action=DescribeImportImageTasks&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeImportImageTasks
      operationId: GET_DescribeImportImageTasks
      description: Displays details about an import virtual machine or import snapshot tasks that are already created.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeImportImageTasksResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: Filters
          in: query
          required: false
          description: 'Filter tasks using the <code>task-state</code> filter and one of the following values: <code>active</code>, <code>completed</code>, <code>deleting</code>, or <code>deleted</code>.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: ImportTaskId
          in: query
          required: false
          description: The IDs of the import image tasks.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/ImportImageTaskId'
                - xml:
                    name: ImportTaskId
        - name: MaxResults
          in: query
          required: false
          description: The maximum number of results to return in a single call.
          schema:
            type: integer
        - name: NextToken
          in: query
          required: false
          description: A token that indicates the next page of results.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeImportImageTasks
      operationId: POST_DescribeImportImageTasks
      description: Displays details about an import virtual machine or import snapshot tasks that are already created.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeImportImageTasksResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeImportImageTasksRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeImportSnapshotTasks&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeImportSnapshotTasks
      operationId: GET_DescribeImportSnapshotTasks
      description: Describes your import snapshot tasks.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeImportSnapshotTasksResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: Filters
          in: query
          required: false
          description: The filters.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: ImportTaskId
          in: query
          required: false
          description: A list of import snapshot task IDs.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/ImportSnapshotTaskId'
                - xml:
                    name: ImportTaskId
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.'
          schema:
            type: integer
        - name: NextToken
          in: query
          required: false
          description: A token that indicates the next page of results.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeImportSnapshotTasks
      operationId: POST_DescribeImportSnapshotTasks
      description: Describes your import snapshot tasks.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeImportSnapshotTasksResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeImportSnapshotTasksRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeInstanceAttribute&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeInstanceAttribute
      operationId: GET_DescribeInstanceAttribute
      description: 'Describes the specified attribute of the specified instance. You can specify only one attribute at a time. Valid attribute values are: <code>instanceType</code> | <code>kernel</code> | <code>ramdisk</code> | <code>userData</code> | <code>disableApiTermination</code> | <code>instanceInitiatedShutdownBehavior</code> | <code>rootDeviceName</code> | <code>blockDeviceMapping</code> | <code>productCodes</code> | <code>sourceDestCheck</code> | <code>groupSet</code> | <code>ebsOptimized</code> | <code>sriovNetSupport</code> '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InstanceAttribute'
      parameters:
        - name: Attribute
          in: query
          required: true
          description: '<p>The instance attribute.</p> <p>Note: The <code>enaSupport</code> attribute is not supported at this time.</p>'
          schema:
            type: string
            enum:
              - instanceType
              - kernel
              - ramdisk
              - userData
              - disableApiTermination
              - instanceInitiatedShutdownBehavior
              - rootDeviceName
              - blockDeviceMapping
              - productCodes
              - sourceDestCheck
              - groupSet
              - ebsOptimized
              - sriovNetSupport
              - enaSupport
              - enclaveOptions
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: InstanceId
          in: query
          required: true
          description: The ID of the instance.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeInstanceAttribute
      operationId: POST_DescribeInstanceAttribute
      description: 'Describes the specified attribute of the specified instance. You can specify only one attribute at a time. Valid attribute values are: <code>instanceType</code> | <code>kernel</code> | <code>ramdisk</code> | <code>userData</code> | <code>disableApiTermination</code> | <code>instanceInitiatedShutdownBehavior</code> | <code>rootDeviceName</code> | <code>blockDeviceMapping</code> | <code>productCodes</code> | <code>sourceDestCheck</code> | <code>groupSet</code> | <code>ebsOptimized</code> | <code>sriovNetSupport</code> '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InstanceAttribute'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeInstanceAttributeRequest'
      parameters: []
  /?Action=DescribeInstanceCreditSpecifications&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeInstanceCreditSpecifications
      operationId: GET_DescribeInstanceCreditSpecifications
      description: '<p>Describes the credit option for CPU usage of the specified burstable performance instances. The credit options are <code>standard</code> and <code>unlimited</code>.</p> <p>If you do not specify an instance ID, Amazon EC2 returns burstable performance instances with the <code>unlimited</code> credit option, as well as instances that were previously configured as T2, T3, and T3a with the <code>unlimited</code> credit option. For example, if you resize a T2 instance, while it is configured as <code>unlimited</code>, to an M4 instance, Amazon EC2 returns the M4 instance.</p> <p>If you specify one or more instance IDs, Amazon EC2 returns the credit option (<code>standard</code> or <code>unlimited</code>) of those instances. If you specify an instance ID that is not valid, such as an instance that is not a burstable performance instance, an error is returned.</p> <p>Recently terminated instances might appear in the returned results. This interval is usually less than one hour.</p> <p>If an Availability Zone is experiencing a service disruption and you specify instance IDs in the affected zone, or do not specify any instance IDs at all, the call fails. If you specify only instance IDs in an unaffected zone, the call works normally.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html">Burstable performance instances</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeInstanceCreditSpecificationsResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: Filter
          in: query
          required: false
          description: <p>The filters.</p> <ul> <li> <p> <code>instance-id</code> - The ID of the instance.</p> </li> </ul>
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: InstanceId
          in: query
          required: false
          description: '<p>The instance IDs.</p> <p>Default: Describes all your instances.</p> <p>Constraints: Maximum 1000 explicitly specified instance IDs.</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/InstanceId'
                - xml:
                    name: InstanceId
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value. This value can be between 5 and 1000. You cannot specify this parameter and the instance IDs parameter in the same call.'
          schema:
            type: integer
            minimum: 5
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token to retrieve the next page of results.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeInstanceCreditSpecifications
      operationId: POST_DescribeInstanceCreditSpecifications
      description: '<p>Describes the credit option for CPU usage of the specified burstable performance instances. The credit options are <code>standard</code> and <code>unlimited</code>.</p> <p>If you do not specify an instance ID, Amazon EC2 returns burstable performance instances with the <code>unlimited</code> credit option, as well as instances that were previously configured as T2, T3, and T3a with the <code>unlimited</code> credit option. For example, if you resize a T2 instance, while it is configured as <code>unlimited</code>, to an M4 instance, Amazon EC2 returns the M4 instance.</p> <p>If you specify one or more instance IDs, Amazon EC2 returns the credit option (<code>standard</code> or <code>unlimited</code>) of those instances. If you specify an instance ID that is not valid, such as an instance that is not a burstable performance instance, an error is returned.</p> <p>Recently terminated instances might appear in the returned results. This interval is usually less than one hour.</p> <p>If an Availability Zone is experiencing a service disruption and you specify instance IDs in the affected zone, or do not specify any instance IDs at all, the call fails. If you specify only instance IDs in an unaffected zone, the call works normally.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html">Burstable performance instances</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeInstanceCreditSpecificationsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeInstanceCreditSpecificationsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeInstanceEventNotificationAttributes&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeInstanceEventNotificationAttributes
      operationId: GET_DescribeInstanceEventNotificationAttributes
      description: Describes the tag keys that are registered to appear in scheduled event notifications for resources in the current Region.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeInstanceEventNotificationAttributesResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeInstanceEventNotificationAttributes
      operationId: POST_DescribeInstanceEventNotificationAttributes
      description: Describes the tag keys that are registered to appear in scheduled event notifications for resources in the current Region.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeInstanceEventNotificationAttributesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeInstanceEventNotificationAttributesRequest'
      parameters: []
  /?Action=DescribeInstanceEventWindows&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeInstanceEventWindows
      operationId: GET_DescribeInstanceEventWindows
      description: '<p>Describes the specified event windows or all event windows.</p> <p>If you specify event window IDs, the output includes information for only the specified event windows. If you specify filters, the output includes information for only those event windows that meet the filter criteria. If you do not specify event windows IDs or filters, the output includes information for all event windows, which can affect performance. We recommend that you use pagination to ensure that the operation returns quickly and successfully. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/event-windows.html">Define event windows for scheduled events</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeInstanceEventWindowsResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: InstanceEventWindowId
          in: query
          required: false
          description: The IDs of the event windows.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/InstanceEventWindowId'
                - xml:
                    name: InstanceEventWindowId
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters.</p> <ul> <li> <p> <code>dedicated-host-id</code> - The event windows associated with the specified Dedicated Host ID.</p> </li> <li> <p> <code>event-window-name</code> - The event windows associated with the specified names. </p> </li> <li> <p> <code>instance-id</code> - The event windows associated with the specified instance ID.</p> </li> <li> <p> <code>instance-tag</code> - The event windows associated with the specified tag and value.</p> </li> <li> <p> <code>instance-tag-key</code> - The event windows associated with the specified tag key, regardless of the value.</p> </li> <li> <p> <code>instance-tag-value</code> - The event windows associated with the specified tag value, regardless of the key.</p> </li> <li> <p> <code>tag:&lt;key&gt;</code> - The key/value combination of a tag assigned to the event window. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>CMX</code>, specify <code>tag:Owner</code> for the filter name and <code>CMX</code> for the filter value. </p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the event window. Use this filter to find all event windows that have a tag with a specific key, regardless of the tag value. </p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the event window. Use this filter to find all event windows that have a tag with a specific value, regardless of the tag key. </p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value. This value can be between 20 and 500. You cannot specify this parameter and the event window IDs parameter in the same call.'
          schema:
            type: integer
            minimum: 20
            maximum: 500
        - name: NextToken
          in: query
          required: false
          description: The token to request the next page of results.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeInstanceEventWindows
      operationId: POST_DescribeInstanceEventWindows
      description: '<p>Describes the specified event windows or all event windows.</p> <p>If you specify event window IDs, the output includes information for only the specified event windows. If you specify filters, the output includes information for only those event windows that meet the filter criteria. If you do not specify event windows IDs or filters, the output includes information for all event windows, which can affect performance. We recommend that you use pagination to ensure that the operation returns quickly and successfully. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/event-windows.html">Define event windows for scheduled events</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeInstanceEventWindowsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeInstanceEventWindowsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeInstanceStatus&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeInstanceStatus
      operationId: GET_DescribeInstanceStatus
      description: '<p>Describes the status of the specified instances or all of your instances. By default, only running instances are described, unless you specifically indicate to return the status of all instances.</p> <p>Instance status includes the following components:</p> <ul> <li> <p> <b>Status checks</b> - Amazon EC2 performs status checks on running EC2 instances to identify hardware and software issues. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-system-instance-status-check.html">Status checks for your instances</a> and <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstances.html">Troubleshoot instances with failed status checks</a> in the <i>Amazon EC2 User Guide</i>.</p> </li> <li> <p> <b>Scheduled events</b> - Amazon EC2 can schedule events (such as reboot, stop, or terminate) for your instances related to hardware issues, software updates, or system maintenance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-instances-status-check_sched.html">Scheduled events for your instances</a> in the <i>Amazon EC2 User Guide</i>.</p> </li> <li> <p> <b>Instance state</b> - You can manage your instances from the moment you launch them through their termination. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html">Instance lifecycle</a> in the <i>Amazon EC2 User Guide</i>.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeInstanceStatusResult'
      parameters:
        - name: Filter
          in: query
          required: false
          description: '<p>The filters.</p> <ul> <li> <p> <code>availability-zone</code> - The Availability Zone of the instance.</p> </li> <li> <p> <code>event.code</code> - The code for the scheduled event (<code>instance-reboot</code> | <code>system-reboot</code> | <code>system-maintenance</code> | <code>instance-retirement</code> | <code>instance-stop</code>).</p> </li> <li> <p> <code>event.description</code> - A description of the event.</p> </li> <li> <p> <code>event.instance-event-id</code> - The ID of the event whose date and time you are modifying.</p> </li> <li> <p> <code>event.not-after</code> - The latest end time for the scheduled event (for example, <code>2014-09-15T17:15:20.000Z</code>).</p> </li> <li> <p> <code>event.not-before</code> - The earliest start time for the scheduled event (for example, <code>2014-09-15T17:15:20.000Z</code>).</p> </li> <li> <p> <code>event.not-before-deadline</code> - The deadline for starting the event (for example, <code>2014-09-15T17:15:20.000Z</code>).</p> </li> <li> <p> <code>instance-state-code</code> - The code for the instance state, as a 16-bit unsigned integer. The high byte is used for internal purposes and should be ignored. The low byte is set based on the state represented. The valid values are 0 (pending), 16 (running), 32 (shutting-down), 48 (terminated), 64 (stopping), and 80 (stopped).</p> </li> <li> <p> <code>instance-state-name</code> - The state of the instance (<code>pending</code> | <code>running</code> | <code>shutting-down</code> | <code>terminated</code> | <code>stopping</code> | <code>stopped</code>).</p> </li> <li> <p> <code>instance-status.reachability</code> - Filters on instance status where the name is <code>reachability</code> (<code>passed</code> | <code>failed</code> | <code>initializing</code> | <code>insufficient-data</code>).</p> </li> <li> <p> <code>instance-status.status</code> - The status of the instance (<code>ok</code> | <code>impaired</code> | <code>initializing</code> | <code>insufficient-data</code> | <code>not-applicable</code>).</p> </li> <li> <p> <code>system-status.reachability</code> - Filters on system status where the name is <code>reachability</code> (<code>passed</code> | <code>failed</code> | <code>initializing</code> | <code>insufficient-data</code>).</p> </li> <li> <p> <code>system-status.status</code> - The system status of the instance (<code>ok</code> | <code>impaired</code> | <code>initializing</code> | <code>insufficient-data</code> | <code>not-applicable</code>).</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: InstanceId
          in: query
          required: false
          description: '<p>The instance IDs.</p> <p>Default: Describes all your instances.</p> <p>Constraints: Maximum 100 explicitly specified instance IDs.</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/InstanceId'
                - xml:
                    name: InstanceId
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value. This value can be between 5 and 1000. You cannot specify this parameter and the instance IDs parameter in the same call.'
          schema:
            type: integer
        - name: NextToken
          in: query
          required: false
          description: The token to retrieve the next page of results.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: IncludeAllInstances
          in: query
          required: false
          description: '<p>When <code>true</code>, includes the health status for all instances. When <code>false</code>, includes the health status for running instances only.</p> <p>Default: <code>false</code> </p>'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeInstanceStatus
      operationId: POST_DescribeInstanceStatus
      description: '<p>Describes the status of the specified instances or all of your instances. By default, only running instances are described, unless you specifically indicate to return the status of all instances.</p> <p>Instance status includes the following components:</p> <ul> <li> <p> <b>Status checks</b> - Amazon EC2 performs status checks on running EC2 instances to identify hardware and software issues. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-system-instance-status-check.html">Status checks for your instances</a> and <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstances.html">Troubleshoot instances with failed status checks</a> in the <i>Amazon EC2 User Guide</i>.</p> </li> <li> <p> <b>Scheduled events</b> - Amazon EC2 can schedule events (such as reboot, stop, or terminate) for your instances related to hardware issues, software updates, or system maintenance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-instances-status-check_sched.html">Scheduled events for your instances</a> in the <i>Amazon EC2 User Guide</i>.</p> </li> <li> <p> <b>Instance state</b> - You can manage your instances from the moment you launch them through their termination. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html">Instance lifecycle</a> in the <i>Amazon EC2 User Guide</i>.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeInstanceStatusResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeInstanceStatusRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeInstanceTypeOfferings&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeInstanceTypeOfferings
      operationId: GET_DescribeInstanceTypeOfferings
      description: 'Returns a list of all instance types offered. The results can be filtered by location (Region or Availability Zone). If no location is specified, the instance types offered in the current Region are returned.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeInstanceTypeOfferingsResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: LocationType
          in: query
          required: false
          description: The location type.
          schema:
            type: string
            enum:
              - region
              - availability-zone
              - availability-zone-id
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters. Filter names and values are case-sensitive.</p> <ul> <li> <p> <code>location</code> - This depends on the location type. For example, if the location type is <code>region</code> (default), the location is the Region code (for example, <code>us-east-2</code>.)</p> </li> <li> <p> <code>instance-type</code> - The instance type. For example, <code>c5.2xlarge</code>.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the next token value.
          schema:
            type: integer
            minimum: 5
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token to retrieve the next page of results.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeInstanceTypeOfferings
      operationId: POST_DescribeInstanceTypeOfferings
      description: 'Returns a list of all instance types offered. The results can be filtered by location (Region or Availability Zone). If no location is specified, the instance types offered in the current Region are returned.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeInstanceTypeOfferingsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeInstanceTypeOfferingsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeInstanceTypes&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeInstanceTypes
      operationId: GET_DescribeInstanceTypes
      description: Describes the details of the instance types that are offered in a location. The results can be filtered by the attributes of the instance types.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeInstanceTypesResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: InstanceType
          in: query
          required: false
          description: 'The instance types. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance types</a> in the <i>Amazon EC2 User Guide</i>.'
          schema:
            type: array
            items:
              $ref: '#/components/schemas/InstanceType'
            minItems: 0
            maxItems: 100
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters. Filter names and values are case-sensitive.</p> <ul> <li> <p> <code>auto-recovery-supported</code> - Indicates whether auto recovery is supported (<code>true</code> | <code>false</code>).</p> </li> <li> <p> <code>bare-metal</code> - Indicates whether it is a bare metal instance type (<code>true</code> | <code>false</code>).</p> </li> <li> <p> <code>burstable-performance-supported</code> - Indicates whether it is a burstable performance instance type (<code>true</code> | <code>false</code>).</p> </li> <li> <p> <code>current-generation</code> - Indicates whether this instance type is the latest generation instance type of an instance family (<code>true</code> | <code>false</code>).</p> </li> <li> <p> <code>ebs-info.ebs-optimized-info.baseline-bandwidth-in-mbps</code> - The baseline bandwidth performance for an EBS-optimized instance type, in Mbps.</p> </li> <li> <p> <code>ebs-info.ebs-optimized-info.baseline-iops</code> - The baseline input/output storage operations per second for an EBS-optimized instance type.</p> </li> <li> <p> <code>ebs-info.ebs-optimized-info.baseline-throughput-in-mbps</code> - The baseline throughput performance for an EBS-optimized instance type, in MB/s.</p> </li> <li> <p> <code>ebs-info.ebs-optimized-info.maximum-bandwidth-in-mbps</code> - The maximum bandwidth performance for an EBS-optimized instance type, in Mbps.</p> </li> <li> <p> <code>ebs-info.ebs-optimized-info.maximum-iops</code> - The maximum input/output storage operations per second for an EBS-optimized instance type.</p> </li> <li> <p> <code>ebs-info.ebs-optimized-info.maximum-throughput-in-mbps</code> - The maximum throughput performance for an EBS-optimized instance type, in MB/s.</p> </li> <li> <p> <code>ebs-info.ebs-optimized-support</code> - Indicates whether the instance type is EBS-optimized (<code>supported</code> | <code>unsupported</code> | <code>default</code>).</p> </li> <li> <p> <code>ebs-info.encryption-support</code> - Indicates whether EBS encryption is supported (<code>supported</code> | <code>unsupported</code>).</p> </li> <li> <p> <code>ebs-info.nvme-support</code> - Indicates whether non-volatile memory express (NVMe) is supported for EBS volumes (<code>required</code> | <code>supported</code> | <code>unsupported</code>).</p> </li> <li> <p> <code>free-tier-eligible</code> - Indicates whether the instance type is eligible to use in the free tier (<code>true</code> | <code>false</code>).</p> </li> <li> <p> <code>hibernation-supported</code> - Indicates whether On-Demand hibernation is supported (<code>true</code> | <code>false</code>).</p> </li> <li> <p> <code>hypervisor</code> - The hypervisor (<code>nitro</code> | <code>xen</code>).</p> </li> <li> <p> <code>instance-storage-info.disk.count</code> - The number of local disks.</p> </li> <li> <p> <code>instance-storage-info.disk.size-in-gb</code> - The storage size of each instance storage disk, in GB.</p> </li> <li> <p> <code>instance-storage-info.disk.type</code> - The storage technology for the local instance storage disks (<code>hdd</code> | <code>ssd</code>).</p> </li> <li> <p> <code>instance-storage-info.encryption-support</code> - Indicates whether data is encrypted at rest (<code>required</code> | <code>supported</code> | <code>unsupported</code>).</p> </li> <li> <p> <code>instance-storage-info.nvme-support</code> - Indicates whether non-volatile memory express (NVMe) is supported for instance store (<code>required</code> | <code>supported</code> | <code>unsupported</code>).</p> </li> <li> <p> <code>instance-storage-info.total-size-in-gb</code> - The total amount of storage available from all local instance storage, in GB.</p> </li> <li> <p> <code>instance-storage-supported</code> - Indicates whether the instance type has local instance storage (<code>true</code> | <code>false</code>).</p> </li> <li> <p> <code>instance-type</code> - The instance type (for example <code>c5.2xlarge</code> or c5*).</p> </li> <li> <p> <code>memory-info.size-in-mib</code> - The memory size.</p> </li> <li> <p> <code>network-info.efa-info.maximum-efa-interfaces</code> - The maximum number of Elastic Fabric Adapters (EFAs) per instance.</p> </li> <li> <p> <code>network-info.efa-supported</code> - Indicates whether the instance type supports Elastic Fabric Adapter (EFA) (<code>true</code> | <code>false</code>).</p> </li> <li> <p> <code>network-info.ena-support</code> - Indicates whether Elastic Network Adapter (ENA) is supported or required (<code>required</code> | <code>supported</code> | <code>unsupported</code>).</p> </li> <li> <p> <code>network-info.encryption-in-transit-supported</code> - Indicates whether the instance type automatically encrypts in-transit traffic between instances (<code>true</code> | <code>false</code>).</p> </li> <li> <p> <code>network-info.ipv4-addresses-per-interface</code> - The maximum number of private IPv4 addresses per network interface.</p> </li> <li> <p> <code>network-info.ipv6-addresses-per-interface</code> - The maximum number of private IPv6 addresses per network interface.</p> </li> <li> <p> <code>network-info.ipv6-supported</code> - Indicates whether the instance type supports IPv6 (<code>true</code> | <code>false</code>).</p> </li> <li> <p> <code>network-info.maximum-network-cards</code> - The maximum number of network cards per instance.</p> </li> <li> <p> <code>network-info.maximum-network-interfaces</code> - The maximum number of network interfaces per instance.</p> </li> <li> <p> <code>network-info.network-performance</code> - The network performance (for example, "25 Gigabit").</p> </li> <li> <p> <code>processor-info.supported-architecture</code> - The CPU architecture (<code>arm64</code> | <code>i386</code> | <code>x86_64</code>).</p> </li> <li> <p> <code>processor-info.sustained-clock-speed-in-ghz</code> - The CPU clock speed, in GHz.</p> </li> <li> <p> <code>supported-boot-mode</code> - The boot mode (<code>legacy-bios</code> | <code>uefi</code>).</p> </li> <li> <p> <code>supported-root-device-type</code> - The root device type (<code>ebs</code> | <code>instance-store</code>).</p> </li> <li> <p> <code>supported-usage-class</code> - The usage class (<code>on-demand</code> | <code>spot</code>).</p> </li> <li> <p> <code>supported-virtualization-type</code> - The virtualization type (<code>hvm</code> | <code>paravirtual</code>).</p> </li> <li> <p> <code>vcpu-info.default-cores</code> - The default number of cores for the instance type.</p> </li> <li> <p> <code>vcpu-info.default-threads-per-core</code> - The default number of threads per core for the instance type.</p> </li> <li> <p> <code>vcpu-info.default-vcpus</code> - The default number of vCPUs for the instance type.</p> </li> <li> <p> <code>vcpu-info.valid-cores</code> - The number of cores that can be configured for the instance type.</p> </li> <li> <p> <code>vcpu-info.valid-threads-per-core</code> - The number of threads per core that can be configured for the instance type. For example, "1" or "1,2".</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the next token value.
          schema:
            type: integer
            minimum: 5
            maximum: 100
        - name: NextToken
          in: query
          required: false
          description: The token to retrieve the next page of results.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeInstanceTypes
      operationId: POST_DescribeInstanceTypes
      description: Describes the details of the instance types that are offered in a location. The results can be filtered by the attributes of the instance types.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeInstanceTypesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeInstanceTypesRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeInstances&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeInstances
      operationId: GET_DescribeInstances
      description: '<p>Describes the specified instances or all instances.</p> <p>If you specify instance IDs, the output includes information for only the specified instances. If you specify filters, the output includes information for only those instances that meet the filter criteria. If you do not specify instance IDs or filters, the output includes information for all instances, which can affect performance. We recommend that you use pagination to ensure that the operation returns quickly and successfully.</p> <p>If you specify an instance ID that is not valid, an error is returned. If you specify an instance that you do not own, it is not included in the output.</p> <p>Recently terminated instances might appear in the returned results. This interval is usually less than one hour.</p> <p>If you describe instances in the rare case where an Availability Zone is experiencing a service disruption and you specify instance IDs that are in the affected zone, or do not specify any instance IDs at all, the call fails. If you describe instances and specify only instance IDs that are in an unaffected zone, the call works normally.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeInstancesResult'
      parameters:
        - name: Filter
          in: query
          required: false
          description: '<p>The filters.</p> <ul> <li> <p> <code>affinity</code> - The affinity setting for an instance running on a Dedicated Host (<code>default</code> | <code>host</code>).</p> </li> <li> <p> <code>architecture</code> - The instance architecture (<code>i386</code> | <code>x86_64</code> | <code>arm64</code>).</p> </li> <li> <p> <code>availability-zone</code> - The Availability Zone of the instance.</p> </li> <li> <p> <code>block-device-mapping.attach-time</code> - The attach time for an EBS volume mapped to the instance, for example, <code>2010-09-15T17:15:20.000Z</code>.</p> </li> <li> <p> <code>block-device-mapping.delete-on-termination</code> - A Boolean that indicates whether the EBS volume is deleted on instance termination.</p> </li> <li> <p> <code>block-device-mapping.device-name</code> - The device name specified in the block device mapping (for example, <code>/dev/sdh</code> or <code>xvdh</code>).</p> </li> <li> <p> <code>block-device-mapping.status</code> - The status for the EBS volume (<code>attaching</code> | <code>attached</code> | <code>detaching</code> | <code>detached</code>).</p> </li> <li> <p> <code>block-device-mapping.volume-id</code> - The volume ID of the EBS volume.</p> </li> <li> <p> <code>capacity-reservation-id</code> - The ID of the Capacity Reservation into which the instance was launched.</p> </li> <li> <p> <code>client-token</code> - The idempotency token you provided when you launched the instance.</p> </li> <li> <p> <code>dns-name</code> - The public DNS name of the instance.</p> </li> <li> <p> <code>group-id</code> - The ID of the security group for the instance. EC2-Classic only.</p> </li> <li> <p> <code>group-name</code> - The name of the security group for the instance. EC2-Classic only.</p> </li> <li> <p> <code>hibernation-options.configured</code> - A Boolean that indicates whether the instance is enabled for hibernation. A value of <code>true</code> means that the instance is enabled for hibernation. </p> </li> <li> <p> <code>host-id</code> - The ID of the Dedicated Host on which the instance is running, if applicable.</p> </li> <li> <p> <code>hypervisor</code> - The hypervisor type of the instance (<code>ovm</code> | <code>xen</code>). The value <code>xen</code> is used for both Xen and Nitro hypervisors.</p> </li> <li> <p> <code>iam-instance-profile.arn</code> - The instance profile associated with the instance. Specified as an ARN.</p> </li> <li> <p> <code>image-id</code> - The ID of the image used to launch the instance.</p> </li> <li> <p> <code>instance-id</code> - The ID of the instance.</p> </li> <li> <p> <code>instance-lifecycle</code> - Indicates whether this is a Spot Instance or a Scheduled Instance (<code>spot</code> | <code>scheduled</code>).</p> </li> <li> <p> <code>instance-state-code</code> - The state of the instance, as a 16-bit unsigned integer. The high byte is used for internal purposes and should be ignored. The low byte is set based on the state represented. The valid values are: 0 (pending), 16 (running), 32 (shutting-down), 48 (terminated), 64 (stopping), and 80 (stopped).</p> </li> <li> <p> <code>instance-state-name</code> - The state of the instance (<code>pending</code> | <code>running</code> | <code>shutting-down</code> | <code>terminated</code> | <code>stopping</code> | <code>stopped</code>).</p> </li> <li> <p> <code>instance-type</code> - The type of instance (for example, <code>t2.micro</code>).</p> </li> <li> <p> <code>instance.group-id</code> - The ID of the security group for the instance. </p> </li> <li> <p> <code>instance.group-name</code> - The name of the security group for the instance. </p> </li> <li> <p> <code>ip-address</code> - The public IPv4 address of the instance.</p> </li> <li> <p> <code>kernel-id</code> - The kernel ID.</p> </li> <li> <p> <code>key-name</code> - The name of the key pair used when the instance was launched.</p> </li> <li> <p> <code>launch-index</code> - When launching multiple instances, this is the index for the instance in the launch group (for example, 0, 1, 2, and so on). </p> </li> <li> <p> <code>launch-time</code> - The time when the instance was launched, in the ISO 8601 format in the UTC time zone (YYYY-MM-DDThh:mm:ss.sssZ), for example, <code>2021-09-29T11:04:43.305Z</code>. You can use a wildcard (<code>*</code>), for example, <code>2021-09-29T*</code>, which matches an entire day.</p> </li> <li> <p> <code>metadata-options.http-tokens</code> - The metadata request authorization state (<code>optional</code> | <code>required</code>)</p> </li> <li> <p> <code>metadata-options.http-put-response-hop-limit</code> - The http metadata request put response hop limit (integer, possible values <code>1</code> to <code>64</code>)</p> </li> <li> <p> <code>metadata-options.http-endpoint</code> - Enable or disable metadata access on http endpoint (<code>enabled</code> | <code>disabled</code>)</p> </li> <li> <p> <code>monitoring-state</code> - Indicates whether detailed monitoring is enabled (<code>disabled</code> | <code>enabled</code>).</p> </li> <li> <p> <code>network-interface.addresses.private-ip-address</code> - The private IPv4 address associated with the network interface.</p> </li> <li> <p> <code>network-interface.addresses.primary</code> - Specifies whether the IPv4 address of the network interface is the primary private IPv4 address.</p> </li> <li> <p> <code>network-interface.addresses.association.public-ip</code> - The ID of the association of an Elastic IP address (IPv4) with a network interface.</p> </li> <li> <p> <code>network-interface.addresses.association.ip-owner-id</code> - The owner ID of the private IPv4 address associated with the network interface.</p> </li> <li> <p> <code>network-interface.association.public-ip</code> - The address of the Elastic IP address (IPv4) bound to the network interface.</p> </li> <li> <p> <code>network-interface.association.ip-owner-id</code> - The owner of the Elastic IP address (IPv4) associated with the network interface.</p> </li> <li> <p> <code>network-interface.association.allocation-id</code> - The allocation ID returned when you allocated the Elastic IP address (IPv4) for your network interface.</p> </li> <li> <p> <code>network-interface.association.association-id</code> - The association ID returned when the network interface was associated with an IPv4 address.</p> </li> <li> <p> <code>network-interface.attachment.attachment-id</code> - The ID of the interface attachment.</p> </li> <li> <p> <code>network-interface.attachment.instance-id</code> - The ID of the instance to which the network interface is attached.</p> </li> <li> <p> <code>network-interface.attachment.instance-owner-id</code> - The owner ID of the instance to which the network interface is attached.</p> </li> <li> <p> <code>network-interface.attachment.device-index</code> - The device index to which the network interface is attached.</p> </li> <li> <p> <code>network-interface.attachment.status</code> - The status of the attachment (<code>attaching</code> | <code>attached</code> | <code>detaching</code> | <code>detached</code>).</p> </li> <li> <p> <code>network-interface.attachment.attach-time</code> - The time that the network interface was attached to an instance.</p> </li> <li> <p> <code>network-interface.attachment.delete-on-termination</code> - Specifies whether the attachment is deleted when an instance is terminated.</p> </li> <li> <p> <code>network-interface.availability-zone</code> - The Availability Zone for the network interface.</p> </li> <li> <p> <code>network-interface.description</code> - The description of the network interface.</p> </li> <li> <p> <code>network-interface.group-id</code> - The ID of a security group associated with the network interface.</p> </li> <li> <p> <code>network-interface.group-name</code> - The name of a security group associated with the network interface.</p> </li> <li> <p> <code>network-interface.ipv6-addresses.ipv6-address</code> - The IPv6 address associated with the network interface.</p> </li> <li> <p> <code>network-interface.mac-address</code> - The MAC address of the network interface.</p> </li> <li> <p> <code>network-interface.network-interface-id</code> - The ID of the network interface.</p> </li> <li> <p> <code>network-interface.owner-id</code> - The ID of the owner of the network interface.</p> </li> <li> <p> <code>network-interface.private-dns-name</code> - The private DNS name of the network interface.</p> </li> <li> <p> <code>network-interface.requester-id</code> - The requester ID for the network interface.</p> </li> <li> <p> <code>network-interface.requester-managed</code> - Indicates whether the network interface is being managed by Amazon Web Services.</p> </li> <li> <p> <code>network-interface.status</code> - The status of the network interface (<code>available</code>) | <code>in-use</code>).</p> </li> <li> <p> <code>network-interface.source-dest-check</code> - Whether the network interface performs source/destination checking. A value of <code>true</code> means that checking is enabled, and <code>false</code> means that checking is disabled. The value must be <code>false</code> for the network interface to perform network address translation (NAT) in your VPC.</p> </li> <li> <p> <code>network-interface.subnet-id</code> - The ID of the subnet for the network interface.</p> </li> <li> <p> <code>network-interface.vpc-id</code> - The ID of the VPC for the network interface.</p> </li> <li> <p> <code>outpost-arn</code> - The Amazon Resource Name (ARN) of the Outpost.</p> </li> <li> <p> <code>owner-id</code> - The Amazon Web Services account ID of the instance owner.</p> </li> <li> <p> <code>placement-group-name</code> - The name of the placement group for the instance.</p> </li> <li> <p> <code>placement-partition-number</code> - The partition in which the instance is located.</p> </li> <li> <p> <code>platform</code> - The platform. To list only Windows instances, use <code>windows</code>.</p> </li> <li> <p> <code>private-dns-name</code> - The private IPv4 DNS name of the instance.</p> </li> <li> <p> <code>private-ip-address</code> - The private IPv4 address of the instance.</p> </li> <li> <p> <code>product-code</code> - The product code associated with the AMI used to launch the instance.</p> </li> <li> <p> <code>product-code.type</code> - The type of product code (<code>devpay</code> | <code>marketplace</code>).</p> </li> <li> <p> <code>ramdisk-id</code> - The RAM disk ID.</p> </li> <li> <p> <code>reason</code> - The reason for the current state of the instance (for example, shows "User Initiated [date]" when you stop or terminate the instance). Similar to the state-reason-code filter.</p> </li> <li> <p> <code>requester-id</code> - The ID of the entity that launched the instance on your behalf (for example, Amazon Web Services Management Console, Auto Scaling, and so on).</p> </li> <li> <p> <code>reservation-id</code> - The ID of the instance''s reservation. A reservation ID is created any time you launch an instance. A reservation ID has a one-to-one relationship with an instance launch request, but can be associated with more than one instance if you launch multiple instances using the same launch request. For example, if you launch one instance, you get one reservation ID. If you launch ten instances using the same launch request, you also get one reservation ID.</p> </li> <li> <p> <code>root-device-name</code> - The device name of the root device volume (for example, <code>/dev/sda1</code>).</p> </li> <li> <p> <code>root-device-type</code> - The type of the root device volume (<code>ebs</code> | <code>instance-store</code>).</p> </li> <li> <p> <code>source-dest-check</code> - Indicates whether the instance performs source/destination checking. A value of <code>true</code> means that checking is enabled, and <code>false</code> means that checking is disabled. The value must be <code>false</code> for the instance to perform network address translation (NAT) in your VPC. </p> </li> <li> <p> <code>spot-instance-request-id</code> - The ID of the Spot Instance request.</p> </li> <li> <p> <code>state-reason-code</code> - The reason code for the state change.</p> </li> <li> <p> <code>state-reason-message</code> - A message that describes the state change.</p> </li> <li> <p> <code>subnet-id</code> - The ID of the subnet for the instance.</p> </li> <li> <p> <code>tag:&lt;key&gt;</code> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources that have a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>tenancy</code> - The tenancy of an instance (<code>dedicated</code> | <code>default</code> | <code>host</code>).</p> </li> <li> <p> <code>virtualization-type</code> - The virtualization type of the instance (<code>paravirtual</code> | <code>hvm</code>).</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC that the instance is running in.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: InstanceId
          in: query
          required: false
          description: '<p>The instance IDs.</p> <p>Default: Describes all your instances.</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/InstanceId'
                - xml:
                    name: InstanceId
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value. This value can be between 5 and 1000. You cannot specify this parameter and the instance IDs parameter in the same call.'
          schema:
            type: integer
        - name: NextToken
          in: query
          required: false
          description: The token to request the next page of results.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeInstances
      operationId: POST_DescribeInstances
      description: '<p>Describes the specified instances or all instances.</p> <p>If you specify instance IDs, the output includes information for only the specified instances. If you specify filters, the output includes information for only those instances that meet the filter criteria. If you do not specify instance IDs or filters, the output includes information for all instances, which can affect performance. We recommend that you use pagination to ensure that the operation returns quickly and successfully.</p> <p>If you specify an instance ID that is not valid, an error is returned. If you specify an instance that you do not own, it is not included in the output.</p> <p>Recently terminated instances might appear in the returned results. This interval is usually less than one hour.</p> <p>If you describe instances in the rare case where an Availability Zone is experiencing a service disruption and you specify instance IDs that are in the affected zone, or do not specify any instance IDs at all, the call fails. If you describe instances and specify only instance IDs that are in an unaffected zone, the call works normally.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeInstancesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeInstancesRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeInternetGateways&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeInternetGateways
      operationId: GET_DescribeInternetGateways
      description: Describes one or more of your internet gateways.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeInternetGatewaysResult'
      parameters:
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters.</p> <ul> <li> <p> <code>attachment.state</code> - The current state of the attachment between the gateway and the VPC (<code>available</code>). Present only if a VPC is attached.</p> </li> <li> <p> <code>attachment.vpc-id</code> - The ID of an attached VPC.</p> </li> <li> <p> <code>internet-gateway-id</code> - The ID of the Internet gateway.</p> </li> <li> <p> <code>owner-id</code> - The ID of the Amazon Web Services account that owns the internet gateway.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: InternetGatewayId
          in: query
          required: false
          description: '<p>One or more internet gateway IDs.</p> <p>Default: Describes all your internet gateways.</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/InternetGatewayId'
                - xml:
                    name: item
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 5
            maximum: 1000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeInternetGateways
      operationId: POST_DescribeInternetGateways
      description: Describes one or more of your internet gateways.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeInternetGatewaysResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeInternetGatewaysRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeIpamPools&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeIpamPools
      operationId: GET_DescribeIpamPools
      description: Get information about your IPAM pools.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeIpamPoolsResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: Filter
          in: query
          required: false
          description: 'One or more filters for the request. For more information about filtering, see <a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-filter.html">Filtering CLI output</a>.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: The maximum number of results to return in the request.
          schema:
            type: integer
            minimum: 5
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: IpamPoolId
          in: query
          required: false
          description: The IDs of the IPAM pools you would like information on.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeIpamPools
      operationId: POST_DescribeIpamPools
      description: Get information about your IPAM pools.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeIpamPoolsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeIpamPoolsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeIpamScopes&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeIpamScopes
      operationId: GET_DescribeIpamScopes
      description: Get information about your IPAM scopes.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeIpamScopesResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: Filter
          in: query
          required: false
          description: 'One or more filters for the request. For more information about filtering, see <a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-filter.html">Filtering CLI output</a>.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: The maximum number of results to return in the request.
          schema:
            type: integer
            minimum: 5
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: IpamScopeId
          in: query
          required: false
          description: The IDs of the scopes you want information on.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeIpamScopes
      operationId: POST_DescribeIpamScopes
      description: Get information about your IPAM scopes.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeIpamScopesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeIpamScopesRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeIpams&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeIpams
      operationId: GET_DescribeIpams
      description: '<p>Get information about your IPAM pools.</p> <p>For more information, see <a href="/vpc/latest/ipam/what-is-it-ipam.html">What is IPAM?</a> in the <i>Amazon VPC IPAM User Guide</i>. </p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeIpamsResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: Filter
          in: query
          required: false
          description: 'One or more filters for the request. For more information about filtering, see <a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-filter.html">Filtering CLI output</a>.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: The maximum number of results to return in the request.
          schema:
            type: integer
            minimum: 5
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: IpamId
          in: query
          required: false
          description: The IDs of the IPAMs you want information on.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeIpams
      operationId: POST_DescribeIpams
      description: '<p>Get information about your IPAM pools.</p> <p>For more information, see <a href="/vpc/latest/ipam/what-is-it-ipam.html">What is IPAM?</a> in the <i>Amazon VPC IPAM User Guide</i>. </p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeIpamsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeIpamsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeIpv6Pools&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeIpv6Pools
      operationId: GET_DescribeIpv6Pools
      description: Describes your IPv6 address pools.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeIpv6PoolsResult'
      parameters:
        - name: PoolId
          in: query
          required: false
          description: The IDs of the IPv6 address pools.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Ipv6PoolEc2Id'
                - xml:
                    name: item
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters.</p> <ul> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeIpv6Pools
      operationId: POST_DescribeIpv6Pools
      description: Describes your IPv6 address pools.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeIpv6PoolsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeIpv6PoolsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeKeyPairs&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeKeyPairs
      operationId: GET_DescribeKeyPairs
      description: '<p>Describes the specified key pairs or all of your key pairs.</p> <p>For more information about key pairs, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Amazon EC2 key pairs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeKeyPairsResult'
      parameters:
        - name: Filter
          in: query
          required: false
          description: '<p>The filters.</p> <ul> <li> <p> <code>key-pair-id</code> - The ID of the key pair.</p> </li> <li> <p> <code>fingerprint</code> - The fingerprint of the key pair.</p> </li> <li> <p> <code>key-name</code> - The name of the key pair.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: KeyName
          in: query
          required: false
          description: '<p>The key pair names.</p> <p>Default: Describes all of your key pairs.</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/KeyPairName'
                - xml:
                    name: KeyName
        - name: KeyPairId
          in: query
          required: false
          description: The IDs of the key pairs.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/KeyPairId'
                - xml:
                    name: KeyPairId
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: IncludePublicKey
          in: query
          required: false
          description: '<p>If <code>true</code>, the public key material is included in the response.</p> <p>Default: <code>false</code> </p>'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeKeyPairs
      operationId: POST_DescribeKeyPairs
      description: '<p>Describes the specified key pairs or all of your key pairs.</p> <p>For more information about key pairs, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Amazon EC2 key pairs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeKeyPairsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeKeyPairsRequest'
      parameters: []
  /?Action=DescribeLaunchTemplateVersions&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeLaunchTemplateVersions
      operationId: GET_DescribeLaunchTemplateVersions
      description: 'Describes one or more versions of a specified launch template. You can describe all versions, individual versions, or a range of versions. You can also describe all the latest versions or all the default versions of all the launch templates in your account.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeLaunchTemplateVersionsResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: LaunchTemplateId
          in: query
          required: false
          description: 'The ID of the launch template. To describe one or more versions of a specified launch template, you must specify either the launch template ID or the launch template name in the request. To describe all the latest or default launch template versions in your account, you must omit this parameter.'
          schema:
            type: string
        - name: LaunchTemplateName
          in: query
          required: false
          description: 'The name of the launch template. To describe one or more versions of a specified launch template, you must specify either the launch template ID or the launch template name in the request. To describe all the latest or default launch template versions in your account, you must omit this parameter.'
          schema:
            type: string
            pattern: '[a-zA-Z0-9\(\)\.\-/_]+'
            minLength: 3
            maxLength: 128
        - name: LaunchTemplateVersion
          in: query
          required: false
          description: '<p>One or more versions of the launch template. Valid values depend on whether you are describing a specified launch template (by ID or name) or all launch templates in your account.</p> <p>To describe one or more versions of a specified launch template, valid values are <code>$Latest</code>, <code>$Default</code>, and numbers.</p> <p>To describe all launch templates in your account that are defined as the latest version, the valid value is <code>$Latest</code>. To describe all launch templates in your account that are defined as the default version, the valid value is <code>$Default</code>. You can specify <code>$Latest</code> and <code>$Default</code> in the same call. You cannot specify numbers.</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: item
        - name: MinVersion
          in: query
          required: false
          description: The version number after which to describe launch template versions.
          schema:
            type: string
        - name: MaxVersion
          in: query
          required: false
          description: The version number up to which to describe launch template versions.
          schema:
            type: string
        - name: NextToken
          in: query
          required: false
          description: The token to request the next page of results.
          schema:
            type: string
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value. This value can be between 1 and 200.'
          schema:
            type: integer
        - name: Filter
          in: query
          required: false
          description: <p>One or more filters.</p> <ul> <li> <p> <code>create-time</code> - The time the launch template version was created.</p> </li> <li> <p> <code>ebs-optimized</code> - A boolean that indicates whether the instance is optimized for Amazon EBS I/O.</p> </li> <li> <p> <code>http-endpoint</code> - Indicates whether the HTTP metadata endpoint on your instances is enabled (<code>enabled</code> | <code>disabled</code>).</p> </li> <li> <p> <code>http-protocol-ipv4</code> - Indicates whether the IPv4 endpoint for the instance metadata service is enabled (<code>enabled</code> | <code>disabled</code>).</p> </li> <li> <p> <code>host-resource-group-arn</code> - The ARN of the host resource group in which to launch the instances.</p> </li> <li> <p> <code>http-tokens</code> - The state of token usage for your instance metadata requests (<code>optional</code> | <code>required</code>).</p> </li> <li> <p> <code>iam-instance-profile</code> - The ARN of the IAM instance profile.</p> </li> <li> <p> <code>image-id</code> - The ID of the AMI.</p> </li> <li> <p> <code>instance-type</code> - The instance type.</p> </li> <li> <p> <code>is-default-version</code> - A boolean that indicates whether the launch template version is the default version.</p> </li> <li> <p> <code>kernel-id</code> - The kernel ID.</p> </li> <li> <p> <code>license-configuration-arn</code> - The ARN of the license configuration.</p> </li> <li> <p> <code>network-card-index</code> - The index of the network card.</p> </li> <li> <p> <code>ram-disk-id</code> - The RAM disk ID.</p> </li> </ul>
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeLaunchTemplateVersions
      operationId: POST_DescribeLaunchTemplateVersions
      description: 'Describes one or more versions of a specified launch template. You can describe all versions, individual versions, or a range of versions. You can also describe all the latest versions or all the default versions of all the launch templates in your account.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeLaunchTemplateVersionsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeLaunchTemplateVersionsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeLaunchTemplates&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeLaunchTemplates
      operationId: GET_DescribeLaunchTemplates
      description: Describes one or more launch templates.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeLaunchTemplatesResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: LaunchTemplateId
          in: query
          required: false
          description: One or more launch template IDs.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/LaunchTemplateId'
                - xml:
                    name: item
        - name: LaunchTemplateName
          in: query
          required: false
          description: One or more launch template names.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/LaunchTemplateName'
                - xml:
                    name: item
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters.</p> <ul> <li> <p> <code>create-time</code> - The time the launch template was created.</p> </li> <li> <p> <code>launch-template-name</code> - The name of the launch template.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: NextToken
          in: query
          required: false
          description: The token to request the next page of results.
          schema:
            type: string
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value. This value can be between 1 and 200.'
          schema:
            type: integer
            minimum: 1
            maximum: 200
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeLaunchTemplates
      operationId: POST_DescribeLaunchTemplates
      description: Describes one or more launch templates.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeLaunchTemplatesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeLaunchTemplatesRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations
      operationId: GET_DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations
      description: Describes the associations between virtual interface groups and local gateway route tables.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsResult'
      parameters:
        - name: LocalGatewayRouteTableVirtualInterfaceGroupAssociationId
          in: query
          required: false
          description: The IDs of the associations.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/LocalGatewayRouteTableVirtualInterfaceGroupAssociationId'
                - xml:
                    name: item
        - name: Filter
          in: query
          required: false
          description: <p>One or more filters.</p> <ul> <li> <p> <code>local-gateway-id</code> - The ID of a local gateway.</p> </li> <li> <p> <code>local-gateway-route-table-arn</code> - The Amazon Resource Name (ARN) of the local gateway route table for the virtual interface group.</p> </li> <li> <p> <code>local-gateway-route-table-id</code> - The ID of the local gateway route table.</p> </li> <li> <p> <code>local-gateway-route-table-virtual-interface-group-association-id</code> - The ID of the association.</p> </li> <li> <p> <code>local-gateway-route-table-virtual-interface-group-id</code> - The ID of the virtual interface group.</p> </li> <li> <p> <code>owner-id</code> - The ID of the Amazon Web Services account that owns the local gateway virtual interface group association.</p> </li> <li> <p> <code>state</code> - The state of the association.</p> </li> </ul>
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 5
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations
      operationId: POST_DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations
      description: Describes the associations between virtual interface groups and local gateway route tables.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeLocalGatewayRouteTableVpcAssociations&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeLocalGatewayRouteTableVpcAssociations
      operationId: GET_DescribeLocalGatewayRouteTableVpcAssociations
      description: Describes the specified associations between VPCs and local gateway route tables.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeLocalGatewayRouteTableVpcAssociationsResult'
      parameters:
        - name: LocalGatewayRouteTableVpcAssociationId
          in: query
          required: false
          description: The IDs of the associations.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/LocalGatewayRouteTableVpcAssociationId'
                - xml:
                    name: item
        - name: Filter
          in: query
          required: false
          description: <p>One or more filters.</p> <ul> <li> <p> <code>local-gateway-id</code> - The ID of a local gateway.</p> </li> <li> <p> <code>local-gateway-route-table-arn</code> - The Amazon Resource Name (ARN) of the local gateway route table for the association.</p> </li> <li> <p> <code>local-gateway-route-table-id</code> - The ID of the local gateway route table.</p> </li> <li> <p> <code>local-gateway-route-table-vpc-association-id</code> - The ID of the association.</p> </li> <li> <p> <code>owner-id</code> - The ID of the Amazon Web Services account that owns the local gateway route table for the association.</p> </li> <li> <p> <code>state</code> - The state of the association.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC.</p> </li> </ul>
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 5
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeLocalGatewayRouteTableVpcAssociations
      operationId: POST_DescribeLocalGatewayRouteTableVpcAssociations
      description: Describes the specified associations between VPCs and local gateway route tables.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeLocalGatewayRouteTableVpcAssociationsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeLocalGatewayRouteTableVpcAssociationsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeLocalGatewayRouteTables&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeLocalGatewayRouteTables
      operationId: GET_DescribeLocalGatewayRouteTables
      description: 'Describes one or more local gateway route tables. By default, all local gateway route tables are described. Alternatively, you can filter the results.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeLocalGatewayRouteTablesResult'
      parameters:
        - name: LocalGatewayRouteTableId
          in: query
          required: false
          description: The IDs of the local gateway route tables.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/LocalGatewayRoutetableId'
                - xml:
                    name: item
        - name: Filter
          in: query
          required: false
          description: <p>One or more filters.</p> <ul> <li> <p> <code>local-gateway-id</code> - The ID of a local gateway.</p> </li> <li> <p> <code>local-gateway-route-table-arn</code> - The Amazon Resource Name (ARN) of the local gateway route table.</p> </li> <li> <p> <code>local-gateway-route-table-id</code> - The ID of a local gateway route table.</p> </li> <li> <p> <code>outpost-arn</code> - The Amazon Resource Name (ARN) of the Outpost.</p> </li> <li> <p> <code>owner-id</code> - The ID of the Amazon Web Services account that owns the local gateway route table.</p> </li> <li> <p> <code>state</code> - The state of the local gateway route table.</p> </li> </ul>
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 5
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeLocalGatewayRouteTables
      operationId: POST_DescribeLocalGatewayRouteTables
      description: 'Describes one or more local gateway route tables. By default, all local gateway route tables are described. Alternatively, you can filter the results.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeLocalGatewayRouteTablesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeLocalGatewayRouteTablesRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeLocalGatewayVirtualInterfaceGroups&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeLocalGatewayVirtualInterfaceGroups
      operationId: GET_DescribeLocalGatewayVirtualInterfaceGroups
      description: Describes the specified local gateway virtual interface groups.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeLocalGatewayVirtualInterfaceGroupsResult'
      parameters:
        - name: LocalGatewayVirtualInterfaceGroupId
          in: query
          required: false
          description: The IDs of the virtual interface groups.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/LocalGatewayVirtualInterfaceGroupId'
                - xml:
                    name: item
        - name: Filter
          in: query
          required: false
          description: <p>One or more filters.</p> <ul> <li> <p> <code>local-gateway-id</code> - The ID of a local gateway.</p> </li> <li> <p> <code>local-gateway-virtual-interface-group-id</code> - The ID of the virtual interface group.</p> </li> <li> <p> <code>local-gateway-virtual-interface-id</code> - The ID of the virtual interface.</p> </li> <li> <p> <code>owner-id</code> - The ID of the Amazon Web Services account that owns the local gateway virtual interface group.</p> </li> </ul>
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 5
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeLocalGatewayVirtualInterfaceGroups
      operationId: POST_DescribeLocalGatewayVirtualInterfaceGroups
      description: Describes the specified local gateway virtual interface groups.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeLocalGatewayVirtualInterfaceGroupsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeLocalGatewayVirtualInterfaceGroupsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeLocalGatewayVirtualInterfaces&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeLocalGatewayVirtualInterfaces
      operationId: GET_DescribeLocalGatewayVirtualInterfaces
      description: Describes the specified local gateway virtual interfaces.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeLocalGatewayVirtualInterfacesResult'
      parameters:
        - name: LocalGatewayVirtualInterfaceId
          in: query
          required: false
          description: The IDs of the virtual interfaces.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/LocalGatewayVirtualInterfaceId'
                - xml:
                    name: item
        - name: Filter
          in: query
          required: false
          description: <p>One or more filters.</p> <ul> <li> <p> <code>local-address</code> - The local address.</p> </li> <li> <p> <code>local-bgp-asn</code> - The Border Gateway Protocol (BGP) Autonomous System Number (ASN) of the local gateway.</p> </li> <li> <p> <code>local-gateway-id</code> - The ID of the local gateway.</p> </li> <li> <p> <code>local-gateway-virtual-interface-id</code> - The ID of the virtual interface.</p> </li> <li> <p> <code>owner-id</code> - The ID of the Amazon Web Services account that owns the local gateway virtual interface.</p> </li> <li> <p> <code>peer-address</code> - The peer address.</p> </li> <li> <p> <code>peer-bgp-asn</code> - The peer BGP ASN.</p> </li> <li> <p> <code>vlan</code> - The ID of the VLAN.</p> </li> </ul>
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 5
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeLocalGatewayVirtualInterfaces
      operationId: POST_DescribeLocalGatewayVirtualInterfaces
      description: Describes the specified local gateway virtual interfaces.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeLocalGatewayVirtualInterfacesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeLocalGatewayVirtualInterfacesRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeLocalGateways&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeLocalGateways
      operationId: GET_DescribeLocalGateways
      description: 'Describes one or more local gateways. By default, all local gateways are described. Alternatively, you can filter the results.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeLocalGatewaysResult'
      parameters:
        - name: LocalGatewayId
          in: query
          required: false
          description: The IDs of the local gateways.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/LocalGatewayId'
                - xml:
                    name: item
        - name: Filter
          in: query
          required: false
          description: <p>One or more filters.</p> <ul> <li> <p> <code>local-gateway-id</code> - The ID of a local gateway.</p> </li> <li> <p> <code>outpost-arn</code> - The Amazon Resource Name (ARN) of the Outpost.</p> </li> <li> <p> <code>owner-id</code> - The ID of the Amazon Web Services account that owns the local gateway.</p> </li> <li> <p> <code>state</code> - The state of the association.</p> </li> </ul>
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 5
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeLocalGateways
      operationId: POST_DescribeLocalGateways
      description: 'Describes one or more local gateways. By default, all local gateways are described. Alternatively, you can filter the results.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeLocalGatewaysResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeLocalGatewaysRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeManagedPrefixLists&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeManagedPrefixLists
      operationId: GET_DescribeManagedPrefixLists
      description: '<p>Describes your managed prefix lists and any Amazon Web Services-managed prefix lists.</p> <p>To view the entries for your prefix list, use <a>GetManagedPrefixListEntries</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeManagedPrefixListsResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: Filter
          in: query
          required: false
          description: <p>One or more filters.</p> <ul> <li> <p> <code>owner-id</code> - The ID of the prefix list owner.</p> </li> <li> <p> <code>prefix-list-id</code> - The ID of the prefix list.</p> </li> <li> <p> <code>prefix-list-name</code> - The name of the prefix list.</p> </li> </ul>
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: PrefixListId
          in: query
          required: false
          description: One or more prefix list IDs.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeManagedPrefixLists
      operationId: POST_DescribeManagedPrefixLists
      description: '<p>Describes your managed prefix lists and any Amazon Web Services-managed prefix lists.</p> <p>To view the entries for your prefix list, use <a>GetManagedPrefixListEntries</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeManagedPrefixListsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeManagedPrefixListsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeMovingAddresses&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeMovingAddresses
      operationId: GET_DescribeMovingAddresses
      description: 'Describes your Elastic IP addresses that are being moved to the EC2-VPC platform, or that are being restored to the EC2-Classic platform. This request does not return information about any other Elastic IP addresses in your account.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeMovingAddressesResult'
      parameters:
        - name: Filter
          in: query
          required: false
          description: <p>One or more filters.</p> <ul> <li> <p> <code>moving-status</code> - The status of the Elastic IP address (<code>MovingToVpc</code> | <code>RestoringToClassic</code>).</p> </li> </ul>
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: MaxResults
          in: query
          required: false
          description: '<p>The maximum number of results to return for the request in a single page. The remaining results of the initial request can be seen by sending another request with the returned <code>NextToken</code> value. This value can be between 5 and 1000; if <code>MaxResults</code> is given a value outside of this range, an error is returned.</p> <p>Default: If no value is provided, the default is 1000.</p>'
          schema:
            type: integer
            minimum: 5
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: PublicIp
          in: query
          required: false
          description: One or more Elastic IP addresses.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeMovingAddresses
      operationId: POST_DescribeMovingAddresses
      description: 'Describes your Elastic IP addresses that are being moved to the EC2-VPC platform, or that are being restored to the EC2-Classic platform. This request does not return information about any other Elastic IP addresses in your account.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeMovingAddressesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeMovingAddressesRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeNatGateways&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeNatGateways
      operationId: GET_DescribeNatGateways
      description: Describes one or more of your NAT gateways.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeNatGatewaysResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters.</p> <ul> <li> <p> <code>nat-gateway-id</code> - The ID of the NAT gateway.</p> </li> <li> <p> <code>state</code> - The state of the NAT gateway (<code>pending</code> | <code>failed</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>).</p> </li> <li> <p> <code>subnet-id</code> - The ID of the subnet in which the NAT gateway resides.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC in which the NAT gateway resides.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 5
            maximum: 1000
        - name: NatGatewayId
          in: query
          required: false
          description: One or more NAT gateway IDs.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/NatGatewayId'
                - xml:
                    name: item
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeNatGateways
      operationId: POST_DescribeNatGateways
      description: Describes one or more of your NAT gateways.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeNatGatewaysResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeNatGatewaysRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeNetworkAcls&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeNetworkAcls
      operationId: GET_DescribeNetworkAcls
      description: '<p>Describes one or more of your network ACLs.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_ACLs.html">Network ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeNetworkAclsResult'
      parameters:
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters.</p> <ul> <li> <p> <code>association.association-id</code> - The ID of an association ID for the ACL.</p> </li> <li> <p> <code>association.network-acl-id</code> - The ID of the network ACL involved in the association.</p> </li> <li> <p> <code>association.subnet-id</code> - The ID of the subnet involved in the association.</p> </li> <li> <p> <code>default</code> - Indicates whether the ACL is the default network ACL for the VPC.</p> </li> <li> <p> <code>entry.cidr</code> - The IPv4 CIDR range specified in the entry.</p> </li> <li> <p> <code>entry.icmp.code</code> - The ICMP code specified in the entry, if any.</p> </li> <li> <p> <code>entry.icmp.type</code> - The ICMP type specified in the entry, if any.</p> </li> <li> <p> <code>entry.ipv6-cidr</code> - The IPv6 CIDR range specified in the entry.</p> </li> <li> <p> <code>entry.port-range.from</code> - The start of the port range specified in the entry. </p> </li> <li> <p> <code>entry.port-range.to</code> - The end of the port range specified in the entry. </p> </li> <li> <p> <code>entry.protocol</code> - The protocol specified in the entry (<code>tcp</code> | <code>udp</code> | <code>icmp</code> or a protocol number).</p> </li> <li> <p> <code>entry.rule-action</code> - Allows or denies the matching traffic (<code>allow</code> | <code>deny</code>).</p> </li> <li> <p> <code>entry.rule-number</code> - The number of an entry (in other words, rule) in the set of ACL entries.</p> </li> <li> <p> <code>network-acl-id</code> - The ID of the network ACL.</p> </li> <li> <p> <code>owner-id</code> - The ID of the Amazon Web Services account that owns the network ACL.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC for the network ACL.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: NetworkAclId
          in: query
          required: false
          description: '<p>One or more network ACL IDs.</p> <p>Default: Describes all your network ACLs.</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/NetworkAclId'
                - xml:
                    name: item
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 5
            maximum: 1000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeNetworkAcls
      operationId: POST_DescribeNetworkAcls
      description: '<p>Describes one or more of your network ACLs.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_ACLs.html">Network ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeNetworkAclsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeNetworkAclsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeNetworkInsightsAccessScopeAnalyses&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeNetworkInsightsAccessScopeAnalyses
      operationId: GET_DescribeNetworkInsightsAccessScopeAnalyses
      description: Describes the specified Network Access Scope analyses.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeNetworkInsightsAccessScopeAnalysesResult'
      parameters:
        - name: NetworkInsightsAccessScopeAnalysisId
          in: query
          required: false
          description: The IDs of the Network Access Scope analyses.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/NetworkInsightsAccessScopeAnalysisId'
                - xml:
                    name: item
        - name: NetworkInsightsAccessScopeId
          in: query
          required: false
          description: The ID of the Network Access Scope.
          schema:
            type: string
        - name: AnalysisStartTimeBegin
          in: query
          required: false
          description: Filters the results based on the start time. The analysis must have started on or after this time.
          schema:
            type: string
            format: date-time
        - name: AnalysisStartTimeEnd
          in: query
          required: false
          description: Filters the results based on the start time. The analysis must have started on or before this time.
          schema:
            type: string
            format: date-time
        - name: Filter
          in: query
          required: false
          description: There are no supported filters.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeNetworkInsightsAccessScopeAnalyses
      operationId: POST_DescribeNetworkInsightsAccessScopeAnalyses
      description: Describes the specified Network Access Scope analyses.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeNetworkInsightsAccessScopeAnalysesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeNetworkInsightsAccessScopeAnalysesRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeNetworkInsightsAccessScopes&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeNetworkInsightsAccessScopes
      operationId: GET_DescribeNetworkInsightsAccessScopes
      description: Describes the specified Network Access Scopes.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeNetworkInsightsAccessScopesResult'
      parameters:
        - name: NetworkInsightsAccessScopeId
          in: query
          required: false
          description: The IDs of the Network Access Scopes.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/NetworkInsightsAccessScopeId'
                - xml:
                    name: item
        - name: Filter
          in: query
          required: false
          description: There are no supported filters.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeNetworkInsightsAccessScopes
      operationId: POST_DescribeNetworkInsightsAccessScopes
      description: Describes the specified Network Access Scopes.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeNetworkInsightsAccessScopesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeNetworkInsightsAccessScopesRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeNetworkInsightsAnalyses&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeNetworkInsightsAnalyses
      operationId: GET_DescribeNetworkInsightsAnalyses
      description: Describes one or more of your network insights analyses.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeNetworkInsightsAnalysesResult'
      parameters:
        - name: NetworkInsightsAnalysisId
          in: query
          required: false
          description: The ID of the network insights analyses. You must specify either analysis IDs or a path ID.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/NetworkInsightsAnalysisId'
                - xml:
                    name: item
        - name: NetworkInsightsPathId
          in: query
          required: false
          description: The ID of the path. You must specify either a path ID or analysis IDs.
          schema:
            type: string
        - name: AnalysisStartTime
          in: query
          required: false
          description: The time when the network insights analyses started.
          schema:
            type: string
            format: date-time
        - name: AnalysisEndTime
          in: query
          required: false
          description: The time when the network insights analyses ended.
          schema:
            type: string
            format: date-time
        - name: Filter
          in: query
          required: false
          description: '<p>The filters. The following are the possible values:</p> <ul> <li> <p>PathFound - A Boolean value that indicates whether a feasible path is found.</p> </li> <li> <p>Status - The status of the analysis (running | succeeded | failed).</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeNetworkInsightsAnalyses
      operationId: POST_DescribeNetworkInsightsAnalyses
      description: Describes one or more of your network insights analyses.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeNetworkInsightsAnalysesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeNetworkInsightsAnalysesRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeNetworkInsightsPaths&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeNetworkInsightsPaths
      operationId: GET_DescribeNetworkInsightsPaths
      description: Describes one or more of your paths.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeNetworkInsightsPathsResult'
      parameters:
        - name: NetworkInsightsPathId
          in: query
          required: false
          description: The IDs of the paths.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/NetworkInsightsPathId'
                - xml:
                    name: item
        - name: Filter
          in: query
          required: false
          description: '<p>The filters. The following are the possible values:</p> <ul> <li> <p>Destination - The ID of the resource.</p> </li> <li> <p>DestinationPort - The destination port.</p> </li> <li> <p>Name - The path name.</p> </li> <li> <p>Protocol - The protocol.</p> </li> <li> <p>Source - The ID of the resource.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeNetworkInsightsPaths
      operationId: POST_DescribeNetworkInsightsPaths
      description: Describes one or more of your paths.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeNetworkInsightsPathsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeNetworkInsightsPathsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeNetworkInterfaceAttribute&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeNetworkInterfaceAttribute
      operationId: GET_DescribeNetworkInterfaceAttribute
      description: Describes a network interface attribute. You can specify only one attribute at a time.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeNetworkInterfaceAttributeResult'
      parameters:
        - name: Attribute
          in: query
          required: false
          description: The attribute of the network interface. This parameter is required.
          schema:
            type: string
            enum:
              - description
              - groupSet
              - sourceDestCheck
              - attachment
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: NetworkInterfaceId
          in: query
          required: true
          description: The ID of the network interface.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeNetworkInterfaceAttribute
      operationId: POST_DescribeNetworkInterfaceAttribute
      description: Describes a network interface attribute. You can specify only one attribute at a time.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeNetworkInterfaceAttributeResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeNetworkInterfaceAttributeRequest'
      parameters: []
  /?Action=DescribeNetworkInterfacePermissions&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeNetworkInterfacePermissions
      operationId: GET_DescribeNetworkInterfacePermissions
      description: 'Describes the permissions for your network interfaces. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeNetworkInterfacePermissionsResult'
      parameters:
        - name: NetworkInterfacePermissionId
          in: query
          required: false
          description: One or more network interface permission IDs.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/NetworkInterfacePermissionId'
        - name: Filter
          in: query
          required: false
          description: <p>One or more filters.</p> <ul> <li> <p> <code>network-interface-permission.network-interface-permission-id</code> - The ID of the permission.</p> </li> <li> <p> <code>network-interface-permission.network-interface-id</code> - The ID of the network interface.</p> </li> <li> <p> <code>network-interface-permission.aws-account-id</code> - The Amazon Web Services account ID.</p> </li> <li> <p> <code>network-interface-permission.aws-service</code> - The Amazon Web Service.</p> </li> <li> <p> <code>network-interface-permission.permission</code> - The type of permission (<code>INSTANCE-ATTACH</code> | <code>EIP-ASSOCIATE</code>).</p> </li> </ul>
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: NextToken
          in: query
          required: false
          description: The token to request the next page of results.
          schema:
            type: string
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value. If this parameter is not specified, up to 50 results are returned by default.'
          schema:
            type: integer
            minimum: 5
            maximum: 255
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeNetworkInterfacePermissions
      operationId: POST_DescribeNetworkInterfacePermissions
      description: 'Describes the permissions for your network interfaces. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeNetworkInterfacePermissionsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeNetworkInterfacePermissionsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeNetworkInterfaces&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeNetworkInterfaces
      operationId: GET_DescribeNetworkInterfaces
      description: Describes one or more of your network interfaces.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeNetworkInterfacesResult'
      parameters:
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters.</p> <ul> <li> <p> <code>addresses.private-ip-address</code> - The private IPv4 addresses associated with the network interface.</p> </li> <li> <p> <code>addresses.primary</code> - Whether the private IPv4 address is the primary IP address associated with the network interface. </p> </li> <li> <p> <code>addresses.association.public-ip</code> - The association ID returned when the network interface was associated with the Elastic IP address (IPv4).</p> </li> <li> <p> <code>addresses.association.owner-id</code> - The owner ID of the addresses associated with the network interface.</p> </li> <li> <p> <code>association.association-id</code> - The association ID returned when the network interface was associated with an IPv4 address.</p> </li> <li> <p> <code>association.allocation-id</code> - The allocation ID returned when you allocated the Elastic IP address (IPv4) for your network interface.</p> </li> <li> <p> <code>association.ip-owner-id</code> - The owner of the Elastic IP address (IPv4) associated with the network interface.</p> </li> <li> <p> <code>association.public-ip</code> - The address of the Elastic IP address (IPv4) bound to the network interface.</p> </li> <li> <p> <code>association.public-dns-name</code> - The public DNS name for the network interface (IPv4).</p> </li> <li> <p> <code>attachment.attachment-id</code> - The ID of the interface attachment.</p> </li> <li> <p> <code>attachment.attach-time</code> - The time that the network interface was attached to an instance.</p> </li> <li> <p> <code>attachment.delete-on-termination</code> - Indicates whether the attachment is deleted when an instance is terminated.</p> </li> <li> <p> <code>attachment.device-index</code> - The device index to which the network interface is attached.</p> </li> <li> <p> <code>attachment.instance-id</code> - The ID of the instance to which the network interface is attached.</p> </li> <li> <p> <code>attachment.instance-owner-id</code> - The owner ID of the instance to which the network interface is attached.</p> </li> <li> <p> <code>attachment.status</code> - The status of the attachment (<code>attaching</code> | <code>attached</code> | <code>detaching</code> | <code>detached</code>).</p> </li> <li> <p> <code>availability-zone</code> - The Availability Zone of the network interface.</p> </li> <li> <p> <code>description</code> - The description of the network interface.</p> </li> <li> <p> <code>group-id</code> - The ID of a security group associated with the network interface.</p> </li> <li> <p> <code>group-name</code> - The name of a security group associated with the network interface.</p> </li> <li> <p> <code>ipv6-addresses.ipv6-address</code> - An IPv6 address associated with the network interface.</p> </li> <li> <p> <code>interface-type</code> - The type of network interface (<code>api_gateway_managed</code> | <code>aws_codestar_connections_managed</code> | <code>branch</code> | <code>efa</code> | <code>gateway_load_balancer</code> | <code>gateway_load_balancer_endpoint</code> | <code>global_accelerator_managed</code> | <code>interface</code> | <code>iot_rules_managed</code> | <code>lambda</code> | <code>load_balancer</code> | <code>nat_gateway</code> | <code>network_load_balancer</code> | <code>quicksight</code> | <code>transit_gateway</code> | <code>trunk</code> | <code>vpc_endpoint</code>).</p> </li> <li> <p> <code>mac-address</code> - The MAC address of the network interface.</p> </li> <li> <p> <code>network-interface-id</code> - The ID of the network interface.</p> </li> <li> <p> <code>owner-id</code> - The Amazon Web Services account ID of the network interface owner.</p> </li> <li> <p> <code>private-ip-address</code> - The private IPv4 address or addresses of the network interface.</p> </li> <li> <p> <code>private-dns-name</code> - The private DNS name of the network interface (IPv4).</p> </li> <li> <p> <code>requester-id</code> - The alias or Amazon Web Services account ID of the principal or service that created the network interface.</p> </li> <li> <p> <code>requester-managed</code> - Indicates whether the network interface is being managed by an Amazon Web Service (for example, Amazon Web Services Management Console, Auto Scaling, and so on).</p> </li> <li> <p> <code>source-dest-check</code> - Indicates whether the network interface performs source/destination checking. A value of <code>true</code> means checking is enabled, and <code>false</code> means checking is disabled. The value must be <code>false</code> for the network interface to perform network address translation (NAT) in your VPC. </p> </li> <li> <p> <code>status</code> - The status of the network interface. If the network interface is not attached to an instance, the status is <code>available</code>; if a network interface is attached to an instance the status is <code>in-use</code>.</p> </li> <li> <p> <code>subnet-id</code> - The ID of the subnet for the network interface.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC for the network interface.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: NetworkInterfaceId
          in: query
          required: false
          description: '<p>One or more network interface IDs.</p> <p>Default: Describes all your network interfaces.</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/NetworkInterfaceId'
                - xml:
                    name: item
        - name: NextToken
          in: query
          required: false
          description: The token to retrieve the next page of results.
          schema:
            type: string
        - name: MaxResults
          in: query
          required: false
          description: The maximum number of items to return for this request. The request returns a token that you can specify in a subsequent call to get the next set of results. You cannot specify this parameter and the network interface IDs parameter in the same request.
          schema:
            type: integer
            minimum: 5
            maximum: 1000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeNetworkInterfaces
      operationId: POST_DescribeNetworkInterfaces
      description: Describes one or more of your network interfaces.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeNetworkInterfacesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeNetworkInterfacesRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribePlacementGroups&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribePlacementGroups
      operationId: GET_DescribePlacementGroups
      description: 'Describes the specified placement groups or all of your placement groups. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html">Placement groups</a> in the <i>Amazon EC2 User Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribePlacementGroupsResult'
      parameters:
        - name: Filter
          in: query
          required: false
          description: '<p>The filters.</p> <ul> <li> <p> <code>group-name</code> - The name of the placement group.</p> </li> <li> <p> <code>group-arn</code> - The Amazon Resource Name (ARN) of the placement group.</p> </li> <li> <p> <code>state</code> - The state of the placement group (<code>pending</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>).</p> </li> <li> <p> <code>strategy</code> - The strategy of the placement group (<code>cluster</code> | <code>spread</code> | <code>partition</code>).</p> </li> <li> <p> <code>tag:&lt;key&gt;</code> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources that have a tag with a specific key, regardless of the tag value.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: GroupName
          in: query
          required: false
          description: '<p>The names of the placement groups.</p> <p>Default: Describes all your placement groups, or only those otherwise specified.</p>'
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PlacementGroupName'
        - name: GroupId
          in: query
          required: false
          description: The IDs of the placement groups.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/PlacementGroupId'
                - xml:
                    name: GroupId
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribePlacementGroups
      operationId: POST_DescribePlacementGroups
      description: 'Describes the specified placement groups or all of your placement groups. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html">Placement groups</a> in the <i>Amazon EC2 User Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribePlacementGroupsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribePlacementGroupsRequest'
      parameters: []
  /?Action=DescribePrefixLists&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribePrefixLists
      operationId: GET_DescribePrefixLists
      description: '<p>Describes available Amazon Web Services services in a prefix list format, which includes the prefix list name and prefix list ID of the service and the IP address range for the service.</p> <p>We recommend that you use <a>DescribeManagedPrefixLists</a> instead.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribePrefixListsResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters.</p> <ul> <li> <p> <code>prefix-list-id</code>: The ID of a prefix list.</p> </li> <li> <p> <code>prefix-list-name</code>: The name of a prefix list.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: PrefixListId
          in: query
          required: false
          description: One or more prefix list IDs.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/PrefixListResourceId'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribePrefixLists
      operationId: POST_DescribePrefixLists
      description: '<p>Describes available Amazon Web Services services in a prefix list format, which includes the prefix list name and prefix list ID of the service and the IP address range for the service.</p> <p>We recommend that you use <a>DescribeManagedPrefixLists</a> instead.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribePrefixListsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribePrefixListsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribePrincipalIdFormat&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribePrincipalIdFormat
      operationId: GET_DescribePrincipalIdFormat
      description: '<p>Describes the ID format settings for the root user and all IAM roles and IAM users that have explicitly specified a longer ID (17-character ID) preference. </p> <p>By default, all IAM roles and IAM users default to the same ID settings as the root user, unless they explicitly override the settings. This request is useful for identifying those IAM users and IAM roles that have overridden the default ID settings.</p> <p>The following resource types support longer IDs: <code>bundle</code> | <code>conversion-task</code> | <code>customer-gateway</code> | <code>dhcp-options</code> | <code>elastic-ip-allocation</code> | <code>elastic-ip-association</code> | <code>export-task</code> | <code>flow-log</code> | <code>image</code> | <code>import-task</code> | <code>instance</code> | <code>internet-gateway</code> | <code>network-acl</code> | <code>network-acl-association</code> | <code>network-interface</code> | <code>network-interface-attachment</code> | <code>prefix-list</code> | <code>reservation</code> | <code>route-table</code> | <code>route-table-association</code> | <code>security-group</code> | <code>snapshot</code> | <code>subnet</code> | <code>subnet-cidr-block-association</code> | <code>volume</code> | <code>vpc</code> | <code>vpc-cidr-block-association</code> | <code>vpc-endpoint</code> | <code>vpc-peering-connection</code> | <code>vpn-connection</code> | <code>vpn-gateway</code>. </p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribePrincipalIdFormatResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: Resource
          in: query
          required: false
          description: 'The type of resource: <code>bundle</code> | <code>conversion-task</code> | <code>customer-gateway</code> | <code>dhcp-options</code> | <code>elastic-ip-allocation</code> | <code>elastic-ip-association</code> | <code>export-task</code> | <code>flow-log</code> | <code>image</code> | <code>import-task</code> | <code>instance</code> | <code>internet-gateway</code> | <code>network-acl</code> | <code>network-acl-association</code> | <code>network-interface</code> | <code>network-interface-attachment</code> | <code>prefix-list</code> | <code>reservation</code> | <code>route-table</code> | <code>route-table-association</code> | <code>security-group</code> | <code>snapshot</code> | <code>subnet</code> | <code>subnet-cidr-block-association</code> | <code>volume</code> | <code>vpc</code> | <code>vpc-cidr-block-association</code> | <code>vpc-endpoint</code> | <code>vpc-peering-connection</code> | <code>vpn-connection</code> | <code>vpn-gateway</code> '
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: item
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned NextToken value. '
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token to request the next page of results.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribePrincipalIdFormat
      operationId: POST_DescribePrincipalIdFormat
      description: '<p>Describes the ID format settings for the root user and all IAM roles and IAM users that have explicitly specified a longer ID (17-character ID) preference. </p> <p>By default, all IAM roles and IAM users default to the same ID settings as the root user, unless they explicitly override the settings. This request is useful for identifying those IAM users and IAM roles that have overridden the default ID settings.</p> <p>The following resource types support longer IDs: <code>bundle</code> | <code>conversion-task</code> | <code>customer-gateway</code> | <code>dhcp-options</code> | <code>elastic-ip-allocation</code> | <code>elastic-ip-association</code> | <code>export-task</code> | <code>flow-log</code> | <code>image</code> | <code>import-task</code> | <code>instance</code> | <code>internet-gateway</code> | <code>network-acl</code> | <code>network-acl-association</code> | <code>network-interface</code> | <code>network-interface-attachment</code> | <code>prefix-list</code> | <code>reservation</code> | <code>route-table</code> | <code>route-table-association</code> | <code>security-group</code> | <code>snapshot</code> | <code>subnet</code> | <code>subnet-cidr-block-association</code> | <code>volume</code> | <code>vpc</code> | <code>vpc-cidr-block-association</code> | <code>vpc-endpoint</code> | <code>vpc-peering-connection</code> | <code>vpn-connection</code> | <code>vpn-gateway</code>. </p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribePrincipalIdFormatResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribePrincipalIdFormatRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribePublicIpv4Pools&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribePublicIpv4Pools
      operationId: GET_DescribePublicIpv4Pools
      description: Describes the specified IPv4 address pools.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribePublicIpv4PoolsResult'
      parameters:
        - name: PoolId
          in: query
          required: false
          description: The IDs of the address pools.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Ipv4PoolEc2Id'
                - xml:
                    name: item
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 1
            maximum: 10
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters.</p> <ul> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribePublicIpv4Pools
      operationId: POST_DescribePublicIpv4Pools
      description: Describes the specified IPv4 address pools.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribePublicIpv4PoolsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribePublicIpv4PoolsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeRegions&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeRegions
      operationId: GET_DescribeRegions
      description: '<p>Describes the Regions that are enabled for your account, or all Regions.</p> <p>For a list of the Regions supported by Amazon EC2, see <a href="https://docs.aws.amazon.com/general/latest/gr/ec2-service.html"> Amazon Elastic Compute Cloud endpoints and quotas</a>.</p> <p>For information about enabling and disabling Regions for your account, see <a href="https://docs.aws.amazon.com/general/latest/gr/rande-manage.html">Managing Amazon Web Services Regions</a> in the <i>Amazon Web Services General Reference</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeRegionsResult'
      parameters:
        - name: Filter
          in: query
          required: false
          description: '<p>The filters.</p> <ul> <li> <p> <code>endpoint</code> - The endpoint of the Region (for example, <code>ec2.us-east-1.amazonaws.com</code>).</p> </li> <li> <p> <code>opt-in-status</code> - The opt-in status of the Region (<code>opt-in-not-required</code> | <code>opted-in</code> | <code>not-opted-in</code>).</p> </li> <li> <p> <code>region-name</code> - The name of the Region (for example, <code>us-east-1</code>).</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: RegionName
          in: query
          required: false
          description: 'The names of the Regions. You can specify any Regions, whether they are enabled and disabled for your account.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: RegionName
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: AllRegions
          in: query
          required: false
          description: 'Indicates whether to display all Regions, including Regions that are disabled for your account.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeRegions
      operationId: POST_DescribeRegions
      description: '<p>Describes the Regions that are enabled for your account, or all Regions.</p> <p>For a list of the Regions supported by Amazon EC2, see <a href="https://docs.aws.amazon.com/general/latest/gr/ec2-service.html"> Amazon Elastic Compute Cloud endpoints and quotas</a>.</p> <p>For information about enabling and disabling Regions for your account, see <a href="https://docs.aws.amazon.com/general/latest/gr/rande-manage.html">Managing Amazon Web Services Regions</a> in the <i>Amazon Web Services General Reference</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeRegionsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeRegionsRequest'
      parameters: []
  /?Action=DescribeReplaceRootVolumeTasks&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeReplaceRootVolumeTasks
      operationId: GET_DescribeReplaceRootVolumeTasks
      description: 'Describes a root volume replacement task. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-restoring-volume.html#replace-root">Replace a root volume</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeReplaceRootVolumeTasksResult'
      parameters:
        - name: ReplaceRootVolumeTaskId
          in: query
          required: false
          description: The ID of the root volume replacement task to view.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/ReplaceRootVolumeTaskId'
                - xml:
                    name: ReplaceRootVolumeTaskId
        - name: Filter
          in: query
          required: false
          description: '<p>Filter to use:</p> <ul> <li> <p> <code>instance-id</code> - The ID of the instance for which the root volume replacement task was created.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 1
            maximum: 50
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeReplaceRootVolumeTasks
      operationId: POST_DescribeReplaceRootVolumeTasks
      description: 'Describes a root volume replacement task. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-restoring-volume.html#replace-root">Replace a root volume</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeReplaceRootVolumeTasksResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeReplaceRootVolumeTasksRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeReservedInstances&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeReservedInstances
      operationId: GET_DescribeReservedInstances
      description: '<p>Describes one or more of the Reserved Instances that you purchased.</p> <p>For more information about Reserved Instances, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts-on-demand-reserved-instances.html">Reserved Instances</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeReservedInstancesResult'
      parameters:
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters.</p> <ul> <li> <p> <code>availability-zone</code> - The Availability Zone where the Reserved Instance can be used.</p> </li> <li> <p> <code>duration</code> - The duration of the Reserved Instance (one year or three years), in seconds (<code>31536000</code> | <code>94608000</code>).</p> </li> <li> <p> <code>end</code> - The time when the Reserved Instance expires (for example, 2015-08-07T11:54:42.000Z).</p> </li> <li> <p> <code>fixed-price</code> - The purchase price of the Reserved Instance (for example, 9800.0).</p> </li> <li> <p> <code>instance-type</code> - The instance type that is covered by the reservation.</p> </li> <li> <p> <code>scope</code> - The scope of the Reserved Instance (<code>Region</code> or <code>Availability Zone</code>).</p> </li> <li> <p> <code>product-description</code> - The Reserved Instance product platform description. Instances that include <code>(Amazon VPC)</code> in the product platform description will only be displayed to EC2-Classic account holders and are for use with Amazon VPC (<code>Linux/UNIX</code> | <code>Linux/UNIX (Amazon VPC)</code> | <code>SUSE Linux</code> | <code>SUSE Linux (Amazon VPC)</code> | <code>Red Hat Enterprise Linux</code> | <code>Red Hat Enterprise Linux (Amazon VPC)</code> | <code>Red Hat Enterprise Linux with HA (Amazon VPC)</code> | <code>Windows</code> | <code>Windows (Amazon VPC)</code> | <code>Windows with SQL Server Standard</code> | <code>Windows with SQL Server Standard (Amazon VPC)</code> | <code>Windows with SQL Server Web</code> | <code>Windows with SQL Server Web (Amazon VPC)</code> | <code>Windows with SQL Server Enterprise</code> | <code>Windows with SQL Server Enterprise (Amazon VPC)</code>).</p> </li> <li> <p> <code>reserved-instances-id</code> - The ID of the Reserved Instance.</p> </li> <li> <p> <code>start</code> - The time at which the Reserved Instance purchase request was placed (for example, 2014-08-07T11:54:42.000Z).</p> </li> <li> <p> <code>state</code> - The state of the Reserved Instance (<code>payment-pending</code> | <code>active</code> | <code>payment-failed</code> | <code>retired</code>).</p> </li> <li> <p> <code>tag:&lt;key&gt;</code> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>usage-price</code> - The usage price of the Reserved Instance, per hour (for example, 0.84).</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: OfferingClass
          in: query
          required: false
          description: Describes whether the Reserved Instance is Standard or Convertible.
          schema:
            type: string
            enum:
              - standard
              - convertible
        - name: ReservedInstancesId
          in: query
          required: false
          description: '<p>One or more Reserved Instance IDs.</p> <p>Default: Describes all your Reserved Instances, or only those otherwise specified.</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/ReservationId'
                - xml:
                    name: ReservedInstancesId
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: OfferingType
          in: query
          required: false
          description: 'The Reserved Instance offering type. If you are using tools that predate the 2011-11-01 API version, you only have access to the <code>Medium Utilization</code> Reserved Instance offering type.'
          schema:
            type: string
            enum:
              - Heavy Utilization
              - Medium Utilization
              - Light Utilization
              - No Upfront
              - Partial Upfront
              - All Upfront
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeReservedInstances
      operationId: POST_DescribeReservedInstances
      description: '<p>Describes one or more of the Reserved Instances that you purchased.</p> <p>For more information about Reserved Instances, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts-on-demand-reserved-instances.html">Reserved Instances</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeReservedInstancesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeReservedInstancesRequest'
      parameters: []
  /?Action=DescribeReservedInstancesListings&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeReservedInstancesListings
      operationId: GET_DescribeReservedInstancesListings
      description: '<p>Describes your account''s Reserved Instance listings in the Reserved Instance Marketplace.</p> <p>The Reserved Instance Marketplace matches sellers who want to resell Reserved Instance capacity that they no longer need with buyers who want to purchase additional capacity. Reserved Instances bought and sold through the Reserved Instance Marketplace work like any other Reserved Instances.</p> <p>As a seller, you choose to list some or all of your Reserved Instances, and you specify the upfront price to receive for them. Your Reserved Instances are then listed in the Reserved Instance Marketplace and are available for purchase.</p> <p>As a buyer, you specify the configuration of the Reserved Instance to purchase, and the Marketplace matches what you''re searching for with what''s available. The Marketplace first sells the lowest priced Reserved Instances to you, and continues to sell available Reserved Instance listings to you until your demand is met. You are charged based on the total price of all of the listings that you purchase.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved Instance Marketplace</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeReservedInstancesListingsResult'
      parameters:
        - name: Filter
          in: query
          required: false
          description: <p>One or more filters.</p> <ul> <li> <p> <code>reserved-instances-id</code> - The ID of the Reserved Instances.</p> </li> <li> <p> <code>reserved-instances-listing-id</code> - The ID of the Reserved Instances listing.</p> </li> <li> <p> <code>status</code> - The status of the Reserved Instance listing (<code>pending</code> | <code>active</code> | <code>cancelled</code> | <code>closed</code>).</p> </li> <li> <p> <code>status-message</code> - The reason for the status.</p> </li> </ul>
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: ReservedInstancesId
          in: query
          required: false
          description: One or more Reserved Instance IDs.
          schema:
            type: string
        - name: ReservedInstancesListingId
          in: query
          required: false
          description: One or more Reserved Instance listing IDs.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeReservedInstancesListings
      operationId: POST_DescribeReservedInstancesListings
      description: '<p>Describes your account''s Reserved Instance listings in the Reserved Instance Marketplace.</p> <p>The Reserved Instance Marketplace matches sellers who want to resell Reserved Instance capacity that they no longer need with buyers who want to purchase additional capacity. Reserved Instances bought and sold through the Reserved Instance Marketplace work like any other Reserved Instances.</p> <p>As a seller, you choose to list some or all of your Reserved Instances, and you specify the upfront price to receive for them. Your Reserved Instances are then listed in the Reserved Instance Marketplace and are available for purchase.</p> <p>As a buyer, you specify the configuration of the Reserved Instance to purchase, and the Marketplace matches what you''re searching for with what''s available. The Marketplace first sells the lowest priced Reserved Instances to you, and continues to sell available Reserved Instance listings to you until your demand is met. You are charged based on the total price of all of the listings that you purchase.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved Instance Marketplace</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeReservedInstancesListingsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeReservedInstancesListingsRequest'
      parameters: []
  /?Action=DescribeReservedInstancesModifications&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeReservedInstancesModifications
      operationId: GET_DescribeReservedInstancesModifications
      description: '<p>Describes the modifications made to your Reserved Instances. If no parameter is specified, information about all your Reserved Instances modification requests is returned. If a modification ID is specified, only information about the specific modification is returned.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-modifying.html">Modifying Reserved Instances</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeReservedInstancesModificationsResult'
      parameters:
        - name: Filter
          in: query
          required: false
          description: <p>One or more filters.</p> <ul> <li> <p> <code>client-token</code> - The idempotency token for the modification request.</p> </li> <li> <p> <code>create-date</code> - The time when the modification request was created.</p> </li> <li> <p> <code>effective-date</code> - The time when the modification becomes effective.</p> </li> <li> <p> <code>modification-result.reserved-instances-id</code> - The ID for the Reserved Instances created as part of the modification request. This ID is only available when the status of the modification is <code>fulfilled</code>.</p> </li> <li> <p> <code>modification-result.target-configuration.availability-zone</code> - The Availability Zone for the new Reserved Instances.</p> </li> <li> <p> <code>modification-result.target-configuration.instance-count </code> - The number of new Reserved Instances.</p> </li> <li> <p> <code>modification-result.target-configuration.instance-type</code> - The instance type of the new Reserved Instances.</p> </li> <li> <p> <code>modification-result.target-configuration.platform</code> - The network platform of the new Reserved Instances (<code>EC2-Classic</code> | <code>EC2-VPC</code>).</p> </li> <li> <p> <code>reserved-instances-id</code> - The ID of the Reserved Instances modified.</p> </li> <li> <p> <code>reserved-instances-modification-id</code> - The ID of the modification request.</p> </li> <li> <p> <code>status</code> - The status of the Reserved Instances modification request (<code>processing</code> | <code>fulfilled</code> | <code>failed</code>).</p> </li> <li> <p> <code>status-message</code> - The reason for the status.</p> </li> <li> <p> <code>update-date</code> - The time when the modification request was last updated.</p> </li> </ul>
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: ReservedInstancesModificationId
          in: query
          required: false
          description: IDs for the submitted modification request.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/ReservedInstancesModificationId'
                - xml:
                    name: ReservedInstancesModificationId
        - name: NextToken
          in: query
          required: false
          description: The token to retrieve the next page of results.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeReservedInstancesModifications
      operationId: POST_DescribeReservedInstancesModifications
      description: '<p>Describes the modifications made to your Reserved Instances. If no parameter is specified, information about all your Reserved Instances modification requests is returned. If a modification ID is specified, only information about the specific modification is returned.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-modifying.html">Modifying Reserved Instances</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeReservedInstancesModificationsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeReservedInstancesModificationsRequest'
      parameters:
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeReservedInstancesOfferings&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeReservedInstancesOfferings
      operationId: GET_DescribeReservedInstancesOfferings
      description: '<p>Describes Reserved Instance offerings that are available for purchase. With Reserved Instances, you purchase the right to launch instances for a period of time. During that time period, you do not receive insufficient capacity errors, and you pay a lower usage rate than the rate charged for On-Demand instances for the actual time used.</p> <p>If you have listed your own Reserved Instances for sale in the Reserved Instance Marketplace, they will be excluded from these results. This is to ensure that you do not purchase your own Reserved Instances.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved Instance Marketplace</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeReservedInstancesOfferingsResult'
      parameters:
        - name: AvailabilityZone
          in: query
          required: false
          description: The Availability Zone in which the Reserved Instance can be used.
          schema:
            type: string
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters.</p> <ul> <li> <p> <code>availability-zone</code> - The Availability Zone where the Reserved Instance can be used.</p> </li> <li> <p> <code>duration</code> - The duration of the Reserved Instance (for example, one year or three years), in seconds (<code>31536000</code> | <code>94608000</code>).</p> </li> <li> <p> <code>fixed-price</code> - The purchase price of the Reserved Instance (for example, 9800.0).</p> </li> <li> <p> <code>instance-type</code> - The instance type that is covered by the reservation.</p> </li> <li> <p> <code>marketplace</code> - Set to <code>true</code> to show only Reserved Instance Marketplace offerings. When this filter is not used, which is the default behavior, all offerings from both Amazon Web Services and the Reserved Instance Marketplace are listed.</p> </li> <li> <p> <code>product-description</code> - The Reserved Instance product platform description. Instances that include <code>(Amazon VPC)</code> in the product platform description will only be displayed to EC2-Classic account holders and are for use with Amazon VPC. (<code>Linux/UNIX</code> | <code>Linux/UNIX (Amazon VPC)</code> | <code>SUSE Linux</code> | <code>SUSE Linux (Amazon VPC)</code> | <code>Red Hat Enterprise Linux</code> | <code>Red Hat Enterprise Linux (Amazon VPC)</code> | <code>Red Hat Enterprise Linux with HA (Amazon VPC)</code> | <code>Windows</code> | <code>Windows (Amazon VPC)</code> | <code>Windows with SQL Server Standard</code> | <code>Windows with SQL Server Standard (Amazon VPC)</code> | <code>Windows with SQL Server Web</code> | <code> Windows with SQL Server Web (Amazon VPC)</code> | <code>Windows with SQL Server Enterprise</code> | <code>Windows with SQL Server Enterprise (Amazon VPC)</code>) </p> </li> <li> <p> <code>reserved-instances-offering-id</code> - The Reserved Instances offering ID.</p> </li> <li> <p> <code>scope</code> - The scope of the Reserved Instance (<code>Availability Zone</code> or <code>Region</code>).</p> </li> <li> <p> <code>usage-price</code> - The usage price of the Reserved Instance, per hour (for example, 0.84).</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: IncludeMarketplace
          in: query
          required: false
          description: Include Reserved Instance Marketplace offerings in the response.
          schema:
            type: boolean
        - name: InstanceType
          in: query
          required: false
          description: 'The instance type that the reservation will cover (for example, <code>m1.small</code>). For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance types</a> in the <i>Amazon EC2 User Guide</i>.'
          schema:
            type: string
            enum:
              - a1.medium
              - a1.large
              - a1.xlarge
              - a1.2xlarge
              - a1.4xlarge
              - a1.metal
              - c1.medium
              - c1.xlarge
              - c3.large
              - c3.xlarge
              - c3.2xlarge
              - c3.4xlarge
              - c3.8xlarge
              - c4.large
              - c4.xlarge
              - c4.2xlarge
              - c4.4xlarge
              - c4.8xlarge
              - c5.large
              - c5.xlarge
              - c5.2xlarge
              - c5.4xlarge
              - c5.9xlarge
              - c5.12xlarge
              - c5.18xlarge
              - c5.24xlarge
              - c5.metal
              - c5a.large
              - c5a.xlarge
              - c5a.2xlarge
              - c5a.4xlarge
              - c5a.8xlarge
              - c5a.12xlarge
              - c5a.16xlarge
              - c5a.24xlarge
              - c5ad.large
              - c5ad.xlarge
              - c5ad.2xlarge
              - c5ad.4xlarge
              - c5ad.8xlarge
              - c5ad.12xlarge
              - c5ad.16xlarge
              - c5ad.24xlarge
              - c5d.large
              - c5d.xlarge
              - c5d.2xlarge
              - c5d.4xlarge
              - c5d.9xlarge
              - c5d.12xlarge
              - c5d.18xlarge
              - c5d.24xlarge
              - c5d.metal
              - c5n.large
              - c5n.xlarge
              - c5n.2xlarge
              - c5n.4xlarge
              - c5n.9xlarge
              - c5n.18xlarge
              - c5n.metal
              - c6g.medium
              - c6g.large
              - c6g.xlarge
              - c6g.2xlarge
              - c6g.4xlarge
              - c6g.8xlarge
              - c6g.12xlarge
              - c6g.16xlarge
              - c6g.metal
              - c6gd.medium
              - c6gd.large
              - c6gd.xlarge
              - c6gd.2xlarge
              - c6gd.4xlarge
              - c6gd.8xlarge
              - c6gd.12xlarge
              - c6gd.16xlarge
              - c6gd.metal
              - c6gn.medium
              - c6gn.large
              - c6gn.xlarge
              - c6gn.2xlarge
              - c6gn.4xlarge
              - c6gn.8xlarge
              - c6gn.12xlarge
              - c6gn.16xlarge
              - c6i.large
              - c6i.xlarge
              - c6i.2xlarge
              - c6i.4xlarge
              - c6i.8xlarge
              - c6i.12xlarge
              - c6i.16xlarge
              - c6i.24xlarge
              - c6i.32xlarge
              - c6i.metal
              - cc1.4xlarge
              - cc2.8xlarge
              - cg1.4xlarge
              - cr1.8xlarge
              - d2.xlarge
              - d2.2xlarge
              - d2.4xlarge
              - d2.8xlarge
              - d3.xlarge
              - d3.2xlarge
              - d3.4xlarge
              - d3.8xlarge
              - d3en.xlarge
              - d3en.2xlarge
              - d3en.4xlarge
              - d3en.6xlarge
              - d3en.8xlarge
              - d3en.12xlarge
              - dl1.24xlarge
              - f1.2xlarge
              - f1.4xlarge
              - f1.16xlarge
              - g2.2xlarge
              - g2.8xlarge
              - g3.4xlarge
              - g3.8xlarge
              - g3.16xlarge
              - g3s.xlarge
              - g4ad.xlarge
              - g4ad.2xlarge
              - g4ad.4xlarge
              - g4ad.8xlarge
              - g4ad.16xlarge
              - g4dn.xlarge
              - g4dn.2xlarge
              - g4dn.4xlarge
              - g4dn.8xlarge
              - g4dn.12xlarge
              - g4dn.16xlarge
              - g4dn.metal
              - g5.xlarge
              - g5.2xlarge
              - g5.4xlarge
              - g5.8xlarge
              - g5.12xlarge
              - g5.16xlarge
              - g5.24xlarge
              - g5.48xlarge
              - g5g.xlarge
              - g5g.2xlarge
              - g5g.4xlarge
              - g5g.8xlarge
              - g5g.16xlarge
              - g5g.metal
              - hi1.4xlarge
              - hpc6a.48xlarge
              - hs1.8xlarge
              - h1.2xlarge
              - h1.4xlarge
              - h1.8xlarge
              - h1.16xlarge
              - i2.xlarge
              - i2.2xlarge
              - i2.4xlarge
              - i2.8xlarge
              - i3.large
              - i3.xlarge
              - i3.2xlarge
              - i3.4xlarge
              - i3.8xlarge
              - i3.16xlarge
              - i3.metal
              - i3en.large
              - i3en.xlarge
              - i3en.2xlarge
              - i3en.3xlarge
              - i3en.6xlarge
              - i3en.12xlarge
              - i3en.24xlarge
              - i3en.metal
              - im4gn.large
              - im4gn.xlarge
              - im4gn.2xlarge
              - im4gn.4xlarge
              - im4gn.8xlarge
              - im4gn.16xlarge
              - inf1.xlarge
              - inf1.2xlarge
              - inf1.6xlarge
              - inf1.24xlarge
              - is4gen.medium
              - is4gen.large
              - is4gen.xlarge
              - is4gen.2xlarge
              - is4gen.4xlarge
              - is4gen.8xlarge
              - m1.small
              - m1.medium
              - m1.large
              - m1.xlarge
              - m2.xlarge
              - m2.2xlarge
              - m2.4xlarge
              - m3.medium
              - m3.large
              - m3.xlarge
              - m3.2xlarge
              - m4.large
              - m4.xlarge
              - m4.2xlarge
              - m4.4xlarge
              - m4.10xlarge
              - m4.16xlarge
              - m5.large
              - m5.xlarge
              - m5.2xlarge
              - m5.4xlarge
              - m5.8xlarge
              - m5.12xlarge
              - m5.16xlarge
              - m5.24xlarge
              - m5.metal
              - m5a.large
              - m5a.xlarge
              - m5a.2xlarge
              - m5a.4xlarge
              - m5a.8xlarge
              - m5a.12xlarge
              - m5a.16xlarge
              - m5a.24xlarge
              - m5ad.large
              - m5ad.xlarge
              - m5ad.2xlarge
              - m5ad.4xlarge
              - m5ad.8xlarge
              - m5ad.12xlarge
              - m5ad.16xlarge
              - m5ad.24xlarge
              - m5d.large
              - m5d.xlarge
              - m5d.2xlarge
              - m5d.4xlarge
              - m5d.8xlarge
              - m5d.12xlarge
              - m5d.16xlarge
              - m5d.24xlarge
              - m5d.metal
              - m5dn.large
              - m5dn.xlarge
              - m5dn.2xlarge
              - m5dn.4xlarge
              - m5dn.8xlarge
              - m5dn.12xlarge
              - m5dn.16xlarge
              - m5dn.24xlarge
              - m5dn.metal
              - m5n.large
              - m5n.xlarge
              - m5n.2xlarge
              - m5n.4xlarge
              - m5n.8xlarge
              - m5n.12xlarge
              - m5n.16xlarge
              - m5n.24xlarge
              - m5n.metal
              - m5zn.large
              - m5zn.xlarge
              - m5zn.2xlarge
              - m5zn.3xlarge
              - m5zn.6xlarge
              - m5zn.12xlarge
              - m5zn.metal
              - m6a.large
              - m6a.xlarge
              - m6a.2xlarge
              - m6a.4xlarge
              - m6a.8xlarge
              - m6a.12xlarge
              - m6a.16xlarge
              - m6a.24xlarge
              - m6a.32xlarge
              - m6a.48xlarge
              - m6g.metal
              - m6g.medium
              - m6g.large
              - m6g.xlarge
              - m6g.2xlarge
              - m6g.4xlarge
              - m6g.8xlarge
              - m6g.12xlarge
              - m6g.16xlarge
              - m6gd.metal
              - m6gd.medium
              - m6gd.large
              - m6gd.xlarge
              - m6gd.2xlarge
              - m6gd.4xlarge
              - m6gd.8xlarge
              - m6gd.12xlarge
              - m6gd.16xlarge
              - m6i.large
              - m6i.xlarge
              - m6i.2xlarge
              - m6i.4xlarge
              - m6i.8xlarge
              - m6i.12xlarge
              - m6i.16xlarge
              - m6i.24xlarge
              - m6i.32xlarge
              - m6i.metal
              - mac1.metal
              - p2.xlarge
              - p2.8xlarge
              - p2.16xlarge
              - p3.2xlarge
              - p3.8xlarge
              - p3.16xlarge
              - p3dn.24xlarge
              - p4d.24xlarge
              - r3.large
              - r3.xlarge
              - r3.2xlarge
              - r3.4xlarge
              - r3.8xlarge
              - r4.large
              - r4.xlarge
              - r4.2xlarge
              - r4.4xlarge
              - r4.8xlarge
              - r4.16xlarge
              - r5.large
              - r5.xlarge
              - r5.2xlarge
              - r5.4xlarge
              - r5.8xlarge
              - r5.12xlarge
              - r5.16xlarge
              - r5.24xlarge
              - r5.metal
              - r5a.large
              - r5a.xlarge
              - r5a.2xlarge
              - r5a.4xlarge
              - r5a.8xlarge
              - r5a.12xlarge
              - r5a.16xlarge
              - r5a.24xlarge
              - r5ad.large
              - r5ad.xlarge
              - r5ad.2xlarge
              - r5ad.4xlarge
              - r5ad.8xlarge
              - r5ad.12xlarge
              - r5ad.16xlarge
              - r5ad.24xlarge
              - r5b.large
              - r5b.xlarge
              - r5b.2xlarge
              - r5b.4xlarge
              - r5b.8xlarge
              - r5b.12xlarge
              - r5b.16xlarge
              - r5b.24xlarge
              - r5b.metal
              - r5d.large
              - r5d.xlarge
              - r5d.2xlarge
              - r5d.4xlarge
              - r5d.8xlarge
              - r5d.12xlarge
              - r5d.16xlarge
              - r5d.24xlarge
              - r5d.metal
              - r5dn.large
              - r5dn.xlarge
              - r5dn.2xlarge
              - r5dn.4xlarge
              - r5dn.8xlarge
              - r5dn.12xlarge
              - r5dn.16xlarge
              - r5dn.24xlarge
              - r5dn.metal
              - r5n.large
              - r5n.xlarge
              - r5n.2xlarge
              - r5n.4xlarge
              - r5n.8xlarge
              - r5n.12xlarge
              - r5n.16xlarge
              - r5n.24xlarge
              - r5n.metal
              - r6g.medium
              - r6g.large
              - r6g.xlarge
              - r6g.2xlarge
              - r6g.4xlarge
              - r6g.8xlarge
              - r6g.12xlarge
              - r6g.16xlarge
              - r6g.metal
              - r6gd.medium
              - r6gd.large
              - r6gd.xlarge
              - r6gd.2xlarge
              - r6gd.4xlarge
              - r6gd.8xlarge
              - r6gd.12xlarge
              - r6gd.16xlarge
              - r6gd.metal
              - r6i.large
              - r6i.xlarge
              - r6i.2xlarge
              - r6i.4xlarge
              - r6i.8xlarge
              - r6i.12xlarge
              - r6i.16xlarge
              - r6i.24xlarge
              - r6i.32xlarge
              - r6i.metal
              - t1.micro
              - t2.nano
              - t2.micro
              - t2.small
              - t2.medium
              - t2.large
              - t2.xlarge
              - t2.2xlarge
              - t3.nano
              - t3.micro
              - t3.small
              - t3.medium
              - t3.large
              - t3.xlarge
              - t3.2xlarge
              - t3a.nano
              - t3a.micro
              - t3a.small
              - t3a.medium
              - t3a.large
              - t3a.xlarge
              - t3a.2xlarge
              - t4g.nano
              - t4g.micro
              - t4g.small
              - t4g.medium
              - t4g.large
              - t4g.xlarge
              - t4g.2xlarge
              - u-6tb1.56xlarge
              - u-6tb1.112xlarge
              - u-9tb1.112xlarge
              - u-12tb1.112xlarge
              - u-6tb1.metal
              - u-9tb1.metal
              - u-12tb1.metal
              - u-18tb1.metal
              - u-24tb1.metal
              - vt1.3xlarge
              - vt1.6xlarge
              - vt1.24xlarge
              - x1.16xlarge
              - x1.32xlarge
              - x1e.xlarge
              - x1e.2xlarge
              - x1e.4xlarge
              - x1e.8xlarge
              - x1e.16xlarge
              - x1e.32xlarge
              - x2iezn.2xlarge
              - x2iezn.4xlarge
              - x2iezn.6xlarge
              - x2iezn.8xlarge
              - x2iezn.12xlarge
              - x2iezn.metal
              - x2gd.medium
              - x2gd.large
              - x2gd.xlarge
              - x2gd.2xlarge
              - x2gd.4xlarge
              - x2gd.8xlarge
              - x2gd.12xlarge
              - x2gd.16xlarge
              - x2gd.metal
              - z1d.large
              - z1d.xlarge
              - z1d.2xlarge
              - z1d.3xlarge
              - z1d.6xlarge
              - z1d.12xlarge
              - z1d.metal
              - x2idn.16xlarge
              - x2idn.24xlarge
              - x2idn.32xlarge
              - x2iedn.xlarge
              - x2iedn.2xlarge
              - x2iedn.4xlarge
              - x2iedn.8xlarge
              - x2iedn.16xlarge
              - x2iedn.24xlarge
              - x2iedn.32xlarge
              - c6a.large
              - c6a.xlarge
              - c6a.2xlarge
              - c6a.4xlarge
              - c6a.8xlarge
              - c6a.12xlarge
              - c6a.16xlarge
              - c6a.24xlarge
              - c6a.32xlarge
              - c6a.48xlarge
              - c6a.metal
              - m6a.metal
              - i4i.large
              - i4i.xlarge
              - i4i.2xlarge
              - i4i.4xlarge
              - i4i.8xlarge
              - i4i.16xlarge
              - i4i.32xlarge
        - name: MaxDuration
          in: query
          required: false
          description: '<p>The maximum duration (in seconds) to filter when searching for offerings.</p> <p>Default: 94608000 (3 years)</p>'
          schema:
            type: integer
        - name: MaxInstanceCount
          in: query
          required: false
          description: '<p>The maximum number of instances to filter when searching for offerings.</p> <p>Default: 20</p>'
          schema:
            type: integer
        - name: MinDuration
          in: query
          required: false
          description: '<p>The minimum duration (in seconds) to filter when searching for offerings.</p> <p>Default: 2592000 (1 month)</p>'
          schema:
            type: integer
        - name: OfferingClass
          in: query
          required: false
          description: The offering class of the Reserved Instance. Can be <code>standard</code> or <code>convertible</code>.
          schema:
            type: string
            enum:
              - standard
              - convertible
        - name: ProductDescription
          in: query
          required: false
          description: The Reserved Instance product platform description. Instances that include <code>(Amazon VPC)</code> in the description are for use with Amazon VPC.
          schema:
            type: string
            enum:
              - Linux/UNIX
              - Linux/UNIX (Amazon VPC)
              - Windows
              - Windows (Amazon VPC)
        - name: ReservedInstancesOfferingId
          in: query
          required: false
          description: One or more Reserved Instances offering IDs.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ReservedInstancesOfferingId'
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: InstanceTenancy
          in: query
          required: false
          description: '<p>The tenancy of the instances covered by the reservation. A Reserved Instance with a tenancy of <code>dedicated</code> is applied to instances that run in a VPC on single-tenant hardware (i.e., Dedicated Instances).</p> <p> <b>Important:</b> The <code>host</code> value cannot be used with this parameter. Use the <code>default</code> or <code>dedicated</code> values only.</p> <p>Default: <code>default</code> </p>'
          schema:
            type: string
            enum:
              - default
              - dedicated
              - host
        - name: MaxResults
          in: query
          required: false
          description: '<p>The maximum number of results to return for the request in a single page. The remaining results of the initial request can be seen by sending another request with the returned <code>NextToken</code> value. The maximum is 100.</p> <p>Default: 100</p>'
          schema:
            type: integer
        - name: NextToken
          in: query
          required: false
          description: The token to retrieve the next page of results.
          schema:
            type: string
        - name: OfferingType
          in: query
          required: false
          description: 'The Reserved Instance offering type. If you are using tools that predate the 2011-11-01 API version, you only have access to the <code>Medium Utilization</code> Reserved Instance offering type. '
          schema:
            type: string
            enum:
              - Heavy Utilization
              - Medium Utilization
              - Light Utilization
              - No Upfront
              - Partial Upfront
              - All Upfront
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeReservedInstancesOfferings
      operationId: POST_DescribeReservedInstancesOfferings
      description: '<p>Describes Reserved Instance offerings that are available for purchase. With Reserved Instances, you purchase the right to launch instances for a period of time. During that time period, you do not receive insufficient capacity errors, and you pay a lower usage rate than the rate charged for On-Demand instances for the actual time used.</p> <p>If you have listed your own Reserved Instances for sale in the Reserved Instance Marketplace, they will be excluded from these results. This is to ensure that you do not purchase your own Reserved Instances.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved Instance Marketplace</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeReservedInstancesOfferingsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeReservedInstancesOfferingsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeRouteTables&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeRouteTables
      operationId: GET_DescribeRouteTables
      description: '<p>Describes one or more of your route tables.</p> <p>Each subnet in your VPC must be associated with a route table. If a subnet is not explicitly associated with any route table, it is implicitly associated with the main route table. This command does not return the subnet ID for implicit associations.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html">Route tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeRouteTablesResult'
      parameters:
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters.</p> <ul> <li> <p> <code>association.route-table-association-id</code> - The ID of an association ID for the route table.</p> </li> <li> <p> <code>association.route-table-id</code> - The ID of the route table involved in the association.</p> </li> <li> <p> <code>association.subnet-id</code> - The ID of the subnet involved in the association.</p> </li> <li> <p> <code>association.main</code> - Indicates whether the route table is the main route table for the VPC (<code>true</code> | <code>false</code>). Route tables that do not have an association ID are not returned in the response.</p> </li> <li> <p> <code>owner-id</code> - The ID of the Amazon Web Services account that owns the route table.</p> </li> <li> <p> <code>route-table-id</code> - The ID of the route table.</p> </li> <li> <p> <code>route.destination-cidr-block</code> - The IPv4 CIDR range specified in a route in the table.</p> </li> <li> <p> <code>route.destination-ipv6-cidr-block</code> - The IPv6 CIDR range specified in a route in the route table.</p> </li> <li> <p> <code>route.destination-prefix-list-id</code> - The ID (prefix) of the Amazon Web Service specified in a route in the table.</p> </li> <li> <p> <code>route.egress-only-internet-gateway-id</code> - The ID of an egress-only Internet gateway specified in a route in the route table.</p> </li> <li> <p> <code>route.gateway-id</code> - The ID of a gateway specified in a route in the table.</p> </li> <li> <p> <code>route.instance-id</code> - The ID of an instance specified in a route in the table.</p> </li> <li> <p> <code>route.nat-gateway-id</code> - The ID of a NAT gateway.</p> </li> <li> <p> <code>route.transit-gateway-id</code> - The ID of a transit gateway.</p> </li> <li> <p> <code>route.origin</code> - Describes how the route was created. <code>CreateRouteTable</code> indicates that the route was automatically created when the route table was created; <code>CreateRoute</code> indicates that the route was manually added to the route table; <code>EnableVgwRoutePropagation</code> indicates that the route was propagated by route propagation.</p> </li> <li> <p> <code>route.state</code> - The state of a route in the route table (<code>active</code> | <code>blackhole</code>). The blackhole state indicates that the route''s target isn''t available (for example, the specified gateway isn''t attached to the VPC, the specified NAT instance has been terminated, and so on).</p> </li> <li> <p> <code>route.vpc-peering-connection-id</code> - The ID of a VPC peering connection specified in a route in the table.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC for the route table.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: RouteTableId
          in: query
          required: false
          description: '<p>One or more route table IDs.</p> <p>Default: Describes all your route tables.</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/RouteTableId'
                - xml:
                    name: item
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 5
            maximum: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeRouteTables
      operationId: POST_DescribeRouteTables
      description: '<p>Describes one or more of your route tables.</p> <p>Each subnet in your VPC must be associated with a route table. If a subnet is not explicitly associated with any route table, it is implicitly associated with the main route table. This command does not return the subnet ID for implicit associations.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html">Route tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeRouteTablesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeRouteTablesRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeScheduledInstanceAvailability&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeScheduledInstanceAvailability
      operationId: GET_DescribeScheduledInstanceAvailability
      description: '<p>Finds available schedules that meet the specified criteria.</p> <p>You can search for an available schedule no more than 3 months in advance. You must meet the minimum required duration of 1,200 hours per year. For example, the minimum daily schedule is 4 hours, the minimum weekly schedule is 24 hours, and the minimum monthly schedule is 100 hours.</p> <p>After you find a schedule that meets your needs, call <a>PurchaseScheduledInstances</a> to purchase Scheduled Instances with that schedule.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeScheduledInstanceAvailabilityResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: Filter
          in: query
          required: false
          description: '<p>The filters.</p> <ul> <li> <p> <code>availability-zone</code> - The Availability Zone (for example, <code>us-west-2a</code>).</p> </li> <li> <p> <code>instance-type</code> - The instance type (for example, <code>c4.large</code>).</p> </li> <li> <p> <code>network-platform</code> - The network platform (<code>EC2-Classic</code> or <code>EC2-VPC</code>).</p> </li> <li> <p> <code>platform</code> - The platform (<code>Linux/UNIX</code> or <code>Windows</code>).</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: FirstSlotStartTimeRange
          in: query
          required: true
          description: The time period for the first schedule to start.
          schema:
            type: object
            required:
              - EarliestTime
              - LatestTime
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/DateTime'
                  - description: 'The latest date and time, in UTC, for the Scheduled Instance to start. This value must be later than or equal to the earliest date and at most three months in the future.'
            description: Describes the time period for a Scheduled Instance to start its first schedule. The time period must span less than one day.
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return in a single call. This value can be between 5 and 300. The default value is 300. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.'
          schema:
            type: integer
            minimum: 5
            maximum: 300
        - name: MaxSlotDurationInHours
          in: query
          required: false
          description: 'The maximum available duration, in hours. This value must be greater than <code>MinSlotDurationInHours</code> and less than 1,720.'
          schema:
            type: integer
        - name: MinSlotDurationInHours
          in: query
          required: false
          description: 'The minimum available duration, in hours. The minimum required duration is 1,200 hours per year. For example, the minimum daily schedule is 4 hours, the minimum weekly schedule is 24 hours, and the minimum monthly schedule is 100 hours.'
          schema:
            type: integer
        - name: NextToken
          in: query
          required: false
          description: The token for the next set of results.
          schema:
            type: string
        - name: Recurrence
          in: query
          required: true
          description: The schedule recurrence.
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/Integer'
                  - description: 'The interval quantity. The interval unit depends on the value of <code>Frequency</code>. For example, every 2 weeks or every 2 months.'
              OccurrenceDay:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: The unit for <code>OccurrenceDays</code> (<code>DayOfWeek</code> or <code>DayOfMonth</code>). This value is required for a monthly schedule. You can't specify <code>DayOfWeek</code> with a weekly schedule. You can't specify this value with a daily schedule.
            description: Describes the recurring schedule for a Scheduled Instance.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeScheduledInstanceAvailability
      operationId: POST_DescribeScheduledInstanceAvailability
      description: '<p>Finds available schedules that meet the specified criteria.</p> <p>You can search for an available schedule no more than 3 months in advance. You must meet the minimum required duration of 1,200 hours per year. For example, the minimum daily schedule is 4 hours, the minimum weekly schedule is 24 hours, and the minimum monthly schedule is 100 hours.</p> <p>After you find a schedule that meets your needs, call <a>PurchaseScheduledInstances</a> to purchase Scheduled Instances with that schedule.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeScheduledInstanceAvailabilityResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeScheduledInstanceAvailabilityRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeScheduledInstances&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeScheduledInstances
      operationId: GET_DescribeScheduledInstances
      description: Describes the specified Scheduled Instances or all your Scheduled Instances.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeScheduledInstancesResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: Filter
          in: query
          required: false
          description: '<p>The filters.</p> <ul> <li> <p> <code>availability-zone</code> - The Availability Zone (for example, <code>us-west-2a</code>).</p> </li> <li> <p> <code>instance-type</code> - The instance type (for example, <code>c4.large</code>).</p> </li> <li> <p> <code>network-platform</code> - The network platform (<code>EC2-Classic</code> or <code>EC2-VPC</code>).</p> </li> <li> <p> <code>platform</code> - The platform (<code>Linux/UNIX</code> or <code>Windows</code>).</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return in a single call. This value can be between 5 and 300. The default value is 100. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.'
          schema:
            type: integer
        - name: NextToken
          in: query
          required: false
          description: The token for the next set of results.
          schema:
            type: string
        - name: ScheduledInstanceId
          in: query
          required: false
          description: The Scheduled Instance IDs.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/ScheduledInstanceId'
                - xml:
                    name: ScheduledInstanceId
        - name: SlotStartTimeRange
          in: query
          required: false
          description: The time period for the first schedule to start.
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/DateTime'
                  - description: 'The latest date and time, in UTC, for the Scheduled Instance to start.'
            description: Describes the time period for a Scheduled Instance to start its first schedule.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeScheduledInstances
      operationId: POST_DescribeScheduledInstances
      description: Describes the specified Scheduled Instances or all your Scheduled Instances.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeScheduledInstancesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeScheduledInstancesRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeSecurityGroupReferences&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeSecurityGroupReferences
      operationId: GET_DescribeSecurityGroupReferences
      description: '[VPC only] Describes the VPCs on the other side of a VPC peering connection that are referencing the security groups you''ve specified in this request.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeSecurityGroupReferencesResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: GroupId
          in: query
          required: true
          description: The IDs of the security groups in your account.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/SecurityGroupId'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeSecurityGroupReferences
      operationId: POST_DescribeSecurityGroupReferences
      description: '[VPC only] Describes the VPCs on the other side of a VPC peering connection that are referencing the security groups you''ve specified in this request.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeSecurityGroupReferencesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeSecurityGroupReferencesRequest'
      parameters: []
  /?Action=DescribeSecurityGroupRules&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeSecurityGroupRules
      operationId: GET_DescribeSecurityGroupRules
      description: Describes one or more of your security group rules.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeSecurityGroupRulesResult'
      parameters:
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters.</p> <ul> <li> <p> <code>group-id</code> - The ID of the security group.</p> </li> <li> <p> <code>security-group-rule-id</code> - The ID of the security group rule.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: SecurityGroupRuleId
          in: query
          required: false
          description: The IDs of the security group rules.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: item
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return in a single call. To retrieve the remaining results, make another request with the returned <code>NextToken</code> value. This value can be between 5 and 1000. If this parameter is not specified, then all results are returned.'
          schema:
            type: integer
            minimum: 5
            maximum: 1000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeSecurityGroupRules
      operationId: POST_DescribeSecurityGroupRules
      description: Describes one or more of your security group rules.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeSecurityGroupRulesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeSecurityGroupRulesRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeSecurityGroups&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeSecurityGroups
      operationId: GET_DescribeSecurityGroups
      description: '<p>Describes the specified security groups or all of your security groups.</p> <p>A security group is for use with instances either in the EC2-Classic platform or in a specific VPC. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html">Amazon EC2 security groups</a> in the <i>Amazon Elastic Compute Cloud User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html">Security groups for your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeSecurityGroupsResult'
      parameters:
        - name: Filter
          in: query
          required: false
          description: '<p>The filters. If using multiple filters for rules, the results include security groups for which any combination of rules - not necessarily a single rule - match all filters.</p> <ul> <li> <p> <code>description</code> - The description of the security group.</p> </li> <li> <p> <code>egress.ip-permission.cidr</code> - An IPv4 CIDR block for an outbound security group rule.</p> </li> <li> <p> <code>egress.ip-permission.from-port</code> - For an outbound rule, the start of port range for the TCP and UDP protocols, or an ICMP type number.</p> </li> <li> <p> <code>egress.ip-permission.group-id</code> - The ID of a security group that has been referenced in an outbound security group rule.</p> </li> <li> <p> <code>egress.ip-permission.group-name</code> - The name of a security group that is referenced in an outbound security group rule.</p> </li> <li> <p> <code>egress.ip-permission.ipv6-cidr</code> - An IPv6 CIDR block for an outbound security group rule.</p> </li> <li> <p> <code>egress.ip-permission.prefix-list-id</code> - The ID of a prefix list to which a security group rule allows outbound access.</p> </li> <li> <p> <code>egress.ip-permission.protocol</code> - The IP protocol for an outbound security group rule (<code>tcp</code> | <code>udp</code> | <code>icmp</code>, a protocol number, or -1 for all protocols).</p> </li> <li> <p> <code>egress.ip-permission.to-port</code> - For an outbound rule, the end of port range for the TCP and UDP protocols, or an ICMP code.</p> </li> <li> <p> <code>egress.ip-permission.user-id</code> - The ID of an Amazon Web Services account that has been referenced in an outbound security group rule.</p> </li> <li> <p> <code>group-id</code> - The ID of the security group. </p> </li> <li> <p> <code>group-name</code> - The name of the security group.</p> </li> <li> <p> <code>ip-permission.cidr</code> - An IPv4 CIDR block for an inbound security group rule.</p> </li> <li> <p> <code>ip-permission.from-port</code> - For an inbound rule, the start of port range for the TCP and UDP protocols, or an ICMP type number.</p> </li> <li> <p> <code>ip-permission.group-id</code> - The ID of a security group that has been referenced in an inbound security group rule.</p> </li> <li> <p> <code>ip-permission.group-name</code> - The name of a security group that is referenced in an inbound security group rule.</p> </li> <li> <p> <code>ip-permission.ipv6-cidr</code> - An IPv6 CIDR block for an inbound security group rule.</p> </li> <li> <p> <code>ip-permission.prefix-list-id</code> - The ID of a prefix list from which a security group rule allows inbound access.</p> </li> <li> <p> <code>ip-permission.protocol</code> - The IP protocol for an inbound security group rule (<code>tcp</code> | <code>udp</code> | <code>icmp</code>, a protocol number, or -1 for all protocols).</p> </li> <li> <p> <code>ip-permission.to-port</code> - For an inbound rule, the end of port range for the TCP and UDP protocols, or an ICMP code.</p> </li> <li> <p> <code>ip-permission.user-id</code> - The ID of an Amazon Web Services account that has been referenced in an inbound security group rule.</p> </li> <li> <p> <code>owner-id</code> - The Amazon Web Services account ID of the owner of the security group.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC specified when the security group was created.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: GroupId
          in: query
          required: false
          description: '<p>The IDs of the security groups. Required for security groups in a nondefault VPC.</p> <p>Default: Describes all of your security groups.</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/SecurityGroupId'
                - xml:
                    name: groupId
        - name: GroupName
          in: query
          required: false
          description: '<p>[EC2-Classic and default VPC only] The names of the security groups. You can specify either the security group name or the security group ID. For security groups in a nondefault VPC, use the <code>group-name</code> filter to describe security groups by name.</p> <p>Default: Describes all of your security groups.</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/SecurityGroupName'
                - xml:
                    name: GroupName
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: NextToken
          in: query
          required: false
          description: The token to request the next page of results.
          schema:
            type: string
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return in a single call. To retrieve the remaining results, make another request with the returned <code>NextToken</code> value. This value can be between 5 and 1000. If this parameter is not specified, then all results are returned.'
          schema:
            type: integer
            minimum: 5
            maximum: 1000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeSecurityGroups
      operationId: POST_DescribeSecurityGroups
      description: '<p>Describes the specified security groups or all of your security groups.</p> <p>A security group is for use with instances either in the EC2-Classic platform or in a specific VPC. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html">Amazon EC2 security groups</a> in the <i>Amazon Elastic Compute Cloud User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html">Security groups for your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeSecurityGroupsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeSecurityGroupsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeSnapshotAttribute&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeSnapshotAttribute
      operationId: GET_DescribeSnapshotAttribute
      description: '<p>Describes the specified attribute of the specified snapshot. You can specify only one attribute at a time.</p> <p>For more information about EBS snapshots, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSSnapshots.html">Amazon EBS snapshots</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeSnapshotAttributeResult'
      parameters:
        - name: Attribute
          in: query
          required: true
          description: The snapshot attribute you would like to view.
          schema:
            type: string
            enum:
              - productCodes
              - createVolumePermission
        - name: SnapshotId
          in: query
          required: true
          description: The ID of the EBS snapshot.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeSnapshotAttribute
      operationId: POST_DescribeSnapshotAttribute
      description: '<p>Describes the specified attribute of the specified snapshot. You can specify only one attribute at a time.</p> <p>For more information about EBS snapshots, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSSnapshots.html">Amazon EBS snapshots</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeSnapshotAttributeResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeSnapshotAttributeRequest'
      parameters: []
  /?Action=DescribeSnapshotTierStatus&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeSnapshotTierStatus
      operationId: GET_DescribeSnapshotTierStatus
      description: Describes the storage tier status of one or more Amazon EBS snapshots.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeSnapshotTierStatusResult'
      parameters:
        - name: Filter
          in: query
          required: false
          description: <p>The filters.</p> <ul> <li> <p> <code>snapshot-id</code> - The snapshot ID.</p> </li> <li> <p> <code>volume-id</code> - The ID of the volume the snapshot is for.</p> </li> <li> <p> <code>last-tiering-operation</code> - The state of the last archive or restore action. (<code>archival-in-progress</code> | <code>archival-completed</code> | <code>archival-failed</code> | <code>permanent-restore-in-progress</code> | <code>permanent-restore-completed</code> | <code>permanent-restore-failed</code> | <code>temporary-restore-in-progress</code> | <code>temporary-restore-completed</code> | <code>temporary-restore-failed</code>)</p> </li> </ul>
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeSnapshotTierStatus
      operationId: POST_DescribeSnapshotTierStatus
      description: Describes the storage tier status of one or more Amazon EBS snapshots.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeSnapshotTierStatusResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeSnapshotTierStatusRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeSnapshots&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeSnapshots
      operationId: GET_DescribeSnapshots
      description: '<p>Describes the specified EBS snapshots available to you or all of the EBS snapshots available to you.</p> <p>The snapshots available to you include public snapshots, private snapshots that you own, and private snapshots owned by other Amazon Web Services accounts for which you have explicit create volume permissions.</p> <p>The create volume permissions fall into the following categories:</p> <ul> <li> <p> <i>public</i>: The owner of the snapshot granted create volume permissions for the snapshot to the <code>all</code> group. All Amazon Web Services accounts have create volume permissions for these snapshots.</p> </li> <li> <p> <i>explicit</i>: The owner of the snapshot granted create volume permissions to a specific Amazon Web Services account.</p> </li> <li> <p> <i>implicit</i>: An Amazon Web Services account has implicit create volume permissions for all snapshots it owns.</p> </li> </ul> <p>The list of snapshots returned can be filtered by specifying snapshot IDs, snapshot owners, or Amazon Web Services accounts with create volume permissions. If no options are specified, Amazon EC2 returns all snapshots for which you have create volume permissions.</p> <p>If you specify one or more snapshot IDs, only snapshots that have the specified IDs are returned. If you specify an invalid snapshot ID, an error is returned. If you specify a snapshot ID for which you do not have access, it is not included in the returned results.</p> <p>If you specify one or more snapshot owners using the <code>OwnerIds</code> option, only snapshots from the specified owners and for which you have access are returned. The results can include the Amazon Web Services account IDs of the specified owners, <code>amazon</code> for snapshots owned by Amazon, or <code>self</code> for snapshots that you own.</p> <p>If you specify a list of restorable users, only snapshots with create snapshot permissions for those users are returned. You can specify Amazon Web Services account IDs (if you own the snapshots), <code>self</code> for snapshots for which you own or have explicit permissions, or <code>all</code> for public snapshots.</p> <p>If you are describing a long list of snapshots, we recommend that you paginate the output to make the list more manageable. The <code>MaxResults</code> parameter sets the maximum number of results returned in a single page. If the list of results exceeds your <code>MaxResults</code> value, then that number of results is returned along with a <code>NextToken</code> value that can be passed to a subsequent <code>DescribeSnapshots</code> request to retrieve the remaining results.</p> <p>To get the state of fast snapshot restores for a snapshot, use <a>DescribeFastSnapshotRestores</a>.</p> <p>For more information about EBS snapshots, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSSnapshots.html">Amazon EBS snapshots</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeSnapshotsResult'
      parameters:
        - name: Filter
          in: query
          required: false
          description: '<p>The filters.</p> <ul> <li> <p> <code>description</code> - A description of the snapshot.</p> </li> <li> <p> <code>encrypted</code> - Indicates whether the snapshot is encrypted (<code>true</code> | <code>false</code>)</p> </li> <li> <p> <code>owner-alias</code> - The owner alias, from an Amazon-maintained list (<code>amazon</code>). This is not the user-configured Amazon Web Services account alias set using the IAM console. We recommend that you use the related parameter instead of this filter.</p> </li> <li> <p> <code>owner-id</code> - The Amazon Web Services account ID of the owner. We recommend that you use the related parameter instead of this filter.</p> </li> <li> <p> <code>progress</code> - The progress of the snapshot, as a percentage (for example, 80%).</p> </li> <li> <p> <code>snapshot-id</code> - The snapshot ID.</p> </li> <li> <p> <code>start-time</code> - The time stamp when the snapshot was initiated.</p> </li> <li> <p> <code>status</code> - The status of the snapshot (<code>pending</code> | <code>completed</code> | <code>error</code>).</p> </li> <li> <p> <code>storage-tier</code> - The storage tier of the snapshot (<code>archive</code> | <code>standard</code>).</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>volume-id</code> - The ID of the volume the snapshot is for.</p> </li> <li> <p> <code>volume-size</code> - The size of the volume, in GiB.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of snapshot results returned by <code>DescribeSnapshots</code> in paginated output. When this parameter is used, <code>DescribeSnapshots</code> only returns <code>MaxResults</code> results in a single page along with a <code>NextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeSnapshots</code> request with the returned <code>NextToken</code> value. This value can be between 5 and 1,000; if <code>MaxResults</code> is given a value larger than 1,000, only 1,000 results are returned. If this parameter is not used, then <code>DescribeSnapshots</code> returns all results. You cannot specify this parameter and the snapshot IDs parameter in the same request.'
          schema:
            type: integer
        - name: NextToken
          in: query
          required: false
          description: The <code>NextToken</code> value returned from a previous paginated <code>DescribeSnapshots</code> request where <code>MaxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>NextToken</code> value. This value is <code>null</code> when there are no more results to return.
          schema:
            type: string
        - name: Owner
          in: query
          required: false
          description: 'Scopes the results to snapshots with the specified owners. You can specify a combination of Amazon Web Services account IDs, <code>self</code>, and <code>amazon</code>.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: Owner
        - name: RestorableBy
          in: query
          required: false
          description: The IDs of the Amazon Web Services accounts that can create volumes from the snapshot.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/String'
        - name: SnapshotId
          in: query
          required: false
          description: '<p>The snapshot IDs.</p> <p>Default: Describes the snapshots for which you have create volume permissions.</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/SnapshotId'
                - xml:
                    name: SnapshotId
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeSnapshots
      operationId: POST_DescribeSnapshots
      description: '<p>Describes the specified EBS snapshots available to you or all of the EBS snapshots available to you.</p> <p>The snapshots available to you include public snapshots, private snapshots that you own, and private snapshots owned by other Amazon Web Services accounts for which you have explicit create volume permissions.</p> <p>The create volume permissions fall into the following categories:</p> <ul> <li> <p> <i>public</i>: The owner of the snapshot granted create volume permissions for the snapshot to the <code>all</code> group. All Amazon Web Services accounts have create volume permissions for these snapshots.</p> </li> <li> <p> <i>explicit</i>: The owner of the snapshot granted create volume permissions to a specific Amazon Web Services account.</p> </li> <li> <p> <i>implicit</i>: An Amazon Web Services account has implicit create volume permissions for all snapshots it owns.</p> </li> </ul> <p>The list of snapshots returned can be filtered by specifying snapshot IDs, snapshot owners, or Amazon Web Services accounts with create volume permissions. If no options are specified, Amazon EC2 returns all snapshots for which you have create volume permissions.</p> <p>If you specify one or more snapshot IDs, only snapshots that have the specified IDs are returned. If you specify an invalid snapshot ID, an error is returned. If you specify a snapshot ID for which you do not have access, it is not included in the returned results.</p> <p>If you specify one or more snapshot owners using the <code>OwnerIds</code> option, only snapshots from the specified owners and for which you have access are returned. The results can include the Amazon Web Services account IDs of the specified owners, <code>amazon</code> for snapshots owned by Amazon, or <code>self</code> for snapshots that you own.</p> <p>If you specify a list of restorable users, only snapshots with create snapshot permissions for those users are returned. You can specify Amazon Web Services account IDs (if you own the snapshots), <code>self</code> for snapshots for which you own or have explicit permissions, or <code>all</code> for public snapshots.</p> <p>If you are describing a long list of snapshots, we recommend that you paginate the output to make the list more manageable. The <code>MaxResults</code> parameter sets the maximum number of results returned in a single page. If the list of results exceeds your <code>MaxResults</code> value, then that number of results is returned along with a <code>NextToken</code> value that can be passed to a subsequent <code>DescribeSnapshots</code> request to retrieve the remaining results.</p> <p>To get the state of fast snapshot restores for a snapshot, use <a>DescribeFastSnapshotRestores</a>.</p> <p>For more information about EBS snapshots, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSSnapshots.html">Amazon EBS snapshots</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeSnapshotsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeSnapshotsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeSpotDatafeedSubscription&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeSpotDatafeedSubscription
      operationId: GET_DescribeSpotDatafeedSubscription
      description: 'Describes the data feed for Spot Instances. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-data-feeds.html">Spot Instance data feed</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeSpotDatafeedSubscriptionResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeSpotDatafeedSubscription
      operationId: POST_DescribeSpotDatafeedSubscription
      description: 'Describes the data feed for Spot Instances. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-data-feeds.html">Spot Instance data feed</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeSpotDatafeedSubscriptionResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeSpotDatafeedSubscriptionRequest'
      parameters: []
  /?Action=DescribeSpotFleetInstances&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeSpotFleetInstances
      operationId: GET_DescribeSpotFleetInstances
      description: Describes the running instances for the specified Spot Fleet.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeSpotFleetInstancesResponse'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.'
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token for the next set of results.
          schema:
            type: string
        - name: SpotFleetRequestId
          in: query
          required: true
          description: The ID of the Spot Fleet request.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeSpotFleetInstances
      operationId: POST_DescribeSpotFleetInstances
      description: Describes the running instances for the specified Spot Fleet.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeSpotFleetInstancesResponse'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeSpotFleetInstancesRequest'
      parameters: []
  /?Action=DescribeSpotFleetRequestHistory&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeSpotFleetRequestHistory
      operationId: GET_DescribeSpotFleetRequestHistory
      description: '<p>Describes the events for the specified Spot Fleet request during the specified time.</p> <p>Spot Fleet events are delayed by up to 30 seconds before they can be described. This ensures that you can query by the last evaluated time and not miss a recorded event. Spot Fleet events are available for 48 hours.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/fleet-monitor.html">Monitor fleet events using Amazon EventBridge</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeSpotFleetRequestHistoryResponse'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: EventType
          in: query
          required: false
          description: 'The type of events to describe. By default, all events are described.'
          schema:
            type: string
            enum:
              - instanceChange
              - fleetRequestChange
              - error
              - information
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.'
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token for the next set of results.
          schema:
            type: string
        - name: SpotFleetRequestId
          in: query
          required: true
          description: The ID of the Spot Fleet request.
          schema:
            type: string
        - name: StartTime
          in: query
          required: true
          description: 'The starting date and time for the events, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).'
          schema:
            type: string
            format: date-time
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeSpotFleetRequestHistory
      operationId: POST_DescribeSpotFleetRequestHistory
      description: '<p>Describes the events for the specified Spot Fleet request during the specified time.</p> <p>Spot Fleet events are delayed by up to 30 seconds before they can be described. This ensures that you can query by the last evaluated time and not miss a recorded event. Spot Fleet events are available for 48 hours.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/fleet-monitor.html">Monitor fleet events using Amazon EventBridge</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeSpotFleetRequestHistoryResponse'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeSpotFleetRequestHistoryRequest'
      parameters: []
  /?Action=DescribeSpotFleetRequests&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeSpotFleetRequests
      operationId: GET_DescribeSpotFleetRequests
      description: <p>Describes your Spot Fleet requests.</p> <p>Spot Fleet requests are deleted 48 hours after they are canceled and their instances are terminated.</p>
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeSpotFleetRequestsResponse'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.'
          schema:
            type: integer
        - name: NextToken
          in: query
          required: false
          description: The token for the next set of results.
          schema:
            type: string
        - name: SpotFleetRequestId
          in: query
          required: false
          description: The IDs of the Spot Fleet requests.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/SpotFleetRequestId'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeSpotFleetRequests
      operationId: POST_DescribeSpotFleetRequests
      description: <p>Describes your Spot Fleet requests.</p> <p>Spot Fleet requests are deleted 48 hours after they are canceled and their instances are terminated.</p>
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeSpotFleetRequestsResponse'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeSpotFleetRequestsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeSpotInstanceRequests&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeSpotInstanceRequests
      operationId: GET_DescribeSpotInstanceRequests
      description: '<p>Describes the specified Spot Instance requests.</p> <p>You can use <code>DescribeSpotInstanceRequests</code> to find a running Spot Instance by examining the response. If the status of the Spot Instance is <code>fulfilled</code>, the instance ID appears in the response and contains the identifier of the instance. Alternatively, you can use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances">DescribeInstances</a> with a filter to look for instances where the instance lifecycle is <code>spot</code>.</p> <p>We recommend that you set <code>MaxResults</code> to a value between 5 and 1000 to limit the number of results returned. This paginates the output, which makes the list more manageable and returns the results faster. If the list of results exceeds your <code>MaxResults</code> value, then that number of results is returned along with a <code>NextToken</code> value that can be passed to a subsequent <code>DescribeSpotInstanceRequests</code> request to retrieve the remaining results.</p> <p>Spot Instance requests are deleted four hours after they are canceled and their instances are terminated.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeSpotInstanceRequestsResult'
      parameters:
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters.</p> <ul> <li> <p> <code>availability-zone-group</code> - The Availability Zone group.</p> </li> <li> <p> <code>create-time</code> - The time stamp when the Spot Instance request was created.</p> </li> <li> <p> <code>fault-code</code> - The fault code related to the request.</p> </li> <li> <p> <code>fault-message</code> - The fault message related to the request.</p> </li> <li> <p> <code>instance-id</code> - The ID of the instance that fulfilled the request.</p> </li> <li> <p> <code>launch-group</code> - The Spot Instance launch group.</p> </li> <li> <p> <code>launch.block-device-mapping.delete-on-termination</code> - Indicates whether the EBS volume is deleted on instance termination.</p> </li> <li> <p> <code>launch.block-device-mapping.device-name</code> - The device name for the volume in the block device mapping (for example, <code>/dev/sdh</code> or <code>xvdh</code>).</p> </li> <li> <p> <code>launch.block-device-mapping.snapshot-id</code> - The ID of the snapshot for the EBS volume.</p> </li> <li> <p> <code>launch.block-device-mapping.volume-size</code> - The size of the EBS volume, in GiB.</p> </li> <li> <p> <code>launch.block-device-mapping.volume-type</code> - The type of EBS volume: <code>gp2</code> for General Purpose SSD, <code>io1</code> or <code>io2</code> for Provisioned IOPS SSD, <code>st1</code> for Throughput Optimized HDD, <code>sc1</code>for Cold HDD, or <code>standard</code> for Magnetic.</p> </li> <li> <p> <code>launch.group-id</code> - The ID of the security group for the instance.</p> </li> <li> <p> <code>launch.group-name</code> - The name of the security group for the instance.</p> </li> <li> <p> <code>launch.image-id</code> - The ID of the AMI.</p> </li> <li> <p> <code>launch.instance-type</code> - The type of instance (for example, <code>m3.medium</code>).</p> </li> <li> <p> <code>launch.kernel-id</code> - The kernel ID.</p> </li> <li> <p> <code>launch.key-name</code> - The name of the key pair the instance launched with.</p> </li> <li> <p> <code>launch.monitoring-enabled</code> - Whether detailed monitoring is enabled for the Spot Instance.</p> </li> <li> <p> <code>launch.ramdisk-id</code> - The RAM disk ID.</p> </li> <li> <p> <code>launched-availability-zone</code> - The Availability Zone in which the request is launched.</p> </li> <li> <p> <code>network-interface.addresses.primary</code> - Indicates whether the IP address is the primary private IP address.</p> </li> <li> <p> <code>network-interface.delete-on-termination</code> - Indicates whether the network interface is deleted when the instance is terminated.</p> </li> <li> <p> <code>network-interface.description</code> - A description of the network interface.</p> </li> <li> <p> <code>network-interface.device-index</code> - The index of the device for the network interface attachment on the instance.</p> </li> <li> <p> <code>network-interface.group-id</code> - The ID of the security group associated with the network interface.</p> </li> <li> <p> <code>network-interface.network-interface-id</code> - The ID of the network interface.</p> </li> <li> <p> <code>network-interface.private-ip-address</code> - The primary private IP address of the network interface.</p> </li> <li> <p> <code>network-interface.subnet-id</code> - The ID of the subnet for the instance.</p> </li> <li> <p> <code>product-description</code> - The product description associated with the instance (<code>Linux/UNIX</code> | <code>Windows</code>).</p> </li> <li> <p> <code>spot-instance-request-id</code> - The Spot Instance request ID.</p> </li> <li> <p> <code>spot-price</code> - The maximum hourly price for any Spot Instance launched to fulfill the request.</p> </li> <li> <p> <code>state</code> - The state of the Spot Instance request (<code>open</code> | <code>active</code> | <code>closed</code> | <code>cancelled</code> | <code>failed</code>). Spot request status information can help you track your Amazon EC2 Spot Instance requests. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-request-status.html">Spot request status</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p> </li> <li> <p> <code>status-code</code> - The short code describing the most recent evaluation of your Spot Instance request.</p> </li> <li> <p> <code>status-message</code> - The message explaining the status of the Spot Instance request.</p> </li> <li> <p> <code>tag:&lt;key&gt;</code> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>type</code> - The type of Spot Instance request (<code>one-time</code> | <code>persistent</code>).</p> </li> <li> <p> <code>valid-from</code> - The start date of the request.</p> </li> <li> <p> <code>valid-until</code> - The end date of the request.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: SpotInstanceRequestId
          in: query
          required: false
          description: One or more Spot Instance request IDs.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/SpotInstanceRequestId'
                - xml:
                    name: SpotInstanceRequestId
        - name: NextToken
          in: query
          required: false
          description: The token to request the next set of results. This value is <code>null</code> when there are no more results to return.
          schema:
            type: string
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return in a single call. Specify a value between 5 and 1000. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.'
          schema:
            type: integer
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeSpotInstanceRequests
      operationId: POST_DescribeSpotInstanceRequests
      description: '<p>Describes the specified Spot Instance requests.</p> <p>You can use <code>DescribeSpotInstanceRequests</code> to find a running Spot Instance by examining the response. If the status of the Spot Instance is <code>fulfilled</code>, the instance ID appears in the response and contains the identifier of the instance. Alternatively, you can use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances">DescribeInstances</a> with a filter to look for instances where the instance lifecycle is <code>spot</code>.</p> <p>We recommend that you set <code>MaxResults</code> to a value between 5 and 1000 to limit the number of results returned. This paginates the output, which makes the list more manageable and returns the results faster. If the list of results exceeds your <code>MaxResults</code> value, then that number of results is returned along with a <code>NextToken</code> value that can be passed to a subsequent <code>DescribeSpotInstanceRequests</code> request to retrieve the remaining results.</p> <p>Spot Instance requests are deleted four hours after they are canceled and their instances are terminated.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeSpotInstanceRequestsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeSpotInstanceRequestsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeSpotPriceHistory&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeSpotPriceHistory
      operationId: GET_DescribeSpotPriceHistory
      description: '<p>Describes the Spot price history. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances-history.html">Spot Instance pricing history</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p> <p>When you specify a start and end time, the operation returns the prices of the instance types within that time range. It also returns the last price change before the start time, which is the effective price as of the start time.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeSpotPriceHistoryResult'
      parameters:
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters.</p> <ul> <li> <p> <code>availability-zone</code> - The Availability Zone for which prices should be returned.</p> </li> <li> <p> <code>instance-type</code> - The type of instance (for example, <code>m3.medium</code>).</p> </li> <li> <p> <code>product-description</code> - The product description for the Spot price (<code>Linux/UNIX</code> | <code>Red Hat Enterprise Linux</code> | <code>SUSE Linux</code> | <code>Windows</code> | <code>Linux/UNIX (Amazon VPC)</code> | <code>Red Hat Enterprise Linux (Amazon VPC)</code> | <code>SUSE Linux (Amazon VPC)</code> | <code>Windows (Amazon VPC)</code>).</p> </li> <li> <p> <code>spot-price</code> - The Spot price. The value must match exactly (or use wildcards; greater than or less than comparison is not supported).</p> </li> <li> <p> <code>timestamp</code> - The time stamp of the Spot price history, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). You can use wildcards (* and ?). Greater than or less than comparison is not supported.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: AvailabilityZone
          in: query
          required: false
          description: Filters the results by the specified Availability Zone.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: EndTime
          in: query
          required: false
          description: 'The date and time, up to the current date, from which to stop retrieving the price history data, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).'
          schema:
            type: string
            format: date-time
        - name: InstanceType
          in: query
          required: false
          description: Filters the results by the specified instance types.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/InstanceType'
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.'
          schema:
            type: integer
        - name: NextToken
          in: query
          required: false
          description: The token for the next set of results.
          schema:
            type: string
        - name: ProductDescription
          in: query
          required: false
          description: Filters the results by the specified basic product descriptions.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/String'
        - name: StartTime
          in: query
          required: false
          description: 'The date and time, up to the past 90 days, from which to start retrieving the price history data, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).'
          schema:
            type: string
            format: date-time
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeSpotPriceHistory
      operationId: POST_DescribeSpotPriceHistory
      description: '<p>Describes the Spot price history. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances-history.html">Spot Instance pricing history</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p> <p>When you specify a start and end time, the operation returns the prices of the instance types within that time range. It also returns the last price change before the start time, which is the effective price as of the start time.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeSpotPriceHistoryResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeSpotPriceHistoryRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeStaleSecurityGroups&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeStaleSecurityGroups
      operationId: GET_DescribeStaleSecurityGroups
      description: '[VPC only] Describes the stale security group rules for security groups in a specified VPC. Rules are stale when they reference a deleted security group in the same VPC or in a peer VPC, or if they reference a security group in a peer VPC for which the VPC peering connection has been deleted.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeStaleSecurityGroupsResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: MaxResults
          in: query
          required: false
          description: The maximum number of items to return for this request. The request returns a token that you can specify in a subsequent call to get the next set of results.
          schema:
            type: integer
            minimum: 5
            maximum: 255
        - name: NextToken
          in: query
          required: false
          description: The token for the next set of items to return. (You received this token from a prior call.)
          schema:
            type: string
            minLength: 1
            maxLength: 1024
        - name: VpcId
          in: query
          required: true
          description: The ID of the VPC.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeStaleSecurityGroups
      operationId: POST_DescribeStaleSecurityGroups
      description: '[VPC only] Describes the stale security group rules for security groups in a specified VPC. Rules are stale when they reference a deleted security group in the same VPC or in a peer VPC, or if they reference a security group in a peer VPC for which the VPC peering connection has been deleted.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeStaleSecurityGroupsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeStaleSecurityGroupsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeStoreImageTasks&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeStoreImageTasks
      operationId: GET_DescribeStoreImageTasks
      description: '<p>Describes the progress of the AMI store tasks. You can describe the store tasks for specified AMIs. If you don''t specify the AMIs, you get a paginated list of store tasks from the last 31 days.</p> <p>For each AMI task, the response indicates if the task is <code>InProgress</code>, <code>Completed</code>, or <code>Failed</code>. For tasks <code>InProgress</code>, the response shows the estimated progress as a percentage.</p> <p>Tasks are listed in reverse chronological order. Currently, only tasks from the past 31 days can be viewed.</p> <p>To use this API, you must have the required permissions. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-store-restore.html#ami-s3-permissions">Permissions for storing and restoring AMIs using Amazon S3</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-store-restore.html">Store and restore an AMI using Amazon S3</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeStoreImageTasksResult'
      parameters:
        - name: ImageId
          in: query
          required: false
          description: The AMI IDs for which to show progress. Up to 20 AMI IDs can be included in a request.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/ImageId'
                - xml:
                    name: item
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: Filter
          in: query
          required: false
          description: '<p>The filters.</p> <ul> <li> <p> <code>task-state</code> - Returns tasks in a certain state (<code>InProgress</code> | <code>Completed</code> | <code>Failed</code>)</p> </li> <li> <p> <code>bucket</code> - Returns task information for tasks that targeted a specific bucket. For the filter value, specify the bucket name.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value. This value can be between 1 and 200. You cannot specify this parameter and the <code>ImageIDs</code> parameter in the same call.'
          schema:
            type: integer
            minimum: 1
            maximum: 200
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeStoreImageTasks
      operationId: POST_DescribeStoreImageTasks
      description: '<p>Describes the progress of the AMI store tasks. You can describe the store tasks for specified AMIs. If you don''t specify the AMIs, you get a paginated list of store tasks from the last 31 days.</p> <p>For each AMI task, the response indicates if the task is <code>InProgress</code>, <code>Completed</code>, or <code>Failed</code>. For tasks <code>InProgress</code>, the response shows the estimated progress as a percentage.</p> <p>Tasks are listed in reverse chronological order. Currently, only tasks from the past 31 days can be viewed.</p> <p>To use this API, you must have the required permissions. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-store-restore.html#ami-s3-permissions">Permissions for storing and restoring AMIs using Amazon S3</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-store-restore.html">Store and restore an AMI using Amazon S3</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeStoreImageTasksResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeStoreImageTasksRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeSubnets&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeSubnets
      operationId: GET_DescribeSubnets
      description: '<p>Describes one or more of your subnets.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html">Your VPC and subnets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeSubnetsResult'
      parameters:
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters.</p> <ul> <li> <p> <code>availability-zone</code> - The Availability Zone for the subnet. You can also use <code>availabilityZone</code> as the filter name.</p> </li> <li> <p> <code>availability-zone-id</code> - The ID of the Availability Zone for the subnet. You can also use <code>availabilityZoneId</code> as the filter name.</p> </li> <li> <p> <code>available-ip-address-count</code> - The number of IPv4 addresses in the subnet that are available.</p> </li> <li> <p> <code>cidr-block</code> - The IPv4 CIDR block of the subnet. The CIDR block you specify must exactly match the subnet''s CIDR block for information to be returned for the subnet. You can also use <code>cidr</code> or <code>cidrBlock</code> as the filter names.</p> </li> <li> <p> <code>default-for-az</code> - Indicates whether this is the default subnet for the Availability Zone (<code>true</code> | <code>false</code>). You can also use <code>defaultForAz</code> as the filter name.</p> </li> <li> <p> <code>ipv6-cidr-block-association.ipv6-cidr-block</code> - An IPv6 CIDR block associated with the subnet.</p> </li> <li> <p> <code>ipv6-cidr-block-association.association-id</code> - An association ID for an IPv6 CIDR block associated with the subnet.</p> </li> <li> <p> <code>ipv6-cidr-block-association.state</code> - The state of an IPv6 CIDR block associated with the subnet.</p> </li> <li> <p> <code>ipv6-native</code> - Indicates whether this is an IPv6 only subnet (<code>true</code> | <code>false</code>).</p> </li> <li> <p> <code>outpost-arn</code> - The Amazon Resource Name (ARN) of the Outpost.</p> </li> <li> <p> <code>owner-id</code> - The ID of the Amazon Web Services account that owns the subnet.</p> </li> <li> <p> <code>state</code> - The state of the subnet (<code>pending</code> | <code>available</code>).</p> </li> <li> <p> <code>subnet-arn</code> - The Amazon Resource Name (ARN) of the subnet.</p> </li> <li> <p> <code>subnet-id</code> - The ID of the subnet.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC for the subnet.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: SubnetId
          in: query
          required: false
          description: '<p>One or more subnet IDs.</p> <p>Default: Describes all your subnets.</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/SubnetId'
                - xml:
                    name: SubnetId
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 5
            maximum: 1000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeSubnets
      operationId: POST_DescribeSubnets
      description: '<p>Describes one or more of your subnets.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html">Your VPC and subnets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeSubnetsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeSubnetsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeTags&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeTags
      operationId: GET_DescribeTags
      description: '<p>Describes the specified tags for your EC2 resources.</p> <p>For more information about tags, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging Your Resources</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeTagsResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: Filter
          in: query
          required: false
          description: '<p>The filters.</p> <ul> <li> <p> <code>key</code> - The tag key.</p> </li> <li> <p> <code>resource-id</code> - The ID of the resource.</p> </li> <li> <p> <code>resource-type</code> - The resource type (<code>customer-gateway</code> | <code>dedicated-host</code> | <code>dhcp-options</code> | <code>elastic-ip</code> | <code>fleet</code> | <code>fpga-image</code> | <code>host-reservation</code> | <code>image</code> | <code>instance</code> | <code>internet-gateway</code> | <code>key-pair</code> | <code>launch-template</code> | <code>natgateway</code> | <code>network-acl</code> | <code>network-interface</code> | <code>placement-group</code> | <code>reserved-instances</code> | <code>route-table</code> | <code>security-group</code> | <code>snapshot</code> | <code>spot-instances-request</code> | <code>subnet</code> | <code>volume</code> | <code>vpc</code> | <code>vpc-endpoint</code> | <code>vpc-endpoint-service</code> | <code>vpc-peering-connection</code> | <code>vpn-connection</code> | <code>vpn-gateway</code>).</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of the tag. For example, specify "tag:Owner" for the filter name and "TeamA" for the filter value to find resources with the tag "Owner=TeamA".</p> </li> <li> <p> <code>value</code> - The tag value.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return in a single call. This value can be between 5 and 1000. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.'
          schema:
            type: integer
        - name: NextToken
          in: query
          required: false
          description: The token to retrieve the next page of results.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeTags
      operationId: POST_DescribeTags
      description: '<p>Describes the specified tags for your EC2 resources.</p> <p>For more information about tags, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging Your Resources</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeTagsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeTagsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeTrafficMirrorFilters&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeTrafficMirrorFilters
      operationId: GET_DescribeTrafficMirrorFilters
      description: Describes one or more Traffic Mirror filters.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeTrafficMirrorFiltersResult'
      parameters:
        - name: TrafficMirrorFilterId
          in: query
          required: false
          description: The ID of the Traffic Mirror filter.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TrafficMirrorFilterId'
                - xml:
                    name: item
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters. The possible values are:</p> <ul> <li> <p> <code>description</code>: The Traffic Mirror filter description.</p> </li> <li> <p> <code>traffic-mirror-filter-id</code>: The ID of the Traffic Mirror filter.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 5
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeTrafficMirrorFilters
      operationId: POST_DescribeTrafficMirrorFilters
      description: Describes one or more Traffic Mirror filters.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeTrafficMirrorFiltersResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeTrafficMirrorFiltersRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeTrafficMirrorSessions&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeTrafficMirrorSessions
      operationId: GET_DescribeTrafficMirrorSessions
      description: 'Describes one or more Traffic Mirror sessions. By default, all Traffic Mirror sessions are described. Alternatively, you can filter the results.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeTrafficMirrorSessionsResult'
      parameters:
        - name: TrafficMirrorSessionId
          in: query
          required: false
          description: The ID of the Traffic Mirror session.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TrafficMirrorSessionId'
                - xml:
                    name: item
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters. The possible values are:</p> <ul> <li> <p> <code>description</code>: The Traffic Mirror session description.</p> </li> <li> <p> <code>network-interface-id</code>: The ID of the Traffic Mirror session network interface.</p> </li> <li> <p> <code>owner-id</code>: The ID of the account that owns the Traffic Mirror session.</p> </li> <li> <p> <code>packet-length</code>: The assigned number of packets to mirror. </p> </li> <li> <p> <code>session-number</code>: The assigned session number. </p> </li> <li> <p> <code>traffic-mirror-filter-id</code>: The ID of the Traffic Mirror filter.</p> </li> <li> <p> <code>traffic-mirror-session-id</code>: The ID of the Traffic Mirror session.</p> </li> <li> <p> <code>traffic-mirror-target-id</code>: The ID of the Traffic Mirror target.</p> </li> <li> <p> <code>virtual-network-id</code>: The virtual network ID of the Traffic Mirror session.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 5
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeTrafficMirrorSessions
      operationId: POST_DescribeTrafficMirrorSessions
      description: 'Describes one or more Traffic Mirror sessions. By default, all Traffic Mirror sessions are described. Alternatively, you can filter the results.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeTrafficMirrorSessionsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeTrafficMirrorSessionsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeTrafficMirrorTargets&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeTrafficMirrorTargets
      operationId: GET_DescribeTrafficMirrorTargets
      description: Information about one or more Traffic Mirror targets.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeTrafficMirrorTargetsResult'
      parameters:
        - name: TrafficMirrorTargetId
          in: query
          required: false
          description: The ID of the Traffic Mirror targets.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TrafficMirrorTargetId'
                - xml:
                    name: item
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters. The possible values are:</p> <ul> <li> <p> <code>description</code>: The Traffic Mirror target description.</p> </li> <li> <p> <code>network-interface-id</code>: The ID of the Traffic Mirror session network interface.</p> </li> <li> <p> <code>network-load-balancer-arn</code>: The Amazon Resource Name (ARN) of the Network Load Balancer that is associated with the session.</p> </li> <li> <p> <code>owner-id</code>: The ID of the account that owns the Traffic Mirror session.</p> </li> <li> <p> <code>traffic-mirror-target-id</code>: The ID of the Traffic Mirror target.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 5
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeTrafficMirrorTargets
      operationId: POST_DescribeTrafficMirrorTargets
      description: Information about one or more Traffic Mirror targets.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeTrafficMirrorTargetsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeTrafficMirrorTargetsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeTransitGatewayAttachments&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeTransitGatewayAttachments
      operationId: GET_DescribeTransitGatewayAttachments
      description: 'Describes one or more attachments between resources and transit gateways. By default, all attachments are described. Alternatively, you can filter the results by attachment ID, attachment state, resource ID, or resource owner.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeTransitGatewayAttachmentsResult'
      parameters:
        - name: TransitGatewayAttachmentIds
          in: query
          required: false
          description: The IDs of the attachments.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TransitGatewayAttachmentId'
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters. The possible values are:</p> <ul> <li> <p> <code>association.state</code> - The state of the association (<code>associating</code> | <code>associated</code> | <code>disassociating</code>).</p> </li> <li> <p> <code>association.transit-gateway-route-table-id</code> - The ID of the route table for the transit gateway.</p> </li> <li> <p> <code>resource-id</code> - The ID of the resource.</p> </li> <li> <p> <code>resource-owner-id</code> - The ID of the Amazon Web Services account that owns the resource.</p> </li> <li> <p> <code>resource-type</code> - The resource type. Valid values are <code>vpc</code> | <code>vpn</code> | <code>direct-connect-gateway</code> | <code>peering</code> | <code>connect</code>.</p> </li> <li> <p> <code>state</code> - The state of the attachment. Valid values are <code>available</code> | <code>deleted</code> | <code>deleting</code> | <code>failed</code> | <code>failing</code> | <code>initiatingRequest</code> | <code>modifying</code> | <code>pendingAcceptance</code> | <code>pending</code> | <code>rollingBack</code> | <code>rejected</code> | <code>rejecting</code>.</p> </li> <li> <p> <code>transit-gateway-attachment-id</code> - The ID of the attachment.</p> </li> <li> <p> <code>transit-gateway-id</code> - The ID of the transit gateway.</p> </li> <li> <p> <code>transit-gateway-owner-id</code> - The ID of the Amazon Web Services account that owns the transit gateway.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 5
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeTransitGatewayAttachments
      operationId: POST_DescribeTransitGatewayAttachments
      description: 'Describes one or more attachments between resources and transit gateways. By default, all attachments are described. Alternatively, you can filter the results by attachment ID, attachment state, resource ID, or resource owner.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeTransitGatewayAttachmentsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeTransitGatewayAttachmentsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeTransitGatewayConnectPeers&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeTransitGatewayConnectPeers
      operationId: GET_DescribeTransitGatewayConnectPeers
      description: Describes one or more Connect peers.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeTransitGatewayConnectPeersResult'
      parameters:
        - name: TransitGatewayConnectPeerIds
          in: query
          required: false
          description: The IDs of the Connect peers.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TransitGatewayConnectPeerId'
                - xml:
                    name: item
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters. The possible values are:</p> <ul> <li> <p> <code>state</code> - The state of the Connect peer (<code>pending</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>).</p> </li> <li> <p> <code>transit-gateway-attachment-id</code> - The ID of the attachment.</p> </li> <li> <p> <code>transit-gateway-connect-peer-id</code> - The ID of the Connect peer.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 5
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeTransitGatewayConnectPeers
      operationId: POST_DescribeTransitGatewayConnectPeers
      description: Describes one or more Connect peers.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeTransitGatewayConnectPeersResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeTransitGatewayConnectPeersRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeTransitGatewayConnects&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeTransitGatewayConnects
      operationId: GET_DescribeTransitGatewayConnects
      description: Describes one or more Connect attachments.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeTransitGatewayConnectsResult'
      parameters:
        - name: TransitGatewayAttachmentIds
          in: query
          required: false
          description: The IDs of the attachments.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TransitGatewayAttachmentId'
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters. The possible values are:</p> <ul> <li> <p> <code>options.protocol</code> - The tunnel protocol (<code>gre</code>).</p> </li> <li> <p> <code>state</code> - The state of the attachment (<code>initiating</code> | <code>initiatingRequest</code> | <code>pendingAcceptance</code> | <code>rollingBack</code> | <code>pending</code> | <code>available</code> | <code>modifying</code> | <code>deleting</code> | <code>deleted</code> | <code>failed</code> | <code>rejected</code> | <code>rejecting</code> | <code>failing</code>).</p> </li> <li> <p> <code>transit-gateway-attachment-id</code> - The ID of the Connect attachment.</p> </li> <li> <p> <code>transit-gateway-id</code> - The ID of the transit gateway.</p> </li> <li> <p> <code>transport-transit-gateway-attachment-id</code> - The ID of the transit gateway attachment from which the Connect attachment was created.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 5
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeTransitGatewayConnects
      operationId: POST_DescribeTransitGatewayConnects
      description: Describes one or more Connect attachments.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeTransitGatewayConnectsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeTransitGatewayConnectsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeTransitGatewayMulticastDomains&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeTransitGatewayMulticastDomains
      operationId: GET_DescribeTransitGatewayMulticastDomains
      description: Describes one or more transit gateway multicast domains.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeTransitGatewayMulticastDomainsResult'
      parameters:
        - name: TransitGatewayMulticastDomainIds
          in: query
          required: false
          description: The ID of the transit gateway multicast domain.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TransitGatewayMulticastDomainId'
                - xml:
                    name: item
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters. The possible values are:</p> <ul> <li> <p> <code>state</code> - The state of the transit gateway multicast domain. Valid values are <code>pending</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>.</p> </li> <li> <p> <code>transit-gateway-id</code> - The ID of the transit gateway.</p> </li> <li> <p> <code>transit-gateway-multicast-domain-id</code> - The ID of the transit gateway multicast domain.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 5
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeTransitGatewayMulticastDomains
      operationId: POST_DescribeTransitGatewayMulticastDomains
      description: Describes one or more transit gateway multicast domains.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeTransitGatewayMulticastDomainsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeTransitGatewayMulticastDomainsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeTransitGatewayPeeringAttachments&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeTransitGatewayPeeringAttachments
      operationId: GET_DescribeTransitGatewayPeeringAttachments
      description: Describes your transit gateway peering attachments.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeTransitGatewayPeeringAttachmentsResult'
      parameters:
        - name: TransitGatewayAttachmentIds
          in: query
          required: false
          description: One or more IDs of the transit gateway peering attachments.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TransitGatewayAttachmentId'
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters. The possible values are:</p> <ul> <li> <p> <code>transit-gateway-attachment-id</code> - The ID of the transit gateway attachment.</p> </li> <li> <p> <code>local-owner-id</code> - The ID of your Amazon Web Services account.</p> </li> <li> <p> <code>remote-owner-id</code> - The ID of the Amazon Web Services account in the remote Region that owns the transit gateway.</p> </li> <li> <p> <code>state</code> - The state of the peering attachment. Valid values are <code>available</code> | <code>deleted</code> | <code>deleting</code> | <code>failed</code> | <code>failing</code> | <code>initiatingRequest</code> | <code>modifying</code> | <code>pendingAcceptance</code> | <code>pending</code> | <code>rollingBack</code> | <code>rejected</code> | <code>rejecting</code>).</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources that have a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>transit-gateway-id</code> - The ID of the transit gateway.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 5
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeTransitGatewayPeeringAttachments
      operationId: POST_DescribeTransitGatewayPeeringAttachments
      description: Describes your transit gateway peering attachments.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeTransitGatewayPeeringAttachmentsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeTransitGatewayPeeringAttachmentsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeTransitGatewayRouteTables&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeTransitGatewayRouteTables
      operationId: GET_DescribeTransitGatewayRouteTables
      description: 'Describes one or more transit gateway route tables. By default, all transit gateway route tables are described. Alternatively, you can filter the results.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeTransitGatewayRouteTablesResult'
      parameters:
        - name: TransitGatewayRouteTableIds
          in: query
          required: false
          description: The IDs of the transit gateway route tables.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TransitGatewayRouteTableId'
                - xml:
                    name: item
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters. The possible values are:</p> <ul> <li> <p> <code>default-association-route-table</code> - Indicates whether this is the default association route table for the transit gateway (<code>true</code> | <code>false</code>).</p> </li> <li> <p> <code>default-propagation-route-table</code> - Indicates whether this is the default propagation route table for the transit gateway (<code>true</code> | <code>false</code>).</p> </li> <li> <p> <code>state</code> - The state of the route table (<code>available</code> | <code>deleting</code> | <code>deleted</code> | <code>pending</code>).</p> </li> <li> <p> <code>transit-gateway-id</code> - The ID of the transit gateway.</p> </li> <li> <p> <code>transit-gateway-route-table-id</code> - The ID of the transit gateway route table.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 5
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeTransitGatewayRouteTables
      operationId: POST_DescribeTransitGatewayRouteTables
      description: 'Describes one or more transit gateway route tables. By default, all transit gateway route tables are described. Alternatively, you can filter the results.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeTransitGatewayRouteTablesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeTransitGatewayRouteTablesRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeTransitGatewayVpcAttachments&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeTransitGatewayVpcAttachments
      operationId: GET_DescribeTransitGatewayVpcAttachments
      description: 'Describes one or more VPC attachments. By default, all VPC attachments are described. Alternatively, you can filter the results.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeTransitGatewayVpcAttachmentsResult'
      parameters:
        - name: TransitGatewayAttachmentIds
          in: query
          required: false
          description: The IDs of the attachments.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TransitGatewayAttachmentId'
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters. The possible values are:</p> <ul> <li> <p> <code>state</code> - The state of the attachment. Valid values are <code>available</code> | <code>deleted</code> | <code>deleting</code> | <code>failed</code> | <code>failing</code> | <code>initiatingRequest</code> | <code>modifying</code> | <code>pendingAcceptance</code> | <code>pending</code> | <code>rollingBack</code> | <code>rejected</code> | <code>rejecting</code>.</p> </li> <li> <p> <code>transit-gateway-attachment-id</code> - The ID of the attachment.</p> </li> <li> <p> <code>transit-gateway-id</code> - The ID of the transit gateway.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 5
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeTransitGatewayVpcAttachments
      operationId: POST_DescribeTransitGatewayVpcAttachments
      description: 'Describes one or more VPC attachments. By default, all VPC attachments are described. Alternatively, you can filter the results.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeTransitGatewayVpcAttachmentsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeTransitGatewayVpcAttachmentsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeTransitGateways&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeTransitGateways
      operationId: GET_DescribeTransitGateways
      description: 'Describes one or more transit gateways. By default, all transit gateways are described. Alternatively, you can filter the results.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeTransitGatewaysResult'
      parameters:
        - name: TransitGatewayIds
          in: query
          required: false
          description: The IDs of the transit gateways.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TransitGatewayId'
                - xml:
                    name: item
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters. The possible values are:</p> <ul> <li> <p> <code>options.propagation-default-route-table-id</code> - The ID of the default propagation route table.</p> </li> <li> <p> <code>options.amazon-side-asn</code> - The private ASN for the Amazon side of a BGP session.</p> </li> <li> <p> <code>options.association-default-route-table-id</code> - The ID of the default association route table.</p> </li> <li> <p> <code>options.auto-accept-shared-attachments</code> - Indicates whether there is automatic acceptance of attachment requests (<code>enable</code> | <code>disable</code>).</p> </li> <li> <p> <code>options.default-route-table-association</code> - Indicates whether resource attachments are automatically associated with the default association route table (<code>enable</code> | <code>disable</code>).</p> </li> <li> <p> <code>options.default-route-table-propagation</code> - Indicates whether resource attachments automatically propagate routes to the default propagation route table (<code>enable</code> | <code>disable</code>).</p> </li> <li> <p> <code>options.dns-support</code> - Indicates whether DNS support is enabled (<code>enable</code> | <code>disable</code>).</p> </li> <li> <p> <code>options.vpn-ecmp-support</code> - Indicates whether Equal Cost Multipath Protocol support is enabled (<code>enable</code> | <code>disable</code>).</p> </li> <li> <p> <code>owner-id</code> - The ID of the Amazon Web Services account that owns the transit gateway.</p> </li> <li> <p> <code>state</code> - The state of the transit gateway (<code>available</code> | <code>deleted</code> | <code>deleting</code> | <code>modifying</code> | <code>pending</code>).</p> </li> <li> <p> <code>transit-gateway-id</code> - The ID of the transit gateway.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 5
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeTransitGateways
      operationId: POST_DescribeTransitGateways
      description: 'Describes one or more transit gateways. By default, all transit gateways are described. Alternatively, you can filter the results.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeTransitGatewaysResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeTransitGatewaysRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeTrunkInterfaceAssociations&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeTrunkInterfaceAssociations
      operationId: GET_DescribeTrunkInterfaceAssociations
      description: '<note> <p>This API action is currently in <b>limited preview only</b>. If you are interested in using this feature, contact your account manager.</p> </note> <p>Describes one or more network interface trunk associations.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeTrunkInterfaceAssociationsResult'
      parameters:
        - name: AssociationId
          in: query
          required: false
          description: The IDs of the associations.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TrunkInterfaceAssociationId'
                - xml:
                    name: item
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: Filter
          in: query
          required: false
          description: <p>One or more filters.</p> <ul> <li> <p> <code>gre-key</code> - The ID of a trunk interface association.</p> </li> <li> <p> <code>interface-protocol</code> - The interface protocol. Valid values are <code>VLAN</code> and <code>GRE</code>.</p> </li> </ul>
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 5
            maximum: 255
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeTrunkInterfaceAssociations
      operationId: POST_DescribeTrunkInterfaceAssociations
      description: '<note> <p>This API action is currently in <b>limited preview only</b>. If you are interested in using this feature, contact your account manager.</p> </note> <p>Describes one or more network interface trunk associations.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeTrunkInterfaceAssociationsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeTrunkInterfaceAssociationsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeVolumeAttribute&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeVolumeAttribute
      operationId: GET_DescribeVolumeAttribute
      description: '<p>Describes the specified attribute of the specified volume. You can specify only one attribute at a time.</p> <p>For more information about EBS volumes, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumes.html">Amazon EBS volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeVolumeAttributeResult'
      parameters:
        - name: Attribute
          in: query
          required: true
          description: The attribute of the volume. This parameter is required.
          schema:
            type: string
            enum:
              - autoEnableIO
              - productCodes
        - name: VolumeId
          in: query
          required: true
          description: The ID of the volume.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeVolumeAttribute
      operationId: POST_DescribeVolumeAttribute
      description: '<p>Describes the specified attribute of the specified volume. You can specify only one attribute at a time.</p> <p>For more information about EBS volumes, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumes.html">Amazon EBS volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeVolumeAttributeResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeVolumeAttributeRequest'
      parameters: []
  /?Action=DescribeVolumeStatus&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeVolumeStatus
      operationId: GET_DescribeVolumeStatus
      description: '<p>Describes the status of the specified volumes. Volume status provides the result of the checks performed on your volumes to determine events that can impair the performance of your volumes. The performance of a volume can be affected if an issue occurs on the volume''s underlying host. If the volume''s underlying host experiences a power outage or system issue, after the system is restored, there could be data inconsistencies on the volume. Volume events notify you if this occurs. Volume actions notify you if any action needs to be taken in response to the event.</p> <p>The <code>DescribeVolumeStatus</code> operation provides the following information about the specified volumes:</p> <p> <i>Status</i>: Reflects the current status of the volume. The possible values are <code>ok</code>, <code>impaired</code> , <code>warning</code>, or <code>insufficient-data</code>. If all checks pass, the overall status of the volume is <code>ok</code>. If the check fails, the overall status is <code>impaired</code>. If the status is <code>insufficient-data</code>, then the checks might still be taking place on your volume at the time. We recommend that you retry the request. For more information about volume status, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-volume-status.html">Monitor the status of your volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p> <i>Events</i>: Reflect the cause of a volume status and might require you to take action. For example, if your volume returns an <code>impaired</code> status, then the volume event might be <code>potential-data-inconsistency</code>. This means that your volume has been affected by an issue with the underlying host, has all I/O operations disabled, and might have inconsistent data.</p> <p> <i>Actions</i>: Reflect the actions you might have to take in response to an event. For example, if the status of the volume is <code>impaired</code> and the volume event shows <code>potential-data-inconsistency</code>, then the action shows <code>enable-volume-io</code>. This means that you may want to enable the I/O operations for the volume by calling the <a>EnableVolumeIO</a> action and then check the volume for data consistency.</p> <p>Volume status is based on the volume status checks, and does not reflect the volume state. Therefore, volume status does not indicate volumes in the <code>error</code> state (for example, when a volume is incapable of accepting I/O.)</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeVolumeStatusResult'
      parameters:
        - name: Filter
          in: query
          required: false
          description: '<p>The filters.</p> <ul> <li> <p> <code>action.code</code> - The action code for the event (for example, <code>enable-volume-io</code>).</p> </li> <li> <p> <code>action.description</code> - A description of the action.</p> </li> <li> <p> <code>action.event-id</code> - The event ID associated with the action.</p> </li> <li> <p> <code>availability-zone</code> - The Availability Zone of the instance.</p> </li> <li> <p> <code>event.description</code> - A description of the event.</p> </li> <li> <p> <code>event.event-id</code> - The event ID.</p> </li> <li> <p> <code>event.event-type</code> - The event type (for <code>io-enabled</code>: <code>passed</code> | <code>failed</code>; for <code>io-performance</code>: <code>io-performance:degraded</code> | <code>io-performance:severely-degraded</code> | <code>io-performance:stalled</code>).</p> </li> <li> <p> <code>event.not-after</code> - The latest end time for the event.</p> </li> <li> <p> <code>event.not-before</code> - The earliest start time for the event.</p> </li> <li> <p> <code>volume-status.details-name</code> - The cause for <code>volume-status.status</code> (<code>io-enabled</code> | <code>io-performance</code>).</p> </li> <li> <p> <code>volume-status.details-status</code> - The status of <code>volume-status.details-name</code> (for <code>io-enabled</code>: <code>passed</code> | <code>failed</code>; for <code>io-performance</code>: <code>normal</code> | <code>degraded</code> | <code>severely-degraded</code> | <code>stalled</code>).</p> </li> <li> <p> <code>volume-status.status</code> - The status of the volume (<code>ok</code> | <code>impaired</code> | <code>warning</code> | <code>insufficient-data</code>).</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of volume results returned by <code>DescribeVolumeStatus</code> in paginated output. When this parameter is used, the request only returns <code>MaxResults</code> results in a single page along with a <code>NextToken</code> response element. The remaining results of the initial request can be seen by sending another request with the returned <code>NextToken</code> value. This value can be between 5 and 1,000; if <code>MaxResults</code> is given a value larger than 1,000, only 1,000 results are returned. If this parameter is not used, then <code>DescribeVolumeStatus</code> returns all results. You cannot specify this parameter and the volume IDs parameter in the same request.'
          schema:
            type: integer
        - name: NextToken
          in: query
          required: false
          description: 'The <code>NextToken</code> value to include in a future <code>DescribeVolumeStatus</code> request. When the results of the request exceed <code>MaxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.'
          schema:
            type: string
        - name: VolumeId
          in: query
          required: false
          description: '<p>The IDs of the volumes.</p> <p>Default: Describes all your volumes.</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/VolumeId'
                - xml:
                    name: VolumeId
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeVolumeStatus
      operationId: POST_DescribeVolumeStatus
      description: '<p>Describes the status of the specified volumes. Volume status provides the result of the checks performed on your volumes to determine events that can impair the performance of your volumes. The performance of a volume can be affected if an issue occurs on the volume''s underlying host. If the volume''s underlying host experiences a power outage or system issue, after the system is restored, there could be data inconsistencies on the volume. Volume events notify you if this occurs. Volume actions notify you if any action needs to be taken in response to the event.</p> <p>The <code>DescribeVolumeStatus</code> operation provides the following information about the specified volumes:</p> <p> <i>Status</i>: Reflects the current status of the volume. The possible values are <code>ok</code>, <code>impaired</code> , <code>warning</code>, or <code>insufficient-data</code>. If all checks pass, the overall status of the volume is <code>ok</code>. If the check fails, the overall status is <code>impaired</code>. If the status is <code>insufficient-data</code>, then the checks might still be taking place on your volume at the time. We recommend that you retry the request. For more information about volume status, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-volume-status.html">Monitor the status of your volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p> <i>Events</i>: Reflect the cause of a volume status and might require you to take action. For example, if your volume returns an <code>impaired</code> status, then the volume event might be <code>potential-data-inconsistency</code>. This means that your volume has been affected by an issue with the underlying host, has all I/O operations disabled, and might have inconsistent data.</p> <p> <i>Actions</i>: Reflect the actions you might have to take in response to an event. For example, if the status of the volume is <code>impaired</code> and the volume event shows <code>potential-data-inconsistency</code>, then the action shows <code>enable-volume-io</code>. This means that you may want to enable the I/O operations for the volume by calling the <a>EnableVolumeIO</a> action and then check the volume for data consistency.</p> <p>Volume status is based on the volume status checks, and does not reflect the volume state. Therefore, volume status does not indicate volumes in the <code>error</code> state (for example, when a volume is incapable of accepting I/O.)</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeVolumeStatusResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeVolumeStatusRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  '/?Action=DescribeVolumes&Version=2016-11-15':
    get:
      x-aws-operation-name: DescribeVolumes
      operationId: GET_DescribeVolumes
      description: '<p>Describes the specified EBS volumes or all of your EBS volumes.</p> <p>If you are describing a long list of volumes, we recommend that you paginate the output to make the list more manageable. The <code>MaxResults</code> parameter sets the maximum number of results returned in a single page. If the list of results exceeds your <code>MaxResults</code> value, then that number of results is returned along with a <code>NextToken</code> value that can be passed to a subsequent <code>DescribeVolumes</code> request to retrieve the remaining results.</p> <p>For more information about EBS volumes, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumes.html">Amazon EBS volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeVolumesResult'
      parameters:
        - name: Filter
          in: query
          required: false
          description: '<p>The filters.</p> <ul> <li> <p> <code>attachment.attach-time</code> - The time stamp when the attachment initiated.</p> </li> <li> <p> <code>attachment.delete-on-termination</code> - Whether the volume is deleted on instance termination.</p> </li> <li> <p> <code>attachment.device</code> - The device name specified in the block device mapping (for example, <code>/dev/sda1</code>).</p> </li> <li> <p> <code>attachment.instance-id</code> - The ID of the instance the volume is attached to.</p> </li> <li> <p> <code>attachment.status</code> - The attachment state (<code>attaching</code> | <code>attached</code> | <code>detaching</code>).</p> </li> <li> <p> <code>availability-zone</code> - The Availability Zone in which the volume was created.</p> </li> <li> <p> <code>create-time</code> - The time stamp when the volume was created.</p> </li> <li> <p> <code>encrypted</code> - Indicates whether the volume is encrypted (<code>true</code> | <code>false</code>)</p> </li> <li> <p> <code>multi-attach-enabled</code> - Indicates whether the volume is enabled for Multi-Attach (<code>true</code> | <code>false</code>)</p> </li> <li> <p> <code>fast-restored</code> - Indicates whether the volume was created from a snapshot that is enabled for fast snapshot restore (<code>true</code> | <code>false</code>).</p> </li> <li> <p> <code>size</code> - The size of the volume, in GiB.</p> </li> <li> <p> <code>snapshot-id</code> - The snapshot from which the volume was created.</p> </li> <li> <p> <code>status</code> - The state of the volume (<code>creating</code> | <code>available</code> | <code>in-use</code> | <code>deleting</code> | <code>deleted</code> | <code>error</code>).</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>volume-id</code> - The volume ID.</p> </li> <li> <p> <code>volume-type</code> - The Amazon EBS volume type (<code>gp2</code> | <code>gp3</code> | <code>io1</code> | <code>io2</code> | <code>st1</code> | <code>sc1</code>| <code>standard</code>)</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: VolumeId
          in: query
          required: false
          description: The volume IDs.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/VolumeId'
                - xml:
                    name: VolumeId
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of volume results returned by <code>DescribeVolumes</code> in paginated output. When this parameter is used, <code>DescribeVolumes</code> only returns <code>MaxResults</code> results in a single page along with a <code>NextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeVolumes</code> request with the returned <code>NextToken</code> value. This value can be between 5 and 500; if <code>MaxResults</code> is given a value larger than 500, only 500 results are returned. If this parameter is not used, then <code>DescribeVolumes</code> returns all results. You cannot specify this parameter and the volume IDs parameter in the same request.'
          schema:
            type: integer
        - name: NextToken
          in: query
          required: false
          description: The <code>NextToken</code> value returned from a previous paginated <code>DescribeVolumes</code> request where <code>MaxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>NextToken</code> value. This value is <code>null</code> when there are no more results to return.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeVolumes
      operationId: POST_DescribeVolumes
      description: '<p>Describes the specified EBS volumes or all of your EBS volumes.</p> <p>If you are describing a long list of volumes, we recommend that you paginate the output to make the list more manageable. The <code>MaxResults</code> parameter sets the maximum number of results returned in a single page. If the list of results exceeds your <code>MaxResults</code> value, then that number of results is returned along with a <code>NextToken</code> value that can be passed to a subsequent <code>DescribeVolumes</code> request to retrieve the remaining results.</p> <p>For more information about EBS volumes, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumes.html">Amazon EBS volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeVolumesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeVolumesRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeVolumesModifications&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeVolumesModifications
      operationId: GET_DescribeVolumesModifications
      description: '<p>Describes the most recent volume modification request for the specified EBS volumes.</p> <p>If a volume has never been modified, some information in the output will be null. If a volume has been modified more than once, the output includes only the most recent modification request.</p> <p>You can also use CloudWatch Events to check the status of a modification to an EBS volume. For information about CloudWatch Events, see the <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/">Amazon CloudWatch Events User Guide</a>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-volume-modifications.html">Monitor the progress of volume modifications</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeVolumesModificationsResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: VolumeId
          in: query
          required: false
          description: The IDs of the volumes.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/VolumeId'
                - xml:
                    name: VolumeId
        - name: Filter
          in: query
          required: false
          description: '<p>The filters.</p> <ul> <li> <p> <code>modification-state</code> - The current modification state (modifying | optimizing | completed | failed).</p> </li> <li> <p> <code>original-iops</code> - The original IOPS rate of the volume.</p> </li> <li> <p> <code>original-size</code> - The original size of the volume, in GiB.</p> </li> <li> <p> <code>original-volume-type</code> - The original volume type of the volume (standard | io1 | io2 | gp2 | sc1 | st1).</p> </li> <li> <p> <code>originalMultiAttachEnabled</code> - Indicates whether Multi-Attach support was enabled (true | false).</p> </li> <li> <p> <code>start-time</code> - The modification start time.</p> </li> <li> <p> <code>target-iops</code> - The target IOPS rate of the volume.</p> </li> <li> <p> <code>target-size</code> - The target size of the volume, in GiB.</p> </li> <li> <p> <code>target-volume-type</code> - The target volume type of the volume (standard | io1 | io2 | gp2 | sc1 | st1).</p> </li> <li> <p> <code>targetMultiAttachEnabled</code> - Indicates whether Multi-Attach support is to be enabled (true | false).</p> </li> <li> <p> <code>volume-id</code> - The ID of the volume.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: NextToken
          in: query
          required: false
          description: The <code>nextToken</code> value returned by a previous paginated request.
          schema:
            type: string
        - name: MaxResults
          in: query
          required: false
          description: The maximum number of results (up to a limit of 500) to be returned in a paginated request.
          schema:
            type: integer
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeVolumesModifications
      operationId: POST_DescribeVolumesModifications
      description: '<p>Describes the most recent volume modification request for the specified EBS volumes.</p> <p>If a volume has never been modified, some information in the output will be null. If a volume has been modified more than once, the output includes only the most recent modification request.</p> <p>You can also use CloudWatch Events to check the status of a modification to an EBS volume. For information about CloudWatch Events, see the <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/">Amazon CloudWatch Events User Guide</a>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-volume-modifications.html">Monitor the progress of volume modifications</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeVolumesModificationsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeVolumesModificationsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeVpcAttribute&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeVpcAttribute
      operationId: GET_DescribeVpcAttribute
      description: Describes the specified attribute of the specified VPC. You can specify only one attribute at a time.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeVpcAttributeResult'
      parameters:
        - name: Attribute
          in: query
          required: true
          description: The VPC attribute.
          schema:
            type: string
            enum:
              - enableDnsSupport
              - enableDnsHostnames
        - name: VpcId
          in: query
          required: true
          description: The ID of the VPC.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeVpcAttribute
      operationId: POST_DescribeVpcAttribute
      description: Describes the specified attribute of the specified VPC. You can specify only one attribute at a time.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeVpcAttributeResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeVpcAttributeRequest'
      parameters: []
  /?Action=DescribeVpcClassicLink&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeVpcClassicLink
      operationId: GET_DescribeVpcClassicLink
      description: Describes the ClassicLink status of one or more VPCs.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeVpcClassicLinkResult'
      parameters:
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters.</p> <ul> <li> <p> <code>is-classic-link-enabled</code> - Whether the VPC is enabled for ClassicLink (<code>true</code> | <code>false</code>).</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: VpcId
          in: query
          required: false
          description: One or more VPCs for which you want to describe the ClassicLink status.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/VpcId'
                - xml:
                    name: VpcId
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeVpcClassicLink
      operationId: POST_DescribeVpcClassicLink
      description: Describes the ClassicLink status of one or more VPCs.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeVpcClassicLinkResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeVpcClassicLinkRequest'
      parameters: []
  /?Action=DescribeVpcClassicLinkDnsSupport&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeVpcClassicLinkDnsSupport
      operationId: GET_DescribeVpcClassicLinkDnsSupport
      description: 'Describes the ClassicLink DNS support status of one or more VPCs. If enabled, the DNS hostname of a linked EC2-Classic instance resolves to its private IP address when addressed from an instance in the VPC to which it''s linked. Similarly, the DNS hostname of an instance in a VPC resolves to its private IP address when addressed from a linked EC2-Classic instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeVpcClassicLinkDnsSupportResult'
      parameters:
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 5
            maximum: 255
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
            minLength: 1
            maxLength: 1024
        - name: VpcIds
          in: query
          required: false
          description: One or more VPC IDs.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/VpcId'
                - xml:
                    name: VpcId
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeVpcClassicLinkDnsSupport
      operationId: POST_DescribeVpcClassicLinkDnsSupport
      description: 'Describes the ClassicLink DNS support status of one or more VPCs. If enabled, the DNS hostname of a linked EC2-Classic instance resolves to its private IP address when addressed from an instance in the VPC to which it''s linked. Similarly, the DNS hostname of an instance in a VPC resolves to its private IP address when addressed from a linked EC2-Classic instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeVpcClassicLinkDnsSupportResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeVpcClassicLinkDnsSupportRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeVpcEndpointConnectionNotifications&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeVpcEndpointConnectionNotifications
      operationId: GET_DescribeVpcEndpointConnectionNotifications
      description: Describes the connection notifications for VPC endpoints and VPC endpoint services.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeVpcEndpointConnectionNotificationsResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: ConnectionNotificationId
          in: query
          required: false
          description: The ID of the notification.
          schema:
            type: string
        - name: Filter
          in: query
          required: false
          description: <p>One or more filters.</p> <ul> <li> <p> <code>connection-notification-arn</code> - The ARN of the SNS topic for the notification.</p> </li> <li> <p> <code>connection-notification-id</code> - The ID of the notification.</p> </li> <li> <p> <code>connection-notification-state</code> - The state of the notification (<code>Enabled</code> | <code>Disabled</code>).</p> </li> <li> <p> <code>connection-notification-type</code> - The type of notification (<code>Topic</code>).</p> </li> <li> <p> <code>service-id</code> - The ID of the endpoint service.</p> </li> <li> <p> <code>vpc-endpoint-id</code> - The ID of the VPC endpoint.</p> </li> </ul>
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return in a single call. To retrieve the remaining results, make another request with the returned <code>NextToken</code> value.'
          schema:
            type: integer
        - name: NextToken
          in: query
          required: false
          description: The token to request the next page of results.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeVpcEndpointConnectionNotifications
      operationId: POST_DescribeVpcEndpointConnectionNotifications
      description: Describes the connection notifications for VPC endpoints and VPC endpoint services.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeVpcEndpointConnectionNotificationsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeVpcEndpointConnectionNotificationsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeVpcEndpointConnections&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeVpcEndpointConnections
      operationId: GET_DescribeVpcEndpointConnections
      description: 'Describes the VPC endpoint connections to your VPC endpoint services, including any endpoints that are pending your acceptance.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeVpcEndpointConnectionsResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: Filter
          in: query
          required: false
          description: <p>One or more filters.</p> <ul> <li> <p> <code>ip-address-type</code> - The IP address type (<code>ipv4</code> | <code>ipv6</code>).</p> </li> <li> <p> <code>service-id</code> - The ID of the service.</p> </li> <li> <p> <code>vpc-endpoint-owner</code> - The ID of the Amazon Web Services account ID that owns the endpoint.</p> </li> <li> <p> <code>vpc-endpoint-state</code> - The state of the endpoint (<code>pendingAcceptance</code> | <code>pending</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code> | <code>rejected</code> | <code>failed</code>).</p> </li> <li> <p> <code>vpc-endpoint-id</code> - The ID of the endpoint.</p> </li> </ul>
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return for the request in a single page. The remaining results of the initial request can be seen by sending another request with the returned <code>NextToken</code> value. This value can be between 5 and 1,000; if <code>MaxResults</code> is given a value larger than 1,000, only 1,000 results are returned.'
          schema:
            type: integer
        - name: NextToken
          in: query
          required: false
          description: The token to retrieve the next page of results.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeVpcEndpointConnections
      operationId: POST_DescribeVpcEndpointConnections
      description: 'Describes the VPC endpoint connections to your VPC endpoint services, including any endpoints that are pending your acceptance.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeVpcEndpointConnectionsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeVpcEndpointConnectionsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeVpcEndpointServiceConfigurations&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeVpcEndpointServiceConfigurations
      operationId: GET_DescribeVpcEndpointServiceConfigurations
      description: Describes the VPC endpoint service configurations in your account (your services).
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeVpcEndpointServiceConfigurationsResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: ServiceId
          in: query
          required: false
          description: The IDs of one or more services.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/VpcEndpointServiceId'
                - xml:
                    name: item
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters.</p> <ul> <li> <p> <code>service-name</code> - The name of the service.</p> </li> <li> <p> <code>service-id</code> - The ID of the service.</p> </li> <li> <p> <code>service-state</code> - The state of the service (<code>Pending</code> | <code>Available</code> | <code>Deleting</code> | <code>Deleted</code> | <code>Failed</code>). </p> </li> <li> <p> <code>supported-ip-address-types</code> - The IP address type (<code>ipv4</code> | <code>ipv6</code>).</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return for the request in a single page. The remaining results of the initial request can be seen by sending another request with the returned <code>NextToken</code> value. This value can be between 5 and 1,000; if <code>MaxResults</code> is given a value larger than 1,000, only 1,000 results are returned.'
          schema:
            type: integer
        - name: NextToken
          in: query
          required: false
          description: The token to retrieve the next page of results.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeVpcEndpointServiceConfigurations
      operationId: POST_DescribeVpcEndpointServiceConfigurations
      description: Describes the VPC endpoint service configurations in your account (your services).
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeVpcEndpointServiceConfigurationsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeVpcEndpointServiceConfigurationsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeVpcEndpointServicePermissions&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeVpcEndpointServicePermissions
      operationId: GET_DescribeVpcEndpointServicePermissions
      description: Describes the principals (service consumers) that are permitted to discover your VPC endpoint service.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeVpcEndpointServicePermissionsResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: ServiceId
          in: query
          required: true
          description: The ID of the service.
          schema:
            type: string
        - name: Filter
          in: query
          required: false
          description: <p>One or more filters.</p> <ul> <li> <p> <code>principal</code> - The ARN of the principal.</p> </li> <li> <p> <code>principal-type</code> - The principal type (<code>All</code> | <code>Service</code> | <code>OrganizationUnit</code> | <code>Account</code> | <code>User</code> | <code>Role</code>).</p> </li> </ul>
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return for the request in a single page. The remaining results of the initial request can be seen by sending another request with the returned <code>NextToken</code> value. This value can be between 5 and 1,000; if <code>MaxResults</code> is given a value larger than 1,000, only 1,000 results are returned.'
          schema:
            type: integer
        - name: NextToken
          in: query
          required: false
          description: The token to retrieve the next page of results.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeVpcEndpointServicePermissions
      operationId: POST_DescribeVpcEndpointServicePermissions
      description: Describes the principals (service consumers) that are permitted to discover your VPC endpoint service.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeVpcEndpointServicePermissionsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeVpcEndpointServicePermissionsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeVpcEndpointServices&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeVpcEndpointServices
      operationId: GET_DescribeVpcEndpointServices
      description: '<p>Describes available services to which you can create a VPC endpoint.</p> <p>When the service provider and the consumer have different accounts in multiple Availability Zones, and the consumer views the VPC endpoint service information, the response only includes the common Availability Zones. For example, when the service provider account uses <code>us-east-1a</code> and <code>us-east-1c</code> and the consumer uses <code>us-east-1a</code> and <code>us-east-1b</code>, the response includes the VPC endpoint services in the common Availability Zone, <code>us-east-1a</code>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeVpcEndpointServicesResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: ServiceName
          in: query
          required: false
          description: One or more service names.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: item
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters.</p> <ul> <li> <p> <code>service-name</code> - The name of the service.</p> </li> <li> <p> <code>service-type</code> - The type of service (<code>Interface</code> | <code>Gateway</code>).</p> </li> <li> <p> <code>supported-ip-address-types</code> - The IP address type (<code>ipv4</code> | <code>ipv6</code>).</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: '<p>The maximum number of items to return for this request. The request returns a token that you can specify in a subsequent call to get the next set of results.</p> <p>Constraint: If the value is greater than 1,000, we return only 1,000 items.</p>'
          schema:
            type: integer
        - name: NextToken
          in: query
          required: false
          description: The token for the next set of items to return. (You received this token from a prior call.)
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeVpcEndpointServices
      operationId: POST_DescribeVpcEndpointServices
      description: '<p>Describes available services to which you can create a VPC endpoint.</p> <p>When the service provider and the consumer have different accounts in multiple Availability Zones, and the consumer views the VPC endpoint service information, the response only includes the common Availability Zones. For example, when the service provider account uses <code>us-east-1a</code> and <code>us-east-1c</code> and the consumer uses <code>us-east-1a</code> and <code>us-east-1b</code>, the response includes the VPC endpoint services in the common Availability Zone, <code>us-east-1a</code>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeVpcEndpointServicesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeVpcEndpointServicesRequest'
      parameters: []
  /?Action=DescribeVpcEndpoints&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeVpcEndpoints
      operationId: GET_DescribeVpcEndpoints
      description: Describes one or more of your VPC endpoints.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeVpcEndpointsResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: VpcEndpointId
          in: query
          required: false
          description: One or more endpoint IDs.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/VpcEndpointId'
                - xml:
                    name: item
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters.</p> <ul> <li> <p> <code>ip-address-type</code> - The IP address type (<code>ipv4</code> | <code>ipv6</code>).</p> </li> <li> <p> <code>service-name</code> - The name of the service.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC in which the endpoint resides.</p> </li> <li> <p> <code>vpc-endpoint-id</code> - The ID of the endpoint.</p> </li> <li> <p> <code>vpc-endpoint-state</code> - The state of the endpoint (<code>pendingAcceptance</code> | <code>pending</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code> | <code>rejected</code> | <code>failed</code>).</p> </li> <li> <p> <code>vpc-endpoint-type</code> - The type of VPC endpoint (<code>Interface</code> | <code>Gateway</code> | <code>GatewayLoadBalancer</code>).</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: '<p>The maximum number of items to return for this request. The request returns a token that you can specify in a subsequent call to get the next set of results.</p> <p>Constraint: If the value is greater than 1,000, we return only 1,000 items.</p>'
          schema:
            type: integer
        - name: NextToken
          in: query
          required: false
          description: The token for the next set of items to return. (You received this token from a prior call.)
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeVpcEndpoints
      operationId: POST_DescribeVpcEndpoints
      description: Describes one or more of your VPC endpoints.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeVpcEndpointsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeVpcEndpointsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeVpcPeeringConnections&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeVpcPeeringConnections
      operationId: GET_DescribeVpcPeeringConnections
      description: Describes one or more of your VPC peering connections.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeVpcPeeringConnectionsResult'
      parameters:
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters.</p> <ul> <li> <p> <code>accepter-vpc-info.cidr-block</code> - The IPv4 CIDR block of the accepter VPC.</p> </li> <li> <p> <code>accepter-vpc-info.owner-id</code> - The ID of the Amazon Web Services account that owns the accepter VPC.</p> </li> <li> <p> <code>accepter-vpc-info.vpc-id</code> - The ID of the accepter VPC.</p> </li> <li> <p> <code>expiration-time</code> - The expiration date and time for the VPC peering connection.</p> </li> <li> <p> <code>requester-vpc-info.cidr-block</code> - The IPv4 CIDR block of the requester''s VPC.</p> </li> <li> <p> <code>requester-vpc-info.owner-id</code> - The ID of the Amazon Web Services account that owns the requester VPC.</p> </li> <li> <p> <code>requester-vpc-info.vpc-id</code> - The ID of the requester VPC.</p> </li> <li> <p> <code>status-code</code> - The status of the VPC peering connection (<code>pending-acceptance</code> | <code>failed</code> | <code>expired</code> | <code>provisioning</code> | <code>active</code> | <code>deleting</code> | <code>deleted</code> | <code>rejected</code>).</p> </li> <li> <p> <code>status-message</code> - A message that provides more information about the status of the VPC peering connection, if applicable.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>vpc-peering-connection-id</code> - The ID of the VPC peering connection.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: VpcPeeringConnectionId
          in: query
          required: false
          description: '<p>One or more VPC peering connection IDs.</p> <p>Default: Describes all your VPC peering connections.</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/VpcPeeringConnectionId'
                - xml:
                    name: item
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 5
            maximum: 1000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeVpcPeeringConnections
      operationId: POST_DescribeVpcPeeringConnections
      description: Describes one or more of your VPC peering connections.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeVpcPeeringConnectionsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeVpcPeeringConnectionsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeVpcs&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeVpcs
      operationId: GET_DescribeVpcs
      description: Describes one or more of your VPCs.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeVpcsResult'
      parameters:
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters.</p> <ul> <li> <p> <code>cidr</code> - The primary IPv4 CIDR block of the VPC. The CIDR block you specify must exactly match the VPC''s CIDR block for information to be returned for the VPC. Must contain the slash followed by one or two digits (for example, <code>/28</code>).</p> </li> <li> <p> <code>cidr-block-association.cidr-block</code> - An IPv4 CIDR block associated with the VPC.</p> </li> <li> <p> <code>cidr-block-association.association-id</code> - The association ID for an IPv4 CIDR block associated with the VPC.</p> </li> <li> <p> <code>cidr-block-association.state</code> - The state of an IPv4 CIDR block associated with the VPC.</p> </li> <li> <p> <code>dhcp-options-id</code> - The ID of a set of DHCP options.</p> </li> <li> <p> <code>ipv6-cidr-block-association.ipv6-cidr-block</code> - An IPv6 CIDR block associated with the VPC.</p> </li> <li> <p> <code>ipv6-cidr-block-association.ipv6-pool</code> - The ID of the IPv6 address pool from which the IPv6 CIDR block is allocated.</p> </li> <li> <p> <code>ipv6-cidr-block-association.association-id</code> - The association ID for an IPv6 CIDR block associated with the VPC.</p> </li> <li> <p> <code>ipv6-cidr-block-association.state</code> - The state of an IPv6 CIDR block associated with the VPC.</p> </li> <li> <p> <code>is-default</code> - Indicates whether the VPC is the default VPC.</p> </li> <li> <p> <code>owner-id</code> - The ID of the Amazon Web Services account that owns the VPC.</p> </li> <li> <p> <code>state</code> - The state of the VPC (<code>pending</code> | <code>available</code>).</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: VpcId
          in: query
          required: false
          description: '<p>One or more VPC IDs.</p> <p>Default: Describes all your VPCs.</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/VpcId'
                - xml:
                    name: VpcId
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 5
            maximum: 1000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeVpcs
      operationId: POST_DescribeVpcs
      description: Describes one or more of your VPCs.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeVpcsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeVpcsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=DescribeVpnConnections&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeVpnConnections
      operationId: GET_DescribeVpnConnections
      description: '<p>Describes one or more of your VPN connections.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/vpn/latest/s2svpn/VPC_VPN.html">Amazon Web Services Site-to-Site VPN</a> in the <i>Amazon Web Services Site-to-Site VPN User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeVpnConnectionsResult'
      parameters:
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters.</p> <ul> <li> <p> <code>customer-gateway-configuration</code> - The configuration information for the customer gateway.</p> </li> <li> <p> <code>customer-gateway-id</code> - The ID of a customer gateway associated with the VPN connection.</p> </li> <li> <p> <code>state</code> - The state of the VPN connection (<code>pending</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>).</p> </li> <li> <p> <code>option.static-routes-only</code> - Indicates whether the connection has static routes only. Used for devices that do not support Border Gateway Protocol (BGP).</p> </li> <li> <p> <code>route.destination-cidr-block</code> - The destination CIDR block. This corresponds to the subnet used in a customer data center.</p> </li> <li> <p> <code>bgp-asn</code> - The BGP Autonomous System Number (ASN) associated with a BGP device.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>type</code> - The type of VPN connection. Currently the only supported type is <code>ipsec.1</code>.</p> </li> <li> <p> <code>vpn-connection-id</code> - The ID of the VPN connection.</p> </li> <li> <p> <code>vpn-gateway-id</code> - The ID of a virtual private gateway associated with the VPN connection.</p> </li> <li> <p> <code>transit-gateway-id</code> - The ID of a transit gateway associated with the VPN connection.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: VpnConnectionId
          in: query
          required: false
          description: '<p>One or more VPN connection IDs.</p> <p>Default: Describes your VPN connections.</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/VpnConnectionId'
                - xml:
                    name: VpnConnectionId
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeVpnConnections
      operationId: POST_DescribeVpnConnections
      description: '<p>Describes one or more of your VPN connections.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/vpn/latest/s2svpn/VPC_VPN.html">Amazon Web Services Site-to-Site VPN</a> in the <i>Amazon Web Services Site-to-Site VPN User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeVpnConnectionsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeVpnConnectionsRequest'
      parameters: []
  /?Action=DescribeVpnGateways&Version=2016-11-15:
    get:
      x-aws-operation-name: DescribeVpnGateways
      operationId: GET_DescribeVpnGateways
      description: '<p>Describes one or more of your virtual private gateways.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/vpn/latest/s2svpn/VPC_VPN.html">Amazon Web Services Site-to-Site VPN</a> in the <i>Amazon Web Services Site-to-Site VPN User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeVpnGatewaysResult'
      parameters:
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters.</p> <ul> <li> <p> <code>amazon-side-asn</code> - The Autonomous System Number (ASN) for the Amazon side of the gateway.</p> </li> <li> <p> <code>attachment.state</code> - The current state of the attachment between the gateway and the VPC (<code>attaching</code> | <code>attached</code> | <code>detaching</code> | <code>detached</code>).</p> </li> <li> <p> <code>attachment.vpc-id</code> - The ID of an attached VPC.</p> </li> <li> <p> <code>availability-zone</code> - The Availability Zone for the virtual private gateway (if applicable).</p> </li> <li> <p> <code>state</code> - The state of the virtual private gateway (<code>pending</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>).</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>type</code> - The type of virtual private gateway. Currently the only supported type is <code>ipsec.1</code>.</p> </li> <li> <p> <code>vpn-gateway-id</code> - The ID of the virtual private gateway.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: VpnGatewayId
          in: query
          required: false
          description: '<p>One or more virtual private gateway IDs.</p> <p>Default: Describes all your virtual private gateways.</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/VpnGatewayId'
                - xml:
                    name: VpnGatewayId
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeVpnGateways
      operationId: POST_DescribeVpnGateways
      description: '<p>Describes one or more of your virtual private gateways.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/vpn/latest/s2svpn/VPC_VPN.html">Amazon Web Services Site-to-Site VPN</a> in the <i>Amazon Web Services Site-to-Site VPN User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeVpnGatewaysResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeVpnGatewaysRequest'
      parameters: []
  /?Action=DetachClassicLinkVpc&Version=2016-11-15:
    get:
      x-aws-operation-name: DetachClassicLinkVpc
      operationId: GET_DetachClassicLinkVpc
      description: 'Unlinks (detaches) a linked EC2-Classic instance from a VPC. After the instance has been unlinked, the VPC security groups are no longer associated with it. An instance is automatically unlinked from a VPC when it''s stopped.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DetachClassicLinkVpcResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: InstanceId
          in: query
          required: true
          description: The ID of the instance to unlink from the VPC.
          schema:
            type: string
        - name: VpcId
          in: query
          required: true
          description: The ID of the VPC to which the instance is linked.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DetachClassicLinkVpc
      operationId: POST_DetachClassicLinkVpc
      description: 'Unlinks (detaches) a linked EC2-Classic instance from a VPC. After the instance has been unlinked, the VPC security groups are no longer associated with it. An instance is automatically unlinked from a VPC when it''s stopped.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DetachClassicLinkVpcResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DetachClassicLinkVpcRequest'
      parameters: []
  /?Action=DetachInternetGateway&Version=2016-11-15:
    get:
      x-aws-operation-name: DetachInternetGateway
      operationId: GET_DetachInternetGateway
      description: 'Detaches an internet gateway from a VPC, disabling connectivity between the internet and the VPC. The VPC must not contain any running instances with Elastic IP addresses or public IPv4 addresses.'
      responses:
        '200':
          description: Success
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: InternetGatewayId
          in: query
          required: true
          description: The ID of the internet gateway.
          schema:
            type: string
        - name: VpcId
          in: query
          required: true
          description: The ID of the VPC.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DetachInternetGateway
      operationId: POST_DetachInternetGateway
      description: 'Detaches an internet gateway from a VPC, disabling connectivity between the internet and the VPC. The VPC must not contain any running instances with Elastic IP addresses or public IPv4 addresses.'
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DetachInternetGatewayRequest'
      parameters: []
  /?Action=DetachNetworkInterface&Version=2016-11-15:
    get:
      x-aws-operation-name: DetachNetworkInterface
      operationId: GET_DetachNetworkInterface
      description: Detaches a network interface from an instance.
      responses:
        '200':
          description: Success
      parameters:
        - name: AttachmentId
          in: query
          required: true
          description: The ID of the attachment.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: Force
          in: query
          required: false
          description: '<p>Specifies whether to force a detachment.</p> <note> <ul> <li> <p>Use the <code>Force</code> parameter only as a last resort to detach a network interface from a failed instance. </p> </li> <li> <p>If you use the <code>Force</code> parameter to detach a network interface, you might not be able to attach a different network interface to the same index on the instance without first stopping and starting the instance.</p> </li> <li> <p>If you force the detachment of a network interface, the <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">instance metadata</a> might not get updated. This means that the attributes associated with the detached network interface might still be visible. The instance metadata will get updated when you stop and start the instance.</p> </li> </ul> </note>'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DetachNetworkInterface
      operationId: POST_DetachNetworkInterface
      description: Detaches a network interface from an instance.
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DetachNetworkInterfaceRequest'
      parameters: []
  /?Action=DetachVolume&Version=2016-11-15:
    get:
      x-aws-operation-name: DetachVolume
      operationId: GET_DetachVolume
      description: '<p>Detaches an EBS volume from an instance. Make sure to unmount any file systems on the device within your operating system before detaching the volume. Failure to do so can result in the volume becoming stuck in the <code>busy</code> state while detaching. If this happens, detachment can be delayed indefinitely until you unmount the volume, force detachment, reboot the instance, or all three. If an EBS volume is the root device of an instance, it can''t be detached while the instance is running. To detach the root volume, stop the instance first.</p> <p>When a volume with an Amazon Web Services Marketplace product code is detached from an instance, the product code is no longer associated with the instance.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-detaching-volume.html">Detach an Amazon EBS volume</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/VolumeAttachment'
      parameters:
        - name: Device
          in: query
          required: false
          description: The device name.
          schema:
            type: string
        - name: Force
          in: query
          required: false
          description: 'Forces detachment if the previous detachment attempt did not occur cleanly (for example, logging into an instance, unmounting the volume, and detaching normally). This option can lead to data loss or a corrupted file system. Use this option only as a last resort to detach a volume from a failed instance. The instance won''t have an opportunity to flush file system caches or file system metadata. If you use this option, you must perform file system check and repair procedures.'
          schema:
            type: boolean
        - name: InstanceId
          in: query
          required: false
          description: 'The ID of the instance. If you are detaching a Multi-Attach enabled volume, you must specify an instance ID.'
          schema:
            type: string
        - name: VolumeId
          in: query
          required: true
          description: The ID of the volume.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DetachVolume
      operationId: POST_DetachVolume
      description: '<p>Detaches an EBS volume from an instance. Make sure to unmount any file systems on the device within your operating system before detaching the volume. Failure to do so can result in the volume becoming stuck in the <code>busy</code> state while detaching. If this happens, detachment can be delayed indefinitely until you unmount the volume, force detachment, reboot the instance, or all three. If an EBS volume is the root device of an instance, it can''t be detached while the instance is running. To detach the root volume, stop the instance first.</p> <p>When a volume with an Amazon Web Services Marketplace product code is detached from an instance, the product code is no longer associated with the instance.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-detaching-volume.html">Detach an Amazon EBS volume</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/VolumeAttachment'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DetachVolumeRequest'
      parameters: []
  /?Action=DetachVpnGateway&Version=2016-11-15:
    get:
      x-aws-operation-name: DetachVpnGateway
      operationId: GET_DetachVpnGateway
      description: <p>Detaches a virtual private gateway from a VPC. You do this if you're planning to turn off the VPC and not use it anymore. You can confirm a virtual private gateway has been completely detached from a VPC by describing the virtual private gateway (any attachments to the virtual private gateway are also described).</p> <p>You must wait for the attachment's state to switch to <code>detached</code> before you can delete the VPC or attach a different VPC to the virtual private gateway.</p>
      responses:
        '200':
          description: Success
      parameters:
        - name: VpcId
          in: query
          required: true
          description: The ID of the VPC.
          schema:
            type: string
        - name: VpnGatewayId
          in: query
          required: true
          description: The ID of the virtual private gateway.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DetachVpnGateway
      operationId: POST_DetachVpnGateway
      description: <p>Detaches a virtual private gateway from a VPC. You do this if you're planning to turn off the VPC and not use it anymore. You can confirm a virtual private gateway has been completely detached from a VPC by describing the virtual private gateway (any attachments to the virtual private gateway are also described).</p> <p>You must wait for the attachment's state to switch to <code>detached</code> before you can delete the VPC or attach a different VPC to the virtual private gateway.</p>
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DetachVpnGatewayRequest'
      parameters: []
  /?Action=DisableEbsEncryptionByDefault&Version=2016-11-15:
    get:
      x-aws-operation-name: DisableEbsEncryptionByDefault
      operationId: GET_DisableEbsEncryptionByDefault
      description: '<p>Disables EBS encryption by default for your account in the current Region.</p> <p>After you disable encryption by default, you can still create encrypted volumes by enabling encryption when you create each volume.</p> <p>Disabling encryption by default does not change the encryption status of your existing volumes.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisableEbsEncryptionByDefaultResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DisableEbsEncryptionByDefault
      operationId: POST_DisableEbsEncryptionByDefault
      description: '<p>Disables EBS encryption by default for your account in the current Region.</p> <p>After you disable encryption by default, you can still create encrypted volumes by enabling encryption when you create each volume.</p> <p>Disabling encryption by default does not change the encryption status of your existing volumes.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisableEbsEncryptionByDefaultResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DisableEbsEncryptionByDefaultRequest'
      parameters: []
  /?Action=DisableFastLaunch&Version=2016-11-15:
    get:
      x-aws-operation-name: DisableFastLaunch
      operationId: GET_DisableFastLaunch
      description: '<p>Discontinue faster launching for a Windows AMI, and clean up existing pre-provisioned snapshots. When you disable faster launching, the AMI uses the standard launch process for each instance. All pre-provisioned snapshots must be removed before you can enable faster launching again.</p> <note> <p>To change these settings, you must own the AMI.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisableFastLaunchResult'
      parameters:
        - name: ImageId
          in: query
          required: true
          description: 'The ID of the image for which you’re turning off faster launching, and removing pre-provisioned snapshots.'
          schema:
            type: string
        - name: Force
          in: query
          required: false
          description: Forces the image settings to turn off faster launching for your Windows AMI. This parameter overrides any errors that are encountered while cleaning up resources in your account.
          schema:
            type: boolean
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DisableFastLaunch
      operationId: POST_DisableFastLaunch
      description: '<p>Discontinue faster launching for a Windows AMI, and clean up existing pre-provisioned snapshots. When you disable faster launching, the AMI uses the standard launch process for each instance. All pre-provisioned snapshots must be removed before you can enable faster launching again.</p> <note> <p>To change these settings, you must own the AMI.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisableFastLaunchResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DisableFastLaunchRequest'
      parameters: []
  /?Action=DisableFastSnapshotRestores&Version=2016-11-15:
    get:
      x-aws-operation-name: DisableFastSnapshotRestores
      operationId: GET_DisableFastSnapshotRestores
      description: Disables fast snapshot restores for the specified snapshots in the specified Availability Zones.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisableFastSnapshotRestoresResult'
      parameters:
        - name: AvailabilityZone
          in: query
          required: true
          description: 'One or more Availability Zones. For example, <code>us-east-2a</code>.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: AvailabilityZone
        - name: SourceSnapshotId
          in: query
          required: true
          description: 'The IDs of one or more snapshots. For example, <code>snap-1234567890abcdef0</code>.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/SnapshotId'
                - xml:
                    name: SnapshotId
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DisableFastSnapshotRestores
      operationId: POST_DisableFastSnapshotRestores
      description: Disables fast snapshot restores for the specified snapshots in the specified Availability Zones.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisableFastSnapshotRestoresResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DisableFastSnapshotRestoresRequest'
      parameters: []
  /?Action=DisableImageDeprecation&Version=2016-11-15:
    get:
      x-aws-operation-name: DisableImageDeprecation
      operationId: GET_DisableImageDeprecation
      description: '<p>Cancels the deprecation of the specified AMI.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-deprecate.html">Deprecate an AMI</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisableImageDeprecationResult'
      parameters:
        - name: ImageId
          in: query
          required: true
          description: The ID of the AMI.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DisableImageDeprecation
      operationId: POST_DisableImageDeprecation
      description: '<p>Cancels the deprecation of the specified AMI.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-deprecate.html">Deprecate an AMI</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisableImageDeprecationResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DisableImageDeprecationRequest'
      parameters: []
  /?Action=DisableIpamOrganizationAdminAccount&Version=2016-11-15:
    get:
      x-aws-operation-name: DisableIpamOrganizationAdminAccount
      operationId: GET_DisableIpamOrganizationAdminAccount
      description: 'Disable the IPAM account. For more information, see <a href="/vpc/latest/ipam/enable-integ-ipam.html">Enable integration with Organizations</a> in the <i>Amazon VPC IPAM User Guide</i>. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisableIpamOrganizationAdminAccountResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: DelegatedAdminAccountId
          in: query
          required: true
          description: The Organizations member account ID that you want to disable as IPAM account.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DisableIpamOrganizationAdminAccount
      operationId: POST_DisableIpamOrganizationAdminAccount
      description: 'Disable the IPAM account. For more information, see <a href="/vpc/latest/ipam/enable-integ-ipam.html">Enable integration with Organizations</a> in the <i>Amazon VPC IPAM User Guide</i>. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisableIpamOrganizationAdminAccountResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DisableIpamOrganizationAdminAccountRequest'
      parameters: []
  /?Action=DisableSerialConsoleAccess&Version=2016-11-15:
    get:
      x-aws-operation-name: DisableSerialConsoleAccess
      operationId: GET_DisableSerialConsoleAccess
      description: 'Disables access to the EC2 serial console of all instances for your account. By default, access to the EC2 serial console is disabled for your account. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configure-access-to-serial-console.html#serial-console-account-access">Manage account access to the EC2 serial console</a> in the <i>Amazon EC2 User Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisableSerialConsoleAccessResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DisableSerialConsoleAccess
      operationId: POST_DisableSerialConsoleAccess
      description: 'Disables access to the EC2 serial console of all instances for your account. By default, access to the EC2 serial console is disabled for your account. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configure-access-to-serial-console.html#serial-console-account-access">Manage account access to the EC2 serial console</a> in the <i>Amazon EC2 User Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisableSerialConsoleAccessResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DisableSerialConsoleAccessRequest'
      parameters: []
  /?Action=DisableTransitGatewayRouteTablePropagation&Version=2016-11-15:
    get:
      x-aws-operation-name: DisableTransitGatewayRouteTablePropagation
      operationId: GET_DisableTransitGatewayRouteTablePropagation
      description: Disables the specified resource attachment from propagating routes to the specified propagation route table.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisableTransitGatewayRouteTablePropagationResult'
      parameters:
        - name: TransitGatewayRouteTableId
          in: query
          required: true
          description: The ID of the propagation route table.
          schema:
            type: string
        - name: TransitGatewayAttachmentId
          in: query
          required: true
          description: The ID of the attachment.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DisableTransitGatewayRouteTablePropagation
      operationId: POST_DisableTransitGatewayRouteTablePropagation
      description: Disables the specified resource attachment from propagating routes to the specified propagation route table.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisableTransitGatewayRouteTablePropagationResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DisableTransitGatewayRouteTablePropagationRequest'
      parameters: []
  /?Action=DisableVgwRoutePropagation&Version=2016-11-15:
    get:
      x-aws-operation-name: DisableVgwRoutePropagation
      operationId: GET_DisableVgwRoutePropagation
      description: Disables a virtual private gateway (VGW) from propagating routes to a specified route table of a VPC.
      responses:
        '200':
          description: Success
      parameters:
        - name: GatewayId
          in: query
          required: true
          description: The ID of the virtual private gateway.
          schema:
            type: string
        - name: RouteTableId
          in: query
          required: true
          description: The ID of the route table.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DisableVgwRoutePropagation
      operationId: POST_DisableVgwRoutePropagation
      description: Disables a virtual private gateway (VGW) from propagating routes to a specified route table of a VPC.
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DisableVgwRoutePropagationRequest'
      parameters: []
  /?Action=DisableVpcClassicLink&Version=2016-11-15:
    get:
      x-aws-operation-name: DisableVpcClassicLink
      operationId: GET_DisableVpcClassicLink
      description: Disables ClassicLink for a VPC. You cannot disable ClassicLink for a VPC that has EC2-Classic instances linked to it.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisableVpcClassicLinkResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: VpcId
          in: query
          required: true
          description: The ID of the VPC.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DisableVpcClassicLink
      operationId: POST_DisableVpcClassicLink
      description: Disables ClassicLink for a VPC. You cannot disable ClassicLink for a VPC that has EC2-Classic instances linked to it.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisableVpcClassicLinkResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DisableVpcClassicLinkRequest'
      parameters: []
  /?Action=DisableVpcClassicLinkDnsSupport&Version=2016-11-15:
    get:
      x-aws-operation-name: DisableVpcClassicLinkDnsSupport
      operationId: GET_DisableVpcClassicLinkDnsSupport
      description: '<p>Disables ClassicLink DNS support for a VPC. If disabled, DNS hostnames resolve to public IP addresses when addressed between a linked EC2-Classic instance and instances in the VPC to which it''s linked. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>You must specify a VPC ID in the request.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisableVpcClassicLinkDnsSupportResult'
      parameters:
        - name: VpcId
          in: query
          required: false
          description: The ID of the VPC.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DisableVpcClassicLinkDnsSupport
      operationId: POST_DisableVpcClassicLinkDnsSupport
      description: '<p>Disables ClassicLink DNS support for a VPC. If disabled, DNS hostnames resolve to public IP addresses when addressed between a linked EC2-Classic instance and instances in the VPC to which it''s linked. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>You must specify a VPC ID in the request.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisableVpcClassicLinkDnsSupportResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DisableVpcClassicLinkDnsSupportRequest'
      parameters: []
  /?Action=DisassociateAddress&Version=2016-11-15:
    get:
      x-aws-operation-name: DisassociateAddress
      operationId: GET_DisassociateAddress
      description: '<p>Disassociates an Elastic IP address from the instance or network interface it''s associated with.</p> <p>An Elastic IP address is for use in either the EC2-Classic platform or in a VPC. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>This is an idempotent operation. If you perform the operation more than once, Amazon EC2 doesn''t return an error.</p>'
      responses:
        '200':
          description: Success
      parameters:
        - name: AssociationId
          in: query
          required: false
          description: '[EC2-VPC] The association ID. Required for EC2-VPC.'
          schema:
            type: string
        - name: PublicIp
          in: query
          required: false
          description: '[EC2-Classic] The Elastic IP address. Required for EC2-Classic.'
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DisassociateAddress
      operationId: POST_DisassociateAddress
      description: '<p>Disassociates an Elastic IP address from the instance or network interface it''s associated with.</p> <p>An Elastic IP address is for use in either the EC2-Classic platform or in a VPC. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>This is an idempotent operation. If you perform the operation more than once, Amazon EC2 doesn''t return an error.</p>'
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DisassociateAddressRequest'
      parameters: []
  /?Action=DisassociateClientVpnTargetNetwork&Version=2016-11-15:
    get:
      x-aws-operation-name: DisassociateClientVpnTargetNetwork
      operationId: GET_DisassociateClientVpnTargetNetwork
      description: '<p>Disassociates a target network from the specified Client VPN endpoint. When you disassociate the last target network from a Client VPN, the following happens:</p> <ul> <li> <p>The route that was automatically added for the VPC is deleted</p> </li> <li> <p>All active client connections are terminated</p> </li> <li> <p>New client connections are disallowed</p> </li> <li> <p>The Client VPN endpoint''s status changes to <code>pending-associate</code> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisassociateClientVpnTargetNetworkResult'
      parameters:
        - name: ClientVpnEndpointId
          in: query
          required: true
          description: The ID of the Client VPN endpoint from which to disassociate the target network.
          schema:
            type: string
        - name: AssociationId
          in: query
          required: true
          description: The ID of the target network association.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DisassociateClientVpnTargetNetwork
      operationId: POST_DisassociateClientVpnTargetNetwork
      description: '<p>Disassociates a target network from the specified Client VPN endpoint. When you disassociate the last target network from a Client VPN, the following happens:</p> <ul> <li> <p>The route that was automatically added for the VPC is deleted</p> </li> <li> <p>All active client connections are terminated</p> </li> <li> <p>New client connections are disallowed</p> </li> <li> <p>The Client VPN endpoint''s status changes to <code>pending-associate</code> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisassociateClientVpnTargetNetworkResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DisassociateClientVpnTargetNetworkRequest'
      parameters: []
  /?Action=DisassociateEnclaveCertificateIamRole&Version=2016-11-15:
    get:
      x-aws-operation-name: DisassociateEnclaveCertificateIamRole
      operationId: GET_DisassociateEnclaveCertificateIamRole
      description: 'Disassociates an IAM role from an Certificate Manager (ACM) certificate. Disassociating an IAM role from an ACM certificate removes the Amazon S3 object that contains the certificate, certificate chain, and encrypted private key from the Amazon S3 bucket. It also revokes the IAM role''s permission to use the KMS key used to encrypt the private key. This effectively revokes the role''s permission to use the certificate.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisassociateEnclaveCertificateIamRoleResult'
      parameters:
        - name: CertificateArn
          in: query
          required: false
          description: The ARN of the ACM certificate from which to disassociate the IAM role.
          schema:
            type: string
            minLength: 1
            maxLength: 1283
        - name: RoleArn
          in: query
          required: false
          description: The ARN of the IAM role to disassociate.
          schema:
            type: string
            minLength: 1
            maxLength: 1283
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DisassociateEnclaveCertificateIamRole
      operationId: POST_DisassociateEnclaveCertificateIamRole
      description: 'Disassociates an IAM role from an Certificate Manager (ACM) certificate. Disassociating an IAM role from an ACM certificate removes the Amazon S3 object that contains the certificate, certificate chain, and encrypted private key from the Amazon S3 bucket. It also revokes the IAM role''s permission to use the KMS key used to encrypt the private key. This effectively revokes the role''s permission to use the certificate.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisassociateEnclaveCertificateIamRoleResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DisassociateEnclaveCertificateIamRoleRequest'
      parameters: []
  /?Action=DisassociateIamInstanceProfile&Version=2016-11-15:
    get:
      x-aws-operation-name: DisassociateIamInstanceProfile
      operationId: GET_DisassociateIamInstanceProfile
      description: <p>Disassociates an IAM instance profile from a running or stopped instance.</p> <p>Use <a>DescribeIamInstanceProfileAssociations</a> to get the association ID.</p>
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisassociateIamInstanceProfileResult'
      parameters:
        - name: AssociationId
          in: query
          required: true
          description: The ID of the IAM instance profile association.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DisassociateIamInstanceProfile
      operationId: POST_DisassociateIamInstanceProfile
      description: <p>Disassociates an IAM instance profile from a running or stopped instance.</p> <p>Use <a>DescribeIamInstanceProfileAssociations</a> to get the association ID.</p>
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisassociateIamInstanceProfileResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DisassociateIamInstanceProfileRequest'
      parameters: []
  /?Action=DisassociateInstanceEventWindow&Version=2016-11-15:
    get:
      x-aws-operation-name: DisassociateInstanceEventWindow
      operationId: GET_DisassociateInstanceEventWindow
      description: '<p>Disassociates one or more targets from an event window.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/event-windows.html">Define event windows for scheduled events</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisassociateInstanceEventWindowResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: InstanceEventWindowId
          in: query
          required: true
          description: The ID of the event window.
          schema:
            type: string
        - name: AssociationTarget
          in: query
          required: true
          description: One or more targets to disassociate from the specified event window.
          schema:
            type: object
            properties:
              InstanceId:
                allOf:
                  - $ref: '#/components/schemas/InstanceIdList'
                  - description: The IDs of the instances to disassociate from the event window.
              InstanceTag:
                allOf:
                  - $ref: '#/components/schemas/TagList'
                  - description: The instance tags to disassociate from the event window. Any instances associated with the tags will be disassociated from the event window.
              DedicatedHostId:
                allOf:
                  - $ref: '#/components/schemas/DedicatedHostIdList'
                  - description: The IDs of the Dedicated Hosts to disassociate from the event window.
            description: The targets to disassociate from the specified event window.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DisassociateInstanceEventWindow
      operationId: POST_DisassociateInstanceEventWindow
      description: '<p>Disassociates one or more targets from an event window.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/event-windows.html">Define event windows for scheduled events</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisassociateInstanceEventWindowResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DisassociateInstanceEventWindowRequest'
      parameters: []
  /?Action=DisassociateRouteTable&Version=2016-11-15:
    get:
      x-aws-operation-name: DisassociateRouteTable
      operationId: GET_DisassociateRouteTable
      description: '<p>Disassociates a subnet or gateway from a route table.</p> <p>After you perform this action, the subnet no longer uses the routes in the route table. Instead, it uses the routes in the VPC''s main route table. For more information about route tables, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html">Route tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
      parameters:
        - name: AssociationId
          in: query
          required: true
          description: The association ID representing the current association between the route table and subnet or gateway.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DisassociateRouteTable
      operationId: POST_DisassociateRouteTable
      description: '<p>Disassociates a subnet or gateway from a route table.</p> <p>After you perform this action, the subnet no longer uses the routes in the route table. Instead, it uses the routes in the VPC''s main route table. For more information about route tables, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html">Route tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DisassociateRouteTableRequest'
      parameters: []
  /?Action=DisassociateSubnetCidrBlock&Version=2016-11-15:
    get:
      x-aws-operation-name: DisassociateSubnetCidrBlock
      operationId: GET_DisassociateSubnetCidrBlock
      description: 'Disassociates a CIDR block from a subnet. Currently, you can disassociate an IPv6 CIDR block only. You must detach or delete all gateways and resources that are associated with the CIDR block before you can disassociate it. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisassociateSubnetCidrBlockResult'
      parameters:
        - name: AssociationId
          in: query
          required: true
          description: The association ID for the CIDR block.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DisassociateSubnetCidrBlock
      operationId: POST_DisassociateSubnetCidrBlock
      description: 'Disassociates a CIDR block from a subnet. Currently, you can disassociate an IPv6 CIDR block only. You must detach or delete all gateways and resources that are associated with the CIDR block before you can disassociate it. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisassociateSubnetCidrBlockResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DisassociateSubnetCidrBlockRequest'
      parameters: []
  /?Action=DisassociateTransitGatewayMulticastDomain&Version=2016-11-15:
    get:
      x-aws-operation-name: DisassociateTransitGatewayMulticastDomain
      operationId: GET_DisassociateTransitGatewayMulticastDomain
      description: 'Disassociates the specified subnets from the transit gateway multicast domain. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisassociateTransitGatewayMulticastDomainResult'
      parameters:
        - name: TransitGatewayMulticastDomainId
          in: query
          required: false
          description: The ID of the transit gateway multicast domain.
          schema:
            type: string
        - name: TransitGatewayAttachmentId
          in: query
          required: false
          description: The ID of the attachment.
          schema:
            type: string
        - name: SubnetIds
          in: query
          required: false
          description: The IDs of the subnets;
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/SubnetId'
                - xml:
                    name: item
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DisassociateTransitGatewayMulticastDomain
      operationId: POST_DisassociateTransitGatewayMulticastDomain
      description: 'Disassociates the specified subnets from the transit gateway multicast domain. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisassociateTransitGatewayMulticastDomainResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DisassociateTransitGatewayMulticastDomainRequest'
      parameters: []
  /?Action=DisassociateTransitGatewayRouteTable&Version=2016-11-15:
    get:
      x-aws-operation-name: DisassociateTransitGatewayRouteTable
      operationId: GET_DisassociateTransitGatewayRouteTable
      description: Disassociates a resource attachment from a transit gateway route table.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisassociateTransitGatewayRouteTableResult'
      parameters:
        - name: TransitGatewayRouteTableId
          in: query
          required: true
          description: The ID of the transit gateway route table.
          schema:
            type: string
        - name: TransitGatewayAttachmentId
          in: query
          required: true
          description: The ID of the attachment.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DisassociateTransitGatewayRouteTable
      operationId: POST_DisassociateTransitGatewayRouteTable
      description: Disassociates a resource attachment from a transit gateway route table.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisassociateTransitGatewayRouteTableResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DisassociateTransitGatewayRouteTableRequest'
      parameters: []
  /?Action=DisassociateTrunkInterface&Version=2016-11-15:
    get:
      x-aws-operation-name: DisassociateTrunkInterface
      operationId: GET_DisassociateTrunkInterface
      description: '<note> <p>This API action is currently in <b>limited preview only</b>. If you are interested in using this feature, contact your account manager.</p> </note> <p>Removes an association between a branch network interface with a trunk network interface.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisassociateTrunkInterfaceResult'
      parameters:
        - name: AssociationId
          in: query
          required: true
          description: The ID of the association
          schema:
            type: string
        - name: ClientToken
          in: query
          required: false
          description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to Ensure Idempotency</a>.'
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DisassociateTrunkInterface
      operationId: POST_DisassociateTrunkInterface
      description: '<note> <p>This API action is currently in <b>limited preview only</b>. If you are interested in using this feature, contact your account manager.</p> </note> <p>Removes an association between a branch network interface with a trunk network interface.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisassociateTrunkInterfaceResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DisassociateTrunkInterfaceRequest'
      parameters: []
  /?Action=DisassociateVpcCidrBlock&Version=2016-11-15:
    get:
      x-aws-operation-name: DisassociateVpcCidrBlock
      operationId: GET_DisassociateVpcCidrBlock
      description: '<p>Disassociates a CIDR block from a VPC. To disassociate the CIDR block, you must specify its association ID. You can get the association ID by using <a>DescribeVpcs</a>. You must detach or delete all gateways and resources that are associated with the CIDR block before you can disassociate it. </p> <p>You cannot disassociate the CIDR block with which you originally created the VPC (the primary CIDR block).</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisassociateVpcCidrBlockResult'
      parameters:
        - name: AssociationId
          in: query
          required: true
          description: The association ID for the CIDR block.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DisassociateVpcCidrBlock
      operationId: POST_DisassociateVpcCidrBlock
      description: '<p>Disassociates a CIDR block from a VPC. To disassociate the CIDR block, you must specify its association ID. You can get the association ID by using <a>DescribeVpcs</a>. You must detach or delete all gateways and resources that are associated with the CIDR block before you can disassociate it. </p> <p>You cannot disassociate the CIDR block with which you originally created the VPC (the primary CIDR block).</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisassociateVpcCidrBlockResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DisassociateVpcCidrBlockRequest'
      parameters: []
  /?Action=EnableEbsEncryptionByDefault&Version=2016-11-15:
    get:
      x-aws-operation-name: EnableEbsEncryptionByDefault
      operationId: GET_EnableEbsEncryptionByDefault
      description: '<p>Enables EBS encryption by default for your account in the current Region.</p> <p>After you enable encryption by default, the EBS volumes that you create are always encrypted, either using the default KMS key or the KMS key that you specified when you created each volume. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>You can specify the default KMS key for encryption by default using <a>ModifyEbsDefaultKmsKeyId</a> or <a>ResetEbsDefaultKmsKeyId</a>.</p> <p>Enabling encryption by default has no effect on the encryption status of your existing volumes.</p> <p>After you enable encryption by default, you can no longer launch instances using instance types that do not support encryption. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#EBSEncryption_supported_instances">Supported instance types</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EnableEbsEncryptionByDefaultResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: EnableEbsEncryptionByDefault
      operationId: POST_EnableEbsEncryptionByDefault
      description: '<p>Enables EBS encryption by default for your account in the current Region.</p> <p>After you enable encryption by default, the EBS volumes that you create are always encrypted, either using the default KMS key or the KMS key that you specified when you created each volume. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>You can specify the default KMS key for encryption by default using <a>ModifyEbsDefaultKmsKeyId</a> or <a>ResetEbsDefaultKmsKeyId</a>.</p> <p>Enabling encryption by default has no effect on the encryption status of your existing volumes.</p> <p>After you enable encryption by default, you can no longer launch instances using instance types that do not support encryption. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#EBSEncryption_supported_instances">Supported instance types</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EnableEbsEncryptionByDefaultResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/EnableEbsEncryptionByDefaultRequest'
      parameters: []
  /?Action=EnableFastLaunch&Version=2016-11-15:
    get:
      x-aws-operation-name: EnableFastLaunch
      operationId: GET_EnableFastLaunch
      description: '<p>When you enable faster launching for a Windows AMI, images are pre-provisioned, using snapshots to launch instances up to 65% faster. To create the optimized Windows image, Amazon EC2 launches an instance and runs through Sysprep steps, rebooting as required. Then it creates a set of reserved snapshots that are used for subsequent launches. The reserved snapshots are automatically replenished as they are used, depending on your settings for launch frequency.</p> <note> <p>To change these settings, you must own the AMI.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EnableFastLaunchResult'
      parameters:
        - name: ImageId
          in: query
          required: true
          description: The ID of the image for which you’re enabling faster launching.
          schema:
            type: string
        - name: ResourceType
          in: query
          required: false
          description: 'The type of resource to use for pre-provisioning the Windows AMI for faster launching. Supported values include: <code>snapshot</code>, which is the default value.'
          schema:
            type: string
        - name: SnapshotConfiguration
          in: query
          required: false
          description: Configuration settings for creating and managing the snapshots that are used for pre-provisioning the Windows AMI for faster launching. The associated <code>ResourceType</code> must be <code>snapshot</code>.
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/Integer'
                  - description: The number of pre-provisioned snapshots to keep on hand for a fast-launch enabled Windows AMI.
            description: Configuration settings for creating and managing pre-provisioned snapshots for a fast-launch enabled Windows AMI.
        - name: LaunchTemplate
          in: query
          required: false
          description: 'The launch template to use when launching Windows instances from pre-provisioned snapshots. Launch template parameters can include either the name or ID of the launch template, but not both.'
          schema:
            type: object
            required:
              - Version
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: The version of the launch template to use for faster launching for a Windows AMI.
            description: '<p>Request to create a launch template for a fast-launch enabled Windows AMI.</p> <note> <p>Note - You can specify either the <code>LaunchTemplateName</code> or the <code>LaunchTemplateId</code>, but not both.</p> </note>'
        - name: MaxParallelLaunches
          in: query
          required: false
          description: 'The maximum number of parallel instances to launch for creating resources. Value must be <code>6</code> or greater. '
          schema:
            type: integer
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: EnableFastLaunch
      operationId: POST_EnableFastLaunch
      description: '<p>When you enable faster launching for a Windows AMI, images are pre-provisioned, using snapshots to launch instances up to 65% faster. To create the optimized Windows image, Amazon EC2 launches an instance and runs through Sysprep steps, rebooting as required. Then it creates a set of reserved snapshots that are used for subsequent launches. The reserved snapshots are automatically replenished as they are used, depending on your settings for launch frequency.</p> <note> <p>To change these settings, you must own the AMI.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EnableFastLaunchResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/EnableFastLaunchRequest'
      parameters: []
  /?Action=EnableFastSnapshotRestores&Version=2016-11-15:
    get:
      x-aws-operation-name: EnableFastSnapshotRestores
      operationId: GET_EnableFastSnapshotRestores
      description: '<p>Enables fast snapshot restores for the specified snapshots in the specified Availability Zones.</p> <p>You get the full benefit of fast snapshot restores after they enter the <code>enabled</code> state. To get the current state of fast snapshot restores, use <a>DescribeFastSnapshotRestores</a>. To disable fast snapshot restores, use <a>DisableFastSnapshotRestores</a>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-fast-snapshot-restore.html">Amazon EBS fast snapshot restore</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EnableFastSnapshotRestoresResult'
      parameters:
        - name: AvailabilityZone
          in: query
          required: true
          description: 'One or more Availability Zones. For example, <code>us-east-2a</code>.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: AvailabilityZone
        - name: SourceSnapshotId
          in: query
          required: true
          description: 'The IDs of one or more snapshots. For example, <code>snap-1234567890abcdef0</code>. You can specify a snapshot that was shared with you from another Amazon Web Services account.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/SnapshotId'
                - xml:
                    name: SnapshotId
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: EnableFastSnapshotRestores
      operationId: POST_EnableFastSnapshotRestores
      description: '<p>Enables fast snapshot restores for the specified snapshots in the specified Availability Zones.</p> <p>You get the full benefit of fast snapshot restores after they enter the <code>enabled</code> state. To get the current state of fast snapshot restores, use <a>DescribeFastSnapshotRestores</a>. To disable fast snapshot restores, use <a>DisableFastSnapshotRestores</a>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-fast-snapshot-restore.html">Amazon EBS fast snapshot restore</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EnableFastSnapshotRestoresResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/EnableFastSnapshotRestoresRequest'
      parameters: []
  /?Action=EnableImageDeprecation&Version=2016-11-15:
    get:
      x-aws-operation-name: EnableImageDeprecation
      operationId: GET_EnableImageDeprecation
      description: '<p>Enables deprecation of the specified AMI at the specified date and time.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-deprecate.html">Deprecate an AMI</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EnableImageDeprecationResult'
      parameters:
        - name: ImageId
          in: query
          required: true
          description: The ID of the AMI.
          schema:
            type: string
        - name: DeprecateAt
          in: query
          required: true
          description: '<p>The date and time to deprecate the AMI, in UTC, in the following format: <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z. If you specify a value for seconds, Amazon EC2 rounds the seconds to the nearest minute.</p> <p>You can’t specify a date in the past. The upper limit for <code>DeprecateAt</code> is 10 years from now.</p>'
          schema:
            type: string
            format: date-time
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: EnableImageDeprecation
      operationId: POST_EnableImageDeprecation
      description: '<p>Enables deprecation of the specified AMI at the specified date and time.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-deprecate.html">Deprecate an AMI</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EnableImageDeprecationResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/EnableImageDeprecationRequest'
      parameters: []
  /?Action=EnableIpamOrganizationAdminAccount&Version=2016-11-15:
    get:
      x-aws-operation-name: EnableIpamOrganizationAdminAccount
      operationId: GET_EnableIpamOrganizationAdminAccount
      description: 'Enable an Organizations member account as the IPAM admin account. You cannot select the Organizations management account as the IPAM admin account. For more information, see <a href="/vpc/latest/ipam/enable-integ-ipam.html">Enable integration with Organizations</a> in the <i>Amazon VPC IPAM User Guide</i>. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EnableIpamOrganizationAdminAccountResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: DelegatedAdminAccountId
          in: query
          required: true
          description: The Organizations member account ID that you want to enable as the IPAM account.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: EnableIpamOrganizationAdminAccount
      operationId: POST_EnableIpamOrganizationAdminAccount
      description: 'Enable an Organizations member account as the IPAM admin account. You cannot select the Organizations management account as the IPAM admin account. For more information, see <a href="/vpc/latest/ipam/enable-integ-ipam.html">Enable integration with Organizations</a> in the <i>Amazon VPC IPAM User Guide</i>. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EnableIpamOrganizationAdminAccountResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/EnableIpamOrganizationAdminAccountRequest'
      parameters: []
  /?Action=EnableSerialConsoleAccess&Version=2016-11-15:
    get:
      x-aws-operation-name: EnableSerialConsoleAccess
      operationId: GET_EnableSerialConsoleAccess
      description: 'Enables access to the EC2 serial console of all instances for your account. By default, access to the EC2 serial console is disabled for your account. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configure-access-to-serial-console.html#serial-console-account-access">Manage account access to the EC2 serial console</a> in the <i>Amazon EC2 User Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EnableSerialConsoleAccessResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: EnableSerialConsoleAccess
      operationId: POST_EnableSerialConsoleAccess
      description: 'Enables access to the EC2 serial console of all instances for your account. By default, access to the EC2 serial console is disabled for your account. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configure-access-to-serial-console.html#serial-console-account-access">Manage account access to the EC2 serial console</a> in the <i>Amazon EC2 User Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EnableSerialConsoleAccessResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/EnableSerialConsoleAccessRequest'
      parameters: []
  /?Action=EnableTransitGatewayRouteTablePropagation&Version=2016-11-15:
    get:
      x-aws-operation-name: EnableTransitGatewayRouteTablePropagation
      operationId: GET_EnableTransitGatewayRouteTablePropagation
      description: Enables the specified attachment to propagate routes to the specified propagation route table.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EnableTransitGatewayRouteTablePropagationResult'
      parameters:
        - name: TransitGatewayRouteTableId
          in: query
          required: true
          description: The ID of the propagation route table.
          schema:
            type: string
        - name: TransitGatewayAttachmentId
          in: query
          required: true
          description: The ID of the attachment.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: EnableTransitGatewayRouteTablePropagation
      operationId: POST_EnableTransitGatewayRouteTablePropagation
      description: Enables the specified attachment to propagate routes to the specified propagation route table.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EnableTransitGatewayRouteTablePropagationResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/EnableTransitGatewayRouteTablePropagationRequest'
      parameters: []
  /?Action=EnableVgwRoutePropagation&Version=2016-11-15:
    get:
      x-aws-operation-name: EnableVgwRoutePropagation
      operationId: GET_EnableVgwRoutePropagation
      description: Enables a virtual private gateway (VGW) to propagate routes to the specified route table of a VPC.
      responses:
        '200':
          description: Success
      parameters:
        - name: GatewayId
          in: query
          required: true
          description: 'The ID of the virtual private gateway that is attached to a VPC. The virtual private gateway must be attached to the same VPC that the routing tables are associated with. '
          schema:
            type: string
        - name: RouteTableId
          in: query
          required: true
          description: 'The ID of the route table. The routing table must be associated with the same VPC that the virtual private gateway is attached to. '
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: EnableVgwRoutePropagation
      operationId: POST_EnableVgwRoutePropagation
      description: Enables a virtual private gateway (VGW) to propagate routes to the specified route table of a VPC.
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/EnableVgwRoutePropagationRequest'
      parameters: []
  /?Action=EnableVolumeIO&Version=2016-11-15:
    get:
      x-aws-operation-name: EnableVolumeIO
      operationId: GET_EnableVolumeIO
      description: Enables I/O operations for a volume that had I/O operations disabled because the data on the volume was potentially inconsistent.
      responses:
        '200':
          description: Success
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: VolumeId
          in: query
          required: true
          description: The ID of the volume.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: EnableVolumeIO
      operationId: POST_EnableVolumeIO
      description: Enables I/O operations for a volume that had I/O operations disabled because the data on the volume was potentially inconsistent.
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/EnableVolumeIORequest'
      parameters: []
  /?Action=EnableVpcClassicLink&Version=2016-11-15:
    get:
      x-aws-operation-name: EnableVpcClassicLink
      operationId: GET_EnableVpcClassicLink
      description: 'Enables a VPC for ClassicLink. You can then link EC2-Classic instances to your ClassicLink-enabled VPC to allow communication over private IP addresses. You cannot enable your VPC for ClassicLink if any of your VPC route tables have existing routes for address ranges within the <code>10.0.0.0/8</code> IP address range, excluding local routes for VPCs in the <code>10.0.0.0/16</code> and <code>10.1.0.0/16</code> IP address ranges. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EnableVpcClassicLinkResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: VpcId
          in: query
          required: true
          description: The ID of the VPC.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: EnableVpcClassicLink
      operationId: POST_EnableVpcClassicLink
      description: 'Enables a VPC for ClassicLink. You can then link EC2-Classic instances to your ClassicLink-enabled VPC to allow communication over private IP addresses. You cannot enable your VPC for ClassicLink if any of your VPC route tables have existing routes for address ranges within the <code>10.0.0.0/8</code> IP address range, excluding local routes for VPCs in the <code>10.0.0.0/16</code> and <code>10.1.0.0/16</code> IP address ranges. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EnableVpcClassicLinkResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/EnableVpcClassicLinkRequest'
      parameters: []
  /?Action=EnableVpcClassicLinkDnsSupport&Version=2016-11-15:
    get:
      x-aws-operation-name: EnableVpcClassicLinkDnsSupport
      operationId: GET_EnableVpcClassicLinkDnsSupport
      description: '<p>Enables a VPC to support DNS hostname resolution for ClassicLink. If enabled, the DNS hostname of a linked EC2-Classic instance resolves to its private IP address when addressed from an instance in the VPC to which it''s linked. Similarly, the DNS hostname of an instance in a VPC resolves to its private IP address when addressed from a linked EC2-Classic instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>You must specify a VPC ID in the request.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EnableVpcClassicLinkDnsSupportResult'
      parameters:
        - name: VpcId
          in: query
          required: false
          description: The ID of the VPC.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: EnableVpcClassicLinkDnsSupport
      operationId: POST_EnableVpcClassicLinkDnsSupport
      description: '<p>Enables a VPC to support DNS hostname resolution for ClassicLink. If enabled, the DNS hostname of a linked EC2-Classic instance resolves to its private IP address when addressed from an instance in the VPC to which it''s linked. Similarly, the DNS hostname of an instance in a VPC resolves to its private IP address when addressed from a linked EC2-Classic instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>You must specify a VPC ID in the request.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EnableVpcClassicLinkDnsSupportResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/EnableVpcClassicLinkDnsSupportRequest'
      parameters: []
  /?Action=ExportClientVpnClientCertificateRevocationList&Version=2016-11-15:
    get:
      x-aws-operation-name: ExportClientVpnClientCertificateRevocationList
      operationId: GET_ExportClientVpnClientCertificateRevocationList
      description: Downloads the client certificate revocation list for the specified Client VPN endpoint.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ExportClientVpnClientCertificateRevocationListResult'
      parameters:
        - name: ClientVpnEndpointId
          in: query
          required: true
          description: The ID of the Client VPN endpoint.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ExportClientVpnClientCertificateRevocationList
      operationId: POST_ExportClientVpnClientCertificateRevocationList
      description: Downloads the client certificate revocation list for the specified Client VPN endpoint.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ExportClientVpnClientCertificateRevocationListResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ExportClientVpnClientCertificateRevocationListRequest'
      parameters: []
  /?Action=ExportClientVpnClientConfiguration&Version=2016-11-15:
    get:
      x-aws-operation-name: ExportClientVpnClientConfiguration
      operationId: GET_ExportClientVpnClientConfiguration
      description: Downloads the contents of the Client VPN endpoint configuration file for the specified Client VPN endpoint. The Client VPN endpoint configuration file includes the Client VPN endpoint and certificate information clients need to establish a connection with the Client VPN endpoint.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ExportClientVpnClientConfigurationResult'
      parameters:
        - name: ClientVpnEndpointId
          in: query
          required: true
          description: The ID of the Client VPN endpoint.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ExportClientVpnClientConfiguration
      operationId: POST_ExportClientVpnClientConfiguration
      description: Downloads the contents of the Client VPN endpoint configuration file for the specified Client VPN endpoint. The Client VPN endpoint configuration file includes the Client VPN endpoint and certificate information clients need to establish a connection with the Client VPN endpoint.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ExportClientVpnClientConfigurationResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ExportClientVpnClientConfigurationRequest'
      parameters: []
  /?Action=ExportImage&Version=2016-11-15:
    get:
      x-aws-operation-name: ExportImage
      operationId: GET_ExportImage
      description: 'Exports an Amazon Machine Image (AMI) to a VM file. For more information, see <a href="https://docs.aws.amazon.com/vm-import/latest/userguide/vmexport_image.html">Exporting a VM directly from an Amazon Machine Image (AMI)</a> in the <i>VM Import/Export User Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ExportImageResult'
      parameters:
        - name: ClientToken
          in: query
          required: false
          description: Token to enable idempotency for export image requests.
          schema:
            type: string
        - name: Description
          in: query
          required: false
          description: A description of the image being exported. The maximum length is 255 characters.
          schema:
            type: string
        - name: DiskImageFormat
          in: query
          required: true
          description: The disk image format.
          schema:
            type: string
            enum:
              - VMDK
              - RAW
              - VHD
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: ImageId
          in: query
          required: true
          description: The ID of the image.
          schema:
            type: string
        - name: S3ExportLocation
          in: query
          required: true
          description: Information about the destination Amazon S3 bucket. The bucket must exist and grant WRITE and READ_ACP permissions to the Amazon Web Services account vm-import-export@amazon.com.
          schema:
            type: object
            required:
              - S3Bucket
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: The prefix (logical hierarchy) in the bucket.
            description: Describes the destination for an export image task.
        - name: RoleName
          in: query
          required: false
          description: 'The name of the role that grants VM Import/Export permission to export images to your Amazon S3 bucket. If this parameter is not specified, the default role is named ''vmimport''.'
          schema:
            type: string
        - name: TagSpecification
          in: query
          required: false
          description: The tags to apply to the export image task during creation.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ExportImage
      operationId: POST_ExportImage
      description: 'Exports an Amazon Machine Image (AMI) to a VM file. For more information, see <a href="https://docs.aws.amazon.com/vm-import/latest/userguide/vmexport_image.html">Exporting a VM directly from an Amazon Machine Image (AMI)</a> in the <i>VM Import/Export User Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ExportImageResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ExportImageRequest'
      parameters: []
  /?Action=ExportTransitGatewayRoutes&Version=2016-11-15:
    get:
      x-aws-operation-name: ExportTransitGatewayRoutes
      operationId: GET_ExportTransitGatewayRoutes
      description: '<p>Exports routes from the specified transit gateway route table to the specified S3 bucket. By default, all routes are exported. Alternatively, you can filter by CIDR range.</p> <p>The routes are saved to the specified bucket in a JSON file. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/tgw/tgw-route-tables.html#tgw-export-route-tables">Export Route Tables to Amazon S3</a> in <i>Transit Gateways</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ExportTransitGatewayRoutesResult'
      parameters:
        - name: TransitGatewayRouteTableId
          in: query
          required: true
          description: The ID of the route table.
          schema:
            type: string
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters. The possible values are:</p> <ul> <li> <p> <code>attachment.transit-gateway-attachment-id</code> - The id of the transit gateway attachment.</p> </li> <li> <p> <code>attachment.resource-id</code> - The resource id of the transit gateway attachment.</p> </li> <li> <p> <code>route-search.exact-match</code> - The exact match of the specified filter.</p> </li> <li> <p> <code>route-search.longest-prefix-match</code> - The longest prefix that matches the route.</p> </li> <li> <p> <code>route-search.subnet-of-match</code> - The routes with a subnet that match the specified CIDR filter.</p> </li> <li> <p> <code>route-search.supernet-of-match</code> - The routes with a CIDR that encompass the CIDR filter. For example, if you have 10.0.1.0/29 and 10.0.1.0/31 routes in your route table and you specify supernet-of-match as 10.0.1.0/30, then the result returns 10.0.1.0/29.</p> </li> <li> <p> <code>state</code> - The state of the route (<code>active</code> | <code>blackhole</code>).</p> </li> <li> <p> <code>transit-gateway-route-destination-cidr-block</code> - The CIDR range.</p> </li> <li> <p> <code>type</code> - The type of route (<code>propagated</code> | <code>static</code>).</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: S3Bucket
          in: query
          required: true
          description: The name of the S3 bucket.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ExportTransitGatewayRoutes
      operationId: POST_ExportTransitGatewayRoutes
      description: '<p>Exports routes from the specified transit gateway route table to the specified S3 bucket. By default, all routes are exported. Alternatively, you can filter by CIDR range.</p> <p>The routes are saved to the specified bucket in a JSON file. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/tgw/tgw-route-tables.html#tgw-export-route-tables">Export Route Tables to Amazon S3</a> in <i>Transit Gateways</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ExportTransitGatewayRoutesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ExportTransitGatewayRoutesRequest'
      parameters: []
  /?Action=GetAssociatedEnclaveCertificateIamRoles&Version=2016-11-15:
    get:
      x-aws-operation-name: GetAssociatedEnclaveCertificateIamRoles
      operationId: GET_GetAssociatedEnclaveCertificateIamRoles
      description: 'Returns the IAM roles that are associated with the specified ACM (ACM) certificate. It also returns the name of the Amazon S3 bucket and the Amazon S3 object key where the certificate, certificate chain, and encrypted private key bundle are stored, and the ARN of the KMS key that''s used to encrypt the private key.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetAssociatedEnclaveCertificateIamRolesResult'
      parameters:
        - name: CertificateArn
          in: query
          required: false
          description: 'The ARN of the ACM certificate for which to view the associated IAM roles, encryption keys, and Amazon S3 object information.'
          schema:
            type: string
            minLength: 1
            maxLength: 1283
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: GetAssociatedEnclaveCertificateIamRoles
      operationId: POST_GetAssociatedEnclaveCertificateIamRoles
      description: 'Returns the IAM roles that are associated with the specified ACM (ACM) certificate. It also returns the name of the Amazon S3 bucket and the Amazon S3 object key where the certificate, certificate chain, and encrypted private key bundle are stored, and the ARN of the KMS key that''s used to encrypt the private key.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetAssociatedEnclaveCertificateIamRolesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetAssociatedEnclaveCertificateIamRolesRequest'
      parameters: []
  /?Action=GetAssociatedIpv6PoolCidrs&Version=2016-11-15:
    get:
      x-aws-operation-name: GetAssociatedIpv6PoolCidrs
      operationId: GET_GetAssociatedIpv6PoolCidrs
      description: Gets information about the IPv6 CIDR block associations for a specified IPv6 address pool.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetAssociatedIpv6PoolCidrsResult'
      parameters:
        - name: PoolId
          in: query
          required: true
          description: The ID of the IPv6 address pool.
          schema:
            type: string
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: GetAssociatedIpv6PoolCidrs
      operationId: POST_GetAssociatedIpv6PoolCidrs
      description: Gets information about the IPv6 CIDR block associations for a specified IPv6 address pool.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetAssociatedIpv6PoolCidrsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetAssociatedIpv6PoolCidrsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=GetCapacityReservationUsage&Version=2016-11-15:
    get:
      x-aws-operation-name: GetCapacityReservationUsage
      operationId: GET_GetCapacityReservationUsage
      description: 'Gets usage information about a Capacity Reservation. If the Capacity Reservation is shared, it shows usage information for the Capacity Reservation owner and each Amazon Web Services account that is currently using the shared capacity. If the Capacity Reservation is not shared, it shows only the Capacity Reservation owner''s usage.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetCapacityReservationUsageResult'
      parameters:
        - name: CapacityReservationId
          in: query
          required: true
          description: The ID of the Capacity Reservation.
          schema:
            type: string
        - name: NextToken
          in: query
          required: false
          description: The token to use to retrieve the next page of results.
          schema:
            type: string
        - name: MaxResults
          in: query
          required: false
          description: '<p>The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned <code>nextToken</code> value. This value can be between 5 and 500. If <code>maxResults</code> is given a larger value than 500, you receive an error.</p> <p>Valid range: Minimum value of 1. Maximum value of 1000.</p>'
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: GetCapacityReservationUsage
      operationId: POST_GetCapacityReservationUsage
      description: 'Gets usage information about a Capacity Reservation. If the Capacity Reservation is shared, it shows usage information for the Capacity Reservation owner and each Amazon Web Services account that is currently using the shared capacity. If the Capacity Reservation is not shared, it shows only the Capacity Reservation owner''s usage.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetCapacityReservationUsageResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetCapacityReservationUsageRequest'
      parameters: []
  /?Action=GetCoipPoolUsage&Version=2016-11-15:
    get:
      x-aws-operation-name: GetCoipPoolUsage
      operationId: GET_GetCoipPoolUsage
      description: Describes the allocations from the specified customer-owned address pool.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetCoipPoolUsageResult'
      parameters:
        - name: PoolId
          in: query
          required: true
          description: The ID of the address pool.
          schema:
            type: string
        - name: Filter
          in: query
          required: false
          description: <p>One or more filters.</p> <ul> <li> <p> <code>coip-address-usage.allocation-id</code> - The allocation ID of the address.</p> </li> <li> <p> <code>coip-address-usage.aws-account-id</code> - The ID of the Amazon Web Services account that is using the customer-owned IP address.</p> </li> <li> <p> <code>coip-address-usage.aws-service</code> - The Amazon Web Services service that is using the customer-owned IP address.</p> </li> <li> <p> <code>coip-address-usage.co-ip</code> - The customer-owned IP address.</p> </li> </ul>
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 5
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: GetCoipPoolUsage
      operationId: POST_GetCoipPoolUsage
      description: Describes the allocations from the specified customer-owned address pool.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetCoipPoolUsageResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetCoipPoolUsageRequest'
      parameters: []
  /?Action=GetConsoleOutput&Version=2016-11-15:
    get:
      x-aws-operation-name: GetConsoleOutput
      operationId: GET_GetConsoleOutput
      description: '<p>Gets the console output for the specified instance. For Linux instances, the instance console output displays the exact console output that would normally be displayed on a physical monitor attached to a computer. For Windows instances, the instance console output includes the last three system event log errors.</p> <p>By default, the console output returns buffered information that was posted shortly after an instance transition state (start, stop, reboot, or terminate). This information is available for at least one hour after the most recent post. Only the most recent 64 KB of console output is available.</p> <p>You can optionally retrieve the latest serial console output at any time during the instance lifecycle. This option is supported on instance types that use the Nitro hypervisor.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-console.html#instance-console-console-output">Instance console output</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetConsoleOutputResult'
      parameters:
        - name: InstanceId
          in: query
          required: true
          description: The ID of the instance.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: Latest
          in: query
          required: false
          description: '<p>When enabled, retrieves the latest console output for the instance.</p> <p>Default: disabled (<code>false</code>)</p>'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: GetConsoleOutput
      operationId: POST_GetConsoleOutput
      description: '<p>Gets the console output for the specified instance. For Linux instances, the instance console output displays the exact console output that would normally be displayed on a physical monitor attached to a computer. For Windows instances, the instance console output includes the last three system event log errors.</p> <p>By default, the console output returns buffered information that was posted shortly after an instance transition state (start, stop, reboot, or terminate). This information is available for at least one hour after the most recent post. Only the most recent 64 KB of console output is available.</p> <p>You can optionally retrieve the latest serial console output at any time during the instance lifecycle. This option is supported on instance types that use the Nitro hypervisor.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-console.html#instance-console-console-output">Instance console output</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetConsoleOutputResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetConsoleOutputRequest'
      parameters: []
  /?Action=GetConsoleScreenshot&Version=2016-11-15:
    get:
      x-aws-operation-name: GetConsoleScreenshot
      operationId: GET_GetConsoleScreenshot
      description: <p>Retrieve a JPG-format screenshot of a running instance to help with troubleshooting.</p> <p>The returned content is Base64-encoded.</p>
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetConsoleScreenshotResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: InstanceId
          in: query
          required: true
          description: The ID of the instance.
          schema:
            type: string
        - name: WakeUp
          in: query
          required: false
          description: 'When set to <code>true</code>, acts as keystroke input and wakes up an instance that''s in standby or "sleep" mode.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: GetConsoleScreenshot
      operationId: POST_GetConsoleScreenshot
      description: <p>Retrieve a JPG-format screenshot of a running instance to help with troubleshooting.</p> <p>The returned content is Base64-encoded.</p>
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetConsoleScreenshotResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetConsoleScreenshotRequest'
      parameters: []
  /?Action=GetDefaultCreditSpecification&Version=2016-11-15:
    get:
      x-aws-operation-name: GetDefaultCreditSpecification
      operationId: GET_GetDefaultCreditSpecification
      description: '<p>Describes the default credit option for CPU usage of a burstable performance instance family.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html">Burstable performance instances</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetDefaultCreditSpecificationResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: InstanceFamily
          in: query
          required: true
          description: The instance family.
          schema:
            type: string
            enum:
              - t2
              - t3
              - t3a
              - t4g
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: GetDefaultCreditSpecification
      operationId: POST_GetDefaultCreditSpecification
      description: '<p>Describes the default credit option for CPU usage of a burstable performance instance family.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html">Burstable performance instances</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetDefaultCreditSpecificationResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetDefaultCreditSpecificationRequest'
      parameters: []
  /?Action=GetEbsDefaultKmsKeyId&Version=2016-11-15:
    get:
      x-aws-operation-name: GetEbsDefaultKmsKeyId
      operationId: GET_GetEbsDefaultKmsKeyId
      description: '<p>Describes the default KMS key for EBS encryption by default for your account in this Region. You can change the default KMS key for encryption by default using <a>ModifyEbsDefaultKmsKeyId</a> or <a>ResetEbsDefaultKmsKeyId</a>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetEbsDefaultKmsKeyIdResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: GetEbsDefaultKmsKeyId
      operationId: POST_GetEbsDefaultKmsKeyId
      description: '<p>Describes the default KMS key for EBS encryption by default for your account in this Region. You can change the default KMS key for encryption by default using <a>ModifyEbsDefaultKmsKeyId</a> or <a>ResetEbsDefaultKmsKeyId</a>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetEbsDefaultKmsKeyIdResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetEbsDefaultKmsKeyIdRequest'
      parameters: []
  /?Action=GetEbsEncryptionByDefault&Version=2016-11-15:
    get:
      x-aws-operation-name: GetEbsEncryptionByDefault
      operationId: GET_GetEbsEncryptionByDefault
      description: '<p>Describes whether EBS encryption by default is enabled for your account in the current Region.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetEbsEncryptionByDefaultResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: GetEbsEncryptionByDefault
      operationId: POST_GetEbsEncryptionByDefault
      description: '<p>Describes whether EBS encryption by default is enabled for your account in the current Region.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetEbsEncryptionByDefaultResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetEbsEncryptionByDefaultRequest'
      parameters: []
  /?Action=GetFlowLogsIntegrationTemplate&Version=2016-11-15:
    get:
      x-aws-operation-name: GetFlowLogsIntegrationTemplate
      operationId: GET_GetFlowLogsIntegrationTemplate
      description: '<p>Generates a CloudFormation template that streamlines and automates the integration of VPC flow logs with Amazon Athena. This make it easier for you to query and gain insights from VPC flow logs data. Based on the information that you provide, we configure resources in the template to do the following:</p> <ul> <li> <p>Create a table in Athena that maps fields to a custom log format</p> </li> <li> <p>Create a Lambda function that updates the table with new partitions on a daily, weekly, or monthly basis</p> </li> <li> <p>Create a table partitioned between two timestamps in the past</p> </li> <li> <p>Create a set of named queries in Athena that you can use to get started quickly</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetFlowLogsIntegrationTemplateResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: FlowLogId
          in: query
          required: true
          description: The ID of the flow log.
          schema:
            type: string
        - name: ConfigDeliveryS3DestinationArn
          in: query
          required: true
          description: 'To store the CloudFormation template in Amazon S3, specify the location in Amazon S3.'
          schema:
            type: string
        - name: IntegrateService
          in: query
          required: true
          description: Information about the service integration.
          schema:
            type: object
            properties:
              AthenaIntegration:
                allOf:
                  - $ref: '#/components/schemas/AthenaIntegrationsSet'
                  - description: Information about the integration with Amazon Athena.
            description: Describes service integrations with VPC Flow logs.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: GetFlowLogsIntegrationTemplate
      operationId: POST_GetFlowLogsIntegrationTemplate
      description: '<p>Generates a CloudFormation template that streamlines and automates the integration of VPC flow logs with Amazon Athena. This make it easier for you to query and gain insights from VPC flow logs data. Based on the information that you provide, we configure resources in the template to do the following:</p> <ul> <li> <p>Create a table in Athena that maps fields to a custom log format</p> </li> <li> <p>Create a Lambda function that updates the table with new partitions on a daily, weekly, or monthly basis</p> </li> <li> <p>Create a table partitioned between two timestamps in the past</p> </li> <li> <p>Create a set of named queries in Athena that you can use to get started quickly</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetFlowLogsIntegrationTemplateResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetFlowLogsIntegrationTemplateRequest'
      parameters: []
  /?Action=GetGroupsForCapacityReservation&Version=2016-11-15:
    get:
      x-aws-operation-name: GetGroupsForCapacityReservation
      operationId: GET_GetGroupsForCapacityReservation
      description: Lists the resource groups to which a Capacity Reservation has been added.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetGroupsForCapacityReservationResult'
      parameters:
        - name: CapacityReservationId
          in: query
          required: true
          description: The ID of the Capacity Reservation.
          schema:
            type: string
        - name: NextToken
          in: query
          required: false
          description: The token to use to retrieve the next page of results.
          schema:
            type: string
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned <code>nextToken</code> value. This value can be between 5 and 500. If <code>maxResults</code> is given a larger value than 500, you receive an error.'
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: GetGroupsForCapacityReservation
      operationId: POST_GetGroupsForCapacityReservation
      description: Lists the resource groups to which a Capacity Reservation has been added.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetGroupsForCapacityReservationResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetGroupsForCapacityReservationRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=GetHostReservationPurchasePreview&Version=2016-11-15:
    get:
      x-aws-operation-name: GetHostReservationPurchasePreview
      operationId: GET_GetHostReservationPurchasePreview
      description: <p>Preview a reservation purchase with configurations that match those of your Dedicated Host. You must have active Dedicated Hosts in your account before you purchase a reservation.</p> <p>This is a preview of the <a>PurchaseHostReservation</a> action and does not result in the offering being purchased.</p>
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetHostReservationPurchasePreviewResult'
      parameters:
        - name: HostIdSet
          in: query
          required: true
          description: The IDs of the Dedicated Hosts with which the reservation is associated.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/DedicatedHostId'
                - xml:
                    name: item
        - name: OfferingId
          in: query
          required: true
          description: The offering ID of the reservation.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: GetHostReservationPurchasePreview
      operationId: POST_GetHostReservationPurchasePreview
      description: <p>Preview a reservation purchase with configurations that match those of your Dedicated Host. You must have active Dedicated Hosts in your account before you purchase a reservation.</p> <p>This is a preview of the <a>PurchaseHostReservation</a> action and does not result in the offering being purchased.</p>
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetHostReservationPurchasePreviewResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetHostReservationPurchasePreviewRequest'
      parameters: []
  /?Action=GetInstanceTypesFromInstanceRequirements&Version=2016-11-15:
    get:
      x-aws-operation-name: GetInstanceTypesFromInstanceRequirements
      operationId: GET_GetInstanceTypesFromInstanceRequirements
      description: '<p>Returns a list of instance types with the specified instance attributes. You can use the response to preview the instance types without launching instances. Note that the response does not consider capacity.</p> <p>When you specify multiple parameters, you get instance types that satisfy all of the specified parameters. If you specify multiple values for a parameter, you get instance types that satisfy any of the specified values.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-attribute-based-instance-type-selection.html#spotfleet-get-instance-types-from-instance-requirements">Preview instance types with specified attributes</a>, <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-attribute-based-instance-type-selection.html">Attribute-based instance type selection for EC2 Fleet</a>, <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-attribute-based-instance-type-selection.html">Attribute-based instance type selection for Spot Fleet</a>, and <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-placement-score.html">Spot placement score</a> in the <i>Amazon EC2 User Guide</i>, and <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-asg-instance-type-requirements.html">Creating an Auto Scaling group using attribute-based instance type selection</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetInstanceTypesFromInstanceRequirementsResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: ArchitectureType
          in: query
          required: true
          description: The processor architecture type.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/ArchitectureType'
                - xml:
                    name: item
            minItems: 0
            maxItems: 3
        - name: VirtualizationType
          in: query
          required: true
          description: The virtualization type.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/VirtualizationType'
                - xml:
                    name: item
            minItems: 0
            maxItems: 2
        - name: InstanceRequirements
          in: query
          required: true
          description: The attributes required for the instance types.
          schema:
            type: object
            required:
              - VCpuCount
              - MemoryMiB
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/MemoryMiBRequest'
                  - description: 'The minimum and maximum amount of memory, in MiB.'
              CpuManufacturer:
                allOf:
                  - $ref: '#/components/schemas/MemoryGiBPerVCpuRequest'
                  - description: '<p>The minimum and maximum amount of memory per vCPU, in GiB.</p> <p>Default: No minimum or maximum limits</p>'
              ExcludedInstanceType:
                allOf:
                  - $ref: '#/components/schemas/ExcludedInstanceTypeSet'
                  - description: '<p>The instance types to exclude. You can use strings with one or more wild cards, represented by an asterisk (<code>*</code>), to exclude an instance family, type, size, or generation. The following are examples: <code>m5.8xlarge</code>, <code>c5*.*</code>, <code>m5a.*</code>, <code>r*</code>, <code>*3*</code>.</p> <p>For example, if you specify <code>c5*</code>,Amazon EC2 will exclude the entire C5 instance family, which includes all C5a and C5n instance types. If you specify <code>m5a.*</code>, Amazon EC2 will exclude all the M5a instance types, but not the M5n instance types.</p> <p>Default: No excluded instance types</p>'
              InstanceGeneration:
                allOf:
                  - $ref: '#/components/schemas/LocalStorage'
                  - description: '<p>Indicates whether instance types with instance store volumes are included, excluded, or required. For more information, <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html">Amazon EC2 instance store</a> in the <i>Amazon EC2 User Guide</i>.</p> <ul> <li> <p>To include instance types with instance store volumes, specify <code>included</code>.</p> </li> <li> <p>To require only instance types with instance store volumes, specify <code>required</code>.</p> </li> <li> <p>To exclude instance types with instance store volumes, specify <code>excluded</code>.</p> </li> </ul> <p>Default: <code>included</code> </p>'
              LocalStorageType:
                allOf:
                  - $ref: '#/components/schemas/BaselineEbsBandwidthMbpsRequest'
                  - description: '<p>The minimum and maximum baseline bandwidth to Amazon EBS, in Mbps. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-optimized.html">Amazon EBS–optimized instances</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>Default: No minimum or maximum limits</p>'
              AcceleratorType:
                allOf:
                  - $ref: '#/components/schemas/AcceleratorCountRequest'
                  - description: '<p>The minimum and maximum number of accelerators (GPUs, FPGAs, or Amazon Web Services Inferentia chips) on an instance.</p> <p>To exclude accelerator-enabled instance types, set <code>Max</code> to <code>0</code>.</p> <p>Default: No minimum or maximum limits</p>'
              AcceleratorManufacturer:
                allOf:
                  - $ref: '#/components/schemas/AcceleratorManufacturerSet'
                  - description: '<p>Indicates whether instance types must have accelerators by specific manufacturers.</p> <ul> <li> <p>For instance types with NVIDIA devices, specify <code>nvidia</code>.</p> </li> <li> <p>For instance types with AMD devices, specify <code>amd</code>.</p> </li> <li> <p>For instance types with Amazon Web Services devices, specify <code>amazon-web-services</code>.</p> </li> <li> <p>For instance types with Xilinx devices, specify <code>xilinx</code>.</p> </li> </ul> <p>Default: Any manufacturer</p>'
              AcceleratorName:
                allOf:
                  - $ref: '#/components/schemas/AcceleratorTotalMemoryMiBRequest'
                  - description: '<p>The minimum and maximum amount of total accelerator memory, in MiB.</p> <p>Default: No minimum or maximum limits</p>'
            description: '<p>The attributes for the instance types. When you specify instance attributes, Amazon EC2 will identify instance types with these attributes.</p> <p>When you specify multiple parameters, you get instance types that satisfy all of the specified parameters. If you specify multiple values for a parameter, you get instance types that satisfy any of the specified values.</p> <note> <p>You must specify <code>VCpuCount</code> and <code>MemoryMiB</code>. All other parameters are optional. Any unspecified optional parameter is set to its default.</p> </note> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-attribute-based-instance-type-selection.html">Attribute-based instance type selection for EC2 Fleet</a>, <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-attribute-based-instance-type-selection.html">Attribute-based instance type selection for Spot Fleet</a>, and <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-placement-score.html">Spot placement score</a> in the <i>Amazon EC2 User Guide</i>.</p>'
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return in a single call. Specify a value between 1 and&#x2028; 1000. The default value is 1000. To retrieve the remaining results, make another call with&#x2028; the returned <code>NextToken</code> value.'
          schema:
            type: integer
        - name: NextToken
          in: query
          required: false
          description: The token for the next set of results.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: GetInstanceTypesFromInstanceRequirements
      operationId: POST_GetInstanceTypesFromInstanceRequirements
      description: '<p>Returns a list of instance types with the specified instance attributes. You can use the response to preview the instance types without launching instances. Note that the response does not consider capacity.</p> <p>When you specify multiple parameters, you get instance types that satisfy all of the specified parameters. If you specify multiple values for a parameter, you get instance types that satisfy any of the specified values.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-attribute-based-instance-type-selection.html#spotfleet-get-instance-types-from-instance-requirements">Preview instance types with specified attributes</a>, <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-attribute-based-instance-type-selection.html">Attribute-based instance type selection for EC2 Fleet</a>, <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-attribute-based-instance-type-selection.html">Attribute-based instance type selection for Spot Fleet</a>, and <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-placement-score.html">Spot placement score</a> in the <i>Amazon EC2 User Guide</i>, and <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-asg-instance-type-requirements.html">Creating an Auto Scaling group using attribute-based instance type selection</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetInstanceTypesFromInstanceRequirementsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetInstanceTypesFromInstanceRequirementsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=GetInstanceUefiData&Version=2016-11-15:
    get:
      x-aws-operation-name: GetInstanceUefiData
      operationId: GET_GetInstanceUefiData
      description: '<p>A binary representation of the UEFI variable store. Only non-volatile variables are stored. This is a base64 encoded and zlib compressed binary value that must be properly encoded.</p> <p>When you use <a href="https://docs.aws.amazon.com/cli/latest/reference/ec2/register-image.html">register-image</a> to create an AMI, you can create an exact copy of your variable store by passing the UEFI data in the <code>UefiData</code> parameter. You can modify the UEFI data by using the <a href="https://github.com/awslabs/python-uefivars">python-uefivars tool</a> on GitHub. You can use the tool to convert the UEFI data into a human-readable format (JSON), which you can inspect and modify, and then convert back into the binary format to use with register-image.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/uefi-secure-boot.html">UEFI Secure Boot</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetInstanceUefiDataResult'
      parameters:
        - name: InstanceId
          in: query
          required: true
          description: The ID of the instance from which to retrieve the UEFI data.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: GetInstanceUefiData
      operationId: POST_GetInstanceUefiData
      description: '<p>A binary representation of the UEFI variable store. Only non-volatile variables are stored. This is a base64 encoded and zlib compressed binary value that must be properly encoded.</p> <p>When you use <a href="https://docs.aws.amazon.com/cli/latest/reference/ec2/register-image.html">register-image</a> to create an AMI, you can create an exact copy of your variable store by passing the UEFI data in the <code>UefiData</code> parameter. You can modify the UEFI data by using the <a href="https://github.com/awslabs/python-uefivars">python-uefivars tool</a> on GitHub. You can use the tool to convert the UEFI data into a human-readable format (JSON), which you can inspect and modify, and then convert back into the binary format to use with register-image.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/uefi-secure-boot.html">UEFI Secure Boot</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetInstanceUefiDataResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetInstanceUefiDataRequest'
      parameters: []
  /?Action=GetIpamAddressHistory&Version=2016-11-15:
    get:
      x-aws-operation-name: GetIpamAddressHistory
      operationId: GET_GetIpamAddressHistory
      description: 'Retrieve historical information about a CIDR within an IPAM scope. For more information, see <a href="/vpc/latest/ipam/view-history-cidr-ipam.html">View the history of IP addresses</a> in the <i>Amazon VPC IPAM User Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetIpamAddressHistoryResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: Cidr
          in: query
          required: true
          description: 'The CIDR you want the history of. The CIDR can be an IPv4 or IPv6 IP address range. If you enter a /16 IPv4 CIDR, you will get records that match it exactly. You will not get records for any subnets within the /16 CIDR.'
          schema:
            type: string
        - name: IpamScopeId
          in: query
          required: true
          description: The ID of the IPAM scope that the CIDR is in.
          schema:
            type: string
        - name: VpcId
          in: query
          required: false
          description: The ID of the VPC you want your history records filtered by.
          schema:
            type: string
        - name: StartTime
          in: query
          required: false
          description: 'The start of the time period for which you are looking for history. If you omit this option, it will default to the value of EndTime.'
          schema:
            type: string
            format: date-time
        - name: EndTime
          in: query
          required: false
          description: 'The end of the time period for which you are looking for history. If you omit this option, it will default to the current time.'
          schema:
            type: string
            format: date-time
        - name: MaxResults
          in: query
          required: false
          description: The maximum number of historical results you would like returned per page. Defaults to 100.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: GetIpamAddressHistory
      operationId: POST_GetIpamAddressHistory
      description: 'Retrieve historical information about a CIDR within an IPAM scope. For more information, see <a href="/vpc/latest/ipam/view-history-cidr-ipam.html">View the history of IP addresses</a> in the <i>Amazon VPC IPAM User Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetIpamAddressHistoryResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetIpamAddressHistoryRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=GetIpamPoolAllocations&Version=2016-11-15:
    get:
      x-aws-operation-name: GetIpamPoolAllocations
      operationId: GET_GetIpamPoolAllocations
      description: Get a list of all the CIDR allocations in an IPAM pool.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetIpamPoolAllocationsResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: IpamPoolId
          in: query
          required: true
          description: The ID of the IPAM pool you want to see the allocations for.
          schema:
            type: string
        - name: IpamPoolAllocationId
          in: query
          required: false
          description: The ID of the allocation.
          schema:
            type: string
        - name: Filter
          in: query
          required: false
          description: 'One or more filters for the request. For more information about filtering, see <a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-filter.html">Filtering CLI output</a>.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: The maximum number of results you would like returned per page.
          schema:
            type: integer
            minimum: 1000
            maximum: 100000
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: GetIpamPoolAllocations
      operationId: POST_GetIpamPoolAllocations
      description: Get a list of all the CIDR allocations in an IPAM pool.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetIpamPoolAllocationsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetIpamPoolAllocationsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=GetIpamPoolCidrs&Version=2016-11-15:
    get:
      x-aws-operation-name: GetIpamPoolCidrs
      operationId: GET_GetIpamPoolCidrs
      description: Get the CIDRs provisioned to an IPAM pool.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetIpamPoolCidrsResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: IpamPoolId
          in: query
          required: true
          description: The ID of the IPAM pool you want the CIDR for.
          schema:
            type: string
        - name: Filter
          in: query
          required: false
          description: 'One or more filters for the request. For more information about filtering, see <a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-filter.html">Filtering CLI output</a>.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: The maximum number of results to return in the request.
          schema:
            type: integer
            minimum: 5
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: GetIpamPoolCidrs
      operationId: POST_GetIpamPoolCidrs
      description: Get the CIDRs provisioned to an IPAM pool.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetIpamPoolCidrsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetIpamPoolCidrsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=GetIpamResourceCidrs&Version=2016-11-15:
    get:
      x-aws-operation-name: GetIpamResourceCidrs
      operationId: GET_GetIpamResourceCidrs
      description: Get information about the resources in a scope.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetIpamResourceCidrsResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: Filter
          in: query
          required: false
          description: 'One or more filters for the request. For more information about filtering, see <a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-filter.html">Filtering CLI output</a>.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: The maximum number of results to return in the request.
          schema:
            type: integer
            minimum: 5
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: IpamScopeId
          in: query
          required: true
          description: The ID of the scope that the resource is in.
          schema:
            type: string
        - name: IpamPoolId
          in: query
          required: false
          description: The ID of the IPAM pool that the resource is in.
          schema:
            type: string
        - name: ResourceId
          in: query
          required: false
          description: The ID of the resource.
          schema:
            type: string
        - name: ResourceType
          in: query
          required: false
          description: The resource type.
          schema:
            type: string
            enum:
              - vpc
              - subnet
              - eip
              - public-ipv4-pool
              - ipv6-pool
        - name: ResourceTag
          in: query
          required: false
          description: ''
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: The value for the tag.
            description: A tag on an IPAM resource.
        - name: ResourceOwner
          in: query
          required: false
          description: The ID of the Amazon Web Services account that owns the resource.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: GetIpamResourceCidrs
      operationId: POST_GetIpamResourceCidrs
      description: Get information about the resources in a scope.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetIpamResourceCidrsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetIpamResourceCidrsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=GetLaunchTemplateData&Version=2016-11-15:
    get:
      x-aws-operation-name: GetLaunchTemplateData
      operationId: GET_GetLaunchTemplateData
      description: '<p>Retrieves the configuration data of the specified instance. You can use this data to create a launch template. </p> <p>This action calls on other describe actions to get instance information. Depending on your instance configuration, you may need to allow the following actions in your IAM policy: DescribeSpotInstanceRequests, DescribeInstanceCreditSpecifications, DescribeVolumes, DescribeInstanceAttribute, and DescribeElasticGpus. Or, you can allow <code>describe*</code> depending on your instance requirements.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetLaunchTemplateDataResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: InstanceId
          in: query
          required: true
          description: The ID of the instance.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: GetLaunchTemplateData
      operationId: POST_GetLaunchTemplateData
      description: '<p>Retrieves the configuration data of the specified instance. You can use this data to create a launch template. </p> <p>This action calls on other describe actions to get instance information. Depending on your instance configuration, you may need to allow the following actions in your IAM policy: DescribeSpotInstanceRequests, DescribeInstanceCreditSpecifications, DescribeVolumes, DescribeInstanceAttribute, and DescribeElasticGpus. Or, you can allow <code>describe*</code> depending on your instance requirements.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetLaunchTemplateDataResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetLaunchTemplateDataRequest'
      parameters: []
  /?Action=GetManagedPrefixListAssociations&Version=2016-11-15:
    get:
      x-aws-operation-name: GetManagedPrefixListAssociations
      operationId: GET_GetManagedPrefixListAssociations
      description: Gets information about the resources that are associated with the specified managed prefix list.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetManagedPrefixListAssociationsResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: PrefixListId
          in: query
          required: true
          description: The ID of the prefix list.
          schema:
            type: string
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 5
            maximum: 255
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: GetManagedPrefixListAssociations
      operationId: POST_GetManagedPrefixListAssociations
      description: Gets information about the resources that are associated with the specified managed prefix list.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetManagedPrefixListAssociationsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetManagedPrefixListAssociationsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=GetManagedPrefixListEntries&Version=2016-11-15:
    get:
      x-aws-operation-name: GetManagedPrefixListEntries
      operationId: GET_GetManagedPrefixListEntries
      description: Gets information about the entries for a specified managed prefix list.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetManagedPrefixListEntriesResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: PrefixListId
          in: query
          required: true
          description: The ID of the prefix list.
          schema:
            type: string
        - name: TargetVersion
          in: query
          required: false
          description: The version of the prefix list for which to return the entries. The default is the current version.
          schema:
            type: integer
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: GetManagedPrefixListEntries
      operationId: POST_GetManagedPrefixListEntries
      description: Gets information about the entries for a specified managed prefix list.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetManagedPrefixListEntriesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetManagedPrefixListEntriesRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=GetNetworkInsightsAccessScopeAnalysisFindings&Version=2016-11-15:
    get:
      x-aws-operation-name: GetNetworkInsightsAccessScopeAnalysisFindings
      operationId: GET_GetNetworkInsightsAccessScopeAnalysisFindings
      description: Gets the findings for the specified Network Access Scope analysis.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetNetworkInsightsAccessScopeAnalysisFindingsResult'
      parameters:
        - name: NetworkInsightsAccessScopeAnalysisId
          in: query
          required: true
          description: The ID of the Network Access Scope analysis.
          schema:
            type: string
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: GetNetworkInsightsAccessScopeAnalysisFindings
      operationId: POST_GetNetworkInsightsAccessScopeAnalysisFindings
      description: Gets the findings for the specified Network Access Scope analysis.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetNetworkInsightsAccessScopeAnalysisFindingsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetNetworkInsightsAccessScopeAnalysisFindingsRequest'
      parameters: []
  /?Action=GetNetworkInsightsAccessScopeContent&Version=2016-11-15:
    get:
      x-aws-operation-name: GetNetworkInsightsAccessScopeContent
      operationId: GET_GetNetworkInsightsAccessScopeContent
      description: Gets the content for the specified Network Access Scope.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetNetworkInsightsAccessScopeContentResult'
      parameters:
        - name: NetworkInsightsAccessScopeId
          in: query
          required: true
          description: The ID of the Network Access Scope.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: GetNetworkInsightsAccessScopeContent
      operationId: POST_GetNetworkInsightsAccessScopeContent
      description: Gets the content for the specified Network Access Scope.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetNetworkInsightsAccessScopeContentResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetNetworkInsightsAccessScopeContentRequest'
      parameters: []
  /?Action=GetPasswordData&Version=2016-11-15:
    get:
      x-aws-operation-name: GetPasswordData
      operationId: GET_GetPasswordData
      description: '<p>Retrieves the encrypted administrator password for a running Windows instance.</p> <p>The Windows password is generated at boot by the <code>EC2Config</code> service or <code>EC2Launch</code> scripts (Windows Server 2016 and later). This usually only happens the first time an instance is launched. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/UsingConfig_WinAMI.html">EC2Config</a> and <a href="https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ec2launch.html">EC2Launch</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>For the <code>EC2Config</code> service, the password is not generated for rebundled AMIs unless <code>Ec2SetPassword</code> is enabled before bundling.</p> <p>The password is encrypted using the key pair that you specified when you launched the instance. You must provide the corresponding key pair file.</p> <p>When you launch an instance, password generation and encryption may take a few minutes. If you try to retrieve the password before it''s available, the output returns an empty string. We recommend that you wait up to 15 minutes after launching an instance before trying to retrieve the generated password.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetPasswordDataResult'
      parameters:
        - name: InstanceId
          in: query
          required: true
          description: The ID of the Windows instance.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: GetPasswordData
      operationId: POST_GetPasswordData
      description: '<p>Retrieves the encrypted administrator password for a running Windows instance.</p> <p>The Windows password is generated at boot by the <code>EC2Config</code> service or <code>EC2Launch</code> scripts (Windows Server 2016 and later). This usually only happens the first time an instance is launched. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/UsingConfig_WinAMI.html">EC2Config</a> and <a href="https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ec2launch.html">EC2Launch</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>For the <code>EC2Config</code> service, the password is not generated for rebundled AMIs unless <code>Ec2SetPassword</code> is enabled before bundling.</p> <p>The password is encrypted using the key pair that you specified when you launched the instance. You must provide the corresponding key pair file.</p> <p>When you launch an instance, password generation and encryption may take a few minutes. If you try to retrieve the password before it''s available, the output returns an empty string. We recommend that you wait up to 15 minutes after launching an instance before trying to retrieve the generated password.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetPasswordDataResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetPasswordDataRequest'
      parameters: []
  /?Action=GetReservedInstancesExchangeQuote&Version=2016-11-15:
    get:
      x-aws-operation-name: GetReservedInstancesExchangeQuote
      operationId: GET_GetReservedInstancesExchangeQuote
      description: 'Returns a quote and exchange information for exchanging one or more specified Convertible Reserved Instances for a new Convertible Reserved Instance. If the exchange cannot be performed, the reason is returned in the response. Use <a>AcceptReservedInstancesExchangeQuote</a> to perform the exchange.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetReservedInstancesExchangeQuoteResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: ReservedInstanceId
          in: query
          required: true
          description: The IDs of the Convertible Reserved Instances to exchange.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/ReservationId'
                - xml:
                    name: ReservedInstanceId
        - name: TargetConfiguration
          in: query
          required: false
          description: The configuration of the target Convertible Reserved Instance to exchange for your current Convertible Reserved Instances.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TargetConfigurationRequest'
                - xml:
                    name: TargetConfigurationRequest
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: GetReservedInstancesExchangeQuote
      operationId: POST_GetReservedInstancesExchangeQuote
      description: 'Returns a quote and exchange information for exchanging one or more specified Convertible Reserved Instances for a new Convertible Reserved Instance. If the exchange cannot be performed, the reason is returned in the response. Use <a>AcceptReservedInstancesExchangeQuote</a> to perform the exchange.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetReservedInstancesExchangeQuoteResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetReservedInstancesExchangeQuoteRequest'
      parameters: []
  /?Action=GetSerialConsoleAccessStatus&Version=2016-11-15:
    get:
      x-aws-operation-name: GetSerialConsoleAccessStatus
      operationId: GET_GetSerialConsoleAccessStatus
      description: 'Retrieves the access status of your account to the EC2 serial console of all instances. By default, access to the EC2 serial console is disabled for your account. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configure-access-to-serial-console.html#serial-console-account-access">Manage account access to the EC2 serial console</a> in the <i>Amazon EC2 User Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetSerialConsoleAccessStatusResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: GetSerialConsoleAccessStatus
      operationId: POST_GetSerialConsoleAccessStatus
      description: 'Retrieves the access status of your account to the EC2 serial console of all instances. By default, access to the EC2 serial console is disabled for your account. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configure-access-to-serial-console.html#serial-console-account-access">Manage account access to the EC2 serial console</a> in the <i>Amazon EC2 User Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetSerialConsoleAccessStatusResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetSerialConsoleAccessStatusRequest'
      parameters: []
  /?Action=GetSpotPlacementScores&Version=2016-11-15:
    get:
      x-aws-operation-name: GetSpotPlacementScores
      operationId: GET_GetSpotPlacementScores
      description: '<p>Calculates the Spot placement score for a Region or Availability Zone based on the specified target capacity and compute requirements.</p> <p>You can specify your compute requirements either by using <code>InstanceRequirementsWithMetadata</code> and letting Amazon EC2 choose the optimal instance types to fulfill your Spot request, or you can specify the instance types by using <code>InstanceTypes</code>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-placement-score.html">Spot placement score</a> in the Amazon EC2 User Guide.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetSpotPlacementScoresResult'
      parameters:
        - name: InstanceType
          in: query
          required: false
          description: '<p>The instance types. We recommend that you specify at least three instance types. If you specify one or two instance types, or specify variations of a single instance type (for example, an <code>m3.xlarge</code> with and without instance storage), the returned placement score will always be low. </p> <p>If you specify <code>InstanceTypes</code>, you can''t specify <code>InstanceRequirementsWithMetadata</code>.</p>'
          schema:
            type: array
            items:
              $ref: '#/components/schemas/String'
            minItems: 0
            maxItems: 1000
        - name: TargetCapacity
          in: query
          required: true
          description: The target capacity.
          schema:
            type: integer
            minimum: 1
            maximum: 2000000000
        - name: TargetCapacityUnitType
          in: query
          required: false
          description: '<p>The unit for the target capacity.</p> <p>Default: <code>units</code> (translates to number of instances)</p>'
          schema:
            type: string
            enum:
              - vcpu
              - memory-mib
              - units
        - name: SingleAvailabilityZone
          in: query
          required: false
          description: '<p>Specify <code>true</code> so that the response returns a list of scored Availability Zones. Otherwise, the response returns a list of scored Regions.</p> <p>A list of scored Availability Zones is useful if you want to launch all of your Spot capacity into a single Availability Zone.</p>'
          schema:
            type: boolean
        - name: RegionName
          in: query
          required: false
          description: 'The Regions used to narrow down the list of Regions to be scored. Enter the Region code, for example, <code>us-east-1</code>.'
          schema:
            type: array
            items:
              $ref: '#/components/schemas/String'
            minItems: 0
            maxItems: 10
        - name: InstanceRequirementsWithMetadata
          in: query
          required: false
          description: '<p>The attributes for the instance types. When you specify instance attributes, Amazon EC2 will identify instance types with those attributes.</p> <p>If you specify <code>InstanceRequirementsWithMetadata</code>, you can''t specify <code>InstanceTypes</code>.</p>'
          schema:
            type: object
            properties:
              ArchitectureType:
                allOf:
                  - $ref: '#/components/schemas/ArchitectureTypeSet'
                  - description: The architecture type.
              VirtualizationType:
                allOf:
                  - $ref: '#/components/schemas/InstanceRequirementsRequest'
                  - description: 'The attributes for the instance types. When you specify instance attributes, Amazon EC2 will identify instance types with those attributes.'
            description: '<p>The architecture type, virtualization type, and other attributes for the instance types. When you specify instance attributes, Amazon EC2 will identify instance types with those attributes.</p> <p>If you specify <code>InstanceRequirementsWithMetadataRequest</code>, you can''t specify <code>InstanceTypes</code>.</p>'
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return in a single call. Specify a value between 1 and&#x2028; 1000. The default value is 1000. To retrieve the remaining results, make another call with&#x2028; the returned <code>NextToken</code> value.'
          schema:
            type: integer
            minimum: 10
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token for the next set of results.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: GetSpotPlacementScores
      operationId: POST_GetSpotPlacementScores
      description: '<p>Calculates the Spot placement score for a Region or Availability Zone based on the specified target capacity and compute requirements.</p> <p>You can specify your compute requirements either by using <code>InstanceRequirementsWithMetadata</code> and letting Amazon EC2 choose the optimal instance types to fulfill your Spot request, or you can specify the instance types by using <code>InstanceTypes</code>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-placement-score.html">Spot placement score</a> in the Amazon EC2 User Guide.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetSpotPlacementScoresResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetSpotPlacementScoresRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=GetSubnetCidrReservations&Version=2016-11-15:
    get:
      x-aws-operation-name: GetSubnetCidrReservations
      operationId: GET_GetSubnetCidrReservations
      description: Gets information about the subnet CIDR reservations.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetSubnetCidrReservationsResult'
      parameters:
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters.</p> <ul> <li> <p> <code>reservationType</code> - The type of reservation (<code>prefix</code> | <code>explicit</code>).</p> </li> <li> <p> <code>subnet-id</code> - The ID of the subnet.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: SubnetId
          in: query
          required: true
          description: The ID of the subnet.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 5
            maximum: 1000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: GetSubnetCidrReservations
      operationId: POST_GetSubnetCidrReservations
      description: Gets information about the subnet CIDR reservations.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetSubnetCidrReservationsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetSubnetCidrReservationsRequest'
      parameters: []
  /?Action=GetTransitGatewayAttachmentPropagations&Version=2016-11-15:
    get:
      x-aws-operation-name: GetTransitGatewayAttachmentPropagations
      operationId: GET_GetTransitGatewayAttachmentPropagations
      description: Lists the route tables to which the specified resource attachment propagates routes.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetTransitGatewayAttachmentPropagationsResult'
      parameters:
        - name: TransitGatewayAttachmentId
          in: query
          required: true
          description: The ID of the attachment.
          schema:
            type: string
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters. The possible values are:</p> <ul> <li> <p> <code>transit-gateway-route-table-id</code> - The ID of the transit gateway route table.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 5
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: GetTransitGatewayAttachmentPropagations
      operationId: POST_GetTransitGatewayAttachmentPropagations
      description: Lists the route tables to which the specified resource attachment propagates routes.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetTransitGatewayAttachmentPropagationsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetTransitGatewayAttachmentPropagationsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=GetTransitGatewayMulticastDomainAssociations&Version=2016-11-15:
    get:
      x-aws-operation-name: GetTransitGatewayMulticastDomainAssociations
      operationId: GET_GetTransitGatewayMulticastDomainAssociations
      description: Gets information about the associations for the transit gateway multicast domain.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetTransitGatewayMulticastDomainAssociationsResult'
      parameters:
        - name: TransitGatewayMulticastDomainId
          in: query
          required: false
          description: The ID of the transit gateway multicast domain.
          schema:
            type: string
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters. The possible values are:</p> <ul> <li> <p> <code>resource-id</code> - The ID of the resource.</p> </li> <li> <p> <code>resource-type</code> - The type of resource. The valid value is: <code>vpc</code>.</p> </li> <li> <p> <code>state</code> - The state of the subnet association. Valid values are <code>associated</code> | <code>associating</code> | <code>disassociated</code> | <code>disassociating</code>.</p> </li> <li> <p> <code>subnet-id</code> - The ID of the subnet.</p> </li> <li> <p> <code>transit-gateway-attachment-id</code> - The id of the transit gateway attachment.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 5
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: GetTransitGatewayMulticastDomainAssociations
      operationId: POST_GetTransitGatewayMulticastDomainAssociations
      description: Gets information about the associations for the transit gateway multicast domain.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetTransitGatewayMulticastDomainAssociationsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetTransitGatewayMulticastDomainAssociationsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=GetTransitGatewayPrefixListReferences&Version=2016-11-15:
    get:
      x-aws-operation-name: GetTransitGatewayPrefixListReferences
      operationId: GET_GetTransitGatewayPrefixListReferences
      description: Gets information about the prefix list references in a specified transit gateway route table.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetTransitGatewayPrefixListReferencesResult'
      parameters:
        - name: TransitGatewayRouteTableId
          in: query
          required: true
          description: The ID of the transit gateway route table.
          schema:
            type: string
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters. The possible values are:</p> <ul> <li> <p> <code>attachment.resource-id</code> - The ID of the resource for the attachment.</p> </li> <li> <p> <code>attachment.resource-type</code> - The type of resource for the attachment. Valid values are <code>vpc</code> | <code>vpn</code> | <code>direct-connect-gateway</code> | <code>peering</code>.</p> </li> <li> <p> <code>attachment.transit-gateway-attachment-id</code> - The ID of the attachment.</p> </li> <li> <p> <code>is-blackhole</code> - Whether traffic matching the route is blocked (<code>true</code> | <code>false</code>).</p> </li> <li> <p> <code>prefix-list-id</code> - The ID of the prefix list.</p> </li> <li> <p> <code>prefix-list-owner-id</code> - The ID of the owner of the prefix list.</p> </li> <li> <p> <code>state</code> - The state of the prefix list reference (<code>pending</code> | <code>available</code> | <code>modifying</code> | <code>deleting</code>).</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 5
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: GetTransitGatewayPrefixListReferences
      operationId: POST_GetTransitGatewayPrefixListReferences
      description: Gets information about the prefix list references in a specified transit gateway route table.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetTransitGatewayPrefixListReferencesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetTransitGatewayPrefixListReferencesRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=GetTransitGatewayRouteTableAssociations&Version=2016-11-15:
    get:
      x-aws-operation-name: GetTransitGatewayRouteTableAssociations
      operationId: GET_GetTransitGatewayRouteTableAssociations
      description: Gets information about the associations for the specified transit gateway route table.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetTransitGatewayRouteTableAssociationsResult'
      parameters:
        - name: TransitGatewayRouteTableId
          in: query
          required: true
          description: The ID of the transit gateway route table.
          schema:
            type: string
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters. The possible values are:</p> <ul> <li> <p> <code>resource-id</code> - The ID of the resource.</p> </li> <li> <p> <code>resource-type</code> - The resource type. Valid values are <code>vpc</code> | <code>vpn</code> | <code>direct-connect-gateway</code> | <code>peering</code> | <code>connect</code>.</p> </li> <li> <p> <code>transit-gateway-attachment-id</code> - The ID of the attachment.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 5
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: GetTransitGatewayRouteTableAssociations
      operationId: POST_GetTransitGatewayRouteTableAssociations
      description: Gets information about the associations for the specified transit gateway route table.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetTransitGatewayRouteTableAssociationsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetTransitGatewayRouteTableAssociationsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=GetTransitGatewayRouteTablePropagations&Version=2016-11-15:
    get:
      x-aws-operation-name: GetTransitGatewayRouteTablePropagations
      operationId: GET_GetTransitGatewayRouteTablePropagations
      description: Gets information about the route table propagations for the specified transit gateway route table.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetTransitGatewayRouteTablePropagationsResult'
      parameters:
        - name: TransitGatewayRouteTableId
          in: query
          required: true
          description: The ID of the transit gateway route table.
          schema:
            type: string
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters. The possible values are:</p> <ul> <li> <p> <code>resource-id</code> - The ID of the resource.</p> </li> <li> <p> <code>resource-type</code> - The resource type. Valid values are <code>vpc</code> | <code>vpn</code> | <code>direct-connect-gateway</code> | <code>peering</code> | <code>connect</code>.</p> </li> <li> <p> <code>transit-gateway-attachment-id</code> - The ID of the attachment.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 5
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: GetTransitGatewayRouteTablePropagations
      operationId: POST_GetTransitGatewayRouteTablePropagations
      description: Gets information about the route table propagations for the specified transit gateway route table.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetTransitGatewayRouteTablePropagationsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetTransitGatewayRouteTablePropagationsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=GetVpnConnectionDeviceSampleConfiguration&Version=2016-11-15:
    get:
      x-aws-operation-name: GetVpnConnectionDeviceSampleConfiguration
      operationId: GET_GetVpnConnectionDeviceSampleConfiguration
      description: Download an Amazon Web Services-provided sample configuration file to be used with the customer gateway device specified for your Site-to-Site VPN connection.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetVpnConnectionDeviceSampleConfigurationResult'
      parameters:
        - name: VpnConnectionId
          in: query
          required: true
          description: The <code>VpnConnectionId</code> specifies the Site-to-Site VPN connection used for the sample configuration.
          schema:
            type: string
        - name: VpnConnectionDeviceTypeId
          in: query
          required: true
          description: Device identifier provided by the <code>GetVpnConnectionDeviceTypes</code> API.
          schema:
            type: string
        - name: InternetKeyExchangeVersion
          in: query
          required: false
          description: 'The IKE version to be used in the sample configuration file for your customer gateway device. You can specify one of the following versions: <code>ikev1</code> or <code>ikev2</code>.'
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: GetVpnConnectionDeviceSampleConfiguration
      operationId: POST_GetVpnConnectionDeviceSampleConfiguration
      description: Download an Amazon Web Services-provided sample configuration file to be used with the customer gateway device specified for your Site-to-Site VPN connection.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetVpnConnectionDeviceSampleConfigurationResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetVpnConnectionDeviceSampleConfigurationRequest'
      parameters: []
  /?Action=GetVpnConnectionDeviceTypes&Version=2016-11-15:
    get:
      x-aws-operation-name: GetVpnConnectionDeviceTypes
      operationId: GET_GetVpnConnectionDeviceTypes
      description: 'Obtain a list of customer gateway devices for which sample configuration files can be provided. The request has no additional parameters. You can also see the list of device types with sample configuration files available under <a href="https://docs.aws.amazon.com/vpn/latest/s2svpn/your-cgw.html">Your customer gateway device</a> in the <i>Amazon Web Services Site-to-Site VPN User Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetVpnConnectionDeviceTypesResult'
      parameters:
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results returned by <code>GetVpnConnectionDeviceTypes</code> in paginated output. When this parameter is used, <code>GetVpnConnectionDeviceTypes</code> only returns <code>MaxResults</code> results in a single page along with a <code>NextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>GetVpnConnectionDeviceTypes</code> request with the returned <code>NextToken</code> value. This value can be between 200 and 1000. If this parameter is not used, then <code>GetVpnConnectionDeviceTypes</code> returns all results.'
          schema:
            type: integer
            minimum: 200
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: 'The <code>NextToken</code> value returned from a previous paginated <code>GetVpnConnectionDeviceTypes</code> request where <code>MaxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>NextToken</code> value. This value is null when there are no more results to return. '
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: GetVpnConnectionDeviceTypes
      operationId: POST_GetVpnConnectionDeviceTypes
      description: 'Obtain a list of customer gateway devices for which sample configuration files can be provided. The request has no additional parameters. You can also see the list of device types with sample configuration files available under <a href="https://docs.aws.amazon.com/vpn/latest/s2svpn/your-cgw.html">Your customer gateway device</a> in the <i>Amazon Web Services Site-to-Site VPN User Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetVpnConnectionDeviceTypesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetVpnConnectionDeviceTypesRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=ImportClientVpnClientCertificateRevocationList&Version=2016-11-15:
    get:
      x-aws-operation-name: ImportClientVpnClientCertificateRevocationList
      operationId: GET_ImportClientVpnClientCertificateRevocationList
      description: <p>Uploads a client certificate revocation list to the specified Client VPN endpoint. Uploading a client certificate revocation list overwrites the existing client certificate revocation list.</p> <p>Uploading a client certificate revocation list resets existing client connections.</p>
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ImportClientVpnClientCertificateRevocationListResult'
      parameters:
        - name: ClientVpnEndpointId
          in: query
          required: true
          description: The ID of the Client VPN endpoint to which the client certificate revocation list applies.
          schema:
            type: string
        - name: CertificateRevocationList
          in: query
          required: true
          description: 'The client certificate revocation list file. For more information, see <a href="https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/cvpn-working-certificates.html#cvpn-working-certificates-generate">Generate a Client Certificate Revocation List</a> in the <i>Client VPN Administrator Guide</i>.'
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ImportClientVpnClientCertificateRevocationList
      operationId: POST_ImportClientVpnClientCertificateRevocationList
      description: <p>Uploads a client certificate revocation list to the specified Client VPN endpoint. Uploading a client certificate revocation list overwrites the existing client certificate revocation list.</p> <p>Uploading a client certificate revocation list resets existing client connections.</p>
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ImportClientVpnClientCertificateRevocationListResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ImportClientVpnClientCertificateRevocationListRequest'
      parameters: []
  /?Action=ImportImage&Version=2016-11-15:
    get:
      x-aws-operation-name: ImportImage
      operationId: GET_ImportImage
      description: '<p>Import single or multi-volume disk images or EBS snapshots into an Amazon Machine Image (AMI).</p> <p>For more information, see <a href="https://docs.aws.amazon.com/vm-import/latest/userguide/vmimport-image-import.html">Importing a VM as an image using VM Import/Export</a> in the <i>VM Import/Export User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ImportImageResult'
      parameters:
        - name: Architecture
          in: query
          required: false
          description: '<p>The architecture of the virtual machine.</p> <p>Valid values: <code>i386</code> | <code>x86_64</code> </p>'
          schema:
            type: string
        - name: ClientData
          in: query
          required: false
          description: The client-specific data.
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/DateTime'
                  - description: The time that the disk upload starts.
            description: Describes the client-specific data.
        - name: ClientToken
          in: query
          required: false
          description: The token to enable idempotency for VM import requests.
          schema:
            type: string
        - name: Description
          in: query
          required: false
          description: A description string for the import image task.
          schema:
            type: string
        - name: DiskContainer
          in: query
          required: false
          description: Information about the disk containers.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/ImageDiskContainer'
                - xml:
                    name: item
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: Encrypted
          in: query
          required: false
          description: 'Specifies whether the destination AMI of the imported image should be encrypted. The default KMS key for EBS is used unless you specify a non-default KMS key using <code>KmsKeyId</code>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.'
          schema:
            type: boolean
        - name: Hypervisor
          in: query
          required: false
          description: '<p>The target hypervisor platform.</p> <p>Valid values: <code>xen</code> </p>'
          schema:
            type: string
        - name: KmsKeyId
          in: query
          required: false
          description: '<p>An identifier for the symmetric KMS key to use when creating the encrypted AMI. This parameter is only required if you want to use a non-default KMS key; if this parameter is not specified, the default KMS key for EBS is used. If a <code>KmsKeyId</code> is specified, the <code>Encrypted</code> flag must also be set. </p> <p>The KMS key identifier may be provided in any of the following formats: </p> <ul> <li> <p>Key ID</p> </li> <li> <p>Key alias. The alias ARN contains the <code>arn:aws:kms</code> namespace, followed by the Region of the key, the Amazon Web Services account ID of the key owner, the <code>alias</code> namespace, and then the key alias. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:alias/<i>ExampleAlias</i>.</p> </li> <li> <p>ARN using key ID. The ID ARN contains the <code>arn:aws:kms</code> namespace, followed by the Region of the key, the Amazon Web Services account ID of the key owner, the <code>key</code> namespace, and then the key ID. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:key/<i>abcd1234-a123-456a-a12b-a123b4cd56ef</i>.</p> </li> <li> <p>ARN using key alias. The alias ARN contains the <code>arn:aws:kms</code> namespace, followed by the Region of the key, the Amazon Web Services account ID of the key owner, the <code>alias</code> namespace, and then the key alias. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:alias/<i>ExampleAlias</i>. </p> </li> </ul> <p>Amazon Web Services parses <code>KmsKeyId</code> asynchronously, meaning that the action you call may appear to complete even though you provided an invalid identifier. This action will eventually report failure. </p> <p>The specified KMS key must exist in the Region that the AMI is being copied to.</p> <p>Amazon EBS does not support asymmetric KMS keys.</p>'
          schema:
            type: string
        - name: LicenseType
          in: query
          required: false
          description: '<p>The license type to be used for the Amazon Machine Image (AMI) after importing.</p> <p>By default, we detect the source-system operating system (OS) and apply the appropriate license. Specify <code>AWS</code> to replace the source-system license with an Amazon Web Services license, if appropriate. Specify <code>BYOL</code> to retain the source-system license, if appropriate.</p> <p>To use <code>BYOL</code>, you must have existing licenses with rights to use these licenses in a third party cloud, such as Amazon Web Services. For more information, see <a href="https://docs.aws.amazon.com/vm-import/latest/userguide/vmimport-image-import.html#prerequisites-image">Prerequisites</a> in the VM Import/Export User Guide.</p>'
          schema:
            type: string
        - name: Platform
          in: query
          required: false
          description: '<p>The operating system of the virtual machine.</p> <p>Valid values: <code>Windows</code> | <code>Linux</code> </p>'
          schema:
            type: string
        - name: RoleName
          in: query
          required: false
          description: 'The name of the role to use when not using the default role, ''vmimport''.'
          schema:
            type: string
        - name: LicenseSpecifications
          in: query
          required: false
          description: The ARNs of the license configurations.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/ImportImageLicenseConfigurationRequest'
                - xml:
                    name: item
        - name: TagSpecification
          in: query
          required: false
          description: The tags to apply to the import image task during creation.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
        - name: UsageOperation
          in: query
          required: false
          description: 'The usage operation value. For more information, see <a href="https://docs.aws.amazon.com/vm-import/latest/userguide/vmie_prereqs.html#prerequisites">Licensing options</a> in the <i>VM Import/Export User Guide</i>.'
          schema:
            type: string
        - name: BootMode
          in: query
          required: false
          description: The boot mode of the virtual machine.
          schema:
            type: string
            enum:
              - legacy-bios
              - uefi
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ImportImage
      operationId: POST_ImportImage
      description: '<p>Import single or multi-volume disk images or EBS snapshots into an Amazon Machine Image (AMI).</p> <p>For more information, see <a href="https://docs.aws.amazon.com/vm-import/latest/userguide/vmimport-image-import.html">Importing a VM as an image using VM Import/Export</a> in the <i>VM Import/Export User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ImportImageResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ImportImageRequest'
      parameters: []
  /?Action=ImportInstance&Version=2016-11-15:
    get:
      x-aws-operation-name: ImportInstance
      operationId: GET_ImportInstance
      description: '<p>Creates an import instance task using metadata from the specified disk image.</p> <p>This API action supports only single-volume VMs. To import multi-volume VMs, use <a>ImportImage</a> instead.</p> <p>This API action is not supported by the Command Line Interface (CLI). For information about using the Amazon EC2 CLI, which is deprecated, see <a href="https://awsdocs.s3.amazonaws.com/EC2/ec2-clt.pdf#UsingVirtualMachinesinAmazonEC2">Importing a VM to Amazon EC2</a> in the <i>Amazon EC2 CLI Reference</i> PDF file.</p> <p>For information about the import manifest referenced by this API action, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html">VM Import Manifest</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ImportInstanceResult'
      parameters:
        - name: Description
          in: query
          required: false
          description: A description for the instance being imported.
          schema:
            type: string
        - name: DiskImage
          in: query
          required: false
          description: The disk image.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/DiskImage'
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: LaunchSpecification
          in: query
          required: false
          description: The launch specification.
          schema:
            type: object
            properties:
              additionalInfo:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: Reserved.
              architecture:
                allOf:
                  - $ref: '#/components/schemas/ArchitectureValues'
                  - description: The architecture of the instance.
              GroupId:
                allOf:
                  - $ref: '#/components/schemas/SecurityGroupIdStringList'
                  - description: The security group IDs.
              GroupName:
                allOf:
                  - $ref: '#/components/schemas/SecurityGroupStringList'
                  - description: The security group names.
              instanceInitiatedShutdownBehavior:
                allOf:
                  - $ref: '#/components/schemas/ShutdownBehavior'
                  - description: Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).
              instanceType:
                allOf:
                  - $ref: '#/components/schemas/InstanceType'
                  - description: 'The instance type. For more information about the instance types that you can import, see <a href="https://docs.aws.amazon.com/vm-import/latest/userguide/vmie_prereqs.html#vmimport-instance-types">Instance Types</a> in the VM Import/Export User Guide.'
              monitoring:
                allOf:
                  - $ref: '#/components/schemas/Boolean'
                  - description: Indicates whether monitoring is enabled.
              placement:
                allOf:
                  - $ref: '#/components/schemas/Placement'
                  - description: The placement information for the instance.
              privateIpAddress:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: '[EC2-VPC] An available IP address from the IP address range of the subnet.'
              subnetId:
                allOf:
                  - $ref: '#/components/schemas/SubnetId'
                  - description: '[EC2-VPC] The ID of the subnet in which to launch the instance.'
              userData:
                allOf:
                  - $ref: '#/components/schemas/UserData'
                  - description: The Base64-encoded user data to make available to the instance.
            description: Describes the launch specification for VM import.
        - name: Platform
          in: query
          required: true
          description: The instance operating system.
          schema:
            type: string
            enum:
              - Windows
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ImportInstance
      operationId: POST_ImportInstance
      description: '<p>Creates an import instance task using metadata from the specified disk image.</p> <p>This API action supports only single-volume VMs. To import multi-volume VMs, use <a>ImportImage</a> instead.</p> <p>This API action is not supported by the Command Line Interface (CLI). For information about using the Amazon EC2 CLI, which is deprecated, see <a href="https://awsdocs.s3.amazonaws.com/EC2/ec2-clt.pdf#UsingVirtualMachinesinAmazonEC2">Importing a VM to Amazon EC2</a> in the <i>Amazon EC2 CLI Reference</i> PDF file.</p> <p>For information about the import manifest referenced by this API action, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html">VM Import Manifest</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ImportInstanceResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ImportInstanceRequest'
      parameters: []
  /?Action=ImportKeyPair&Version=2016-11-15:
    get:
      x-aws-operation-name: ImportKeyPair
      operationId: GET_ImportKeyPair
      description: '<p>Imports the public key from an RSA or ED25519 key pair that you created with a third-party tool. Compare this with <a>CreateKeyPair</a>, in which Amazon Web Services creates the key pair and gives the keys to you (Amazon Web Services keeps a copy of the public key). With ImportKeyPair, you create the key pair and give Amazon Web Services just the public key. The private key is never transferred between you and Amazon Web Services.</p> <p>For more information about key pairs, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Amazon EC2 key pairs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ImportKeyPairResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: KeyName
          in: query
          required: true
          description: A unique name for the key pair.
          schema:
            type: string
        - name: PublicKeyMaterial
          in: query
          required: true
          description: 'The public key. For API calls, the text must be base64-encoded. For command line tools, base64 encoding is performed for you.'
          schema:
            type: string
        - name: TagSpecification
          in: query
          required: false
          description: The tags to apply to the imported key pair.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ImportKeyPair
      operationId: POST_ImportKeyPair
      description: '<p>Imports the public key from an RSA or ED25519 key pair that you created with a third-party tool. Compare this with <a>CreateKeyPair</a>, in which Amazon Web Services creates the key pair and gives the keys to you (Amazon Web Services keeps a copy of the public key). With ImportKeyPair, you create the key pair and give Amazon Web Services just the public key. The private key is never transferred between you and Amazon Web Services.</p> <p>For more information about key pairs, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Amazon EC2 key pairs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ImportKeyPairResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ImportKeyPairRequest'
      parameters: []
  /?Action=ImportSnapshot&Version=2016-11-15:
    get:
      x-aws-operation-name: ImportSnapshot
      operationId: GET_ImportSnapshot
      description: '<p>Imports a disk into an EBS snapshot.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/vm-import/latest/userguide/vmimport-import-snapshot.html">Importing a disk as a snapshot using VM Import/Export</a> in the <i>VM Import/Export User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ImportSnapshotResult'
      parameters:
        - name: ClientData
          in: query
          required: false
          description: The client-specific data.
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/DateTime'
                  - description: The time that the disk upload starts.
            description: Describes the client-specific data.
        - name: ClientToken
          in: query
          required: false
          description: Token to enable idempotency for VM import requests.
          schema:
            type: string
        - name: Description
          in: query
          required: false
          description: The description string for the import snapshot task.
          schema:
            type: string
        - name: DiskContainer
          in: query
          required: false
          description: Information about the disk container.
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/UserBucket'
                  - description: The Amazon S3 bucket for the disk image.
            description: The disk container object for the import snapshot request.
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: Encrypted
          in: query
          required: false
          description: 'Specifies whether the destination snapshot of the imported image should be encrypted. The default KMS key for EBS is used unless you specify a non-default KMS key using <code>KmsKeyId</code>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.'
          schema:
            type: boolean
        - name: KmsKeyId
          in: query
          required: false
          description: '<p>An identifier for the symmetric KMS key to use when creating the encrypted snapshot. This parameter is only required if you want to use a non-default KMS key; if this parameter is not specified, the default KMS key for EBS is used. If a <code>KmsKeyId</code> is specified, the <code>Encrypted</code> flag must also be set. </p> <p>The KMS key identifier may be provided in any of the following formats: </p> <ul> <li> <p>Key ID</p> </li> <li> <p>Key alias. The alias ARN contains the <code>arn:aws:kms</code> namespace, followed by the Region of the key, the Amazon Web Services account ID of the key owner, the <code>alias</code> namespace, and then the key alias. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:alias/<i>ExampleAlias</i>.</p> </li> <li> <p>ARN using key ID. The ID ARN contains the <code>arn:aws:kms</code> namespace, followed by the Region of the key, the Amazon Web Services account ID of the key owner, the <code>key</code> namespace, and then the key ID. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:key/<i>abcd1234-a123-456a-a12b-a123b4cd56ef</i>.</p> </li> <li> <p>ARN using key alias. The alias ARN contains the <code>arn:aws:kms</code> namespace, followed by the Region of the key, the Amazon Web Services account ID of the key owner, the <code>alias</code> namespace, and then the key alias. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:alias/<i>ExampleAlias</i>. </p> </li> </ul> <p>Amazon Web Services parses <code>KmsKeyId</code> asynchronously, meaning that the action you call may appear to complete even though you provided an invalid identifier. This action will eventually report failure. </p> <p>The specified KMS key must exist in the Region that the snapshot is being copied to.</p> <p>Amazon EBS does not support asymmetric KMS keys.</p>'
          schema:
            type: string
        - name: RoleName
          in: query
          required: false
          description: 'The name of the role to use when not using the default role, ''vmimport''.'
          schema:
            type: string
        - name: TagSpecification
          in: query
          required: false
          description: The tags to apply to the import snapshot task during creation.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ImportSnapshot
      operationId: POST_ImportSnapshot
      description: '<p>Imports a disk into an EBS snapshot.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/vm-import/latest/userguide/vmimport-import-snapshot.html">Importing a disk as a snapshot using VM Import/Export</a> in the <i>VM Import/Export User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ImportSnapshotResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ImportSnapshotRequest'
      parameters: []
  /?Action=ImportVolume&Version=2016-11-15:
    get:
      x-aws-operation-name: ImportVolume
      operationId: GET_ImportVolume
      description: '<p>Creates an import volume task using metadata from the specified disk image.</p> <p>This API action supports only single-volume VMs. To import multi-volume VMs, use <a>ImportImage</a> instead. To import a disk to a snapshot, use <a>ImportSnapshot</a> instead.</p> <p>This API action is not supported by the Command Line Interface (CLI). For information about using the Amazon EC2 CLI, which is deprecated, see <a href="https://awsdocs.s3.amazonaws.com/EC2/ec2-clt.pdf#importing-your-volumes-into-amazon-ebs">Importing Disks to Amazon EBS</a> in the <i>Amazon EC2 CLI Reference</i> PDF file.</p> <p>For information about the import manifest referenced by this API action, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html">VM Import Manifest</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ImportVolumeResult'
      parameters:
        - name: AvailabilityZone
          in: query
          required: true
          description: The Availability Zone for the resulting EBS volume.
          schema:
            type: string
        - name: Description
          in: query
          required: false
          description: A description of the volume.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: Image
          in: query
          required: true
          description: The disk image.
          schema:
            type: object
            required:
              - Bytes
              - Format
              - ImportManifestUrl
            properties:
              bytes:
                allOf:
                  - $ref: '#/components/schemas/Long'
                  - description: 'The size of the disk image, in GiB.'
              format:
                allOf:
                  - $ref: '#/components/schemas/DiskImageFormat'
                  - description: The disk image format.
              importManifestUrl:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: '<p>A presigned URL for the import manifest stored in Amazon S3 and presented here as an Amazon S3 presigned URL. For information about creating a presigned URL for an Amazon S3 object, read the "Query String Request Authentication Alternative" section of the <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html">Authenticating REST Requests</a> topic in the <i>Amazon Simple Storage Service Developer Guide</i>.</p> <p>For information about the import manifest referenced by this API action, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html">VM Import Manifest</a>.</p>'
            description: Describes a disk image.
        - name: Volume
          in: query
          required: true
          description: The volume size.
          schema:
            type: object
            required:
              - Size
            properties:
              size:
                allOf:
                  - $ref: '#/components/schemas/Long'
                  - description: 'The size of the volume, in GiB.'
            description: Describes an EBS volume.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ImportVolume
      operationId: POST_ImportVolume
      description: '<p>Creates an import volume task using metadata from the specified disk image.</p> <p>This API action supports only single-volume VMs. To import multi-volume VMs, use <a>ImportImage</a> instead. To import a disk to a snapshot, use <a>ImportSnapshot</a> instead.</p> <p>This API action is not supported by the Command Line Interface (CLI). For information about using the Amazon EC2 CLI, which is deprecated, see <a href="https://awsdocs.s3.amazonaws.com/EC2/ec2-clt.pdf#importing-your-volumes-into-amazon-ebs">Importing Disks to Amazon EBS</a> in the <i>Amazon EC2 CLI Reference</i> PDF file.</p> <p>For information about the import manifest referenced by this API action, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html">VM Import Manifest</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ImportVolumeResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ImportVolumeRequest'
      parameters: []
  /?Action=ListImagesInRecycleBin&Version=2016-11-15:
    get:
      x-aws-operation-name: ListImagesInRecycleBin
      operationId: GET_ListImagesInRecycleBin
      description: 'Lists one or more AMIs that are currently in the Recycle Bin. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/recycle-bin.html">Recycle Bin</a> in the Amazon Elastic Compute Cloud User Guide.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListImagesInRecycleBinResult'
      parameters:
        - name: ImageId
          in: query
          required: false
          description: The IDs of the AMIs to list. Omit this parameter to list all of the AMIs that are in the Recycle Bin. You can specify up to 20 IDs in a single request.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/ImageId'
                - xml:
                    name: ImageId
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: MaxResults
          in: query
          required: false
          description: '<p>The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p> <p>If you do not specify a value for <i>MaxResults</i>, the request returns 1,000 items per page by default. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Query-Requests.html#api-pagination"> Pagination</a>.</p>'
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ListImagesInRecycleBin
      operationId: POST_ListImagesInRecycleBin
      description: 'Lists one or more AMIs that are currently in the Recycle Bin. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/recycle-bin.html">Recycle Bin</a> in the Amazon Elastic Compute Cloud User Guide.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListImagesInRecycleBinResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListImagesInRecycleBinRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=ListSnapshotsInRecycleBin&Version=2016-11-15:
    get:
      x-aws-operation-name: ListSnapshotsInRecycleBin
      operationId: GET_ListSnapshotsInRecycleBin
      description: Lists one or more snapshots that are currently in the Recycle Bin.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListSnapshotsInRecycleBinResult'
      parameters:
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 5
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: SnapshotId
          in: query
          required: false
          description: The IDs of the snapshots to list. Omit this parameter to list all of the snapshots that are in the Recycle Bin.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/SnapshotId'
                - xml:
                    name: SnapshotId
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ListSnapshotsInRecycleBin
      operationId: POST_ListSnapshotsInRecycleBin
      description: Lists one or more snapshots that are currently in the Recycle Bin.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListSnapshotsInRecycleBinResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListSnapshotsInRecycleBinRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=ModifyAddressAttribute&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifyAddressAttribute
      operationId: GET_ModifyAddressAttribute
      description: 'Modifies an attribute of the specified Elastic IP address. For requirements, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html#Using_Elastic_Addressing_Reverse_DNS">Using reverse DNS for email applications</a>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyAddressAttributeResult'
      parameters:
        - name: AllocationId
          in: query
          required: true
          description: '[EC2-VPC] The allocation ID.'
          schema:
            type: string
        - name: DomainName
          in: query
          required: false
          description: The domain name to modify for the IP address.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyAddressAttribute
      operationId: POST_ModifyAddressAttribute
      description: 'Modifies an attribute of the specified Elastic IP address. For requirements, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html#Using_Elastic_Addressing_Reverse_DNS">Using reverse DNS for email applications</a>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyAddressAttributeResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyAddressAttributeRequest'
      parameters: []
  /?Action=ModifyAvailabilityZoneGroup&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifyAvailabilityZoneGroup
      operationId: GET_ModifyAvailabilityZoneGroup
      description: '<p>Changes the opt-in status of the Local Zone and Wavelength Zone group for your account.</p> <p>Use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeAvailabilityZones.html"> DescribeAvailabilityZones</a> to view the value for <code>GroupName</code>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyAvailabilityZoneGroupResult'
      parameters:
        - name: GroupName
          in: query
          required: true
          description: 'The name of the Availability Zone group, Local Zone group, or Wavelength Zone group.'
          schema:
            type: string
        - name: OptInStatus
          in: query
          required: true
          description: 'Indicates whether you are opted in to the Local Zone group or Wavelength Zone group. The only valid value is <code>opted-in</code>. You must contact <a href="https://console.aws.amazon.com/support/home#/case/create%3FissueType=customer-service%26serviceCode=general-info%26getting-started%26categoryCode=using-aws%26services">Amazon Web Services Support</a> to opt out of a Local Zone or Wavelength Zone group.'
          schema:
            type: string
            enum:
              - opted-in
              - not-opted-in
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyAvailabilityZoneGroup
      operationId: POST_ModifyAvailabilityZoneGroup
      description: '<p>Changes the opt-in status of the Local Zone and Wavelength Zone group for your account.</p> <p>Use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeAvailabilityZones.html"> DescribeAvailabilityZones</a> to view the value for <code>GroupName</code>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyAvailabilityZoneGroupResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyAvailabilityZoneGroupRequest'
      parameters: []
  /?Action=ModifyCapacityReservation&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifyCapacityReservation
      operationId: GET_ModifyCapacityReservation
      description: 'Modifies a Capacity Reservation''s capacity and the conditions under which it is to be released. You cannot change a Capacity Reservation''s instance type, EBS optimization, instance store settings, platform, Availability Zone, or instance eligibility. If you need to modify any of these attributes, we recommend that you cancel the Capacity Reservation, and then create a new one with the required attributes.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyCapacityReservationResult'
      parameters:
        - name: CapacityReservationId
          in: query
          required: true
          description: The ID of the Capacity Reservation.
          schema:
            type: string
        - name: InstanceCount
          in: query
          required: false
          description: The number of instances for which to reserve capacity. The number of instances can't be increased or decreased by more than <code>1000</code> in a single request.
          schema:
            type: integer
        - name: EndDate
          in: query
          required: false
          description: '<p>The date and time at which the Capacity Reservation expires. When a Capacity Reservation expires, the reserved capacity is released and you can no longer launch instances into it. The Capacity Reservation''s state changes to <code>expired</code> when it reaches its end date and time.</p> <p>The Capacity Reservation is cancelled within an hour from the specified time. For example, if you specify 5/31/2019, 13:30:55, the Capacity Reservation is guaranteed to end between 13:30:55 and 14:30:55 on 5/31/2019.</p> <p>You must provide an <code>EndDate</code> value if <code>EndDateType</code> is <code>limited</code>. Omit <code>EndDate</code> if <code>EndDateType</code> is <code>unlimited</code>.</p>'
          schema:
            type: string
            format: date-time
        - name: EndDateType
          in: query
          required: false
          description: '<p>Indicates the way in which the Capacity Reservation ends. A Capacity Reservation can have one of the following end types:</p> <ul> <li> <p> <code>unlimited</code> - The Capacity Reservation remains active until you explicitly cancel it. Do not provide an <code>EndDate</code> value if <code>EndDateType</code> is <code>unlimited</code>.</p> </li> <li> <p> <code>limited</code> - The Capacity Reservation expires automatically at a specified date and time. You must provide an <code>EndDate</code> value if <code>EndDateType</code> is <code>limited</code>.</p> </li> </ul>'
          schema:
            type: string
            enum:
              - unlimited
              - limited
        - name: Accept
          in: query
          required: false
          description: Reserved. Capacity Reservations you have created are accepted by default.
          schema:
            type: boolean
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: AdditionalInfo
          in: query
          required: false
          description: Reserved for future use.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyCapacityReservation
      operationId: POST_ModifyCapacityReservation
      description: 'Modifies a Capacity Reservation''s capacity and the conditions under which it is to be released. You cannot change a Capacity Reservation''s instance type, EBS optimization, instance store settings, platform, Availability Zone, or instance eligibility. If you need to modify any of these attributes, we recommend that you cancel the Capacity Reservation, and then create a new one with the required attributes.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyCapacityReservationResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyCapacityReservationRequest'
      parameters: []
  /?Action=ModifyCapacityReservationFleet&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifyCapacityReservationFleet
      operationId: GET_ModifyCapacityReservationFleet
      description: '<p>Modifies a Capacity Reservation Fleet.</p> <p>When you modify the total target capacity of a Capacity Reservation Fleet, the Fleet automatically creates new Capacity Reservations, or modifies or cancels existing Capacity Reservations in the Fleet to meet the new total target capacity. When you modify the end date for the Fleet, the end dates for all of the individual Capacity Reservations in the Fleet are updated accordingly.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyCapacityReservationFleetResult'
      parameters:
        - name: CapacityReservationFleetId
          in: query
          required: true
          description: The ID of the Capacity Reservation Fleet to modify.
          schema:
            type: string
        - name: TotalTargetCapacity
          in: query
          required: false
          description: 'The total number of capacity units to be reserved by the Capacity Reservation Fleet. This value, together with the instance type weights that you assign to each instance type used by the Fleet determine the number of instances for which the Fleet reserves capacity. Both values are based on units that make sense for your workload. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/crfleet-concepts.html#target-capacity">Total target capacity</a> in the Amazon EC2 User Guide.'
          schema:
            type: integer
        - name: EndDate
          in: query
          required: false
          description: '<p>The date and time at which the Capacity Reservation Fleet expires. When the Capacity Reservation Fleet expires, its state changes to <code>expired</code> and all of the Capacity Reservations in the Fleet expire.</p> <p>The Capacity Reservation Fleet expires within an hour after the specified time. For example, if you specify <code>5/31/2019</code>, <code>13:30:55</code>, the Capacity Reservation Fleet is guaranteed to expire between <code>13:30:55</code> and <code>14:30:55</code> on <code>5/31/2019</code>.</p> <p>You can''t specify <b>EndDate</b> and <b> RemoveEndDate</b> in the same request.</p>'
          schema:
            type: string
            format: date-time
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: RemoveEndDate
          in: query
          required: false
          description: '<p>Indicates whether to remove the end date from the Capacity Reservation Fleet. If you remove the end date, the Capacity Reservation Fleet does not expire and it remains active until you explicitly cancel it using the <b>CancelCapacityReservationFleet</b> action.</p> <p>You can''t specify <b>RemoveEndDate</b> and <b> EndDate</b> in the same request.</p>'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyCapacityReservationFleet
      operationId: POST_ModifyCapacityReservationFleet
      description: '<p>Modifies a Capacity Reservation Fleet.</p> <p>When you modify the total target capacity of a Capacity Reservation Fleet, the Fleet automatically creates new Capacity Reservations, or modifies or cancels existing Capacity Reservations in the Fleet to meet the new total target capacity. When you modify the end date for the Fleet, the end dates for all of the individual Capacity Reservations in the Fleet are updated accordingly.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyCapacityReservationFleetResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyCapacityReservationFleetRequest'
      parameters: []
  /?Action=ModifyClientVpnEndpoint&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifyClientVpnEndpoint
      operationId: GET_ModifyClientVpnEndpoint
      description: Modifies the specified Client VPN endpoint. Modifying the DNS server resets existing client connections.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyClientVpnEndpointResult'
      parameters:
        - name: ClientVpnEndpointId
          in: query
          required: true
          description: The ID of the Client VPN endpoint to modify.
          schema:
            type: string
        - name: ServerCertificateArn
          in: query
          required: false
          description: The ARN of the server certificate to be used. The server certificate must be provisioned in Certificate Manager (ACM).
          schema:
            type: string
        - name: ConnectionLogOptions
          in: query
          required: false
          description: '<p>Information about the client connection logging options.</p> <p>If you enable client connection logging, data about client connections is sent to a Cloudwatch Logs log stream. The following information is logged:</p> <ul> <li> <p>Client connection requests</p> </li> <li> <p>Client connection results (successful and unsuccessful)</p> </li> <li> <p>Reasons for unsuccessful client connection requests</p> </li> <li> <p>Client connection termination time</p> </li> </ul>'
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: The name of the CloudWatch Logs log stream to which the connection data is published.
            description: Describes the client connection logging options for the Client VPN endpoint.
        - name: DnsServers
          in: query
          required: false
          description: Information about the DNS servers to be used by Client VPN connections. A Client VPN endpoint can have up to two DNS servers.
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/Boolean'
                  - description: Indicates whether DNS servers should be used. Specify <code>False</code> to delete the existing DNS servers.
            description: Information about the DNS server to be used.
        - name: VpnPort
          in: query
          required: false
          description: '<p>The port number to assign to the Client VPN endpoint for TCP and UDP traffic.</p> <p>Valid Values: <code>443</code> | <code>1194</code> </p> <p>Default Value: <code>443</code> </p>'
          schema:
            type: integer
        - name: Description
          in: query
          required: false
          description: A brief description of the Client VPN endpoint.
          schema:
            type: string
        - name: SplitTunnel
          in: query
          required: false
          description: '<p>Indicates whether the VPN is split-tunnel.</p> <p>For information about split-tunnel VPN endpoints, see <a href="https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/split-tunnel-vpn.html">Split-tunnel Client VPN endpoint</a> in the <i>Client VPN Administrator Guide</i>.</p>'
          schema:
            type: boolean
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: SecurityGroupId
          in: query
          required: false
          description: The IDs of one or more security groups to apply to the target network.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/SecurityGroupId'
                - xml:
                    name: item
        - name: VpcId
          in: query
          required: false
          description: The ID of the VPC to associate with the Client VPN endpoint.
          schema:
            type: string
        - name: SelfServicePortal
          in: query
          required: false
          description: Specify whether to enable the self-service portal for the Client VPN endpoint.
          schema:
            type: string
            enum:
              - enabled
              - disabled
        - name: ClientConnectOptions
          in: query
          required: false
          description: The options for managing connection authorization for new client connections.
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: The Amazon Resource Name (ARN) of the Lambda function used for connection authorization.
            description: The options for managing connection authorization for new client connections.
        - name: SessionTimeoutHours
          in: query
          required: false
          description: '<p>The maximum VPN session duration time in hours.</p> <p>Valid values: <code>8 | 10 | 12 | 24</code> </p> <p>Default value: <code>24</code> </p>'
          schema:
            type: integer
        - name: ClientLoginBannerOptions
          in: query
          required: false
          description: Options for enabling a customizable text banner that will be displayed on Amazon Web Services provided clients when a VPN session is established.
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: Customizable text that will be displayed in a banner on Amazon Web Services provided clients when a VPN session is established. UTF-8 encoded characters only. Maximum of 1400 characters.
            description: Options for enabling a customizable text banner that will be displayed on Amazon Web Services provided clients when a VPN session is established.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyClientVpnEndpoint
      operationId: POST_ModifyClientVpnEndpoint
      description: Modifies the specified Client VPN endpoint. Modifying the DNS server resets existing client connections.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyClientVpnEndpointResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyClientVpnEndpointRequest'
      parameters: []
  /?Action=ModifyDefaultCreditSpecification&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifyDefaultCreditSpecification
      operationId: GET_ModifyDefaultCreditSpecification
      description: '<p>Modifies the default credit option for CPU usage of burstable performance instances. The default credit option is set at the account level per Amazon Web Services Region, and is specified per instance family. All new burstable performance instances in the account launch using the default credit option.</p> <p> <code>ModifyDefaultCreditSpecification</code> is an asynchronous operation, which works at an Amazon Web Services Region level and modifies the credit option for each Availability Zone. All zones in a Region are updated within five minutes. But if instances are launched during this operation, they might not get the new credit option until the zone is updated. To verify whether the update has occurred, you can call <code>GetDefaultCreditSpecification</code> and check <code>DefaultCreditSpecification</code> for updates.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html">Burstable performance instances</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyDefaultCreditSpecificationResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: InstanceFamily
          in: query
          required: true
          description: The instance family.
          schema:
            type: string
            enum:
              - t2
              - t3
              - t3a
              - t4g
        - name: CpuCredits
          in: query
          required: true
          description: '<p>The credit option for CPU usage of the instance family.</p> <p>Valid Values: <code>standard</code> | <code>unlimited</code> </p>'
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyDefaultCreditSpecification
      operationId: POST_ModifyDefaultCreditSpecification
      description: '<p>Modifies the default credit option for CPU usage of burstable performance instances. The default credit option is set at the account level per Amazon Web Services Region, and is specified per instance family. All new burstable performance instances in the account launch using the default credit option.</p> <p> <code>ModifyDefaultCreditSpecification</code> is an asynchronous operation, which works at an Amazon Web Services Region level and modifies the credit option for each Availability Zone. All zones in a Region are updated within five minutes. But if instances are launched during this operation, they might not get the new credit option until the zone is updated. To verify whether the update has occurred, you can call <code>GetDefaultCreditSpecification</code> and check <code>DefaultCreditSpecification</code> for updates.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html">Burstable performance instances</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyDefaultCreditSpecificationResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyDefaultCreditSpecificationRequest'
      parameters: []
  /?Action=ModifyEbsDefaultKmsKeyId&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifyEbsDefaultKmsKeyId
      operationId: GET_ModifyEbsDefaultKmsKeyId
      description: '<p>Changes the default KMS key for EBS encryption by default for your account in this Region.</p> <p>Amazon Web Services creates a unique Amazon Web Services managed KMS key in each Region for use with encryption by default. If you change the default KMS key to a symmetric customer managed KMS key, it is used instead of the Amazon Web Services managed KMS key. To reset the default KMS key to the Amazon Web Services managed KMS key for EBS, use <a>ResetEbsDefaultKmsKeyId</a>. Amazon EBS does not support asymmetric KMS keys.</p> <p>If you delete or disable the customer managed KMS key that you specified for use with encryption by default, your instances will fail to launch.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyEbsDefaultKmsKeyIdResult'
      parameters:
        - name: KmsKeyId
          in: query
          required: true
          description: '<p>The identifier of the Key Management Service (KMS) KMS key to use for Amazon EBS encryption. If this parameter is not specified, your KMS key for Amazon EBS is used. If <code>KmsKeyId</code> is specified, the encrypted state must be <code>true</code>.</p> <p>You can specify the KMS key using any of the following:</p> <ul> <li> <p>Key ID. For example, 1234abcd-12ab-34cd-56ef-1234567890ab.</p> </li> <li> <p>Key alias. For example, alias/ExampleAlias.</p> </li> <li> <p>Key ARN. For example, arn:aws:kms:us-east-1:012345678910:key/1234abcd-12ab-34cd-56ef-1234567890ab.</p> </li> <li> <p>Alias ARN. For example, arn:aws:kms:us-east-1:012345678910:alias/ExampleAlias.</p> </li> </ul> <p>Amazon Web Services authenticates the KMS key asynchronously. Therefore, if you specify an ID, alias, or ARN that is not valid, the action can appear to complete, but eventually fails.</p> <p>Amazon EBS does not support asymmetric KMS keys.</p>'
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyEbsDefaultKmsKeyId
      operationId: POST_ModifyEbsDefaultKmsKeyId
      description: '<p>Changes the default KMS key for EBS encryption by default for your account in this Region.</p> <p>Amazon Web Services creates a unique Amazon Web Services managed KMS key in each Region for use with encryption by default. If you change the default KMS key to a symmetric customer managed KMS key, it is used instead of the Amazon Web Services managed KMS key. To reset the default KMS key to the Amazon Web Services managed KMS key for EBS, use <a>ResetEbsDefaultKmsKeyId</a>. Amazon EBS does not support asymmetric KMS keys.</p> <p>If you delete or disable the customer managed KMS key that you specified for use with encryption by default, your instances will fail to launch.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyEbsDefaultKmsKeyIdResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyEbsDefaultKmsKeyIdRequest'
      parameters: []
  /?Action=ModifyFleet&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifyFleet
      operationId: GET_ModifyFleet
      description: '<p>Modifies the specified EC2 Fleet.</p> <p>You can only modify an EC2 Fleet request of type <code>maintain</code>.</p> <p>While the EC2 Fleet is being modified, it is in the <code>modifying</code> state.</p> <p>To scale up your EC2 Fleet, increase its target capacity. The EC2 Fleet launches the additional Spot Instances according to the allocation strategy for the EC2 Fleet request. If the allocation strategy is <code>lowest-price</code>, the EC2 Fleet launches instances using the Spot Instance pool with the lowest price. If the allocation strategy is <code>diversified</code>, the EC2 Fleet distributes the instances across the Spot Instance pools. If the allocation strategy is <code>capacity-optimized</code>, EC2 Fleet launches instances from Spot Instance pools with optimal capacity for the number of instances that are launching.</p> <p>To scale down your EC2 Fleet, decrease its target capacity. First, the EC2 Fleet cancels any open requests that exceed the new target capacity. You can request that the EC2 Fleet terminate Spot Instances until the size of the fleet no longer exceeds the new target capacity. If the allocation strategy is <code>lowest-price</code>, the EC2 Fleet terminates the instances with the highest price per unit. If the allocation strategy is <code>capacity-optimized</code>, the EC2 Fleet terminates the instances in the Spot Instance pools that have the least available Spot Instance capacity. If the allocation strategy is <code>diversified</code>, the EC2 Fleet terminates instances across the Spot Instance pools. Alternatively, you can request that the EC2 Fleet keep the fleet at its current size, but not replace any Spot Instances that are interrupted or that you terminate manually.</p> <p>If you are finished with your EC2 Fleet for now, but will use it again later, you can set the target capacity to 0.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyFleetResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: ExcessCapacityTerminationPolicy
          in: query
          required: false
          description: Indicates whether running instances should be terminated if the total target capacity of the EC2 Fleet is decreased below the current size of the EC2 Fleet.
          schema:
            type: string
            enum:
              - no-termination
              - termination
        - name: LaunchTemplateConfig
          in: query
          required: false
          description: The launch template and overrides.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/FleetLaunchTemplateConfigRequest'
                - xml:
                    name: item
            minItems: 0
            maxItems: 50
        - name: FleetId
          in: query
          required: true
          description: The ID of the EC2 Fleet.
          schema:
            type: string
        - name: TargetCapacitySpecification
          in: query
          required: false
          description: The size of the EC2 Fleet.
          schema:
            type: object
            required:
              - TotalTargetCapacity
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/TargetCapacityUnitType'
                  - description: '<p>The unit for the target capacity.</p> <p>Default: <code>units</code> (translates to number of instances)</p>'
            description: '<p>The number of units to request. You can choose to set the target capacity as the number of instances. Or you can set the target capacity to a performance characteristic that is important to your application workload, such as vCPUs, memory, or I/O. If the request type is <code>maintain</code>, you can specify a target capacity of 0 and add capacity later.</p> <p>You can use the On-Demand Instance <code>MaxTotalPrice</code> parameter, the Spot Instance <code>MaxTotalPrice</code> parameter, or both parameters to ensure that your fleet cost does not exceed your budget. If you set a maximum price per hour for the On-Demand Instances and Spot Instances in your request, EC2 Fleet will launch instances until it reaches the maximum amount that you''re willing to pay. When the maximum amount you''re willing to pay is reached, the fleet stops launching instances even if it hasn’t met the target capacity. The <code>MaxTotalPrice</code> parameters are located in <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_OnDemandOptionsRequest">OnDemandOptionsRequest</a> and <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SpotOptionsRequest">SpotOptionsRequest</a>.</p>'
        - name: Context
          in: query
          required: false
          description: Reserved.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyFleet
      operationId: POST_ModifyFleet
      description: '<p>Modifies the specified EC2 Fleet.</p> <p>You can only modify an EC2 Fleet request of type <code>maintain</code>.</p> <p>While the EC2 Fleet is being modified, it is in the <code>modifying</code> state.</p> <p>To scale up your EC2 Fleet, increase its target capacity. The EC2 Fleet launches the additional Spot Instances according to the allocation strategy for the EC2 Fleet request. If the allocation strategy is <code>lowest-price</code>, the EC2 Fleet launches instances using the Spot Instance pool with the lowest price. If the allocation strategy is <code>diversified</code>, the EC2 Fleet distributes the instances across the Spot Instance pools. If the allocation strategy is <code>capacity-optimized</code>, EC2 Fleet launches instances from Spot Instance pools with optimal capacity for the number of instances that are launching.</p> <p>To scale down your EC2 Fleet, decrease its target capacity. First, the EC2 Fleet cancels any open requests that exceed the new target capacity. You can request that the EC2 Fleet terminate Spot Instances until the size of the fleet no longer exceeds the new target capacity. If the allocation strategy is <code>lowest-price</code>, the EC2 Fleet terminates the instances with the highest price per unit. If the allocation strategy is <code>capacity-optimized</code>, the EC2 Fleet terminates the instances in the Spot Instance pools that have the least available Spot Instance capacity. If the allocation strategy is <code>diversified</code>, the EC2 Fleet terminates instances across the Spot Instance pools. Alternatively, you can request that the EC2 Fleet keep the fleet at its current size, but not replace any Spot Instances that are interrupted or that you terminate manually.</p> <p>If you are finished with your EC2 Fleet for now, but will use it again later, you can set the target capacity to 0.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyFleetResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyFleetRequest'
      parameters: []
  /?Action=ModifyFpgaImageAttribute&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifyFpgaImageAttribute
      operationId: GET_ModifyFpgaImageAttribute
      description: Modifies the specified attribute of the specified Amazon FPGA Image (AFI).
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyFpgaImageAttributeResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: FpgaImageId
          in: query
          required: true
          description: The ID of the AFI.
          schema:
            type: string
        - name: Attribute
          in: query
          required: false
          description: The name of the attribute.
          schema:
            type: string
            enum:
              - description
              - name
              - loadPermission
              - productCodes
        - name: OperationType
          in: query
          required: false
          description: The operation type.
          schema:
            type: string
            enum:
              - add
              - remove
        - name: UserId
          in: query
          required: false
          description: The Amazon Web Services account IDs. This parameter is valid only when modifying the <code>loadPermission</code> attribute.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: UserId
        - name: UserGroup
          in: query
          required: false
          description: The user groups. This parameter is valid only when modifying the <code>loadPermission</code> attribute.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: UserGroup
        - name: ProductCode
          in: query
          required: false
          description: 'The product codes. After you add a product code to an AFI, it can''t be removed. This parameter is valid only when modifying the <code>productCodes</code> attribute.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: ProductCode
        - name: LoadPermission
          in: query
          required: false
          description: The load permission for the AFI.
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/LoadPermissionListRequest'
                  - description: The load permissions to remove.
            description: Describes modifications to the load permissions of an Amazon FPGA image (AFI).
        - name: Description
          in: query
          required: false
          description: A description for the AFI.
          schema:
            type: string
        - name: Name
          in: query
          required: false
          description: A name for the AFI.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyFpgaImageAttribute
      operationId: POST_ModifyFpgaImageAttribute
      description: Modifies the specified attribute of the specified Amazon FPGA Image (AFI).
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyFpgaImageAttributeResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyFpgaImageAttributeRequest'
      parameters: []
  /?Action=ModifyHosts&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifyHosts
      operationId: GET_ModifyHosts
      description: '<p>Modify the auto-placement setting of a Dedicated Host. When auto-placement is enabled, any instances that you launch with a tenancy of <code>host</code> but without a specific host ID are placed onto any available Dedicated Host in your account that has auto-placement enabled. When auto-placement is disabled, you need to provide a host ID to have the instance launch onto a specific host. If no host ID is provided, the instance is launched onto a suitable host with auto-placement enabled.</p> <p>You can also use this API action to modify a Dedicated Host to support either multiple instance types in an instance family, or to support a specific instance type only.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyHostsResult'
      parameters:
        - name: AutoPlacement
          in: query
          required: false
          description: Specify whether to enable or disable auto-placement.
          schema:
            type: string
            enum:
              - 'on'
              - 'off'
        - name: HostId
          in: query
          required: true
          description: The IDs of the Dedicated Hosts to modify.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/DedicatedHostId'
                - xml:
                    name: item
        - name: HostRecovery
          in: query
          required: false
          description: 'Indicates whether to enable or disable host recovery for the Dedicated Host. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-recovery.html"> Host recovery</a> in the <i>Amazon EC2 User Guide</i>.'
          schema:
            type: string
            enum:
              - 'on'
              - 'off'
        - name: InstanceType
          in: query
          required: false
          description: '<p>Specifies the instance type to be supported by the Dedicated Host. Specify this parameter to modify a Dedicated Host to support only a specific instance type.</p> <p>If you want to modify a Dedicated Host to support multiple instance types in its current instance family, omit this parameter and specify <b>InstanceFamily</b> instead. You cannot specify <b>InstanceType</b> and <b>InstanceFamily</b> in the same request.</p>'
          schema:
            type: string
        - name: InstanceFamily
          in: query
          required: false
          description: '<p>Specifies the instance family to be supported by the Dedicated Host. Specify this parameter to modify a Dedicated Host to support multiple instance types within its current instance family.</p> <p>If you want to modify a Dedicated Host to support a specific instance type only, omit this parameter and specify <b>InstanceType</b> instead. You cannot specify <b>InstanceFamily</b> and <b>InstanceType</b> in the same request.</p>'
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyHosts
      operationId: POST_ModifyHosts
      description: '<p>Modify the auto-placement setting of a Dedicated Host. When auto-placement is enabled, any instances that you launch with a tenancy of <code>host</code> but without a specific host ID are placed onto any available Dedicated Host in your account that has auto-placement enabled. When auto-placement is disabled, you need to provide a host ID to have the instance launch onto a specific host. If no host ID is provided, the instance is launched onto a suitable host with auto-placement enabled.</p> <p>You can also use this API action to modify a Dedicated Host to support either multiple instance types in an instance family, or to support a specific instance type only.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyHostsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyHostsRequest'
      parameters: []
  /?Action=ModifyIdFormat&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifyIdFormat
      operationId: GET_ModifyIdFormat
      description: '<p>Modifies the ID format for the specified resource on a per-Region basis. You can specify that resources should receive longer IDs (17-character IDs) when they are created.</p> <p>This request can only be used to modify longer ID settings for resource types that are within the opt-in period. Resources currently in their opt-in period include: <code>bundle</code> | <code>conversion-task</code> | <code>customer-gateway</code> | <code>dhcp-options</code> | <code>elastic-ip-allocation</code> | <code>elastic-ip-association</code> | <code>export-task</code> | <code>flow-log</code> | <code>image</code> | <code>import-task</code> | <code>internet-gateway</code> | <code>network-acl</code> | <code>network-acl-association</code> | <code>network-interface</code> | <code>network-interface-attachment</code> | <code>prefix-list</code> | <code>route-table</code> | <code>route-table-association</code> | <code>security-group</code> | <code>subnet</code> | <code>subnet-cidr-block-association</code> | <code>vpc</code> | <code>vpc-cidr-block-association</code> | <code>vpc-endpoint</code> | <code>vpc-peering-connection</code> | <code>vpn-connection</code> | <code>vpn-gateway</code>.</p> <p>This setting applies to the IAM user who makes the request; it does not apply to the entire Amazon Web Services account. By default, an IAM user defaults to the same settings as the root user. If you''re using this action as the root user, then these settings apply to the entire account, unless an IAM user explicitly overrides these settings for themselves. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/resource-ids.html">Resource IDs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>Resources created with longer IDs are visible to all IAM roles and users, regardless of these settings and provided that they have permission to use the relevant <code>Describe</code> command for the resource type.</p>'
      responses:
        '200':
          description: Success
      parameters:
        - name: Resource
          in: query
          required: true
          description: '<p>The type of resource: <code>bundle</code> | <code>conversion-task</code> | <code>customer-gateway</code> | <code>dhcp-options</code> | <code>elastic-ip-allocation</code> | <code>elastic-ip-association</code> | <code>export-task</code> | <code>flow-log</code> | <code>image</code> | <code>import-task</code> | <code>internet-gateway</code> | <code>network-acl</code> | <code>network-acl-association</code> | <code>network-interface</code> | <code>network-interface-attachment</code> | <code>prefix-list</code> | <code>route-table</code> | <code>route-table-association</code> | <code>security-group</code> | <code>subnet</code> | <code>subnet-cidr-block-association</code> | <code>vpc</code> | <code>vpc-cidr-block-association</code> | <code>vpc-endpoint</code> | <code>vpc-peering-connection</code> | <code>vpn-connection</code> | <code>vpn-gateway</code>.</p> <p>Alternatively, use the <code>all-current</code> option to include all resource types that are currently within their opt-in period for longer IDs.</p>'
          schema:
            type: string
        - name: UseLongIds
          in: query
          required: true
          description: Indicate whether the resource should use longer IDs (17-character IDs).
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyIdFormat
      operationId: POST_ModifyIdFormat
      description: '<p>Modifies the ID format for the specified resource on a per-Region basis. You can specify that resources should receive longer IDs (17-character IDs) when they are created.</p> <p>This request can only be used to modify longer ID settings for resource types that are within the opt-in period. Resources currently in their opt-in period include: <code>bundle</code> | <code>conversion-task</code> | <code>customer-gateway</code> | <code>dhcp-options</code> | <code>elastic-ip-allocation</code> | <code>elastic-ip-association</code> | <code>export-task</code> | <code>flow-log</code> | <code>image</code> | <code>import-task</code> | <code>internet-gateway</code> | <code>network-acl</code> | <code>network-acl-association</code> | <code>network-interface</code> | <code>network-interface-attachment</code> | <code>prefix-list</code> | <code>route-table</code> | <code>route-table-association</code> | <code>security-group</code> | <code>subnet</code> | <code>subnet-cidr-block-association</code> | <code>vpc</code> | <code>vpc-cidr-block-association</code> | <code>vpc-endpoint</code> | <code>vpc-peering-connection</code> | <code>vpn-connection</code> | <code>vpn-gateway</code>.</p> <p>This setting applies to the IAM user who makes the request; it does not apply to the entire Amazon Web Services account. By default, an IAM user defaults to the same settings as the root user. If you''re using this action as the root user, then these settings apply to the entire account, unless an IAM user explicitly overrides these settings for themselves. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/resource-ids.html">Resource IDs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>Resources created with longer IDs are visible to all IAM roles and users, regardless of these settings and provided that they have permission to use the relevant <code>Describe</code> command for the resource type.</p>'
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyIdFormatRequest'
      parameters: []
  /?Action=ModifyIdentityIdFormat&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifyIdentityIdFormat
      operationId: GET_ModifyIdentityIdFormat
      description: '<p>Modifies the ID format of a resource for a specified IAM user, IAM role, or the root user for an account; or all IAM users, IAM roles, and the root user for an account. You can specify that resources should receive longer IDs (17-character IDs) when they are created. </p> <p>This request can only be used to modify longer ID settings for resource types that are within the opt-in period. Resources currently in their opt-in period include: <code>bundle</code> | <code>conversion-task</code> | <code>customer-gateway</code> | <code>dhcp-options</code> | <code>elastic-ip-allocation</code> | <code>elastic-ip-association</code> | <code>export-task</code> | <code>flow-log</code> | <code>image</code> | <code>import-task</code> | <code>internet-gateway</code> | <code>network-acl</code> | <code>network-acl-association</code> | <code>network-interface</code> | <code>network-interface-attachment</code> | <code>prefix-list</code> | <code>route-table</code> | <code>route-table-association</code> | <code>security-group</code> | <code>subnet</code> | <code>subnet-cidr-block-association</code> | <code>vpc</code> | <code>vpc-cidr-block-association</code> | <code>vpc-endpoint</code> | <code>vpc-peering-connection</code> | <code>vpn-connection</code> | <code>vpn-gateway</code>. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/resource-ids.html">Resource IDs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. </p> <p>This setting applies to the principal specified in the request; it does not apply to the principal that makes the request. </p> <p>Resources created with longer IDs are visible to all IAM roles and users, regardless of these settings and provided that they have permission to use the relevant <code>Describe</code> command for the resource type.</p>'
      responses:
        '200':
          description: Success
      parameters:
        - name: PrincipalArn
          in: query
          required: true
          description: 'The ARN of the principal, which can be an IAM user, IAM role, or the root user. Specify <code>all</code> to modify the ID format for all IAM users, IAM roles, and the root user of the account.'
          schema:
            type: string
        - name: Resource
          in: query
          required: true
          description: '<p>The type of resource: <code>bundle</code> | <code>conversion-task</code> | <code>customer-gateway</code> | <code>dhcp-options</code> | <code>elastic-ip-allocation</code> | <code>elastic-ip-association</code> | <code>export-task</code> | <code>flow-log</code> | <code>image</code> | <code>import-task</code> | <code>internet-gateway</code> | <code>network-acl</code> | <code>network-acl-association</code> | <code>network-interface</code> | <code>network-interface-attachment</code> | <code>prefix-list</code> | <code>route-table</code> | <code>route-table-association</code> | <code>security-group</code> | <code>subnet</code> | <code>subnet-cidr-block-association</code> | <code>vpc</code> | <code>vpc-cidr-block-association</code> | <code>vpc-endpoint</code> | <code>vpc-peering-connection</code> | <code>vpn-connection</code> | <code>vpn-gateway</code>.</p> <p>Alternatively, use the <code>all-current</code> option to include all resource types that are currently within their opt-in period for longer IDs.</p>'
          schema:
            type: string
        - name: UseLongIds
          in: query
          required: true
          description: Indicates whether the resource should use longer IDs (17-character IDs)
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyIdentityIdFormat
      operationId: POST_ModifyIdentityIdFormat
      description: '<p>Modifies the ID format of a resource for a specified IAM user, IAM role, or the root user for an account; or all IAM users, IAM roles, and the root user for an account. You can specify that resources should receive longer IDs (17-character IDs) when they are created. </p> <p>This request can only be used to modify longer ID settings for resource types that are within the opt-in period. Resources currently in their opt-in period include: <code>bundle</code> | <code>conversion-task</code> | <code>customer-gateway</code> | <code>dhcp-options</code> | <code>elastic-ip-allocation</code> | <code>elastic-ip-association</code> | <code>export-task</code> | <code>flow-log</code> | <code>image</code> | <code>import-task</code> | <code>internet-gateway</code> | <code>network-acl</code> | <code>network-acl-association</code> | <code>network-interface</code> | <code>network-interface-attachment</code> | <code>prefix-list</code> | <code>route-table</code> | <code>route-table-association</code> | <code>security-group</code> | <code>subnet</code> | <code>subnet-cidr-block-association</code> | <code>vpc</code> | <code>vpc-cidr-block-association</code> | <code>vpc-endpoint</code> | <code>vpc-peering-connection</code> | <code>vpn-connection</code> | <code>vpn-gateway</code>. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/resource-ids.html">Resource IDs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. </p> <p>This setting applies to the principal specified in the request; it does not apply to the principal that makes the request. </p> <p>Resources created with longer IDs are visible to all IAM roles and users, regardless of these settings and provided that they have permission to use the relevant <code>Describe</code> command for the resource type.</p>'
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyIdentityIdFormatRequest'
      parameters: []
  /?Action=ModifyImageAttribute&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifyImageAttribute
      operationId: GET_ModifyImageAttribute
      description: '<p>Modifies the specified attribute of the specified AMI. You can specify only one attribute at a time. You can use the <code>Attribute</code> parameter to specify the attribute or one of the following parameters: <code>Description</code> or <code>LaunchPermission</code>.</p> <p>Images with an Amazon Web Services Marketplace product code cannot be made public.</p> <p>To enable the SriovNetSupport enhanced networking attribute of an image, enable SriovNetSupport on an instance and create an AMI from the instance.</p>'
      responses:
        '200':
          description: Success
      parameters:
        - name: Attribute
          in: query
          required: false
          description: '<p>The name of the attribute to modify.</p> <p>Valid values: <code>description</code> | <code>launchPermission</code> </p>'
          schema:
            type: string
        - name: Description
          in: query
          required: false
          description: A new description for the AMI.
          schema:
            type: object
            properties:
              value:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: The attribute value. The value is case-sensitive.
            description: Describes a value for a resource attribute that is a String.
        - name: ImageId
          in: query
          required: true
          description: The ID of the AMI.
          schema:
            type: string
        - name: LaunchPermission
          in: query
          required: false
          description: A new launch permission for the AMI.
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/LaunchPermissionList'
                  - description: 'The Amazon Web Services account ID, organization ARN, or OU ARN to remove from the list of launch permissions for the AMI.'
            description: Describes a launch permission modification.
        - name: OperationType
          in: query
          required: false
          description: The operation type. This parameter can be used only when the <code>Attribute</code> parameter is <code>launchPermission</code>.
          schema:
            type: string
            enum:
              - add
              - remove
        - name: ProductCode
          in: query
          required: false
          description: Not supported.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: ProductCode
        - name: UserGroup
          in: query
          required: false
          description: The user groups. This parameter can be used only when the <code>Attribute</code> parameter is <code>launchPermission</code>.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: UserGroup
        - name: UserId
          in: query
          required: false
          description: The Amazon Web Services account IDs. This parameter can be used only when the <code>Attribute</code> parameter is <code>launchPermission</code>.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: UserId
        - name: Value
          in: query
          required: false
          description: The value of the attribute being modified. This parameter can be used only when the <code>Attribute</code> parameter is <code>description</code>.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: OrganizationArn
          in: query
          required: false
          description: The Amazon Resource Name (ARN) of an organization. This parameter can be used only when the <code>Attribute</code> parameter is <code>launchPermission</code>.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: OrganizationArn
        - name: OrganizationalUnitArn
          in: query
          required: false
          description: The Amazon Resource Name (ARN) of an organizational unit (OU). This parameter can be used only when the <code>Attribute</code> parameter is <code>launchPermission</code>.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: OrganizationalUnitArn
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyImageAttribute
      operationId: POST_ModifyImageAttribute
      description: '<p>Modifies the specified attribute of the specified AMI. You can specify only one attribute at a time. You can use the <code>Attribute</code> parameter to specify the attribute or one of the following parameters: <code>Description</code> or <code>LaunchPermission</code>.</p> <p>Images with an Amazon Web Services Marketplace product code cannot be made public.</p> <p>To enable the SriovNetSupport enhanced networking attribute of an image, enable SriovNetSupport on an instance and create an AMI from the instance.</p>'
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyImageAttributeRequest'
      parameters: []
  /?Action=ModifyInstanceAttribute&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifyInstanceAttribute
      operationId: GET_ModifyInstanceAttribute
      description: '<p>Modifies the specified attribute of the specified instance. You can specify only one attribute at a time.</p> <p> <b>Note: </b>Using this action to change the security groups associated with an elastic network interface (ENI) attached to an instance in a VPC can result in an error if the instance has more than one ENI. To change the security groups associated with an ENI attached to an instance that has multiple ENIs, we recommend that you use the <a>ModifyNetworkInterfaceAttribute</a> action.</p> <p>To modify some attributes, the instance must be stopped. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_ChangingAttributesWhileInstanceStopped.html">Modify a stopped instance</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
      parameters:
        - name: SourceDestCheck
          in: query
          required: false
          description: 'Enable or disable source/destination checks, which ensure that the instance is either the source or the destination of any traffic that it receives. If the value is <code>true</code>, source/destination checks are enabled; otherwise, they are disabled. The default value is <code>true</code>. You must disable source/destination checks if the instance runs services such as network address translation, routing, or firewalls.'
          schema:
            type: object
            properties:
              value:
                allOf:
                  - $ref: '#/components/schemas/Boolean'
                  - description: The attribute value. The valid values are <code>true</code> or <code>false</code>.
            description: Describes a value for a resource attribute that is a Boolean value.
        - name: Attribute
          in: query
          required: false
          description: The name of the attribute.
          schema:
            type: string
            enum:
              - instanceType
              - kernel
              - ramdisk
              - userData
              - disableApiTermination
              - instanceInitiatedShutdownBehavior
              - rootDeviceName
              - blockDeviceMapping
              - productCodes
              - sourceDestCheck
              - groupSet
              - ebsOptimized
              - sriovNetSupport
              - enaSupport
              - enclaveOptions
        - name: BlockDeviceMapping
          in: query
          required: false
          description: '<p>Modifies the <code>DeleteOnTermination</code> attribute for volumes that are currently attached. The volume must be owned by the caller. If no value is specified for <code>DeleteOnTermination</code>, the default is <code>true</code> and the volume is deleted when the instance is terminated.</p> <p>To add instance store volumes to an Amazon EBS-backed instance, you must add them when you launch the instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html#Using_OverridingAMIBDM">Update the block device mapping when launching an instance</a> in the <i>Amazon EC2 User Guide</i>.</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/InstanceBlockDeviceMappingSpecification'
                - xml:
                    name: item
        - name: DisableApiTermination
          in: query
          required: false
          description: 'If the value is <code>true</code>, you can''t terminate the instance using the Amazon EC2 console, CLI, or API; otherwise, you can. You cannot use this parameter for Spot Instances.'
          schema:
            type: object
            properties:
              value:
                allOf:
                  - $ref: '#/components/schemas/Boolean'
                  - description: The attribute value. The valid values are <code>true</code> or <code>false</code>.
            description: Describes a value for a resource attribute that is a Boolean value.
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: EbsOptimized
          in: query
          required: false
          description: Specifies whether the instance is optimized for Amazon EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.
          schema:
            type: object
            properties:
              value:
                allOf:
                  - $ref: '#/components/schemas/Boolean'
                  - description: The attribute value. The valid values are <code>true</code> or <code>false</code>.
            description: Describes a value for a resource attribute that is a Boolean value.
        - name: EnaSupport
          in: query
          required: false
          description: <p>Set to <code>true</code> to enable enhanced networking with ENA for the instance.</p> <p>This option is supported only for HVM instances. Specifying this option with a PV instance can make it unreachable.</p>
          schema:
            type: object
            properties:
              value:
                allOf:
                  - $ref: '#/components/schemas/Boolean'
                  - description: The attribute value. The valid values are <code>true</code> or <code>false</code>.
            description: Describes a value for a resource attribute that is a Boolean value.
        - name: GroupId
          in: query
          required: false
          description: '[EC2-VPC] Replaces the security groups of the instance with the specified security groups. You must specify at least one security group, even if it''s just the default security group for the VPC. You must specify the security group ID, not the security group name.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/SecurityGroupId'
                - xml:
                    name: groupId
        - name: InstanceId
          in: query
          required: true
          description: The ID of the instance.
          schema:
            type: string
        - name: InstanceInitiatedShutdownBehavior
          in: query
          required: false
          description: Specifies whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).
          schema:
            type: object
            properties:
              value:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: The attribute value. The value is case-sensitive.
            description: Describes a value for a resource attribute that is a String.
        - name: InstanceType
          in: query
          required: false
          description: 'Changes the instance type to the specified value. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance types</a> in the <i>Amazon EC2 User Guide</i>. If the instance type is not valid, the error returned is <code>InvalidInstanceAttributeValue</code>.'
          schema:
            type: object
            properties:
              value:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: The attribute value. The value is case-sensitive.
            description: Describes a value for a resource attribute that is a String.
        - name: Kernel
          in: query
          required: false
          description: 'Changes the instance''s kernel to the specified value. We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedKernels.html">PV-GRUB</a>.'
          schema:
            type: object
            properties:
              value:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: The attribute value. The value is case-sensitive.
            description: Describes a value for a resource attribute that is a String.
        - name: Ramdisk
          in: query
          required: false
          description: 'Changes the instance''s RAM disk to the specified value. We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedKernels.html">PV-GRUB</a>.'
          schema:
            type: object
            properties:
              value:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: The attribute value. The value is case-sensitive.
            description: Describes a value for a resource attribute that is a String.
        - name: SriovNetSupport
          in: query
          required: false
          description: <p>Set to <code>simple</code> to enable enhanced networking with the Intel 82599 Virtual Function interface for the instance.</p> <p>There is no way to disable enhanced networking with the Intel 82599 Virtual Function interface at this time.</p> <p>This option is supported only for HVM instances. Specifying this option with a PV instance can make it unreachable.</p>
          schema:
            type: object
            properties:
              value:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: The attribute value. The value is case-sensitive.
            description: Describes a value for a resource attribute that is a String.
        - name: UserData
          in: query
          required: false
          description: 'Changes the instance''s user data to the specified value. If you are using an Amazon Web Services SDK or command line tool, base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide base64-encoded text.'
          schema:
            type: object
            properties:
              value:
                $ref: '#/components/schemas/Blob'
        - name: Value
          in: query
          required: false
          description: 'A new value for the attribute. Use only with the <code>kernel</code>, <code>ramdisk</code>, <code>userData</code>, <code>disableApiTermination</code>, or <code>instanceInitiatedShutdownBehavior</code> attribute.'
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyInstanceAttribute
      operationId: POST_ModifyInstanceAttribute
      description: '<p>Modifies the specified attribute of the specified instance. You can specify only one attribute at a time.</p> <p> <b>Note: </b>Using this action to change the security groups associated with an elastic network interface (ENI) attached to an instance in a VPC can result in an error if the instance has more than one ENI. To change the security groups associated with an ENI attached to an instance that has multiple ENIs, we recommend that you use the <a>ModifyNetworkInterfaceAttribute</a> action.</p> <p>To modify some attributes, the instance must be stopped. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_ChangingAttributesWhileInstanceStopped.html">Modify a stopped instance</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyInstanceAttributeRequest'
      parameters: []
  /?Action=ModifyInstanceCapacityReservationAttributes&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifyInstanceCapacityReservationAttributes
      operationId: GET_ModifyInstanceCapacityReservationAttributes
      description: 'Modifies the Capacity Reservation settings for a stopped instance. Use this action to configure an instance to target a specific Capacity Reservation, run in any <code>open</code> Capacity Reservation with matching attributes, or run On-Demand Instance capacity.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyInstanceCapacityReservationAttributesResult'
      parameters:
        - name: InstanceId
          in: query
          required: true
          description: The ID of the instance to be modified.
          schema:
            type: string
        - name: CapacityReservationSpecification
          in: query
          required: true
          description: Information about the Capacity Reservation targeting option.
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/CapacityReservationTarget'
                  - description: Information about the target Capacity Reservation or Capacity Reservation group.
            description: '<p>Describes an instance''s Capacity Reservation targeting option. You can specify only one parameter at a time. If you specify <code>CapacityReservationPreference</code> and <code>CapacityReservationTarget</code>, the request fails.</p> <p>Use the <code>CapacityReservationPreference</code> parameter to configure the instance to run as an On-Demand Instance or to run in any <code>open</code> Capacity Reservation that has matching attributes (instance type, platform, Availability Zone). Use the <code>CapacityReservationTarget</code> parameter to explicitly target a specific Capacity Reservation or a Capacity Reservation group.</p>'
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyInstanceCapacityReservationAttributes
      operationId: POST_ModifyInstanceCapacityReservationAttributes
      description: 'Modifies the Capacity Reservation settings for a stopped instance. Use this action to configure an instance to target a specific Capacity Reservation, run in any <code>open</code> Capacity Reservation with matching attributes, or run On-Demand Instance capacity.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyInstanceCapacityReservationAttributesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyInstanceCapacityReservationAttributesRequest'
      parameters: []
  /?Action=ModifyInstanceCreditSpecification&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifyInstanceCreditSpecification
      operationId: GET_ModifyInstanceCreditSpecification
      description: '<p>Modifies the credit option for CPU usage on a running or stopped burstable performance instance. The credit options are <code>standard</code> and <code>unlimited</code>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html">Burstable performance instances</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyInstanceCreditSpecificationResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: ClientToken
          in: query
          required: false
          description: 'A unique, case-sensitive token that you provide to ensure idempotency of your modification request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.'
          schema:
            type: string
        - name: InstanceCreditSpecification
          in: query
          required: true
          description: Information about the credit option for CPU usage.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/InstanceCreditSpecificationRequest'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyInstanceCreditSpecification
      operationId: POST_ModifyInstanceCreditSpecification
      description: '<p>Modifies the credit option for CPU usage on a running or stopped burstable performance instance. The credit options are <code>standard</code> and <code>unlimited</code>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html">Burstable performance instances</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyInstanceCreditSpecificationResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyInstanceCreditSpecificationRequest'
      parameters: []
  /?Action=ModifyInstanceEventStartTime&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifyInstanceEventStartTime
      operationId: GET_ModifyInstanceEventStartTime
      description: Modifies the start time for a scheduled Amazon EC2 instance event.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyInstanceEventStartTimeResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: InstanceId
          in: query
          required: true
          description: The ID of the instance with the scheduled event.
          schema:
            type: string
        - name: InstanceEventId
          in: query
          required: true
          description: The ID of the event whose date and time you are modifying.
          schema:
            type: string
        - name: NotBefore
          in: query
          required: true
          description: The new date and time when the event will take place.
          schema:
            type: string
            format: date-time
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyInstanceEventStartTime
      operationId: POST_ModifyInstanceEventStartTime
      description: Modifies the start time for a scheduled Amazon EC2 instance event.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyInstanceEventStartTimeResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyInstanceEventStartTimeRequest'
      parameters: []
  /?Action=ModifyInstanceEventWindow&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifyInstanceEventWindow
      operationId: GET_ModifyInstanceEventWindow
      description: '<p>Modifies the specified event window.</p> <p>You can define either a set of time ranges or a cron expression when modifying the event window, but not both.</p> <p>To modify the targets associated with the event window, use the <a>AssociateInstanceEventWindow</a> and <a>DisassociateInstanceEventWindow</a> API.</p> <p>If Amazon Web Services has already scheduled an event, modifying an event window won''t change the time of the scheduled event.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/event-windows.html">Define event windows for scheduled events</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyInstanceEventWindowResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: Name
          in: query
          required: false
          description: The name of the event window.
          schema:
            type: string
        - name: InstanceEventWindowId
          in: query
          required: true
          description: The ID of the event window.
          schema:
            type: string
        - name: TimeRange
          in: query
          required: false
          description: The time ranges of the event window.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/InstanceEventWindowTimeRangeRequest'
        - name: CronExpression
          in: query
          required: false
          description: '<p>The cron expression of the event window, for example, <code>* 0-4,20-23 * * 1,5</code>.</p> <p>Constraints:</p> <ul> <li> <p>Only hour and day of the week values are supported.</p> </li> <li> <p>For day of the week values, you can specify either integers <code>0</code> through <code>6</code>, or alternative single values <code>SUN</code> through <code>SAT</code>.</p> </li> <li> <p>The minute, month, and year must be specified by <code>*</code>.</p> </li> <li> <p>The hour value must be one or a multiple range, for example, <code>0-4</code> or <code>0-4,20-23</code>.</p> </li> <li> <p>Each hour range must be &gt;= 2 hours, for example, <code>0-2</code> or <code>20-23</code>.</p> </li> <li> <p>The event window must be &gt;= 4 hours. The combined total time ranges in the event window must be &gt;= 4 hours.</p> </li> </ul> <p>For more information about cron expressions, see <a href="https://en.wikipedia.org/wiki/Cron">cron</a> on the <i>Wikipedia website</i>.</p>'
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyInstanceEventWindow
      operationId: POST_ModifyInstanceEventWindow
      description: '<p>Modifies the specified event window.</p> <p>You can define either a set of time ranges or a cron expression when modifying the event window, but not both.</p> <p>To modify the targets associated with the event window, use the <a>AssociateInstanceEventWindow</a> and <a>DisassociateInstanceEventWindow</a> API.</p> <p>If Amazon Web Services has already scheduled an event, modifying an event window won''t change the time of the scheduled event.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/event-windows.html">Define event windows for scheduled events</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyInstanceEventWindowResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyInstanceEventWindowRequest'
      parameters: []
  /?Action=ModifyInstanceMaintenanceOptions&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifyInstanceMaintenanceOptions
      operationId: GET_ModifyInstanceMaintenanceOptions
      description: 'Modifies the recovery behavior of your instance to disable simplified automatic recovery or set the recovery behavior to default. The default configuration will not enable simplified automatic recovery for an unsupported instance type. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-recover.html#instance-configuration-recovery">Simplified automatic recovery</a>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyInstanceMaintenanceOptionsResult'
      parameters:
        - name: InstanceId
          in: query
          required: true
          description: The ID of the instance.
          schema:
            type: string
        - name: AutoRecovery
          in: query
          required: false
          description: Disables the automatic recovery behavior of your instance or sets it to default.
          schema:
            type: string
            enum:
              - disabled
              - default
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyInstanceMaintenanceOptions
      operationId: POST_ModifyInstanceMaintenanceOptions
      description: 'Modifies the recovery behavior of your instance to disable simplified automatic recovery or set the recovery behavior to default. The default configuration will not enable simplified automatic recovery for an unsupported instance type. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-recover.html#instance-configuration-recovery">Simplified automatic recovery</a>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyInstanceMaintenanceOptionsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyInstanceMaintenanceOptionsRequest'
      parameters: []
  /?Action=ModifyInstanceMetadataOptions&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifyInstanceMetadataOptions
      operationId: GET_ModifyInstanceMetadataOptions
      description: 'Modify the instance metadata parameters on a running or stopped instance. When you modify the parameters on a stopped instance, they are applied when the instance is started. When you modify the parameters on a running instance, the API responds with a state of “pending”. After the parameter modifications are successfully applied to the instance, the state of the modifications changes from “pending” to “applied” in subsequent describe-instances API calls. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">Instance metadata and user data</a> in the <i>Amazon EC2 User Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyInstanceMetadataOptionsResult'
      parameters:
        - name: InstanceId
          in: query
          required: true
          description: The ID of the instance.
          schema:
            type: string
        - name: HttpTokens
          in: query
          required: false
          description: '<p>The state of token usage for your instance metadata requests. If the parameter is not specified in the request, the default state is <code>optional</code>.</p> <p>If the state is <code>optional</code>, you can choose to retrieve instance metadata with or without a signed token header on your request. If you retrieve the IAM role credentials without a token, the version 1.0 role credentials are returned. If you retrieve the IAM role credentials using a valid signed token, the version 2.0 role credentials are returned.</p> <p>If the state is <code>required</code>, you must send a signed token header with any instance metadata retrieval requests. In this state, retrieving the IAM role credential always returns the version 2.0 credentials; the version 1.0 credentials are not available.</p>'
          schema:
            type: string
            enum:
              - optional
              - required
        - name: HttpPutResponseHopLimit
          in: query
          required: false
          description: '<p>The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. If no parameter is specified, the existing state is maintained.</p> <p>Possible values: Integers from 1 to 64</p>'
          schema:
            type: integer
        - name: HttpEndpoint
          in: query
          required: false
          description: '<p>Enables or disables the HTTP metadata endpoint on your instances. If this parameter is not specified, the existing state is maintained.</p> <p>If you specify a value of <code>disabled</code>, you cannot access your instance metadata.</p>'
          schema:
            type: string
            enum:
              - disabled
              - enabled
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: HttpProtocolIpv6
          in: query
          required: false
          description: Enables or disables the IPv6 endpoint for the instance metadata service. This setting applies only if you have enabled the HTTP metadata endpoint.
          schema:
            type: string
            enum:
              - disabled
              - enabled
        - name: InstanceMetadataTags
          in: query
          required: false
          description: '<p>Set to <code>enabled</code> to allow access to instance tags from the instance metadata. Set to <code>disabled</code> to turn off access to instance tags from the instance metadata. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#work-with-tags-in-IMDS">Work with instance tags using the instance metadata</a>.</p> <p>Default: <code>disabled</code> </p>'
          schema:
            type: string
            enum:
              - disabled
              - enabled
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyInstanceMetadataOptions
      operationId: POST_ModifyInstanceMetadataOptions
      description: 'Modify the instance metadata parameters on a running or stopped instance. When you modify the parameters on a stopped instance, they are applied when the instance is started. When you modify the parameters on a running instance, the API responds with a state of “pending”. After the parameter modifications are successfully applied to the instance, the state of the modifications changes from “pending” to “applied” in subsequent describe-instances API calls. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">Instance metadata and user data</a> in the <i>Amazon EC2 User Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyInstanceMetadataOptionsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyInstanceMetadataOptionsRequest'
      parameters: []
  /?Action=ModifyInstancePlacement&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifyInstancePlacement
      operationId: GET_ModifyInstancePlacement
      description: '<p>Modifies the placement attributes for a specified instance. You can do the following:</p> <ul> <li> <p>Modify the affinity between an instance and a <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-overview.html">Dedicated Host</a>. When affinity is set to <code>host</code> and the instance is not associated with a specific Dedicated Host, the next time the instance is launched, it is automatically associated with the host on which it lands. If the instance is restarted or rebooted, this relationship persists.</p> </li> <li> <p>Change the Dedicated Host with which an instance is associated.</p> </li> <li> <p>Change the instance tenancy of an instance.</p> </li> <li> <p>Move an instance to or from a <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html">placement group</a>.</p> </li> </ul> <p>At least one attribute for affinity, host ID, tenancy, or placement group name must be specified in the request. Affinity and tenancy can be modified in the same request.</p> <p>To modify the host ID, tenancy, placement group, or partition for an instance, the instance must be in the <code>stopped</code> state.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyInstancePlacementResult'
      parameters:
        - name: Affinity
          in: query
          required: false
          description: The affinity setting for the instance.
          schema:
            type: string
            enum:
              - default
              - host
        - name: GroupName
          in: query
          required: false
          description: '<p>The name of the placement group in which to place the instance. For spread placement groups, the instance must have a tenancy of <code>default</code>. For cluster and partition placement groups, the instance must have a tenancy of <code>default</code> or <code>dedicated</code>.</p> <p>To remove an instance from a placement group, specify an empty string ("").</p>'
          schema:
            type: string
        - name: HostId
          in: query
          required: false
          description: The ID of the Dedicated Host with which to associate the instance.
          schema:
            type: string
        - name: InstanceId
          in: query
          required: true
          description: The ID of the instance that you are modifying.
          schema:
            type: string
        - name: Tenancy
          in: query
          required: false
          description: '<p>The tenancy for the instance.</p> <note> <p>For T3 instances, you can''t change the tenancy from <code>dedicated</code> to <code>host</code>, or from <code>host</code> to <code>dedicated</code>. Attempting to make one of these unsupported tenancy changes results in the <code>InvalidTenancy</code> error code.</p> </note>'
          schema:
            type: string
            enum:
              - dedicated
              - host
        - name: PartitionNumber
          in: query
          required: false
          description: The number of the partition in which to place the instance. Valid only if the placement group strategy is set to <code>partition</code>.
          schema:
            type: integer
        - name: HostResourceGroupArn
          in: query
          required: false
          description: The ARN of the host resource group in which to place the instance.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyInstancePlacement
      operationId: POST_ModifyInstancePlacement
      description: '<p>Modifies the placement attributes for a specified instance. You can do the following:</p> <ul> <li> <p>Modify the affinity between an instance and a <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-overview.html">Dedicated Host</a>. When affinity is set to <code>host</code> and the instance is not associated with a specific Dedicated Host, the next time the instance is launched, it is automatically associated with the host on which it lands. If the instance is restarted or rebooted, this relationship persists.</p> </li> <li> <p>Change the Dedicated Host with which an instance is associated.</p> </li> <li> <p>Change the instance tenancy of an instance.</p> </li> <li> <p>Move an instance to or from a <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html">placement group</a>.</p> </li> </ul> <p>At least one attribute for affinity, host ID, tenancy, or placement group name must be specified in the request. Affinity and tenancy can be modified in the same request.</p> <p>To modify the host ID, tenancy, placement group, or partition for an instance, the instance must be in the <code>stopped</code> state.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyInstancePlacementResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyInstancePlacementRequest'
      parameters: []
  /?Action=ModifyIpam&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifyIpam
      operationId: GET_ModifyIpam
      description: 'Modify the configurations of an IPAM. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyIpamResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: IpamId
          in: query
          required: true
          description: The ID of the IPAM you want to modify.
          schema:
            type: string
        - name: Description
          in: query
          required: false
          description: The description of the IPAM you want to modify.
          schema:
            type: string
        - name: AddOperatingRegion
          in: query
          required: false
          description: '<p>Choose the operating Regions for the IPAM. Operating Regions are Amazon Web Services Regions where the IPAM is allowed to manage IP address CIDRs. IPAM only discovers and monitors resources in the Amazon Web Services Regions you select as operating Regions.</p> <p>For more information about operating Regions, see <a href="/vpc/latest/ipam/create-ipam.html">Create an IPAM</a> in the <i>Amazon VPC IPAM User Guide</i>.</p>'
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AddIpamOperatingRegion'
            minItems: 0
            maxItems: 50
        - name: RemoveOperatingRegion
          in: query
          required: false
          description: The operating Regions to remove.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/RemoveIpamOperatingRegion'
            minItems: 0
            maxItems: 50
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyIpam
      operationId: POST_ModifyIpam
      description: 'Modify the configurations of an IPAM. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyIpamResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyIpamRequest'
      parameters: []
  /?Action=ModifyIpamPool&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifyIpamPool
      operationId: GET_ModifyIpamPool
      description: '<p>Modify the configurations of an IPAM pool.</p> <p>For more information, see <a href="/vpc/latest/ipam/mod-pool-ipam.html">Modify a pool</a> in the <i>Amazon VPC IPAM User Guide</i>. </p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyIpamPoolResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: IpamPoolId
          in: query
          required: true
          description: The ID of the IPAM pool you want to modify.
          schema:
            type: string
        - name: Description
          in: query
          required: false
          description: The description of the IPAM pool you want to modify.
          schema:
            type: string
        - name: AutoImport
          in: query
          required: false
          description: '<p>If true, IPAM will continuously look for resources within the CIDR range of this pool and automatically import them as allocations into your IPAM. The CIDRs that will be allocated for these resources must not already be allocated to other resources in order for the import to succeed. IPAM will import a CIDR regardless of its compliance with the pool''s allocation rules, so a resource might be imported and subsequently marked as noncompliant. If IPAM discovers multiple CIDRs that overlap, IPAM will import the largest CIDR only. If IPAM discovers multiple CIDRs with matching CIDRs, IPAM will randomly import one of them only. </p> <p>A locale must be set on the pool for this feature to work.</p>'
          schema:
            type: boolean
        - name: AllocationMinNetmaskLength
          in: query
          required: false
          description: The minimum netmask length required for CIDR allocations in this IPAM pool to be compliant. Possible netmask lengths for IPv4 addresses are 0 - 32. Possible netmask lengths for IPv6 addresses are 0 - 128. The minimum netmask length must be less than the maximum netmask length.
          schema:
            type: integer
            minimum: 0
            maximum: 128
        - name: AllocationMaxNetmaskLength
          in: query
          required: false
          description: The maximum netmask length possible for CIDR allocations in this IPAM pool to be compliant. Possible netmask lengths for IPv4 addresses are 0 - 32. Possible netmask lengths for IPv6 addresses are 0 - 128.The maximum netmask length must be greater than the minimum netmask length.
          schema:
            type: integer
            minimum: 0
            maximum: 128
        - name: AllocationDefaultNetmaskLength
          in: query
          required: false
          description: 'The default netmask length for allocations added to this pool. If, for example, the CIDR assigned to this pool is 10.0.0.0/8 and you enter 16 here, new allocations will default to 10.0.0.0/16.'
          schema:
            type: integer
            minimum: 0
            maximum: 128
        - name: ClearAllocationDefaultNetmaskLength
          in: query
          required: false
          description: Clear the default netmask length allocation rule for this pool.
          schema:
            type: boolean
        - name: AddAllocationResourceTag
          in: query
          required: false
          description: 'Add tag allocation rules to a pool. For more information about allocation rules, see <a href="/vpc/latest/ipam/create-top-ipam.html">Create a top-level pool</a> in the <i>Amazon VPC IPAM User Guide</i>.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/RequestIpamResourceTag'
                - xml:
                    name: item
        - name: RemoveAllocationResourceTag
          in: query
          required: false
          description: Remove tag allocation rules from a pool.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/RequestIpamResourceTag'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyIpamPool
      operationId: POST_ModifyIpamPool
      description: '<p>Modify the configurations of an IPAM pool.</p> <p>For more information, see <a href="/vpc/latest/ipam/mod-pool-ipam.html">Modify a pool</a> in the <i>Amazon VPC IPAM User Guide</i>. </p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyIpamPoolResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyIpamPoolRequest'
      parameters: []
  /?Action=ModifyIpamResourceCidr&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifyIpamResourceCidr
      operationId: GET_ModifyIpamResourceCidr
      description: '<p>Modify a resource CIDR. You can use this action to transfer resource CIDRs between scopes and ignore resource CIDRs that you do not want to manage. If set to false, the resource will not be tracked for overlap, it cannot be auto-imported into a pool, and it will be removed from any pool it has an allocation in.</p> <p>For more information, see <a href="/vpc/latest/ipam/move-resource-ipam.html">Move resource CIDRs between scopes</a> and <a href="/vpc/latest/ipam/change-monitoring-state-ipam.html">Change the monitoring state of resource CIDRs</a> in the <i>Amazon VPC IPAM User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyIpamResourceCidrResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: ResourceId
          in: query
          required: true
          description: The ID of the resource you want to modify.
          schema:
            type: string
        - name: ResourceCidr
          in: query
          required: true
          description: The CIDR of the resource you want to modify.
          schema:
            type: string
        - name: ResourceRegion
          in: query
          required: true
          description: The Amazon Web Services Region of the resource you want to modify.
          schema:
            type: string
        - name: CurrentIpamScopeId
          in: query
          required: true
          description: The ID of the current scope that the resource CIDR is in.
          schema:
            type: string
        - name: DestinationIpamScopeId
          in: query
          required: false
          description: The ID of the scope you want to transfer the resource CIDR to.
          schema:
            type: string
        - name: Monitored
          in: query
          required: true
          description: 'Determines if the resource is monitored by IPAM. If a resource is monitored, the resource is discovered by IPAM and you can view details about the resource’s CIDR.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyIpamResourceCidr
      operationId: POST_ModifyIpamResourceCidr
      description: '<p>Modify a resource CIDR. You can use this action to transfer resource CIDRs between scopes and ignore resource CIDRs that you do not want to manage. If set to false, the resource will not be tracked for overlap, it cannot be auto-imported into a pool, and it will be removed from any pool it has an allocation in.</p> <p>For more information, see <a href="/vpc/latest/ipam/move-resource-ipam.html">Move resource CIDRs between scopes</a> and <a href="/vpc/latest/ipam/change-monitoring-state-ipam.html">Change the monitoring state of resource CIDRs</a> in the <i>Amazon VPC IPAM User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyIpamResourceCidrResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyIpamResourceCidrRequest'
      parameters: []
  /?Action=ModifyIpamScope&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifyIpamScope
      operationId: GET_ModifyIpamScope
      description: Modify an IPAM scope.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyIpamScopeResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: IpamScopeId
          in: query
          required: true
          description: The ID of the scope you want to modify.
          schema:
            type: string
        - name: Description
          in: query
          required: false
          description: The description of the scope you want to modify.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyIpamScope
      operationId: POST_ModifyIpamScope
      description: Modify an IPAM scope.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyIpamScopeResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyIpamScopeRequest'
      parameters: []
  /?Action=ModifyLaunchTemplate&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifyLaunchTemplate
      operationId: GET_ModifyLaunchTemplate
      description: 'Modifies a launch template. You can specify which version of the launch template to set as the default version. When launching an instance, the default version applies when a launch template version is not specified.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyLaunchTemplateResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: ClientToken
          in: query
          required: false
          description: '<p>Unique, case-sensitive identifier you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.</p> <p>Constraint: Maximum 128 ASCII characters.</p>'
          schema:
            type: string
        - name: LaunchTemplateId
          in: query
          required: false
          description: The ID of the launch template. You must specify either the launch template ID or launch template name in the request.
          schema:
            type: string
        - name: LaunchTemplateName
          in: query
          required: false
          description: The name of the launch template. You must specify either the launch template ID or launch template name in the request.
          schema:
            type: string
            pattern: '[a-zA-Z0-9\(\)\.\-/_]+'
            minLength: 3
            maxLength: 128
        - name: SetDefaultVersion
          in: query
          required: false
          description: The version number of the launch template to set as the default version.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyLaunchTemplate
      operationId: POST_ModifyLaunchTemplate
      description: 'Modifies a launch template. You can specify which version of the launch template to set as the default version. When launching an instance, the default version applies when a launch template version is not specified.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyLaunchTemplateResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyLaunchTemplateRequest'
      parameters: []
  /?Action=ModifyManagedPrefixList&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifyManagedPrefixList
      operationId: GET_ModifyManagedPrefixList
      description: '<p>Modifies the specified managed prefix list.</p> <p>Adding or removing entries in a prefix list creates a new version of the prefix list. Changing the name of the prefix list does not affect the version.</p> <p>If you specify a current version number that does not match the true current version number, the request fails.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyManagedPrefixListResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: PrefixListId
          in: query
          required: true
          description: The ID of the prefix list.
          schema:
            type: string
        - name: CurrentVersion
          in: query
          required: false
          description: The current version of the prefix list.
          schema:
            type: integer
        - name: PrefixListName
          in: query
          required: false
          description: A name for the prefix list.
          schema:
            type: string
        - name: AddEntry
          in: query
          required: false
          description: One or more entries to add to the prefix list.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AddPrefixListEntry'
            minItems: 0
            maxItems: 100
        - name: RemoveEntry
          in: query
          required: false
          description: One or more entries to remove from the prefix list.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/RemovePrefixListEntry'
            minItems: 0
            maxItems: 100
        - name: MaxEntries
          in: query
          required: false
          description: '<p>The maximum number of entries for the prefix list. You cannot modify the entries of a prefix list and modify the size of a prefix list at the same time.</p> <p>If any of the resources that reference the prefix list cannot support the new maximum size, the modify operation fails. Check the state message for the IDs of the first ten resources that do not support the new maximum size.</p>'
          schema:
            type: integer
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyManagedPrefixList
      operationId: POST_ModifyManagedPrefixList
      description: '<p>Modifies the specified managed prefix list.</p> <p>Adding or removing entries in a prefix list creates a new version of the prefix list. Changing the name of the prefix list does not affect the version.</p> <p>If you specify a current version number that does not match the true current version number, the request fails.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyManagedPrefixListResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyManagedPrefixListRequest'
      parameters: []
  /?Action=ModifyNetworkInterfaceAttribute&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifyNetworkInterfaceAttribute
      operationId: GET_ModifyNetworkInterfaceAttribute
      description: Modifies the specified network interface attribute. You can specify only one attribute at a time. You can use this action to attach and detach security groups from an existing EC2 instance.
      responses:
        '200':
          description: Success
      parameters:
        - name: Attachment
          in: query
          required: false
          description: 'Information about the interface attachment. If modifying the ''delete on termination'' attribute, you must specify the ID of the interface attachment.'
          schema:
            type: object
            properties:
              attachmentId:
                allOf:
                  - $ref: '#/components/schemas/NetworkInterfaceAttachmentId'
                  - description: The ID of the network interface attachment.
              deleteOnTermination:
                allOf:
                  - $ref: '#/components/schemas/Boolean'
                  - description: Indicates whether the network interface is deleted when the instance is terminated.
            description: Describes an attachment change.
        - name: Description
          in: query
          required: false
          description: A description for the network interface.
          schema:
            type: object
            properties:
              value:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: The attribute value. The value is case-sensitive.
            description: Describes a value for a resource attribute that is a String.
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: SecurityGroupId
          in: query
          required: false
          description: 'Changes the security groups for the network interface. The new set of groups you specify replaces the current set. You must specify at least one group, even if it''s just the default security group in the VPC. You must specify the ID of the security group, not the name.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/SecurityGroupId'
                - xml:
                    name: SecurityGroupId
        - name: NetworkInterfaceId
          in: query
          required: true
          description: The ID of the network interface.
          schema:
            type: string
        - name: SourceDestCheck
          in: query
          required: false
          description: 'Enable or disable source/destination checks, which ensure that the instance is either the source or the destination of any traffic that it receives. If the value is <code>true</code>, source/destination checks are enabled; otherwise, they are disabled. The default value is <code>true</code>. You must disable source/destination checks if the instance runs services such as network address translation, routing, or firewalls.'
          schema:
            type: object
            properties:
              value:
                allOf:
                  - $ref: '#/components/schemas/Boolean'
                  - description: The attribute value. The valid values are <code>true</code> or <code>false</code>.
            description: Describes a value for a resource attribute that is a Boolean value.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyNetworkInterfaceAttribute
      operationId: POST_ModifyNetworkInterfaceAttribute
      description: Modifies the specified network interface attribute. You can specify only one attribute at a time. You can use this action to attach and detach security groups from an existing EC2 instance.
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyNetworkInterfaceAttributeRequest'
      parameters: []
  /?Action=ModifyPrivateDnsNameOptions&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifyPrivateDnsNameOptions
      operationId: GET_ModifyPrivateDnsNameOptions
      description: Modifies the options for instance hostnames for the specified instance.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyPrivateDnsNameOptionsResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: InstanceId
          in: query
          required: false
          description: The ID of the instance.
          schema:
            type: string
        - name: PrivateDnsHostnameType
          in: query
          required: false
          description: 'The type of hostname for EC2 instances. For IPv4 only subnets, an instance DNS name must be based on the instance IPv4 address. For IPv6 only subnets, an instance DNS name must be based on the instance ID. For dual-stack subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID.'
          schema:
            type: string
            enum:
              - ip-name
              - resource-name
        - name: EnableResourceNameDnsARecord
          in: query
          required: false
          description: Indicates whether to respond to DNS queries for instance hostnames with DNS A records.
          schema:
            type: boolean
        - name: EnableResourceNameDnsAAAARecord
          in: query
          required: false
          description: Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyPrivateDnsNameOptions
      operationId: POST_ModifyPrivateDnsNameOptions
      description: Modifies the options for instance hostnames for the specified instance.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyPrivateDnsNameOptionsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyPrivateDnsNameOptionsRequest'
      parameters: []
  /?Action=ModifyReservedInstances&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifyReservedInstances
      operationId: GET_ModifyReservedInstances
      description: '<p>Modifies the Availability Zone, instance count, instance type, or network platform (EC2-Classic or EC2-VPC) of your Reserved Instances. The Reserved Instances to be modified must be identical, except for Availability Zone, network platform, and instance type.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-modifying.html">Modifying Reserved Instances</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyReservedInstancesResult'
      parameters:
        - name: ReservedInstancesId
          in: query
          required: true
          description: The IDs of the Reserved Instances to modify.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/ReservationId'
                - xml:
                    name: ReservedInstancesId
        - name: ClientToken
          in: query
          required: false
          description: 'A unique, case-sensitive token you provide to ensure idempotency of your modification request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.'
          schema:
            type: string
        - name: ReservedInstancesConfigurationSetItemType
          in: query
          required: true
          description: The configuration settings for the Reserved Instances to modify.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/ReservedInstancesConfiguration'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyReservedInstances
      operationId: POST_ModifyReservedInstances
      description: '<p>Modifies the Availability Zone, instance count, instance type, or network platform (EC2-Classic or EC2-VPC) of your Reserved Instances. The Reserved Instances to be modified must be identical, except for Availability Zone, network platform, and instance type.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-modifying.html">Modifying Reserved Instances</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyReservedInstancesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyReservedInstancesRequest'
      parameters: []
  /?Action=ModifySecurityGroupRules&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifySecurityGroupRules
      operationId: GET_ModifySecurityGroupRules
      description: Modifies the rules of a security group.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifySecurityGroupRulesResult'
      parameters:
        - name: GroupId
          in: query
          required: true
          description: The ID of the security group.
          schema:
            type: string
        - name: SecurityGroupRule
          in: query
          required: true
          description: Information about the security group properties to update.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/SecurityGroupRuleUpdate'
                - xml:
                    name: item
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifySecurityGroupRules
      operationId: POST_ModifySecurityGroupRules
      description: Modifies the rules of a security group.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifySecurityGroupRulesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifySecurityGroupRulesRequest'
      parameters: []
  /?Action=ModifySnapshotAttribute&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifySnapshotAttribute
      operationId: GET_ModifySnapshotAttribute
      description: '<p>Adds or removes permission settings for the specified snapshot. You may add or remove specified Amazon Web Services account IDs from a snapshot''s list of create volume permissions, but you cannot do both in a single operation. If you need to both add and remove account IDs for a snapshot, you must use multiple operations. You can make up to 500 modifications to a snapshot in a single operation.</p> <p>Encrypted snapshots and snapshots with Amazon Web Services Marketplace product codes cannot be made public. Snapshots encrypted with your default KMS key cannot be shared with other accounts.</p> <p>For more information about modifying snapshot permissions, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-modifying-snapshot-permissions.html">Share a snapshot</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
      parameters:
        - name: Attribute
          in: query
          required: false
          description: The snapshot attribute to modify. Only volume creation permissions can be modified.
          schema:
            type: string
            enum:
              - productCodes
              - createVolumePermission
        - name: CreateVolumePermission
          in: query
          required: false
          description: A JSON representation of the snapshot attribute modification.
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/CreateVolumePermissionList'
                  - description: Removes the specified Amazon Web Services account ID or group from the list.
            description: Describes modifications to the list of create volume permissions for a volume.
        - name: UserGroup
          in: query
          required: false
          description: The group to modify for the snapshot.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/SecurityGroupName'
                - xml:
                    name: GroupName
        - name: OperationType
          in: query
          required: false
          description: The type of operation to perform to the attribute.
          schema:
            type: string
            enum:
              - add
              - remove
        - name: SnapshotId
          in: query
          required: true
          description: The ID of the snapshot.
          schema:
            type: string
        - name: UserId
          in: query
          required: false
          description: The account ID to modify for the snapshot.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: UserId
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifySnapshotAttribute
      operationId: POST_ModifySnapshotAttribute
      description: '<p>Adds or removes permission settings for the specified snapshot. You may add or remove specified Amazon Web Services account IDs from a snapshot''s list of create volume permissions, but you cannot do both in a single operation. If you need to both add and remove account IDs for a snapshot, you must use multiple operations. You can make up to 500 modifications to a snapshot in a single operation.</p> <p>Encrypted snapshots and snapshots with Amazon Web Services Marketplace product codes cannot be made public. Snapshots encrypted with your default KMS key cannot be shared with other accounts.</p> <p>For more information about modifying snapshot permissions, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-modifying-snapshot-permissions.html">Share a snapshot</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifySnapshotAttributeRequest'
      parameters: []
  /?Action=ModifySnapshotTier&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifySnapshotTier
      operationId: GET_ModifySnapshotTier
      description: 'Archives an Amazon EBS snapshot. When you archive a snapshot, it is converted to a full snapshot that includes all of the blocks of data that were written to the volume at the time the snapshot was created, and moved from the standard tier to the archive tier. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshot-archive.html">Archive Amazon EBS snapshots</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifySnapshotTierResult'
      parameters:
        - name: SnapshotId
          in: query
          required: true
          description: The ID of the snapshot.
          schema:
            type: string
        - name: StorageTier
          in: query
          required: false
          description: The name of the storage tier. You must specify <code>archive</code>.
          schema:
            type: string
            enum:
              - archive
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifySnapshotTier
      operationId: POST_ModifySnapshotTier
      description: 'Archives an Amazon EBS snapshot. When you archive a snapshot, it is converted to a full snapshot that includes all of the blocks of data that were written to the volume at the time the snapshot was created, and moved from the standard tier to the archive tier. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshot-archive.html">Archive Amazon EBS snapshots</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifySnapshotTierResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifySnapshotTierRequest'
      parameters: []
  /?Action=ModifySpotFleetRequest&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifySpotFleetRequest
      operationId: GET_ModifySpotFleetRequest
      description: '<p>Modifies the specified Spot Fleet request.</p> <p>You can only modify a Spot Fleet request of type <code>maintain</code>.</p> <p>While the Spot Fleet request is being modified, it is in the <code>modifying</code> state.</p> <p>To scale up your Spot Fleet, increase its target capacity. The Spot Fleet launches the additional Spot Instances according to the allocation strategy for the Spot Fleet request. If the allocation strategy is <code>lowestPrice</code>, the Spot Fleet launches instances using the Spot Instance pool with the lowest price. If the allocation strategy is <code>diversified</code>, the Spot Fleet distributes the instances across the Spot Instance pools. If the allocation strategy is <code>capacityOptimized</code>, Spot Fleet launches instances from Spot Instance pools with optimal capacity for the number of instances that are launching.</p> <p>To scale down your Spot Fleet, decrease its target capacity. First, the Spot Fleet cancels any open requests that exceed the new target capacity. You can request that the Spot Fleet terminate Spot Instances until the size of the fleet no longer exceeds the new target capacity. If the allocation strategy is <code>lowestPrice</code>, the Spot Fleet terminates the instances with the highest price per unit. If the allocation strategy is <code>capacityOptimized</code>, the Spot Fleet terminates the instances in the Spot Instance pools that have the least available Spot Instance capacity. If the allocation strategy is <code>diversified</code>, the Spot Fleet terminates instances across the Spot Instance pools. Alternatively, you can request that the Spot Fleet keep the fleet at its current size, but not replace any Spot Instances that are interrupted or that you terminate manually.</p> <p>If you are finished with your Spot Fleet for now, but will use it again later, you can set the target capacity to 0.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifySpotFleetRequestResponse'
      parameters:
        - name: ExcessCapacityTerminationPolicy
          in: query
          required: false
          description: Indicates whether running Spot Instances should be terminated if the target capacity of the Spot Fleet request is decreased below the current size of the Spot Fleet.
          schema:
            type: string
            enum:
              - noTermination
              - default
        - name: LaunchTemplateConfig
          in: query
          required: false
          description: 'The launch template and overrides. You can only use this parameter if you specified a launch template (<code>LaunchTemplateConfigs</code>) in your Spot Fleet request. If you specified <code>LaunchSpecifications</code> in your Spot Fleet request, then omit this parameter.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/LaunchTemplateConfig'
                - xml:
                    name: item
        - name: SpotFleetRequestId
          in: query
          required: true
          description: The ID of the Spot Fleet request.
          schema:
            type: string
        - name: TargetCapacity
          in: query
          required: false
          description: The size of the fleet.
          schema:
            type: integer
        - name: OnDemandTargetCapacity
          in: query
          required: false
          description: The number of On-Demand Instances in the fleet.
          schema:
            type: integer
        - name: Context
          in: query
          required: false
          description: Reserved.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifySpotFleetRequest
      operationId: POST_ModifySpotFleetRequest
      description: '<p>Modifies the specified Spot Fleet request.</p> <p>You can only modify a Spot Fleet request of type <code>maintain</code>.</p> <p>While the Spot Fleet request is being modified, it is in the <code>modifying</code> state.</p> <p>To scale up your Spot Fleet, increase its target capacity. The Spot Fleet launches the additional Spot Instances according to the allocation strategy for the Spot Fleet request. If the allocation strategy is <code>lowestPrice</code>, the Spot Fleet launches instances using the Spot Instance pool with the lowest price. If the allocation strategy is <code>diversified</code>, the Spot Fleet distributes the instances across the Spot Instance pools. If the allocation strategy is <code>capacityOptimized</code>, Spot Fleet launches instances from Spot Instance pools with optimal capacity for the number of instances that are launching.</p> <p>To scale down your Spot Fleet, decrease its target capacity. First, the Spot Fleet cancels any open requests that exceed the new target capacity. You can request that the Spot Fleet terminate Spot Instances until the size of the fleet no longer exceeds the new target capacity. If the allocation strategy is <code>lowestPrice</code>, the Spot Fleet terminates the instances with the highest price per unit. If the allocation strategy is <code>capacityOptimized</code>, the Spot Fleet terminates the instances in the Spot Instance pools that have the least available Spot Instance capacity. If the allocation strategy is <code>diversified</code>, the Spot Fleet terminates instances across the Spot Instance pools. Alternatively, you can request that the Spot Fleet keep the fleet at its current size, but not replace any Spot Instances that are interrupted or that you terminate manually.</p> <p>If you are finished with your Spot Fleet for now, but will use it again later, you can set the target capacity to 0.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifySpotFleetRequestResponse'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifySpotFleetRequestRequest'
      parameters: []
  /?Action=ModifySubnetAttribute&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifySubnetAttribute
      operationId: GET_ModifySubnetAttribute
      description: '<p>Modifies a subnet attribute. You can only modify one attribute at a time.</p> <p>Use this action to modify subnets on Amazon Web Services Outposts.</p> <ul> <li> <p>To modify a subnet on an Outpost rack, set both <code>MapCustomerOwnedIpOnLaunch</code> and <code>CustomerOwnedIpv4Pool</code>. These two parameters act as a single attribute.</p> </li> <li> <p>To modify a subnet on an Outpost server, set either <code>EnableLniAtDeviceIndex</code> or <code>DisableLniAtDeviceIndex</code>.</p> </li> </ul> <p>For more information about Amazon Web Services Outposts, see the following:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/outposts/latest/userguide/how-servers-work.html">Outpost servers</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/outposts/latest/userguide/how-racks-work.html">Outpost racks</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
      parameters:
        - name: AssignIpv6AddressOnCreation
          in: query
          required: false
          description: '<p>Specify <code>true</code> to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. This includes a network interface that''s created when launching an instance into the subnet (the instance therefore receives an IPv6 address). </p> <p>If you enable the IPv6 addressing feature for your subnet, your network interface or instance only receives an IPv6 address if it''s created using version <code>2016-11-15</code> or later of the Amazon EC2 API.</p>'
          schema:
            type: object
            properties:
              value:
                allOf:
                  - $ref: '#/components/schemas/Boolean'
                  - description: The attribute value. The valid values are <code>true</code> or <code>false</code>.
            description: Describes a value for a resource attribute that is a Boolean value.
        - name: MapPublicIpOnLaunch
          in: query
          required: false
          description: Specify <code>true</code> to indicate that network interfaces attached to instances created in the specified subnet should be assigned a public IPv4 address.
          schema:
            type: object
            properties:
              value:
                allOf:
                  - $ref: '#/components/schemas/Boolean'
                  - description: The attribute value. The valid values are <code>true</code> or <code>false</code>.
            description: Describes a value for a resource attribute that is a Boolean value.
        - name: SubnetId
          in: query
          required: true
          description: The ID of the subnet.
          schema:
            type: string
        - name: MapCustomerOwnedIpOnLaunch
          in: query
          required: false
          description: '<p>Specify <code>true</code> to indicate that network interfaces attached to instances created in the specified subnet should be assigned a customer-owned IPv4 address.</p> <p>When this value is <code>true</code>, you must specify the customer-owned IP pool using <code>CustomerOwnedIpv4Pool</code>.</p>'
          schema:
            type: object
            properties:
              value:
                allOf:
                  - $ref: '#/components/schemas/Boolean'
                  - description: The attribute value. The valid values are <code>true</code> or <code>false</code>.
            description: Describes a value for a resource attribute that is a Boolean value.
        - name: CustomerOwnedIpv4Pool
          in: query
          required: false
          description: <p>The customer-owned IPv4 address pool associated with the subnet.</p> <p>You must set this value when you specify <code>true</code> for <code>MapCustomerOwnedIpOnLaunch</code>.</p>
          schema:
            type: string
        - name: EnableDns64
          in: query
          required: false
          description: Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations.
          schema:
            type: object
            properties:
              value:
                allOf:
                  - $ref: '#/components/schemas/Boolean'
                  - description: The attribute value. The valid values are <code>true</code> or <code>false</code>.
            description: Describes a value for a resource attribute that is a Boolean value.
        - name: PrivateDnsHostnameTypeOnLaunch
          in: query
          required: false
          description: 'The type of hostname to assign to instances in the subnet at launch. For IPv4-only and dual-stack (IPv4 and IPv6) subnets, an instance DNS name can be based on the instance IPv4 address (ip-name) or the instance ID (resource-name). For IPv6 only subnets, an instance DNS name must be based on the instance ID (resource-name).'
          schema:
            type: string
            enum:
              - ip-name
              - resource-name
        - name: EnableResourceNameDnsARecordOnLaunch
          in: query
          required: false
          description: Indicates whether to respond to DNS queries for instance hostnames with DNS A records.
          schema:
            type: object
            properties:
              value:
                allOf:
                  - $ref: '#/components/schemas/Boolean'
                  - description: The attribute value. The valid values are <code>true</code> or <code>false</code>.
            description: Describes a value for a resource attribute that is a Boolean value.
        - name: EnableResourceNameDnsAAAARecordOnLaunch
          in: query
          required: false
          description: Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.
          schema:
            type: object
            properties:
              value:
                allOf:
                  - $ref: '#/components/schemas/Boolean'
                  - description: The attribute value. The valid values are <code>true</code> or <code>false</code>.
            description: Describes a value for a resource attribute that is a Boolean value.
        - name: EnableLniAtDeviceIndex
          in: query
          required: false
          description: ' Indicates the device position for local network interfaces in this subnet. For example, <code>1</code> indicates local network interfaces in this subnet are the secondary network interface (eth1). A local network interface cannot be the primary network interface (eth0). '
          schema:
            type: integer
        - name: DisableLniAtDeviceIndex
          in: query
          required: false
          description: ' Specify <code>true</code> to indicate that local network interfaces at the current position should be disabled. '
          schema:
            type: object
            properties:
              value:
                allOf:
                  - $ref: '#/components/schemas/Boolean'
                  - description: The attribute value. The valid values are <code>true</code> or <code>false</code>.
            description: Describes a value for a resource attribute that is a Boolean value.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifySubnetAttribute
      operationId: POST_ModifySubnetAttribute
      description: '<p>Modifies a subnet attribute. You can only modify one attribute at a time.</p> <p>Use this action to modify subnets on Amazon Web Services Outposts.</p> <ul> <li> <p>To modify a subnet on an Outpost rack, set both <code>MapCustomerOwnedIpOnLaunch</code> and <code>CustomerOwnedIpv4Pool</code>. These two parameters act as a single attribute.</p> </li> <li> <p>To modify a subnet on an Outpost server, set either <code>EnableLniAtDeviceIndex</code> or <code>DisableLniAtDeviceIndex</code>.</p> </li> </ul> <p>For more information about Amazon Web Services Outposts, see the following:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/outposts/latest/userguide/how-servers-work.html">Outpost servers</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/outposts/latest/userguide/how-racks-work.html">Outpost racks</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifySubnetAttributeRequest'
      parameters: []
  /?Action=ModifyTrafficMirrorFilterNetworkServices&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifyTrafficMirrorFilterNetworkServices
      operationId: GET_ModifyTrafficMirrorFilterNetworkServices
      description: '<p>Allows or restricts mirroring network services.</p> <p> By default, Amazon DNS network services are not eligible for Traffic Mirror. Use <code>AddNetworkServices</code> to add network services to a Traffic Mirror filter. When a network service is added to the Traffic Mirror filter, all traffic related to that network service will be mirrored. When you no longer want to mirror network services, use <code>RemoveNetworkServices</code> to remove the network services from the Traffic Mirror filter. </p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyTrafficMirrorFilterNetworkServicesResult'
      parameters:
        - name: TrafficMirrorFilterId
          in: query
          required: true
          description: The ID of the Traffic Mirror filter.
          schema:
            type: string
        - name: AddNetworkService
          in: query
          required: false
          description: 'The network service, for example Amazon DNS, that you want to mirror.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TrafficMirrorNetworkService'
                - xml:
                    name: item
        - name: RemoveNetworkService
          in: query
          required: false
          description: 'The network service, for example Amazon DNS, that you no longer want to mirror.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TrafficMirrorNetworkService'
                - xml:
                    name: item
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyTrafficMirrorFilterNetworkServices
      operationId: POST_ModifyTrafficMirrorFilterNetworkServices
      description: '<p>Allows or restricts mirroring network services.</p> <p> By default, Amazon DNS network services are not eligible for Traffic Mirror. Use <code>AddNetworkServices</code> to add network services to a Traffic Mirror filter. When a network service is added to the Traffic Mirror filter, all traffic related to that network service will be mirrored. When you no longer want to mirror network services, use <code>RemoveNetworkServices</code> to remove the network services from the Traffic Mirror filter. </p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyTrafficMirrorFilterNetworkServicesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyTrafficMirrorFilterNetworkServicesRequest'
      parameters: []
  /?Action=ModifyTrafficMirrorFilterRule&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifyTrafficMirrorFilterRule
      operationId: GET_ModifyTrafficMirrorFilterRule
      description: <p>Modifies the specified Traffic Mirror rule.</p> <p> <code>DestinationCidrBlock</code> and <code>SourceCidrBlock</code> must both be an IPv4 range or an IPv6 range.</p>
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyTrafficMirrorFilterRuleResult'
      parameters:
        - name: TrafficMirrorFilterRuleId
          in: query
          required: true
          description: The ID of the Traffic Mirror rule.
          schema:
            type: string
        - name: TrafficDirection
          in: query
          required: false
          description: The type of traffic to assign to the rule.
          schema:
            type: string
            enum:
              - ingress
              - egress
        - name: RuleNumber
          in: query
          required: false
          description: The number of the Traffic Mirror rule. This number must be unique for each Traffic Mirror rule in a given direction. The rules are processed in ascending order by rule number.
          schema:
            type: integer
        - name: RuleAction
          in: query
          required: false
          description: The action to assign to the rule.
          schema:
            type: string
            enum:
              - accept
              - reject
        - name: DestinationPortRange
          in: query
          required: false
          description: The destination ports that are associated with the Traffic Mirror rule.
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/Integer'
                  - description: The last port in the Traffic Mirror port range. This applies to the TCP and UDP protocols.
            description: Information about the Traffic Mirror filter rule port range.
        - name: SourcePortRange
          in: query
          required: false
          description: The port range to assign to the Traffic Mirror rule.
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/Integer'
                  - description: The last port in the Traffic Mirror port range. This applies to the TCP and UDP protocols.
            description: Information about the Traffic Mirror filter rule port range.
        - name: Protocol
          in: query
          required: false
          description: 'The protocol, for example TCP, to assign to the Traffic Mirror rule.'
          schema:
            type: integer
        - name: DestinationCidrBlock
          in: query
          required: false
          description: The destination CIDR block to assign to the Traffic Mirror rule.
          schema:
            type: string
        - name: SourceCidrBlock
          in: query
          required: false
          description: The source CIDR block to assign to the Traffic Mirror rule.
          schema:
            type: string
        - name: Description
          in: query
          required: false
          description: The description to assign to the Traffic Mirror rule.
          schema:
            type: string
        - name: RemoveField
          in: query
          required: false
          description: '<p>The properties that you want to remove from the Traffic Mirror filter rule.</p> <p>When you remove a property from a Traffic Mirror filter rule, the property is set to the default.</p>'
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TrafficMirrorFilterRuleField'
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyTrafficMirrorFilterRule
      operationId: POST_ModifyTrafficMirrorFilterRule
      description: <p>Modifies the specified Traffic Mirror rule.</p> <p> <code>DestinationCidrBlock</code> and <code>SourceCidrBlock</code> must both be an IPv4 range or an IPv6 range.</p>
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyTrafficMirrorFilterRuleResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyTrafficMirrorFilterRuleRequest'
      parameters: []
  /?Action=ModifyTrafficMirrorSession&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifyTrafficMirrorSession
      operationId: GET_ModifyTrafficMirrorSession
      description: Modifies a Traffic Mirror session.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyTrafficMirrorSessionResult'
      parameters:
        - name: TrafficMirrorSessionId
          in: query
          required: true
          description: The ID of the Traffic Mirror session.
          schema:
            type: string
        - name: TrafficMirrorTargetId
          in: query
          required: false
          description: 'The Traffic Mirror target. The target must be in the same VPC as the source, or have a VPC peering connection with the source.'
          schema:
            type: string
        - name: TrafficMirrorFilterId
          in: query
          required: false
          description: The ID of the Traffic Mirror filter.
          schema:
            type: string
        - name: PacketLength
          in: query
          required: false
          description: 'The number of bytes in each packet to mirror. These are bytes after the VXLAN header. To mirror a subset, set this to the length (in bytes) to mirror. For example, if you set this value to 100, then the first 100 bytes that meet the filter criteria are copied to the target. Do not specify this parameter when you want to mirror the entire packet.'
          schema:
            type: integer
        - name: SessionNumber
          in: query
          required: false
          description: <p>The session number determines the order in which sessions are evaluated when an interface is used by multiple sessions. The first session with a matching filter is the one that mirrors the packets.</p> <p>Valid values are 1-32766.</p>
          schema:
            type: integer
        - name: VirtualNetworkId
          in: query
          required: false
          description: The virtual network ID of the Traffic Mirror session.
          schema:
            type: integer
        - name: Description
          in: query
          required: false
          description: The description to assign to the Traffic Mirror session.
          schema:
            type: string
        - name: RemoveField
          in: query
          required: false
          description: '<p>The properties that you want to remove from the Traffic Mirror session.</p> <p>When you remove a property from a Traffic Mirror session, the property is set to the default.</p>'
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TrafficMirrorSessionField'
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyTrafficMirrorSession
      operationId: POST_ModifyTrafficMirrorSession
      description: Modifies a Traffic Mirror session.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyTrafficMirrorSessionResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyTrafficMirrorSessionRequest'
      parameters: []
  /?Action=ModifyTransitGateway&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifyTransitGateway
      operationId: GET_ModifyTransitGateway
      description: 'Modifies the specified transit gateway. When you modify a transit gateway, the modified options are applied to new transit gateway attachments only. Your existing transit gateway attachments are not modified.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyTransitGatewayResult'
      parameters:
        - name: TransitGatewayId
          in: query
          required: true
          description: The ID of the transit gateway.
          schema:
            type: string
        - name: Description
          in: query
          required: false
          description: The description for the transit gateway.
          schema:
            type: string
        - name: Options
          in: query
          required: false
          description: The options to modify.
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/TransitGatewayRouteTableId'
                  - description: The ID of the default propagation route table.
            description: The transit gateway options.
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyTransitGateway
      operationId: POST_ModifyTransitGateway
      description: 'Modifies the specified transit gateway. When you modify a transit gateway, the modified options are applied to new transit gateway attachments only. Your existing transit gateway attachments are not modified.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyTransitGatewayResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyTransitGatewayRequest'
      parameters: []
  /?Action=ModifyTransitGatewayPrefixListReference&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifyTransitGatewayPrefixListReference
      operationId: GET_ModifyTransitGatewayPrefixListReference
      description: Modifies a reference (route) to a prefix list in a specified transit gateway route table.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyTransitGatewayPrefixListReferenceResult'
      parameters:
        - name: TransitGatewayRouteTableId
          in: query
          required: true
          description: The ID of the transit gateway route table.
          schema:
            type: string
        - name: PrefixListId
          in: query
          required: true
          description: The ID of the prefix list.
          schema:
            type: string
        - name: TransitGatewayAttachmentId
          in: query
          required: false
          description: The ID of the attachment to which traffic is routed.
          schema:
            type: string
        - name: Blackhole
          in: query
          required: false
          description: Indicates whether to drop traffic that matches this route.
          schema:
            type: boolean
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyTransitGatewayPrefixListReference
      operationId: POST_ModifyTransitGatewayPrefixListReference
      description: Modifies a reference (route) to a prefix list in a specified transit gateway route table.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyTransitGatewayPrefixListReferenceResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyTransitGatewayPrefixListReferenceRequest'
      parameters: []
  /?Action=ModifyTransitGatewayVpcAttachment&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifyTransitGatewayVpcAttachment
      operationId: GET_ModifyTransitGatewayVpcAttachment
      description: Modifies the specified VPC attachment.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyTransitGatewayVpcAttachmentResult'
      parameters:
        - name: TransitGatewayAttachmentId
          in: query
          required: true
          description: The ID of the attachment.
          schema:
            type: string
        - name: AddSubnetIds
          in: query
          required: false
          description: The IDs of one or more subnets to add. You can specify at most one subnet per Availability Zone.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/SubnetId'
                - xml:
                    name: item
        - name: RemoveSubnetIds
          in: query
          required: false
          description: The IDs of one or more subnets to remove.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/SubnetId'
                - xml:
                    name: item
        - name: Options
          in: query
          required: false
          description: The new VPC attachment options.
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/ApplianceModeSupportValue'
                  - description: 'Enable or disable support for appliance mode. If enabled, a traffic flow between a source and destination uses the same Availability Zone for the VPC attachment for the lifetime of that flow. The default is <code>disable</code>.'
            description: Describes the options for a VPC attachment.
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyTransitGatewayVpcAttachment
      operationId: POST_ModifyTransitGatewayVpcAttachment
      description: Modifies the specified VPC attachment.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyTransitGatewayVpcAttachmentResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyTransitGatewayVpcAttachmentRequest'
      parameters: []
  /?Action=ModifyVolume&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifyVolume
      operationId: GET_ModifyVolume
      description: '<p>You can modify several parameters of an existing EBS volume, including volume size, volume type, and IOPS capacity. If your EBS volume is attached to a current-generation EC2 instance type, you might be able to apply these changes without stopping the instance or detaching the volume from it. For more information about modifying EBS volumes, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-modify-volume.html">Amazon EBS Elastic Volumes</a> (Linux instances) or <a href="https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ebs-modify-volume.html">Amazon EBS Elastic Volumes</a> (Windows instances).</p> <p>When you complete a resize operation on your volume, you need to extend the volume''s file-system size to take advantage of the new storage capacity. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-expand-volume.html#recognize-expanded-volume-linux">Extend a Linux file system</a> or <a href="https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ebs-expand-volume.html#recognize-expanded-volume-windows">Extend a Windows file system</a>.</p> <p> You can use CloudWatch Events to check the status of a modification to an EBS volume. For information about CloudWatch Events, see the <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/">Amazon CloudWatch Events User Guide</a>. You can also track the status of a modification using <a>DescribeVolumesModifications</a>. For information about tracking status changes using either method, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-volume-modifications.html">Monitor the progress of volume modifications</a>.</p> <p>With previous-generation instance types, resizing an EBS volume might require detaching and reattaching the volume or stopping and restarting the instance.</p> <p>After modifying a volume, you must wait at least six hours and ensure that the volume is in the <code>in-use</code> or <code>available</code> state before you can modify the same volume. This is sometimes referred to as a cooldown period.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyVolumeResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: VolumeId
          in: query
          required: true
          description: The ID of the volume.
          schema:
            type: string
        - name: Size
          in: query
          required: false
          description: '<p>The target size of the volume, in GiB. The target volume size must be greater than or equal to the existing size of the volume.</p> <p>The following are the supported volumes sizes for each volume type:</p> <ul> <li> <p> <code>gp2</code> and <code>gp3</code>: 1-16,384</p> </li> <li> <p> <code>io1</code> and <code>io2</code>: 4-16,384</p> </li> <li> <p> <code>st1</code> and <code>sc1</code>: 125-16,384</p> </li> <li> <p> <code>standard</code>: 1-1,024</p> </li> </ul> <p>Default: The existing size is retained.</p>'
          schema:
            type: integer
        - name: VolumeType
          in: query
          required: false
          description: '<p>The target EBS volume type of the volume. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html">Amazon EBS volume types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>Default: The existing type is retained.</p>'
          schema:
            type: string
            enum:
              - standard
              - io1
              - io2
              - gp2
              - sc1
              - st1
              - gp3
        - name: Iops
          in: query
          required: false
          description: '<p>The target IOPS rate of the volume. This parameter is valid only for <code>gp3</code>, <code>io1</code>, and <code>io2</code> volumes.</p> <p>The following are the supported values for each volume type:</p> <ul> <li> <p> <code>gp3</code>: 3,000-16,000 IOPS</p> </li> <li> <p> <code>io1</code>: 100-64,000 IOPS</p> </li> <li> <p> <code>io2</code>: 100-64,000 IOPS</p> </li> </ul> <p>Default: The existing value is retained if you keep the same volume type. If you change the volume type to <code>io1</code>, <code>io2</code>, or <code>gp3</code>, the default is 3,000.</p>'
          schema:
            type: integer
        - name: Throughput
          in: query
          required: false
          description: '<p>The target throughput of the volume, in MiB/s. This parameter is valid only for <code>gp3</code> volumes. The maximum value is 1,000.</p> <p>Default: The existing value is retained if the source and target volume type is <code>gp3</code>. Otherwise, the default value is 125.</p> <p>Valid Range: Minimum value of 125. Maximum value of 1000.</p>'
          schema:
            type: integer
        - name: MultiAttachEnabled
          in: query
          required: false
          description: 'Specifies whether to enable Amazon EBS Multi-Attach. If you enable Multi-Attach, you can attach the volume to up to 16 <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances"> Nitro-based instances</a> in the same Availability Zone. This parameter is supported with <code>io1</code> and <code>io2</code> volumes only. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-volumes-multi.html"> Amazon EBS Multi-Attach</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyVolume
      operationId: POST_ModifyVolume
      description: '<p>You can modify several parameters of an existing EBS volume, including volume size, volume type, and IOPS capacity. If your EBS volume is attached to a current-generation EC2 instance type, you might be able to apply these changes without stopping the instance or detaching the volume from it. For more information about modifying EBS volumes, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-modify-volume.html">Amazon EBS Elastic Volumes</a> (Linux instances) or <a href="https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ebs-modify-volume.html">Amazon EBS Elastic Volumes</a> (Windows instances).</p> <p>When you complete a resize operation on your volume, you need to extend the volume''s file-system size to take advantage of the new storage capacity. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-expand-volume.html#recognize-expanded-volume-linux">Extend a Linux file system</a> or <a href="https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ebs-expand-volume.html#recognize-expanded-volume-windows">Extend a Windows file system</a>.</p> <p> You can use CloudWatch Events to check the status of a modification to an EBS volume. For information about CloudWatch Events, see the <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/">Amazon CloudWatch Events User Guide</a>. You can also track the status of a modification using <a>DescribeVolumesModifications</a>. For information about tracking status changes using either method, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-volume-modifications.html">Monitor the progress of volume modifications</a>.</p> <p>With previous-generation instance types, resizing an EBS volume might require detaching and reattaching the volume or stopping and restarting the instance.</p> <p>After modifying a volume, you must wait at least six hours and ensure that the volume is in the <code>in-use</code> or <code>available</code> state before you can modify the same volume. This is sometimes referred to as a cooldown period.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyVolumeResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyVolumeRequest'
      parameters: []
  /?Action=ModifyVolumeAttribute&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifyVolumeAttribute
      operationId: GET_ModifyVolumeAttribute
      description: '<p>Modifies a volume attribute.</p> <p>By default, all I/O operations for the volume are suspended when the data on the volume is determined to be potentially inconsistent, to prevent undetectable, latent data corruption. The I/O access to the volume can be resumed by first enabling I/O access and then checking the data consistency on your volume.</p> <p>You can change the default behavior to resume I/O operations. We recommend that you change this only for boot volumes or for volumes that are stateless or disposable.</p>'
      responses:
        '200':
          description: Success
      parameters:
        - name: AutoEnableIO
          in: query
          required: false
          description: Indicates whether the volume should be auto-enabled for I/O operations.
          schema:
            type: object
            properties:
              value:
                allOf:
                  - $ref: '#/components/schemas/Boolean'
                  - description: The attribute value. The valid values are <code>true</code> or <code>false</code>.
            description: Describes a value for a resource attribute that is a Boolean value.
        - name: VolumeId
          in: query
          required: true
          description: The ID of the volume.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyVolumeAttribute
      operationId: POST_ModifyVolumeAttribute
      description: '<p>Modifies a volume attribute.</p> <p>By default, all I/O operations for the volume are suspended when the data on the volume is determined to be potentially inconsistent, to prevent undetectable, latent data corruption. The I/O access to the volume can be resumed by first enabling I/O access and then checking the data consistency on your volume.</p> <p>You can change the default behavior to resume I/O operations. We recommend that you change this only for boot volumes or for volumes that are stateless or disposable.</p>'
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyVolumeAttributeRequest'
      parameters: []
  /?Action=ModifyVpcAttribute&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifyVpcAttribute
      operationId: GET_ModifyVpcAttribute
      description: Modifies the specified attribute of the specified VPC.
      responses:
        '200':
          description: Success
      parameters:
        - name: EnableDnsHostnames
          in: query
          required: false
          description: '<p>Indicates whether the instances launched in the VPC get DNS hostnames. If enabled, instances in the VPC get DNS hostnames; otherwise, they do not.</p> <p>You cannot modify the DNS resolution and DNS hostnames attributes in the same request. Use separate requests for each attribute. You can only enable DNS hostnames if you''ve enabled DNS support.</p>'
          schema:
            type: object
            properties:
              value:
                allOf:
                  - $ref: '#/components/schemas/Boolean'
                  - description: The attribute value. The valid values are <code>true</code> or <code>false</code>.
            description: Describes a value for a resource attribute that is a Boolean value.
        - name: EnableDnsSupport
          in: query
          required: false
          description: '<p>Indicates whether the DNS resolution is supported for the VPC. If enabled, queries to the Amazon provided DNS server at the 169.254.169.253 IP address, or the reserved IP address at the base of the VPC network range "plus two" succeed. If disabled, the Amazon provided DNS service in the VPC that resolves public DNS hostnames to IP addresses is not enabled.</p> <p>You cannot modify the DNS resolution and DNS hostnames attributes in the same request. Use separate requests for each attribute.</p>'
          schema:
            type: object
            properties:
              value:
                allOf:
                  - $ref: '#/components/schemas/Boolean'
                  - description: The attribute value. The valid values are <code>true</code> or <code>false</code>.
            description: Describes a value for a resource attribute that is a Boolean value.
        - name: VpcId
          in: query
          required: true
          description: The ID of the VPC.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyVpcAttribute
      operationId: POST_ModifyVpcAttribute
      description: Modifies the specified attribute of the specified VPC.
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyVpcAttributeRequest'
      parameters: []
  /?Action=ModifyVpcEndpoint&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifyVpcEndpoint
      operationId: GET_ModifyVpcEndpoint
      description: 'Modifies attributes of a specified VPC endpoint. The attributes that you can modify depend on the type of VPC endpoint (interface, gateway, or Gateway Load Balancer). For more information, see the <a href="https://docs.aws.amazon.com/vpc/latest/privatelink/">Amazon Web Services PrivateLink Guide</a>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyVpcEndpointResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: VpcEndpointId
          in: query
          required: true
          description: The ID of the endpoint.
          schema:
            type: string
        - name: ResetPolicy
          in: query
          required: false
          description: (Gateway endpoint) Specify <code>true</code> to reset the policy document to the default policy. The default policy allows full access to the service.
          schema:
            type: boolean
        - name: PolicyDocument
          in: query
          required: false
          description: (Interface and gateway endpoints) A policy to attach to the endpoint that controls access to the service. The policy must be in valid JSON format.
          schema:
            type: string
        - name: AddRouteTableId
          in: query
          required: false
          description: (Gateway endpoint) One or more route tables IDs to associate with the endpoint.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/RouteTableId'
                - xml:
                    name: item
        - name: RemoveRouteTableId
          in: query
          required: false
          description: (Gateway endpoint) One or more route table IDs to disassociate from the endpoint.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/RouteTableId'
                - xml:
                    name: item
        - name: AddSubnetId
          in: query
          required: false
          description: '(Interface and Gateway Load Balancer endpoints) One or more subnet IDs in which to serve the endpoint. For a Gateway Load Balancer endpoint, you can specify only one subnet.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/SubnetId'
                - xml:
                    name: item
        - name: RemoveSubnetId
          in: query
          required: false
          description: (Interface endpoint) One or more subnets IDs in which to remove the endpoint.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/SubnetId'
                - xml:
                    name: item
        - name: AddSecurityGroupId
          in: query
          required: false
          description: (Interface endpoint) One or more security group IDs to associate with the network interface.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/SecurityGroupId'
                - xml:
                    name: item
        - name: RemoveSecurityGroupId
          in: query
          required: false
          description: (Interface endpoint) One or more security group IDs to disassociate from the network interface.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/SecurityGroupId'
                - xml:
                    name: item
        - name: IpAddressType
          in: query
          required: false
          description: The IP address type for the endpoint.
          schema:
            type: string
            enum:
              - ipv4
              - dualstack
              - ipv6
        - name: DnsOptions
          in: query
          required: false
          description: The DNS options for the endpoint.
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/DnsRecordIpType'
                  - description: The DNS records created for the endpoint.
            description: Describes the DNS options for an endpoint.
        - name: PrivateDnsEnabled
          in: query
          required: false
          description: (Interface endpoint) Indicates whether a private hosted zone is associated with the VPC.
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyVpcEndpoint
      operationId: POST_ModifyVpcEndpoint
      description: 'Modifies attributes of a specified VPC endpoint. The attributes that you can modify depend on the type of VPC endpoint (interface, gateway, or Gateway Load Balancer). For more information, see the <a href="https://docs.aws.amazon.com/vpc/latest/privatelink/">Amazon Web Services PrivateLink Guide</a>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyVpcEndpointResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyVpcEndpointRequest'
      parameters: []
  /?Action=ModifyVpcEndpointConnectionNotification&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifyVpcEndpointConnectionNotification
      operationId: GET_ModifyVpcEndpointConnectionNotification
      description: 'Modifies a connection notification for VPC endpoint or VPC endpoint service. You can change the SNS topic for the notification, or the events for which to be notified. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyVpcEndpointConnectionNotificationResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: ConnectionNotificationId
          in: query
          required: true
          description: The ID of the notification.
          schema:
            type: string
        - name: ConnectionNotificationArn
          in: query
          required: false
          description: The ARN for the SNS topic for the notification.
          schema:
            type: string
        - name: ConnectionEvents
          in: query
          required: false
          description: 'One or more events for the endpoint. Valid values are <code>Accept</code>, <code>Connect</code>, <code>Delete</code>, and <code>Reject</code>.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyVpcEndpointConnectionNotification
      operationId: POST_ModifyVpcEndpointConnectionNotification
      description: 'Modifies a connection notification for VPC endpoint or VPC endpoint service. You can change the SNS topic for the notification, or the events for which to be notified. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyVpcEndpointConnectionNotificationResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyVpcEndpointConnectionNotificationRequest'
      parameters: []
  /?Action=ModifyVpcEndpointServiceConfiguration&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifyVpcEndpointServiceConfiguration
      operationId: GET_ModifyVpcEndpointServiceConfiguration
      description: '<p>Modifies the attributes of your VPC endpoint service configuration. You can change the Network Load Balancers or Gateway Load Balancers for your service, and you can specify whether acceptance is required for requests to connect to your endpoint service through an interface VPC endpoint.</p> <p>If you set or modify the private DNS name, you must prove that you own the private DNS domain name.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyVpcEndpointServiceConfigurationResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: ServiceId
          in: query
          required: true
          description: The ID of the service.
          schema:
            type: string
        - name: PrivateDnsName
          in: query
          required: false
          description: (Interface endpoint configuration) The private DNS name to assign to the endpoint service.
          schema:
            type: string
        - name: RemovePrivateDnsName
          in: query
          required: false
          description: (Interface endpoint configuration) Removes the private DNS name of the endpoint service.
          schema:
            type: boolean
        - name: AcceptanceRequired
          in: query
          required: false
          description: Indicates whether requests to create an endpoint to your service must be accepted.
          schema:
            type: boolean
        - name: AddNetworkLoadBalancerArn
          in: query
          required: false
          description: The Amazon Resource Names (ARNs) of Network Load Balancers to add to your service configuration.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: item
        - name: RemoveNetworkLoadBalancerArn
          in: query
          required: false
          description: The Amazon Resource Names (ARNs) of Network Load Balancers to remove from your service configuration.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: item
        - name: AddGatewayLoadBalancerArn
          in: query
          required: false
          description: The Amazon Resource Names (ARNs) of Gateway Load Balancers to add to your service configuration.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: item
        - name: RemoveGatewayLoadBalancerArn
          in: query
          required: false
          description: The Amazon Resource Names (ARNs) of Gateway Load Balancers to remove from your service configuration.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: item
        - name: AddSupportedIpAddressType
          in: query
          required: false
          description: The IP address types to add to your service configuration.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: item
        - name: RemoveSupportedIpAddressType
          in: query
          required: false
          description: The IP address types to remove from your service configuration.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyVpcEndpointServiceConfiguration
      operationId: POST_ModifyVpcEndpointServiceConfiguration
      description: '<p>Modifies the attributes of your VPC endpoint service configuration. You can change the Network Load Balancers or Gateway Load Balancers for your service, and you can specify whether acceptance is required for requests to connect to your endpoint service through an interface VPC endpoint.</p> <p>If you set or modify the private DNS name, you must prove that you own the private DNS domain name.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyVpcEndpointServiceConfigurationResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyVpcEndpointServiceConfigurationRequest'
      parameters: []
  /?Action=ModifyVpcEndpointServicePayerResponsibility&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifyVpcEndpointServicePayerResponsibility
      operationId: GET_ModifyVpcEndpointServicePayerResponsibility
      description: Modifies the payer responsibility for your VPC endpoint service.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyVpcEndpointServicePayerResponsibilityResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: ServiceId
          in: query
          required: true
          description: The ID of the service.
          schema:
            type: string
        - name: PayerResponsibility
          in: query
          required: true
          description: 'The entity that is responsible for the endpoint costs. The default is the endpoint owner. If you set the payer responsibility to the service owner, you cannot set it back to the endpoint owner.'
          schema:
            type: string
            enum:
              - ServiceOwner
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyVpcEndpointServicePayerResponsibility
      operationId: POST_ModifyVpcEndpointServicePayerResponsibility
      description: Modifies the payer responsibility for your VPC endpoint service.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyVpcEndpointServicePayerResponsibilityResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyVpcEndpointServicePayerResponsibilityRequest'
      parameters: []
  /?Action=ModifyVpcEndpointServicePermissions&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifyVpcEndpointServicePermissions
      operationId: GET_ModifyVpcEndpointServicePermissions
      description: '<p>Modifies the permissions for your VPC endpoint service. You can add or remove permissions for service consumers (IAM users, IAM roles, and Amazon Web Services accounts) to connect to your endpoint service.</p> <p>If you grant permissions to all principals, the service is public. Any users who know the name of a public service can send a request to attach an endpoint. If the service does not require manual approval, attachments are automatically approved.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyVpcEndpointServicePermissionsResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: ServiceId
          in: query
          required: true
          description: The ID of the service.
          schema:
            type: string
        - name: AddAllowedPrincipals
          in: query
          required: false
          description: 'The Amazon Resource Names (ARN) of one or more principals. Permissions are granted to the principals in this list. To grant permissions to all principals, specify an asterisk (*).'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: item
        - name: RemoveAllowedPrincipals
          in: query
          required: false
          description: The Amazon Resource Names (ARN) of one or more principals. Permissions are revoked for principals in this list.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyVpcEndpointServicePermissions
      operationId: POST_ModifyVpcEndpointServicePermissions
      description: '<p>Modifies the permissions for your VPC endpoint service. You can add or remove permissions for service consumers (IAM users, IAM roles, and Amazon Web Services accounts) to connect to your endpoint service.</p> <p>If you grant permissions to all principals, the service is public. Any users who know the name of a public service can send a request to attach an endpoint. If the service does not require manual approval, attachments are automatically approved.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyVpcEndpointServicePermissionsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyVpcEndpointServicePermissionsRequest'
      parameters: []
  /?Action=ModifyVpcPeeringConnectionOptions&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifyVpcPeeringConnectionOptions
      operationId: GET_ModifyVpcPeeringConnectionOptions
      description: '<p>Modifies the VPC peering connection options on one side of a VPC peering connection. You can do the following:</p> <ul> <li> <p>Enable/disable communication over the peering connection between an EC2-Classic instance that''s linked to your VPC (using ClassicLink) and instances in the peer VPC.</p> </li> <li> <p>Enable/disable communication over the peering connection between instances in your VPC and an EC2-Classic instance that''s linked to the peer VPC.</p> </li> <li> <p>Enable/disable the ability to resolve public DNS hostnames to private IP addresses when queried from instances in the peer VPC.</p> </li> </ul> <p>If the peered VPCs are in the same Amazon Web Services account, you can enable DNS resolution for queries from the local VPC. This ensures that queries from the local VPC resolve to private IP addresses in the peer VPC. This option is not available if the peered VPCs are in different different Amazon Web Services accounts or different Regions. For peered VPCs in different Amazon Web Services accounts, each Amazon Web Services account owner must initiate a separate request to modify the peering connection options. For inter-region peering connections, you must use the Region for the requester VPC to modify the requester VPC peering options and the Region for the accepter VPC to modify the accepter VPC peering options. To verify which VPCs are the accepter and the requester for a VPC peering connection, use the <a>DescribeVpcPeeringConnections</a> command.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyVpcPeeringConnectionOptionsResult'
      parameters:
        - name: AccepterPeeringConnectionOptions
          in: query
          required: false
          description: The VPC peering connection options for the accepter VPC.
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/Boolean'
                  - description: 'If true, enables outbound communication from instances in a local VPC to an EC2-Classic instance that''s linked to a peer VPC using ClassicLink.'
            description: The VPC peering connection options.
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: RequesterPeeringConnectionOptions
          in: query
          required: false
          description: The VPC peering connection options for the requester VPC.
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/Boolean'
                  - description: 'If true, enables outbound communication from instances in a local VPC to an EC2-Classic instance that''s linked to a peer VPC using ClassicLink.'
            description: The VPC peering connection options.
        - name: VpcPeeringConnectionId
          in: query
          required: true
          description: The ID of the VPC peering connection.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyVpcPeeringConnectionOptions
      operationId: POST_ModifyVpcPeeringConnectionOptions
      description: '<p>Modifies the VPC peering connection options on one side of a VPC peering connection. You can do the following:</p> <ul> <li> <p>Enable/disable communication over the peering connection between an EC2-Classic instance that''s linked to your VPC (using ClassicLink) and instances in the peer VPC.</p> </li> <li> <p>Enable/disable communication over the peering connection between instances in your VPC and an EC2-Classic instance that''s linked to the peer VPC.</p> </li> <li> <p>Enable/disable the ability to resolve public DNS hostnames to private IP addresses when queried from instances in the peer VPC.</p> </li> </ul> <p>If the peered VPCs are in the same Amazon Web Services account, you can enable DNS resolution for queries from the local VPC. This ensures that queries from the local VPC resolve to private IP addresses in the peer VPC. This option is not available if the peered VPCs are in different different Amazon Web Services accounts or different Regions. For peered VPCs in different Amazon Web Services accounts, each Amazon Web Services account owner must initiate a separate request to modify the peering connection options. For inter-region peering connections, you must use the Region for the requester VPC to modify the requester VPC peering options and the Region for the accepter VPC to modify the accepter VPC peering options. To verify which VPCs are the accepter and the requester for a VPC peering connection, use the <a>DescribeVpcPeeringConnections</a> command.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyVpcPeeringConnectionOptionsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyVpcPeeringConnectionOptionsRequest'
      parameters: []
  /?Action=ModifyVpcTenancy&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifyVpcTenancy
      operationId: GET_ModifyVpcTenancy
      description: '<p>Modifies the instance tenancy attribute of the specified VPC. You can change the instance tenancy attribute of a VPC to <code>default</code> only. You cannot change the instance tenancy attribute to <code>dedicated</code>.</p> <p>After you modify the tenancy of the VPC, any new instances that you launch into the VPC have a tenancy of <code>default</code>, unless you specify otherwise during launch. The tenancy of any existing instances in the VPC is not affected.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-instance.html">Dedicated Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyVpcTenancyResult'
      parameters:
        - name: VpcId
          in: query
          required: true
          description: The ID of the VPC.
          schema:
            type: string
        - name: InstanceTenancy
          in: query
          required: true
          description: 'The instance tenancy attribute for the VPC. '
          schema:
            type: string
            enum:
              - default
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyVpcTenancy
      operationId: POST_ModifyVpcTenancy
      description: '<p>Modifies the instance tenancy attribute of the specified VPC. You can change the instance tenancy attribute of a VPC to <code>default</code> only. You cannot change the instance tenancy attribute to <code>dedicated</code>.</p> <p>After you modify the tenancy of the VPC, any new instances that you launch into the VPC have a tenancy of <code>default</code>, unless you specify otherwise during launch. The tenancy of any existing instances in the VPC is not affected.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-instance.html">Dedicated Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyVpcTenancyResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyVpcTenancyRequest'
      parameters: []
  /?Action=ModifyVpnConnection&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifyVpnConnection
      operationId: GET_ModifyVpnConnection
      description: '<p>Modifies the customer gateway or the target gateway of an Amazon Web Services Site-to-Site VPN connection. To modify the target gateway, the following migration options are available:</p> <ul> <li> <p>An existing virtual private gateway to a new virtual private gateway</p> </li> <li> <p>An existing virtual private gateway to a transit gateway</p> </li> <li> <p>An existing transit gateway to a new transit gateway</p> </li> <li> <p>An existing transit gateway to a virtual private gateway</p> </li> </ul> <p>Before you perform the migration to the new gateway, you must configure the new gateway. Use <a>CreateVpnGateway</a> to create a virtual private gateway, or <a>CreateTransitGateway</a> to create a transit gateway.</p> <p>This step is required when you migrate from a virtual private gateway with static routes to a transit gateway. </p> <p>You must delete the static routes before you migrate to the new gateway.</p> <p>Keep a copy of the static route before you delete it. You will need to add back these routes to the transit gateway after the VPN connection migration is complete.</p> <p>After you migrate to the new gateway, you might need to modify your VPC route table. Use <a>CreateRoute</a> and <a>DeleteRoute</a> to make the changes described in <a href="https://docs.aws.amazon.com/vpn/latest/s2svpn/modify-vpn-target.html#step-update-routing">Update VPC route tables</a> in the <i>Amazon Web Services Site-to-Site VPN User Guide</i>.</p> <p>When the new gateway is a transit gateway, modify the transit gateway route table to allow traffic between the VPC and the Amazon Web Services Site-to-Site VPN connection. Use <a>CreateTransitGatewayRoute</a> to add the routes.</p> <p> If you deleted VPN static routes, you must add the static routes to the transit gateway route table.</p> <p>After you perform this operation, the VPN endpoint''s IP addresses on the Amazon Web Services side and the tunnel options remain intact. Your Amazon Web Services Site-to-Site VPN connection will be temporarily unavailable for a brief period while we provision the new endpoints.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyVpnConnectionResult'
      parameters:
        - name: VpnConnectionId
          in: query
          required: true
          description: The ID of the VPN connection.
          schema:
            type: string
        - name: TransitGatewayId
          in: query
          required: false
          description: The ID of the transit gateway.
          schema:
            type: string
        - name: CustomerGatewayId
          in: query
          required: false
          description: The ID of the customer gateway at your end of the VPN connection.
          schema:
            type: string
        - name: VpnGatewayId
          in: query
          required: false
          description: The ID of the virtual private gateway at the Amazon Web Services side of the VPN connection.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyVpnConnection
      operationId: POST_ModifyVpnConnection
      description: '<p>Modifies the customer gateway or the target gateway of an Amazon Web Services Site-to-Site VPN connection. To modify the target gateway, the following migration options are available:</p> <ul> <li> <p>An existing virtual private gateway to a new virtual private gateway</p> </li> <li> <p>An existing virtual private gateway to a transit gateway</p> </li> <li> <p>An existing transit gateway to a new transit gateway</p> </li> <li> <p>An existing transit gateway to a virtual private gateway</p> </li> </ul> <p>Before you perform the migration to the new gateway, you must configure the new gateway. Use <a>CreateVpnGateway</a> to create a virtual private gateway, or <a>CreateTransitGateway</a> to create a transit gateway.</p> <p>This step is required when you migrate from a virtual private gateway with static routes to a transit gateway. </p> <p>You must delete the static routes before you migrate to the new gateway.</p> <p>Keep a copy of the static route before you delete it. You will need to add back these routes to the transit gateway after the VPN connection migration is complete.</p> <p>After you migrate to the new gateway, you might need to modify your VPC route table. Use <a>CreateRoute</a> and <a>DeleteRoute</a> to make the changes described in <a href="https://docs.aws.amazon.com/vpn/latest/s2svpn/modify-vpn-target.html#step-update-routing">Update VPC route tables</a> in the <i>Amazon Web Services Site-to-Site VPN User Guide</i>.</p> <p>When the new gateway is a transit gateway, modify the transit gateway route table to allow traffic between the VPC and the Amazon Web Services Site-to-Site VPN connection. Use <a>CreateTransitGatewayRoute</a> to add the routes.</p> <p> If you deleted VPN static routes, you must add the static routes to the transit gateway route table.</p> <p>After you perform this operation, the VPN endpoint''s IP addresses on the Amazon Web Services side and the tunnel options remain intact. Your Amazon Web Services Site-to-Site VPN connection will be temporarily unavailable for a brief period while we provision the new endpoints.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyVpnConnectionResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyVpnConnectionRequest'
      parameters: []
  /?Action=ModifyVpnConnectionOptions&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifyVpnConnectionOptions
      operationId: GET_ModifyVpnConnectionOptions
      description: '<p>Modifies the connection options for your Site-to-Site VPN connection.</p> <p>When you modify the VPN connection options, the VPN endpoint IP addresses on the Amazon Web Services side do not change, and the tunnel options do not change. Your VPN connection will be temporarily unavailable for a brief period while the VPN connection is updated.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyVpnConnectionOptionsResult'
      parameters:
        - name: VpnConnectionId
          in: query
          required: true
          description: 'The ID of the Site-to-Site VPN connection. '
          schema:
            type: string
        - name: LocalIpv4NetworkCidr
          in: query
          required: false
          description: '<p>The IPv4 CIDR on the customer gateway (on-premises) side of the VPN connection.</p> <p>Default: <code>0.0.0.0/0</code> </p>'
          schema:
            type: string
        - name: RemoteIpv4NetworkCidr
          in: query
          required: false
          description: '<p>The IPv4 CIDR on the Amazon Web Services side of the VPN connection.</p> <p>Default: <code>0.0.0.0/0</code> </p>'
          schema:
            type: string
        - name: LocalIpv6NetworkCidr
          in: query
          required: false
          description: '<p>The IPv6 CIDR on the customer gateway (on-premises) side of the VPN connection.</p> <p>Default: <code>::/0</code> </p>'
          schema:
            type: string
        - name: RemoteIpv6NetworkCidr
          in: query
          required: false
          description: '<p>The IPv6 CIDR on the Amazon Web Services side of the VPN connection.</p> <p>Default: <code>::/0</code> </p>'
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyVpnConnectionOptions
      operationId: POST_ModifyVpnConnectionOptions
      description: '<p>Modifies the connection options for your Site-to-Site VPN connection.</p> <p>When you modify the VPN connection options, the VPN endpoint IP addresses on the Amazon Web Services side do not change, and the tunnel options do not change. Your VPN connection will be temporarily unavailable for a brief period while the VPN connection is updated.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyVpnConnectionOptionsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyVpnConnectionOptionsRequest'
      parameters: []
  /?Action=ModifyVpnTunnelCertificate&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifyVpnTunnelCertificate
      operationId: GET_ModifyVpnTunnelCertificate
      description: Modifies the VPN tunnel endpoint certificate.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyVpnTunnelCertificateResult'
      parameters:
        - name: VpnConnectionId
          in: query
          required: true
          description: The ID of the Amazon Web Services Site-to-Site VPN connection.
          schema:
            type: string
        - name: VpnTunnelOutsideIpAddress
          in: query
          required: true
          description: The external IP address of the VPN tunnel.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyVpnTunnelCertificate
      operationId: POST_ModifyVpnTunnelCertificate
      description: Modifies the VPN tunnel endpoint certificate.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyVpnTunnelCertificateResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyVpnTunnelCertificateRequest'
      parameters: []
  /?Action=ModifyVpnTunnelOptions&Version=2016-11-15:
    get:
      x-aws-operation-name: ModifyVpnTunnelOptions
      operationId: GET_ModifyVpnTunnelOptions
      description: 'Modifies the options for a VPN tunnel in an Amazon Web Services Site-to-Site VPN connection. You can modify multiple options for a tunnel in a single request, but you can only modify one tunnel at a time. For more information, see <a href="https://docs.aws.amazon.com/vpn/latest/s2svpn/VPNTunnels.html">Site-to-Site VPN tunnel options for your Site-to-Site VPN connection</a> in the <i>Amazon Web Services Site-to-Site VPN User Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyVpnTunnelOptionsResult'
      parameters:
        - name: VpnConnectionId
          in: query
          required: true
          description: The ID of the Amazon Web Services Site-to-Site VPN connection.
          schema:
            type: string
        - name: VpnTunnelOutsideIpAddress
          in: query
          required: true
          description: The external IP address of the VPN tunnel.
          schema:
            type: string
        - name: TunnelOptions
          in: query
          required: true
          description: The tunnel options to modify.
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: '<p>The action to take after DPD timeout occurs. Specify <code>restart</code> to restart the IKE initiation. Specify <code>clear</code> to end the IKE session.</p> <p>Valid Values: <code>clear</code> | <code>none</code> | <code>restart</code> </p> <p>Default: <code>clear</code> </p>'
              Phase1EncryptionAlgorithm:
                allOf:
                  - $ref: '#/components/schemas/Phase1EncryptionAlgorithmsRequestList'
                  - description: '<p>One or more encryption algorithms that are permitted for the VPN tunnel for phase 1 IKE negotiations.</p> <p>Valid values: <code>AES128</code> | <code>AES256</code> | <code>AES128-GCM-16</code> | <code>AES256-GCM-16</code> </p>'
              Phase2EncryptionAlgorithm:
                allOf:
                  - $ref: '#/components/schemas/Phase2EncryptionAlgorithmsRequestList'
                  - description: '<p>One or more encryption algorithms that are permitted for the VPN tunnel for phase 2 IKE negotiations.</p> <p>Valid values: <code>AES128</code> | <code>AES256</code> | <code>AES128-GCM-16</code> | <code>AES256-GCM-16</code> </p>'
              Phase1IntegrityAlgorithm:
                allOf:
                  - $ref: '#/components/schemas/Phase1IntegrityAlgorithmsRequestList'
                  - description: '<p>One or more integrity algorithms that are permitted for the VPN tunnel for phase 1 IKE negotiations.</p> <p>Valid values: <code>SHA1</code> | <code>SHA2-256</code> | <code>SHA2-384</code> | <code>SHA2-512</code> </p>'
              Phase2IntegrityAlgorithm:
                allOf:
                  - $ref: '#/components/schemas/Phase2IntegrityAlgorithmsRequestList'
                  - description: '<p>One or more integrity algorithms that are permitted for the VPN tunnel for phase 2 IKE negotiations.</p> <p>Valid values: <code>SHA1</code> | <code>SHA2-256</code> | <code>SHA2-384</code> | <code>SHA2-512</code> </p>'
              Phase1DHGroupNumber:
                allOf:
                  - $ref: '#/components/schemas/Phase1DHGroupNumbersRequestList'
                  - description: '<p>One or more Diffie-Hellman group numbers that are permitted for the VPN tunnel for phase 1 IKE negotiations.</p> <p>Valid values: <code>2</code> | <code>14</code> | <code>15</code> | <code>16</code> | <code>17</code> | <code>18</code> | <code>19</code> | <code>20</code> | <code>21</code> | <code>22</code> | <code>23</code> | <code>24</code> </p>'
              Phase2DHGroupNumber:
                allOf:
                  - $ref: '#/components/schemas/Phase2DHGroupNumbersRequestList'
                  - description: '<p>One or more Diffie-Hellman group numbers that are permitted for the VPN tunnel for phase 2 IKE negotiations.</p> <p>Valid values: <code>2</code> | <code>5</code> | <code>14</code> | <code>15</code> | <code>16</code> | <code>17</code> | <code>18</code> | <code>19</code> | <code>20</code> | <code>21</code> | <code>22</code> | <code>23</code> | <code>24</code> </p>'
              IKEVersion:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: '<p>The action to take when the establishing the tunnel for the VPN connection. By default, your customer gateway device must initiate the IKE negotiation and bring up the tunnel. Specify <code>start</code> for Amazon Web Services to initiate the IKE negotiation.</p> <p>Valid Values: <code>add</code> | <code>start</code> </p> <p>Default: <code>add</code> </p>'
            description: The Amazon Web Services Site-to-Site VPN tunnel options to modify.
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyVpnTunnelOptions
      operationId: POST_ModifyVpnTunnelOptions
      description: 'Modifies the options for a VPN tunnel in an Amazon Web Services Site-to-Site VPN connection. You can modify multiple options for a tunnel in a single request, but you can only modify one tunnel at a time. For more information, see <a href="https://docs.aws.amazon.com/vpn/latest/s2svpn/VPNTunnels.html">Site-to-Site VPN tunnel options for your Site-to-Site VPN connection</a> in the <i>Amazon Web Services Site-to-Site VPN User Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyVpnTunnelOptionsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyVpnTunnelOptionsRequest'
      parameters: []
  /?Action=MonitorInstances&Version=2016-11-15:
    get:
      x-aws-operation-name: MonitorInstances
      operationId: GET_MonitorInstances
      description: '<p>Enables detailed monitoring for a running instance. Otherwise, basic monitoring is enabled. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-cloudwatch.html">Monitor your instances using CloudWatch</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>To disable detailed monitoring, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_UnmonitorInstances.html">UnmonitorInstances</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MonitorInstancesResult'
      parameters:
        - name: InstanceId
          in: query
          required: true
          description: The IDs of the instances.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/InstanceId'
                - xml:
                    name: InstanceId
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: MonitorInstances
      operationId: POST_MonitorInstances
      description: '<p>Enables detailed monitoring for a running instance. Otherwise, basic monitoring is enabled. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-cloudwatch.html">Monitor your instances using CloudWatch</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>To disable detailed monitoring, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_UnmonitorInstances.html">UnmonitorInstances</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MonitorInstancesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/MonitorInstancesRequest'
      parameters: []
  /?Action=MoveAddressToVpc&Version=2016-11-15:
    get:
      x-aws-operation-name: MoveAddressToVpc
      operationId: GET_MoveAddressToVpc
      description: 'Moves an Elastic IP address from the EC2-Classic platform to the EC2-VPC platform. The Elastic IP address must be allocated to your account for more than 24 hours, and it must not be associated with an instance. After the Elastic IP address is moved, it is no longer available for use in the EC2-Classic platform, unless you move it back using the <a>RestoreAddressToClassic</a> request. You cannot move an Elastic IP address that was originally allocated for use in the EC2-VPC platform to the EC2-Classic platform. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MoveAddressToVpcResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: PublicIp
          in: query
          required: true
          description: The Elastic IP address.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: MoveAddressToVpc
      operationId: POST_MoveAddressToVpc
      description: 'Moves an Elastic IP address from the EC2-Classic platform to the EC2-VPC platform. The Elastic IP address must be allocated to your account for more than 24 hours, and it must not be associated with an instance. After the Elastic IP address is moved, it is no longer available for use in the EC2-Classic platform, unless you move it back using the <a>RestoreAddressToClassic</a> request. You cannot move an Elastic IP address that was originally allocated for use in the EC2-VPC platform to the EC2-Classic platform. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MoveAddressToVpcResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/MoveAddressToVpcRequest'
      parameters: []
  /?Action=MoveByoipCidrToIpam&Version=2016-11-15:
    get:
      x-aws-operation-name: MoveByoipCidrToIpam
      operationId: GET_MoveByoipCidrToIpam
      description: '<p>Move an BYOIP IPv4 CIDR to IPAM from a public IPv4 pool.</p> <p>If you already have an IPv4 BYOIP CIDR with Amazon Web Services, you can move the CIDR to IPAM from a public IPv4 pool. You cannot move an IPv6 CIDR to IPAM. If you are bringing a new IP address to Amazon Web Services for the first time, complete the steps in <a href="/vpc/latest/ipam/tutorials-byoip-ipam.html">Tutorial: BYOIP address CIDRs to IPAM</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MoveByoipCidrToIpamResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: Cidr
          in: query
          required: true
          description: The BYOIP CIDR.
          schema:
            type: string
        - name: IpamPoolId
          in: query
          required: true
          description: The IPAM pool ID.
          schema:
            type: string
        - name: IpamPoolOwner
          in: query
          required: true
          description: The Amazon Web Services account ID of the owner of the IPAM pool.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: MoveByoipCidrToIpam
      operationId: POST_MoveByoipCidrToIpam
      description: '<p>Move an BYOIP IPv4 CIDR to IPAM from a public IPv4 pool.</p> <p>If you already have an IPv4 BYOIP CIDR with Amazon Web Services, you can move the CIDR to IPAM from a public IPv4 pool. You cannot move an IPv6 CIDR to IPAM. If you are bringing a new IP address to Amazon Web Services for the first time, complete the steps in <a href="/vpc/latest/ipam/tutorials-byoip-ipam.html">Tutorial: BYOIP address CIDRs to IPAM</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MoveByoipCidrToIpamResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/MoveByoipCidrToIpamRequest'
      parameters: []
  /?Action=ProvisionByoipCidr&Version=2016-11-15:
    get:
      x-aws-operation-name: ProvisionByoipCidr
      operationId: GET_ProvisionByoipCidr
      description: '<p>Provisions an IPv4 or IPv6 address range for use with your Amazon Web Services resources through bring your own IP addresses (BYOIP) and creates a corresponding address pool. After the address range is provisioned, it is ready to be advertised using <a>AdvertiseByoipCidr</a>.</p> <p>Amazon Web Services verifies that you own the address range and are authorized to advertise it. You must ensure that the address range is registered to you and that you created an RPKI ROA to authorize Amazon ASNs 16509 and 14618 to advertise the address range. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-byoip.html">Bring your own IP addresses (BYOIP)</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>Provisioning an address range is an asynchronous operation, so the call returns immediately, but the address range is not ready to use until its status changes from <code>pending-provision</code> to <code>provisioned</code>. To monitor the status of an address range, use <a>DescribeByoipCidrs</a>. To allocate an Elastic IP address from your IPv4 address pool, use <a>AllocateAddress</a> with either the specific address from the address pool or the ID of the address pool.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ProvisionByoipCidrResult'
      parameters:
        - name: Cidr
          in: query
          required: true
          description: 'The public IPv4 or IPv6 address range, in CIDR notation. The most specific IPv4 prefix that you can specify is /24. The most specific IPv6 prefix you can specify is /56. The address range cannot overlap with another address range that you''ve brought to this or another Region.'
          schema:
            type: string
        - name: CidrAuthorizationContext
          in: query
          required: false
          description: A signed document that proves that you are authorized to bring the specified IP address range to Amazon using BYOIP.
          schema:
            type: object
            required:
              - Message
              - Signature
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: The signed authorization message for the prefix and account.
            description: 'Provides authorization for Amazon to bring a specific IP address range to a specific Amazon Web Services account using bring your own IP addresses (BYOIP). For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-byoip.html#prepare-for-byoip">Configuring your BYOIP address range</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.'
        - name: PubliclyAdvertisable
          in: query
          required: false
          description: '<p>(IPv6 only) Indicate whether the address range will be publicly advertised to the internet.</p> <p>Default: true</p>'
          schema:
            type: boolean
        - name: Description
          in: query
          required: false
          description: A description for the address range and the address pool.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: PoolTagSpecification
          in: query
          required: false
          description: The tags to apply to the address pool.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
        - name: MultiRegion
          in: query
          required: false
          description: Reserved.
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ProvisionByoipCidr
      operationId: POST_ProvisionByoipCidr
      description: '<p>Provisions an IPv4 or IPv6 address range for use with your Amazon Web Services resources through bring your own IP addresses (BYOIP) and creates a corresponding address pool. After the address range is provisioned, it is ready to be advertised using <a>AdvertiseByoipCidr</a>.</p> <p>Amazon Web Services verifies that you own the address range and are authorized to advertise it. You must ensure that the address range is registered to you and that you created an RPKI ROA to authorize Amazon ASNs 16509 and 14618 to advertise the address range. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-byoip.html">Bring your own IP addresses (BYOIP)</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>Provisioning an address range is an asynchronous operation, so the call returns immediately, but the address range is not ready to use until its status changes from <code>pending-provision</code> to <code>provisioned</code>. To monitor the status of an address range, use <a>DescribeByoipCidrs</a>. To allocate an Elastic IP address from your IPv4 address pool, use <a>AllocateAddress</a> with either the specific address from the address pool or the ID of the address pool.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ProvisionByoipCidrResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ProvisionByoipCidrRequest'
      parameters: []
  /?Action=ProvisionIpamPoolCidr&Version=2016-11-15:
    get:
      x-aws-operation-name: ProvisionIpamPoolCidr
      operationId: GET_ProvisionIpamPoolCidr
      description: '<p>Provision a CIDR to an IPAM pool. You can use this action to provision new CIDRs to a top-level pool or to transfer a CIDR from a top-level pool to a pool within it.</p> <p>For more information, see <a href="/vpc/latest/ipam/prov-cidr-ipam.html">Provision CIDRs to pools</a> in the <i>Amazon VPC IPAM User Guide</i>. </p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ProvisionIpamPoolCidrResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: IpamPoolId
          in: query
          required: true
          description: The ID of the IPAM pool to which you want to assign a CIDR.
          schema:
            type: string
        - name: Cidr
          in: query
          required: false
          description: The CIDR you want to assign to the IPAM pool.
          schema:
            type: string
        - name: CidrAuthorizationContext
          in: query
          required: false
          description: A signed document that proves that you are authorized to bring a specified IP address range to Amazon using BYOIP. This option applies to public pools only.
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: The signed authorization message for the prefix and account.
            description: A signed document that proves that you are authorized to bring the specified IP address range to Amazon using BYOIP.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ProvisionIpamPoolCidr
      operationId: POST_ProvisionIpamPoolCidr
      description: '<p>Provision a CIDR to an IPAM pool. You can use this action to provision new CIDRs to a top-level pool or to transfer a CIDR from a top-level pool to a pool within it.</p> <p>For more information, see <a href="/vpc/latest/ipam/prov-cidr-ipam.html">Provision CIDRs to pools</a> in the <i>Amazon VPC IPAM User Guide</i>. </p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ProvisionIpamPoolCidrResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ProvisionIpamPoolCidrRequest'
      parameters: []
  /?Action=ProvisionPublicIpv4PoolCidr&Version=2016-11-15:
    get:
      x-aws-operation-name: ProvisionPublicIpv4PoolCidr
      operationId: GET_ProvisionPublicIpv4PoolCidr
      description: '<p>Provision a CIDR to a public IPv4 pool.</p> <p>For more information about IPAM, see <a href="/vpc/latest/ipam/what-is-it-ipam.html">What is IPAM?</a> in the <i>Amazon VPC IPAM User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ProvisionPublicIpv4PoolCidrResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: IpamPoolId
          in: query
          required: true
          description: The ID of the IPAM pool you would like to use to allocate this CIDR.
          schema:
            type: string
        - name: PoolId
          in: query
          required: true
          description: The ID of the public IPv4 pool you would like to use for this CIDR.
          schema:
            type: string
        - name: NetmaskLength
          in: query
          required: true
          description: The netmask length of the CIDR you would like to allocate to the public IPv4 pool.
          schema:
            type: integer
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ProvisionPublicIpv4PoolCidr
      operationId: POST_ProvisionPublicIpv4PoolCidr
      description: '<p>Provision a CIDR to a public IPv4 pool.</p> <p>For more information about IPAM, see <a href="/vpc/latest/ipam/what-is-it-ipam.html">What is IPAM?</a> in the <i>Amazon VPC IPAM User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ProvisionPublicIpv4PoolCidrResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ProvisionPublicIpv4PoolCidrRequest'
      parameters: []
  /?Action=PurchaseHostReservation&Version=2016-11-15:
    get:
      x-aws-operation-name: PurchaseHostReservation
      operationId: GET_PurchaseHostReservation
      description: Purchase a reservation with configurations that match those of your Dedicated Host. You must have active Dedicated Hosts in your account before you purchase a reservation. This action results in the specified reservation being purchased and charged to your account.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PurchaseHostReservationResult'
      parameters:
        - name: ClientToken
          in: query
          required: false
          description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.'
          schema:
            type: string
        - name: CurrencyCode
          in: query
          required: false
          description: 'The currency in which the <code>totalUpfrontPrice</code>, <code>LimitPrice</code>, and <code>totalHourlyPrice</code> amounts are specified. At this time, the only supported currency is <code>USD</code>.'
          schema:
            type: string
            enum:
              - USD
        - name: HostIdSet
          in: query
          required: true
          description: The IDs of the Dedicated Hosts with which the reservation will be associated.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/DedicatedHostId'
                - xml:
                    name: item
        - name: LimitPrice
          in: query
          required: false
          description: 'The specified limit is checked against the total upfront cost of the reservation (calculated as the offering''s upfront cost multiplied by the host count). If the total upfront cost is greater than the specified price limit, the request fails. This is used to ensure that the purchase does not exceed the expected upfront cost of the purchase. At this time, the only supported currency is <code>USD</code>. For example, to indicate a limit price of USD 100, specify 100.00.'
          schema:
            type: string
        - name: OfferingId
          in: query
          required: true
          description: The ID of the offering.
          schema:
            type: string
        - name: TagSpecification
          in: query
          required: false
          description: The tags to apply to the Dedicated Host Reservation during purchase.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: PurchaseHostReservation
      operationId: POST_PurchaseHostReservation
      description: Purchase a reservation with configurations that match those of your Dedicated Host. You must have active Dedicated Hosts in your account before you purchase a reservation. This action results in the specified reservation being purchased and charged to your account.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PurchaseHostReservationResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/PurchaseHostReservationRequest'
      parameters: []
  /?Action=PurchaseReservedInstancesOffering&Version=2016-11-15:
    get:
      x-aws-operation-name: PurchaseReservedInstancesOffering
      operationId: GET_PurchaseReservedInstancesOffering
      description: '<p>Purchases a Reserved Instance for use with your account. With Reserved Instances, you pay a lower hourly rate compared to On-Demand instance pricing.</p> <p>Use <a>DescribeReservedInstancesOfferings</a> to get a list of Reserved Instance offerings that match your specifications. After you''ve purchased a Reserved Instance, you can check for your new Reserved Instance with <a>DescribeReservedInstances</a>.</p> <p>To queue a purchase for a future date and time, specify a purchase time. If you do not specify a purchase time, the default is the current time.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts-on-demand-reserved-instances.html">Reserved Instances</a> and <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved Instance Marketplace</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PurchaseReservedInstancesOfferingResult'
      parameters:
        - name: InstanceCount
          in: query
          required: true
          description: The number of Reserved Instances to purchase.
          schema:
            type: integer
        - name: ReservedInstancesOfferingId
          in: query
          required: true
          description: The ID of the Reserved Instance offering to purchase.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: LimitPrice
          in: query
          required: false
          description: Specified for Reserved Instance Marketplace offerings to limit the total order and ensure that the Reserved Instances are not purchased at unexpected prices.
          schema:
            type: object
            properties:
              amount:
                allOf:
                  - $ref: '#/components/schemas/Double'
                  - description: Used for Reserved Instance Marketplace offerings. Specifies the limit price on the total order (instanceCount * price).
              currencyCode:
                allOf:
                  - $ref: '#/components/schemas/CurrencyCodeValues'
                  - description: 'The currency in which the <code>limitPrice</code> amount is specified. At this time, the only supported currency is <code>USD</code>.'
            description: Describes the limit price of a Reserved Instance offering.
        - name: PurchaseTime
          in: query
          required: false
          description: 'The time at which to purchase the Reserved Instance, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).'
          schema:
            type: string
            format: date-time
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: PurchaseReservedInstancesOffering
      operationId: POST_PurchaseReservedInstancesOffering
      description: '<p>Purchases a Reserved Instance for use with your account. With Reserved Instances, you pay a lower hourly rate compared to On-Demand instance pricing.</p> <p>Use <a>DescribeReservedInstancesOfferings</a> to get a list of Reserved Instance offerings that match your specifications. After you''ve purchased a Reserved Instance, you can check for your new Reserved Instance with <a>DescribeReservedInstances</a>.</p> <p>To queue a purchase for a future date and time, specify a purchase time. If you do not specify a purchase time, the default is the current time.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts-on-demand-reserved-instances.html">Reserved Instances</a> and <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved Instance Marketplace</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PurchaseReservedInstancesOfferingResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/PurchaseReservedInstancesOfferingRequest'
      parameters: []
  /?Action=PurchaseScheduledInstances&Version=2016-11-15:
    get:
      x-aws-operation-name: PurchaseScheduledInstances
      operationId: GET_PurchaseScheduledInstances
      description: '<p>Purchases the Scheduled Instances with the specified schedule.</p> <p>Scheduled Instances enable you to purchase Amazon EC2 compute capacity by the hour for a one-year term. Before you can purchase a Scheduled Instance, you must call <a>DescribeScheduledInstanceAvailability</a> to check for available schedules and obtain a purchase token. After you purchase a Scheduled Instance, you must call <a>RunScheduledInstances</a> during each scheduled time period.</p> <p>After you purchase a Scheduled Instance, you can''t cancel, modify, or resell your purchase.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PurchaseScheduledInstancesResult'
      parameters:
        - name: ClientToken
          in: query
          required: false
          description: 'Unique, case-sensitive identifier that ensures the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.'
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: PurchaseRequest
          in: query
          required: true
          description: The purchase requests.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/PurchaseRequest'
                - xml:
                    name: PurchaseRequest
            minItems: 1
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: PurchaseScheduledInstances
      operationId: POST_PurchaseScheduledInstances
      description: '<p>Purchases the Scheduled Instances with the specified schedule.</p> <p>Scheduled Instances enable you to purchase Amazon EC2 compute capacity by the hour for a one-year term. Before you can purchase a Scheduled Instance, you must call <a>DescribeScheduledInstanceAvailability</a> to check for available schedules and obtain a purchase token. After you purchase a Scheduled Instance, you must call <a>RunScheduledInstances</a> during each scheduled time period.</p> <p>After you purchase a Scheduled Instance, you can''t cancel, modify, or resell your purchase.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PurchaseScheduledInstancesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/PurchaseScheduledInstancesRequest'
      parameters: []
  /?Action=RebootInstances&Version=2016-11-15:
    get:
      x-aws-operation-name: RebootInstances
      operationId: GET_RebootInstances
      description: '<p>Requests a reboot of the specified instances. This operation is asynchronous; it only queues a request to reboot the specified instances. The operation succeeds if the instances are valid and belong to you. Requests to reboot terminated instances are ignored.</p> <p>If an instance does not cleanly shut down within a few minutes, Amazon EC2 performs a hard reboot.</p> <p>For more information about troubleshooting, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-console.html">Troubleshoot an unreachable instance</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
      parameters:
        - name: InstanceId
          in: query
          required: true
          description: The instance IDs.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/InstanceId'
                - xml:
                    name: InstanceId
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: RebootInstances
      operationId: POST_RebootInstances
      description: '<p>Requests a reboot of the specified instances. This operation is asynchronous; it only queues a request to reboot the specified instances. The operation succeeds if the instances are valid and belong to you. Requests to reboot terminated instances are ignored.</p> <p>If an instance does not cleanly shut down within a few minutes, Amazon EC2 performs a hard reboot.</p> <p>For more information about troubleshooting, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-console.html">Troubleshoot an unreachable instance</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RebootInstancesRequest'
      parameters: []
  /?Action=RegisterImage&Version=2016-11-15:
    get:
      x-aws-operation-name: RegisterImage
      operationId: GET_RegisterImage
      description: '<p>Registers an AMI. When you''re creating an AMI, this is the final step you must complete before you can launch an instance from the AMI. For more information about creating AMIs, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/creating-an-ami.html">Creating your own AMIs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <note> <p>For Amazon EBS-backed instances, <a>CreateImage</a> creates and registers the AMI in a single request, so you don''t have to register the AMI yourself.</p> </note> <p>If needed, you can deregister an AMI at any time. Any modifications you make to an AMI backed by an instance store volume invalidates its registration. If you make changes to an image, deregister the previous image and register the new image.</p> <p> <b>Register a snapshot of a root device volume</b> </p> <p>You can use <code>RegisterImage</code> to create an Amazon EBS-backed Linux AMI from a snapshot of a root device volume. You specify the snapshot using a block device mapping. You can''t set the encryption state of the volume using the block device mapping. If the snapshot is encrypted, or encryption by default is enabled, the root volume of an instance launched from the AMI is encrypted.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/creating-an-ami-ebs.html#creating-launching-ami-from-snapshot">Create a Linux AMI from a snapshot</a> and <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AMIEncryption.html">Use encryption with Amazon EBS-backed AMIs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p> <b>Amazon Web Services Marketplace product codes</b> </p> <p>If any snapshots have Amazon Web Services Marketplace product codes, they are copied to the new AMI.</p> <p>Windows and some Linux distributions, such as Red Hat Enterprise Linux (RHEL) and SUSE Linux Enterprise Server (SLES), use the Amazon EC2 billing product code associated with an AMI to verify the subscription status for package updates. To create a new AMI for operating systems that require a billing product code, instead of registering the AMI, do the following to preserve the billing product code association:</p> <ol> <li> <p>Launch an instance from an existing AMI with that billing product code.</p> </li> <li> <p>Customize the instance.</p> </li> <li> <p>Create an AMI from the instance using <a>CreateImage</a>.</p> </li> </ol> <p>If you purchase a Reserved Instance to apply to an On-Demand Instance that was launched from an AMI with a billing product code, make sure that the Reserved Instance has the matching billing product code. If you purchase a Reserved Instance without the matching billing product code, the Reserved Instance will not be applied to the On-Demand Instance. For information about how to obtain the platform details and billing information of an AMI, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-billing-info.html">Understanding AMI billing</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RegisterImageResult'
      parameters:
        - name: ImageLocation
          in: query
          required: false
          description: 'The full path to your AMI manifest in Amazon S3 storage. The specified bucket must have the <code>aws-exec-read</code> canned access control list (ACL) to ensure that it can be accessed by Amazon EC2. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl">Canned ACLs</a> in the <i>Amazon S3 Service Developer Guide</i>.'
          schema:
            type: string
        - name: Architecture
          in: query
          required: false
          description: '<p>The architecture of the AMI.</p> <p>Default: For Amazon EBS-backed AMIs, <code>i386</code>. For instance store-backed AMIs, the architecture specified in the manifest file.</p>'
          schema:
            type: string
            enum:
              - i386
              - x86_64
              - arm64
              - x86_64_mac
        - name: BlockDeviceMapping
          in: query
          required: false
          description: '<p>The block device mapping entries.</p> <p>If you specify an Amazon EBS volume using the ID of an Amazon EBS snapshot, you can''t specify the encryption state of the volume.</p> <p>If you create an AMI on an Outpost, then all backing snapshots must be on the same Outpost or in the Region of that Outpost. AMIs on an Outpost that include local snapshots can be used to launch instances on the same Outpost only. For more information, <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshots-outposts.html#ami"> Amazon EBS local snapshots on Outposts</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/BlockDeviceMapping'
                - xml:
                    name: BlockDeviceMapping
        - name: Description
          in: query
          required: false
          description: A description for your AMI.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: EnaSupport
          in: query
          required: false
          description: <p>Set to <code>true</code> to enable enhanced networking with ENA for the AMI and any instances that you launch from the AMI.</p> <p>This option is supported only for HVM AMIs. Specifying this option with a PV AMI can make instances launched from the AMI unreachable.</p>
          schema:
            type: boolean
        - name: KernelId
          in: query
          required: false
          description: The ID of the kernel.
          schema:
            type: string
        - name: Name
          in: query
          required: true
          description: '<p>A name for your AMI.</p> <p>Constraints: 3-128 alphanumeric characters, parentheses (()), square brackets ([]), spaces ( ), periods (.), slashes (/), dashes (-), single quotes (''), at-signs (@), or underscores(_)</p>'
          schema:
            type: string
        - name: BillingProduct
          in: query
          required: false
          description: 'The billing product codes. Your account must be authorized to specify billing product codes. Otherwise, you can use the Amazon Web Services Marketplace to bill for the use of an AMI.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: item
        - name: RamdiskId
          in: query
          required: false
          description: The ID of the RAM disk.
          schema:
            type: string
        - name: RootDeviceName
          in: query
          required: false
          description: 'The device name of the root device volume (for example, <code>/dev/sda1</code>).'
          schema:
            type: string
        - name: SriovNetSupport
          in: query
          required: false
          description: <p>Set to <code>simple</code> to enable enhanced networking with the Intel 82599 Virtual Function interface for the AMI and any instances that you launch from the AMI.</p> <p>There is no way to disable <code>sriovNetSupport</code> at this time.</p> <p>This option is supported only for HVM AMIs. Specifying this option with a PV AMI can make instances launched from the AMI unreachable.</p>
          schema:
            type: string
        - name: VirtualizationType
          in: query
          required: false
          description: '<p>The type of virtualization (<code>hvm</code> | <code>paravirtual</code>).</p> <p>Default: <code>paravirtual</code> </p>'
          schema:
            type: string
        - name: BootMode
          in: query
          required: false
          description: 'The boot mode of the AMI. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html">Boot modes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.'
          schema:
            type: string
            enum:
              - legacy-bios
              - uefi
        - name: TpmSupport
          in: query
          required: false
          description: 'Set to <code>v2.0</code> to enable Trusted Platform Module (TPM) support. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nitrotpm.html">NitroTPM</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.'
          schema:
            type: string
            enum:
              - v2.0
        - name: UefiData
          in: query
          required: false
          description: 'Base64 representation of the non-volatile UEFI variable store. To retrieve the UEFI data, use the <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetInstanceUefiData">GetInstanceUefiData</a> command. You can inspect and modify the UEFI data by using the <a href="https://github.com/awslabs/python-uefivars">python-uefivars tool</a> on GitHub. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/uefi-secure-boot.html">UEFI Secure Boot</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.'
          schema:
            type: string
            minLength: 0
            maxLength: 64000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: RegisterImage
      operationId: POST_RegisterImage
      description: '<p>Registers an AMI. When you''re creating an AMI, this is the final step you must complete before you can launch an instance from the AMI. For more information about creating AMIs, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/creating-an-ami.html">Creating your own AMIs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <note> <p>For Amazon EBS-backed instances, <a>CreateImage</a> creates and registers the AMI in a single request, so you don''t have to register the AMI yourself.</p> </note> <p>If needed, you can deregister an AMI at any time. Any modifications you make to an AMI backed by an instance store volume invalidates its registration. If you make changes to an image, deregister the previous image and register the new image.</p> <p> <b>Register a snapshot of a root device volume</b> </p> <p>You can use <code>RegisterImage</code> to create an Amazon EBS-backed Linux AMI from a snapshot of a root device volume. You specify the snapshot using a block device mapping. You can''t set the encryption state of the volume using the block device mapping. If the snapshot is encrypted, or encryption by default is enabled, the root volume of an instance launched from the AMI is encrypted.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/creating-an-ami-ebs.html#creating-launching-ami-from-snapshot">Create a Linux AMI from a snapshot</a> and <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AMIEncryption.html">Use encryption with Amazon EBS-backed AMIs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p> <b>Amazon Web Services Marketplace product codes</b> </p> <p>If any snapshots have Amazon Web Services Marketplace product codes, they are copied to the new AMI.</p> <p>Windows and some Linux distributions, such as Red Hat Enterprise Linux (RHEL) and SUSE Linux Enterprise Server (SLES), use the Amazon EC2 billing product code associated with an AMI to verify the subscription status for package updates. To create a new AMI for operating systems that require a billing product code, instead of registering the AMI, do the following to preserve the billing product code association:</p> <ol> <li> <p>Launch an instance from an existing AMI with that billing product code.</p> </li> <li> <p>Customize the instance.</p> </li> <li> <p>Create an AMI from the instance using <a>CreateImage</a>.</p> </li> </ol> <p>If you purchase a Reserved Instance to apply to an On-Demand Instance that was launched from an AMI with a billing product code, make sure that the Reserved Instance has the matching billing product code. If you purchase a Reserved Instance without the matching billing product code, the Reserved Instance will not be applied to the On-Demand Instance. For information about how to obtain the platform details and billing information of an AMI, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-billing-info.html">Understanding AMI billing</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RegisterImageResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RegisterImageRequest'
      parameters: []
  /?Action=RegisterInstanceEventNotificationAttributes&Version=2016-11-15:
    get:
      x-aws-operation-name: RegisterInstanceEventNotificationAttributes
      operationId: GET_RegisterInstanceEventNotificationAttributes
      description: '<p>Registers a set of tag keys to include in scheduled event notifications for your resources. </p> <p>To remove tags, use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeregisterInstanceEventNotificationAttributes.html">DeregisterInstanceEventNotificationAttributes</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RegisterInstanceEventNotificationAttributesResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: InstanceTagAttribute
          in: query
          required: false
          description: Information about the tag keys to register.
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/Boolean'
                  - description: Indicates whether to register all tag keys in the current Region. Specify <code>true</code> to register all tag keys.
              InstanceTagKey:
                allOf:
                  - $ref: '#/components/schemas/InstanceTagKeySet'
                  - description: The tag keys to register.
            description: Information about the tag keys to register for the current Region. You can either specify individual tag keys or register all tag keys in the current Region. You must specify either <code>IncludeAllTagsOfInstance</code> or <code>InstanceTagKeys</code> in the request
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: RegisterInstanceEventNotificationAttributes
      operationId: POST_RegisterInstanceEventNotificationAttributes
      description: '<p>Registers a set of tag keys to include in scheduled event notifications for your resources. </p> <p>To remove tags, use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeregisterInstanceEventNotificationAttributes.html">DeregisterInstanceEventNotificationAttributes</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RegisterInstanceEventNotificationAttributesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RegisterInstanceEventNotificationAttributesRequest'
      parameters: []
  /?Action=RegisterTransitGatewayMulticastGroupMembers&Version=2016-11-15:
    get:
      x-aws-operation-name: RegisterTransitGatewayMulticastGroupMembers
      operationId: GET_RegisterTransitGatewayMulticastGroupMembers
      description: '<p>Registers members (network interfaces) with the transit gateway multicast group. A member is a network interface associated with a supported EC2 instance that receives multicast traffic. For information about supported instances, see <a href="https://docs.aws.amazon.com/vpc/latest/tgw/transit-gateway-limits.html#multicast-limits">Multicast Consideration</a> in <i>Amazon VPC Transit Gateways</i>.</p> <p>After you add the members, use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SearchTransitGatewayMulticastGroups.html">SearchTransitGatewayMulticastGroups</a> to verify that the members were added to the transit gateway multicast group.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RegisterTransitGatewayMulticastGroupMembersResult'
      parameters:
        - name: TransitGatewayMulticastDomainId
          in: query
          required: false
          description: The ID of the transit gateway multicast domain.
          schema:
            type: string
        - name: GroupIpAddress
          in: query
          required: false
          description: The IP address assigned to the transit gateway multicast group.
          schema:
            type: string
        - name: NetworkInterfaceIds
          in: query
          required: false
          description: The group members' network interface IDs to register with the transit gateway multicast group.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/NetworkInterfaceId'
                - xml:
                    name: item
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: RegisterTransitGatewayMulticastGroupMembers
      operationId: POST_RegisterTransitGatewayMulticastGroupMembers
      description: '<p>Registers members (network interfaces) with the transit gateway multicast group. A member is a network interface associated with a supported EC2 instance that receives multicast traffic. For information about supported instances, see <a href="https://docs.aws.amazon.com/vpc/latest/tgw/transit-gateway-limits.html#multicast-limits">Multicast Consideration</a> in <i>Amazon VPC Transit Gateways</i>.</p> <p>After you add the members, use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SearchTransitGatewayMulticastGroups.html">SearchTransitGatewayMulticastGroups</a> to verify that the members were added to the transit gateway multicast group.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RegisterTransitGatewayMulticastGroupMembersResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RegisterTransitGatewayMulticastGroupMembersRequest'
      parameters: []
  /?Action=RegisterTransitGatewayMulticastGroupSources&Version=2016-11-15:
    get:
      x-aws-operation-name: RegisterTransitGatewayMulticastGroupSources
      operationId: GET_RegisterTransitGatewayMulticastGroupSources
      description: '<p>Registers sources (network interfaces) with the specified transit gateway multicast group.</p> <p>A multicast source is a network interface attached to a supported instance that sends multicast traffic. For information about supported instances, see <a href="https://docs.aws.amazon.com/vpc/latest/tgw/transit-gateway-limits.html#multicast-limits">Multicast Considerations</a> in <i>Amazon VPC Transit Gateways</i>.</p> <p>After you add the source, use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SearchTransitGatewayMulticastGroups.html">SearchTransitGatewayMulticastGroups</a> to verify that the source was added to the multicast group.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RegisterTransitGatewayMulticastGroupSourcesResult'
      parameters:
        - name: TransitGatewayMulticastDomainId
          in: query
          required: false
          description: The ID of the transit gateway multicast domain.
          schema:
            type: string
        - name: GroupIpAddress
          in: query
          required: false
          description: The IP address assigned to the transit gateway multicast group.
          schema:
            type: string
        - name: NetworkInterfaceIds
          in: query
          required: false
          description: The group sources' network interface IDs to register with the transit gateway multicast group.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/NetworkInterfaceId'
                - xml:
                    name: item
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: RegisterTransitGatewayMulticastGroupSources
      operationId: POST_RegisterTransitGatewayMulticastGroupSources
      description: '<p>Registers sources (network interfaces) with the specified transit gateway multicast group.</p> <p>A multicast source is a network interface attached to a supported instance that sends multicast traffic. For information about supported instances, see <a href="https://docs.aws.amazon.com/vpc/latest/tgw/transit-gateway-limits.html#multicast-limits">Multicast Considerations</a> in <i>Amazon VPC Transit Gateways</i>.</p> <p>After you add the source, use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SearchTransitGatewayMulticastGroups.html">SearchTransitGatewayMulticastGroups</a> to verify that the source was added to the multicast group.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RegisterTransitGatewayMulticastGroupSourcesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RegisterTransitGatewayMulticastGroupSourcesRequest'
      parameters: []
  /?Action=RejectTransitGatewayMulticastDomainAssociations&Version=2016-11-15:
    get:
      x-aws-operation-name: RejectTransitGatewayMulticastDomainAssociations
      operationId: GET_RejectTransitGatewayMulticastDomainAssociations
      description: Rejects a request to associate cross-account subnets with a transit gateway multicast domain.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RejectTransitGatewayMulticastDomainAssociationsResult'
      parameters:
        - name: TransitGatewayMulticastDomainId
          in: query
          required: false
          description: The ID of the transit gateway multicast domain.
          schema:
            type: string
        - name: TransitGatewayAttachmentId
          in: query
          required: false
          description: The ID of the transit gateway attachment.
          schema:
            type: string
        - name: SubnetIds
          in: query
          required: false
          description: The IDs of the subnets to associate with the transit gateway multicast domain.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: item
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: RejectTransitGatewayMulticastDomainAssociations
      operationId: POST_RejectTransitGatewayMulticastDomainAssociations
      description: Rejects a request to associate cross-account subnets with a transit gateway multicast domain.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RejectTransitGatewayMulticastDomainAssociationsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RejectTransitGatewayMulticastDomainAssociationsRequest'
      parameters: []
  /?Action=RejectTransitGatewayPeeringAttachment&Version=2016-11-15:
    get:
      x-aws-operation-name: RejectTransitGatewayPeeringAttachment
      operationId: GET_RejectTransitGatewayPeeringAttachment
      description: Rejects a transit gateway peering attachment request.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RejectTransitGatewayPeeringAttachmentResult'
      parameters:
        - name: TransitGatewayAttachmentId
          in: query
          required: true
          description: The ID of the transit gateway peering attachment.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: RejectTransitGatewayPeeringAttachment
      operationId: POST_RejectTransitGatewayPeeringAttachment
      description: Rejects a transit gateway peering attachment request.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RejectTransitGatewayPeeringAttachmentResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RejectTransitGatewayPeeringAttachmentRequest'
      parameters: []
  /?Action=RejectTransitGatewayVpcAttachment&Version=2016-11-15:
    get:
      x-aws-operation-name: RejectTransitGatewayVpcAttachment
      operationId: GET_RejectTransitGatewayVpcAttachment
      description: <p>Rejects a request to attach a VPC to a transit gateway.</p> <p>The VPC attachment must be in the <code>pendingAcceptance</code> state. Use <a>DescribeTransitGatewayVpcAttachments</a> to view your pending VPC attachment requests. Use <a>AcceptTransitGatewayVpcAttachment</a> to accept a VPC attachment request.</p>
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RejectTransitGatewayVpcAttachmentResult'
      parameters:
        - name: TransitGatewayAttachmentId
          in: query
          required: true
          description: The ID of the attachment.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: RejectTransitGatewayVpcAttachment
      operationId: POST_RejectTransitGatewayVpcAttachment
      description: <p>Rejects a request to attach a VPC to a transit gateway.</p> <p>The VPC attachment must be in the <code>pendingAcceptance</code> state. Use <a>DescribeTransitGatewayVpcAttachments</a> to view your pending VPC attachment requests. Use <a>AcceptTransitGatewayVpcAttachment</a> to accept a VPC attachment request.</p>
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RejectTransitGatewayVpcAttachmentResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RejectTransitGatewayVpcAttachmentRequest'
      parameters: []
  /?Action=RejectVpcEndpointConnections&Version=2016-11-15:
    get:
      x-aws-operation-name: RejectVpcEndpointConnections
      operationId: GET_RejectVpcEndpointConnections
      description: Rejects one or more VPC endpoint connection requests to your VPC endpoint service.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RejectVpcEndpointConnectionsResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: ServiceId
          in: query
          required: true
          description: The ID of the service.
          schema:
            type: string
        - name: VpcEndpointId
          in: query
          required: true
          description: The IDs of one or more VPC endpoints.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/VpcEndpointId'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: RejectVpcEndpointConnections
      operationId: POST_RejectVpcEndpointConnections
      description: Rejects one or more VPC endpoint connection requests to your VPC endpoint service.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RejectVpcEndpointConnectionsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RejectVpcEndpointConnectionsRequest'
      parameters: []
  /?Action=RejectVpcPeeringConnection&Version=2016-11-15:
    get:
      x-aws-operation-name: RejectVpcPeeringConnection
      operationId: GET_RejectVpcPeeringConnection
      description: 'Rejects a VPC peering connection request. The VPC peering connection must be in the <code>pending-acceptance</code> state. Use the <a>DescribeVpcPeeringConnections</a> request to view your outstanding VPC peering connection requests. To delete an active VPC peering connection, or to delete a VPC peering connection request that you initiated, use <a>DeleteVpcPeeringConnection</a>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RejectVpcPeeringConnectionResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: VpcPeeringConnectionId
          in: query
          required: true
          description: The ID of the VPC peering connection.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: RejectVpcPeeringConnection
      operationId: POST_RejectVpcPeeringConnection
      description: 'Rejects a VPC peering connection request. The VPC peering connection must be in the <code>pending-acceptance</code> state. Use the <a>DescribeVpcPeeringConnections</a> request to view your outstanding VPC peering connection requests. To delete an active VPC peering connection, or to delete a VPC peering connection request that you initiated, use <a>DeleteVpcPeeringConnection</a>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RejectVpcPeeringConnectionResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RejectVpcPeeringConnectionRequest'
      parameters: []
  /?Action=ReleaseAddress&Version=2016-11-15:
    get:
      x-aws-operation-name: ReleaseAddress
      operationId: GET_ReleaseAddress
      description: '<p>Releases the specified Elastic IP address.</p> <p>[EC2-Classic, default VPC] Releasing an Elastic IP address automatically disassociates it from any instance that it''s associated with. To disassociate an Elastic IP address without releasing it, use <a>DisassociateAddress</a>.</p> <p>[Nondefault VPC] You must use <a>DisassociateAddress</a> to disassociate the Elastic IP address before you can release it. Otherwise, Amazon EC2 returns an error (<code>InvalidIPAddress.InUse</code>).</p> <p>After releasing an Elastic IP address, it is released to the IP address pool. Be sure to update your DNS records and any servers or devices that communicate with the address. If you attempt to release an Elastic IP address that you already released, you''ll get an <code>AuthFailure</code> error if the address is already allocated to another Amazon Web Services account.</p> <p>[EC2-VPC] After you release an Elastic IP address for use in a VPC, you might be able to recover it. For more information, see <a>AllocateAddress</a>.</p>'
      responses:
        '200':
          description: Success
      parameters:
        - name: AllocationId
          in: query
          required: false
          description: '[EC2-VPC] The allocation ID. Required for EC2-VPC.'
          schema:
            type: string
        - name: PublicIp
          in: query
          required: false
          description: '[EC2-Classic] The Elastic IP address. Required for EC2-Classic.'
          schema:
            type: string
        - name: NetworkBorderGroup
          in: query
          required: false
          description: '<p>The set of Availability Zones, Local Zones, or Wavelength Zones from which Amazon Web Services advertises IP addresses.</p> <p>If you provide an incorrect network border group, you receive an <code>InvalidAddress.NotFound</code> error.</p> <p>You cannot use a network border group with EC2 Classic. If you attempt this operation on EC2 classic, you receive an <code>InvalidParameterCombination</code> error.</p>'
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ReleaseAddress
      operationId: POST_ReleaseAddress
      description: '<p>Releases the specified Elastic IP address.</p> <p>[EC2-Classic, default VPC] Releasing an Elastic IP address automatically disassociates it from any instance that it''s associated with. To disassociate an Elastic IP address without releasing it, use <a>DisassociateAddress</a>.</p> <p>[Nondefault VPC] You must use <a>DisassociateAddress</a> to disassociate the Elastic IP address before you can release it. Otherwise, Amazon EC2 returns an error (<code>InvalidIPAddress.InUse</code>).</p> <p>After releasing an Elastic IP address, it is released to the IP address pool. Be sure to update your DNS records and any servers or devices that communicate with the address. If you attempt to release an Elastic IP address that you already released, you''ll get an <code>AuthFailure</code> error if the address is already allocated to another Amazon Web Services account.</p> <p>[EC2-VPC] After you release an Elastic IP address for use in a VPC, you might be able to recover it. For more information, see <a>AllocateAddress</a>.</p>'
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ReleaseAddressRequest'
      parameters: []
  /?Action=ReleaseHosts&Version=2016-11-15:
    get:
      x-aws-operation-name: ReleaseHosts
      operationId: GET_ReleaseHosts
      description: '<p>When you no longer want to use an On-Demand Dedicated Host it can be released. On-Demand billing is stopped and the host goes into <code>released</code> state. The host ID of Dedicated Hosts that have been released can no longer be specified in another request, for example, to modify the host. You must stop or terminate all instances on a host before it can be released.</p> <p>When Dedicated Hosts are released, it may take some time for them to stop counting toward your limit and you may receive capacity errors when trying to allocate new Dedicated Hosts. Wait a few minutes and then try again.</p> <p>Released hosts still appear in a <a>DescribeHosts</a> response.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReleaseHostsResult'
      parameters:
        - name: HostId
          in: query
          required: true
          description: The IDs of the Dedicated Hosts to release.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/DedicatedHostId'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ReleaseHosts
      operationId: POST_ReleaseHosts
      description: '<p>When you no longer want to use an On-Demand Dedicated Host it can be released. On-Demand billing is stopped and the host goes into <code>released</code> state. The host ID of Dedicated Hosts that have been released can no longer be specified in another request, for example, to modify the host. You must stop or terminate all instances on a host before it can be released.</p> <p>When Dedicated Hosts are released, it may take some time for them to stop counting toward your limit and you may receive capacity errors when trying to allocate new Dedicated Hosts. Wait a few minutes and then try again.</p> <p>Released hosts still appear in a <a>DescribeHosts</a> response.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReleaseHostsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ReleaseHostsRequest'
      parameters: []
  /?Action=ReleaseIpamPoolAllocation&Version=2016-11-15:
    get:
      x-aws-operation-name: ReleaseIpamPoolAllocation
      operationId: GET_ReleaseIpamPoolAllocation
      description: 'Release an allocation within an IPAM pool. You can only use this action to release manual allocations. To remove an allocation for a resource without deleting the resource, set its monitored state to false using <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyIpamResourceCidr.html">ModifyIpamResourceCidr</a>. For more information, see <a href="/vpc/latest/ipam/release-pool-alloc-ipam.html">Release an allocation</a> in the <i>Amazon VPC IPAM User Guide</i>. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReleaseIpamPoolAllocationResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: IpamPoolId
          in: query
          required: true
          description: The ID of the IPAM pool which contains the allocation you want to release.
          schema:
            type: string
        - name: Cidr
          in: query
          required: true
          description: The CIDR of the allocation you want to release.
          schema:
            type: string
        - name: IpamPoolAllocationId
          in: query
          required: true
          description: The ID of the allocation.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ReleaseIpamPoolAllocation
      operationId: POST_ReleaseIpamPoolAllocation
      description: 'Release an allocation within an IPAM pool. You can only use this action to release manual allocations. To remove an allocation for a resource without deleting the resource, set its monitored state to false using <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyIpamResourceCidr.html">ModifyIpamResourceCidr</a>. For more information, see <a href="/vpc/latest/ipam/release-pool-alloc-ipam.html">Release an allocation</a> in the <i>Amazon VPC IPAM User Guide</i>. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReleaseIpamPoolAllocationResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ReleaseIpamPoolAllocationRequest'
      parameters: []
  /?Action=ReplaceIamInstanceProfileAssociation&Version=2016-11-15:
    get:
      x-aws-operation-name: ReplaceIamInstanceProfileAssociation
      operationId: GET_ReplaceIamInstanceProfileAssociation
      description: <p>Replaces an IAM instance profile for the specified running instance. You can use this action to change the IAM instance profile that's associated with an instance without having to disassociate the existing IAM instance profile first.</p> <p>Use <a>DescribeIamInstanceProfileAssociations</a> to get the association ID.</p>
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplaceIamInstanceProfileAssociationResult'
      parameters:
        - name: IamInstanceProfile
          in: query
          required: true
          description: The IAM instance profile.
          schema:
            type: object
            properties:
              arn:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: The Amazon Resource Name (ARN) of the instance profile.
              name:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: The name of the instance profile.
            description: Describes an IAM instance profile.
        - name: AssociationId
          in: query
          required: true
          description: The ID of the existing IAM instance profile association.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ReplaceIamInstanceProfileAssociation
      operationId: POST_ReplaceIamInstanceProfileAssociation
      description: <p>Replaces an IAM instance profile for the specified running instance. You can use this action to change the IAM instance profile that's associated with an instance without having to disassociate the existing IAM instance profile first.</p> <p>Use <a>DescribeIamInstanceProfileAssociations</a> to get the association ID.</p>
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplaceIamInstanceProfileAssociationResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ReplaceIamInstanceProfileAssociationRequest'
      parameters: []
  /?Action=ReplaceNetworkAclAssociation&Version=2016-11-15:
    get:
      x-aws-operation-name: ReplaceNetworkAclAssociation
      operationId: GET_ReplaceNetworkAclAssociation
      description: '<p>Changes which network ACL a subnet is associated with. By default when you create a subnet, it''s automatically associated with the default network ACL. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_ACLs.html">Network ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p> <p>This is an idempotent operation.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplaceNetworkAclAssociationResult'
      parameters:
        - name: AssociationId
          in: query
          required: true
          description: The ID of the current association between the original network ACL and the subnet.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: NetworkAclId
          in: query
          required: true
          description: The ID of the new network ACL to associate with the subnet.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ReplaceNetworkAclAssociation
      operationId: POST_ReplaceNetworkAclAssociation
      description: '<p>Changes which network ACL a subnet is associated with. By default when you create a subnet, it''s automatically associated with the default network ACL. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_ACLs.html">Network ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p> <p>This is an idempotent operation.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplaceNetworkAclAssociationResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ReplaceNetworkAclAssociationRequest'
      parameters: []
  /?Action=ReplaceNetworkAclEntry&Version=2016-11-15:
    get:
      x-aws-operation-name: ReplaceNetworkAclEntry
      operationId: GET_ReplaceNetworkAclEntry
      description: 'Replaces an entry (rule) in a network ACL. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_ACLs.html">Network ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.'
      responses:
        '200':
          description: Success
      parameters:
        - name: CidrBlock
          in: query
          required: false
          description: 'The IPv4 network range to allow or deny, in CIDR notation (for example <code>172.16.0.0/24</code>).'
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: Egress
          in: query
          required: true
          description: '<p>Indicates whether to replace the egress rule.</p> <p>Default: If no value is specified, we replace the ingress rule.</p>'
          schema:
            type: boolean
        - name: Icmp
          in: query
          required: false
          description: 'ICMP protocol: The ICMP or ICMPv6 type and code. Required if specifying protocol 1 (ICMP) or protocol 58 (ICMPv6) with an IPv6 CIDR block.'
          schema:
            type: object
            properties:
              code:
                allOf:
                  - $ref: '#/components/schemas/Integer'
                  - description: The ICMP code. A value of -1 means all codes for the specified ICMP type.
              type:
                allOf:
                  - $ref: '#/components/schemas/Integer'
                  - description: The ICMP type. A value of -1 means all types.
            description: Describes the ICMP type and code.
        - name: Ipv6CidrBlock
          in: query
          required: false
          description: 'The IPv6 network range to allow or deny, in CIDR notation (for example <code>2001:bd8:1234:1a00::/64</code>).'
          schema:
            type: string
        - name: NetworkAclId
          in: query
          required: true
          description: The ID of the ACL.
          schema:
            type: string
        - name: PortRange
          in: query
          required: false
          description: 'TCP or UDP protocols: The range of ports the rule applies to. Required if specifying protocol 6 (TCP) or 17 (UDP).'
          schema:
            type: object
            properties:
              from:
                allOf:
                  - $ref: '#/components/schemas/Integer'
                  - description: The first port in the range.
              to:
                allOf:
                  - $ref: '#/components/schemas/Integer'
                  - description: The last port in the range.
            description: Describes a range of ports.
        - name: Protocol
          in: query
          required: true
          description: 'The protocol number. A value of "-1" means all protocols. If you specify "-1" or a protocol number other than "6" (TCP), "17" (UDP), or "1" (ICMP), traffic on all ports is allowed, regardless of any ports or ICMP types or codes that you specify. If you specify protocol "58" (ICMPv6) and specify an IPv4 CIDR block, traffic for all ICMP types and codes allowed, regardless of any that you specify. If you specify protocol "58" (ICMPv6) and specify an IPv6 CIDR block, you must specify an ICMP type and code.'
          schema:
            type: string
        - name: RuleAction
          in: query
          required: true
          description: Indicates whether to allow or deny the traffic that matches the rule.
          schema:
            type: string
            enum:
              - allow
              - deny
        - name: RuleNumber
          in: query
          required: true
          description: The rule number of the entry to replace.
          schema:
            type: integer
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ReplaceNetworkAclEntry
      operationId: POST_ReplaceNetworkAclEntry
      description: 'Replaces an entry (rule) in a network ACL. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_ACLs.html">Network ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.'
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ReplaceNetworkAclEntryRequest'
      parameters: []
  /?Action=ReplaceRoute&Version=2016-11-15:
    get:
      x-aws-operation-name: ReplaceRoute
      operationId: GET_ReplaceRoute
      description: '<p>Replaces an existing route within a route table in a VPC. You must provide only one of the following: internet gateway, virtual private gateway, NAT instance, NAT gateway, VPC peering connection, network interface, egress-only internet gateway, or transit gateway.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html">Route tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
      parameters:
        - name: DestinationCidrBlock
          in: query
          required: false
          description: The IPv4 CIDR address block used for the destination match. The value that you provide must match the CIDR of an existing route in the table.
          schema:
            type: string
        - name: DestinationIpv6CidrBlock
          in: query
          required: false
          description: The IPv6 CIDR address block used for the destination match. The value that you provide must match the CIDR of an existing route in the table.
          schema:
            type: string
        - name: DestinationPrefixListId
          in: query
          required: false
          description: The ID of the prefix list for the route.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: VpcEndpointId
          in: query
          required: false
          description: The ID of a VPC endpoint. Supported for Gateway Load Balancer endpoints only.
          schema:
            type: string
        - name: EgressOnlyInternetGatewayId
          in: query
          required: false
          description: '[IPv6 traffic only] The ID of an egress-only internet gateway.'
          schema:
            type: string
        - name: GatewayId
          in: query
          required: false
          description: The ID of an internet gateway or virtual private gateway.
          schema:
            type: string
        - name: InstanceId
          in: query
          required: false
          description: The ID of a NAT instance in your VPC.
          schema:
            type: string
        - name: LocalTarget
          in: query
          required: false
          description: Specifies whether to reset the local route to its default target (<code>local</code>).
          schema:
            type: boolean
        - name: NatGatewayId
          in: query
          required: false
          description: '[IPv4 traffic only] The ID of a NAT gateway.'
          schema:
            type: string
        - name: TransitGatewayId
          in: query
          required: false
          description: The ID of a transit gateway.
          schema:
            type: string
        - name: LocalGatewayId
          in: query
          required: false
          description: The ID of the local gateway.
          schema:
            type: string
        - name: CarrierGatewayId
          in: query
          required: false
          description: '[IPv4 traffic only] The ID of a carrier gateway.'
          schema:
            type: string
        - name: NetworkInterfaceId
          in: query
          required: false
          description: The ID of a network interface.
          schema:
            type: string
        - name: RouteTableId
          in: query
          required: true
          description: The ID of the route table.
          schema:
            type: string
        - name: VpcPeeringConnectionId
          in: query
          required: false
          description: The ID of a VPC peering connection.
          schema:
            type: string
        - name: CoreNetworkArn
          in: query
          required: false
          description: The Amazon Resource Name (ARN) of the core network.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ReplaceRoute
      operationId: POST_ReplaceRoute
      description: '<p>Replaces an existing route within a route table in a VPC. You must provide only one of the following: internet gateway, virtual private gateway, NAT instance, NAT gateway, VPC peering connection, network interface, egress-only internet gateway, or transit gateway.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html">Route tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ReplaceRouteRequest'
      parameters: []
  /?Action=ReplaceRouteTableAssociation&Version=2016-11-15:
    get:
      x-aws-operation-name: ReplaceRouteTableAssociation
      operationId: GET_ReplaceRouteTableAssociation
      description: '<p>Changes the route table associated with a given subnet, internet gateway, or virtual private gateway in a VPC. After the operation completes, the subnet or gateway uses the routes in the new route table. For more information about route tables, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html">Route tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p> <p>You can also use this operation to change which table is the main route table in the VPC. Specify the main route table''s association ID and the route table ID of the new main route table.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplaceRouteTableAssociationResult'
      parameters:
        - name: AssociationId
          in: query
          required: true
          description: The association ID.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: RouteTableId
          in: query
          required: true
          description: The ID of the new route table to associate with the subnet.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ReplaceRouteTableAssociation
      operationId: POST_ReplaceRouteTableAssociation
      description: '<p>Changes the route table associated with a given subnet, internet gateway, or virtual private gateway in a VPC. After the operation completes, the subnet or gateway uses the routes in the new route table. For more information about route tables, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html">Route tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p> <p>You can also use this operation to change which table is the main route table in the VPC. Specify the main route table''s association ID and the route table ID of the new main route table.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplaceRouteTableAssociationResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ReplaceRouteTableAssociationRequest'
      parameters: []
  /?Action=ReplaceTransitGatewayRoute&Version=2016-11-15:
    get:
      x-aws-operation-name: ReplaceTransitGatewayRoute
      operationId: GET_ReplaceTransitGatewayRoute
      description: Replaces the specified route in the specified transit gateway route table.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplaceTransitGatewayRouteResult'
      parameters:
        - name: DestinationCidrBlock
          in: query
          required: true
          description: The CIDR range used for the destination match. Routing decisions are based on the most specific match.
          schema:
            type: string
        - name: TransitGatewayRouteTableId
          in: query
          required: true
          description: The ID of the route table.
          schema:
            type: string
        - name: TransitGatewayAttachmentId
          in: query
          required: false
          description: The ID of the attachment.
          schema:
            type: string
        - name: Blackhole
          in: query
          required: false
          description: Indicates whether traffic matching this route is to be dropped.
          schema:
            type: boolean
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ReplaceTransitGatewayRoute
      operationId: POST_ReplaceTransitGatewayRoute
      description: Replaces the specified route in the specified transit gateway route table.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplaceTransitGatewayRouteResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ReplaceTransitGatewayRouteRequest'
      parameters: []
  /?Action=ReportInstanceStatus&Version=2016-11-15:
    get:
      x-aws-operation-name: ReportInstanceStatus
      operationId: GET_ReportInstanceStatus
      description: '<p>Submits feedback about the status of an instance. The instance must be in the <code>running</code> state. If your experience with the instance differs from the instance status returned by <a>DescribeInstanceStatus</a>, use <a>ReportInstanceStatus</a> to report your experience with the instance. Amazon EC2 collects this information to improve the accuracy of status checks.</p> <p>Use of this action does not change the value returned by <a>DescribeInstanceStatus</a>.</p>'
      responses:
        '200':
          description: Success
      parameters:
        - name: Description
          in: query
          required: false
          description: Descriptive text about the health state of your instance.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: EndTime
          in: query
          required: false
          description: The time at which the reported instance health state ended.
          schema:
            type: string
            format: date-time
        - name: InstanceId
          in: query
          required: true
          description: The instances.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/InstanceId'
                - xml:
                    name: InstanceId
        - name: ReasonCode
          in: query
          required: true
          description: '<p>The reason codes that describe the health state of your instance.</p> <ul> <li> <p> <code>instance-stuck-in-state</code>: My instance is stuck in a state.</p> </li> <li> <p> <code>unresponsive</code>: My instance is unresponsive.</p> </li> <li> <p> <code>not-accepting-credentials</code>: My instance is not accepting my credentials.</p> </li> <li> <p> <code>password-not-available</code>: A password is not available for my instance.</p> </li> <li> <p> <code>performance-network</code>: My instance is experiencing performance problems that I believe are network related.</p> </li> <li> <p> <code>performance-instance-store</code>: My instance is experiencing performance problems that I believe are related to the instance stores.</p> </li> <li> <p> <code>performance-ebs-volume</code>: My instance is experiencing performance problems that I believe are related to an EBS volume.</p> </li> <li> <p> <code>performance-other</code>: My instance is experiencing performance problems.</p> </li> <li> <p> <code>other</code>: [explain using the description parameter]</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/ReportInstanceReasonCodes'
                - xml:
                    name: item
        - name: StartTime
          in: query
          required: false
          description: The time at which the reported instance health state began.
          schema:
            type: string
            format: date-time
        - name: Status
          in: query
          required: true
          description: The status of all instances listed.
          schema:
            type: string
            enum:
              - ok
              - impaired
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ReportInstanceStatus
      operationId: POST_ReportInstanceStatus
      description: '<p>Submits feedback about the status of an instance. The instance must be in the <code>running</code> state. If your experience with the instance differs from the instance status returned by <a>DescribeInstanceStatus</a>, use <a>ReportInstanceStatus</a> to report your experience with the instance. Amazon EC2 collects this information to improve the accuracy of status checks.</p> <p>Use of this action does not change the value returned by <a>DescribeInstanceStatus</a>.</p>'
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ReportInstanceStatusRequest'
      parameters: []
  /?Action=RequestSpotFleet&Version=2016-11-15:
    get:
      x-aws-operation-name: RequestSpotFleet
      operationId: GET_RequestSpotFleet
      description: '<p>Creates a Spot Fleet request.</p> <p>The Spot Fleet request specifies the total target capacity and the On-Demand target capacity. Amazon EC2 calculates the difference between the total capacity and On-Demand capacity, and launches the difference as Spot capacity.</p> <p>You can submit a single request that includes multiple launch specifications that vary by instance type, AMI, Availability Zone, or subnet.</p> <p>By default, the Spot Fleet requests Spot Instances in the Spot Instance pool where the price per unit is the lowest. Each launch specification can include its own instance weighting that reflects the value of the instance type to your application workload.</p> <p>Alternatively, you can specify that the Spot Fleet distribute the target capacity across the Spot pools included in its launch specifications. By ensuring that the Spot Instances in your Spot Fleet are in different Spot pools, you can improve the availability of your fleet.</p> <p>You can specify tags for the Spot Fleet request and instances launched by the fleet. You cannot tag other resource types in a Spot Fleet request because only the <code>spot-fleet-request</code> and <code>instance</code> resource types are supported.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-requests.html">Spot Fleet requests</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p> <important> <p>We strongly discourage using the RequestSpotFleet API because it is a legacy API with no planned investment. For options for requesting Spot Instances, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-best-practices.html#which-spot-request-method-to-use">Which is the best Spot request method to use?</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p> </important>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RequestSpotFleetResponse'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: SpotFleetRequestConfig
          in: query
          required: true
          description: The configuration for the Spot Fleet request.
          schema:
            type: object
            required:
              - IamFleetRole
              - TargetCapacity
            properties:
              allocationStrategy:
                allOf:
                  - $ref: '#/components/schemas/AllocationStrategy'
                  - description: '<p>Indicates how to allocate the target Spot Instance capacity across the Spot Instance pools specified by the Spot Fleet request.</p> <p>If the allocation strategy is <code>lowestPrice</code>, Spot Fleet launches instances from the Spot Instance pools with the lowest price. This is the default allocation strategy.</p> <p>If the allocation strategy is <code>diversified</code>, Spot Fleet launches instances from all the Spot Instance pools that you specify.</p> <p>If the allocation strategy is <code>capacityOptimized</code> (recommended), Spot Fleet launches instances from Spot Instance pools with optimal capacity for the number of instances that are launching. To give certain instance types a higher chance of launching first, use <code>capacityOptimizedPrioritized</code>. Set a priority for each instance type by using the <code>Priority</code> parameter for <code>LaunchTemplateOverrides</code>. You can assign the same priority to different <code>LaunchTemplateOverrides</code>. EC2 implements the priorities on a best-effort basis, but optimizes for capacity first. <code>capacityOptimizedPrioritized</code> is supported only if your Spot Fleet uses a launch template. Note that if the <code>OnDemandAllocationStrategy</code> is set to <code>prioritized</code>, the same priority is applied when fulfilling On-Demand capacity.</p>'
              onDemandAllocationStrategy:
                allOf:
                  - $ref: '#/components/schemas/OnDemandAllocationStrategy'
                  - description: 'The order of the launch template overrides to use in fulfilling On-Demand capacity. If you specify <code>lowestPrice</code>, Spot Fleet uses price to determine the order, launching the lowest price first. If you specify <code>prioritized</code>, Spot Fleet uses the priority that you assign to each Spot Fleet launch template override, launching the highest priority first. If you do not specify a value, Spot Fleet defaults to <code>lowestPrice</code>.'
              spotMaintenanceStrategies:
                allOf:
                  - $ref: '#/components/schemas/SpotMaintenanceStrategies'
                  - description: The strategies for managing your Spot Instances that are at an elevated risk of being interrupted.
              clientToken:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of your listings. This helps to avoid duplicate listings. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.'
              excessCapacityTerminationPolicy:
                allOf:
                  - $ref: '#/components/schemas/ExcessCapacityTerminationPolicy'
                  - description: Indicates whether running Spot Instances should be terminated if you decrease the target capacity of the Spot Fleet request below the current size of the Spot Fleet.
              fulfilledCapacity:
                allOf:
                  - $ref: '#/components/schemas/Double'
                  - description: The number of units fulfilled by this request compared to the set target capacity. You cannot set this value.
              onDemandFulfilledCapacity:
                allOf:
                  - $ref: '#/components/schemas/Double'
                  - description: The number of On-Demand units fulfilled by this request compared to the set target On-Demand capacity.
              iamFleetRole:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: 'The Amazon Resource Name (ARN) of an Identity and Access Management (IAM) role that grants the Spot Fleet the permission to request, launch, terminate, and tag instances on your behalf. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-requests.html#spot-fleet-prerequisites">Spot Fleet prerequisites</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>. Spot Fleet can terminate Spot Instances on your behalf when you cancel its Spot Fleet request using <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CancelSpotFleetRequests">CancelSpotFleetRequests</a> or when the Spot Fleet request expires, if you set <code>TerminateInstancesWithExpiration</code>.'
              launchSpecifications:
                allOf:
                  - $ref: '#/components/schemas/LaunchSpecsList'
                  - description: 'The launch specifications for the Spot Fleet request. If you specify <code>LaunchSpecifications</code>, you can''t specify <code>LaunchTemplateConfigs</code>. If you include On-Demand capacity in your request, you must use <code>LaunchTemplateConfigs</code>.'
              launchTemplateConfigs:
                allOf:
                  - $ref: '#/components/schemas/LaunchTemplateConfigList'
                  - description: 'The launch template and overrides. If you specify <code>LaunchTemplateConfigs</code>, you can''t specify <code>LaunchSpecifications</code>. If you include On-Demand capacity in your request, you must use <code>LaunchTemplateConfigs</code>.'
              spotPrice:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: The maximum price per unit hour that you are willing to pay for a Spot Instance. The default is the On-Demand price.
              targetCapacity:
                allOf:
                  - $ref: '#/components/schemas/Integer'
                  - description: 'The number of units to request for the Spot Fleet. You can choose to set the target capacity in terms of instances or a performance characteristic that is important to your application workload, such as vCPUs, memory, or I/O. If the request type is <code>maintain</code>, you can specify a target capacity of 0 and add capacity later.'
              onDemandTargetCapacity:
                allOf:
                  - $ref: '#/components/schemas/Integer'
                  - description: 'The number of On-Demand units to request. You can choose to set the target capacity in terms of instances or a performance characteristic that is important to your application workload, such as vCPUs, memory, or I/O. If the request type is <code>maintain</code>, you can specify a target capacity of 0 and add capacity later.'
              onDemandMaxTotalPrice:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: 'The maximum amount per hour for On-Demand Instances that you''re willing to pay. You can use the <code>onDemandMaxTotalPrice</code> parameter, the <code>spotMaxTotalPrice</code> parameter, or both parameters to ensure that your fleet cost does not exceed your budget. If you set a maximum price per hour for the On-Demand Instances and Spot Instances in your request, Spot Fleet will launch instances until it reaches the maximum amount you''re willing to pay. When the maximum amount you''re willing to pay is reached, the fleet stops launching instances even if it hasn’t met the target capacity.'
              spotMaxTotalPrice:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: 'The maximum amount per hour for Spot Instances that you''re willing to pay. You can use the <code>spotdMaxTotalPrice</code> parameter, the <code>onDemandMaxTotalPrice</code> parameter, or both parameters to ensure that your fleet cost does not exceed your budget. If you set a maximum price per hour for the On-Demand Instances and Spot Instances in your request, Spot Fleet will launch instances until it reaches the maximum amount you''re willing to pay. When the maximum amount you''re willing to pay is reached, the fleet stops launching instances even if it hasn’t met the target capacity.'
              terminateInstancesWithExpiration:
                allOf:
                  - $ref: '#/components/schemas/Boolean'
                  - description: Indicates whether running Spot Instances are terminated when the Spot Fleet request expires.
              type:
                allOf:
                  - $ref: '#/components/schemas/FleetType'
                  - description: 'The type of request. Indicates whether the Spot Fleet only requests the target capacity or also attempts to maintain it. When this value is <code>request</code>, the Spot Fleet only places the required requests. It does not attempt to replenish Spot Instances if capacity is diminished, nor does it submit requests in alternative Spot pools if capacity is not available. When this value is <code>maintain</code>, the Spot Fleet maintains the target capacity. The Spot Fleet places the required requests to meet capacity and automatically replenishes any interrupted instances. Default: <code>maintain</code>. <code>instant</code> is listed but is not used by Spot Fleet.'
              validFrom:
                allOf:
                  - $ref: '#/components/schemas/DateTime'
                  - description: 'The start date and time of the request, in UTC format (<i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). By default, Amazon EC2 starts fulfilling the request immediately.'
              validUntil:
                allOf:
                  - $ref: '#/components/schemas/DateTime'
                  - description: 'The end date and time of the request, in UTC format (<i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). After the end date and time, no new Spot Instance requests are placed or able to fulfill the request. If no value is specified, the Spot Fleet request remains until you cancel it.'
              replaceUnhealthyInstances:
                allOf:
                  - $ref: '#/components/schemas/Boolean'
                  - description: Indicates whether Spot Fleet should replace unhealthy instances.
              instanceInterruptionBehavior:
                allOf:
                  - $ref: '#/components/schemas/InstanceInterruptionBehavior'
                  - description: The behavior when a Spot Instance is interrupted. The default is <code>terminate</code>.
              loadBalancersConfig:
                allOf:
                  - $ref: '#/components/schemas/LoadBalancersConfig'
                  - description: '<p>One or more Classic Load Balancers and target groups to attach to the Spot Fleet request. Spot Fleet registers the running Spot Instances with the specified Classic Load Balancers and target groups.</p> <p>With Network Load Balancers, Spot Fleet cannot register instances that have the following instance types: C1, CC1, CC2, CG1, CG2, CR1, CS1, G1, G2, HI1, HS1, M1, M2, M3, and T1.</p>'
              instancePoolsToUseCount:
                allOf:
                  - $ref: '#/components/schemas/Integer'
                  - description: '<p>The number of Spot pools across which to allocate your target Spot capacity. Valid only when Spot <b>AllocationStrategy</b> is set to <code>lowest-price</code>. Spot Fleet selects the cheapest Spot pools and evenly allocates your target Spot capacity across the number of Spot pools that you specify.</p> <p>Note that Spot Fleet attempts to draw Spot Instances from the number of pools that you specify on a best effort basis. If a pool runs out of Spot capacity before fulfilling your target capacity, Spot Fleet will continue to fulfill your request by drawing from the next cheapest pool. To ensure that your target capacity is met, you might receive Spot Instances from more than the number of pools that you specified. Similarly, if most of the pools have no Spot capacity, you might receive your full target capacity from fewer than the number of pools that you specified.</p>'
              context:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: Reserved.
              targetCapacityUnitType:
                allOf:
                  - $ref: '#/components/schemas/TargetCapacityUnitType'
                  - description: '<p>The unit for the target capacity.</p> <p>Default: <code>units</code> (translates to number of instances)</p>'
              TagSpecification:
                allOf:
                  - $ref: '#/components/schemas/TagSpecificationList'
                  - description: 'The key-value pair for tagging the Spot Fleet request on creation. The value for <code>ResourceType</code> must be <code>spot-fleet-request</code>, otherwise the Spot Fleet request fails. To tag instances at launch, specify the tags in the <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html#create-launch-template">launch template</a> (valid only if you use <code>LaunchTemplateConfigs</code>) or in the <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SpotFleetTagSpecification.html"> <code>SpotFleetTagSpecification</code> </a> (valid only if you use <code>LaunchSpecifications</code>). For information about tagging after launch, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#tag-resources">Tagging Your Resources</a>.'
            description: Describes the configuration of a Spot Fleet request.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: RequestSpotFleet
      operationId: POST_RequestSpotFleet
      description: '<p>Creates a Spot Fleet request.</p> <p>The Spot Fleet request specifies the total target capacity and the On-Demand target capacity. Amazon EC2 calculates the difference between the total capacity and On-Demand capacity, and launches the difference as Spot capacity.</p> <p>You can submit a single request that includes multiple launch specifications that vary by instance type, AMI, Availability Zone, or subnet.</p> <p>By default, the Spot Fleet requests Spot Instances in the Spot Instance pool where the price per unit is the lowest. Each launch specification can include its own instance weighting that reflects the value of the instance type to your application workload.</p> <p>Alternatively, you can specify that the Spot Fleet distribute the target capacity across the Spot pools included in its launch specifications. By ensuring that the Spot Instances in your Spot Fleet are in different Spot pools, you can improve the availability of your fleet.</p> <p>You can specify tags for the Spot Fleet request and instances launched by the fleet. You cannot tag other resource types in a Spot Fleet request because only the <code>spot-fleet-request</code> and <code>instance</code> resource types are supported.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-requests.html">Spot Fleet requests</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p> <important> <p>We strongly discourage using the RequestSpotFleet API because it is a legacy API with no planned investment. For options for requesting Spot Instances, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-best-practices.html#which-spot-request-method-to-use">Which is the best Spot request method to use?</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p> </important>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RequestSpotFleetResponse'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RequestSpotFleetRequest'
      parameters: []
  /?Action=RequestSpotInstances&Version=2016-11-15:
    get:
      x-aws-operation-name: RequestSpotInstances
      operationId: GET_RequestSpotInstances
      description: '<p>Creates a Spot Instance request.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-requests.html">Spot Instance requests</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p> <important> <p>We strongly discourage using the RequestSpotInstances API because it is a legacy API with no planned investment. For options for requesting Spot Instances, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-best-practices.html#which-spot-request-method-to-use">Which is the best Spot request method to use?</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p> </important>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RequestSpotInstancesResult'
      parameters:
        - name: AvailabilityZoneGroup
          in: query
          required: false
          description: '<p>The user-specified name for a logical grouping of requests.</p> <p>When you specify an Availability Zone group in a Spot Instance request, all Spot Instances in the request are launched in the same Availability Zone. Instance proximity is maintained with this parameter, but the choice of Availability Zone is not. The group applies only to requests for Spot Instances of the same instance type. Any additional Spot Instance requests that are specified with the same Availability Zone group name are launched in that same Availability Zone, as long as at least one instance from the group is still active.</p> <p>If there is no active instance running in the Availability Zone group that you specify for a new Spot Instance request (all instances are terminated, the request is expired, or the maximum price you specified falls below current Spot price), then Amazon EC2 launches the instance in any Availability Zone where the constraint can be met. Consequently, the subsequent set of Spot Instances could be placed in a different zone from the original request, even if you specified the same Availability Zone group.</p> <p>Default: Instances are launched in any available Availability Zone.</p>'
          schema:
            type: string
        - name: BlockDurationMinutes
          in: query
          required: false
          description: Deprecated.
          schema:
            type: integer
        - name: ClientToken
          in: query
          required: false
          description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to Ensure Idempotency</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.'
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: InstanceCount
          in: query
          required: false
          description: '<p>The maximum number of Spot Instances to launch.</p> <p>Default: 1</p>'
          schema:
            type: integer
        - name: LaunchGroup
          in: query
          required: false
          description: '<p>The instance launch group. Launch groups are Spot Instances that launch together and terminate together.</p> <p>Default: Instances are launched and terminated individually</p>'
          schema:
            type: string
        - name: LaunchSpecification
          in: query
          required: false
          description: The launch specification.
          schema:
            type: object
            properties:
              SecurityGroupId:
                allOf:
                  - $ref: '#/components/schemas/RequestSpotLaunchSpecificationSecurityGroupIdList'
                  - description: One or more security group IDs.
              SecurityGroup:
                allOf:
                  - $ref: '#/components/schemas/RequestSpotLaunchSpecificationSecurityGroupList'
                  - description: 'One or more security groups. When requesting instances in a VPC, you must specify the IDs of the security groups. When requesting instances in EC2-Classic, you can specify the names or the IDs of the security groups.'
              addressingType:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: Deprecated.
              blockDeviceMapping:
                allOf:
                  - $ref: '#/components/schemas/BlockDeviceMappingList'
                  - description: 'One or more block device mapping entries. You can''t specify both a snapshot ID and an encryption value. This is because only blank volumes can be encrypted on creation. If a snapshot is the basis for a volume, it is not blank and its encryption status is used for the volume encryption status.'
              ebsOptimized:
                allOf:
                  - $ref: '#/components/schemas/Boolean'
                  - description: '<p>Indicates whether the instance is optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn''t available with all instance types. Additional usage charges apply when using an EBS Optimized instance.</p> <p>Default: <code>false</code> </p>'
              iamInstanceProfile:
                allOf:
                  - $ref: '#/components/schemas/IamInstanceProfileSpecification'
                  - description: The IAM instance profile.
              imageId:
                allOf:
                  - $ref: '#/components/schemas/ImageId'
                  - description: The ID of the AMI.
              instanceType:
                allOf:
                  - $ref: '#/components/schemas/InstanceType'
                  - description: The instance type. Only one instance type can be specified.
              kernelId:
                allOf:
                  - $ref: '#/components/schemas/KernelId'
                  - description: The ID of the kernel.
              keyName:
                allOf:
                  - $ref: '#/components/schemas/KeyPairName'
                  - description: The name of the key pair.
              monitoring:
                allOf:
                  - $ref: '#/components/schemas/RunInstancesMonitoringEnabled'
                  - description: '<p>Indicates whether basic or detailed monitoring is enabled for the instance.</p> <p>Default: Disabled</p>'
              NetworkInterface:
                allOf:
                  - $ref: '#/components/schemas/InstanceNetworkInterfaceSpecificationList'
                  - description: 'One or more network interfaces. If you specify a network interface, you must specify subnet IDs and security group IDs using the network interface.'
              placement:
                allOf:
                  - $ref: '#/components/schemas/SpotPlacement'
                  - description: The placement information for the instance.
              ramdiskId:
                allOf:
                  - $ref: '#/components/schemas/RamdiskId'
                  - description: The ID of the RAM disk.
              subnetId:
                allOf:
                  - $ref: '#/components/schemas/SubnetId'
                  - description: The ID of the subnet in which to launch the instance.
              userData:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: The Base64-encoded user data for the instance. User data is limited to 16 KB.
            description: Describes the launch specification for an instance.
        - name: SpotPrice
          in: query
          required: false
          description: The maximum price per hour that you are willing to pay for a Spot Instance. The default is the On-Demand price.
          schema:
            type: string
        - name: Type
          in: query
          required: false
          description: '<p>The Spot Instance request type.</p> <p>Default: <code>one-time</code> </p>'
          schema:
            type: string
            enum:
              - one-time
              - persistent
        - name: ValidFrom
          in: query
          required: false
          description: '<p>The start date of the request. If this is a one-time request, the request becomes active at this date and time and remains active until all instances launch, the request expires, or the request is canceled. If the request is persistent, the request becomes active at this date and time and remains active until it expires or is canceled.</p> <p>The specified start date and time cannot be equal to the current date and time. You must specify a start date and time that occurs after the current date and time.</p>'
          schema:
            type: string
            format: date-time
        - name: ValidUntil
          in: query
          required: false
          description: '<p>The end date of the request, in UTC format (<i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).</p> <ul> <li> <p>For a persistent request, the request remains active until the <code>ValidUntil</code> date and time is reached. Otherwise, the request remains active until you cancel it. </p> </li> <li> <p>For a one-time request, the request remains active until all instances launch, the request is canceled, or the <code>ValidUntil</code> date and time is reached. By default, the request is valid for 7 days from the date the request was created.</p> </li> </ul>'
          schema:
            type: string
            format: date-time
        - name: TagSpecification
          in: query
          required: false
          description: 'The key-value pair for tagging the Spot Instance request on creation. The value for <code>ResourceType</code> must be <code>spot-instances-request</code>, otherwise the Spot Instance request fails. To tag the Spot Instance request after it has been created, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html">CreateTags</a>. '
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
        - name: InstanceInterruptionBehavior
          in: query
          required: false
          description: The behavior when a Spot Instance is interrupted. The default is <code>terminate</code>.
          schema:
            type: string
            enum:
              - hibernate
              - stop
              - terminate
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: RequestSpotInstances
      operationId: POST_RequestSpotInstances
      description: '<p>Creates a Spot Instance request.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-requests.html">Spot Instance requests</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p> <important> <p>We strongly discourage using the RequestSpotInstances API because it is a legacy API with no planned investment. For options for requesting Spot Instances, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-best-practices.html#which-spot-request-method-to-use">Which is the best Spot request method to use?</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p> </important>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RequestSpotInstancesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RequestSpotInstancesRequest'
      parameters: []
  /?Action=ResetAddressAttribute&Version=2016-11-15:
    get:
      x-aws-operation-name: ResetAddressAttribute
      operationId: GET_ResetAddressAttribute
      description: 'Resets the attribute of the specified IP address. For requirements, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html#Using_Elastic_Addressing_Reverse_DNS">Using reverse DNS for email applications</a>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResetAddressAttributeResult'
      parameters:
        - name: AllocationId
          in: query
          required: true
          description: '[EC2-VPC] The allocation ID.'
          schema:
            type: string
        - name: Attribute
          in: query
          required: true
          description: The attribute of the IP address.
          schema:
            type: string
            enum:
              - domain-name
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ResetAddressAttribute
      operationId: POST_ResetAddressAttribute
      description: 'Resets the attribute of the specified IP address. For requirements, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html#Using_Elastic_Addressing_Reverse_DNS">Using reverse DNS for email applications</a>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResetAddressAttributeResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ResetAddressAttributeRequest'
      parameters: []
  /?Action=ResetEbsDefaultKmsKeyId&Version=2016-11-15:
    get:
      x-aws-operation-name: ResetEbsDefaultKmsKeyId
      operationId: GET_ResetEbsDefaultKmsKeyId
      description: '<p>Resets the default KMS key for EBS encryption for your account in this Region to the Amazon Web Services managed KMS key for EBS.</p> <p>After resetting the default KMS key to the Amazon Web Services managed KMS key, you can continue to encrypt by a customer managed KMS key by specifying it when you create the volume. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResetEbsDefaultKmsKeyIdResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ResetEbsDefaultKmsKeyId
      operationId: POST_ResetEbsDefaultKmsKeyId
      description: '<p>Resets the default KMS key for EBS encryption for your account in this Region to the Amazon Web Services managed KMS key for EBS.</p> <p>After resetting the default KMS key to the Amazon Web Services managed KMS key, you can continue to encrypt by a customer managed KMS key by specifying it when you create the volume. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResetEbsDefaultKmsKeyIdResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ResetEbsDefaultKmsKeyIdRequest'
      parameters: []
  /?Action=ResetFpgaImageAttribute&Version=2016-11-15:
    get:
      x-aws-operation-name: ResetFpgaImageAttribute
      operationId: GET_ResetFpgaImageAttribute
      description: Resets the specified attribute of the specified Amazon FPGA Image (AFI) to its default value. You can only reset the load permission attribute.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResetFpgaImageAttributeResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: FpgaImageId
          in: query
          required: true
          description: The ID of the AFI.
          schema:
            type: string
        - name: Attribute
          in: query
          required: false
          description: The attribute.
          schema:
            type: string
            enum:
              - loadPermission
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ResetFpgaImageAttribute
      operationId: POST_ResetFpgaImageAttribute
      description: Resets the specified attribute of the specified Amazon FPGA Image (AFI) to its default value. You can only reset the load permission attribute.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResetFpgaImageAttributeResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ResetFpgaImageAttributeRequest'
      parameters: []
  /?Action=ResetImageAttribute&Version=2016-11-15:
    get:
      x-aws-operation-name: ResetImageAttribute
      operationId: GET_ResetImageAttribute
      description: Resets an attribute of an AMI to its default value.
      responses:
        '200':
          description: Success
      parameters:
        - name: Attribute
          in: query
          required: true
          description: The attribute to reset (currently you can only reset the launch permission attribute).
          schema:
            type: string
            enum:
              - launchPermission
        - name: ImageId
          in: query
          required: true
          description: The ID of the AMI.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ResetImageAttribute
      operationId: POST_ResetImageAttribute
      description: Resets an attribute of an AMI to its default value.
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ResetImageAttributeRequest'
      parameters: []
  /?Action=ResetInstanceAttribute&Version=2016-11-15:
    get:
      x-aws-operation-name: ResetInstanceAttribute
      operationId: GET_ResetInstanceAttribute
      description: '<p>Resets an attribute of an instance to its default value. To reset the <code>kernel</code> or <code>ramdisk</code>, the instance must be in a stopped state. To reset the <code>sourceDestCheck</code>, the instance can be either running or stopped.</p> <p>The <code>sourceDestCheck</code> attribute controls whether source/destination checking is enabled. The default value is <code>true</code>, which means checking is enabled. This value must be <code>false</code> for a NAT instance to perform NAT. For more information, see <a href="https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_NAT_Instance.html">NAT Instances</a> in the <i>Amazon VPC User Guide</i>.</p>'
      responses:
        '200':
          description: Success
      parameters:
        - name: Attribute
          in: query
          required: true
          description: '<p>The attribute to reset.</p> <important> <p>You can only reset the following attributes: <code>kernel</code> | <code>ramdisk</code> | <code>sourceDestCheck</code>.</p> </important>'
          schema:
            type: string
            enum:
              - instanceType
              - kernel
              - ramdisk
              - userData
              - disableApiTermination
              - instanceInitiatedShutdownBehavior
              - rootDeviceName
              - blockDeviceMapping
              - productCodes
              - sourceDestCheck
              - groupSet
              - ebsOptimized
              - sriovNetSupport
              - enaSupport
              - enclaveOptions
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: InstanceId
          in: query
          required: true
          description: The ID of the instance.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ResetInstanceAttribute
      operationId: POST_ResetInstanceAttribute
      description: '<p>Resets an attribute of an instance to its default value. To reset the <code>kernel</code> or <code>ramdisk</code>, the instance must be in a stopped state. To reset the <code>sourceDestCheck</code>, the instance can be either running or stopped.</p> <p>The <code>sourceDestCheck</code> attribute controls whether source/destination checking is enabled. The default value is <code>true</code>, which means checking is enabled. This value must be <code>false</code> for a NAT instance to perform NAT. For more information, see <a href="https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_NAT_Instance.html">NAT Instances</a> in the <i>Amazon VPC User Guide</i>.</p>'
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ResetInstanceAttributeRequest'
      parameters: []
  /?Action=ResetNetworkInterfaceAttribute&Version=2016-11-15:
    get:
      x-aws-operation-name: ResetNetworkInterfaceAttribute
      operationId: GET_ResetNetworkInterfaceAttribute
      description: Resets a network interface attribute. You can specify only one attribute at a time.
      responses:
        '200':
          description: Success
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: NetworkInterfaceId
          in: query
          required: true
          description: The ID of the network interface.
          schema:
            type: string
        - name: SourceDestCheck
          in: query
          required: false
          description: The source/destination checking attribute. Resets the value to <code>true</code>.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ResetNetworkInterfaceAttribute
      operationId: POST_ResetNetworkInterfaceAttribute
      description: Resets a network interface attribute. You can specify only one attribute at a time.
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ResetNetworkInterfaceAttributeRequest'
      parameters: []
  /?Action=ResetSnapshotAttribute&Version=2016-11-15:
    get:
      x-aws-operation-name: ResetSnapshotAttribute
      operationId: GET_ResetSnapshotAttribute
      description: '<p>Resets permission settings for the specified snapshot.</p> <p>For more information about modifying snapshot permissions, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-modifying-snapshot-permissions.html">Share a snapshot</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
      parameters:
        - name: Attribute
          in: query
          required: true
          description: 'The attribute to reset. Currently, only the attribute for permission to create volumes can be reset.'
          schema:
            type: string
            enum:
              - productCodes
              - createVolumePermission
        - name: SnapshotId
          in: query
          required: true
          description: The ID of the snapshot.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ResetSnapshotAttribute
      operationId: POST_ResetSnapshotAttribute
      description: '<p>Resets permission settings for the specified snapshot.</p> <p>For more information about modifying snapshot permissions, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-modifying-snapshot-permissions.html">Share a snapshot</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ResetSnapshotAttributeRequest'
      parameters: []
  /?Action=RestoreAddressToClassic&Version=2016-11-15:
    get:
      x-aws-operation-name: RestoreAddressToClassic
      operationId: GET_RestoreAddressToClassic
      description: Restores an Elastic IP address that was previously moved to the EC2-VPC platform back to the EC2-Classic platform. You cannot move an Elastic IP address that was originally allocated for use in EC2-VPC. The Elastic IP address must not be associated with an instance or network interface.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RestoreAddressToClassicResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: PublicIp
          in: query
          required: true
          description: The Elastic IP address.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: RestoreAddressToClassic
      operationId: POST_RestoreAddressToClassic
      description: Restores an Elastic IP address that was previously moved to the EC2-VPC platform back to the EC2-Classic platform. You cannot move an Elastic IP address that was originally allocated for use in EC2-VPC. The Elastic IP address must not be associated with an instance or network interface.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RestoreAddressToClassicResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RestoreAddressToClassicRequest'
      parameters: []
  /?Action=RestoreImageFromRecycleBin&Version=2016-11-15:
    get:
      x-aws-operation-name: RestoreImageFromRecycleBin
      operationId: GET_RestoreImageFromRecycleBin
      description: 'Restores an AMI from the Recycle Bin. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/recycle-bin.html">Recycle Bin</a> in the Amazon Elastic Compute Cloud User Guide.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RestoreImageFromRecycleBinResult'
      parameters:
        - name: ImageId
          in: query
          required: true
          description: The ID of the AMI to restore.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: RestoreImageFromRecycleBin
      operationId: POST_RestoreImageFromRecycleBin
      description: 'Restores an AMI from the Recycle Bin. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/recycle-bin.html">Recycle Bin</a> in the Amazon Elastic Compute Cloud User Guide.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RestoreImageFromRecycleBinResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RestoreImageFromRecycleBinRequest'
      parameters: []
  /?Action=RestoreManagedPrefixListVersion&Version=2016-11-15:
    get:
      x-aws-operation-name: RestoreManagedPrefixListVersion
      operationId: GET_RestoreManagedPrefixListVersion
      description: Restores the entries from a previous version of a managed prefix list to a new version of the prefix list.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RestoreManagedPrefixListVersionResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: PrefixListId
          in: query
          required: true
          description: The ID of the prefix list.
          schema:
            type: string
        - name: PreviousVersion
          in: query
          required: true
          description: The version to restore.
          schema:
            type: integer
        - name: CurrentVersion
          in: query
          required: true
          description: The current version number for the prefix list.
          schema:
            type: integer
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: RestoreManagedPrefixListVersion
      operationId: POST_RestoreManagedPrefixListVersion
      description: Restores the entries from a previous version of a managed prefix list to a new version of the prefix list.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RestoreManagedPrefixListVersionResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RestoreManagedPrefixListVersionRequest'
      parameters: []
  /?Action=RestoreSnapshotFromRecycleBin&Version=2016-11-15:
    get:
      x-aws-operation-name: RestoreSnapshotFromRecycleBin
      operationId: GET_RestoreSnapshotFromRecycleBin
      description: 'Restores a snapshot from the Recycle Bin. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/recycle-bin-working-with-snaps.html#recycle-bin-restore-snaps">Restore snapshots from the Recycle Bin</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RestoreSnapshotFromRecycleBinResult'
      parameters:
        - name: SnapshotId
          in: query
          required: true
          description: The ID of the snapshot to restore.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: RestoreSnapshotFromRecycleBin
      operationId: POST_RestoreSnapshotFromRecycleBin
      description: 'Restores a snapshot from the Recycle Bin. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/recycle-bin-working-with-snaps.html#recycle-bin-restore-snaps">Restore snapshots from the Recycle Bin</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RestoreSnapshotFromRecycleBinResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RestoreSnapshotFromRecycleBinRequest'
      parameters: []
  /?Action=RestoreSnapshotTier&Version=2016-11-15:
    get:
      x-aws-operation-name: RestoreSnapshotTier
      operationId: GET_RestoreSnapshotTier
      description: '<p>Restores an archived Amazon EBS snapshot for use temporarily or permanently, or modifies the restore period or restore type for a snapshot that was previously temporarily restored.</p> <p>For more information see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/working-with-snapshot-archiving.html#restore-archived-snapshot"> Restore an archived snapshot</a> and <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/working-with-snapshot-archiving.html#modify-temp-restore-period"> modify the restore period or restore type for a temporarily restored snapshot</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RestoreSnapshotTierResult'
      parameters:
        - name: SnapshotId
          in: query
          required: true
          description: The ID of the snapshot to restore.
          schema:
            type: string
        - name: TemporaryRestoreDays
          in: query
          required: false
          description: '<p>Specifies the number of days for which to temporarily restore an archived snapshot. Required for temporary restores only. The snapshot will be automatically re-archived after this period.</p> <p>To temporarily restore an archived snapshot, specify the number of days and omit the <b>PermanentRestore</b> parameter or set it to <code>false</code>.</p>'
          schema:
            type: integer
        - name: PermanentRestore
          in: query
          required: false
          description: 'Indicates whether to permanently restore an archived snapshot. To permanently restore an archived snapshot, specify <code>true</code> and omit the <b>RestoreSnapshotTierRequest$TemporaryRestoreDays</b> parameter.'
          schema:
            type: boolean
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: RestoreSnapshotTier
      operationId: POST_RestoreSnapshotTier
      description: '<p>Restores an archived Amazon EBS snapshot for use temporarily or permanently, or modifies the restore period or restore type for a snapshot that was previously temporarily restored.</p> <p>For more information see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/working-with-snapshot-archiving.html#restore-archived-snapshot"> Restore an archived snapshot</a> and <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/working-with-snapshot-archiving.html#modify-temp-restore-period"> modify the restore period or restore type for a temporarily restored snapshot</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RestoreSnapshotTierResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RestoreSnapshotTierRequest'
      parameters: []
  /?Action=RevokeClientVpnIngress&Version=2016-11-15:
    get:
      x-aws-operation-name: RevokeClientVpnIngress
      operationId: GET_RevokeClientVpnIngress
      description: 'Removes an ingress authorization rule from a Client VPN endpoint. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RevokeClientVpnIngressResult'
      parameters:
        - name: ClientVpnEndpointId
          in: query
          required: true
          description: The ID of the Client VPN endpoint with which the authorization rule is associated.
          schema:
            type: string
        - name: TargetNetworkCidr
          in: query
          required: true
          description: 'The IPv4 address range, in CIDR notation, of the network for which access is being removed.'
          schema:
            type: string
        - name: AccessGroupId
          in: query
          required: false
          description: 'The ID of the Active Directory group for which to revoke access. '
          schema:
            type: string
        - name: RevokeAllGroups
          in: query
          required: false
          description: Indicates whether access should be revoked for all clients.
          schema:
            type: boolean
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: RevokeClientVpnIngress
      operationId: POST_RevokeClientVpnIngress
      description: 'Removes an ingress authorization rule from a Client VPN endpoint. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RevokeClientVpnIngressResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RevokeClientVpnIngressRequest'
      parameters: []
  /?Action=RevokeSecurityGroupEgress&Version=2016-11-15:
    get:
      x-aws-operation-name: RevokeSecurityGroupEgress
      operationId: GET_RevokeSecurityGroupEgress
      description: '<p>[VPC only] Removes the specified outbound (egress) rules from a security group for EC2-VPC. This action does not apply to security groups for use in EC2-Classic.</p> <p>You can specify rules using either rule IDs or security group rule properties. If you use rule properties, the values that you specify (for example, ports) must match the existing rule''s values exactly. Each rule has a protocol, from and to ports, and destination (CIDR range, security group, or prefix list). For the TCP and UDP protocols, you must also specify the destination port or range of ports. For the ICMP protocol, you must also specify the ICMP type and code. If the security group rule has a description, you do not need to specify the description to revoke the rule.</p> <p>[Default VPC] If the values you specify do not match the existing rule''s values, no error is returned, and the output describes the security group rules that were not revoked.</p> <p>Amazon Web Services recommends that you describe the security group to verify that the rules were removed.</p> <p>Rule changes are propagated to instances within the security group as quickly as possible. However, a small delay might occur.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RevokeSecurityGroupEgressResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: GroupId
          in: query
          required: true
          description: The ID of the security group.
          schema:
            type: string
        - name: IpPermissions
          in: query
          required: false
          description: The sets of IP permissions. You can't specify a destination security group and a CIDR IP address range in the same set of permissions.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/IpPermission'
                - xml:
                    name: item
        - name: SecurityGroupRuleId
          in: query
          required: false
          description: The IDs of the security group rules.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: item
        - name: CidrIp
          in: query
          required: false
          description: Not supported. Use a set of IP permissions to specify the CIDR.
          schema:
            type: string
        - name: FromPort
          in: query
          required: false
          description: Not supported. Use a set of IP permissions to specify the port.
          schema:
            type: integer
        - name: IpProtocol
          in: query
          required: false
          description: Not supported. Use a set of IP permissions to specify the protocol name or number.
          schema:
            type: string
        - name: ToPort
          in: query
          required: false
          description: Not supported. Use a set of IP permissions to specify the port.
          schema:
            type: integer
        - name: SourceSecurityGroupName
          in: query
          required: false
          description: Not supported. Use a set of IP permissions to specify a destination security group.
          schema:
            type: string
        - name: SourceSecurityGroupOwnerId
          in: query
          required: false
          description: Not supported. Use a set of IP permissions to specify a destination security group.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: RevokeSecurityGroupEgress
      operationId: POST_RevokeSecurityGroupEgress
      description: '<p>[VPC only] Removes the specified outbound (egress) rules from a security group for EC2-VPC. This action does not apply to security groups for use in EC2-Classic.</p> <p>You can specify rules using either rule IDs or security group rule properties. If you use rule properties, the values that you specify (for example, ports) must match the existing rule''s values exactly. Each rule has a protocol, from and to ports, and destination (CIDR range, security group, or prefix list). For the TCP and UDP protocols, you must also specify the destination port or range of ports. For the ICMP protocol, you must also specify the ICMP type and code. If the security group rule has a description, you do not need to specify the description to revoke the rule.</p> <p>[Default VPC] If the values you specify do not match the existing rule''s values, no error is returned, and the output describes the security group rules that were not revoked.</p> <p>Amazon Web Services recommends that you describe the security group to verify that the rules were removed.</p> <p>Rule changes are propagated to instances within the security group as quickly as possible. However, a small delay might occur.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RevokeSecurityGroupEgressResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RevokeSecurityGroupEgressRequest'
      parameters: []
  /?Action=RevokeSecurityGroupIngress&Version=2016-11-15:
    get:
      x-aws-operation-name: RevokeSecurityGroupIngress
      operationId: GET_RevokeSecurityGroupIngress
      description: '<p>Removes the specified inbound (ingress) rules from a security group.</p> <p>You can specify rules using either rule IDs or security group rule properties. If you use rule properties, the values that you specify (for example, ports) must match the existing rule''s values exactly. Each rule has a protocol, from and to ports, and source (CIDR range, security group, or prefix list). For the TCP and UDP protocols, you must also specify the destination port or range of ports. For the ICMP protocol, you must also specify the ICMP type and code. If the security group rule has a description, you do not need to specify the description to revoke the rule.</p> <p>[EC2-Classic, default VPC] If the values you specify do not match the existing rule''s values, no error is returned, and the output describes the security group rules that were not revoked.</p> <p>Amazon Web Services recommends that you describe the security group to verify that the rules were removed.</p> <p>Rule changes are propagated to instances within the security group as quickly as possible. However, a small delay might occur.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RevokeSecurityGroupIngressResult'
      parameters:
        - name: CidrIp
          in: query
          required: false
          description: The CIDR IP address range. You can't specify this parameter when specifying a source security group.
          schema:
            type: string
        - name: FromPort
          in: query
          required: false
          description: 'The start of port range for the TCP and UDP protocols, or an ICMP type number. For the ICMP type number, use <code>-1</code> to specify all ICMP types.'
          schema:
            type: integer
        - name: GroupId
          in: query
          required: false
          description: 'The ID of the security group. You must specify either the security group ID or the security group name in the request. For security groups in a nondefault VPC, you must specify the security group ID.'
          schema:
            type: string
        - name: GroupName
          in: query
          required: false
          description: '[EC2-Classic, default VPC] The name of the security group. You must specify either the security group ID or the security group name in the request.'
          schema:
            type: string
        - name: IpPermissions
          in: query
          required: false
          description: The sets of IP permissions. You can't specify a source security group and a CIDR IP address range in the same set of permissions.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/IpPermission'
                - xml:
                    name: item
        - name: IpProtocol
          in: query
          required: false
          description: 'The IP protocol name (<code>tcp</code>, <code>udp</code>, <code>icmp</code>) or number (see <a href="http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml">Protocol Numbers</a>). Use <code>-1</code> to specify all.'
          schema:
            type: string
        - name: SourceSecurityGroupName
          in: query
          required: false
          description: '[EC2-Classic, default VPC] The name of the source security group. You can''t specify this parameter in combination with the following parameters: the CIDR IP address range, the start of the port range, the IP protocol, and the end of the port range. For EC2-VPC, the source security group must be in the same VPC. To revoke a specific rule for an IP protocol and port range, use a set of IP permissions instead.'
          schema:
            type: string
        - name: SourceSecurityGroupOwnerId
          in: query
          required: false
          description: '[EC2-Classic] The Amazon Web Services account ID of the source security group, if the source security group is in a different account. You can''t specify this parameter in combination with the following parameters: the CIDR IP address range, the IP protocol, the start of the port range, and the end of the port range. To revoke a specific rule for an IP protocol and port range, use a set of IP permissions instead.'
          schema:
            type: string
        - name: ToPort
          in: query
          required: false
          description: 'The end of port range for the TCP and UDP protocols, or an ICMP code number. For the ICMP code number, use <code>-1</code> to specify all ICMP codes for the ICMP type.'
          schema:
            type: integer
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: SecurityGroupRuleId
          in: query
          required: false
          description: The IDs of the security group rules.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: RevokeSecurityGroupIngress
      operationId: POST_RevokeSecurityGroupIngress
      description: '<p>Removes the specified inbound (ingress) rules from a security group.</p> <p>You can specify rules using either rule IDs or security group rule properties. If you use rule properties, the values that you specify (for example, ports) must match the existing rule''s values exactly. Each rule has a protocol, from and to ports, and source (CIDR range, security group, or prefix list). For the TCP and UDP protocols, you must also specify the destination port or range of ports. For the ICMP protocol, you must also specify the ICMP type and code. If the security group rule has a description, you do not need to specify the description to revoke the rule.</p> <p>[EC2-Classic, default VPC] If the values you specify do not match the existing rule''s values, no error is returned, and the output describes the security group rules that were not revoked.</p> <p>Amazon Web Services recommends that you describe the security group to verify that the rules were removed.</p> <p>Rule changes are propagated to instances within the security group as quickly as possible. However, a small delay might occur.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RevokeSecurityGroupIngressResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RevokeSecurityGroupIngressRequest'
      parameters: []
  /?Action=RunInstances&Version=2016-11-15:
    get:
      x-aws-operation-name: RunInstances
      operationId: GET_RunInstances
      description: '<p>Launches the specified number of instances using an AMI for which you have permissions.</p> <p>You can specify a number of options, or leave the default options. The following rules apply:</p> <ul> <li> <p>[EC2-VPC] If you don''t specify a subnet ID, we choose a default subnet from your default VPC for you. If you don''t have a default VPC, you must specify a subnet ID in the request.</p> </li> <li> <p>[EC2-Classic] If don''t specify an Availability Zone, we choose one for you.</p> </li> <li> <p>Some instance types must be launched into a VPC. If you do not have a default VPC, or if you do not specify a subnet ID, the request fails. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-vpc.html#vpc-only-instance-types">Instance types available only in a VPC</a>.</p> </li> <li> <p>[EC2-VPC] All instances have a network interface with a primary private IPv4 address. If you don''t specify this address, we choose one from the IPv4 range of your subnet.</p> </li> <li> <p>Not all instance types support IPv6 addresses. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance types</a>.</p> </li> <li> <p>If you don''t specify a security group ID, we use the default security group. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html">Security groups</a>.</p> </li> <li> <p>If any of the AMIs have a product code attached for which the user has not subscribed, the request fails.</p> </li> </ul> <p>You can create a <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html">launch template</a>, which is a resource that contains the parameters to launch an instance. When you launch an instance using <a>RunInstances</a>, you can specify the launch template instead of specifying the launch parameters.</p> <p>To ensure faster instance launches, break up large requests into smaller batches. For example, create five separate launch requests for 100 instances each instead of one launch request for 500 instances.</p> <p>An instance is ready for you to use when it''s in the <code>running</code> state. You can check the state of your instance using <a>DescribeInstances</a>. You can tag instances and EBS volumes during launch, after launch, or both. For more information, see <a>CreateTags</a> and <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging your Amazon EC2 resources</a>.</p> <p>Linux instances have access to the public key of the key pair at boot. You can use this key to provide secure access to the instance. Amazon EC2 public images use this feature to provide secure access without passwords. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Key pairs</a>.</p> <p>For troubleshooting, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_InstanceStraightToTerminated.html">What to do if an instance immediately terminates</a>, and <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstancesConnecting.html">Troubleshooting connecting to your instance</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/Reservation'
      parameters:
        - name: BlockDeviceMapping
          in: query
          required: false
          description: 'The block device mapping, which defines the EBS volumes and instance store volumes to attach to the instance at launch. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html">Block device mappings</a> in the <i>Amazon EC2 User Guide</i>.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/BlockDeviceMapping'
                - xml:
                    name: BlockDeviceMapping
        - name: ImageId
          in: query
          required: false
          description: The ID of the AMI. An AMI ID is required to launch an instance and must be specified here or in a launch template.
          schema:
            type: string
        - name: InstanceType
          in: query
          required: false
          description: '<p>The instance type. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance types</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>Default: <code>m1.small</code> </p>'
          schema:
            type: string
            enum:
              - a1.medium
              - a1.large
              - a1.xlarge
              - a1.2xlarge
              - a1.4xlarge
              - a1.metal
              - c1.medium
              - c1.xlarge
              - c3.large
              - c3.xlarge
              - c3.2xlarge
              - c3.4xlarge
              - c3.8xlarge
              - c4.large
              - c4.xlarge
              - c4.2xlarge
              - c4.4xlarge
              - c4.8xlarge
              - c5.large
              - c5.xlarge
              - c5.2xlarge
              - c5.4xlarge
              - c5.9xlarge
              - c5.12xlarge
              - c5.18xlarge
              - c5.24xlarge
              - c5.metal
              - c5a.large
              - c5a.xlarge
              - c5a.2xlarge
              - c5a.4xlarge
              - c5a.8xlarge
              - c5a.12xlarge
              - c5a.16xlarge
              - c5a.24xlarge
              - c5ad.large
              - c5ad.xlarge
              - c5ad.2xlarge
              - c5ad.4xlarge
              - c5ad.8xlarge
              - c5ad.12xlarge
              - c5ad.16xlarge
              - c5ad.24xlarge
              - c5d.large
              - c5d.xlarge
              - c5d.2xlarge
              - c5d.4xlarge
              - c5d.9xlarge
              - c5d.12xlarge
              - c5d.18xlarge
              - c5d.24xlarge
              - c5d.metal
              - c5n.large
              - c5n.xlarge
              - c5n.2xlarge
              - c5n.4xlarge
              - c5n.9xlarge
              - c5n.18xlarge
              - c5n.metal
              - c6g.medium
              - c6g.large
              - c6g.xlarge
              - c6g.2xlarge
              - c6g.4xlarge
              - c6g.8xlarge
              - c6g.12xlarge
              - c6g.16xlarge
              - c6g.metal
              - c6gd.medium
              - c6gd.large
              - c6gd.xlarge
              - c6gd.2xlarge
              - c6gd.4xlarge
              - c6gd.8xlarge
              - c6gd.12xlarge
              - c6gd.16xlarge
              - c6gd.metal
              - c6gn.medium
              - c6gn.large
              - c6gn.xlarge
              - c6gn.2xlarge
              - c6gn.4xlarge
              - c6gn.8xlarge
              - c6gn.12xlarge
              - c6gn.16xlarge
              - c6i.large
              - c6i.xlarge
              - c6i.2xlarge
              - c6i.4xlarge
              - c6i.8xlarge
              - c6i.12xlarge
              - c6i.16xlarge
              - c6i.24xlarge
              - c6i.32xlarge
              - c6i.metal
              - cc1.4xlarge
              - cc2.8xlarge
              - cg1.4xlarge
              - cr1.8xlarge
              - d2.xlarge
              - d2.2xlarge
              - d2.4xlarge
              - d2.8xlarge
              - d3.xlarge
              - d3.2xlarge
              - d3.4xlarge
              - d3.8xlarge
              - d3en.xlarge
              - d3en.2xlarge
              - d3en.4xlarge
              - d3en.6xlarge
              - d3en.8xlarge
              - d3en.12xlarge
              - dl1.24xlarge
              - f1.2xlarge
              - f1.4xlarge
              - f1.16xlarge
              - g2.2xlarge
              - g2.8xlarge
              - g3.4xlarge
              - g3.8xlarge
              - g3.16xlarge
              - g3s.xlarge
              - g4ad.xlarge
              - g4ad.2xlarge
              - g4ad.4xlarge
              - g4ad.8xlarge
              - g4ad.16xlarge
              - g4dn.xlarge
              - g4dn.2xlarge
              - g4dn.4xlarge
              - g4dn.8xlarge
              - g4dn.12xlarge
              - g4dn.16xlarge
              - g4dn.metal
              - g5.xlarge
              - g5.2xlarge
              - g5.4xlarge
              - g5.8xlarge
              - g5.12xlarge
              - g5.16xlarge
              - g5.24xlarge
              - g5.48xlarge
              - g5g.xlarge
              - g5g.2xlarge
              - g5g.4xlarge
              - g5g.8xlarge
              - g5g.16xlarge
              - g5g.metal
              - hi1.4xlarge
              - hpc6a.48xlarge
              - hs1.8xlarge
              - h1.2xlarge
              - h1.4xlarge
              - h1.8xlarge
              - h1.16xlarge
              - i2.xlarge
              - i2.2xlarge
              - i2.4xlarge
              - i2.8xlarge
              - i3.large
              - i3.xlarge
              - i3.2xlarge
              - i3.4xlarge
              - i3.8xlarge
              - i3.16xlarge
              - i3.metal
              - i3en.large
              - i3en.xlarge
              - i3en.2xlarge
              - i3en.3xlarge
              - i3en.6xlarge
              - i3en.12xlarge
              - i3en.24xlarge
              - i3en.metal
              - im4gn.large
              - im4gn.xlarge
              - im4gn.2xlarge
              - im4gn.4xlarge
              - im4gn.8xlarge
              - im4gn.16xlarge
              - inf1.xlarge
              - inf1.2xlarge
              - inf1.6xlarge
              - inf1.24xlarge
              - is4gen.medium
              - is4gen.large
              - is4gen.xlarge
              - is4gen.2xlarge
              - is4gen.4xlarge
              - is4gen.8xlarge
              - m1.small
              - m1.medium
              - m1.large
              - m1.xlarge
              - m2.xlarge
              - m2.2xlarge
              - m2.4xlarge
              - m3.medium
              - m3.large
              - m3.xlarge
              - m3.2xlarge
              - m4.large
              - m4.xlarge
              - m4.2xlarge
              - m4.4xlarge
              - m4.10xlarge
              - m4.16xlarge
              - m5.large
              - m5.xlarge
              - m5.2xlarge
              - m5.4xlarge
              - m5.8xlarge
              - m5.12xlarge
              - m5.16xlarge
              - m5.24xlarge
              - m5.metal
              - m5a.large
              - m5a.xlarge
              - m5a.2xlarge
              - m5a.4xlarge
              - m5a.8xlarge
              - m5a.12xlarge
              - m5a.16xlarge
              - m5a.24xlarge
              - m5ad.large
              - m5ad.xlarge
              - m5ad.2xlarge
              - m5ad.4xlarge
              - m5ad.8xlarge
              - m5ad.12xlarge
              - m5ad.16xlarge
              - m5ad.24xlarge
              - m5d.large
              - m5d.xlarge
              - m5d.2xlarge
              - m5d.4xlarge
              - m5d.8xlarge
              - m5d.12xlarge
              - m5d.16xlarge
              - m5d.24xlarge
              - m5d.metal
              - m5dn.large
              - m5dn.xlarge
              - m5dn.2xlarge
              - m5dn.4xlarge
              - m5dn.8xlarge
              - m5dn.12xlarge
              - m5dn.16xlarge
              - m5dn.24xlarge
              - m5dn.metal
              - m5n.large
              - m5n.xlarge
              - m5n.2xlarge
              - m5n.4xlarge
              - m5n.8xlarge
              - m5n.12xlarge
              - m5n.16xlarge
              - m5n.24xlarge
              - m5n.metal
              - m5zn.large
              - m5zn.xlarge
              - m5zn.2xlarge
              - m5zn.3xlarge
              - m5zn.6xlarge
              - m5zn.12xlarge
              - m5zn.metal
              - m6a.large
              - m6a.xlarge
              - m6a.2xlarge
              - m6a.4xlarge
              - m6a.8xlarge
              - m6a.12xlarge
              - m6a.16xlarge
              - m6a.24xlarge
              - m6a.32xlarge
              - m6a.48xlarge
              - m6g.metal
              - m6g.medium
              - m6g.large
              - m6g.xlarge
              - m6g.2xlarge
              - m6g.4xlarge
              - m6g.8xlarge
              - m6g.12xlarge
              - m6g.16xlarge
              - m6gd.metal
              - m6gd.medium
              - m6gd.large
              - m6gd.xlarge
              - m6gd.2xlarge
              - m6gd.4xlarge
              - m6gd.8xlarge
              - m6gd.12xlarge
              - m6gd.16xlarge
              - m6i.large
              - m6i.xlarge
              - m6i.2xlarge
              - m6i.4xlarge
              - m6i.8xlarge
              - m6i.12xlarge
              - m6i.16xlarge
              - m6i.24xlarge
              - m6i.32xlarge
              - m6i.metal
              - mac1.metal
              - p2.xlarge
              - p2.8xlarge
              - p2.16xlarge
              - p3.2xlarge
              - p3.8xlarge
              - p3.16xlarge
              - p3dn.24xlarge
              - p4d.24xlarge
              - r3.large
              - r3.xlarge
              - r3.2xlarge
              - r3.4xlarge
              - r3.8xlarge
              - r4.large
              - r4.xlarge
              - r4.2xlarge
              - r4.4xlarge
              - r4.8xlarge
              - r4.16xlarge
              - r5.large
              - r5.xlarge
              - r5.2xlarge
              - r5.4xlarge
              - r5.8xlarge
              - r5.12xlarge
              - r5.16xlarge
              - r5.24xlarge
              - r5.metal
              - r5a.large
              - r5a.xlarge
              - r5a.2xlarge
              - r5a.4xlarge
              - r5a.8xlarge
              - r5a.12xlarge
              - r5a.16xlarge
              - r5a.24xlarge
              - r5ad.large
              - r5ad.xlarge
              - r5ad.2xlarge
              - r5ad.4xlarge
              - r5ad.8xlarge
              - r5ad.12xlarge
              - r5ad.16xlarge
              - r5ad.24xlarge
              - r5b.large
              - r5b.xlarge
              - r5b.2xlarge
              - r5b.4xlarge
              - r5b.8xlarge
              - r5b.12xlarge
              - r5b.16xlarge
              - r5b.24xlarge
              - r5b.metal
              - r5d.large
              - r5d.xlarge
              - r5d.2xlarge
              - r5d.4xlarge
              - r5d.8xlarge
              - r5d.12xlarge
              - r5d.16xlarge
              - r5d.24xlarge
              - r5d.metal
              - r5dn.large
              - r5dn.xlarge
              - r5dn.2xlarge
              - r5dn.4xlarge
              - r5dn.8xlarge
              - r5dn.12xlarge
              - r5dn.16xlarge
              - r5dn.24xlarge
              - r5dn.metal
              - r5n.large
              - r5n.xlarge
              - r5n.2xlarge
              - r5n.4xlarge
              - r5n.8xlarge
              - r5n.12xlarge
              - r5n.16xlarge
              - r5n.24xlarge
              - r5n.metal
              - r6g.medium
              - r6g.large
              - r6g.xlarge
              - r6g.2xlarge
              - r6g.4xlarge
              - r6g.8xlarge
              - r6g.12xlarge
              - r6g.16xlarge
              - r6g.metal
              - r6gd.medium
              - r6gd.large
              - r6gd.xlarge
              - r6gd.2xlarge
              - r6gd.4xlarge
              - r6gd.8xlarge
              - r6gd.12xlarge
              - r6gd.16xlarge
              - r6gd.metal
              - r6i.large
              - r6i.xlarge
              - r6i.2xlarge
              - r6i.4xlarge
              - r6i.8xlarge
              - r6i.12xlarge
              - r6i.16xlarge
              - r6i.24xlarge
              - r6i.32xlarge
              - r6i.metal
              - t1.micro
              - t2.nano
              - t2.micro
              - t2.small
              - t2.medium
              - t2.large
              - t2.xlarge
              - t2.2xlarge
              - t3.nano
              - t3.micro
              - t3.small
              - t3.medium
              - t3.large
              - t3.xlarge
              - t3.2xlarge
              - t3a.nano
              - t3a.micro
              - t3a.small
              - t3a.medium
              - t3a.large
              - t3a.xlarge
              - t3a.2xlarge
              - t4g.nano
              - t4g.micro
              - t4g.small
              - t4g.medium
              - t4g.large
              - t4g.xlarge
              - t4g.2xlarge
              - u-6tb1.56xlarge
              - u-6tb1.112xlarge
              - u-9tb1.112xlarge
              - u-12tb1.112xlarge
              - u-6tb1.metal
              - u-9tb1.metal
              - u-12tb1.metal
              - u-18tb1.metal
              - u-24tb1.metal
              - vt1.3xlarge
              - vt1.6xlarge
              - vt1.24xlarge
              - x1.16xlarge
              - x1.32xlarge
              - x1e.xlarge
              - x1e.2xlarge
              - x1e.4xlarge
              - x1e.8xlarge
              - x1e.16xlarge
              - x1e.32xlarge
              - x2iezn.2xlarge
              - x2iezn.4xlarge
              - x2iezn.6xlarge
              - x2iezn.8xlarge
              - x2iezn.12xlarge
              - x2iezn.metal
              - x2gd.medium
              - x2gd.large
              - x2gd.xlarge
              - x2gd.2xlarge
              - x2gd.4xlarge
              - x2gd.8xlarge
              - x2gd.12xlarge
              - x2gd.16xlarge
              - x2gd.metal
              - z1d.large
              - z1d.xlarge
              - z1d.2xlarge
              - z1d.3xlarge
              - z1d.6xlarge
              - z1d.12xlarge
              - z1d.metal
              - x2idn.16xlarge
              - x2idn.24xlarge
              - x2idn.32xlarge
              - x2iedn.xlarge
              - x2iedn.2xlarge
              - x2iedn.4xlarge
              - x2iedn.8xlarge
              - x2iedn.16xlarge
              - x2iedn.24xlarge
              - x2iedn.32xlarge
              - c6a.large
              - c6a.xlarge
              - c6a.2xlarge
              - c6a.4xlarge
              - c6a.8xlarge
              - c6a.12xlarge
              - c6a.16xlarge
              - c6a.24xlarge
              - c6a.32xlarge
              - c6a.48xlarge
              - c6a.metal
              - m6a.metal
              - i4i.large
              - i4i.xlarge
              - i4i.2xlarge
              - i4i.4xlarge
              - i4i.8xlarge
              - i4i.16xlarge
              - i4i.32xlarge
        - name: Ipv6AddressCount
          in: query
          required: false
          description: '<p>[EC2-VPC] The number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet. You cannot specify this option and the option to assign specific IPv6 addresses in the same request. You can specify this option if you''ve specified a minimum number of instances to launch.</p> <p>You cannot specify this option and the network interfaces option in the same request.</p>'
          schema:
            type: integer
        - name: Ipv6Address
          in: query
          required: false
          description: '<p>[EC2-VPC] The IPv6 addresses from the range of the subnet to associate with the primary network interface. You cannot specify this option and the option to assign a number of IPv6 addresses in the same request. You cannot specify this option if you''ve specified a minimum number of instances to launch.</p> <p>You cannot specify this option and the network interfaces option in the same request.</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/InstanceIpv6Address'
                - xml:
                    name: item
        - name: KernelId
          in: query
          required: false
          description: '<p>The ID of the kernel.</p> <important> <p>We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html">PV-GRUB</a> in the <i>Amazon EC2 User Guide</i>.</p> </important>'
          schema:
            type: string
        - name: KeyName
          in: query
          required: false
          description: '<p>The name of the key pair. You can create a key pair using <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateKeyPair.html">CreateKeyPair</a> or <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportKeyPair.html">ImportKeyPair</a>.</p> <important> <p>If you do not specify a key pair, you can''t connect to the instance unless you choose an AMI that is configured to allow users another way to log in.</p> </important>'
          schema:
            type: string
        - name: MaxCount
          in: query
          required: true
          description: '<p>The maximum number of instances to launch. If you specify more instances than Amazon EC2 can launch in the target Availability Zone, Amazon EC2 launches the largest possible number of instances above <code>MinCount</code>.</p> <p>Constraints: Between 1 and the maximum number you''re allowed for the specified instance type. For more information about the default limits, and how to request an increase, see <a href="http://aws.amazon.com/ec2/faqs/#How_many_instances_can_I_run_in_Amazon_EC2">How many instances can I run in Amazon EC2</a> in the Amazon EC2 FAQ.</p>'
          schema:
            type: integer
        - name: MinCount
          in: query
          required: true
          description: '<p>The minimum number of instances to launch. If you specify a minimum that is more instances than Amazon EC2 can launch in the target Availability Zone, Amazon EC2 launches no instances.</p> <p>Constraints: Between 1 and the maximum number you''re allowed for the specified instance type. For more information about the default limits, and how to request an increase, see <a href="http://aws.amazon.com/ec2/faqs/#How_many_instances_can_I_run_in_Amazon_EC2">How many instances can I run in Amazon EC2</a> in the Amazon EC2 General FAQ.</p>'
          schema:
            type: integer
        - name: Monitoring
          in: query
          required: false
          description: Specifies whether detailed monitoring is enabled for the instance.
          schema:
            type: object
            required:
              - Enabled
            properties:
              enabled:
                allOf:
                  - $ref: '#/components/schemas/Boolean'
                  - description: 'Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is enabled.'
            description: Describes the monitoring of an instance.
        - name: Placement
          in: query
          required: false
          description: The placement for the instance.
          schema:
            type: object
            properties:
              availabilityZone:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: '<p>The Availability Zone of the instance.</p> <p>If not specified, an Availability Zone will be automatically chosen for you based on the load balancing criteria for the Region.</p> <p>This parameter is not supported by <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet">CreateFleet</a>.</p>'
              affinity:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: '<p>The affinity setting for the instance on the Dedicated Host. This parameter is not supported for the <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html">ImportInstance</a> command.</p> <p>This parameter is not supported by <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet">CreateFleet</a>.</p>'
              groupName:
                allOf:
                  - $ref: '#/components/schemas/PlacementGroupName'
                  - description: The name of the placement group the instance is in.
              partitionNumber:
                allOf:
                  - $ref: '#/components/schemas/Integer'
                  - description: '<p>The number of the partition that the instance is in. Valid only if the placement group strategy is set to <code>partition</code>.</p> <p>This parameter is not supported by <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet">CreateFleet</a>.</p>'
              hostId:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: '<p>The ID of the Dedicated Host on which the instance resides. This parameter is not supported for the <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html">ImportInstance</a> command.</p> <p>This parameter is not supported by <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet">CreateFleet</a>.</p>'
              tenancy:
                allOf:
                  - $ref: '#/components/schemas/Tenancy'
                  - description: '<p>The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of <code>dedicated</code> runs on single-tenant hardware. The <code>host</code> tenancy is not supported for the <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html">ImportInstance</a> command.</p> <p>This parameter is not supported by <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet">CreateFleet</a>.</p> <p>T3 instances that use the <code>unlimited</code> CPU credit option do not support <code>host</code> tenancy.</p>'
              spreadDomain:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: '<p>Reserved for future use.</p> <p>This parameter is not supported by <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet">CreateFleet</a>.</p>'
              hostResourceGroupArn:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: '<p>The ARN of the host resource group in which to launch the instances. If you specify a host resource group ARN, omit the <b>Tenancy</b> parameter or set it to <code>host</code>.</p> <p>This parameter is not supported by <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet">CreateFleet</a>.</p>'
            description: Describes the placement of an instance.
        - name: RamdiskId
          in: query
          required: false
          description: '<p>The ID of the RAM disk to select. Some kernels require additional drivers at launch. Check the kernel requirements for information about whether you need to specify a RAM disk. To find kernel requirements, go to the Amazon Web Services Resource Center and search for the kernel ID.</p> <important> <p>We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html">PV-GRUB</a> in the <i>Amazon EC2 User Guide</i>.</p> </important>'
          schema:
            type: string
        - name: SecurityGroupId
          in: query
          required: false
          description: '<p>The IDs of the security groups. You can create a security group using <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSecurityGroup.html">CreateSecurityGroup</a>.</p> <p>If you specify a network interface, you must specify any security groups as part of the network interface.</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/SecurityGroupId'
                - xml:
                    name: SecurityGroupId
        - name: SecurityGroup
          in: query
          required: false
          description: '<p>[EC2-Classic, default VPC] The names of the security groups. For a nondefault VPC, you must use security group IDs instead.</p> <p>If you specify a network interface, you must specify any security groups as part of the network interface.</p> <p>Default: Amazon EC2 uses the default security group.</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/SecurityGroupName'
                - xml:
                    name: SecurityGroup
        - name: SubnetId
          in: query
          required: false
          description: '<p>[EC2-VPC] The ID of the subnet to launch the instance into.</p> <p>If you specify a network interface, you must specify any subnets as part of the network interface.</p>'
          schema:
            type: string
        - name: UserData
          in: query
          required: false
          description: 'The user data script to make available to the instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html">Run commands on your Linux instance at launch</a> and <a href="https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ec2-windows-user-data.html">Run commands on your Windows instance at launch</a>. If you are using a command line tool, base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide base64-encoded text. User data is limited to 16 KB.'
          schema:
            type: string
            format: password
        - name: AdditionalInfo
          in: query
          required: false
          description: Reserved.
          schema:
            type: string
        - name: ClientToken
          in: query
          required: false
          description: '<p>Unique, case-sensitive identifier you provide to ensure the idempotency of the request. If you do not specify a client token, a randomly generated token is used for the request to ensure idempotency.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.</p> <p>Constraints: Maximum 64 ASCII characters</p>'
          schema:
            type: string
        - name: DisableApiTermination
          in: query
          required: false
          description: '<p>If you set this parameter to <code>true</code>, you can''t terminate the instance using the Amazon EC2 console, CLI, or API; otherwise, you can. To change this attribute after launch, use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceAttribute.html">ModifyInstanceAttribute</a>. Alternatively, if you set <code>InstanceInitiatedShutdownBehavior</code> to <code>terminate</code>, you can terminate the instance by running the shutdown command from the instance.</p> <p>Default: <code>false</code> </p>'
          schema:
            type: boolean
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: EbsOptimized
          in: query
          required: false
          description: '<p>Indicates whether the instance is optimized for Amazon EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal Amazon EBS I/O performance. This optimization isn''t available with all instance types. Additional usage charges apply when using an EBS-optimized instance.</p> <p>Default: <code>false</code> </p>'
          schema:
            type: boolean
        - name: IamInstanceProfile
          in: query
          required: false
          description: The name or Amazon Resource Name (ARN) of an IAM instance profile.
          schema:
            type: object
            properties:
              arn:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: The Amazon Resource Name (ARN) of the instance profile.
              name:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: The name of the instance profile.
            description: Describes an IAM instance profile.
        - name: InstanceInitiatedShutdownBehavior
          in: query
          required: false
          description: '<p>Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).</p> <p>Default: <code>stop</code> </p>'
          schema:
            type: string
            enum:
              - stop
              - terminate
        - name: NetworkInterface
          in: query
          required: false
          description: 'The network interfaces to associate with the instance. If you specify a network interface, you must specify any security groups and subnets as part of the network interface.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/InstanceNetworkInterfaceSpecification'
                - xml:
                    name: item
        - name: PrivateIpAddress
          in: query
          required: false
          description: '<p>[EC2-VPC] The primary IPv4 address. You must specify a value from the IPv4 address range of the subnet.</p> <p>Only one private IP address can be designated as primary. You can''t specify this option if you''ve specified the option to designate a private IP address as the primary IP address in a network interface specification. You cannot specify this option if you''re launching more than one instance in the request.</p> <p>You cannot specify this option and the network interfaces option in the same request.</p>'
          schema:
            type: string
        - name: ElasticGpuSpecification
          in: query
          required: false
          description: 'An elastic GPU to associate with the instance. An Elastic GPU is a GPU resource that you can attach to your Windows instance to accelerate the graphics performance of your applications. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-graphics.html">Amazon EC2 Elastic GPUs</a> in the <i>Amazon EC2 User Guide</i>.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/ElasticGpuSpecification'
                - xml:
                    name: item
        - name: ElasticInferenceAccelerator
          in: query
          required: false
          description: <p>An elastic inference accelerator to associate with the instance. Elastic inference accelerators are a resource you can attach to your Amazon EC2 instances to accelerate your Deep Learning (DL) inference workloads.</p> <p>You cannot specify accelerators from different generations in the same request.</p>
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/ElasticInferenceAccelerator'
                - xml:
                    name: item
        - name: TagSpecification
          in: query
          required: false
          description: 'The tags to apply to the resources during launch. You can only tag instances and volumes on launch. The specified tags are applied to all instances or volumes that are created during launch. To tag a resource after it has been created, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html">CreateTags</a>.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
        - name: LaunchTemplate
          in: query
          required: false
          description: 'The launch template to use to launch the instances. Any parameters that you specify in <a>RunInstances</a> override the same parameters in the launch template. You can specify either the name or ID of a launch template, but not both.'
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: '<p>The version number of the launch template.</p> <p>Default: The default version for the launch template.</p>'
            description: 'The launch template to use. You must specify either the launch template ID or launch template name in the request, but not both.'
        - name: InstanceMarketOptions
          in: query
          required: false
          description: '<p>The market (purchasing) option for the instances.</p> <p>For <a>RunInstances</a>, persistent Spot Instance requests are only supported when <b>InstanceInterruptionBehavior</b> is set to either <code>hibernate</code> or <code>stop</code>.</p>'
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/SpotMarketOptions'
                  - description: The options for Spot Instances.
            description: Describes the market (purchasing) option for the instances.
        - name: CreditSpecification
          in: query
          required: false
          description: '<p>The credit option for CPU usage of the burstable performance instance. Valid values are <code>standard</code> and <code>unlimited</code>. To change this attribute after launch, use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceCreditSpecification.html"> ModifyInstanceCreditSpecification</a>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html">Burstable performance instances</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>Default: <code>standard</code> (T2 instances) or <code>unlimited</code> (T3/T3a instances)</p> <p>For T3 instances with <code>host</code> tenancy, only <code>standard</code> is supported.</p>'
          schema:
            type: object
            required:
              - CpuCredits
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: 'The credit option for CPU usage of a T2, T3, or T3a instance. Valid values are <code>standard</code> and <code>unlimited</code>.'
            description: 'The credit option for CPU usage of a T2, T3, or T3a instance.'
        - name: CpuOptions
          in: query
          required: false
          description: 'The CPU options for the instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html">Optimize CPU options</a> in the <i>Amazon EC2 User Guide</i>.'
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/Integer'
                  - description: 'The number of threads per CPU core. To disable multithreading for the instance, specify a value of <code>1</code>. Otherwise, specify the default value of <code>2</code>.'
            description: The CPU options for the instance. Both the core count and threads per core must be specified in the request.
        - name: CapacityReservationSpecification
          in: query
          required: false
          description: 'Information about the Capacity Reservation targeting option. If you do not specify this parameter, the instance''s Capacity Reservation preference defaults to <code>open</code>, which enables it to run in any open Capacity Reservation that has matching attributes (instance type, platform, Availability Zone).'
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/CapacityReservationTarget'
                  - description: Information about the target Capacity Reservation or Capacity Reservation group.
            description: '<p>Describes an instance''s Capacity Reservation targeting option. You can specify only one parameter at a time. If you specify <code>CapacityReservationPreference</code> and <code>CapacityReservationTarget</code>, the request fails.</p> <p>Use the <code>CapacityReservationPreference</code> parameter to configure the instance to run as an On-Demand Instance or to run in any <code>open</code> Capacity Reservation that has matching attributes (instance type, platform, Availability Zone). Use the <code>CapacityReservationTarget</code> parameter to explicitly target a specific Capacity Reservation or a Capacity Reservation group.</p>'
        - name: HibernationOptions
          in: query
          required: false
          description: '<p>Indicates whether an instance is enabled for hibernation. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html">Hibernate your instance</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>You can''t enable hibernation and Amazon Web Services Nitro Enclaves on the same instance.</p>'
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/Boolean'
                  - description: '<p>If you set this parameter to <code>true</code>, your instance is enabled for hibernation.</p> <p>Default: <code>false</code> </p>'
            description: 'Indicates whether your instance is configured for hibernation. This parameter is valid only if the instance meets the <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html#hibernating-prerequisites">hibernation prerequisites</a>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html">Hibernate your instance</a> in the <i>Amazon EC2 User Guide</i>.'
        - name: LicenseSpecification
          in: query
          required: false
          description: The license configurations.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/LicenseConfigurationRequest'
                - xml:
                    name: item
        - name: MetadataOptions
          in: query
          required: false
          description: 'The metadata options for the instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">Instance metadata and user data</a>.'
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/InstanceMetadataTagsState'
                  - description: '<p>Set to <code>enabled</code> to allow access to instance tags from the instance metadata. Set to <code>disabled</code> to turn off access to instance tags from the instance metadata. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#work-with-tags-in-IMDS">Work with instance tags using the instance metadata</a>.</p> <p>Default: <code>disabled</code> </p>'
            description: The metadata options for the instance.
        - name: EnclaveOptions
          in: query
          required: false
          description: '<p>Indicates whether the instance is enabled for Amazon Web Services Nitro Enclaves. For more information, see <a href="https://docs.aws.amazon.com/enclaves/latest/user/nitro-enclave.html"> What is Amazon Web Services Nitro Enclaves?</a> in the <i>Amazon Web Services Nitro Enclaves User Guide</i>.</p> <p>You can''t enable Amazon Web Services Nitro Enclaves and hibernation on the same instance.</p>'
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/Boolean'
                  - description: 'To enable the instance for Amazon Web Services Nitro Enclaves, set this parameter to <code>true</code>.'
            description: 'Indicates whether the instance is enabled for Amazon Web Services Nitro Enclaves. For more information, see <a href="https://docs.aws.amazon.com/enclaves/latest/user/nitro-enclave.html"> What is Amazon Web Services Nitro Enclaves?</a> in the <i>Amazon Web Services Nitro Enclaves User Guide</i>.'
        - name: PrivateDnsNameOptions
          in: query
          required: false
          description: The options for the instance hostname. The default values are inherited from the subnet.
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/Boolean'
                  - description: Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.
            description: Describes the options for instance hostnames.
        - name: MaintenanceOptions
          in: query
          required: false
          description: The maintenance and recovery options for the instance.
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/InstanceAutoRecoveryState'
                  - description: 'Disables the automatic recovery behavior of your instance or sets it to default. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-recover.html#instance-configuration-recovery">Simplified automatic recovery</a>.'
            description: The maintenance options for the instance.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: RunInstances
      operationId: POST_RunInstances
      description: '<p>Launches the specified number of instances using an AMI for which you have permissions.</p> <p>You can specify a number of options, or leave the default options. The following rules apply:</p> <ul> <li> <p>[EC2-VPC] If you don''t specify a subnet ID, we choose a default subnet from your default VPC for you. If you don''t have a default VPC, you must specify a subnet ID in the request.</p> </li> <li> <p>[EC2-Classic] If don''t specify an Availability Zone, we choose one for you.</p> </li> <li> <p>Some instance types must be launched into a VPC. If you do not have a default VPC, or if you do not specify a subnet ID, the request fails. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-vpc.html#vpc-only-instance-types">Instance types available only in a VPC</a>.</p> </li> <li> <p>[EC2-VPC] All instances have a network interface with a primary private IPv4 address. If you don''t specify this address, we choose one from the IPv4 range of your subnet.</p> </li> <li> <p>Not all instance types support IPv6 addresses. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance types</a>.</p> </li> <li> <p>If you don''t specify a security group ID, we use the default security group. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html">Security groups</a>.</p> </li> <li> <p>If any of the AMIs have a product code attached for which the user has not subscribed, the request fails.</p> </li> </ul> <p>You can create a <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html">launch template</a>, which is a resource that contains the parameters to launch an instance. When you launch an instance using <a>RunInstances</a>, you can specify the launch template instead of specifying the launch parameters.</p> <p>To ensure faster instance launches, break up large requests into smaller batches. For example, create five separate launch requests for 100 instances each instead of one launch request for 500 instances.</p> <p>An instance is ready for you to use when it''s in the <code>running</code> state. You can check the state of your instance using <a>DescribeInstances</a>. You can tag instances and EBS volumes during launch, after launch, or both. For more information, see <a>CreateTags</a> and <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging your Amazon EC2 resources</a>.</p> <p>Linux instances have access to the public key of the key pair at boot. You can use this key to provide secure access to the instance. Amazon EC2 public images use this feature to provide secure access without passwords. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Key pairs</a>.</p> <p>For troubleshooting, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_InstanceStraightToTerminated.html">What to do if an instance immediately terminates</a>, and <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstancesConnecting.html">Troubleshooting connecting to your instance</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/Reservation'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RunInstancesRequest'
      parameters: []
  /?Action=RunScheduledInstances&Version=2016-11-15:
    get:
      x-aws-operation-name: RunScheduledInstances
      operationId: GET_RunScheduledInstances
      description: '<p>Launches the specified Scheduled Instances.</p> <p>Before you can launch a Scheduled Instance, you must purchase it and obtain an identifier using <a>PurchaseScheduledInstances</a>.</p> <p>You must launch a Scheduled Instance during its scheduled time period. You can''t stop or reboot a Scheduled Instance, but you can terminate it as needed. If you terminate a Scheduled Instance before the current scheduled time period ends, you can launch it again after a few minutes. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-scheduled-instances.html">Scheduled Instances</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RunScheduledInstancesResult'
      parameters:
        - name: ClientToken
          in: query
          required: false
          description: 'Unique, case-sensitive identifier that ensures the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.'
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: InstanceCount
          in: query
          required: false
          description: '<p>The number of instances.</p> <p>Default: 1</p>'
          schema:
            type: integer
        - name: LaunchSpecification
          in: query
          required: true
          description: 'The launch specification. You must match the instance type, Availability Zone, network, and platform of the schedule that you purchased.'
          schema:
            type: object
            required:
              - ImageId
            properties:
              BlockDeviceMapping:
                allOf:
                  - $ref: '#/components/schemas/ScheduledInstancesMonitoring'
                  - description: Enable or disable monitoring for the instances.
              NetworkInterface:
                allOf:
                  - $ref: '#/components/schemas/RamdiskId'
                  - description: The ID of the RAM disk.
              SecurityGroupId:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: The base64-encoded MIME user data.
            description: '<p>Describes the launch specification for a Scheduled Instance.</p> <p>If you are launching the Scheduled Instance in EC2-VPC, you must specify the ID of the subnet. You can specify the subnet using either <code>SubnetId</code> or <code>NetworkInterface</code>.</p>'
        - name: ScheduledInstanceId
          in: query
          required: true
          description: The Scheduled Instance ID.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: RunScheduledInstances
      operationId: POST_RunScheduledInstances
      description: '<p>Launches the specified Scheduled Instances.</p> <p>Before you can launch a Scheduled Instance, you must purchase it and obtain an identifier using <a>PurchaseScheduledInstances</a>.</p> <p>You must launch a Scheduled Instance during its scheduled time period. You can''t stop or reboot a Scheduled Instance, but you can terminate it as needed. If you terminate a Scheduled Instance before the current scheduled time period ends, you can launch it again after a few minutes. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-scheduled-instances.html">Scheduled Instances</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RunScheduledInstancesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RunScheduledInstancesRequest'
      parameters: []
  /?Action=SearchLocalGatewayRoutes&Version=2016-11-15:
    get:
      x-aws-operation-name: SearchLocalGatewayRoutes
      operationId: GET_SearchLocalGatewayRoutes
      description: Searches for routes in the specified local gateway route table.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SearchLocalGatewayRoutesResult'
      parameters:
        - name: LocalGatewayRouteTableId
          in: query
          required: true
          description: The ID of the local gateway route table.
          schema:
            type: string
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters.</p> <ul> <li> <p> <code>route-search.exact-match</code> - The exact match of the specified filter.</p> </li> <li> <p> <code>route-search.longest-prefix-match</code> - The longest prefix that matches the route.</p> </li> <li> <p> <code>route-search.subnet-of-match</code> - The routes with a subnet that match the specified CIDR filter.</p> </li> <li> <p> <code>route-search.supernet-of-match</code> - The routes with a CIDR that encompass the CIDR filter. For example, if you have 10.0.1.0/29 and 10.0.1.0/31 routes in your route table and you specify <code>supernet-of-match</code> as 10.0.1.0/30, then the result returns 10.0.1.0/29.</p> </li> <li> <p> <code>state</code> - The state of the route.</p> </li> <li> <p> <code>type</code> - The route type.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: SearchLocalGatewayRoutes
      operationId: POST_SearchLocalGatewayRoutes
      description: Searches for routes in the specified local gateway route table.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SearchLocalGatewayRoutesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/SearchLocalGatewayRoutesRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=SearchTransitGatewayMulticastGroups&Version=2016-11-15:
    get:
      x-aws-operation-name: SearchTransitGatewayMulticastGroups
      operationId: GET_SearchTransitGatewayMulticastGroups
      description: Searches one or more transit gateway multicast groups and returns the group membership information.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SearchTransitGatewayMulticastGroupsResult'
      parameters:
        - name: TransitGatewayMulticastDomainId
          in: query
          required: false
          description: The ID of the transit gateway multicast domain.
          schema:
            type: string
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters. The possible values are:</p> <ul> <li> <p> <code>group-ip-address</code> - The IP address of the transit gateway multicast group.</p> </li> <li> <p> <code>is-group-member</code> - The resource is a group member. Valid values are <code>true</code> | <code>false</code>.</p> </li> <li> <p> <code>is-group-source</code> - The resource is a group source. Valid values are <code>true</code> | <code>false</code>.</p> </li> <li> <p> <code>member-type</code> - The member type. Valid values are <code>igmp</code> | <code>static</code>.</p> </li> <li> <p> <code>resource-id</code> - The ID of the resource.</p> </li> <li> <p> <code>resource-type</code> - The type of resource. Valid values are <code>vpc</code> | <code>vpn</code> | <code>direct-connect-gateway</code> | <code>tgw-peering</code>.</p> </li> <li> <p> <code>source-type</code> - The source type. Valid values are <code>igmp</code> | <code>static</code>.</p> </li> <li> <p> <code>subnet-id</code> - The ID of the subnet.</p> </li> <li> <p> <code>transit-gateway-attachment-id</code> - The id of the transit gateway attachment.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 5
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: SearchTransitGatewayMulticastGroups
      operationId: POST_SearchTransitGatewayMulticastGroups
      description: Searches one or more transit gateway multicast groups and returns the group membership information.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SearchTransitGatewayMulticastGroupsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/SearchTransitGatewayMulticastGroupsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /?Action=SearchTransitGatewayRoutes&Version=2016-11-15:
    get:
      x-aws-operation-name: SearchTransitGatewayRoutes
      operationId: GET_SearchTransitGatewayRoutes
      description: Searches for routes in the specified transit gateway route table.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SearchTransitGatewayRoutesResult'
      parameters:
        - name: TransitGatewayRouteTableId
          in: query
          required: true
          description: The ID of the transit gateway route table.
          schema:
            type: string
        - name: Filter
          in: query
          required: true
          description: '<p>One or more filters. The possible values are:</p> <ul> <li> <p> <code>attachment.transit-gateway-attachment-id</code>- The id of the transit gateway attachment.</p> </li> <li> <p> <code>attachment.resource-id</code> - The resource id of the transit gateway attachment.</p> </li> <li> <p> <code>attachment.resource-type</code> - The attachment resource type. Valid values are <code>vpc</code> | <code>vpn</code> | <code>direct-connect-gateway</code> | <code>peering</code> | <code>connect</code>.</p> </li> <li> <p> <code>prefix-list-id</code> - The ID of the prefix list.</p> </li> <li> <p> <code>route-search.exact-match</code> - The exact match of the specified filter.</p> </li> <li> <p> <code>route-search.longest-prefix-match</code> - The longest prefix that matches the route.</p> </li> <li> <p> <code>route-search.subnet-of-match</code> - The routes with a subnet that match the specified CIDR filter.</p> </li> <li> <p> <code>route-search.supernet-of-match</code> - The routes with a CIDR that encompass the CIDR filter. For example, if you have 10.0.1.0/29 and 10.0.1.0/31 routes in your route table and you specify supernet-of-match as 10.0.1.0/30, then the result returns 10.0.1.0/29.</p> </li> <li> <p> <code>state</code> - The state of the route (<code>active</code> | <code>blackhole</code>).</p> </li> <li> <p> <code>type</code> - The type of route (<code>propagated</code> | <code>static</code>).</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: MaxResults
          in: query
          required: false
          description: The maximum number of routes to return.
          schema:
            type: integer
            minimum: 5
            maximum: 1000
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: SearchTransitGatewayRoutes
      operationId: POST_SearchTransitGatewayRoutes
      description: Searches for routes in the specified transit gateway route table.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SearchTransitGatewayRoutesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/SearchTransitGatewayRoutesRequest'
      parameters: []
  /?Action=SendDiagnosticInterrupt&Version=2016-11-15:
    get:
      x-aws-operation-name: SendDiagnosticInterrupt
      operationId: GET_SendDiagnosticInterrupt
      description: '<p>Sends a diagnostic interrupt to the specified Amazon EC2 instance to trigger a <i>kernel panic</i> (on Linux instances), or a <i>blue screen</i>/<i>stop error</i> (on Windows instances). For instances based on Intel and AMD processors, the interrupt is received as a <i>non-maskable interrupt</i> (NMI).</p> <p>In general, the operating system crashes and reboots when a kernel panic or stop error is triggered. The operating system can also be configured to perform diagnostic tasks, such as generating a memory dump file, loading a secondary kernel, or obtaining a call trace.</p> <p>Before sending a diagnostic interrupt to your instance, ensure that its operating system is configured to perform the required diagnostic tasks.</p> <p>For more information about configuring your operating system to generate a crash dump when a kernel panic or stop error occurs, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/diagnostic-interrupt.html">Send a diagnostic interrupt (for advanced users)</a> (Linux instances) or <a href="https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/diagnostic-interrupt.html">Send a diagnostic interrupt (for advanced users)</a> (Windows instances).</p>'
      responses:
        '200':
          description: Success
      parameters:
        - name: InstanceId
          in: query
          required: true
          description: The ID of the instance.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: SendDiagnosticInterrupt
      operationId: POST_SendDiagnosticInterrupt
      description: '<p>Sends a diagnostic interrupt to the specified Amazon EC2 instance to trigger a <i>kernel panic</i> (on Linux instances), or a <i>blue screen</i>/<i>stop error</i> (on Windows instances). For instances based on Intel and AMD processors, the interrupt is received as a <i>non-maskable interrupt</i> (NMI).</p> <p>In general, the operating system crashes and reboots when a kernel panic or stop error is triggered. The operating system can also be configured to perform diagnostic tasks, such as generating a memory dump file, loading a secondary kernel, or obtaining a call trace.</p> <p>Before sending a diagnostic interrupt to your instance, ensure that its operating system is configured to perform the required diagnostic tasks.</p> <p>For more information about configuring your operating system to generate a crash dump when a kernel panic or stop error occurs, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/diagnostic-interrupt.html">Send a diagnostic interrupt (for advanced users)</a> (Linux instances) or <a href="https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/diagnostic-interrupt.html">Send a diagnostic interrupt (for advanced users)</a> (Windows instances).</p>'
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/SendDiagnosticInterruptRequest'
      parameters: []
  /?Action=StartInstances&Version=2016-11-15:
    get:
      x-aws-operation-name: StartInstances
      operationId: GET_StartInstances
      description: '<p>Starts an Amazon EBS-backed instance that you''ve previously stopped.</p> <p>Instances that use Amazon EBS volumes as their root devices can be quickly stopped and started. When an instance is stopped, the compute resources are released and you are not billed for instance usage. However, your root partition Amazon EBS volume remains and continues to persist your data, and you are charged for Amazon EBS volume usage. You can restart your instance at any time. Every time you start your instance, Amazon EC2 charges a one-minute minimum for instance usage, and thereafter charges per second for instance usage.</p> <p>Before stopping an instance, make sure it is in a state from which it can be restarted. Stopping an instance does not preserve data stored in RAM.</p> <p>Performing this operation on an instance that uses an instance store as its root device returns an error.</p> <p>If you attempt to start a T3 instance with <code>host</code> tenancy and the <code>unlimted</code> CPU credit option, the request fails. The <code>unlimited</code> CPU credit option is not supported on Dedicated Hosts. Before you start the instance, either change its CPU credit option to <code>standard</code>, or change its tenancy to <code>default</code> or <code>dedicated</code>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html">Stop and start your instance</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StartInstancesResult'
      parameters:
        - name: InstanceId
          in: query
          required: true
          description: The IDs of the instances.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/InstanceId'
        - name: AdditionalInfo
          in: query
          required: false
          description: Reserved.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: StartInstances
      operationId: POST_StartInstances
      description: '<p>Starts an Amazon EBS-backed instance that you''ve previously stopped.</p> <p>Instances that use Amazon EBS volumes as their root devices can be quickly stopped and started. When an instance is stopped, the compute resources are released and you are not billed for instance usage. However, your root partition Amazon EBS volume remains and continues to persist your data, and you are charged for Amazon EBS volume usage. You can restart your instance at any time. Every time you start your instance, Amazon EC2 charges a one-minute minimum for instance usage, and thereafter charges per second for instance usage.</p> <p>Before stopping an instance, make sure it is in a state from which it can be restarted. Stopping an instance does not preserve data stored in RAM.</p> <p>Performing this operation on an instance that uses an instance store as its root device returns an error.</p> <p>If you attempt to start a T3 instance with <code>host</code> tenancy and the <code>unlimted</code> CPU credit option, the request fails. The <code>unlimited</code> CPU credit option is not supported on Dedicated Hosts. Before you start the instance, either change its CPU credit option to <code>standard</code>, or change its tenancy to <code>default</code> or <code>dedicated</code>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html">Stop and start your instance</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StartInstancesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/StartInstancesRequest'
      parameters: []
  /?Action=StartNetworkInsightsAccessScopeAnalysis&Version=2016-11-15:
    get:
      x-aws-operation-name: StartNetworkInsightsAccessScopeAnalysis
      operationId: GET_StartNetworkInsightsAccessScopeAnalysis
      description: Starts analyzing the specified Network Access Scope.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StartNetworkInsightsAccessScopeAnalysisResult'
      parameters:
        - name: NetworkInsightsAccessScopeId
          in: query
          required: true
          description: The ID of the Network Access Scope.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: TagSpecification
          in: query
          required: false
          description: The tags to apply.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
        - name: ClientToken
          in: query
          required: true
          description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to ensure idempotency</a>.'
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: StartNetworkInsightsAccessScopeAnalysis
      operationId: POST_StartNetworkInsightsAccessScopeAnalysis
      description: Starts analyzing the specified Network Access Scope.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StartNetworkInsightsAccessScopeAnalysisResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/StartNetworkInsightsAccessScopeAnalysisRequest'
      parameters: []
  /?Action=StartNetworkInsightsAnalysis&Version=2016-11-15:
    get:
      x-aws-operation-name: StartNetworkInsightsAnalysis
      operationId: GET_StartNetworkInsightsAnalysis
      description: 'Starts analyzing the specified path. If the path is reachable, the operation returns the shortest feasible path.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StartNetworkInsightsAnalysisResult'
      parameters:
        - name: NetworkInsightsPathId
          in: query
          required: true
          description: The ID of the path.
          schema:
            type: string
        - name: FilterInArn
          in: query
          required: false
          description: The Amazon Resource Names (ARN) of the resources that the path must traverse.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/ResourceArn'
                - xml:
                    name: item
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: TagSpecification
          in: query
          required: false
          description: The tags to apply.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/TagSpecification'
                - xml:
                    name: item
        - name: ClientToken
          in: query
          required: true
          description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to ensure idempotency</a>.'
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: StartNetworkInsightsAnalysis
      operationId: POST_StartNetworkInsightsAnalysis
      description: 'Starts analyzing the specified path. If the path is reachable, the operation returns the shortest feasible path.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StartNetworkInsightsAnalysisResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/StartNetworkInsightsAnalysisRequest'
      parameters: []
  /?Action=StartVpcEndpointServicePrivateDnsVerification&Version=2016-11-15:
    get:
      x-aws-operation-name: StartVpcEndpointServicePrivateDnsVerification
      operationId: GET_StartVpcEndpointServicePrivateDnsVerification
      description: '<p>Initiates the verification process to prove that the service provider owns the private DNS name domain for the endpoint service.</p> <p>The service provider must successfully perform the verification before the consumer can use the name to access the service.</p> <p>Before the service provider runs this command, they must add a record to the DNS server.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StartVpcEndpointServicePrivateDnsVerificationResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: ServiceId
          in: query
          required: true
          description: The ID of the endpoint service.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: StartVpcEndpointServicePrivateDnsVerification
      operationId: POST_StartVpcEndpointServicePrivateDnsVerification
      description: '<p>Initiates the verification process to prove that the service provider owns the private DNS name domain for the endpoint service.</p> <p>The service provider must successfully perform the verification before the consumer can use the name to access the service.</p> <p>Before the service provider runs this command, they must add a record to the DNS server.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StartVpcEndpointServicePrivateDnsVerificationResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/StartVpcEndpointServicePrivateDnsVerificationRequest'
      parameters: []
  /?Action=StopInstances&Version=2016-11-15:
    get:
      x-aws-operation-name: StopInstances
      operationId: GET_StopInstances
      description: '<p>Stops an Amazon EBS-backed instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html">Stop and start your instance</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>You can use the Stop action to hibernate an instance if the instance is <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html#enabling-hibernation">enabled for hibernation</a> and it meets the <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html#hibernating-prerequisites">hibernation prerequisites</a>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html">Hibernate your instance</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>We don''t charge usage for a stopped instance, or data transfer fees; however, your root partition Amazon EBS volume remains and continues to persist your data, and you are charged for Amazon EBS volume usage. Every time you start your instance, Amazon EC2 charges a one-minute minimum for instance usage, and thereafter charges per second for instance usage.</p> <p>You can''t stop or hibernate instance store-backed instances. You can''t use the Stop action to hibernate Spot Instances, but you can specify that Amazon EC2 should hibernate Spot Instances when they are interrupted. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-interruptions.html#hibernate-spot-instances">Hibernating interrupted Spot Instances</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>When you stop or hibernate an instance, we shut it down. You can restart your instance at any time. Before stopping or hibernating an instance, make sure it is in a state from which it can be restarted. Stopping an instance does not preserve data stored in RAM, but hibernating an instance does preserve data stored in RAM. If an instance cannot hibernate successfully, a normal shutdown occurs.</p> <p>Stopping and hibernating an instance is different to rebooting or terminating it. For example, when you stop or hibernate an instance, the root device and any other devices attached to the instance persist. When you terminate an instance, the root device and any other devices attached during the instance launch are automatically deleted. For more information about the differences between rebooting, stopping, hibernating, and terminating instances, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html">Instance lifecycle</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>When you stop an instance, we attempt to shut it down forcibly after a short while. If your instance appears stuck in the stopping state after a period of time, there may be an issue with the underlying host computer. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstancesStopping.html">Troubleshoot stopping your instance</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StopInstancesResult'
      parameters:
        - name: InstanceId
          in: query
          required: true
          description: The IDs of the instances.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/InstanceId'
                - xml:
                    name: InstanceId
        - name: Hibernate
          in: query
          required: false
          description: '<p>Hibernates the instance if the instance was enabled for hibernation at launch. If the instance cannot hibernate successfully, a normal shutdown occurs. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html">Hibernate your instance</a> in the <i>Amazon EC2 User Guide</i>.</p> <p> Default: <code>false</code> </p>'
          schema:
            type: boolean
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: Force
          in: query
          required: false
          description: '<p>Forces the instances to stop. The instances do not have an opportunity to flush file system caches or file system metadata. If you use this option, you must perform file system check and repair procedures. This option is not recommended for Windows instances.</p> <p>Default: <code>false</code> </p>'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: StopInstances
      operationId: POST_StopInstances
      description: '<p>Stops an Amazon EBS-backed instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html">Stop and start your instance</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>You can use the Stop action to hibernate an instance if the instance is <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html#enabling-hibernation">enabled for hibernation</a> and it meets the <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html#hibernating-prerequisites">hibernation prerequisites</a>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html">Hibernate your instance</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>We don''t charge usage for a stopped instance, or data transfer fees; however, your root partition Amazon EBS volume remains and continues to persist your data, and you are charged for Amazon EBS volume usage. Every time you start your instance, Amazon EC2 charges a one-minute minimum for instance usage, and thereafter charges per second for instance usage.</p> <p>You can''t stop or hibernate instance store-backed instances. You can''t use the Stop action to hibernate Spot Instances, but you can specify that Amazon EC2 should hibernate Spot Instances when they are interrupted. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-interruptions.html#hibernate-spot-instances">Hibernating interrupted Spot Instances</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>When you stop or hibernate an instance, we shut it down. You can restart your instance at any time. Before stopping or hibernating an instance, make sure it is in a state from which it can be restarted. Stopping an instance does not preserve data stored in RAM, but hibernating an instance does preserve data stored in RAM. If an instance cannot hibernate successfully, a normal shutdown occurs.</p> <p>Stopping and hibernating an instance is different to rebooting or terminating it. For example, when you stop or hibernate an instance, the root device and any other devices attached to the instance persist. When you terminate an instance, the root device and any other devices attached during the instance launch are automatically deleted. For more information about the differences between rebooting, stopping, hibernating, and terminating instances, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html">Instance lifecycle</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>When you stop an instance, we attempt to shut it down forcibly after a short while. If your instance appears stuck in the stopping state after a period of time, there may be an issue with the underlying host computer. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstancesStopping.html">Troubleshoot stopping your instance</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StopInstancesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/StopInstancesRequest'
      parameters: []
  /?Action=TerminateClientVpnConnections&Version=2016-11-15:
    get:
      x-aws-operation-name: TerminateClientVpnConnections
      operationId: GET_TerminateClientVpnConnections
      description: 'Terminates active Client VPN endpoint connections. This action can be used to terminate a specific client connection, or up to five connections established by a specific user.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TerminateClientVpnConnectionsResult'
      parameters:
        - name: ClientVpnEndpointId
          in: query
          required: true
          description: The ID of the Client VPN endpoint to which the client is connected.
          schema:
            type: string
        - name: ConnectionId
          in: query
          required: false
          description: The ID of the client connection to be terminated.
          schema:
            type: string
        - name: Username
          in: query
          required: false
          description: The name of the user who initiated the connection. Use this option to terminate all active connections for the specified user. This option can only be used if the user has established up to five connections.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: TerminateClientVpnConnections
      operationId: POST_TerminateClientVpnConnections
      description: 'Terminates active Client VPN endpoint connections. This action can be used to terminate a specific client connection, or up to five connections established by a specific user.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TerminateClientVpnConnectionsResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/TerminateClientVpnConnectionsRequest'
      parameters: []
  /?Action=TerminateInstances&Version=2016-11-15:
    get:
      x-aws-operation-name: TerminateInstances
      operationId: GET_TerminateInstances
      description: '<p>Shuts down the specified instances. This operation is idempotent; if you terminate an instance more than once, each call succeeds. </p> <p>If you specify multiple instances and the request fails (for example, because of a single incorrect instance ID), none of the instances are terminated.</p> <p>If you terminate multiple instances across multiple Availability Zones, and one or more of the specified instances are enabled for termination protection, the request fails with the following results:</p> <ul> <li> <p>The specified instances that are in the same Availability Zone as the protected instance are not terminated.</p> </li> <li> <p>The specified instances that are in different Availability Zones, where no other specified instances are protected, are successfully terminated.</p> </li> </ul> <p>For example, say you have the following instances:</p> <ul> <li> <p>Instance A: <code>us-east-1a</code>; Not protected</p> </li> <li> <p>Instance B: <code>us-east-1a</code>; Not protected</p> </li> <li> <p>Instance C: <code>us-east-1b</code>; Protected</p> </li> <li> <p>Instance D: <code>us-east-1b</code>; not protected</p> </li> </ul> <p>If you attempt to terminate all of these instances in the same request, the request reports failure with the following results:</p> <ul> <li> <p>Instance A and Instance B are successfully terminated because none of the specified instances in <code>us-east-1a</code> are enabled for termination protection.</p> </li> <li> <p>Instance C and Instance D fail to terminate because at least one of the specified instances in <code>us-east-1b</code> (Instance C) is enabled for termination protection.</p> </li> </ul> <p>Terminated instances remain visible after termination (for approximately one hour).</p> <p>By default, Amazon EC2 deletes all EBS volumes that were attached when the instance launched. Volumes attached after instance launch continue running.</p> <p>You can stop, start, and terminate EBS-backed instances. You can only terminate instance store-backed instances. What happens to an instance differs if you stop it or terminate it. For example, when you stop an instance, the root device and any other devices attached to the instance persist. When you terminate an instance, any attached EBS volumes with the <code>DeleteOnTermination</code> block device mapping parameter set to <code>true</code> are automatically deleted. For more information about the differences between stopping and terminating instances, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html">Instance lifecycle</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>For more information about troubleshooting, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstancesShuttingDown.html">Troubleshooting terminating your instance</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TerminateInstancesResult'
      parameters:
        - name: InstanceId
          in: query
          required: true
          description: '<p>The IDs of the instances.</p> <p>Constraints: Up to 1000 instance IDs. We recommend breaking up this request into smaller batches.</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/InstanceId'
                - xml:
                    name: InstanceId
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: TerminateInstances
      operationId: POST_TerminateInstances
      description: '<p>Shuts down the specified instances. This operation is idempotent; if you terminate an instance more than once, each call succeeds. </p> <p>If you specify multiple instances and the request fails (for example, because of a single incorrect instance ID), none of the instances are terminated.</p> <p>If you terminate multiple instances across multiple Availability Zones, and one or more of the specified instances are enabled for termination protection, the request fails with the following results:</p> <ul> <li> <p>The specified instances that are in the same Availability Zone as the protected instance are not terminated.</p> </li> <li> <p>The specified instances that are in different Availability Zones, where no other specified instances are protected, are successfully terminated.</p> </li> </ul> <p>For example, say you have the following instances:</p> <ul> <li> <p>Instance A: <code>us-east-1a</code>; Not protected</p> </li> <li> <p>Instance B: <code>us-east-1a</code>; Not protected</p> </li> <li> <p>Instance C: <code>us-east-1b</code>; Protected</p> </li> <li> <p>Instance D: <code>us-east-1b</code>; not protected</p> </li> </ul> <p>If you attempt to terminate all of these instances in the same request, the request reports failure with the following results:</p> <ul> <li> <p>Instance A and Instance B are successfully terminated because none of the specified instances in <code>us-east-1a</code> are enabled for termination protection.</p> </li> <li> <p>Instance C and Instance D fail to terminate because at least one of the specified instances in <code>us-east-1b</code> (Instance C) is enabled for termination protection.</p> </li> </ul> <p>Terminated instances remain visible after termination (for approximately one hour).</p> <p>By default, Amazon EC2 deletes all EBS volumes that were attached when the instance launched. Volumes attached after instance launch continue running.</p> <p>You can stop, start, and terminate EBS-backed instances. You can only terminate instance store-backed instances. What happens to an instance differs if you stop it or terminate it. For example, when you stop an instance, the root device and any other devices attached to the instance persist. When you terminate an instance, any attached EBS volumes with the <code>DeleteOnTermination</code> block device mapping parameter set to <code>true</code> are automatically deleted. For more information about the differences between stopping and terminating instances, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html">Instance lifecycle</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>For more information about troubleshooting, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstancesShuttingDown.html">Troubleshooting terminating your instance</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TerminateInstancesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/TerminateInstancesRequest'
      parameters: []
  /?Action=UnassignIpv6Addresses&Version=2016-11-15:
    get:
      x-aws-operation-name: UnassignIpv6Addresses
      operationId: GET_UnassignIpv6Addresses
      description: Unassigns one or more IPv6 addresses IPv4 Prefix Delegation prefixes from a network interface.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnassignIpv6AddressesResult'
      parameters:
        - name: Ipv6Addresses
          in: query
          required: false
          description: The IPv6 addresses to unassign from the network interface.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: item
        - name: Ipv6Prefix
          in: query
          required: false
          description: One or more IPv6 prefixes to unassign from the network interface.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: item
        - name: NetworkInterfaceId
          in: query
          required: true
          description: The ID of the network interface.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: UnassignIpv6Addresses
      operationId: POST_UnassignIpv6Addresses
      description: Unassigns one or more IPv6 addresses IPv4 Prefix Delegation prefixes from a network interface.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnassignIpv6AddressesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UnassignIpv6AddressesRequest'
      parameters: []
  /?Action=UnassignPrivateIpAddresses&Version=2016-11-15:
    get:
      x-aws-operation-name: UnassignPrivateIpAddresses
      operationId: GET_UnassignPrivateIpAddresses
      description: 'Unassigns one or more secondary private IP addresses, or IPv4 Prefix Delegation prefixes from a network interface.'
      responses:
        '200':
          description: Success
      parameters:
        - name: NetworkInterfaceId
          in: query
          required: true
          description: The ID of the network interface.
          schema:
            type: string
        - name: PrivateIpAddress
          in: query
          required: false
          description: The secondary private IP addresses to unassign from the network interface. You can specify this option multiple times to unassign more than one IP address.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: PrivateIpAddress
        - name: Ipv4Prefix
          in: query
          required: false
          description: The IPv4 prefixes to unassign from the network interface.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/String'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: UnassignPrivateIpAddresses
      operationId: POST_UnassignPrivateIpAddresses
      description: 'Unassigns one or more secondary private IP addresses, or IPv4 Prefix Delegation prefixes from a network interface.'
      responses:
        '200':
          description: Success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UnassignPrivateIpAddressesRequest'
      parameters: []
  /?Action=UnmonitorInstances&Version=2016-11-15:
    get:
      x-aws-operation-name: UnmonitorInstances
      operationId: GET_UnmonitorInstances
      description: 'Disables detailed monitoring for a running instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-cloudwatch.html">Monitoring your instances and volumes</a> in the <i>Amazon EC2 User Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnmonitorInstancesResult'
      parameters:
        - name: InstanceId
          in: query
          required: true
          description: The IDs of the instances.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/InstanceId'
                - xml:
                    name: InstanceId
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: UnmonitorInstances
      operationId: POST_UnmonitorInstances
      description: 'Disables detailed monitoring for a running instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-cloudwatch.html">Monitoring your instances and volumes</a> in the <i>Amazon EC2 User Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnmonitorInstancesResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UnmonitorInstancesRequest'
      parameters: []
  /?Action=UpdateSecurityGroupRuleDescriptionsEgress&Version=2016-11-15:
    get:
      x-aws-operation-name: UpdateSecurityGroupRuleDescriptionsEgress
      operationId: GET_UpdateSecurityGroupRuleDescriptionsEgress
      description: '[VPC only] Updates the description of an egress (outbound) security group rule. You can replace an existing description, or add a description to a rule that did not have one previously. You can remove a description for a security group rule by omitting the description parameter in the request.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UpdateSecurityGroupRuleDescriptionsEgressResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: GroupId
          in: query
          required: false
          description: 'The ID of the security group. You must specify either the security group ID or the security group name in the request. For security groups in a nondefault VPC, you must specify the security group ID.'
          schema:
            type: string
        - name: GroupName
          in: query
          required: false
          description: '[Default VPC] The name of the security group. You must specify either the security group ID or the security group name in the request.'
          schema:
            type: string
        - name: IpPermissions
          in: query
          required: false
          description: The IP permissions for the security group rule. You must specify either the IP permissions or the description.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/IpPermission'
                - xml:
                    name: item
        - name: SecurityGroupRuleDescription
          in: query
          required: false
          description: The description for the egress security group rules. You must specify either the description or the IP permissions.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/SecurityGroupRuleDescription'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: UpdateSecurityGroupRuleDescriptionsEgress
      operationId: POST_UpdateSecurityGroupRuleDescriptionsEgress
      description: '[VPC only] Updates the description of an egress (outbound) security group rule. You can replace an existing description, or add a description to a rule that did not have one previously. You can remove a description for a security group rule by omitting the description parameter in the request.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UpdateSecurityGroupRuleDescriptionsEgressResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateSecurityGroupRuleDescriptionsEgressRequest'
      parameters: []
  /?Action=UpdateSecurityGroupRuleDescriptionsIngress&Version=2016-11-15:
    get:
      x-aws-operation-name: UpdateSecurityGroupRuleDescriptionsIngress
      operationId: GET_UpdateSecurityGroupRuleDescriptionsIngress
      description: 'Updates the description of an ingress (inbound) security group rule. You can replace an existing description, or add a description to a rule that did not have one previously. You can remove a description for a security group rule by omitting the description parameter in the request.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UpdateSecurityGroupRuleDescriptionsIngressResult'
      parameters:
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: GroupId
          in: query
          required: false
          description: 'The ID of the security group. You must specify either the security group ID or the security group name in the request. For security groups in a nondefault VPC, you must specify the security group ID.'
          schema:
            type: string
        - name: GroupName
          in: query
          required: false
          description: '[EC2-Classic, default VPC] The name of the security group. You must specify either the security group ID or the security group name in the request.'
          schema:
            type: string
        - name: IpPermissions
          in: query
          required: false
          description: The IP permissions for the security group rule. You must specify either IP permissions or a description.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/IpPermission'
                - xml:
                    name: item
        - name: SecurityGroupRuleDescription
          in: query
          required: false
          description: '[VPC only] The description for the ingress security group rules. You must specify either a description or IP permissions.'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/SecurityGroupRuleDescription'
                - xml:
                    name: item
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: UpdateSecurityGroupRuleDescriptionsIngress
      operationId: POST_UpdateSecurityGroupRuleDescriptionsIngress
      description: 'Updates the description of an ingress (inbound) security group rule. You can replace an existing description, or add a description to a rule that did not have one previously. You can remove a description for a security group rule by omitting the description parameter in the request.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UpdateSecurityGroupRuleDescriptionsIngressResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateSecurityGroupRuleDescriptionsIngressRequest'
      parameters: []
  /?Action=WithdrawByoipCidr&Version=2016-11-15:
    get:
      x-aws-operation-name: WithdrawByoipCidr
      operationId: GET_WithdrawByoipCidr
      description: '<p>Stops advertising an address range that is provisioned as an address pool.</p> <p>You can perform this operation at most once every 10 seconds, even if you specify different address ranges each time.</p> <p>It can take a few minutes before traffic to the specified addresses stops routing to Amazon Web Services because of BGP propagation delays.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/WithdrawByoipCidrResult'
      parameters:
        - name: Cidr
          in: query
          required: true
          description: 'The address range, in CIDR notation.'
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: WithdrawByoipCidr
      operationId: POST_WithdrawByoipCidr
      description: '<p>Stops advertising an address range that is provisioned as an address pool.</p> <p>You can perform this operation at most once every 10 seconds, even if you specify different address ranges each time.</p> <p>It can take a few minutes before traffic to the specified addresses stops routing to Amazon Web Services because of BGP propagation delays.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/WithdrawByoipCidrResult'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/WithdrawByoipCidrRequest'
      parameters: []
components:
  x-stackQL-resources:
    account_attributes:
      name: account_attributes
      methods:
        account_attributes_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeAccountAttributes&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/accountAttributeSet/item
            openAPIDocKey: '200'
      id: aws.ec2.account_attributes
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/account_attributes/methods/account_attributes_Describe'
        update: []
      title: account_attributes
    address:
      name: address
      methods:
        address_Allocate:
          operation:
            $ref: '#/paths/~1?Action=AllocateAddress&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        address_Associate:
          operation:
            $ref: '#/paths/~1?Action=AssociateAddress&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        address_Disassociate:
          operation:
            $ref: '#/paths/~1?Action=DisassociateAddress&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
        address_Release:
          operation:
            $ref: '#/paths/~1?Action=ReleaseAddress&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
      id: aws.ec2.address
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: address
    address_attribute:
      name: address_attribute
      methods:
        address_attribute_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifyAddressAttribute&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        address_attribute_Reset:
          operation:
            $ref: '#/paths/~1?Action=ResetAddressAttribute&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.address_attribute
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: address_attribute
    address_to_classic:
      name: address_to_classic
      methods:
        address_to_classic_Restore:
          operation:
            $ref: '#/paths/~1?Action=RestoreAddressToClassic&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.address_to_classic
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: address_to_classic
    address_to_vpc:
      name: address_to_vpc
      methods:
        address_to_vpc_Move:
          operation:
            $ref: '#/paths/~1?Action=MoveAddressToVpc&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.address_to_vpc
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: address_to_vpc
    addresses:
      name: addresses
      methods:
        addresses_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeAddresses&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/addressesSet/item
            openAPIDocKey: '200'
      id: aws.ec2.addresses
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/addresses/methods/addresses_Describe'
        update: []
      title: addresses
    addresses_attribute:
      name: addresses_attribute
      methods:
        addresses_attribute_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeAddressesAttribute&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/addressSet/item
            openAPIDocKey: '200'
      id: aws.ec2.addresses_attribute
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/addresses_attribute/methods/addresses_attribute_Describe'
        update: []
      title: addresses_attribute
    aggregate_id_format:
      name: aggregate_id_format
      methods:
        aggregate_id_format_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeAggregateIdFormat&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/statusSet/item
            openAPIDocKey: '200'
      id: aws.ec2.aggregate_id_format
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/aggregate_id_format/methods/aggregate_id_format_Describe'
        update: []
      title: aggregate_id_format
    associated_enclave_certificate_iam_roles:
      name: associated_enclave_certificate_iam_roles
      methods:
        associated_enclave_certificate_iam_roles_Get:
          operation:
            $ref: '#/paths/~1?Action=GetAssociatedEnclaveCertificateIamRoles&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/associatedRoleSet/item
            openAPIDocKey: '200'
      id: aws.ec2.associated_enclave_certificate_iam_roles
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/associated_enclave_certificate_iam_roles/methods/associated_enclave_certificate_iam_roles_Get'
        update: []
      title: associated_enclave_certificate_iam_roles
    associated_ipv6_pool_cidrs:
      name: associated_ipv6_pool_cidrs
      methods:
        associated_ipv6_pool_cidrs_Get:
          operation:
            $ref: '#/paths/~1?Action=GetAssociatedIpv6PoolCidrs&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/ipv6CidrAssociationSet/item
            openAPIDocKey: '200'
      id: aws.ec2.associated_ipv6_pool_cidrs
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/associated_ipv6_pool_cidrs/methods/associated_ipv6_pool_cidrs_Get'
        update: []
      title: associated_ipv6_pool_cidrs
    availability_zone_group:
      name: availability_zone_group
      methods:
        availability_zone_group_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifyAvailabilityZoneGroup&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.availability_zone_group
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: availability_zone_group
    availability_zones:
      name: availability_zones
      methods:
        availability_zones_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeAvailabilityZones&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/availabilityZoneInfo/item
            openAPIDocKey: '200'
      id: aws.ec2.availability_zones
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/availability_zones/methods/availability_zones_Describe'
        update: []
      title: availability_zones
    bundle_tasks:
      name: bundle_tasks
      methods:
        bundle_task_Cancel:
          operation:
            $ref: '#/paths/~1?Action=CancelBundleTask&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        bundle_tasks_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeBundleTasks&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/bundleInstanceTasksSet/item
            openAPIDocKey: '200'
      id: aws.ec2.bundle_tasks
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/bundle_tasks/methods/bundle_tasks_Describe'
        update: []
      title: bundle_tasks
    byoip_cidr_to_ipam:
      name: byoip_cidr_to_ipam
      methods:
        byoip_cidr_to_ipam_Move:
          operation:
            $ref: '#/paths/~1?Action=MoveByoipCidrToIpam&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.byoip_cidr_to_ipam
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: byoip_cidr_to_ipam
    byoip_cidrs:
      name: byoip_cidrs
      methods:
        byoip_cidr_Advertise:
          operation:
            $ref: '#/paths/~1?Action=AdvertiseByoipCidr&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        byoip_cidr_Deprovision:
          operation:
            $ref: '#/paths/~1?Action=DeprovisionByoipCidr&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        byoip_cidr_Provision:
          operation:
            $ref: '#/paths/~1?Action=ProvisionByoipCidr&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        byoip_cidr_Withdraw:
          operation:
            $ref: '#/paths/~1?Action=WithdrawByoipCidr&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        byoip_cidrs_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeByoipCidrs&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/byoipCidrSet/item
            openAPIDocKey: '200'
      id: aws.ec2.byoip_cidrs
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/byoip_cidrs/methods/byoip_cidrs_Describe'
        update: []
      title: byoip_cidrs
    capacity_reservation_fleets:
      name: capacity_reservation_fleets
      methods:
        capacity_reservation_fleet_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateCapacityReservationFleet&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        capacity_reservation_fleet_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifyCapacityReservationFleet&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        capacity_reservation_fleets_Cancel:
          operation:
            $ref: '#/paths/~1?Action=CancelCapacityReservationFleets&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        capacity_reservation_fleets_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeCapacityReservationFleets&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/capacityReservationFleetSet/item
            openAPIDocKey: '200'
      id: aws.ec2.capacity_reservation_fleets
      sqlVerbs:
        delete: []
        insert:
        - $ref: '#/components/x-stackQL-resources/capacity_reservation_fleets/methods/capacity_reservation_fleet_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/capacity_reservation_fleets/methods/capacity_reservation_fleets_Describe'
        update: []
      title: capacity_reservation_fleets
    capacity_reservation_usage:
      name: capacity_reservation_usage
      methods:
        capacity_reservation_usage_Get:
          operation:
            $ref: '#/paths/~1?Action=GetCapacityReservationUsage&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*
            openAPIDocKey: '200'
      id: aws.ec2.capacity_reservation_usage
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/capacity_reservation_usage/methods/capacity_reservation_usage_Get'
        update: []
      title: capacity_reservation_usage
    capacity_reservations:
      name: capacity_reservations
      methods:
        capacity_reservation_Cancel:
          operation:
            $ref: '#/paths/~1?Action=CancelCapacityReservation&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        capacity_reservation_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateCapacityReservation&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        capacity_reservation_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifyCapacityReservation&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        capacity_reservations_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeCapacityReservations&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/capacityReservationSet/item
            openAPIDocKey: '200'
      id: aws.ec2.capacity_reservations
      sqlVerbs:
        delete: []
        insert:
        - $ref: '#/components/x-stackQL-resources/capacity_reservations/methods/capacity_reservation_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/capacity_reservations/methods/capacity_reservations_Describe'
        update: []
      title: capacity_reservations
    carrier_gateways:
      name: carrier_gateways
      methods:
        carrier_gateway_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateCarrierGateway&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        carrier_gateway_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteCarrierGateway&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        carrier_gateways_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeCarrierGateways&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/carrierGatewaySet/item
            openAPIDocKey: '200'
      id: aws.ec2.carrier_gateways
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/carrier_gateways/methods/carrier_gateway_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/carrier_gateways/methods/carrier_gateway_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/carrier_gateways/methods/carrier_gateways_Describe'
        update: []
      title: carrier_gateways
    classic_link_instances:
      name: classic_link_instances
      methods:
        classic_link_instances_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeClassicLinkInstances&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/instancesSet/item
            openAPIDocKey: '200'
      id: aws.ec2.classic_link_instances
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/classic_link_instances/methods/classic_link_instances_Describe'
        update: []
      title: classic_link_instances
    classic_link_vpc:
      name: classic_link_vpc
      methods:
        classic_link_vpc_Attach:
          operation:
            $ref: '#/paths/~1?Action=AttachClassicLinkVpc&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        classic_link_vpc_Detach:
          operation:
            $ref: '#/paths/~1?Action=DetachClassicLinkVpc&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.classic_link_vpc
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: classic_link_vpc
    client_vpn_authorization_rules:
      name: client_vpn_authorization_rules
      methods:
        client_vpn_authorization_rules_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeClientVpnAuthorizationRules&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/authorizationRule/item
            openAPIDocKey: '200'
      id: aws.ec2.client_vpn_authorization_rules
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/client_vpn_authorization_rules/methods/client_vpn_authorization_rules_Describe'
        update: []
      title: client_vpn_authorization_rules
    client_vpn_client_certificate_revocation_list:
      name: client_vpn_client_certificate_revocation_list
      methods:
        client_vpn_client_certificate_revocation_list_Export:
          operation:
            $ref: '#/paths/~1?Action=ExportClientVpnClientCertificateRevocationList&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        client_vpn_client_certificate_revocation_list_Import:
          operation:
            $ref: '#/paths/~1?Action=ImportClientVpnClientCertificateRevocationList&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.client_vpn_client_certificate_revocation_list
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: client_vpn_client_certificate_revocation_list
    client_vpn_client_configuration:
      name: client_vpn_client_configuration
      methods:
        client_vpn_client_configuration_Export:
          operation:
            $ref: '#/paths/~1?Action=ExportClientVpnClientConfiguration&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.client_vpn_client_configuration
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: client_vpn_client_configuration
    client_vpn_connections:
      name: client_vpn_connections
      methods:
        client_vpn_connections_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeClientVpnConnections&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/connections/item
            openAPIDocKey: '200'
        client_vpn_connections_Terminate:
          operation:
            $ref: '#/paths/~1?Action=TerminateClientVpnConnections&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.client_vpn_connections
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/client_vpn_connections/methods/client_vpn_connections_Describe'
        update: []
      title: client_vpn_connections
    client_vpn_endpoints:
      name: client_vpn_endpoints
      methods:
        client_vpn_endpoint_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateClientVpnEndpoint&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        client_vpn_endpoint_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteClientVpnEndpoint&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        client_vpn_endpoint_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifyClientVpnEndpoint&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        client_vpn_endpoints_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeClientVpnEndpoints&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/clientVpnEndpoint/item
            openAPIDocKey: '200'
      id: aws.ec2.client_vpn_endpoints
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/client_vpn_endpoints/methods/client_vpn_endpoint_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/client_vpn_endpoints/methods/client_vpn_endpoint_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/client_vpn_endpoints/methods/client_vpn_endpoints_Describe'
        update: []
      title: client_vpn_endpoints
    client_vpn_ingress:
      name: client_vpn_ingress
      methods:
        client_vpn_ingress_Authorize:
          operation:
            $ref: '#/paths/~1?Action=AuthorizeClientVpnIngress&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        client_vpn_ingress_Revoke:
          operation:
            $ref: '#/paths/~1?Action=RevokeClientVpnIngress&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.client_vpn_ingress
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: client_vpn_ingress
    client_vpn_routes:
      name: client_vpn_routes
      methods:
        client_vpn_route_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateClientVpnRoute&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        client_vpn_route_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteClientVpnRoute&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        client_vpn_routes_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeClientVpnRoutes&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/routes/item
            openAPIDocKey: '200'
      id: aws.ec2.client_vpn_routes
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/client_vpn_routes/methods/client_vpn_route_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/client_vpn_routes/methods/client_vpn_route_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/client_vpn_routes/methods/client_vpn_routes_Describe'
        update: []
      title: client_vpn_routes
    client_vpn_target_networks:
      name: client_vpn_target_networks
      methods:
        client_vpn_target_network_Associate:
          operation:
            $ref: '#/paths/~1?Action=AssociateClientVpnTargetNetwork&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        client_vpn_target_network_Disassociate:
          operation:
            $ref: '#/paths/~1?Action=DisassociateClientVpnTargetNetwork&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        client_vpn_target_networks_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeClientVpnTargetNetworks&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/clientVpnTargetNetworks/item
            openAPIDocKey: '200'
      id: aws.ec2.client_vpn_target_networks
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/client_vpn_target_networks/methods/client_vpn_target_networks_Describe'
        update: []
      title: client_vpn_target_networks
    coip_pool_usage:
      name: coip_pool_usage
      methods:
        coip_pool_usage_Get:
          operation:
            $ref: '#/paths/~1?Action=GetCoipPoolUsage&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/coipAddressUsageSet/item
            openAPIDocKey: '200'
      id: aws.ec2.coip_pool_usage
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/coip_pool_usage/methods/coip_pool_usage_Get'
        update: []
      title: coip_pool_usage
    coip_pools:
      name: coip_pools
      methods:
        coip_pools_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeCoipPools&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/coipPoolSet/item
            openAPIDocKey: '200'
      id: aws.ec2.coip_pools
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/coip_pools/methods/coip_pools_Describe'
        update: []
      title: coip_pools
    console_output:
      name: console_output
      methods:
        console_output_Get:
          operation:
            $ref: '#/paths/~1?Action=GetConsoleOutput&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*
            openAPIDocKey: '200'
      id: aws.ec2.console_output
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/console_output/methods/console_output_Get'
        update: []
      title: console_output
    console_screenshot:
      name: console_screenshot
      methods:
        console_screenshot_Get:
          operation:
            $ref: '#/paths/~1?Action=GetConsoleScreenshot&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*
            openAPIDocKey: '200'
      id: aws.ec2.console_screenshot
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/console_screenshot/methods/console_screenshot_Get'
        update: []
      title: console_screenshot
    conversion_tasks:
      name: conversion_tasks
      methods:
        conversion_task_Cancel:
          operation:
            $ref: '#/paths/~1?Action=CancelConversionTask&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
        conversion_tasks_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeConversionTasks&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/conversionTasks/item
            openAPIDocKey: '200'
      id: aws.ec2.conversion_tasks
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/conversion_tasks/methods/conversion_tasks_Describe'
        update: []
      title: conversion_tasks
    customer_gateways:
      name: customer_gateways
      methods:
        customer_gateway_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateCustomerGateway&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        customer_gateway_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteCustomerGateway&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
        customer_gateways_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeCustomerGateways&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/customerGatewaySet/item
            openAPIDocKey: '200'
      id: aws.ec2.customer_gateways
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/customer_gateways/methods/customer_gateway_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/customer_gateways/methods/customer_gateway_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/customer_gateways/methods/customer_gateways_Describe'
        update: []
      title: customer_gateways
    default_credit_specification:
      name: default_credit_specification
      methods:
        default_credit_specification_Get:
          operation:
            $ref: '#/paths/~1?Action=GetDefaultCreditSpecification&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/instanceFamilyCreditSpecification
            openAPIDocKey: '200'
        default_credit_specification_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifyDefaultCreditSpecification&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.default_credit_specification
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/default_credit_specification/methods/default_credit_specification_Get'
        update: []
      title: default_credit_specification
    default_subnet:
      name: default_subnet
      methods:
        default_subnet_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateDefaultSubnet&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.default_subnet
      sqlVerbs:
        delete: []
        insert:
        - $ref: '#/components/x-stackQL-resources/default_subnet/methods/default_subnet_Create'
        select: []
        update: []
      title: default_subnet
    default_vpc:
      name: default_vpc
      methods:
        default_vpc_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateDefaultVpc&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.default_vpc
      sqlVerbs:
        delete: []
        insert:
        - $ref: '#/components/x-stackQL-resources/default_vpc/methods/default_vpc_Create'
        select: []
        update: []
      title: default_vpc
    dhcp_options:
      name: dhcp_options
      methods:
        dhcp_options_Associate:
          operation:
            $ref: '#/paths/~1?Action=AssociateDhcpOptions&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
        dhcp_options_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateDhcpOptions&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        dhcp_options_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteDhcpOptions&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
        dhcp_options_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeDhcpOptions&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/dhcpOptionsSet/item
            openAPIDocKey: '200'
      id: aws.ec2.dhcp_options
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/dhcp_options/methods/dhcp_options_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/dhcp_options/methods/dhcp_options_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/dhcp_options/methods/dhcp_options_Describe'
        update: []
      title: dhcp_options
    diagnostic_interrupt:
      name: diagnostic_interrupt
      methods:
        diagnostic_interrupt_Send:
          operation:
            $ref: '#/paths/~1?Action=SendDiagnosticInterrupt&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
      id: aws.ec2.diagnostic_interrupt
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: diagnostic_interrupt
    ebs_default_kms_key_id:
      name: ebs_default_kms_key_id
      methods:
        ebs_default_kms_key_id_Get:
          operation:
            $ref: '#/paths/~1?Action=GetEbsDefaultKmsKeyId&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*
            openAPIDocKey: '200'
        ebs_default_kms_key_id_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifyEbsDefaultKmsKeyId&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        ebs_default_kms_key_id_Reset:
          operation:
            $ref: '#/paths/~1?Action=ResetEbsDefaultKmsKeyId&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.ebs_default_kms_key_id
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/ebs_default_kms_key_id/methods/ebs_default_kms_key_id_Get'
        update: []
      title: ebs_default_kms_key_id
    ebs_encryption_by_default:
      name: ebs_encryption_by_default
      methods:
        ebs_encryption_by_default_Disable:
          operation:
            $ref: '#/paths/~1?Action=DisableEbsEncryptionByDefault&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        ebs_encryption_by_default_Enable:
          operation:
            $ref: '#/paths/~1?Action=EnableEbsEncryptionByDefault&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        ebs_encryption_by_default_Get:
          operation:
            $ref: '#/paths/~1?Action=GetEbsEncryptionByDefault&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*
            openAPIDocKey: '200'
      id: aws.ec2.ebs_encryption_by_default
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/ebs_encryption_by_default/methods/ebs_encryption_by_default_Get'
        update: []
      title: ebs_encryption_by_default
    egress_only_internet_gateways:
      name: egress_only_internet_gateways
      methods:
        egress_only_internet_gateway_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateEgressOnlyInternetGateway&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        egress_only_internet_gateway_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteEgressOnlyInternetGateway&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        egress_only_internet_gateways_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeEgressOnlyInternetGateways&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/egressOnlyInternetGatewaySet/item
            openAPIDocKey: '200'
      id: aws.ec2.egress_only_internet_gateways
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/egress_only_internet_gateways/methods/egress_only_internet_gateway_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/egress_only_internet_gateways/methods/egress_only_internet_gateway_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/egress_only_internet_gateways/methods/egress_only_internet_gateways_Describe'
        update: []
      title: egress_only_internet_gateways
    elastic_gpus:
      name: elastic_gpus
      methods:
        elastic_gpus_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeElasticGpus&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/elasticGpuSet/item
            openAPIDocKey: '200'
      id: aws.ec2.elastic_gpus
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/elastic_gpus/methods/elastic_gpus_Describe'
        update: []
      title: elastic_gpus
    enclave_certificate_iam_role:
      name: enclave_certificate_iam_role
      methods:
        enclave_certificate_iam_role_Associate:
          operation:
            $ref: '#/paths/~1?Action=AssociateEnclaveCertificateIamRole&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        enclave_certificate_iam_role_Disassociate:
          operation:
            $ref: '#/paths/~1?Action=DisassociateEnclaveCertificateIamRole&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.enclave_certificate_iam_role
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: enclave_certificate_iam_role
    export_image_tasks:
      name: export_image_tasks
      methods:
        export_image_tasks_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeExportImageTasks&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/exportImageTaskSet/item
            openAPIDocKey: '200'
      id: aws.ec2.export_image_tasks
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/export_image_tasks/methods/export_image_tasks_Describe'
        update: []
      title: export_image_tasks
    export_tasks:
      name: export_tasks
      methods:
        export_task_Cancel:
          operation:
            $ref: '#/paths/~1?Action=CancelExportTask&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
        export_tasks_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeExportTasks&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/exportTaskSet/item
            openAPIDocKey: '200'
      id: aws.ec2.export_tasks
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/export_tasks/methods/export_tasks_Describe'
        update: []
      title: export_tasks
    fast_launch:
      name: fast_launch
      methods:
        fast_launch_Disable:
          operation:
            $ref: '#/paths/~1?Action=DisableFastLaunch&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        fast_launch_Enable:
          operation:
            $ref: '#/paths/~1?Action=EnableFastLaunch&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.fast_launch
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: fast_launch
    fast_launch_images:
      name: fast_launch_images
      methods:
        fast_launch_images_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeFastLaunchImages&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/fastLaunchImageSet/item
            openAPIDocKey: '200'
      id: aws.ec2.fast_launch_images
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/fast_launch_images/methods/fast_launch_images_Describe'
        update: []
      title: fast_launch_images
    fast_snapshot_restores:
      name: fast_snapshot_restores
      methods:
        fast_snapshot_restores_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeFastSnapshotRestores&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/fastSnapshotRestoreSet/item
            openAPIDocKey: '200'
        fast_snapshot_restores_Disable:
          operation:
            $ref: '#/paths/~1?Action=DisableFastSnapshotRestores&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        fast_snapshot_restores_Enable:
          operation:
            $ref: '#/paths/~1?Action=EnableFastSnapshotRestores&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.fast_snapshot_restores
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/fast_snapshot_restores/methods/fast_snapshot_restores_Describe'
        update: []
      title: fast_snapshot_restores
    fleet_history:
      name: fleet_history
      methods:
        fleet_history_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeFleetHistory&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*
            openAPIDocKey: '200'
      id: aws.ec2.fleet_history
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/fleet_history/methods/fleet_history_Describe'
        update: []
      title: fleet_history
    fleet_instances:
      name: fleet_instances
      methods:
        fleet_instances_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeFleetInstances&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/activeInstanceSet/item
            openAPIDocKey: '200'
      id: aws.ec2.fleet_instances
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/fleet_instances/methods/fleet_instances_Describe'
        update: []
      title: fleet_instances
    fleets:
      name: fleets
      methods:
        fleet_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateFleet&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        fleet_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifyFleet&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        fleets_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteFleets&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        fleets_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeFleets&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/fleetSet/item
            openAPIDocKey: '200'
      id: aws.ec2.fleets
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/fleets/methods/fleets_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/fleets/methods/fleet_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/fleets/methods/fleets_Describe'
        update: []
      title: fleets
    flow_logs:
      name: flow_logs
      methods:
        flow_logs_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateFlowLogs&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        flow_logs_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteFlowLogs&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        flow_logs_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeFlowLogs&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/flowLogSet/item
            openAPIDocKey: '200'
      id: aws.ec2.flow_logs
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/flow_logs/methods/flow_logs_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/flow_logs/methods/flow_logs_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/flow_logs/methods/flow_logs_Describe'
        update: []
      title: flow_logs
    flow_logs_integration_template:
      name: flow_logs_integration_template
      methods:
        flow_logs_integration_template_Get:
          operation:
            $ref: '#/paths/~1?Action=GetFlowLogsIntegrationTemplate&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*
            openAPIDocKey: '200'
      id: aws.ec2.flow_logs_integration_template
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/flow_logs_integration_template/methods/flow_logs_integration_template_Get'
        update: []
      title: flow_logs_integration_template
    fpga_image_attribute:
      name: fpga_image_attribute
      methods:
        fpga_image_attribute_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeFpgaImageAttribute&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*
            openAPIDocKey: '200'
        fpga_image_attribute_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifyFpgaImageAttribute&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        fpga_image_attribute_Reset:
          operation:
            $ref: '#/paths/~1?Action=ResetFpgaImageAttribute&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.fpga_image_attribute
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/fpga_image_attribute/methods/fpga_image_attribute_Describe'
        update: []
      title: fpga_image_attribute
    fpga_images:
      name: fpga_images
      methods:
        fpga_image_Copy:
          operation:
            $ref: '#/paths/~1?Action=CopyFpgaImage&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        fpga_image_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateFpgaImage&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        fpga_image_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteFpgaImage&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        fpga_images_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeFpgaImages&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/fpgaImageSet/item
            openAPIDocKey: '200'
      id: aws.ec2.fpga_images
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/fpga_images/methods/fpga_image_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/fpga_images/methods/fpga_image_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/fpga_images/methods/fpga_images_Describe'
        update: []
      title: fpga_images
    groups_for_capacity_reservation:
      name: groups_for_capacity_reservation
      methods:
        groups_for_capacity_reservation_Get:
          operation:
            $ref: '#/paths/~1?Action=GetGroupsForCapacityReservation&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/capacityReservationGroupSet/item
            openAPIDocKey: '200'
      id: aws.ec2.groups_for_capacity_reservation
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/groups_for_capacity_reservation/methods/groups_for_capacity_reservation_Get'
        update: []
      title: groups_for_capacity_reservation
    host_reservation_offerings:
      name: host_reservation_offerings
      methods:
        host_reservation_offerings_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeHostReservationOfferings&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/offeringSet/item
            openAPIDocKey: '200'
      id: aws.ec2.host_reservation_offerings
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/host_reservation_offerings/methods/host_reservation_offerings_Describe'
        update: []
      title: host_reservation_offerings
    host_reservation_purchase_preview:
      name: host_reservation_purchase_preview
      methods:
        host_reservation_purchase_preview_Get:
          operation:
            $ref: '#/paths/~1?Action=GetHostReservationPurchasePreview&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*
            openAPIDocKey: '200'
      id: aws.ec2.host_reservation_purchase_preview
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/host_reservation_purchase_preview/methods/host_reservation_purchase_preview_Get'
        update: []
      title: host_reservation_purchase_preview
    host_reservations:
      name: host_reservations
      methods:
        host_reservation_Purchase:
          operation:
            $ref: '#/paths/~1?Action=PurchaseHostReservation&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        host_reservations_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeHostReservations&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/hostReservationSet/item
            openAPIDocKey: '200'
      id: aws.ec2.host_reservations
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/host_reservations/methods/host_reservations_Describe'
        update: []
      title: host_reservations
    hosts:
      name: hosts
      methods:
        hosts_Allocate:
          operation:
            $ref: '#/paths/~1?Action=AllocateHosts&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        hosts_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeHosts&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/hostSet/item
            openAPIDocKey: '200'
        hosts_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifyHosts&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        hosts_Release:
          operation:
            $ref: '#/paths/~1?Action=ReleaseHosts&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.hosts
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/hosts/methods/hosts_Describe'
        update: []
      title: hosts
    iam_instance_profile:
      name: iam_instance_profile
      methods:
        iam_instance_profile_Associate:
          operation:
            $ref: '#/paths/~1?Action=AssociateIamInstanceProfile&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        iam_instance_profile_Disassociate:
          operation:
            $ref: '#/paths/~1?Action=DisassociateIamInstanceProfile&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.iam_instance_profile
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: iam_instance_profile
    iam_instance_profile_associations:
      name: iam_instance_profile_associations
      methods:
        iam_instance_profile_association_Replace:
          operation:
            $ref: '#/paths/~1?Action=ReplaceIamInstanceProfileAssociation&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        iam_instance_profile_associations_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeIamInstanceProfileAssociations&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/iamInstanceProfileAssociationSet/item
            openAPIDocKey: '200'
      id: aws.ec2.iam_instance_profile_associations
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/iam_instance_profile_associations/methods/iam_instance_profile_associations_Describe'
        update: []
      title: iam_instance_profile_associations
    id_format:
      name: id_format
      methods:
        id_format_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeIdFormat&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/statusSet/item
            openAPIDocKey: '200'
        id_format_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifyIdFormat&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
      id: aws.ec2.id_format
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/id_format/methods/id_format_Describe'
        update: []
      title: id_format
    identity_id_format:
      name: identity_id_format
      methods:
        identity_id_format_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeIdentityIdFormat&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/statusSet/item
            openAPIDocKey: '200'
        identity_id_format_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifyIdentityIdFormat&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
      id: aws.ec2.identity_id_format
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/identity_id_format/methods/identity_id_format_Describe'
        update: []
      title: identity_id_format
    image_attribute:
      name: image_attribute
      methods:
        image_attribute_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeImageAttribute&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*
            openAPIDocKey: '200'
        image_attribute_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifyImageAttribute&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
        image_attribute_Reset:
          operation:
            $ref: '#/paths/~1?Action=ResetImageAttribute&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
      id: aws.ec2.image_attribute
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/image_attribute/methods/image_attribute_Describe'
        update: []
      title: image_attribute
    image_deprecation:
      name: image_deprecation
      methods:
        image_deprecation_Disable:
          operation:
            $ref: '#/paths/~1?Action=DisableImageDeprecation&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        image_deprecation_Enable:
          operation:
            $ref: '#/paths/~1?Action=EnableImageDeprecation&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.image_deprecation
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: image_deprecation
    image_from_recycle_bin:
      name: image_from_recycle_bin
      methods:
        image_from_recycle_bin_Restore:
          operation:
            $ref: '#/paths/~1?Action=RestoreImageFromRecycleBin&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.image_from_recycle_bin
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: image_from_recycle_bin
    images:
      name: images
      methods:
        image_Copy:
          operation:
            $ref: '#/paths/~1?Action=CopyImage&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        image_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateImage&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        image_Deregister:
          operation:
            $ref: '#/paths/~1?Action=DeregisterImage&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
        image_Export:
          operation:
            $ref: '#/paths/~1?Action=ExportImage&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        image_Import:
          operation:
            $ref: '#/paths/~1?Action=ImportImage&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        image_Register:
          operation:
            $ref: '#/paths/~1?Action=RegisterImage&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        images_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeImages&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*
            openAPIDocKey: '200'
      id: aws.ec2.images
      sqlVerbs:
        delete: []
        insert:
        - $ref: '#/components/x-stackQL-resources/images/methods/image_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/images/methods/images_Describe'
        update: []
      title: images
    images_in_recycle_bin:
      name: images_in_recycle_bin
      methods:
        images_in_recycle_bin_List:
          operation:
            $ref: '#/paths/~1?Action=ListImagesInRecycleBin&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/imageSet/item
            openAPIDocKey: '200'
      id: aws.ec2.images_in_recycle_bin
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/images_in_recycle_bin/methods/images_in_recycle_bin_List'
        update: []
      title: images_in_recycle_bin
    import_image_tasks:
      name: import_image_tasks
      methods:
        import_image_tasks_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeImportImageTasks&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/importImageTaskSet/item
            openAPIDocKey: '200'
      id: aws.ec2.import_image_tasks
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/import_image_tasks/methods/import_image_tasks_Describe'
        update: []
      title: import_image_tasks
    import_snapshot_tasks:
      name: import_snapshot_tasks
      methods:
        import_snapshot_tasks_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeImportSnapshotTasks&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/importSnapshotTaskSet/item
            openAPIDocKey: '200'
      id: aws.ec2.import_snapshot_tasks
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/import_snapshot_tasks/methods/import_snapshot_tasks_Describe'
        update: []
      title: import_snapshot_tasks
    import_task:
      name: import_task
      methods:
        import_task_Cancel:
          operation:
            $ref: '#/paths/~1?Action=CancelImportTask&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.import_task
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: import_task
    instance_attribute:
      name: instance_attribute
      methods:
        instance_attribute_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeInstanceAttribute&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*
            openAPIDocKey: '200'
        instance_attribute_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifyInstanceAttribute&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
        instance_attribute_Reset:
          operation:
            $ref: '#/paths/~1?Action=ResetInstanceAttribute&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
      id: aws.ec2.instance_attribute
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/instance_attribute/methods/instance_attribute_Describe'
        update: []
      title: instance_attribute
    instance_capacity_reservation_attributes:
      name: instance_capacity_reservation_attributes
      methods:
        instance_capacity_reservation_attributes_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifyInstanceCapacityReservationAttributes&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.instance_capacity_reservation_attributes
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: instance_capacity_reservation_attributes
    instance_credit_specifications:
      name: instance_credit_specifications
      methods:
        instance_credit_specification_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifyInstanceCreditSpecification&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        instance_credit_specifications_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeInstanceCreditSpecifications&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/instanceCreditSpecificationSet/item
            openAPIDocKey: '200'
      id: aws.ec2.instance_credit_specifications
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/instance_credit_specifications/methods/instance_credit_specifications_Describe'
        update: []
      title: instance_credit_specifications
    instance_event_notification_attributes:
      name: instance_event_notification_attributes
      methods:
        instance_event_notification_attributes_Deregister:
          operation:
            $ref: '#/paths/~1?Action=DeregisterInstanceEventNotificationAttributes&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        instance_event_notification_attributes_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeInstanceEventNotificationAttributes&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*
            openAPIDocKey: '200'
        instance_event_notification_attributes_Register:
          operation:
            $ref: '#/paths/~1?Action=RegisterInstanceEventNotificationAttributes&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.instance_event_notification_attributes
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/instance_event_notification_attributes/methods/instance_event_notification_attributes_Describe'
        update: []
      title: instance_event_notification_attributes
    instance_event_start_time:
      name: instance_event_start_time
      methods:
        instance_event_start_time_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifyInstanceEventStartTime&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.instance_event_start_time
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: instance_event_start_time
    instance_event_windows:
      name: instance_event_windows
      methods:
        instance_event_window_Associate:
          operation:
            $ref: '#/paths/~1?Action=AssociateInstanceEventWindow&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        instance_event_window_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateInstanceEventWindow&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        instance_event_window_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteInstanceEventWindow&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        instance_event_window_Disassociate:
          operation:
            $ref: '#/paths/~1?Action=DisassociateInstanceEventWindow&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        instance_event_window_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifyInstanceEventWindow&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        instance_event_windows_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeInstanceEventWindows&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/instanceEventWindowSet/item
            openAPIDocKey: '200'
      id: aws.ec2.instance_event_windows
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/instance_event_windows/methods/instance_event_window_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/instance_event_windows/methods/instance_event_window_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/instance_event_windows/methods/instance_event_windows_Describe'
        update: []
      title: instance_event_windows
    instance_export_task:
      name: instance_export_task
      methods:
        instance_export_task_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateInstanceExportTask&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.instance_export_task
      sqlVerbs:
        delete: []
        insert:
        - $ref: '#/components/x-stackQL-resources/instance_export_task/methods/instance_export_task_Create'
        select: []
        update: []
      title: instance_export_task
    instance_maintenance_options:
      name: instance_maintenance_options
      methods:
        instance_maintenance_options_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifyInstanceMaintenanceOptions&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.instance_maintenance_options
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: instance_maintenance_options
    instance_metadata_options:
      name: instance_metadata_options
      methods:
        instance_metadata_options_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifyInstanceMetadataOptions&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.instance_metadata_options
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: instance_metadata_options
    instance_placement:
      name: instance_placement
      methods:
        instance_placement_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifyInstancePlacement&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.instance_placement
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: instance_placement
    instance_status:
      name: instance_status
      methods:
        instance_status_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeInstanceStatus&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/instanceStatusSet/item
            openAPIDocKey: '200'
        instance_status_Report:
          operation:
            $ref: '#/paths/~1?Action=ReportInstanceStatus&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
      id: aws.ec2.instance_status
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/instance_status/methods/instance_status_Describe'
        update: []
      title: instance_status
    instance_type_offerings:
      name: instance_type_offerings
      methods:
        instance_type_offerings_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeInstanceTypeOfferings&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/instanceTypeOfferingSet/item
            openAPIDocKey: '200'
      id: aws.ec2.instance_type_offerings
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/instance_type_offerings/methods/instance_type_offerings_Describe'
        update: []
      title: instance_type_offerings
    instance_types:
      name: instance_types
      methods:
        instance_types_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeInstanceTypes&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/instanceTypeSet/item
            openAPIDocKey: '200'
      id: aws.ec2.instance_types
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/instance_types/methods/instance_types_Describe'
        update: []
      title: instance_types
    instance_types_from_instance_requirements:
      name: instance_types_from_instance_requirements
      methods:
        instance_types_from_instance_requirements_Get:
          operation:
            $ref: '#/paths/~1?Action=GetInstanceTypesFromInstanceRequirements&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/instanceTypeSet/item
            openAPIDocKey: '200'
      id: aws.ec2.instance_types_from_instance_requirements
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/instance_types_from_instance_requirements/methods/instance_types_from_instance_requirements_Get'
        update: []
      title: instance_types_from_instance_requirements
    instance_uefi_data:
      name: instance_uefi_data
      methods:
        instance_uefi_data_Get:
          operation:
            $ref: '#/paths/~1?Action=GetInstanceUefiData&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*
            openAPIDocKey: '200'
      id: aws.ec2.instance_uefi_data
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/instance_uefi_data/methods/instance_uefi_data_Get'
        update: []
      title: instance_uefi_data
    instances:
      name: instances
      methods:
        instance_Bundle:
          operation:
            $ref: '#/paths/~1?Action=BundleInstance&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        instance_Import:
          operation:
            $ref: '#/paths/~1?Action=ImportInstance&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        instances_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeInstances&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/reservationSet/item/instancesSet/item
            openAPIDocKey: '200'
        instances_Monitor:
          operation:
            $ref: '#/paths/~1?Action=MonitorInstances&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        instances_Reboot:
          operation:
            $ref: '#/paths/~1?Action=RebootInstances&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
        instances_Run:
          operation:
            $ref: '#/paths/~1?Action=RunInstances&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        instances_Start:
          operation:
            $ref: '#/paths/~1?Action=StartInstances&Version=2016-11-15/get'
          # request:
          #   mediaType: text/xml
          #   xmlRootAnnotation: 'xmlns="http://ec2.amazonaws.com/doc/2016-11-15/"'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        instances_Stop:
          operation:
            $ref: '#/paths/~1?Action=StopInstances&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        instances_Terminate:
          operation:
            $ref: '#/paths/~1?Action=TerminateInstances&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        instances_Unmonitor:
          operation:
            $ref: '#/paths/~1?Action=UnmonitorInstances&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.instances
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/instances/methods/instances_Describe'
        update:
        - $ref: '#/components/x-stackQL-resources/instances/methods/instances_Start'
    instances_start:
      name: instances_start
      methods:
        instances_Start:
          operation:
            $ref: '#/paths/~1?Action=StartInstances&Version=2016-11-15/get'
          # request:
          #   mediaType: text/xml
          #   xmlRootAnnotation: 'xmlns="http://ec2.amazonaws.com/doc/2016-11-15/"'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.instances
      sqlVerbs:
        delete: []
        insert:
        - $ref: '#/components/x-stackQL-resources/instances/methods/instances_Start'
        select: []
        update: []
      title: instances_Start
    internet_gateways:
      name: internet_gateways
      methods:
        internet_gateway_Attach:
          operation:
            $ref: '#/paths/~1?Action=AttachInternetGateway&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
        internet_gateway_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateInternetGateway&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        internet_gateway_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteInternetGateway&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
        internet_gateway_Detach:
          operation:
            $ref: '#/paths/~1?Action=DetachInternetGateway&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
        internet_gateways_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeInternetGateways&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/internetGatewaySet/item
            openAPIDocKey: '200'
      id: aws.ec2.internet_gateways
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/internet_gateways/methods/internet_gateway_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/internet_gateways/methods/internet_gateway_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/internet_gateways/methods/internet_gateways_Describe'
        update: []
      title: internet_gateways
    ipam_address_history:
      name: ipam_address_history
      methods:
        ipam_address_history_Get:
          operation:
            $ref: '#/paths/~1?Action=GetIpamAddressHistory&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/historyRecordSet/item
            openAPIDocKey: '200'
      id: aws.ec2.ipam_address_history
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/ipam_address_history/methods/ipam_address_history_Get'
        update: []
      title: ipam_address_history
    ipam_organization_admin_account:
      name: ipam_organization_admin_account
      methods:
        ipam_organization_admin_account_Disable:
          operation:
            $ref: '#/paths/~1?Action=DisableIpamOrganizationAdminAccount&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        ipam_organization_admin_account_Enable:
          operation:
            $ref: '#/paths/~1?Action=EnableIpamOrganizationAdminAccount&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.ipam_organization_admin_account
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: ipam_organization_admin_account
    ipam_pool_allocations:
      name: ipam_pool_allocations
      methods:
        ipam_pool_allocation_Release:
          operation:
            $ref: '#/paths/~1?Action=ReleaseIpamPoolAllocation&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        ipam_pool_allocations_Get:
          operation:
            $ref: '#/paths/~1?Action=GetIpamPoolAllocations&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/ipamPoolAllocationSet/item
            openAPIDocKey: '200'
      id: aws.ec2.ipam_pool_allocations
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/ipam_pool_allocations/methods/ipam_pool_allocations_Get'
        update: []
      title: ipam_pool_allocations
    ipam_pool_cidrs:
      name: ipam_pool_cidrs
      methods:
        ipam_pool_cidr_Allocate:
          operation:
            $ref: '#/paths/~1?Action=AllocateIpamPoolCidr&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        ipam_pool_cidr_Deprovision:
          operation:
            $ref: '#/paths/~1?Action=DeprovisionIpamPoolCidr&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        ipam_pool_cidr_Provision:
          operation:
            $ref: '#/paths/~1?Action=ProvisionIpamPoolCidr&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        ipam_pool_cidrs_Get:
          operation:
            $ref: '#/paths/~1?Action=GetIpamPoolCidrs&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/ipamPoolCidrSet/item
            openAPIDocKey: '200'
      id: aws.ec2.ipam_pool_cidrs
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/ipam_pool_cidrs/methods/ipam_pool_cidrs_Get'
        update: []
      title: ipam_pool_cidrs
    ipam_pools:
      name: ipam_pools
      methods:
        ipam_pool_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateIpamPool&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        ipam_pool_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteIpamPool&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        ipam_pool_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifyIpamPool&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        ipam_pools_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeIpamPools&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/ipamPoolSet/item
            openAPIDocKey: '200'
      id: aws.ec2.ipam_pools
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/ipam_pools/methods/ipam_pool_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/ipam_pools/methods/ipam_pool_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/ipam_pools/methods/ipam_pools_Describe'
        update: []
      title: ipam_pools
    ipam_resource_cidrs:
      name: ipam_resource_cidrs
      methods:
        ipam_resource_cidr_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifyIpamResourceCidr&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        ipam_resource_cidrs_Get:
          operation:
            $ref: '#/paths/~1?Action=GetIpamResourceCidrs&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/ipamResourceCidrSet/item
            openAPIDocKey: '200'
      id: aws.ec2.ipam_resource_cidrs
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/ipam_resource_cidrs/methods/ipam_resource_cidrs_Get'
        update: []
      title: ipam_resource_cidrs
    ipam_scopes:
      name: ipam_scopes
      methods:
        ipam_scope_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateIpamScope&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        ipam_scope_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteIpamScope&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        ipam_scope_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifyIpamScope&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        ipam_scopes_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeIpamScopes&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/ipamScopeSet/item
            openAPIDocKey: '200'
      id: aws.ec2.ipam_scopes
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/ipam_scopes/methods/ipam_scope_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/ipam_scopes/methods/ipam_scope_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/ipam_scopes/methods/ipam_scopes_Describe'
        update: []
      title: ipam_scopes
    ipams:
      name: ipams
      methods:
        ipam_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateIpam&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        ipam_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteIpam&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        ipam_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifyIpam&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        ipams_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeIpams&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/ipamSet/item
            openAPIDocKey: '200'
      id: aws.ec2.ipams
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/ipams/methods/ipam_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/ipams/methods/ipam_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/ipams/methods/ipams_Describe'
        update: []
      title: ipams
    ipv6_addresses:
      name: ipv6_addresses
      methods:
        ipv6_addresses_Assign:
          operation:
            $ref: '#/paths/~1?Action=AssignIpv6Addresses&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        ipv6_addresses_Unassign:
          operation:
            $ref: '#/paths/~1?Action=UnassignIpv6Addresses&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.ipv6_addresses
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: ipv6_addresses
    ipv6_pools:
      name: ipv6_pools
      methods:
        ipv6_pools_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeIpv6Pools&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/ipv6PoolSet/item
            openAPIDocKey: '200'
      id: aws.ec2.ipv6_pools
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/ipv6_pools/methods/ipv6_pools_Describe'
        update: []
      title: ipv6_pools
    key_pairs:
      name: key_pairs
      methods:
        key_pair_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateKeyPair&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        key_pair_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteKeyPair&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
        key_pair_Import:
          operation:
            $ref: '#/paths/~1?Action=ImportKeyPair&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        key_pairs_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeKeyPairs&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*
            openAPIDocKey: '200'
      id: aws.ec2.key_pairs
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/key_pairs/methods/key_pair_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/key_pairs/methods/key_pair_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/key_pairs/methods/key_pairs_Describe'
        update: []
      title: key_pairs
    launch_template_data:
      name: launch_template_data
      methods:
        launch_template_data_Get:
          operation:
            $ref: '#/paths/~1?Action=GetLaunchTemplateData&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*
            openAPIDocKey: '200'
      id: aws.ec2.launch_template_data
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/launch_template_data/methods/launch_template_data_Get'
        update: []
      title: launch_template_data
    launch_template_versions:
      name: launch_template_versions
      methods:
        launch_template_version_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateLaunchTemplateVersion&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        launch_template_versions_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteLaunchTemplateVersions&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        launch_template_versions_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeLaunchTemplateVersions&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/launchTemplateVersionSet/item
            openAPIDocKey: '200'
      id: aws.ec2.launch_template_versions
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/launch_template_versions/methods/launch_template_versions_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/launch_template_versions/methods/launch_template_version_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/launch_template_versions/methods/launch_template_versions_Describe'
        update: []
      title: launch_template_versions
    launch_templates:
      name: launch_templates
      methods:
        launch_template_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateLaunchTemplate&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        launch_template_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteLaunchTemplate&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        launch_template_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifyLaunchTemplate&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        launch_templates_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeLaunchTemplates&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/launchTemplates/item
            openAPIDocKey: '200'
      id: aws.ec2.launch_templates
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/launch_templates/methods/launch_template_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/launch_templates/methods/launch_template_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/launch_templates/methods/launch_templates_Describe'
        update: []
      title: launch_templates
    local_gateway_route_table_virtual_interface_group_associations:
      name: local_gateway_route_table_virtual_interface_group_associations
      methods:
        local_gateway_route_table_virtual_interface_group_associations_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/localGatewayRouteTableVirtualInterfaceGroupAssociationSet/item
            openAPIDocKey: '200'
      id: aws.ec2.local_gateway_route_table_virtual_interface_group_associations
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/local_gateway_route_table_virtual_interface_group_associations/methods/local_gateway_route_table_virtual_interface_group_associations_Describe'
        update: []
      title: local_gateway_route_table_virtual_interface_group_associations
    local_gateway_route_table_vpc_associations:
      name: local_gateway_route_table_vpc_associations
      methods:
        local_gateway_route_table_vpc_association_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateLocalGatewayRouteTableVpcAssociation&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        local_gateway_route_table_vpc_association_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteLocalGatewayRouteTableVpcAssociation&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        local_gateway_route_table_vpc_associations_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeLocalGatewayRouteTableVpcAssociations&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/localGatewayRouteTableVpcAssociationSet/item
            openAPIDocKey: '200'
      id: aws.ec2.local_gateway_route_table_vpc_associations
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/local_gateway_route_table_vpc_associations/methods/local_gateway_route_table_vpc_association_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/local_gateway_route_table_vpc_associations/methods/local_gateway_route_table_vpc_association_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/local_gateway_route_table_vpc_associations/methods/local_gateway_route_table_vpc_associations_Describe'
        update: []
      title: local_gateway_route_table_vpc_associations
    local_gateway_route_tables:
      name: local_gateway_route_tables
      methods:
        local_gateway_route_tables_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeLocalGatewayRouteTables&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/localGatewayRouteTableSet/item
            openAPIDocKey: '200'
      id: aws.ec2.local_gateway_route_tables
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/local_gateway_route_tables/methods/local_gateway_route_tables_Describe'
        update: []
      title: local_gateway_route_tables
    local_gateway_routes:
      name: local_gateway_routes
      methods:
        local_gateway_route_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateLocalGatewayRoute&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        local_gateway_route_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteLocalGatewayRoute&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        local_gateway_routes_Search:
          operation:
            $ref: '#/paths/~1?Action=SearchLocalGatewayRoutes&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.local_gateway_routes
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/local_gateway_routes/methods/local_gateway_route_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/local_gateway_routes/methods/local_gateway_route_Create'
        select: []
        update: []
      title: local_gateway_routes
    local_gateway_virtual_interface_groups:
      name: local_gateway_virtual_interface_groups
      methods:
        local_gateway_virtual_interface_groups_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeLocalGatewayVirtualInterfaceGroups&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/localGatewayVirtualInterfaceGroupSet/item
            openAPIDocKey: '200'
      id: aws.ec2.local_gateway_virtual_interface_groups
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/local_gateway_virtual_interface_groups/methods/local_gateway_virtual_interface_groups_Describe'
        update: []
      title: local_gateway_virtual_interface_groups
    local_gateway_virtual_interfaces:
      name: local_gateway_virtual_interfaces
      methods:
        local_gateway_virtual_interfaces_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeLocalGatewayVirtualInterfaces&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/localGatewayVirtualInterfaceSet/item
            openAPIDocKey: '200'
      id: aws.ec2.local_gateway_virtual_interfaces
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/local_gateway_virtual_interfaces/methods/local_gateway_virtual_interfaces_Describe'
        update: []
      title: local_gateway_virtual_interfaces
    local_gateways:
      name: local_gateways
      methods:
        local_gateways_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeLocalGateways&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/localGatewaySet/item
            openAPIDocKey: '200'
      id: aws.ec2.local_gateways
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/local_gateways/methods/local_gateways_Describe'
        update: []
      title: local_gateways
    managed_prefix_list_associations:
      name: managed_prefix_list_associations
      methods:
        managed_prefix_list_associations_Get:
          operation:
            $ref: '#/paths/~1?Action=GetManagedPrefixListAssociations&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/prefixListAssociationSet/item
            openAPIDocKey: '200'
      id: aws.ec2.managed_prefix_list_associations
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/managed_prefix_list_associations/methods/managed_prefix_list_associations_Get'
        update: []
      title: managed_prefix_list_associations
    managed_prefix_list_entries:
      name: managed_prefix_list_entries
      methods:
        managed_prefix_list_entries_Get:
          operation:
            $ref: '#/paths/~1?Action=GetManagedPrefixListEntries&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/entrySet/item
            openAPIDocKey: '200'
      id: aws.ec2.managed_prefix_list_entries
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/managed_prefix_list_entries/methods/managed_prefix_list_entries_Get'
        update: []
      title: managed_prefix_list_entries
    managed_prefix_list_version:
      name: managed_prefix_list_version
      methods:
        managed_prefix_list_version_Restore:
          operation:
            $ref: '#/paths/~1?Action=RestoreManagedPrefixListVersion&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.managed_prefix_list_version
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: managed_prefix_list_version
    managed_prefix_lists:
      name: managed_prefix_lists
      methods:
        managed_prefix_list_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateManagedPrefixList&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        managed_prefix_list_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteManagedPrefixList&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        managed_prefix_list_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifyManagedPrefixList&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        managed_prefix_lists_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeManagedPrefixLists&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/prefixListSet/item
            openAPIDocKey: '200'
      id: aws.ec2.managed_prefix_lists
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/managed_prefix_lists/methods/managed_prefix_list_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/managed_prefix_lists/methods/managed_prefix_list_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/managed_prefix_lists/methods/managed_prefix_lists_Describe'
        update: []
      title: managed_prefix_lists
    moving_addresses:
      name: moving_addresses
      methods:
        moving_addresses_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeMovingAddresses&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/movingAddressStatusSet/item
            openAPIDocKey: '200'
      id: aws.ec2.moving_addresses
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/moving_addresses/methods/moving_addresses_Describe'
        update: []
      title: moving_addresses
    nat_gateways:
      name: nat_gateways
      methods:
        nat_gateway_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateNatGateway&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        nat_gateway_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteNatGateway&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        nat_gateways_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeNatGateways&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/natGatewaySet/item
            openAPIDocKey: '200'
      id: aws.ec2.nat_gateways
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/nat_gateways/methods/nat_gateway_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/nat_gateways/methods/nat_gateway_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/nat_gateways/methods/nat_gateways_Describe'
        update: []
      title: nat_gateways
    network_acl_association:
      name: network_acl_association
      methods:
        network_acl_association_Replace:
          operation:
            $ref: '#/paths/~1?Action=ReplaceNetworkAclAssociation&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.network_acl_association
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: network_acl_association
    network_acl_entry:
      name: network_acl_entry
      methods:
        network_acl_entry_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateNetworkAclEntry&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
        network_acl_entry_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteNetworkAclEntry&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
        network_acl_entry_Replace:
          operation:
            $ref: '#/paths/~1?Action=ReplaceNetworkAclEntry&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
      id: aws.ec2.network_acl_entry
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/network_acl_entry/methods/network_acl_entry_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/network_acl_entry/methods/network_acl_entry_Create'
        select: []
        update: []
      title: network_acl_entry
    network_acls:
      name: network_acls
      methods:
        network_acl_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateNetworkAcl&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        network_acl_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteNetworkAcl&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
        network_acls_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeNetworkAcls&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/networkAclSet/item
            openAPIDocKey: '200'
      id: aws.ec2.network_acls
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/network_acls/methods/network_acl_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/network_acls/methods/network_acl_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/network_acls/methods/network_acls_Describe'
        update: []
      title: network_acls
    network_insights_access_scope_analyses:
      name: network_insights_access_scope_analyses
      methods:
        network_insights_access_scope_analyses_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeNetworkInsightsAccessScopeAnalyses&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/networkInsightsAccessScopeAnalysisSet/item
            openAPIDocKey: '200'
      id: aws.ec2.network_insights_access_scope_analyses
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/network_insights_access_scope_analyses/methods/network_insights_access_scope_analyses_Describe'
        update: []
      title: network_insights_access_scope_analyses
    network_insights_access_scope_analysis:
      name: network_insights_access_scope_analysis
      methods:
        network_insights_access_scope_analysis_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteNetworkInsightsAccessScopeAnalysis&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        network_insights_access_scope_analysis_Start:
          operation:
            $ref: '#/paths/~1?Action=StartNetworkInsightsAccessScopeAnalysis&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.network_insights_access_scope_analysis
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/network_insights_access_scope_analysis/methods/network_insights_access_scope_analysis_Delete'
        insert: []
        select: []
        update: []
      title: network_insights_access_scope_analysis
    network_insights_access_scope_analysis_findings:
      name: network_insights_access_scope_analysis_findings
      methods:
        network_insights_access_scope_analysis_findings_Get:
          operation:
            $ref: '#/paths/~1?Action=GetNetworkInsightsAccessScopeAnalysisFindings&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/analysisFindingSet/item
            openAPIDocKey: '200'
      id: aws.ec2.network_insights_access_scope_analysis_findings
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/network_insights_access_scope_analysis_findings/methods/network_insights_access_scope_analysis_findings_Get'
        update: []
      title: network_insights_access_scope_analysis_findings
    network_insights_access_scope_content:
      name: network_insights_access_scope_content
      methods:
        network_insights_access_scope_content_Get:
          operation:
            $ref: '#/paths/~1?Action=GetNetworkInsightsAccessScopeContent&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*
            openAPIDocKey: '200'
      id: aws.ec2.network_insights_access_scope_content
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/network_insights_access_scope_content/methods/network_insights_access_scope_content_Get'
        update: []
      title: network_insights_access_scope_content
    network_insights_access_scopes:
      name: network_insights_access_scopes
      methods:
        network_insights_access_scope_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateNetworkInsightsAccessScope&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        network_insights_access_scope_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteNetworkInsightsAccessScope&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        network_insights_access_scopes_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeNetworkInsightsAccessScopes&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/networkInsightsAccessScopeSet/item
            openAPIDocKey: '200'
      id: aws.ec2.network_insights_access_scopes
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/network_insights_access_scopes/methods/network_insights_access_scope_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/network_insights_access_scopes/methods/network_insights_access_scope_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/network_insights_access_scopes/methods/network_insights_access_scopes_Describe'
        update: []
      title: network_insights_access_scopes
    network_insights_analyses:
      name: network_insights_analyses
      methods:
        network_insights_analyses_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeNetworkInsightsAnalyses&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/networkInsightsAnalysisSet/item
            openAPIDocKey: '200'
      id: aws.ec2.network_insights_analyses
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/network_insights_analyses/methods/network_insights_analyses_Describe'
        update: []
      title: network_insights_analyses
    network_insights_analysis:
      name: network_insights_analysis
      methods:
        network_insights_analysis_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteNetworkInsightsAnalysis&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        network_insights_analysis_Start:
          operation:
            $ref: '#/paths/~1?Action=StartNetworkInsightsAnalysis&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.network_insights_analysis
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/network_insights_analysis/methods/network_insights_analysis_Delete'
        insert: []
        select: []
        update: []
      title: network_insights_analysis
    network_insights_paths:
      name: network_insights_paths
      methods:
        network_insights_path_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateNetworkInsightsPath&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        network_insights_path_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteNetworkInsightsPath&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        network_insights_paths_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeNetworkInsightsPaths&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/networkInsightsPathSet/item
            openAPIDocKey: '200'
      id: aws.ec2.network_insights_paths
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/network_insights_paths/methods/network_insights_path_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/network_insights_paths/methods/network_insights_path_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/network_insights_paths/methods/network_insights_paths_Describe'
        update: []
      title: network_insights_paths
    network_interface_attribute:
      name: network_interface_attribute
      methods:
        network_interface_attribute_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeNetworkInterfaceAttribute&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*
            openAPIDocKey: '200'
        network_interface_attribute_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifyNetworkInterfaceAttribute&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
        network_interface_attribute_Reset:
          operation:
            $ref: '#/paths/~1?Action=ResetNetworkInterfaceAttribute&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
      id: aws.ec2.network_interface_attribute
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/network_interface_attribute/methods/network_interface_attribute_Describe'
        update: []
      title: network_interface_attribute
    network_interface_permissions:
      name: network_interface_permissions
      methods:
        network_interface_permission_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateNetworkInterfacePermission&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        network_interface_permission_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteNetworkInterfacePermission&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        network_interface_permissions_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeNetworkInterfacePermissions&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/networkInterfacePermissions/item
            openAPIDocKey: '200'
      id: aws.ec2.network_interface_permissions
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/network_interface_permissions/methods/network_interface_permission_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/network_interface_permissions/methods/network_interface_permission_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/network_interface_permissions/methods/network_interface_permissions_Describe'
        update: []
      title: network_interface_permissions
    network_interfaces:
      name: network_interfaces
      methods:
        network_interface_Attach:
          operation:
            $ref: '#/paths/~1?Action=AttachNetworkInterface&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        network_interface_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateNetworkInterface&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        network_interface_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteNetworkInterface&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
        network_interface_Detach:
          operation:
            $ref: '#/paths/~1?Action=DetachNetworkInterface&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
        network_interfaces_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeNetworkInterfaces&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/networkInterfaceSet/item
            openAPIDocKey: '200'
      id: aws.ec2.network_interfaces
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/network_interfaces/methods/network_interface_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/network_interfaces/methods/network_interface_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/network_interfaces/methods/network_interfaces_Describe'
        update: []
      title: network_interfaces
    password_data:
      name: password_data
      methods:
        password_data_Get:
          operation:
            $ref: '#/paths/~1?Action=GetPasswordData&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*
            openAPIDocKey: '200'
      id: aws.ec2.password_data
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/password_data/methods/password_data_Get'
        update: []
      title: password_data
    placement_groups:
      name: placement_groups
      methods:
        placement_group_Create:
          operation:
            $ref: '#/paths/~1?Action=CreatePlacementGroup&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        placement_group_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeletePlacementGroup&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
        placement_groups_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribePlacementGroups&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/placementGroupSet/item
            openAPIDocKey: '200'
      id: aws.ec2.placement_groups
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/placement_groups/methods/placement_group_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/placement_groups/methods/placement_group_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/placement_groups/methods/placement_groups_Describe'
        update: []
      title: placement_groups
    prefix_lists:
      name: prefix_lists
      methods:
        prefix_lists_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribePrefixLists&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/prefixListSet/item
            openAPIDocKey: '200'
      id: aws.ec2.prefix_lists
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/prefix_lists/methods/prefix_lists_Describe'
        update: []
      title: prefix_lists
    principal_id_format:
      name: principal_id_format
      methods:
        principal_id_format_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribePrincipalIdFormat&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/principalSet/item
            openAPIDocKey: '200'
      id: aws.ec2.principal_id_format
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/principal_id_format/methods/principal_id_format_Describe'
        update: []
      title: principal_id_format
    private_dns_name_options:
      name: private_dns_name_options
      methods:
        private_dns_name_options_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifyPrivateDnsNameOptions&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.private_dns_name_options
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: private_dns_name_options
    private_ip_addresses:
      name: private_ip_addresses
      methods:
        private_ip_addresses_Assign:
          operation:
            $ref: '#/paths/~1?Action=AssignPrivateIpAddresses&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        private_ip_addresses_Unassign:
          operation:
            $ref: '#/paths/~1?Action=UnassignPrivateIpAddresses&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
      id: aws.ec2.private_ip_addresses
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: private_ip_addresses
    product_instance:
      name: product_instance
      methods:
        product_instance_Confirm:
          operation:
            $ref: '#/paths/~1?Action=ConfirmProductInstance&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.product_instance
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: product_instance
    public_ipv4_pool_cidr:
      name: public_ipv4_pool_cidr
      methods:
        public_ipv4_pool_cidr_Deprovision:
          operation:
            $ref: '#/paths/~1?Action=DeprovisionPublicIpv4PoolCidr&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        public_ipv4_pool_cidr_Provision:
          operation:
            $ref: '#/paths/~1?Action=ProvisionPublicIpv4PoolCidr&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.public_ipv4_pool_cidr
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: public_ipv4_pool_cidr
    public_ipv4_pools:
      name: public_ipv4_pools
      methods:
        public_ipv4_pool_Create:
          operation:
            $ref: '#/paths/~1?Action=CreatePublicIpv4Pool&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        public_ipv4_pool_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeletePublicIpv4Pool&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        public_ipv4_pools_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribePublicIpv4Pools&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/publicIpv4PoolSet/item
            openAPIDocKey: '200'
      id: aws.ec2.public_ipv4_pools
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/public_ipv4_pools/methods/public_ipv4_pool_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/public_ipv4_pools/methods/public_ipv4_pool_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/public_ipv4_pools/methods/public_ipv4_pools_Describe'
        update: []
      title: public_ipv4_pools
    queued_reserved_instances:
      name: queued_reserved_instances
      methods:
        queued_reserved_instances_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteQueuedReservedInstances&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.queued_reserved_instances
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/queued_reserved_instances/methods/queued_reserved_instances_Delete'
        insert: []
        select: []
        update: []
      title: queued_reserved_instances
    raw_resource:
      name: raw_resource
      methods: {}
      id: aws.ec2.raw_resource
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: raw_resource
    regions:
      name: regions
      methods:
        regions_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeRegions&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/regionInfo/item
            openAPIDocKey: '200'
      id: aws.ec2.regions
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/regions/methods/regions_Describe'
        update: []
      title: regions
    replace_root_volume_tasks:
      name: replace_root_volume_tasks
      methods:
        replace_root_volume_task_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateReplaceRootVolumeTask&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        replace_root_volume_tasks_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeReplaceRootVolumeTasks&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/replaceRootVolumeTaskSet/item
            openAPIDocKey: '200'
      id: aws.ec2.replace_root_volume_tasks
      sqlVerbs:
        delete: []
        insert:
        - $ref: '#/components/x-stackQL-resources/replace_root_volume_tasks/methods/replace_root_volume_task_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/replace_root_volume_tasks/methods/replace_root_volume_tasks_Describe'
        update: []
      title: replace_root_volume_tasks
    reserved_instances:
      name: reserved_instances
      methods:
        reserved_instances_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeReservedInstances&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/reservedInstancesSet/item
            openAPIDocKey: '200'
        reserved_instances_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifyReservedInstances&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.reserved_instances
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/reserved_instances/methods/reserved_instances_Describe'
        update: []
      title: reserved_instances
    reserved_instances_exchange_quote:
      name: reserved_instances_exchange_quote
      methods:
        reserved_instances_exchange_quote_Accept:
          operation:
            $ref: '#/paths/~1?Action=AcceptReservedInstancesExchangeQuote&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        reserved_instances_exchange_quote_Get:
          operation:
            $ref: '#/paths/~1?Action=GetReservedInstancesExchangeQuote&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*
            openAPIDocKey: '200'
      id: aws.ec2.reserved_instances_exchange_quote
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/reserved_instances_exchange_quote/methods/reserved_instances_exchange_quote_Get'
        update: []
      title: reserved_instances_exchange_quote
    reserved_instances_listings:
      name: reserved_instances_listings
      methods:
        reserved_instances_listing_Cancel:
          operation:
            $ref: '#/paths/~1?Action=CancelReservedInstancesListing&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        reserved_instances_listing_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateReservedInstancesListing&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        reserved_instances_listings_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeReservedInstancesListings&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/reservedInstancesListingsSet/item
            openAPIDocKey: '200'
      id: aws.ec2.reserved_instances_listings
      sqlVerbs:
        delete: []
        insert:
        - $ref: '#/components/x-stackQL-resources/reserved_instances_listings/methods/reserved_instances_listing_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/reserved_instances_listings/methods/reserved_instances_listings_Describe'
        update: []
      title: reserved_instances_listings
    reserved_instances_modifications:
      name: reserved_instances_modifications
      methods:
        reserved_instances_modifications_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeReservedInstancesModifications&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/reservedInstancesModificationsSet/item
            openAPIDocKey: '200'
      id: aws.ec2.reserved_instances_modifications
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/reserved_instances_modifications/methods/reserved_instances_modifications_Describe'
        update: []
      title: reserved_instances_modifications
    reserved_instances_offerings:
      name: reserved_instances_offerings
      methods:
        reserved_instances_offering_Purchase:
          operation:
            $ref: '#/paths/~1?Action=PurchaseReservedInstancesOffering&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        reserved_instances_offerings_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeReservedInstancesOfferings&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/reservedInstancesOfferingsSet/item
            openAPIDocKey: '200'
      id: aws.ec2.reserved_instances_offerings
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/reserved_instances_offerings/methods/reserved_instances_offerings_Describe'
        update: []
      title: reserved_instances_offerings
    restore_image_task:
      name: restore_image_task
      methods:
        restore_image_task_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateRestoreImageTask&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.restore_image_task
      sqlVerbs:
        delete: []
        insert:
        - $ref: '#/components/x-stackQL-resources/restore_image_task/methods/restore_image_task_Create'
        select: []
        update: []
      title: restore_image_task
    route:
      name: route
      methods:
        route_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateRoute&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        route_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteRoute&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
        route_Replace:
          operation:
            $ref: '#/paths/~1?Action=ReplaceRoute&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
      id: aws.ec2.route
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/route/methods/route_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/route/methods/route_Create'
        select: []
        update: []
      title: route
    route_table_association:
      name: route_table_association
      methods:
        route_table_association_Replace:
          operation:
            $ref: '#/paths/~1?Action=ReplaceRouteTableAssociation&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.route_table_association
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: route_table_association
    route_tables:
      name: route_tables
      methods:
        route_table_Associate:
          operation:
            $ref: '#/paths/~1?Action=AssociateRouteTable&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        route_table_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateRouteTable&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        route_table_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteRouteTable&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
        route_table_Disassociate:
          operation:
            $ref: '#/paths/~1?Action=DisassociateRouteTable&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
        route_tables_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeRouteTables&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/routeTableSet/item
            openAPIDocKey: '200'
      id: aws.ec2.route_tables
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/route_tables/methods/route_table_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/route_tables/methods/route_table_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/route_tables/methods/route_tables_Describe'
        update: []
      title: route_tables
    scheduled_instance_availability:
      name: scheduled_instance_availability
      methods:
        scheduled_instance_availability_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeScheduledInstanceAvailability&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/scheduledInstanceAvailabilitySet/item
            openAPIDocKey: '200'
      id: aws.ec2.scheduled_instance_availability
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/scheduled_instance_availability/methods/scheduled_instance_availability_Describe'
        update: []
      title: scheduled_instance_availability
    scheduled_instances:
      name: scheduled_instances
      methods:
        scheduled_instances_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeScheduledInstances&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/scheduledInstanceSet/item
            openAPIDocKey: '200'
        scheduled_instances_Purchase:
          operation:
            $ref: '#/paths/~1?Action=PurchaseScheduledInstances&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        scheduled_instances_Run:
          operation:
            $ref: '#/paths/~1?Action=RunScheduledInstances&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.scheduled_instances
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/scheduled_instances/methods/scheduled_instances_Describe'
        update: []
      title: scheduled_instances
    security_group_egress:
      name: security_group_egress
      methods:
        security_group_egress_Authorize:
          operation:
            $ref: '#/paths/~1?Action=AuthorizeSecurityGroupEgress&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        security_group_egress_Revoke:
          operation:
            $ref: '#/paths/~1?Action=RevokeSecurityGroupEgress&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.security_group_egress
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: security_group_egress
    security_group_ingress:
      name: security_group_ingress
      methods:
        security_group_ingress_Authorize:
          operation:
            $ref: '#/paths/~1?Action=AuthorizeSecurityGroupIngress&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        security_group_ingress_Revoke:
          operation:
            $ref: '#/paths/~1?Action=RevokeSecurityGroupIngress&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.security_group_ingress
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: security_group_ingress
    security_group_references:
      name: security_group_references
      methods:
        security_group_references_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeSecurityGroupReferences&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/securityGroupReferenceSet/item
            openAPIDocKey: '200'
      id: aws.ec2.security_group_references
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/security_group_references/methods/security_group_references_Describe'
        update: []
      title: security_group_references
    security_group_rule_descriptions_egress:
      name: security_group_rule_descriptions_egress
      methods:
        security_group_rule_descriptions_egress_Update:
          operation:
            $ref: '#/paths/~1?Action=UpdateSecurityGroupRuleDescriptionsEgress&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.security_group_rule_descriptions_egress
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: security_group_rule_descriptions_egress
    security_group_rule_descriptions_ingress:
      name: security_group_rule_descriptions_ingress
      methods:
        security_group_rule_descriptions_ingress_Update:
          operation:
            $ref: '#/paths/~1?Action=UpdateSecurityGroupRuleDescriptionsIngress&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.security_group_rule_descriptions_ingress
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: security_group_rule_descriptions_ingress
    security_group_rules:
      name: security_group_rules
      methods:
        security_group_rules_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeSecurityGroupRules&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/securityGroupRuleSet/item
            openAPIDocKey: '200'
        security_group_rules_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifySecurityGroupRules&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.security_group_rules
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/security_group_rules/methods/security_group_rules_Describe'
        update: []
      title: security_group_rules
    security_groups:
      name: security_groups
      methods:
        security_group_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateSecurityGroup&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        security_group_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteSecurityGroup&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
        security_groups_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeSecurityGroups&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/securityGroupInfo/item
            openAPIDocKey: '200'
      id: aws.ec2.security_groups
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/security_groups/methods/security_group_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/security_groups/methods/security_group_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/security_groups/methods/security_groups_Describe'
        update: []
      title: security_groups
    security_groups_to_client_vpn_target_network:
      name: security_groups_to_client_vpn_target_network
      methods:
        security_groups_to_client_vpn_target_network_Apply:
          operation:
            $ref: '#/paths/~1?Action=ApplySecurityGroupsToClientVpnTargetNetwork&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.security_groups_to_client_vpn_target_network
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: security_groups_to_client_vpn_target_network
    serial_console_access:
      name: serial_console_access
      methods:
        serial_console_access_Disable:
          operation:
            $ref: '#/paths/~1?Action=DisableSerialConsoleAccess&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        serial_console_access_Enable:
          operation:
            $ref: '#/paths/~1?Action=EnableSerialConsoleAccess&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.serial_console_access
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: serial_console_access
    serial_console_access_status:
      name: serial_console_access_status
      methods:
        serial_console_access_status_Get:
          operation:
            $ref: '#/paths/~1?Action=GetSerialConsoleAccessStatus&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*
            openAPIDocKey: '200'
      id: aws.ec2.serial_console_access_status
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/serial_console_access_status/methods/serial_console_access_status_Get'
        update: []
      title: serial_console_access_status
    snapshot_attribute:
      name: snapshot_attribute
      methods:
        snapshot_attribute_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeSnapshotAttribute&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*
            openAPIDocKey: '200'
        snapshot_attribute_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifySnapshotAttribute&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
        snapshot_attribute_Reset:
          operation:
            $ref: '#/paths/~1?Action=ResetSnapshotAttribute&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
      id: aws.ec2.snapshot_attribute
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/snapshot_attribute/methods/snapshot_attribute_Describe'
        update: []
      title: snapshot_attribute
    snapshot_from_recycle_bin:
      name: snapshot_from_recycle_bin
      methods:
        snapshot_from_recycle_bin_Restore:
          operation:
            $ref: '#/paths/~1?Action=RestoreSnapshotFromRecycleBin&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.snapshot_from_recycle_bin
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: snapshot_from_recycle_bin
    snapshot_tier:
      name: snapshot_tier
      methods:
        snapshot_tier_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifySnapshotTier&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        snapshot_tier_Restore:
          operation:
            $ref: '#/paths/~1?Action=RestoreSnapshotTier&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.snapshot_tier
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: snapshot_tier
    snapshot_tier_status:
      name: snapshot_tier_status
      methods:
        snapshot_tier_status_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeSnapshotTierStatus&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/snapshotTierStatusSet/item
            openAPIDocKey: '200'
      id: aws.ec2.snapshot_tier_status
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/snapshot_tier_status/methods/snapshot_tier_status_Describe'
        update: []
      title: snapshot_tier_status
    snapshots:
      name: snapshots
      methods:
        snapshot_Copy:
          operation:
            $ref: '#/paths/~1?Action=CopySnapshot&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        snapshot_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateSnapshot&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        snapshot_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteSnapshot&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
        snapshot_Import:
          operation:
            $ref: '#/paths/~1?Action=ImportSnapshot&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        snapshots_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateSnapshots&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        snapshots_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeSnapshots&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/snapshotSet/item
            openAPIDocKey: '200'
      id: aws.ec2.snapshots
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/snapshots/methods/snapshot_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/snapshots/methods/snapshot_Create'
        - $ref: '#/components/x-stackQL-resources/snapshots/methods/snapshots_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/snapshots/methods/snapshots_Describe'
        update: []
      title: snapshots
    snapshots_in_recycle_bin:
      name: snapshots_in_recycle_bin
      methods:
        snapshots_in_recycle_bin_List:
          operation:
            $ref: '#/paths/~1?Action=ListSnapshotsInRecycleBin&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/snapshotSet/item
            openAPIDocKey: '200'
      id: aws.ec2.snapshots_in_recycle_bin
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/snapshots_in_recycle_bin/methods/snapshots_in_recycle_bin_List'
        update: []
      title: snapshots_in_recycle_bin
    spot_datafeed_subscription:
      name: spot_datafeed_subscription
      methods:
        spot_datafeed_subscription_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateSpotDatafeedSubscription&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        spot_datafeed_subscription_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteSpotDatafeedSubscription&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
        spot_datafeed_subscription_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeSpotDatafeedSubscription&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/spotDatafeedSubscription/*
            openAPIDocKey: '200'
      id: aws.ec2.spot_datafeed_subscription
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/spot_datafeed_subscription/methods/spot_datafeed_subscription_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/spot_datafeed_subscription/methods/spot_datafeed_subscription_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/spot_datafeed_subscription/methods/spot_datafeed_subscription_Describe'
        update: []
      title: spot_datafeed_subscription
    spot_fleet:
      name: spot_fleet
      methods:
        spot_fleet_Request:
          operation:
            $ref: '#/paths/~1?Action=RequestSpotFleet&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.spot_fleet
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: spot_fleet
    spot_fleet_instances:
      name: spot_fleet_instances
      methods:
        spot_fleet_instances_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeSpotFleetInstances&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/activeInstanceSet/item
            openAPIDocKey: '200'
      id: aws.ec2.spot_fleet_instances
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/spot_fleet_instances/methods/spot_fleet_instances_Describe'
        update: []
      title: spot_fleet_instances
    spot_fleet_request_history:
      name: spot_fleet_request_history
      methods:
        spot_fleet_request_history_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeSpotFleetRequestHistory&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/historyRecordSet/item
            openAPIDocKey: '200'
      id: aws.ec2.spot_fleet_request_history
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/spot_fleet_request_history/methods/spot_fleet_request_history_Describe'
        update: []
      title: spot_fleet_request_history
    spot_fleet_requests:
      name: spot_fleet_requests
      methods:
        spot_fleet_request_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifySpotFleetRequest&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        spot_fleet_requests_Cancel:
          operation:
            $ref: '#/paths/~1?Action=CancelSpotFleetRequests&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        spot_fleet_requests_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeSpotFleetRequests&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/spotFleetRequestConfigSet/item
            openAPIDocKey: '200'
      id: aws.ec2.spot_fleet_requests
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/spot_fleet_requests/methods/spot_fleet_requests_Describe'
        update: []
      title: spot_fleet_requests
    spot_instance_requests:
      name: spot_instance_requests
      methods:
        spot_instance_requests_Cancel:
          operation:
            $ref: '#/paths/~1?Action=CancelSpotInstanceRequests&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        spot_instance_requests_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeSpotInstanceRequests&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/spotInstanceRequestSet/item
            openAPIDocKey: '200'
      id: aws.ec2.spot_instance_requests
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/spot_instance_requests/methods/spot_instance_requests_Describe'
        update: []
      title: spot_instance_requests
    spot_instances:
      name: spot_instances
      methods:
        spot_instances_Request:
          operation:
            $ref: '#/paths/~1?Action=RequestSpotInstances&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.spot_instances
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: spot_instances
    spot_placement_scores:
      name: spot_placement_scores
      methods:
        spot_placement_scores_Get:
          operation:
            $ref: '#/paths/~1?Action=GetSpotPlacementScores&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/spotPlacementScoreSet/item
            openAPIDocKey: '200'
      id: aws.ec2.spot_placement_scores
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/spot_placement_scores/methods/spot_placement_scores_Get'
        update: []
      title: spot_placement_scores
    spot_price_history:
      name: spot_price_history
      methods:
        spot_price_history_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeSpotPriceHistory&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/spotPriceHistorySet/item
            openAPIDocKey: '200'
      id: aws.ec2.spot_price_history
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/spot_price_history/methods/spot_price_history_Describe'
        update: []
      title: spot_price_history
    stale_security_groups:
      name: stale_security_groups
      methods:
        stale_security_groups_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeStaleSecurityGroups&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/staleSecurityGroupSet/item
            openAPIDocKey: '200'
      id: aws.ec2.stale_security_groups
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/stale_security_groups/methods/stale_security_groups_Describe'
        update: []
      title: stale_security_groups
    store_image_tasks:
      name: store_image_tasks
      methods:
        store_image_task_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateStoreImageTask&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        store_image_tasks_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeStoreImageTasks&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/storeImageTaskResultSet/item
            openAPIDocKey: '200'
      id: aws.ec2.store_image_tasks
      sqlVerbs:
        delete: []
        insert:
        - $ref: '#/components/x-stackQL-resources/store_image_tasks/methods/store_image_task_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/store_image_tasks/methods/store_image_tasks_Describe'
        update: []
      title: store_image_tasks
    subnet_attribute:
      name: subnet_attribute
      methods:
        subnet_attribute_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifySubnetAttribute&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
      id: aws.ec2.subnet_attribute
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: subnet_attribute
    subnet_cidr_block:
      name: subnet_cidr_block
      methods:
        subnet_cidr_block_Associate:
          operation:
            $ref: '#/paths/~1?Action=AssociateSubnetCidrBlock&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        subnet_cidr_block_Disassociate:
          operation:
            $ref: '#/paths/~1?Action=DisassociateSubnetCidrBlock&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.subnet_cidr_block
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: subnet_cidr_block
    subnet_cidr_reservations:
      name: subnet_cidr_reservations
      methods:
        subnet_cidr_reservation_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateSubnetCidrReservation&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        subnet_cidr_reservation_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteSubnetCidrReservation&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        subnet_cidr_reservations_Get:
          operation:
            $ref: '#/paths/~1?Action=GetSubnetCidrReservations&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*
            openAPIDocKey: '200'
      id: aws.ec2.subnet_cidr_reservations
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/subnet_cidr_reservations/methods/subnet_cidr_reservation_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/subnet_cidr_reservations/methods/subnet_cidr_reservation_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/subnet_cidr_reservations/methods/subnet_cidr_reservations_Get'
        update: []
      title: subnet_cidr_reservations
    subnets:
      name: subnets
      methods:
        subnet_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateSubnet&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        subnet_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteSubnet&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
        subnets_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeSubnets&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/subnetSet/item
            openAPIDocKey: '200'
      id: aws.ec2.subnets
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/subnets/methods/subnet_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/subnets/methods/subnet_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/subnets/methods/subnets_Describe'
        update: []
      title: subnets
    tags:
      name: tags
      methods:
        tags_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateTags&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
        tags_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteTags&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
        tags_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeTags&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/tagSet/item
            openAPIDocKey: '200'
      id: aws.ec2.tags
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/tags/methods/tags_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/tags/methods/tags_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/tags/methods/tags_Describe'
        update: []
      title: tags
    traffic_mirror_filter_network_services:
      name: traffic_mirror_filter_network_services
      methods:
        traffic_mirror_filter_network_services_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifyTrafficMirrorFilterNetworkServices&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.traffic_mirror_filter_network_services
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: traffic_mirror_filter_network_services
    traffic_mirror_filter_rule:
      name: traffic_mirror_filter_rule
      methods:
        traffic_mirror_filter_rule_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateTrafficMirrorFilterRule&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        traffic_mirror_filter_rule_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteTrafficMirrorFilterRule&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        traffic_mirror_filter_rule_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifyTrafficMirrorFilterRule&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.traffic_mirror_filter_rule
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/traffic_mirror_filter_rule/methods/traffic_mirror_filter_rule_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/traffic_mirror_filter_rule/methods/traffic_mirror_filter_rule_Create'
        select: []
        update: []
      title: traffic_mirror_filter_rule
    traffic_mirror_filters:
      name: traffic_mirror_filters
      methods:
        traffic_mirror_filter_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateTrafficMirrorFilter&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        traffic_mirror_filter_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteTrafficMirrorFilter&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        traffic_mirror_filters_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeTrafficMirrorFilters&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/trafficMirrorFilterSet/item
            openAPIDocKey: '200'
      id: aws.ec2.traffic_mirror_filters
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/traffic_mirror_filters/methods/traffic_mirror_filter_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/traffic_mirror_filters/methods/traffic_mirror_filter_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/traffic_mirror_filters/methods/traffic_mirror_filters_Describe'
        update: []
      title: traffic_mirror_filters
    traffic_mirror_sessions:
      name: traffic_mirror_sessions
      methods:
        traffic_mirror_session_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateTrafficMirrorSession&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        traffic_mirror_session_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteTrafficMirrorSession&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        traffic_mirror_session_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifyTrafficMirrorSession&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        traffic_mirror_sessions_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeTrafficMirrorSessions&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/trafficMirrorSessionSet/item
            openAPIDocKey: '200'
      id: aws.ec2.traffic_mirror_sessions
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/traffic_mirror_sessions/methods/traffic_mirror_session_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/traffic_mirror_sessions/methods/traffic_mirror_session_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/traffic_mirror_sessions/methods/traffic_mirror_sessions_Describe'
        update: []
      title: traffic_mirror_sessions
    traffic_mirror_targets:
      name: traffic_mirror_targets
      methods:
        traffic_mirror_target_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateTrafficMirrorTarget&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        traffic_mirror_target_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteTrafficMirrorTarget&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        traffic_mirror_targets_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeTrafficMirrorTargets&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/trafficMirrorTargetSet/item
            openAPIDocKey: '200'
      id: aws.ec2.traffic_mirror_targets
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/traffic_mirror_targets/methods/traffic_mirror_target_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/traffic_mirror_targets/methods/traffic_mirror_target_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/traffic_mirror_targets/methods/traffic_mirror_targets_Describe'
        update: []
      title: traffic_mirror_targets
    transit_gateway_attachment_propagations:
      name: transit_gateway_attachment_propagations
      methods:
        transit_gateway_attachment_propagations_Get:
          operation:
            $ref: '#/paths/~1?Action=GetTransitGatewayAttachmentPropagations&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/transitGatewayAttachmentPropagations/item
            openAPIDocKey: '200'
      id: aws.ec2.transit_gateway_attachment_propagations
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/transit_gateway_attachment_propagations/methods/transit_gateway_attachment_propagations_Get'
        update: []
      title: transit_gateway_attachment_propagations
    transit_gateway_attachments:
      name: transit_gateway_attachments
      methods:
        transit_gateway_attachments_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeTransitGatewayAttachments&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/transitGatewayAttachments/item
            openAPIDocKey: '200'
      id: aws.ec2.transit_gateway_attachments
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/transit_gateway_attachments/methods/transit_gateway_attachments_Describe'
        update: []
      title: transit_gateway_attachments
    transit_gateway_connect_peers:
      name: transit_gateway_connect_peers
      methods:
        transit_gateway_connect_peer_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateTransitGatewayConnectPeer&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        transit_gateway_connect_peer_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteTransitGatewayConnectPeer&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        transit_gateway_connect_peers_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeTransitGatewayConnectPeers&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/transitGatewayConnectPeerSet/item
            openAPIDocKey: '200'
      id: aws.ec2.transit_gateway_connect_peers
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/transit_gateway_connect_peers/methods/transit_gateway_connect_peer_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/transit_gateway_connect_peers/methods/transit_gateway_connect_peer_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/transit_gateway_connect_peers/methods/transit_gateway_connect_peers_Describe'
        update: []
      title: transit_gateway_connect_peers
    transit_gateway_connects:
      name: transit_gateway_connects
      methods:
        transit_gateway_connect_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateTransitGatewayConnect&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        transit_gateway_connect_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteTransitGatewayConnect&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        transit_gateway_connects_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeTransitGatewayConnects&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/transitGatewayConnectSet/item
            openAPIDocKey: '200'
      id: aws.ec2.transit_gateway_connects
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/transit_gateway_connects/methods/transit_gateway_connect_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/transit_gateway_connects/methods/transit_gateway_connect_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/transit_gateway_connects/methods/transit_gateway_connects_Describe'
        update: []
      title: transit_gateway_connects
    transit_gateway_multicast_domain_associations:
      name: transit_gateway_multicast_domain_associations
      methods:
        transit_gateway_multicast_domain_associations_Accept:
          operation:
            $ref: '#/paths/~1?Action=AcceptTransitGatewayMulticastDomainAssociations&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        transit_gateway_multicast_domain_associations_Get:
          operation:
            $ref: '#/paths/~1?Action=GetTransitGatewayMulticastDomainAssociations&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/multicastDomainAssociations/item
            openAPIDocKey: '200'
        transit_gateway_multicast_domain_associations_Reject:
          operation:
            $ref: '#/paths/~1?Action=RejectTransitGatewayMulticastDomainAssociations&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.transit_gateway_multicast_domain_associations
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/transit_gateway_multicast_domain_associations/methods/transit_gateway_multicast_domain_associations_Get'
        update: []
      title: transit_gateway_multicast_domain_associations
    transit_gateway_multicast_domains:
      name: transit_gateway_multicast_domains
      methods:
        transit_gateway_multicast_domain_Associate:
          operation:
            $ref: '#/paths/~1?Action=AssociateTransitGatewayMulticastDomain&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        transit_gateway_multicast_domain_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateTransitGatewayMulticastDomain&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        transit_gateway_multicast_domain_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteTransitGatewayMulticastDomain&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        transit_gateway_multicast_domain_Disassociate:
          operation:
            $ref: '#/paths/~1?Action=DisassociateTransitGatewayMulticastDomain&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        transit_gateway_multicast_domains_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeTransitGatewayMulticastDomains&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/transitGatewayMulticastDomains/item
            openAPIDocKey: '200'
      id: aws.ec2.transit_gateway_multicast_domains
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/transit_gateway_multicast_domains/methods/transit_gateway_multicast_domain_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/transit_gateway_multicast_domains/methods/transit_gateway_multicast_domain_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/transit_gateway_multicast_domains/methods/transit_gateway_multicast_domains_Describe'
        update: []
      title: transit_gateway_multicast_domains
    transit_gateway_multicast_group_members:
      name: transit_gateway_multicast_group_members
      methods:
        transit_gateway_multicast_group_members_Deregister:
          operation:
            $ref: '#/paths/~1?Action=DeregisterTransitGatewayMulticastGroupMembers&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        transit_gateway_multicast_group_members_Register:
          operation:
            $ref: '#/paths/~1?Action=RegisterTransitGatewayMulticastGroupMembers&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.transit_gateway_multicast_group_members
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: transit_gateway_multicast_group_members
    transit_gateway_multicast_group_sources:
      name: transit_gateway_multicast_group_sources
      methods:
        transit_gateway_multicast_group_sources_Deregister:
          operation:
            $ref: '#/paths/~1?Action=DeregisterTransitGatewayMulticastGroupSources&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        transit_gateway_multicast_group_sources_Register:
          operation:
            $ref: '#/paths/~1?Action=RegisterTransitGatewayMulticastGroupSources&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.transit_gateway_multicast_group_sources
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: transit_gateway_multicast_group_sources
    transit_gateway_multicast_groups:
      name: transit_gateway_multicast_groups
      methods:
        transit_gateway_multicast_groups_Search:
          operation:
            $ref: '#/paths/~1?Action=SearchTransitGatewayMulticastGroups&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.transit_gateway_multicast_groups
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: transit_gateway_multicast_groups
    transit_gateway_peering_attachments:
      name: transit_gateway_peering_attachments
      methods:
        transit_gateway_peering_attachment_Accept:
          operation:
            $ref: '#/paths/~1?Action=AcceptTransitGatewayPeeringAttachment&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        transit_gateway_peering_attachment_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateTransitGatewayPeeringAttachment&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        transit_gateway_peering_attachment_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteTransitGatewayPeeringAttachment&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        transit_gateway_peering_attachment_Reject:
          operation:
            $ref: '#/paths/~1?Action=RejectTransitGatewayPeeringAttachment&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        transit_gateway_peering_attachments_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeTransitGatewayPeeringAttachments&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/transitGatewayPeeringAttachments/item
            openAPIDocKey: '200'
      id: aws.ec2.transit_gateway_peering_attachments
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/transit_gateway_peering_attachments/methods/transit_gateway_peering_attachment_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/transit_gateway_peering_attachments/methods/transit_gateway_peering_attachment_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/transit_gateway_peering_attachments/methods/transit_gateway_peering_attachments_Describe'
        update: []
      title: transit_gateway_peering_attachments
    transit_gateway_prefix_list_references:
      name: transit_gateway_prefix_list_references
      methods:
        transit_gateway_prefix_list_reference_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateTransitGatewayPrefixListReference&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        transit_gateway_prefix_list_reference_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteTransitGatewayPrefixListReference&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        transit_gateway_prefix_list_reference_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifyTransitGatewayPrefixListReference&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        transit_gateway_prefix_list_references_Get:
          operation:
            $ref: '#/paths/~1?Action=GetTransitGatewayPrefixListReferences&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/transitGatewayPrefixListReferenceSet/item
            openAPIDocKey: '200'
      id: aws.ec2.transit_gateway_prefix_list_references
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/transit_gateway_prefix_list_references/methods/transit_gateway_prefix_list_reference_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/transit_gateway_prefix_list_references/methods/transit_gateway_prefix_list_reference_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/transit_gateway_prefix_list_references/methods/transit_gateway_prefix_list_references_Get'
        update: []
      title: transit_gateway_prefix_list_references
    transit_gateway_route_table_associations:
      name: transit_gateway_route_table_associations
      methods:
        transit_gateway_route_table_associations_Get:
          operation:
            $ref: '#/paths/~1?Action=GetTransitGatewayRouteTableAssociations&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/associations/item
            openAPIDocKey: '200'
      id: aws.ec2.transit_gateway_route_table_associations
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/transit_gateway_route_table_associations/methods/transit_gateway_route_table_associations_Get'
        update: []
      title: transit_gateway_route_table_associations
    transit_gateway_route_table_propagations:
      name: transit_gateway_route_table_propagations
      methods:
        transit_gateway_route_table_propagation_Disable:
          operation:
            $ref: '#/paths/~1?Action=DisableTransitGatewayRouteTablePropagation&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        transit_gateway_route_table_propagation_Enable:
          operation:
            $ref: '#/paths/~1?Action=EnableTransitGatewayRouteTablePropagation&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        transit_gateway_route_table_propagations_Get:
          operation:
            $ref: '#/paths/~1?Action=GetTransitGatewayRouteTablePropagations&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/transitGatewayRouteTablePropagations/item
            openAPIDocKey: '200'
      id: aws.ec2.transit_gateway_route_table_propagations
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/transit_gateway_route_table_propagations/methods/transit_gateway_route_table_propagations_Get'
        update: []
      title: transit_gateway_route_table_propagations
    transit_gateway_route_tables:
      name: transit_gateway_route_tables
      methods:
        transit_gateway_route_table_Associate:
          operation:
            $ref: '#/paths/~1?Action=AssociateTransitGatewayRouteTable&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        transit_gateway_route_table_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateTransitGatewayRouteTable&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        transit_gateway_route_table_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteTransitGatewayRouteTable&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        transit_gateway_route_table_Disassociate:
          operation:
            $ref: '#/paths/~1?Action=DisassociateTransitGatewayRouteTable&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        transit_gateway_route_tables_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeTransitGatewayRouteTables&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/transitGatewayRouteTables/item
            openAPIDocKey: '200'
      id: aws.ec2.transit_gateway_route_tables
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/transit_gateway_route_tables/methods/transit_gateway_route_table_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/transit_gateway_route_tables/methods/transit_gateway_route_table_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/transit_gateway_route_tables/methods/transit_gateway_route_tables_Describe'
        update: []
      title: transit_gateway_route_tables
    transit_gateway_routes:
      name: transit_gateway_routes
      methods:
        transit_gateway_route_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateTransitGatewayRoute&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        transit_gateway_route_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteTransitGatewayRoute&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        transit_gateway_route_Replace:
          operation:
            $ref: '#/paths/~1?Action=ReplaceTransitGatewayRoute&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        transit_gateway_routes_Export:
          operation:
            $ref: '#/paths/~1?Action=ExportTransitGatewayRoutes&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        transit_gateway_routes_Search:
          operation:
            $ref: '#/paths/~1?Action=SearchTransitGatewayRoutes&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.transit_gateway_routes
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/transit_gateway_routes/methods/transit_gateway_route_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/transit_gateway_routes/methods/transit_gateway_route_Create'
        select: []
        update: []
      title: transit_gateway_routes
    transit_gateway_vpc_attachments:
      name: transit_gateway_vpc_attachments
      methods:
        transit_gateway_vpc_attachment_Accept:
          operation:
            $ref: '#/paths/~1?Action=AcceptTransitGatewayVpcAttachment&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        transit_gateway_vpc_attachment_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateTransitGatewayVpcAttachment&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        transit_gateway_vpc_attachment_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteTransitGatewayVpcAttachment&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        transit_gateway_vpc_attachment_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifyTransitGatewayVpcAttachment&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        transit_gateway_vpc_attachment_Reject:
          operation:
            $ref: '#/paths/~1?Action=RejectTransitGatewayVpcAttachment&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        transit_gateway_vpc_attachments_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeTransitGatewayVpcAttachments&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/transitGatewayVpcAttachments/item
            openAPIDocKey: '200'
      id: aws.ec2.transit_gateway_vpc_attachments
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/transit_gateway_vpc_attachments/methods/transit_gateway_vpc_attachment_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/transit_gateway_vpc_attachments/methods/transit_gateway_vpc_attachment_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/transit_gateway_vpc_attachments/methods/transit_gateway_vpc_attachments_Describe'
        update: []
      title: transit_gateway_vpc_attachments
    transit_gateways:
      name: transit_gateways
      methods:
        transit_gateway_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateTransitGateway&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        transit_gateway_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteTransitGateway&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        transit_gateway_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifyTransitGateway&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        transit_gateways_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeTransitGateways&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/transitGatewaySet/item
            openAPIDocKey: '200'
      id: aws.ec2.transit_gateways
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/transit_gateways/methods/transit_gateway_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/transit_gateways/methods/transit_gateway_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/transit_gateways/methods/transit_gateways_Describe'
        update: []
      title: transit_gateways
    trunk_interface:
      name: trunk_interface
      methods:
        trunk_interface_Associate:
          operation:
            $ref: '#/paths/~1?Action=AssociateTrunkInterface&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        trunk_interface_Disassociate:
          operation:
            $ref: '#/paths/~1?Action=DisassociateTrunkInterface&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.trunk_interface
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: trunk_interface
    trunk_interface_associations:
      name: trunk_interface_associations
      methods:
        trunk_interface_associations_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeTrunkInterfaceAssociations&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/interfaceAssociationSet/item
            openAPIDocKey: '200'
      id: aws.ec2.trunk_interface_associations
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/trunk_interface_associations/methods/trunk_interface_associations_Describe'
        update: []
      title: trunk_interface_associations
    vgw_route_propagation:
      name: vgw_route_propagation
      methods:
        vgw_route_propagation_Disable:
          operation:
            $ref: '#/paths/~1?Action=DisableVgwRoutePropagation&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
        vgw_route_propagation_Enable:
          operation:
            $ref: '#/paths/~1?Action=EnableVgwRoutePropagation&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
      id: aws.ec2.vgw_route_propagation
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: vgw_route_propagation
    volume_attribute:
      name: volume_attribute
      methods:
        volume_attribute_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeVolumeAttribute&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*
            openAPIDocKey: '200'
        volume_attribute_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifyVolumeAttribute&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
      id: aws.ec2.volume_attribute
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/volume_attribute/methods/volume_attribute_Describe'
        update: []
      title: volume_attribute
    volume_i_o:
      name: volume_i_o
      methods:
        volume_i_o_Enable:
          operation:
            $ref: '#/paths/~1?Action=EnableVolumeIO&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
      id: aws.ec2.volume_i_o
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: volume_i_o
    volume_status:
      name: volume_status
      methods:
        volume_status_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeVolumeStatus&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/volumeStatusSet/item
            openAPIDocKey: '200'
      id: aws.ec2.volume_status
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/volume_status/methods/volume_status_Describe'
        update: []
      title: volume_status
    volumes:
      name: volumes
      methods:
        volume_Attach:
          operation:
            $ref: '#/paths/~1?Action=AttachVolume&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        volume_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateVolume&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        volume_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteVolume&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
        volume_Detach:
          operation:
            $ref: '#/paths/~1?Action=DetachVolume&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        volume_Import:
          operation:
            $ref: '#/paths/~1?Action=ImportVolume&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        volume_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifyVolume&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        volumes_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeVolumes&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/volumeSet/item
            openAPIDocKey: '200'
      id: aws.ec2.volumes
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/volumes/methods/volume_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/volumes/methods/volume_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/volumes/methods/volumes_Describe'
        update:
        - $ref: '#/components/x-stackQL-resources/volumes/methods/volume_Modify'
      title: volumes
    volumes_modifications:
      name: volumes_modifications
      methods:
        volumes_modifications_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeVolumesModifications&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/volumeModificationSet/item
            openAPIDocKey: '200'
      id: aws.ec2.volumes_modifications
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/volumes_modifications/methods/volumes_modifications_Describe'
        update: []
      title: volumes_modifications
    vpc_attribute:
      name: vpc_attribute
      methods:
        vpc_attribute_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeVpcAttribute&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*
            openAPIDocKey: '200'
        vpc_attribute_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifyVpcAttribute&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
      id: aws.ec2.vpc_attribute
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/vpc_attribute/methods/vpc_attribute_Describe'
        update: []
      title: vpc_attribute
    vpc_cidr_block:
      name: vpc_cidr_block
      methods:
        vpc_cidr_block_Associate:
          operation:
            $ref: '#/paths/~1?Action=AssociateVpcCidrBlock&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        vpc_cidr_block_Disassociate:
          operation:
            $ref: '#/paths/~1?Action=DisassociateVpcCidrBlock&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.vpc_cidr_block
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: vpc_cidr_block
    vpc_classic_link:
      name: vpc_classic_link
      methods:
        vpc_classic_link_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeVpcClassicLink&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/vpcSet/item
            openAPIDocKey: '200'
        vpc_classic_link_Disable:
          operation:
            $ref: '#/paths/~1?Action=DisableVpcClassicLink&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        vpc_classic_link_Enable:
          operation:
            $ref: '#/paths/~1?Action=EnableVpcClassicLink&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.vpc_classic_link
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/vpc_classic_link/methods/vpc_classic_link_Describe'
        update: []
      title: vpc_classic_link
    vpc_classic_link_dns_support:
      name: vpc_classic_link_dns_support
      methods:
        vpc_classic_link_dns_support_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeVpcClassicLinkDnsSupport&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/vpcs/item
            openAPIDocKey: '200'
        vpc_classic_link_dns_support_Disable:
          operation:
            $ref: '#/paths/~1?Action=DisableVpcClassicLinkDnsSupport&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        vpc_classic_link_dns_support_Enable:
          operation:
            $ref: '#/paths/~1?Action=EnableVpcClassicLinkDnsSupport&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.vpc_classic_link_dns_support
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/vpc_classic_link_dns_support/methods/vpc_classic_link_dns_support_Describe'
        update: []
      title: vpc_classic_link_dns_support
    vpc_endpoint_connection_notifications:
      name: vpc_endpoint_connection_notifications
      methods:
        vpc_endpoint_connection_notification_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateVpcEndpointConnectionNotification&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        vpc_endpoint_connection_notification_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifyVpcEndpointConnectionNotification&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        vpc_endpoint_connection_notifications_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteVpcEndpointConnectionNotifications&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        vpc_endpoint_connection_notifications_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeVpcEndpointConnectionNotifications&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/connectionNotificationSet/item
            openAPIDocKey: '200'
      id: aws.ec2.vpc_endpoint_connection_notifications
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/vpc_endpoint_connection_notifications/methods/vpc_endpoint_connection_notifications_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/vpc_endpoint_connection_notifications/methods/vpc_endpoint_connection_notification_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/vpc_endpoint_connection_notifications/methods/vpc_endpoint_connection_notifications_Describe'
        update: []
      title: vpc_endpoint_connection_notifications
    vpc_endpoint_connections:
      name: vpc_endpoint_connections
      methods:
        vpc_endpoint_connections_Accept:
          operation:
            $ref: '#/paths/~1?Action=AcceptVpcEndpointConnections&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        vpc_endpoint_connections_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeVpcEndpointConnections&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/vpcEndpointConnectionSet/item
            openAPIDocKey: '200'
        vpc_endpoint_connections_Reject:
          operation:
            $ref: '#/paths/~1?Action=RejectVpcEndpointConnections&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.vpc_endpoint_connections
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/vpc_endpoint_connections/methods/vpc_endpoint_connections_Describe'
        update: []
      title: vpc_endpoint_connections
    vpc_endpoint_service_configurations:
      name: vpc_endpoint_service_configurations
      methods:
        vpc_endpoint_service_configuration_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateVpcEndpointServiceConfiguration&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        vpc_endpoint_service_configuration_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifyVpcEndpointServiceConfiguration&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        vpc_endpoint_service_configurations_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteVpcEndpointServiceConfigurations&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        vpc_endpoint_service_configurations_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeVpcEndpointServiceConfigurations&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/serviceConfigurationSet/item
            openAPIDocKey: '200'
      id: aws.ec2.vpc_endpoint_service_configurations
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/vpc_endpoint_service_configurations/methods/vpc_endpoint_service_configurations_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/vpc_endpoint_service_configurations/methods/vpc_endpoint_service_configuration_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/vpc_endpoint_service_configurations/methods/vpc_endpoint_service_configurations_Describe'
        update: []
      title: vpc_endpoint_service_configurations
    vpc_endpoint_service_payer_responsibility:
      name: vpc_endpoint_service_payer_responsibility
      methods:
        vpc_endpoint_service_payer_responsibility_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifyVpcEndpointServicePayerResponsibility&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.vpc_endpoint_service_payer_responsibility
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: vpc_endpoint_service_payer_responsibility
    vpc_endpoint_service_permissions:
      name: vpc_endpoint_service_permissions
      methods:
        vpc_endpoint_service_permissions_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeVpcEndpointServicePermissions&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/allowedPrincipals/item
            openAPIDocKey: '200'
        vpc_endpoint_service_permissions_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifyVpcEndpointServicePermissions&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.vpc_endpoint_service_permissions
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/vpc_endpoint_service_permissions/methods/vpc_endpoint_service_permissions_Describe'
        update: []
      title: vpc_endpoint_service_permissions
    vpc_endpoint_service_private_dns_verification:
      name: vpc_endpoint_service_private_dns_verification
      methods:
        vpc_endpoint_service_private_dns_verification_Start:
          operation:
            $ref: '#/paths/~1?Action=StartVpcEndpointServicePrivateDnsVerification&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.vpc_endpoint_service_private_dns_verification
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: vpc_endpoint_service_private_dns_verification
    vpc_endpoint_services:
      name: vpc_endpoint_services
      methods:
        vpc_endpoint_services_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeVpcEndpointServices&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/serviceDetailSet/item
            openAPIDocKey: '200'
      id: aws.ec2.vpc_endpoint_services
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/vpc_endpoint_services/methods/vpc_endpoint_services_Describe'
        update: []
      title: vpc_endpoint_services
    vpc_endpoints:
      name: vpc_endpoints
      methods:
        vpc_endpoint_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateVpcEndpoint&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        vpc_endpoint_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifyVpcEndpoint&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        vpc_endpoints_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteVpcEndpoints&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        vpc_endpoints_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeVpcEndpoints&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/vpcEndpointSet/item
            openAPIDocKey: '200'
      id: aws.ec2.vpc_endpoints
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/vpc_endpoints/methods/vpc_endpoints_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/vpc_endpoints/methods/vpc_endpoint_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/vpc_endpoints/methods/vpc_endpoints_Describe'
        update: []
      title: vpc_endpoints
    vpc_peering_connection_options:
      name: vpc_peering_connection_options
      methods:
        vpc_peering_connection_options_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifyVpcPeeringConnectionOptions&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.vpc_peering_connection_options
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: vpc_peering_connection_options
    vpc_peering_connections:
      name: vpc_peering_connections
      methods:
        vpc_peering_connection_Accept:
          operation:
            $ref: '#/paths/~1?Action=AcceptVpcPeeringConnection&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        vpc_peering_connection_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateVpcPeeringConnection&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        vpc_peering_connection_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteVpcPeeringConnection&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        vpc_peering_connection_Reject:
          operation:
            $ref: '#/paths/~1?Action=RejectVpcPeeringConnection&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        vpc_peering_connections_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeVpcPeeringConnections&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/vpcPeeringConnectionSet/item
            openAPIDocKey: '200'
      id: aws.ec2.vpc_peering_connections
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/vpc_peering_connections/methods/vpc_peering_connection_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/vpc_peering_connections/methods/vpc_peering_connection_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/vpc_peering_connections/methods/vpc_peering_connections_Describe'
        update: []
      title: vpc_peering_connections
    vpc_tenancy:
      name: vpc_tenancy
      methods:
        vpc_tenancy_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifyVpcTenancy&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.vpc_tenancy
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: vpc_tenancy
    vpcs:
      name: vpcs
      methods:
        vpc_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateVpc&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        vpc_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteVpc&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
        vpcs_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeVpcs&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/vpcSet/item
            openAPIDocKey: '200'
      id: aws.ec2.vpcs
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/vpcs/methods/vpc_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/vpcs/methods/vpc_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/vpcs/methods/vpcs_Describe'
        update: []
      title: vpcs
    vpn_connection_device_sample_configuration:
      name: vpn_connection_device_sample_configuration
      methods:
        vpn_connection_device_sample_configuration_Get:
          operation:
            $ref: '#/paths/~1?Action=GetVpnConnectionDeviceSampleConfiguration&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*
            openAPIDocKey: '200'
      id: aws.ec2.vpn_connection_device_sample_configuration
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/vpn_connection_device_sample_configuration/methods/vpn_connection_device_sample_configuration_Get'
        update: []
      title: vpn_connection_device_sample_configuration
    vpn_connection_device_types:
      name: vpn_connection_device_types
      methods:
        vpn_connection_device_types_Get:
          operation:
            $ref: '#/paths/~1?Action=GetVpnConnectionDeviceTypes&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/vpnConnectionDeviceTypeSet/item
            openAPIDocKey: '200'
      id: aws.ec2.vpn_connection_device_types
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/vpn_connection_device_types/methods/vpn_connection_device_types_Get'
        update: []
      title: vpn_connection_device_types
    vpn_connection_options:
      name: vpn_connection_options
      methods:
        vpn_connection_options_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifyVpnConnectionOptions&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.vpn_connection_options
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: vpn_connection_options
    vpn_connection_route:
      name: vpn_connection_route
      methods:
        vpn_connection_route_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateVpnConnectionRoute&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
        vpn_connection_route_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteVpnConnectionRoute&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
      id: aws.ec2.vpn_connection_route
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/vpn_connection_route/methods/vpn_connection_route_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/vpn_connection_route/methods/vpn_connection_route_Create'
        select: []
        update: []
      title: vpn_connection_route
    vpn_connections:
      name: vpn_connections
      methods:
        vpn_connection_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateVpnConnection&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        vpn_connection_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteVpnConnection&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
        vpn_connection_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifyVpnConnection&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        vpn_connections_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeVpnConnections&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/vpnConnectionSet/item
            openAPIDocKey: '200'
      id: aws.ec2.vpn_connections
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/vpn_connections/methods/vpn_connection_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/vpn_connections/methods/vpn_connection_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/vpn_connections/methods/vpn_connections_Describe'
        update: []
      title: vpn_connections
    vpn_gateways:
      name: vpn_gateways
      methods:
        vpn_gateway_Attach:
          operation:
            $ref: '#/paths/~1?Action=AttachVpnGateway&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        vpn_gateway_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateVpnGateway&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        vpn_gateway_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteVpnGateway&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
        vpn_gateway_Detach:
          operation:
            $ref: '#/paths/~1?Action=DetachVpnGateway&Version=2016-11-15/get'
          response:
            openAPIDocKey: '200'
        vpn_gateways_Describe:
          operation:
            $ref: '#/paths/~1?Action=DescribeVpnGateways&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            objectKey: /*/vpnGatewaySet/item
            openAPIDocKey: '200'
      id: aws.ec2.vpn_gateways
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/vpn_gateways/methods/vpn_gateway_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/vpn_gateways/methods/vpn_gateway_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/vpn_gateways/methods/vpn_gateways_Describe'
        update: []
      title: vpn_gateways
    vpn_tunnel_certificate:
      name: vpn_tunnel_certificate
      methods:
        vpn_tunnel_certificate_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifyVpnTunnelCertificate&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.vpn_tunnel_certificate
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: vpn_tunnel_certificate
    vpn_tunnel_options:
      name: vpn_tunnel_options
      methods:
        vpn_tunnel_options_Modify:
          operation:
            $ref: '#/paths/~1?Action=ModifyVpnTunnelOptions&Version=2016-11-15/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.vpn_tunnel_options
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: vpn_tunnel_options
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AcceptReservedInstancesExchangeQuoteResult:
      type: object
      properties:
        exchangeId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the successful exchange.
      description: The result of the exchange and whether it was <code>successful</code>.
    ReservationId:
      type: string
    TargetConfigurationRequest:
      type: object
      required:
        - OfferingId
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/ReservedInstancesOfferingId'
            - description: The Convertible Reserved Instance offering ID.
      description: Details about the target configuration.
    AcceptTransitGatewayMulticastDomainAssociationsResult:
      type: object
      properties:
        associations:
          $ref: '#/components/schemas/TransitGatewayMulticastDomainAssociations'
    String:
      type: string
    AcceptTransitGatewayPeeringAttachmentResult:
      type: object
      properties:
        transitGatewayPeeringAttachment:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayPeeringAttachment'
            - description: The transit gateway peering attachment.
    AcceptTransitGatewayVpcAttachmentResult:
      type: object
      properties:
        transitGatewayVpcAttachment:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayVpcAttachment'
            - description: The VPC attachment.
    AcceptVpcEndpointConnectionsResult:
      type: object
      properties:
        unsuccessful:
          allOf:
            - $ref: '#/components/schemas/UnsuccessfulItemSet'
            - description: 'Information about the interface endpoints that were not accepted, if applicable.'
    VpcEndpointId:
      type: string
    AcceptVpcPeeringConnectionResult:
      type: object
      properties:
        vpcPeeringConnection:
          allOf:
            - $ref: '#/components/schemas/VpcPeeringConnection'
            - description: Information about the VPC peering connection.
    AdvertiseByoipCidrResult:
      type: object
      properties:
        byoipCidr:
          allOf:
            - $ref: '#/components/schemas/ByoipCidr'
            - description: Information about the address range.
    AllocateAddressResult:
      type: object
      example:
        Domain: standard
        PublicIp: 198.51.100.0
      properties:
        publicIp:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Elastic IP address.
        allocationId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '[EC2-VPC] The ID that Amazon Web Services assigns to represent the allocation of the Elastic IP address for use with instances in a VPC.'
        publicIpv4Pool:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of an address pool.
        networkBorderGroup:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The set of Availability Zones, Local Zones, or Wavelength Zones from which Amazon Web Services advertises IP addresses.'
        domain:
          allOf:
            - $ref: '#/components/schemas/DomainType'
            - description: Indicates whether the Elastic IP address is for use with instances in a VPC (<code>vpc</code>) or instances in EC2-Classic (<code>standard</code>).
        customerOwnedIp:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The customer-owned IP address.
        customerOwnedIpv4Pool:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the customer-owned address pool.
        carrierIp:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The carrier IP address. This option is only available for network interfaces which reside in a subnet in a Wavelength Zone (for example an EC2 instance). '
    TagSpecification:
      type: object
      properties:
        resourceType:
          allOf:
            - $ref: '#/components/schemas/ResourceType'
            - description: The type of resource to tag on creation.
        Tag:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags to apply to the resource.
      description: The tags to apply to a resource when the resource is being created.
    AllocateHostsResult:
      type: object
      properties:
        hostIdSet:
          allOf:
            - $ref: '#/components/schemas/ResponseHostIdList'
            - description: The ID of the allocated Dedicated Host. This is used to launch an instance onto a specific host.
      description: Contains the output of AllocateHosts.
    AllocateIpamPoolCidrResult:
      type: object
      properties:
        ipamPoolAllocation:
          allOf:
            - $ref: '#/components/schemas/IpamPoolAllocation'
            - description: Information about the allocation created.
    ApplySecurityGroupsToClientVpnTargetNetworkResult:
      type: object
      properties:
        securityGroupIds:
          allOf:
            - $ref: '#/components/schemas/ClientVpnSecurityGroupIdSet'
            - description: The IDs of the applied security groups.
    SecurityGroupId:
      type: string
    AssignIpv6AddressesResult:
      type: object
      properties:
        assignedIpv6Addresses:
          allOf:
            - $ref: '#/components/schemas/Ipv6AddressList'
            - description: The new IPv6 addresses assigned to the network interface. Existing IPv6 addresses that were assigned to the network interface before the request are not included.
        assignedIpv6PrefixSet:
          allOf:
            - $ref: '#/components/schemas/IpPrefixList'
            - description: The IPv6 prefixes that are assigned to the network interface.
        networkInterfaceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the network interface.
    AssignPrivateIpAddressesResult:
      type: object
      properties:
        networkInterfaceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the network interface.
        assignedPrivateIpAddressesSet:
          allOf:
            - $ref: '#/components/schemas/AssignedPrivateIpAddressList'
            - description: The private IP addresses assigned to the network interface.
        assignedIpv4PrefixSet:
          allOf:
            - $ref: '#/components/schemas/Ipv4PrefixesList'
            - description: The IPv4 prefixes that are assigned to the network interface.
    AssociateAddressResult:
      type: object
      example:
        AssociationId: eipassoc-2bebb745
      properties:
        associationId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '[EC2-VPC] The ID that represents the association of the Elastic IP address with an instance.'
    AssociateClientVpnTargetNetworkResult:
      type: object
      properties:
        associationId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The unique ID of the target network association.
        status:
          allOf:
            - $ref: '#/components/schemas/AssociationStatus'
            - description: The current state of the target network association.
    AssociateEnclaveCertificateIamRoleResult:
      type: object
      properties:
        certificateS3BucketName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the Amazon S3 bucket to which the certificate was uploaded.
        certificateS3ObjectKey:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The Amazon S3 object key where the certificate, certificate chain, and encrypted private key bundle are stored. The object key is formatted as follows: <code>role_arn</code>/<code>certificate_arn</code>.'
        encryptionKmsKeyId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the KMS key used to encrypt the private key of the certificate.
    AssociateIamInstanceProfileResult:
      type: object
      example:
        IamInstanceProfileAssociation:
          AssociationId: iip-assoc-0e7736511a163c209
          IamInstanceProfile:
            Arn: 'arn:aws:iam::123456789012:instance-profile/admin-role'
            Id: AIPAJBLK7RKJKWDXVHIEC
          InstanceId: i-123456789abcde123
          State: associating
      properties:
        iamInstanceProfileAssociation:
          allOf:
            - $ref: '#/components/schemas/IamInstanceProfileAssociation'
            - description: Information about the IAM instance profile association.
    AssociateInstanceEventWindowResult:
      type: object
      properties:
        instanceEventWindow:
          allOf:
            - $ref: '#/components/schemas/InstanceEventWindow'
            - description: Information about the event window.
    InstanceIdList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/InstanceId'
          - xml:
              name: item
    TagList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Tag'
          - xml:
              name: item
    DedicatedHostIdList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/DedicatedHostId'
          - xml:
              name: item
    AssociateRouteTableResult:
      type: object
      example:
        AssociationId: rtbassoc-781d0d1a
      properties:
        associationId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The route table association ID. This ID is required for disassociating the route table.
        associationState:
          allOf:
            - $ref: '#/components/schemas/RouteTableAssociationState'
            - description: The state of the association.
    AssociateSubnetCidrBlockResult:
      type: object
      properties:
        ipv6CidrBlockAssociation:
          allOf:
            - $ref: '#/components/schemas/SubnetIpv6CidrBlockAssociation'
            - description: Information about the IPv6 association.
        subnetId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the subnet.
    AssociateTransitGatewayMulticastDomainResult:
      type: object
      properties:
        associations:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayMulticastDomainAssociations'
            - description: Information about the transit gateway multicast domain associations.
    SubnetId:
      type: string
    AssociateTransitGatewayRouteTableResult:
      type: object
      properties:
        association:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayAssociation'
            - description: The ID of the association.
    AssociateTrunkInterfaceResult:
      type: object
      properties:
        interfaceAssociation:
          allOf:
            - $ref: '#/components/schemas/TrunkInterfaceAssociation'
            - description: Information about the association between the trunk network interface and branch network interface.
        clientToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to Ensure Idempotency</a>.'
    AssociateVpcCidrBlockResult:
      type: object
      properties:
        ipv6CidrBlockAssociation:
          allOf:
            - $ref: '#/components/schemas/VpcIpv6CidrBlockAssociation'
            - description: Information about the IPv6 CIDR block association.
        cidrBlockAssociation:
          allOf:
            - $ref: '#/components/schemas/VpcCidrBlockAssociation'
            - description: Information about the IPv4 CIDR block association.
        vpcId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the VPC.
    AttachClassicLinkVpcResult:
      type: object
      properties:
        return:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Returns <code>true</code> if the request succeeds; otherwise, it returns an error.'
    AttachNetworkInterfaceResult:
      type: object
      example:
        AttachmentId: eni-attach-66c4350a
      properties:
        attachmentId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the network interface attachment.
        networkCardIndex:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The index of the network card.
      description: Contains the output of AttachNetworkInterface.
    VolumeAttachment:
      type: object
      example:
        AttachTime: '2014-02-27T19:23:06.000Z'
        Device: /dev/sdb
        InstanceId: i-1234567890abcdef0
        State: detaching
        VolumeId: vol-049df61146c4d7901
      properties:
        attachTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The time stamp when the attachment initiated.
        device:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The device name.
        instanceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the instance.
        status:
          allOf:
            - $ref: '#/components/schemas/VolumeAttachmentState'
            - description: The attachment state of the volume.
        volumeId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the volume.
        deleteOnTermination:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the EBS volume is deleted on instance termination.
      description: Describes volume attachment details.
    AttachVpnGatewayResult:
      type: object
      properties:
        attachment:
          allOf:
            - $ref: '#/components/schemas/VpcAttachment'
            - description: Information about the attachment.
      description: Contains the output of AttachVpnGateway.
    AuthorizeClientVpnIngressResult:
      type: object
      properties:
        status:
          allOf:
            - $ref: '#/components/schemas/ClientVpnAuthorizationRuleStatus'
            - description: The current state of the authorization rule.
    AuthorizeSecurityGroupEgressResult:
      type: object
      example: {}
      properties:
        return:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Returns <code>true</code> if the request succeeds; otherwise, returns an error.'
        securityGroupRuleSet:
          allOf:
            - $ref: '#/components/schemas/SecurityGroupRuleList'
            - description: Information about the outbound (egress) security group rules that were added.
    IpPermission:
      type: object
      properties:
        fromPort:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type number. A value of <code>-1</code> indicates all ICMP/ICMPv6 types. If you specify all ICMP/ICMPv6 types, you must specify all codes.'
        ipProtocol:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The IP protocol name (<code>tcp</code>, <code>udp</code>, <code>icmp</code>, <code>icmpv6</code>) or number (see <a href="http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml">Protocol Numbers</a>).</p> <p>[VPC only] Use <code>-1</code> to specify all protocols. When authorizing security group rules, specifying <code>-1</code> or a protocol number other than <code>tcp</code>, <code>udp</code>, <code>icmp</code>, or <code>icmpv6</code> allows traffic on all ports, regardless of any port range you specify. For <code>tcp</code>, <code>udp</code>, and <code>icmp</code>, you must specify a port range. For <code>icmpv6</code>, the port range is optional; if you omit the port range, traffic for all types and codes is allowed.</p>'
        ipRanges:
          allOf:
            - $ref: '#/components/schemas/IpRangeList'
            - description: The IPv4 ranges.
        ipv6Ranges:
          allOf:
            - $ref: '#/components/schemas/Ipv6RangeList'
            - description: '[VPC only] The IPv6 ranges.'
        prefixListIds:
          allOf:
            - $ref: '#/components/schemas/PrefixListIdList'
            - description: '[VPC only] The prefix list IDs.'
        toPort:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code. A value of <code>-1</code> indicates all ICMP/ICMPv6 codes. If you specify all ICMP/ICMPv6 types, you must specify all codes.'
        groups:
          allOf:
            - $ref: '#/components/schemas/UserIdGroupPairList'
            - description: The security group and Amazon Web Services account ID pairs.
      description: Describes a set of permissions for a security group rule.
    AuthorizeSecurityGroupIngressResult:
      type: object
      example: {}
      properties:
        return:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Returns <code>true</code> if the request succeeds; otherwise, returns an error.'
        securityGroupRuleSet:
          allOf:
            - $ref: '#/components/schemas/SecurityGroupRuleList'
            - description: Information about the inbound (ingress) security group rules that were added.
    BundleInstanceResult:
      type: object
      properties:
        bundleInstanceTask:
          allOf:
            - $ref: '#/components/schemas/BundleTask'
            - description: Information about the bundle task.
      description: Contains the output of BundleInstance.
    S3Storage:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The access key ID of the owner of the bucket. Before you specify a value for your access key ID, review and follow the guidance in <a href="https://docs.aws.amazon.com/general/latest/gr/aws-access-keys-best-practices.html">Best Practices for Managing Amazon Web Services Access Keys</a>.'
        bucket:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The bucket in which to store the AMI. You can specify a bucket that you already own or a new bucket that Amazon EC2 creates on your behalf. If you specify a bucket that belongs to someone else, Amazon EC2 returns an error.'
        prefix:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The beginning of the file name of the AMI.
        uploadPolicy:
          allOf:
            - $ref: '#/components/schemas/Blob'
            - description: An Amazon S3 upload policy that gives Amazon EC2 permission to upload items into Amazon S3 on your behalf.
        uploadPolicySignature:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The signature of the JSON document.
      description: Describes the storage parameters for Amazon S3 and Amazon S3 buckets for an instance store-backed AMI.
    CancelBundleTaskResult:
      type: object
      properties:
        bundleInstanceTask:
          allOf:
            - $ref: '#/components/schemas/BundleTask'
            - description: Information about the bundle task.
      description: Contains the output of CancelBundleTask.
    CancelCapacityReservationResult:
      type: object
      properties:
        return:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Returns <code>true</code> if the request succeeds; otherwise, it returns an error.'
    CancelCapacityReservationFleetsResult:
      type: object
      properties:
        successfulFleetCancellationSet:
          allOf:
            - $ref: '#/components/schemas/CapacityReservationFleetCancellationStateSet'
            - description: Information about the Capacity Reservation Fleets that were successfully cancelled.
        failedFleetCancellationSet:
          allOf:
            - $ref: '#/components/schemas/FailedCapacityReservationFleetCancellationResultSet'
            - description: Information about the Capacity Reservation Fleets that could not be cancelled.
    CapacityReservationFleetId:
      type: string
    CancelImportTaskResult:
      type: object
      properties:
        importTaskId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the task being canceled.
        previousState:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The current state of the task being canceled.
        state:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The current state of the task being canceled.
    CancelReservedInstancesListingResult:
      type: object
      properties:
        reservedInstancesListingsSet:
          allOf:
            - $ref: '#/components/schemas/ReservedInstancesListingList'
            - description: The Reserved Instance listing.
      description: Contains the output of CancelReservedInstancesListing.
    CancelSpotFleetRequestsResponse:
      type: object
      example:
        SuccessfulFleetRequests:
          - CurrentSpotFleetRequestState: cancelled_terminating
            PreviousSpotFleetRequestState: active
            SpotFleetRequestId: sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE
      properties:
        successfulFleetRequestSet:
          allOf:
            - $ref: '#/components/schemas/CancelSpotFleetRequestsSuccessSet'
            - description: Information about the Spot Fleet requests that are successfully canceled.
        unsuccessfulFleetRequestSet:
          allOf:
            - $ref: '#/components/schemas/CancelSpotFleetRequestsErrorSet'
            - description: Information about the Spot Fleet requests that are not successfully canceled.
      description: Contains the output of CancelSpotFleetRequests.
    SpotFleetRequestId:
      type: string
    CancelSpotInstanceRequestsResult:
      type: object
      example:
        CancelledSpotInstanceRequests:
          - SpotInstanceRequestId: sir-08b93456
            State: cancelled
      properties:
        spotInstanceRequestSet:
          allOf:
            - $ref: '#/components/schemas/CancelledSpotInstanceRequestList'
            - description: One or more Spot Instance requests.
      description: Contains the output of CancelSpotInstanceRequests.
    SpotInstanceRequestId:
      type: string
    ConfirmProductInstanceResult:
      type: object
      example:
        OwnerId: '123456789012'
      properties:
        ownerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Web Services account ID of the instance owner. This is only present if the product code is attached to the instance.
        return:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: The return value of the request. Returns <code>true</code> if the specified product code is owned by the requester and associated with the specified instance.
    CopyFpgaImageResult:
      type: object
      properties:
        fpgaImageId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the new AFI.
    CopyImageResult:
      type: object
      example:
        ImageId: ami-438bea42
      properties:
        imageId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the new AMI.
      description: Contains the output of CopyImage.
    CopySnapshotResult:
      type: object
      example:
        SnapshotId: snap-066877671789bd71b
      properties:
        snapshotId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the new snapshot.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: Any tags applied to the new snapshot.
    CreateCapacityReservationResult:
      type: object
      properties:
        capacityReservation:
          allOf:
            - $ref: '#/components/schemas/CapacityReservation'
            - description: Information about the Capacity Reservation.
    CreateCapacityReservationFleetResult:
      type: object
      properties:
        capacityReservationFleetId:
          allOf:
            - $ref: '#/components/schemas/CapacityReservationFleetId'
            - description: The ID of the Capacity Reservation Fleet.
        state:
          allOf:
            - $ref: '#/components/schemas/CapacityReservationFleetState'
            - description: The status of the Capacity Reservation Fleet.
        totalTargetCapacity:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The total number of capacity units for which the Capacity Reservation Fleet reserves capacity.
        totalFulfilledCapacity:
          allOf:
            - $ref: '#/components/schemas/Double'
            - description: The requested capacity units that have been successfully reserved.
        instanceMatchCriteria:
          allOf:
            - $ref: '#/components/schemas/FleetInstanceMatchCriteria'
            - description: The instance matching criteria for the Capacity Reservation Fleet.
        allocationStrategy:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The allocation strategy used by the Capacity Reservation Fleet.
        createTime:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: The date and time at which the Capacity Reservation Fleet was created.
        endDate:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: The date and time at which the Capacity Reservation Fleet expires.
        tenancy:
          allOf:
            - $ref: '#/components/schemas/FleetCapacityReservationTenancy'
            - description: Indicates the tenancy of Capacity Reservation Fleet.
        fleetCapacityReservationSet:
          allOf:
            - $ref: '#/components/schemas/FleetCapacityReservationSet'
            - description: Information about the individual Capacity Reservations in the Capacity Reservation Fleet.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags assigned to the Capacity Reservation Fleet.
    ReservationFleetInstanceSpecification:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/IntegerWithConstraints'
            - description: 'The priority to assign to the instance type. This value is used to determine which of the instance types specified for the Fleet should be prioritized for use. A lower value indicates a high priority. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/crfleet-concepts.html#instance-priority">Instance type priority</a> in the Amazon EC2 User Guide.'
      description: Information about an instance type to use in a Capacity Reservation Fleet.
    CreateCarrierGatewayResult:
      type: object
      properties:
        carrierGateway:
          allOf:
            - $ref: '#/components/schemas/CarrierGateway'
            - description: Information about the carrier gateway.
    CreateClientVpnEndpointResult:
      type: object
      properties:
        clientVpnEndpointId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Client VPN endpoint.
        status:
          allOf:
            - $ref: '#/components/schemas/ClientVpnEndpointStatus'
            - description: The current state of the Client VPN endpoint.
        dnsName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The DNS name to be used by clients when establishing their VPN session.
    ClientVpnAuthenticationRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/FederatedAuthenticationRequest'
            - description: 'Information about the IAM SAML identity provider to be used, if applicable. You must provide this information if <b>Type</b> is <code>federated-authentication</code>.'
      description: 'Describes the authentication method to be used by a Client VPN endpoint. For more information, see <a href="https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/authentication-authrization.html#client-authentication">Authentication</a> in the <i>Client VPN Administrator Guide</i>.'
    CreateClientVpnRouteResult:
      type: object
      properties:
        status:
          allOf:
            - $ref: '#/components/schemas/ClientVpnRouteStatus'
            - description: The current state of the route.
    CreateCustomerGatewayResult:
      type: object
      example:
        CustomerGateway:
          BgpAsn: '65534'
          CustomerGatewayId: cgw-0e11f167
          IpAddress: 12.1.2.3
          State: available
          Type: ipsec.1
      properties:
        customerGateway:
          allOf:
            - $ref: '#/components/schemas/CustomerGateway'
            - description: Information about the customer gateway.
      description: Contains the output of CreateCustomerGateway.
    CreateDefaultSubnetResult:
      type: object
      properties:
        subnet:
          allOf:
            - $ref: '#/components/schemas/Subnet'
            - description: Information about the subnet.
    CreateDefaultVpcResult:
      type: object
      properties:
        vpc:
          allOf:
            - $ref: '#/components/schemas/Vpc'
            - description: Information about the VPC.
    CreateDhcpOptionsResult:
      type: object
      example:
        DhcpOptions:
          DhcpConfigurations:
            - Key: domain-name-servers
              Values:
                - Value: 10.2.5.2
                - Value: 10.2.5.1
          DhcpOptionsId: dopt-d9070ebb
      properties:
        dhcpOptions:
          allOf:
            - $ref: '#/components/schemas/DhcpOptions'
            - description: A set of DHCP options.
    NewDhcpConfiguration:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/String'
        Value:
          $ref: '#/components/schemas/ValueStringList'
    CreateEgressOnlyInternetGatewayResult:
      type: object
      properties:
        clientToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'
        egressOnlyInternetGateway:
          allOf:
            - $ref: '#/components/schemas/EgressOnlyInternetGateway'
            - description: Information about the egress-only internet gateway.
    CreateFleetResult:
      type: object
      properties:
        fleetId:
          allOf:
            - $ref: '#/components/schemas/FleetId'
            - description: The ID of the EC2 Fleet.
        errorSet:
          allOf:
            - $ref: '#/components/schemas/CreateFleetErrorsSet'
            - description: Information about the instances that could not be launched by the fleet. Supported only for fleets of type <code>instant</code>.
        fleetInstanceSet:
          allOf:
            - $ref: '#/components/schemas/CreateFleetInstancesSet'
            - description: Information about the instances that were launched by the fleet. Supported only for fleets of type <code>instant</code>.
    FleetLaunchTemplateConfigRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/FleetLaunchTemplateOverridesListRequest'
            - description: '<p>Any parameters that you specify override the same parameters in the launch template.</p> <p>For fleets of type <code>request</code> and <code>maintain</code>, a maximum of 300 items is allowed across all launch templates.</p>'
      description: Describes a launch template and overrides.
    TargetCapacityUnitType:
      type: string
      enum:
        - vcpu
        - memory-mib
        - units
    CreateFlowLogsResult:
      type: object
      properties:
        clientToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'
        flowLogIdSet:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: The IDs of the flow logs.
        unsuccessful:
          allOf:
            - $ref: '#/components/schemas/UnsuccessfulItemSet'
            - description: Information about the flow logs that could not be created successfully.
    FlowLogResourceId:
      type: string
    Boolean:
      type: boolean
    CreateFpgaImageResult:
      type: object
      properties:
        fpgaImageId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The FPGA image identifier (AFI ID).
        fpgaImageGlobalId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The global FPGA image identifier (AGFI ID).
    CreateImageResult:
      type: object
      example:
        ImageId: ami-1a2b3c4d
      properties:
        imageId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the new AMI.
    BlockDeviceMapping:
      type: object
      properties:
        deviceName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The device name (for example, <code>/dev/sdh</code> or <code>xvdh</code>).'
        virtualName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The virtual device name (<code>ephemeral</code>N). Instance store volumes are numbered starting from 0. An instance type with 2 available instance store volumes can specify mappings for <code>ephemeral0</code> and <code>ephemeral1</code>. The number of available instance store volumes depends on the instance type. After you connect to the instance, you must mount the volume.</p> <p>NVMe instance store volumes are automatically enumerated and assigned a device name. Including them in your block device mapping has no effect.</p> <p>Constraints: For M3 instances, you must specify instance store volumes in the block device mapping for the instance. When you launch an M3 instance, we ignore any instance store volumes specified in the block device mapping for the AMI.</p>'
        ebs:
          allOf:
            - $ref: '#/components/schemas/EbsBlockDevice'
            - description: Parameters used to automatically set up EBS volumes when the instance is launched.
        noDevice:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'To omit the device from the block device mapping, specify an empty string. When this property is specified, the device is removed from the block device mapping regardless of the assigned value.'
      description: 'Describes a block device mapping, which defines the EBS volumes and instance store volumes to attach to an instance at launch.'
    CreateInstanceEventWindowResult:
      type: object
      properties:
        instanceEventWindow:
          allOf:
            - $ref: '#/components/schemas/InstanceEventWindow'
            - description: Information about the event window.
    InstanceEventWindowTimeRangeRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Hour'
            - description: The hour when the time range ends.
      description: 'The start day and time and the end day and time of the time range, in UTC.'
    CreateInstanceExportTaskResult:
      type: object
      properties:
        exportTask:
          allOf:
            - $ref: '#/components/schemas/ExportTask'
            - description: Information about the export instance task.
    ContainerFormat:
      type: string
      enum:
        - ova
    DiskImageFormat:
      type: string
      enum:
        - VMDK
        - RAW
        - VHD
    CreateInternetGatewayResult:
      type: object
      example:
        InternetGateway:
          Attachments: []
          InternetGatewayId: igw-c0a643a9
          Tags: []
      properties:
        internetGateway:
          allOf:
            - $ref: '#/components/schemas/InternetGateway'
            - description: Information about the internet gateway.
    CreateIpamResult:
      type: object
      properties:
        ipam:
          allOf:
            - $ref: '#/components/schemas/Ipam'
            - description: Information about the IPAM created.
    AddIpamOperatingRegion:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the operating Region.
      description: '<p>Add an operating Region to an IPAM. Operating Regions are Amazon Web Services Regions where the IPAM is allowed to manage IP address CIDRs. IPAM only discovers and monitors resources in the Amazon Web Services Regions you select as operating Regions.</p> <p>For more information about operating Regions, see <a href="/vpc/latest/ipam/create-ipam.html">Create an IPAM</a> in the <i>Amazon VPC IPAM User Guide</i>. </p>'
    CreateIpamPoolResult:
      type: object
      properties:
        ipamPool:
          allOf:
            - $ref: '#/components/schemas/IpamPool'
            - description: Information about the IPAM pool created.
    RequestIpamResourceTag:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The value for the tag.
      description: A tag on an IPAM resource.
    CreateIpamScopeResult:
      type: object
      properties:
        ipamScope:
          allOf:
            - $ref: '#/components/schemas/IpamScope'
            - description: Information about the created scope.
    KeyPair:
      type: object
      properties:
        keyFingerprint:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<ul> <li> <p>For RSA key pairs, the key fingerprint is the SHA-1 digest of the DER encoded private key.</p> </li> <li> <p>For ED25519 key pairs, the key fingerprint is the base64-encoded SHA-256 digest, which is the default for OpenSSH, starting with OpenSSH 6.8.</p> </li> </ul>'
        keyMaterial:
          allOf:
            - $ref: '#/components/schemas/SensitiveUserData'
            - description: An unencrypted PEM encoded RSA or ED25519 private key.
        keyName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the key pair.
        keyPairId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the key pair.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: Any tags applied to the key pair.
      description: Describes a key pair.
    CreateLaunchTemplateResult:
      type: object
      example:
        LaunchTemplate:
          CreateTime: '2017-11-27T09:13:24.000Z'
          CreatedBy: 'arn:aws:iam::123456789012:root'
          DefaultVersionNumber: 1
          LatestVersionNumber: 1
          LaunchTemplateId: lt-01238c059e3466abc
          LaunchTemplateName: my-template
      properties:
        launchTemplate:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplate'
            - description: Information about the launch template.
        warning:
          allOf:
            - $ref: '#/components/schemas/ValidationWarning'
            - description: 'If the launch template contains parameters or parameter combinations that are not valid, an error code and an error message are returned for each issue that''s found.'
    LaunchTemplateIamInstanceProfileSpecificationRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the instance profile.
      description: An IAM instance profile.
    LaunchTemplateBlockDeviceMappingRequestList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/LaunchTemplateBlockDeviceMappingRequest'
          - xml:
              name: BlockDeviceMapping
    LaunchTemplateTagSpecificationRequestList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/LaunchTemplateTagSpecificationRequest'
          - xml:
              name: LaunchTemplateTagSpecificationRequest
    ElasticGpuSpecificationList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ElasticGpuSpecification'
          - xml:
              name: ElasticGpuSpecification
    LaunchTemplateElasticInferenceAcceleratorList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/LaunchTemplateElasticInferenceAccelerator'
          - xml:
              name: item
    SecurityGroupIdStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/SecurityGroupId'
          - xml:
              name: SecurityGroupId
    LaunchTemplateCapacityReservationSpecificationRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/CapacityReservationTarget'
            - description: Information about the target Capacity Reservation or Capacity Reservation group.
      description: 'Describes an instance''s Capacity Reservation targeting option. You can specify only one option at a time. Use the <code>CapacityReservationPreference</code> parameter to configure the instance to run in On-Demand capacity or to run in any <code>open</code> Capacity Reservation that has matching attributes (instance type, platform, Availability Zone). Use the <code>CapacityReservationTarget</code> parameter to explicitly target a specific Capacity Reservation or a Capacity Reservation group.'
    LaunchTemplateInstanceMaintenanceOptionsRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateAutoRecoveryState'
            - description: 'Disables the automatic recovery behavior of your instance or sets it to default. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-recover.html#instance-configuration-recovery">Simplified automatic recovery</a>.'
      description: The maintenance options of your instance.
    CreateLaunchTemplateVersionResult:
      type: object
      example:
        LaunchTemplateVersion:
          CreateTime: '2017-12-01T13:35:46.000Z'
          CreatedBy: 'arn:aws:iam::123456789012:root'
          DefaultVersion: false
          LaunchTemplateData:
            ImageId: ami-c998b6b2
            InstanceType: t2.micro
            NetworkInterfaces:
              - AssociatePublicIpAddress: true
                DeviceIndex: 0
                Ipv6Addresses:
                  - Ipv6Address: '2001:db8:1234:1a00::123'
                SubnetId: subnet-7b16de0c
          LaunchTemplateId: lt-0abcd290751193123
          LaunchTemplateName: my-template
          VersionDescription: WebVersion2
          VersionNumber: 2
      properties:
        launchTemplateVersion:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateVersion'
            - description: Information about the launch template version.
        warning:
          allOf:
            - $ref: '#/components/schemas/ValidationWarning'
            - description: 'If the new version of the launch template contains parameters or parameter combinations that are not valid, an error code and an error message are returned for each issue that''s found.'
    CreateLocalGatewayRouteResult:
      type: object
      properties:
        route:
          allOf:
            - $ref: '#/components/schemas/LocalGatewayRoute'
            - description: Information about the route.
    CreateLocalGatewayRouteTableVpcAssociationResult:
      type: object
      properties:
        localGatewayRouteTableVpcAssociation:
          allOf:
            - $ref: '#/components/schemas/LocalGatewayRouteTableVpcAssociation'
            - description: Information about the association.
    CreateManagedPrefixListResult:
      type: object
      properties:
        prefixList:
          allOf:
            - $ref: '#/components/schemas/ManagedPrefixList'
            - description: Information about the prefix list.
    AddPrefixListEntry:
      type: object
      required:
        - Cidr
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>A description for the entry.</p> <p>Constraints: Up to 255 characters in length.</p>'
      description: An entry for a prefix list.
    CreateNatGatewayResult:
      type: object
      example:
        NatGateway:
          CreateTime: '2015-12-17T12:45:26.732Z'
          NatGatewayAddresses:
            - AllocationId: eipalloc-37fc1a52
          NatGatewayId: nat-08d48af2a8e83edfd
          State: pending
          SubnetId: subnet-1a2b3c4d
          VpcId: vpc-1122aabb
      properties:
        clientToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'Unique, case-sensitive identifier to ensure the idempotency of the request. Only returned if a client token was provided in the request.'
        natGateway:
          allOf:
            - $ref: '#/components/schemas/NatGateway'
            - description: Information about the NAT gateway.
    CreateNetworkAclResult:
      type: object
      example:
        NetworkAcl:
          Associations: []
          Entries:
            - CidrBlock: 0.0.0.0/0
              Egress: true
              Protocol: '-1'
              RuleAction: deny
              RuleNumber: 32767
            - CidrBlock: 0.0.0.0/0
              Egress: false
              Protocol: '-1'
              RuleAction: deny
              RuleNumber: 32767
          IsDefault: false
          NetworkAclId: acl-5fb85d36
          Tags: []
          VpcId: vpc-a01106c2
      properties:
        networkAcl:
          allOf:
            - $ref: '#/components/schemas/NetworkAcl'
            - description: Information about the network ACL.
    Integer:
      type: integer
    CreateNetworkInsightsAccessScopeResult:
      type: object
      properties:
        networkInsightsAccessScope:
          allOf:
            - $ref: '#/components/schemas/NetworkInsightsAccessScope'
            - description: The Network Access Scope.
        networkInsightsAccessScopeContent:
          allOf:
            - $ref: '#/components/schemas/NetworkInsightsAccessScopeContent'
            - description: The Network Access Scope content.
    AccessScopePathRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/PathStatementRequest'
            - description: The destination.
        ThroughResource:
          allOf:
            - $ref: '#/components/schemas/ThroughResourcesStatementRequestList'
            - description: The through resources.
      description: Describes a path.
    CreateNetworkInsightsPathResult:
      type: object
      properties:
        networkInsightsPath:
          allOf:
            - $ref: '#/components/schemas/NetworkInsightsPath'
            - description: Information about the path.
    CreateNetworkInterfaceResult:
      type: object
      example:
        NetworkInterface:
          AvailabilityZone: us-east-1d
          Description: my network interface
          Groups:
            - GroupId: sg-903004f8
              GroupName: default
          MacAddress: '02:1a:80:41:52:9c'
          NetworkInterfaceId: eni-e5aa89a3
          OwnerId: '123456789012'
          PrivateIpAddress: 10.0.2.17
          PrivateIpAddresses:
            - Primary: true
              PrivateIpAddress: 10.0.2.17
          RequesterManaged: false
          SourceDestCheck: true
          Status: pending
          SubnetId: subnet-9d4a7b6c
          TagSet: []
          VpcId: vpc-a01106c2
      properties:
        networkInterface:
          allOf:
            - $ref: '#/components/schemas/NetworkInterface'
            - description: Information about the network interface.
        clientToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
      description: Contains the output of CreateNetworkInterface.
    InstanceIpv6Address:
      type: object
      properties:
        ipv6Address:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The IPv6 address.
      description: Describes an IPv6 address.
    PrivateIpAddressSpecification:
      type: object
      properties:
        primary:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the private IPv4 address is the primary private IPv4 address. Only one IPv4 address can be designated as primary.
        privateIpAddress:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The private IPv4 addresses.
      description: Describes a secondary private IPv4 address for a network interface.
    Ipv4PrefixSpecificationRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The IPv4 prefix. For information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-prefix-eni.html"> Assigning prefixes to Amazon EC2 network interfaces</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.'
      description: Describes the IPv4 prefix option for a network interface.
    Ipv6PrefixSpecificationRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The IPv6 prefix.
      description: Describes the IPv4 prefix option for a network interface.
    CreateNetworkInterfacePermissionResult:
      type: object
      properties:
        interfacePermission:
          allOf:
            - $ref: '#/components/schemas/NetworkInterfacePermission'
            - description: Information about the permission for the network interface.
      description: Contains the output of CreateNetworkInterfacePermission.
    CreatePlacementGroupResult:
      type: object
      example: {}
      properties:
        placementGroup:
          $ref: '#/components/schemas/PlacementGroup'
    CreatePublicIpv4PoolResult:
      type: object
      properties:
        poolId:
          allOf:
            - $ref: '#/components/schemas/Ipv4PoolEc2Id'
            - description: The ID of the public IPv4 pool.
    CreateReplaceRootVolumeTaskResult:
      type: object
      properties:
        replaceRootVolumeTask:
          allOf:
            - $ref: '#/components/schemas/ReplaceRootVolumeTask'
            - description: Information about the root volume replacement task.
    CreateReservedInstancesListingResult:
      type: object
      properties:
        reservedInstancesListingsSet:
          allOf:
            - $ref: '#/components/schemas/ReservedInstancesListingList'
            - description: Information about the Standard Reserved Instance listing.
      description: Contains the output of CreateReservedInstancesListing.
    PriceScheduleSpecification:
      type: object
      properties:
        currencyCode:
          allOf:
            - $ref: '#/components/schemas/CurrencyCodeValues'
            - description: 'The currency for transacting the Reserved Instance resale. At this time, the only supported currency is <code>USD</code>.'
        price:
          allOf:
            - $ref: '#/components/schemas/Double'
            - description: The fixed price for the term.
        term:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: 'The number of months remaining in the reservation. For example, 2 is the second to the last month before the capacity reservation expires.'
      description: Describes the price for a Reserved Instance.
    CreateRestoreImageTaskResult:
      type: object
      properties:
        imageId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The AMI ID.
    CreateRouteResult:
      type: object
      properties:
        return:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Returns <code>true</code> if the request succeeds; otherwise, it returns an error.'
    CreateRouteTableResult:
      type: object
      example:
        RouteTable:
          Associations: []
          PropagatingVgws: []
          RouteTableId: rtb-22574640
          Routes:
            - DestinationCidrBlock: 10.0.0.0/16
              GatewayId: local
              State: active
          Tags: []
          VpcId: vpc-a01106c2
      properties:
        routeTable:
          allOf:
            - $ref: '#/components/schemas/RouteTable'
            - description: Information about the route table.
    CreateSecurityGroupResult:
      type: object
      example:
        GroupId: sg-903004f8
      properties:
        groupId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the security group.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags assigned to the security group.
    Snapshot:
      type: object
      example:
        Description: This is my root volume snapshot.
        OwnerId: 012345678910
        SnapshotId: snap-066877671789bd71b
        StartTime: '2014-02-28T21:06:01.000Z'
        State: pending
        Tags: []
        VolumeId: vol-1234567890abcdef0
        VolumeSize: 8
      properties:
        dataEncryptionKeyId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The data encryption key identifier for the snapshot. This value is a unique identifier that corresponds to the data encryption key that was used to encrypt the original volume or snapshot copy. Because data encryption keys are inherited by volumes created from snapshots, and vice versa, if snapshots share the same data encryption key identifier, then they belong to the same volume/snapshot lineage. This parameter is only returned by <a>DescribeSnapshots</a>.'
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The description for the snapshot.
        encrypted:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the snapshot is encrypted.
        kmsKeyId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Resource Name (ARN) of the Key Management Service (KMS) KMS key that was used to protect the volume encryption key for the parent volume.
        ownerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Amazon Web Services account that owns the EBS snapshot.
        progress:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The progress of the snapshot, as a percentage.'
        snapshotId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the snapshot. Each snapshot receives a unique identifier when it is created.
        startTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The time stamp when the snapshot was initiated.
        status:
          allOf:
            - $ref: '#/components/schemas/SnapshotState'
            - description: The snapshot state.
        statusMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'Encrypted Amazon EBS snapshots are copied asynchronously. If a snapshot copy operation fails (for example, if the proper Key Management Service (KMS) permissions are not obtained) this field displays error state details to help you diagnose why the error occurred. This parameter is only returned by <a>DescribeSnapshots</a>.'
        volumeId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the volume that was used to create the snapshot. Snapshots created by the <a>CopySnapshot</a> action have an arbitrary volume ID that should not be used for any purpose.
        volumeSize:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The size of the volume, in GiB.'
        ownerAlias:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The Amazon Web Services owner alias, from an Amazon-maintained list (<code>amazon</code>). This is not the user-configured Amazon Web Services account alias set using the IAM console.'
        outpostArn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The ARN of the Outpost on which the snapshot is stored. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshots-outposts.html">Amazon EBS local snapshots on Outposts</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.'
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: Any tags assigned to the snapshot.
        storageTier:
          allOf:
            - $ref: '#/components/schemas/StorageTier'
            - description: The storage tier in which the snapshot is stored. <code>standard</code> indicates that the snapshot is stored in the standard snapshot storage tier and that it is ready for use. <code>archive</code> indicates that the snapshot is currently archived and that it must be restored before it can be used.
        restoreExpiryTime:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: Only for archived snapshots that are temporarily restored. Indicates the date and time when a temporarily restored snapshot will be automatically re-archived.
      description: Describes a snapshot.
    CreateSnapshotsResult:
      type: object
      properties:
        snapshotSet:
          allOf:
            - $ref: '#/components/schemas/SnapshotSet'
            - description: List of snapshots.
    CreateSpotDatafeedSubscriptionResult:
      type: object
      example:
        SpotDatafeedSubscription:
          Bucket: my-s3-bucket
          OwnerId: '123456789012'
          Prefix: spotdata
          State: Active
      properties:
        spotDatafeedSubscription:
          allOf:
            - $ref: '#/components/schemas/SpotDatafeedSubscription'
            - description: The Spot Instance data feed subscription.
      description: Contains the output of CreateSpotDatafeedSubscription.
    CreateStoreImageTaskResult:
      type: object
      properties:
        objectKey:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the stored AMI object in the S3 bucket.
    S3ObjectTag:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The value of the tag.</p> <p>Constraints: Tag values are case-sensitive and can be up to 256 Unicode characters in length.</p>'
      description: 'The tags to apply to the AMI object that will be stored in the Amazon S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-tagging.html">Categorizing your storage using tags</a> in the <i>Amazon Simple Storage Service User Guide</i>.'
    CreateSubnetResult:
      type: object
      example:
        Subnet:
          AvailabilityZone: us-west-2c
          AvailableIpAddressCount: 251
          CidrBlock: 10.0.1.0/24
          State: pending
          SubnetId: subnet-9d4a7b6c
          VpcId: vpc-a01106c2
      properties:
        subnet:
          allOf:
            - $ref: '#/components/schemas/Subnet'
            - description: Information about the subnet.
    CreateSubnetCidrReservationResult:
      type: object
      properties:
        subnetCidrReservation:
          allOf:
            - $ref: '#/components/schemas/SubnetCidrReservation'
            - description: Information about the created subnet CIDR reservation.
    TaggableResourceId:
      type: string
    Tag:
      type: object
      properties:
        key:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The key of the tag.</p> <p>Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with <code>aws:</code>.</p>'
        value:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The value of the tag.</p> <p>Constraints: Tag values are case-sensitive and accept a maximum of 256 Unicode characters.</p>'
      description: Describes a tag.
    CreateTrafficMirrorFilterResult:
      type: object
      properties:
        trafficMirrorFilter:
          allOf:
            - $ref: '#/components/schemas/TrafficMirrorFilter'
            - description: Information about the Traffic Mirror filter.
        clientToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to ensure idempotency</a>.'
    CreateTrafficMirrorFilterRuleResult:
      type: object
      properties:
        trafficMirrorFilterRule:
          allOf:
            - $ref: '#/components/schemas/TrafficMirrorFilterRule'
            - description: The Traffic Mirror rule.
        clientToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to ensure idempotency</a>.'
    CreateTrafficMirrorSessionResult:
      type: object
      properties:
        trafficMirrorSession:
          allOf:
            - $ref: '#/components/schemas/TrafficMirrorSession'
            - description: Information about the Traffic Mirror session.
        clientToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to ensure idempotency</a>.'
    CreateTrafficMirrorTargetResult:
      type: object
      properties:
        trafficMirrorTarget:
          allOf:
            - $ref: '#/components/schemas/TrafficMirrorTarget'
            - description: Information about the Traffic Mirror target.
        clientToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to ensure idempotency</a>.'
    CreateTransitGatewayResult:
      type: object
      properties:
        transitGateway:
          allOf:
            - $ref: '#/components/schemas/TransitGateway'
            - description: Information about the transit gateway.
    TransitGatewayCidrBlockStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: item
    CreateTransitGatewayConnectResult:
      type: object
      properties:
        transitGatewayConnect:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayConnect'
            - description: Information about the Connect attachment.
    ProtocolValue:
      type: string
      enum:
        - gre
    CreateTransitGatewayConnectPeerResult:
      type: object
      properties:
        transitGatewayConnectPeer:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayConnectPeer'
            - description: Information about the Connect peer.
    Long:
      type: integer
    CreateTransitGatewayMulticastDomainResult:
      type: object
      properties:
        transitGatewayMulticastDomain:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayMulticastDomain'
            - description: Information about the transit gateway multicast domain.
    AutoAcceptSharedAssociationsValue:
      type: string
      enum:
        - enable
        - disable
    CreateTransitGatewayPeeringAttachmentResult:
      type: object
      properties:
        transitGatewayPeeringAttachment:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayPeeringAttachment'
            - description: The transit gateway peering attachment.
    CreateTransitGatewayPrefixListReferenceResult:
      type: object
      properties:
        transitGatewayPrefixListReference:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayPrefixListReference'
            - description: Information about the prefix list reference.
    CreateTransitGatewayRouteResult:
      type: object
      properties:
        route:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayRoute'
            - description: Information about the route.
    CreateTransitGatewayRouteTableResult:
      type: object
      properties:
        transitGatewayRouteTable:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayRouteTable'
            - description: Information about the transit gateway route table.
    CreateTransitGatewayVpcAttachmentResult:
      type: object
      properties:
        transitGatewayVpcAttachment:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayVpcAttachment'
            - description: Information about the VPC attachment.
    ApplianceModeSupportValue:
      type: string
      enum:
        - enable
        - disable
    Volume:
      type: object
      example:
        Attachments: []
        AvailabilityZone: us-east-1a
        CreateTime: '2016-08-29T18:52:32.724Z'
        Iops: 1000
        Size: 500
        SnapshotId: snap-066877671789bd71b
        State: creating
        Tags: []
        VolumeId: vol-1234567890abcdef0
        VolumeType: io1
      properties:
        attachmentSet:
          allOf:
            - $ref: '#/components/schemas/VolumeAttachmentList'
            - description: Information about the volume attachments.
        AvailabilityZone:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Availability Zone for the volume.
            - xml:
                name: 'availabilityZone'
        createTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The time stamp when volume creation was initiated.
        encrypted:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the volume is encrypted.
        kmsKeyId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Resource Name (ARN) of the Key Management Service (KMS) KMS key that was used to protect the volume encryption key for the volume.
        outpostArn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Resource Name (ARN) of the Outpost.
        size:
          type: integer
          description: 'The size of the volume, in GiBs.'
        snapshotId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The snapshot from which the volume was created, if applicable.'
        status:
          allOf:
            - $ref: '#/components/schemas/VolumeState'
            - description: The volume state.
        volumeId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the volume.
        iops:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The number of I/O operations per second (IOPS). For <code>gp3</code>, <code>io1</code>, and <code>io2</code> volumes, this represents the number of IOPS that are provisioned for the volume. For <code>gp2</code> volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting.'
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: Any tags assigned to the volume.
        volumeType:
          allOf:
            - $ref: '#/components/schemas/VolumeType'
            - description: The volume type.
        fastRestored:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the volume was created using fast snapshot restore.
        multiAttachEnabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether Amazon EBS Multi-Attach is enabled.
        throughput:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The throughput that the volume supports, in MiB/s.'
      description: Describes a volume.
    CreateVpcResult:
      type: object
      example:
        Vpc:
          CidrBlock: 10.0.0.0/16
          DhcpOptionsId: dopt-7a8b9c2d
          InstanceTenancy: default
          State: pending
          VpcId: vpc-a01106c2
      properties:
        vpc:
          allOf:
            - $ref: '#/components/schemas/Vpc'
            - description: Information about the VPC.
    CreateVpcEndpointResult:
      type: object
      properties:
        vpcEndpoint:
          allOf:
            - $ref: '#/components/schemas/VpcEndpoint'
            - description: Information about the endpoint.
        clientToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'
      description: Contains the output of CreateVpcEndpoint.
    RouteTableId:
      type: string
    DnsRecordIpType:
      type: string
      enum:
        - ipv4
        - dualstack
        - ipv6
        - service-defined
    CreateVpcEndpointConnectionNotificationResult:
      type: object
      properties:
        connectionNotification:
          allOf:
            - $ref: '#/components/schemas/ConnectionNotification'
            - description: Information about the notification.
        clientToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'
    CreateVpcEndpointServiceConfigurationResult:
      type: object
      properties:
        serviceConfiguration:
          allOf:
            - $ref: '#/components/schemas/ServiceConfiguration'
            - description: Information about the service configuration.
        clientToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'
    CreateVpcPeeringConnectionResult:
      type: object
      properties:
        vpcPeeringConnection:
          allOf:
            - $ref: '#/components/schemas/VpcPeeringConnection'
            - description: Information about the VPC peering connection.
    CreateVpnConnectionResult:
      type: object
      properties:
        vpnConnection:
          allOf:
            - $ref: '#/components/schemas/VpnConnection'
            - description: Information about the VPN connection.
      description: Contains the output of CreateVpnConnection.
    CreateVpnGatewayResult:
      type: object
      properties:
        vpnGateway:
          allOf:
            - $ref: '#/components/schemas/VpnGateway'
            - description: Information about the virtual private gateway.
      description: Contains the output of CreateVpnGateway.
    DeleteCarrierGatewayResult:
      type: object
      properties:
        carrierGateway:
          allOf:
            - $ref: '#/components/schemas/CarrierGateway'
            - description: Information about the carrier gateway.
    DeleteClientVpnEndpointResult:
      type: object
      properties:
        status:
          allOf:
            - $ref: '#/components/schemas/ClientVpnEndpointStatus'
            - description: The current state of the Client VPN endpoint.
    DeleteClientVpnRouteResult:
      type: object
      properties:
        status:
          allOf:
            - $ref: '#/components/schemas/ClientVpnRouteStatus'
            - description: The current state of the route.
    DeleteEgressOnlyInternetGatewayResult:
      type: object
      properties:
        returnCode:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Returns <code>true</code> if the request succeeds; otherwise, it returns an error.'
    DeleteFleetsResult:
      type: object
      properties:
        successfulFleetDeletionSet:
          allOf:
            - $ref: '#/components/schemas/DeleteFleetSuccessSet'
            - description: Information about the EC2 Fleets that are successfully deleted.
        unsuccessfulFleetDeletionSet:
          allOf:
            - $ref: '#/components/schemas/DeleteFleetErrorSet'
            - description: Information about the EC2 Fleets that are not successfully deleted.
    FleetId:
      type: string
    DeleteFlowLogsResult:
      type: object
      properties:
        unsuccessful:
          allOf:
            - $ref: '#/components/schemas/UnsuccessfulItemSet'
            - description: Information about the flow logs that could not be deleted successfully.
    VpcFlowLogId:
      type: string
    DeleteFpgaImageResult:
      type: object
      properties:
        return:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Is <code>true</code> if the request succeeds, and an error otherwise.'
    DeleteInstanceEventWindowResult:
      type: object
      properties:
        instanceEventWindowState:
          allOf:
            - $ref: '#/components/schemas/InstanceEventWindowStateChange'
            - description: The state of the event window.
    DeleteIpamResult:
      type: object
      properties:
        ipam:
          allOf:
            - $ref: '#/components/schemas/Ipam'
            - description: Information about the results of the deletion.
    DeleteIpamPoolResult:
      type: object
      properties:
        ipamPool:
          allOf:
            - $ref: '#/components/schemas/IpamPool'
            - description: Information about the results of the deletion.
    DeleteIpamScopeResult:
      type: object
      properties:
        ipamScope:
          allOf:
            - $ref: '#/components/schemas/IpamScope'
            - description: Information about the results of the deletion.
    DeleteLaunchTemplateResult:
      type: object
      example:
        LaunchTemplate:
          CreateTime: '2017-11-23T16:46:25.000Z'
          CreatedBy: 'arn:aws:iam::123456789012:root'
          DefaultVersionNumber: 2
          LatestVersionNumber: 2
          LaunchTemplateId: lt-0abcd290751193123
          LaunchTemplateName: my-template
      properties:
        launchTemplate:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplate'
            - description: Information about the launch template.
    DeleteLaunchTemplateVersionsResult:
      type: object
      example:
        SuccessfullyDeletedLaunchTemplateVersions:
          - LaunchTemplateId: lt-0abcd290751193123
            LaunchTemplateName: my-template
            VersionNumber: 1
        UnsuccessfullyDeletedLaunchTemplateVersions: []
      properties:
        successfullyDeletedLaunchTemplateVersionSet:
          allOf:
            - $ref: '#/components/schemas/DeleteLaunchTemplateVersionsResponseSuccessSet'
            - description: Information about the launch template versions that were successfully deleted.
        unsuccessfullyDeletedLaunchTemplateVersionSet:
          allOf:
            - $ref: '#/components/schemas/DeleteLaunchTemplateVersionsResponseErrorSet'
            - description: Information about the launch template versions that could not be deleted.
    DeleteLocalGatewayRouteResult:
      type: object
      properties:
        route:
          allOf:
            - $ref: '#/components/schemas/LocalGatewayRoute'
            - description: Information about the route.
    DeleteLocalGatewayRouteTableVpcAssociationResult:
      type: object
      properties:
        localGatewayRouteTableVpcAssociation:
          allOf:
            - $ref: '#/components/schemas/LocalGatewayRouteTableVpcAssociation'
            - description: Information about the association.
    DeleteManagedPrefixListResult:
      type: object
      properties:
        prefixList:
          allOf:
            - $ref: '#/components/schemas/ManagedPrefixList'
            - description: Information about the prefix list.
    DeleteNatGatewayResult:
      type: object
      example:
        NatGatewayId: nat-04ae55e711cec5680
      properties:
        natGatewayId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the NAT gateway.
    DeleteNetworkInsightsAccessScopeResult:
      type: object
      properties:
        networkInsightsAccessScopeId:
          allOf:
            - $ref: '#/components/schemas/NetworkInsightsAccessScopeId'
            - description: The ID of the Network Access Scope.
    DeleteNetworkInsightsAccessScopeAnalysisResult:
      type: object
      properties:
        networkInsightsAccessScopeAnalysisId:
          allOf:
            - $ref: '#/components/schemas/NetworkInsightsAccessScopeAnalysisId'
            - description: The ID of the Network Access Scope analysis.
    DeleteNetworkInsightsAnalysisResult:
      type: object
      properties:
        networkInsightsAnalysisId:
          allOf:
            - $ref: '#/components/schemas/NetworkInsightsAnalysisId'
            - description: The ID of the network insights analysis.
    DeleteNetworkInsightsPathResult:
      type: object
      properties:
        networkInsightsPathId:
          allOf:
            - $ref: '#/components/schemas/NetworkInsightsPathId'
            - description: The ID of the path.
    DeleteNetworkInterfacePermissionResult:
      type: object
      properties:
        return:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Returns <code>true</code> if the request succeeds, otherwise returns an error.'
      description: Contains the output for DeleteNetworkInterfacePermission.
    DeletePublicIpv4PoolResult:
      type: object
      properties:
        returnValue:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Information about the result of deleting the public IPv4 pool.
    DeleteQueuedReservedInstancesResult:
      type: object
      properties:
        successfulQueuedPurchaseDeletionSet:
          allOf:
            - $ref: '#/components/schemas/SuccessfulQueuedPurchaseDeletionSet'
            - description: Information about the queued purchases that were successfully deleted.
        failedQueuedPurchaseDeletionSet:
          allOf:
            - $ref: '#/components/schemas/FailedQueuedPurchaseDeletionSet'
            - description: Information about the queued purchases that could not be deleted.
    DeleteSubnetCidrReservationResult:
      type: object
      properties:
        deletedSubnetCidrReservation:
          allOf:
            - $ref: '#/components/schemas/SubnetCidrReservation'
            - description: Information about the deleted subnet CIDR reservation.
    DeleteTrafficMirrorFilterResult:
      type: object
      properties:
        trafficMirrorFilterId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Traffic Mirror filter.
    DeleteTrafficMirrorFilterRuleResult:
      type: object
      properties:
        trafficMirrorFilterRuleId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the deleted Traffic Mirror rule.
    DeleteTrafficMirrorSessionResult:
      type: object
      properties:
        trafficMirrorSessionId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the deleted Traffic Mirror session.
    DeleteTrafficMirrorTargetResult:
      type: object
      properties:
        trafficMirrorTargetId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the deleted Traffic Mirror target.
    DeleteTransitGatewayResult:
      type: object
      properties:
        transitGateway:
          allOf:
            - $ref: '#/components/schemas/TransitGateway'
            - description: Information about the deleted transit gateway.
    DeleteTransitGatewayConnectResult:
      type: object
      properties:
        transitGatewayConnect:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayConnect'
            - description: Information about the deleted Connect attachment.
    DeleteTransitGatewayConnectPeerResult:
      type: object
      properties:
        transitGatewayConnectPeer:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayConnectPeer'
            - description: Information about the deleted Connect peer.
    DeleteTransitGatewayMulticastDomainResult:
      type: object
      properties:
        transitGatewayMulticastDomain:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayMulticastDomain'
            - description: Information about the deleted transit gateway multicast domain.
    DeleteTransitGatewayPeeringAttachmentResult:
      type: object
      properties:
        transitGatewayPeeringAttachment:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayPeeringAttachment'
            - description: The transit gateway peering attachment.
    DeleteTransitGatewayPrefixListReferenceResult:
      type: object
      properties:
        transitGatewayPrefixListReference:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayPrefixListReference'
            - description: Information about the deleted prefix list reference.
    DeleteTransitGatewayRouteResult:
      type: object
      properties:
        route:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayRoute'
            - description: Information about the route.
    DeleteTransitGatewayRouteTableResult:
      type: object
      properties:
        transitGatewayRouteTable:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayRouteTable'
            - description: Information about the deleted transit gateway route table.
    DeleteTransitGatewayVpcAttachmentResult:
      type: object
      properties:
        transitGatewayVpcAttachment:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayVpcAttachment'
            - description: Information about the deleted VPC attachment.
    DeleteVpcEndpointConnectionNotificationsResult:
      type: object
      properties:
        unsuccessful:
          allOf:
            - $ref: '#/components/schemas/UnsuccessfulItemSet'
            - description: Information about the notifications that could not be deleted successfully.
    ConnectionNotificationId:
      type: string
    DeleteVpcEndpointServiceConfigurationsResult:
      type: object
      properties:
        unsuccessful:
          allOf:
            - $ref: '#/components/schemas/UnsuccessfulItemSet'
            - description: 'Information about the service configurations that were not deleted, if applicable.'
    VpcEndpointServiceId:
      type: string
    DeleteVpcEndpointsResult:
      type: object
      properties:
        unsuccessful:
          allOf:
            - $ref: '#/components/schemas/UnsuccessfulItemSet'
            - description: Information about the VPC endpoints that were not successfully deleted.
      description: Contains the output of DeleteVpcEndpoints.
    DeleteVpcPeeringConnectionResult:
      type: object
      properties:
        return:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Returns <code>true</code> if the request succeeds; otherwise, it returns an error.'
    DeprovisionByoipCidrResult:
      type: object
      properties:
        byoipCidr:
          allOf:
            - $ref: '#/components/schemas/ByoipCidr'
            - description: Information about the address range.
    DeprovisionIpamPoolCidrResult:
      type: object
      properties:
        ipamPoolCidr:
          allOf:
            - $ref: '#/components/schemas/IpamPoolCidr'
            - description: The deprovisioned pool CIDR.
    DeprovisionPublicIpv4PoolCidrResult:
      type: object
      properties:
        poolId:
          allOf:
            - $ref: '#/components/schemas/Ipv4PoolEc2Id'
            - description: The ID of the pool that you deprovisioned the CIDR from.
        deprovisionedAddressSet:
          allOf:
            - $ref: '#/components/schemas/DeprovisionedAddressSet'
            - description: The deprovisioned CIDRs.
    DeregisterInstanceEventNotificationAttributesResult:
      type: object
      properties:
        instanceTagAttribute:
          allOf:
            - $ref: '#/components/schemas/InstanceTagNotificationAttribute'
            - description: The resulting set of tag keys.
    InstanceTagKeySet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: item
    DeregisterTransitGatewayMulticastGroupMembersResult:
      type: object
      properties:
        deregisteredMulticastGroupMembers:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayMulticastDeregisteredGroupMembers'
            - description: Information about the deregistered members.
    NetworkInterfaceId:
      type: string
    DeregisterTransitGatewayMulticastGroupSourcesResult:
      type: object
      properties:
        deregisteredMulticastGroupSources:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayMulticastDeregisteredGroupSources'
            - description: Information about the deregistered group sources.
    DescribeAccountAttributesResult:
      type: object
      example:
        AccountAttributes:
          - AttributeName: supported-platforms
            AttributeValues:
              - AttributeValue: EC2
              - AttributeValue: VPC
          - AttributeName: vpc-max-security-groups-per-interface
            AttributeValues:
              - AttributeValue: '5'
          - AttributeName: max-elastic-ips
            AttributeValues:
              - AttributeValue: '5'
          - AttributeName: max-instances
            AttributeValues:
              - AttributeValue: '20'
          - AttributeName: vpc-max-elastic-ips
            AttributeValues:
              - AttributeValue: '5'
          - AttributeName: default-vpc
            AttributeValues:
              - AttributeValue: none
      properties:
        accountAttributeSet:
          allOf:
            - $ref: '#/components/schemas/AccountAttributeList'
            - description: Information about the account attributes.
    AccountAttributeName:
      type: string
      enum:
        - supported-platforms
        - default-vpc
    DescribeAddressesResult:
      type: object
      example:
        Addresses:
          - Domain: standard
            InstanceId: i-1234567890abcdef0
            PublicIp: 198.51.100.0
      properties:
        addressesSet:
          allOf:
            - $ref: '#/components/schemas/AddressList'
            - description: Information about the Elastic IP addresses.
    Filter:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the filter. Filter names are case-sensitive.
        Value:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: 'The filter values. Filter values are case-sensitive. If you specify multiple values for a filter, the values are joined with an <code>OR</code>, and the request returns all results that match any of the specified values.'
      description: '<p>A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs.</p> <p>If you specify multiple filters, the filters are joined with an <code>AND</code>, and the request returns only results that match all of the specified filters.</p>'
    AllocationId:
      type: string
    DescribeAddressesAttributeResult:
      type: object
      properties:
        addressSet:
          allOf:
            - $ref: '#/components/schemas/AddressSet'
            - description: Information about the IP addresses.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeAggregateIdFormatResult:
      type: object
      properties:
        useLongIdsAggregated:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether all resource types in the Region are configured to use longer IDs. This value is only <code>true</code> if all users are configured to use longer IDs for all resources types in the Region.
        statusSet:
          allOf:
            - $ref: '#/components/schemas/IdFormatList'
            - description: Information about each resource's ID format.
    DescribeAvailabilityZonesResult:
      type: object
      example:
        AvailabilityZones:
          - Messages: []
            RegionName: us-east-1
            State: available
            ZoneName: us-east-1b
          - Messages: []
            RegionName: us-east-1
            State: available
            ZoneName: us-east-1c
          - Messages: []
            RegionName: us-east-1
            State: available
            ZoneName: us-east-1d
          - Messages: []
            RegionName: us-east-1
            State: available
            ZoneName: us-east-1e
      properties:
        availabilityZoneInfo:
          allOf:
            - $ref: '#/components/schemas/AvailabilityZoneList'
            - description: 'Information about the Availability Zones, Local Zones, and Wavelength Zones.'
    DescribeBundleTasksResult:
      type: object
      properties:
        bundleInstanceTasksSet:
          allOf:
            - $ref: '#/components/schemas/BundleTaskList'
            - description: Information about the bundle tasks.
    BundleId:
      type: string
    DescribeByoipCidrsResult:
      type: object
      properties:
        byoipCidrSet:
          allOf:
            - $ref: '#/components/schemas/ByoipCidrSet'
            - description: Information about your address ranges.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeCapacityReservationFleetsResult:
      type: object
      properties:
        capacityReservationFleetSet:
          allOf:
            - $ref: '#/components/schemas/CapacityReservationFleetSet'
            - description: Information about the Capacity Reservation Fleets.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeCapacityReservationsResult:
      type: object
      properties:
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
        capacityReservationSet:
          allOf:
            - $ref: '#/components/schemas/CapacityReservationSet'
            - description: Information about the Capacity Reservations.
    CapacityReservationId:
      type: string
    DescribeCarrierGatewaysResult:
      type: object
      properties:
        carrierGatewaySet:
          allOf:
            - $ref: '#/components/schemas/CarrierGatewaySet'
            - description: Information about the carrier gateway.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    CarrierGatewayId:
      type: string
    DescribeClassicLinkInstancesResult:
      type: object
      properties:
        instancesSet:
          allOf:
            - $ref: '#/components/schemas/ClassicLinkInstanceList'
            - description: Information about one or more linked EC2-Classic instances.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    InstanceId:
      type: string
    DescribeClientVpnAuthorizationRulesResult:
      type: object
      properties:
        authorizationRule:
          allOf:
            - $ref: '#/components/schemas/AuthorizationRuleSet'
            - description: Information about the authorization rules.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeClientVpnConnectionsResult:
      type: object
      properties:
        connections:
          allOf:
            - $ref: '#/components/schemas/ClientVpnConnectionSet'
            - description: Information about the active and terminated client connections.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeClientVpnEndpointsResult:
      type: object
      properties:
        clientVpnEndpoint:
          allOf:
            - $ref: '#/components/schemas/EndpointSet'
            - description: Information about the Client VPN endpoints.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    ClientVpnEndpointId:
      type: string
    DescribeClientVpnRoutesResult:
      type: object
      properties:
        routes:
          allOf:
            - $ref: '#/components/schemas/ClientVpnRouteSet'
            - description: Information about the Client VPN endpoint routes.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeClientVpnTargetNetworksResult:
      type: object
      properties:
        clientVpnTargetNetworks:
          allOf:
            - $ref: '#/components/schemas/TargetNetworkSet'
            - description: Information about the associated target networks.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeCoipPoolsResult:
      type: object
      properties:
        coipPoolSet:
          allOf:
            - $ref: '#/components/schemas/CoipPoolSet'
            - description: Information about the address pools.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    Ipv4PoolCoipId:
      type: string
    DescribeConversionTasksResult:
      type: object
      properties:
        conversionTasks:
          allOf:
            - $ref: '#/components/schemas/DescribeConversionTaskList'
            - description: Information about the conversion tasks.
    ConversionTaskId:
      type: string
    DescribeCustomerGatewaysResult:
      type: object
      example:
        CustomerGateways:
          - BgpAsn: '65534'
            CustomerGatewayId: cgw-0e11f167
            IpAddress: 12.1.2.3
            State: available
            Type: ipsec.1
      properties:
        customerGatewaySet:
          allOf:
            - $ref: '#/components/schemas/CustomerGatewayList'
            - description: Information about one or more customer gateways.
      description: Contains the output of DescribeCustomerGateways.
    CustomerGatewayId:
      type: string
    DescribeDhcpOptionsResult:
      type: object
      example:
        DhcpOptions:
          - DhcpConfigurations:
              - Key: domain-name-servers
                Values:
                  - Value: 10.2.5.2
                  - Value: 10.2.5.1
            DhcpOptionsId: dopt-d9070ebb
      properties:
        dhcpOptionsSet:
          allOf:
            - $ref: '#/components/schemas/DhcpOptionsList'
            - description: Information about one or more DHCP options sets.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DhcpOptionsId:
      type: string
    DescribeEgressOnlyInternetGatewaysResult:
      type: object
      properties:
        egressOnlyInternetGatewaySet:
          allOf:
            - $ref: '#/components/schemas/EgressOnlyInternetGatewayList'
            - description: Information about the egress-only internet gateways.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    EgressOnlyInternetGatewayId:
      type: string
    DescribeElasticGpusResult:
      type: object
      properties:
        elasticGpuSet:
          allOf:
            - $ref: '#/components/schemas/ElasticGpuSet'
            - description: Information about the Elastic Graphics accelerators.
        maxResults:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The total number of items to return. If the total number of items available is more than the value specified in max-items then a Next-Token will be provided in the output that you can use to resume pagination.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    ElasticGpuId:
      type: string
    DescribeExportImageTasksResult:
      type: object
      properties:
        exportImageTaskSet:
          allOf:
            - $ref: '#/components/schemas/ExportImageTaskList'
            - description: Information about the export image tasks.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token to use to get the next page of results. This value is <code>null</code> when there are no more results to return.
    ExportImageTaskId:
      type: string
    DescribeExportTasksResult:
      type: object
      properties:
        exportTaskSet:
          allOf:
            - $ref: '#/components/schemas/ExportTaskList'
            - description: Information about the export tasks.
    ExportTaskId:
      type: string
    DescribeFastLaunchImagesResult:
      type: object
      properties:
        fastLaunchImageSet:
          allOf:
            - $ref: '#/components/schemas/DescribeFastLaunchImagesSuccessSet'
            - description: A collection of details about the fast-launch enabled Windows images that meet the requested criteria.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token to use for the next set of results. This value is null when there are no more results to return.
    ImageId:
      type: string
    DescribeFastSnapshotRestoresResult:
      type: object
      properties:
        fastSnapshotRestoreSet:
          allOf:
            - $ref: '#/components/schemas/DescribeFastSnapshotRestoreSuccessSet'
            - description: Information about the state of fast snapshot restores.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeFleetHistoryResult:
      type: object
      properties:
        historyRecordSet:
          allOf:
            - $ref: '#/components/schemas/HistoryRecordSet'
            - description: Information about the events in the history of the EC2 Fleet.
        lastEvaluatedTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: '<p>The last date and time for the events, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). All records up to this time were retrieved.</p> <p>If <code>nextToken</code> indicates that there are more results, this value is not present.</p>'
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token for the next set of results.
        fleetId:
          allOf:
            - $ref: '#/components/schemas/FleetId'
            - description: The ID of the EC Fleet.
        startTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: 'The start date and time for the events, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).'
    DescribeFleetInstancesResult:
      type: object
      properties:
        activeInstanceSet:
          allOf:
            - $ref: '#/components/schemas/ActiveInstanceSet'
            - description: The running instances. This list is refreshed periodically and might be out of date.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token for the next set of results.
        fleetId:
          allOf:
            - $ref: '#/components/schemas/FleetId'
            - description: The ID of the EC2 Fleet.
    DescribeFleetsResult:
      type: object
      properties:
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token for the next set of results.
        fleetSet:
          allOf:
            - $ref: '#/components/schemas/FleetSet'
            - description: Information about the EC2 Fleets.
    DescribeFlowLogsResult:
      type: object
      properties:
        flowLogSet:
          allOf:
            - $ref: '#/components/schemas/FlowLogSet'
            - description: Information about the flow logs.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeFpgaImageAttributeResult:
      type: object
      properties:
        fpgaImageAttribute:
          allOf:
            - $ref: '#/components/schemas/FpgaImageAttribute'
            - description: Information about the attribute.
    DescribeFpgaImagesResult:
      type: object
      properties:
        fpgaImageSet:
          allOf:
            - $ref: '#/components/schemas/FpgaImageList'
            - description: Information about the FPGA images.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    FpgaImageId:
      type: string
    DescribeHostReservationOfferingsResult:
      type: object
      properties:
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
        offeringSet:
          allOf:
            - $ref: '#/components/schemas/HostOfferingSet'
            - description: Information about the offerings.
    DescribeHostReservationsResult:
      type: object
      properties:
        hostReservationSet:
          allOf:
            - $ref: '#/components/schemas/HostReservationSet'
            - description: Details about the reservation's configuration.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    HostReservationId:
      type: string
    DescribeHostsResult:
      type: object
      properties:
        hostSet:
          allOf:
            - $ref: '#/components/schemas/HostList'
            - description: Information about the Dedicated Hosts.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DedicatedHostId:
      type: string
    DescribeIamInstanceProfileAssociationsResult:
      type: object
      example:
        IamInstanceProfileAssociations:
          - AssociationId: iip-assoc-0db249b1f25fa24b8
            IamInstanceProfile:
              Arn: 'arn:aws:iam::123456789012:instance-profile/admin-role'
              Id: AIPAJVQN4F5WVLGCJDRGM
            InstanceId: i-09eb09efa73ec1dee
            State: associated
      properties:
        iamInstanceProfileAssociationSet:
          allOf:
            - $ref: '#/components/schemas/IamInstanceProfileAssociationSet'
            - description: Information about the IAM instance profile associations.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    IamInstanceProfileAssociationId:
      type: string
    DescribeIdFormatResult:
      type: object
      properties:
        statusSet:
          allOf:
            - $ref: '#/components/schemas/IdFormatList'
            - description: Information about the ID format for the resource.
    DescribeIdentityIdFormatResult:
      type: object
      properties:
        statusSet:
          allOf:
            - $ref: '#/components/schemas/IdFormatList'
            - description: Information about the ID format for the resources.
    ImageAttribute:
      type: object
      example:
        ImageId: ami-5731123e
        LaunchPermissions:
          - UserId: '123456789012'
      properties:
        blockDeviceMapping:
          allOf:
            - $ref: '#/components/schemas/BlockDeviceMappingList'
            - description: The block device mapping entries.
        imageId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the AMI.
        launchPermission:
          allOf:
            - $ref: '#/components/schemas/LaunchPermissionList'
            - description: The launch permissions.
        productCodes:
          allOf:
            - $ref: '#/components/schemas/ProductCodeList'
            - description: The product codes.
        description:
          allOf:
            - $ref: '#/components/schemas/AttributeValue'
            - description: A description for the AMI.
        kernel:
          allOf:
            - $ref: '#/components/schemas/AttributeValue'
            - description: The kernel ID.
        ramdisk:
          allOf:
            - $ref: '#/components/schemas/AttributeValue'
            - description: The RAM disk ID.
        sriovNetSupport:
          allOf:
            - $ref: '#/components/schemas/AttributeValue'
            - description: Indicates whether enhanced networking with the Intel 82599 Virtual Function interface is enabled.
        bootMode:
          allOf:
            - $ref: '#/components/schemas/AttributeValue'
            - description: The boot mode.
        tpmSupport:
          allOf:
            - $ref: '#/components/schemas/AttributeValue'
            - description: 'If the image is configured for NitroTPM support, the value is <code>v2.0</code>.'
        uefiData:
          allOf:
            - $ref: '#/components/schemas/AttributeValue'
            - description: 'Base64 representation of the non-volatile UEFI variable store. To retrieve the UEFI data, use the <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetInstanceUefiData">GetInstanceUefiData</a> command. You can inspect and modify the UEFI data by using the <a href="https://github.com/awslabs/python-uefivars">python-uefivars tool</a> on GitHub. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/uefi-secure-boot.html">UEFI Secure Boot</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.'
        lastLaunchedTime:
          allOf:
            - $ref: '#/components/schemas/AttributeValue'
            - description: '<p>The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when the AMI was last used to launch an EC2 instance. When the AMI is used, there is a 24-hour delay before that usage is reported.</p> <note> <p> <code>lastLaunchedTime</code> data is available starting April 2017.</p> </note>'
      description: Describes an image attribute.
    DescribeImagesResult:
      type: object
      example:
        Images:
          - Architecture: x86_64
            BlockDeviceMappings:
              - DeviceName: /dev/sda1
                Ebs:
                  DeleteOnTermination: true
                  SnapshotId: snap-1234567890abcdef0
                  VolumeSize: 8
                  VolumeType: standard
            Description: An AMI for my server
            Hypervisor: xen
            ImageId: ami-5731123e
            ImageLocation: 123456789012/My server
            ImageType: machine
            KernelId: aki-88aa75e1
            Name: My server
            OwnerId: '123456789012'
            Public: false
            RootDeviceName: /dev/sda1
            RootDeviceType: ebs
            State: available
            VirtualizationType: paravirtual
      properties:
        imagesSet:
          allOf:
            - $ref: '#/components/schemas/ImageList'
            - description: Information about the images.
    DescribeImportImageTasksResult:
      type: object
      properties:
        importImageTaskSet:
          allOf:
            - $ref: '#/components/schemas/ImportImageTaskList'
            - description: A list of zero or more import image tasks that are currently active or were completed or canceled in the previous 7 days.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to get the next page of results. This value is <code>null</code> when there are no more results to return.
    ImportImageTaskId:
      type: string
    DescribeImportSnapshotTasksResult:
      type: object
      properties:
        importSnapshotTaskSet:
          allOf:
            - $ref: '#/components/schemas/ImportSnapshotTaskList'
            - description: A list of zero or more import snapshot tasks that are currently active or were completed or canceled in the previous 7 days.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to get the next page of results. This value is <code>null</code> when there are no more results to return.
    ImportSnapshotTaskId:
      type: string
    InstanceAttribute:
      type: object
      example:
        BlockDeviceMappings:
          - DeviceName: /dev/sda1
            Ebs:
              AttachTime: '2013-05-17T22:42:34.000Z'
              DeleteOnTermination: true
              Status: attached
              VolumeId: vol-049df61146c4d7901
          - DeviceName: /dev/sdf
            Ebs:
              AttachTime: '2013-09-10T23:07:00.000Z'
              DeleteOnTermination: false
              Status: attached
              VolumeId: vol-049df61146c4d7901
        InstanceId: i-1234567890abcdef0
      properties:
        groupSet:
          allOf:
            - $ref: '#/components/schemas/GroupIdentifierList'
            - description: The security groups associated with the instance.
        blockDeviceMapping:
          allOf:
            - $ref: '#/components/schemas/InstanceBlockDeviceMappingList'
            - description: The block device mapping of the instance.
        disableApiTermination:
          allOf:
            - $ref: '#/components/schemas/AttributeBooleanValue'
            - description: 'If the value is <code>true</code>, you can''t terminate the instance through the Amazon EC2 console, CLI, or API; otherwise, you can.'
        enaSupport:
          allOf:
            - $ref: '#/components/schemas/AttributeBooleanValue'
            - description: Indicates whether enhanced networking with ENA is enabled.
        enclaveOptions:
          allOf:
            - $ref: '#/components/schemas/EnclaveOptions'
            - description: 'To enable the instance for Amazon Web Services Nitro Enclaves, set this parameter to <code>true</code>; otherwise, set it to <code>false</code>.'
        ebsOptimized:
          allOf:
            - $ref: '#/components/schemas/AttributeBooleanValue'
            - description: Indicates whether the instance is optimized for Amazon EBS I/O.
        instanceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the instance.
        instanceInitiatedShutdownBehavior:
          allOf:
            - $ref: '#/components/schemas/AttributeValue'
            - description: Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).
        instanceType:
          allOf:
            - $ref: '#/components/schemas/AttributeValue'
            - description: The instance type.
        kernel:
          allOf:
            - $ref: '#/components/schemas/AttributeValue'
            - description: The kernel ID.
        productCodes:
          allOf:
            - $ref: '#/components/schemas/ProductCodeList'
            - description: A list of product codes.
        ramdisk:
          allOf:
            - $ref: '#/components/schemas/AttributeValue'
            - description: The RAM disk ID.
        rootDeviceName:
          allOf:
            - $ref: '#/components/schemas/AttributeValue'
            - description: 'The device name of the root device volume (for example, <code>/dev/sda1</code>).'
        sourceDestCheck:
          allOf:
            - $ref: '#/components/schemas/AttributeBooleanValue'
            - description: 'Enable or disable source/destination checks, which ensure that the instance is either the source or the destination of any traffic that it receives. If the value is <code>true</code>, source/destination checks are enabled; otherwise, they are disabled. The default value is <code>true</code>. You must disable source/destination checks if the instance runs services such as network address translation, routing, or firewalls.'
        sriovNetSupport:
          allOf:
            - $ref: '#/components/schemas/AttributeValue'
            - description: Indicates whether enhanced networking with the Intel 82599 Virtual Function interface is enabled.
        userData:
          allOf:
            - $ref: '#/components/schemas/AttributeValue'
            - description: The user data.
      description: Describes an instance attribute.
    DescribeInstanceCreditSpecificationsResult:
      type: object
      properties:
        instanceCreditSpecificationSet:
          allOf:
            - $ref: '#/components/schemas/InstanceCreditSpecificationList'
            - description: Information about the credit option for CPU usage of an instance.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeInstanceEventNotificationAttributesResult:
      type: object
      properties:
        instanceTagAttribute:
          allOf:
            - $ref: '#/components/schemas/InstanceTagNotificationAttribute'
            - description: Information about the registered tag keys.
    DescribeInstanceEventWindowsResult:
      type: object
      properties:
        instanceEventWindowSet:
          allOf:
            - $ref: '#/components/schemas/InstanceEventWindowSet'
            - description: Information about the event windows.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return. '
    InstanceEventWindowId:
      type: string
    DescribeInstanceStatusResult:
      type: object
      example:
        InstanceStatuses:
          - AvailabilityZone: us-east-1d
            InstanceId: i-1234567890abcdef0
            InstanceState:
              Code: 16
              Name: running
            InstanceStatus:
              Details:
                - Name: reachability
                  Status: passed
              Status: ok
            SystemStatus:
              Details:
                - Name: reachability
                  Status: passed
              Status: ok
      properties:
        instanceStatusSet:
          allOf:
            - $ref: '#/components/schemas/InstanceStatusList'
            - description: Information about the status of the instances.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeInstanceTypeOfferingsResult:
      type: object
      properties:
        instanceTypeOfferingSet:
          allOf:
            - $ref: '#/components/schemas/InstanceTypeOfferingsList'
            - description: The instance types offered.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeInstanceTypesResult:
      type: object
      properties:
        instanceTypeSet:
          allOf:
            - $ref: '#/components/schemas/InstanceTypeInfoList'
            - description: 'The instance type. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance types</a> in the <i>Amazon EC2 User Guide</i>.'
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    InstanceType:
      type: string
      enum:
        - a1.medium
        - a1.large
        - a1.xlarge
        - a1.2xlarge
        - a1.4xlarge
        - a1.metal
        - c1.medium
        - c1.xlarge
        - c3.large
        - c3.xlarge
        - c3.2xlarge
        - c3.4xlarge
        - c3.8xlarge
        - c4.large
        - c4.xlarge
        - c4.2xlarge
        - c4.4xlarge
        - c4.8xlarge
        - c5.large
        - c5.xlarge
        - c5.2xlarge
        - c5.4xlarge
        - c5.9xlarge
        - c5.12xlarge
        - c5.18xlarge
        - c5.24xlarge
        - c5.metal
        - c5a.large
        - c5a.xlarge
        - c5a.2xlarge
        - c5a.4xlarge
        - c5a.8xlarge
        - c5a.12xlarge
        - c5a.16xlarge
        - c5a.24xlarge
        - c5ad.large
        - c5ad.xlarge
        - c5ad.2xlarge
        - c5ad.4xlarge
        - c5ad.8xlarge
        - c5ad.12xlarge
        - c5ad.16xlarge
        - c5ad.24xlarge
        - c5d.large
        - c5d.xlarge
        - c5d.2xlarge
        - c5d.4xlarge
        - c5d.9xlarge
        - c5d.12xlarge
        - c5d.18xlarge
        - c5d.24xlarge
        - c5d.metal
        - c5n.large
        - c5n.xlarge
        - c5n.2xlarge
        - c5n.4xlarge
        - c5n.9xlarge
        - c5n.18xlarge
        - c5n.metal
        - c6g.medium
        - c6g.large
        - c6g.xlarge
        - c6g.2xlarge
        - c6g.4xlarge
        - c6g.8xlarge
        - c6g.12xlarge
        - c6g.16xlarge
        - c6g.metal
        - c6gd.medium
        - c6gd.large
        - c6gd.xlarge
        - c6gd.2xlarge
        - c6gd.4xlarge
        - c6gd.8xlarge
        - c6gd.12xlarge
        - c6gd.16xlarge
        - c6gd.metal
        - c6gn.medium
        - c6gn.large
        - c6gn.xlarge
        - c6gn.2xlarge
        - c6gn.4xlarge
        - c6gn.8xlarge
        - c6gn.12xlarge
        - c6gn.16xlarge
        - c6i.large
        - c6i.xlarge
        - c6i.2xlarge
        - c6i.4xlarge
        - c6i.8xlarge
        - c6i.12xlarge
        - c6i.16xlarge
        - c6i.24xlarge
        - c6i.32xlarge
        - c6i.metal
        - cc1.4xlarge
        - cc2.8xlarge
        - cg1.4xlarge
        - cr1.8xlarge
        - d2.xlarge
        - d2.2xlarge
        - d2.4xlarge
        - d2.8xlarge
        - d3.xlarge
        - d3.2xlarge
        - d3.4xlarge
        - d3.8xlarge
        - d3en.xlarge
        - d3en.2xlarge
        - d3en.4xlarge
        - d3en.6xlarge
        - d3en.8xlarge
        - d3en.12xlarge
        - dl1.24xlarge
        - f1.2xlarge
        - f1.4xlarge
        - f1.16xlarge
        - g2.2xlarge
        - g2.8xlarge
        - g3.4xlarge
        - g3.8xlarge
        - g3.16xlarge
        - g3s.xlarge
        - g4ad.xlarge
        - g4ad.2xlarge
        - g4ad.4xlarge
        - g4ad.8xlarge
        - g4ad.16xlarge
        - g4dn.xlarge
        - g4dn.2xlarge
        - g4dn.4xlarge
        - g4dn.8xlarge
        - g4dn.12xlarge
        - g4dn.16xlarge
        - g4dn.metal
        - g5.xlarge
        - g5.2xlarge
        - g5.4xlarge
        - g5.8xlarge
        - g5.12xlarge
        - g5.16xlarge
        - g5.24xlarge
        - g5.48xlarge
        - g5g.xlarge
        - g5g.2xlarge
        - g5g.4xlarge
        - g5g.8xlarge
        - g5g.16xlarge
        - g5g.metal
        - hi1.4xlarge
        - hpc6a.48xlarge
        - hs1.8xlarge
        - h1.2xlarge
        - h1.4xlarge
        - h1.8xlarge
        - h1.16xlarge
        - i2.xlarge
        - i2.2xlarge
        - i2.4xlarge
        - i2.8xlarge
        - i3.large
        - i3.xlarge
        - i3.2xlarge
        - i3.4xlarge
        - i3.8xlarge
        - i3.16xlarge
        - i3.metal
        - i3en.large
        - i3en.xlarge
        - i3en.2xlarge
        - i3en.3xlarge
        - i3en.6xlarge
        - i3en.12xlarge
        - i3en.24xlarge
        - i3en.metal
        - im4gn.large
        - im4gn.xlarge
        - im4gn.2xlarge
        - im4gn.4xlarge
        - im4gn.8xlarge
        - im4gn.16xlarge
        - inf1.xlarge
        - inf1.2xlarge
        - inf1.6xlarge
        - inf1.24xlarge
        - is4gen.medium
        - is4gen.large
        - is4gen.xlarge
        - is4gen.2xlarge
        - is4gen.4xlarge
        - is4gen.8xlarge
        - m1.small
        - m1.medium
        - m1.large
        - m1.xlarge
        - m2.xlarge
        - m2.2xlarge
        - m2.4xlarge
        - m3.medium
        - m3.large
        - m3.xlarge
        - m3.2xlarge
        - m4.large
        - m4.xlarge
        - m4.2xlarge
        - m4.4xlarge
        - m4.10xlarge
        - m4.16xlarge
        - m5.large
        - m5.xlarge
        - m5.2xlarge
        - m5.4xlarge
        - m5.8xlarge
        - m5.12xlarge
        - m5.16xlarge
        - m5.24xlarge
        - m5.metal
        - m5a.large
        - m5a.xlarge
        - m5a.2xlarge
        - m5a.4xlarge
        - m5a.8xlarge
        - m5a.12xlarge
        - m5a.16xlarge
        - m5a.24xlarge
        - m5ad.large
        - m5ad.xlarge
        - m5ad.2xlarge
        - m5ad.4xlarge
        - m5ad.8xlarge
        - m5ad.12xlarge
        - m5ad.16xlarge
        - m5ad.24xlarge
        - m5d.large
        - m5d.xlarge
        - m5d.2xlarge
        - m5d.4xlarge
        - m5d.8xlarge
        - m5d.12xlarge
        - m5d.16xlarge
        - m5d.24xlarge
        - m5d.metal
        - m5dn.large
        - m5dn.xlarge
        - m5dn.2xlarge
        - m5dn.4xlarge
        - m5dn.8xlarge
        - m5dn.12xlarge
        - m5dn.16xlarge
        - m5dn.24xlarge
        - m5dn.metal
        - m5n.large
        - m5n.xlarge
        - m5n.2xlarge
        - m5n.4xlarge
        - m5n.8xlarge
        - m5n.12xlarge
        - m5n.16xlarge
        - m5n.24xlarge
        - m5n.metal
        - m5zn.large
        - m5zn.xlarge
        - m5zn.2xlarge
        - m5zn.3xlarge
        - m5zn.6xlarge
        - m5zn.12xlarge
        - m5zn.metal
        - m6a.large
        - m6a.xlarge
        - m6a.2xlarge
        - m6a.4xlarge
        - m6a.8xlarge
        - m6a.12xlarge
        - m6a.16xlarge
        - m6a.24xlarge
        - m6a.32xlarge
        - m6a.48xlarge
        - m6g.metal
        - m6g.medium
        - m6g.large
        - m6g.xlarge
        - m6g.2xlarge
        - m6g.4xlarge
        - m6g.8xlarge
        - m6g.12xlarge
        - m6g.16xlarge
        - m6gd.metal
        - m6gd.medium
        - m6gd.large
        - m6gd.xlarge
        - m6gd.2xlarge
        - m6gd.4xlarge
        - m6gd.8xlarge
        - m6gd.12xlarge
        - m6gd.16xlarge
        - m6i.large
        - m6i.xlarge
        - m6i.2xlarge
        - m6i.4xlarge
        - m6i.8xlarge
        - m6i.12xlarge
        - m6i.16xlarge
        - m6i.24xlarge
        - m6i.32xlarge
        - m6i.metal
        - mac1.metal
        - p2.xlarge
        - p2.8xlarge
        - p2.16xlarge
        - p3.2xlarge
        - p3.8xlarge
        - p3.16xlarge
        - p3dn.24xlarge
        - p4d.24xlarge
        - r3.large
        - r3.xlarge
        - r3.2xlarge
        - r3.4xlarge
        - r3.8xlarge
        - r4.large
        - r4.xlarge
        - r4.2xlarge
        - r4.4xlarge
        - r4.8xlarge
        - r4.16xlarge
        - r5.large
        - r5.xlarge
        - r5.2xlarge
        - r5.4xlarge
        - r5.8xlarge
        - r5.12xlarge
        - r5.16xlarge
        - r5.24xlarge
        - r5.metal
        - r5a.large
        - r5a.xlarge
        - r5a.2xlarge
        - r5a.4xlarge
        - r5a.8xlarge
        - r5a.12xlarge
        - r5a.16xlarge
        - r5a.24xlarge
        - r5ad.large
        - r5ad.xlarge
        - r5ad.2xlarge
        - r5ad.4xlarge
        - r5ad.8xlarge
        - r5ad.12xlarge
        - r5ad.16xlarge
        - r5ad.24xlarge
        - r5b.large
        - r5b.xlarge
        - r5b.2xlarge
        - r5b.4xlarge
        - r5b.8xlarge
        - r5b.12xlarge
        - r5b.16xlarge
        - r5b.24xlarge
        - r5b.metal
        - r5d.large
        - r5d.xlarge
        - r5d.2xlarge
        - r5d.4xlarge
        - r5d.8xlarge
        - r5d.12xlarge
        - r5d.16xlarge
        - r5d.24xlarge
        - r5d.metal
        - r5dn.large
        - r5dn.xlarge
        - r5dn.2xlarge
        - r5dn.4xlarge
        - r5dn.8xlarge
        - r5dn.12xlarge
        - r5dn.16xlarge
        - r5dn.24xlarge
        - r5dn.metal
        - r5n.large
        - r5n.xlarge
        - r5n.2xlarge
        - r5n.4xlarge
        - r5n.8xlarge
        - r5n.12xlarge
        - r5n.16xlarge
        - r5n.24xlarge
        - r5n.metal
        - r6g.medium
        - r6g.large
        - r6g.xlarge
        - r6g.2xlarge
        - r6g.4xlarge
        - r6g.8xlarge
        - r6g.12xlarge
        - r6g.16xlarge
        - r6g.metal
        - r6gd.medium
        - r6gd.large
        - r6gd.xlarge
        - r6gd.2xlarge
        - r6gd.4xlarge
        - r6gd.8xlarge
        - r6gd.12xlarge
        - r6gd.16xlarge
        - r6gd.metal
        - r6i.large
        - r6i.xlarge
        - r6i.2xlarge
        - r6i.4xlarge
        - r6i.8xlarge
        - r6i.12xlarge
        - r6i.16xlarge
        - r6i.24xlarge
        - r6i.32xlarge
        - r6i.metal
        - t1.micro
        - t2.nano
        - t2.micro
        - t2.small
        - t2.medium
        - t2.large
        - t2.xlarge
        - t2.2xlarge
        - t3.nano
        - t3.micro
        - t3.small
        - t3.medium
        - t3.large
        - t3.xlarge
        - t3.2xlarge
        - t3a.nano
        - t3a.micro
        - t3a.small
        - t3a.medium
        - t3a.large
        - t3a.xlarge
        - t3a.2xlarge
        - t4g.nano
        - t4g.micro
        - t4g.small
        - t4g.medium
        - t4g.large
        - t4g.xlarge
        - t4g.2xlarge
        - u-6tb1.56xlarge
        - u-6tb1.112xlarge
        - u-9tb1.112xlarge
        - u-12tb1.112xlarge
        - u-6tb1.metal
        - u-9tb1.metal
        - u-12tb1.metal
        - u-18tb1.metal
        - u-24tb1.metal
        - vt1.3xlarge
        - vt1.6xlarge
        - vt1.24xlarge
        - x1.16xlarge
        - x1.32xlarge
        - x1e.xlarge
        - x1e.2xlarge
        - x1e.4xlarge
        - x1e.8xlarge
        - x1e.16xlarge
        - x1e.32xlarge
        - x2iezn.2xlarge
        - x2iezn.4xlarge
        - x2iezn.6xlarge
        - x2iezn.8xlarge
        - x2iezn.12xlarge
        - x2iezn.metal
        - x2gd.medium
        - x2gd.large
        - x2gd.xlarge
        - x2gd.2xlarge
        - x2gd.4xlarge
        - x2gd.8xlarge
        - x2gd.12xlarge
        - x2gd.16xlarge
        - x2gd.metal
        - z1d.large
        - z1d.xlarge
        - z1d.2xlarge
        - z1d.3xlarge
        - z1d.6xlarge
        - z1d.12xlarge
        - z1d.metal
        - x2idn.16xlarge
        - x2idn.24xlarge
        - x2idn.32xlarge
        - x2iedn.xlarge
        - x2iedn.2xlarge
        - x2iedn.4xlarge
        - x2iedn.8xlarge
        - x2iedn.16xlarge
        - x2iedn.24xlarge
        - x2iedn.32xlarge
        - c6a.large
        - c6a.xlarge
        - c6a.2xlarge
        - c6a.4xlarge
        - c6a.8xlarge
        - c6a.12xlarge
        - c6a.16xlarge
        - c6a.24xlarge
        - c6a.32xlarge
        - c6a.48xlarge
        - c6a.metal
        - m6a.metal
        - i4i.large
        - i4i.xlarge
        - i4i.2xlarge
        - i4i.4xlarge
        - i4i.8xlarge
        - i4i.16xlarge
        - i4i.32xlarge
    DescribeInstancesResult:
      type: object
      example: {}
      properties:
        reservationSet:
          allOf:
            - $ref: '#/components/schemas/ReservationList'
            - description: Information about the reservations.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeInternetGatewaysResult:
      type: object
      example:
        InternetGateways:
          - Attachments:
              - State: available
                VpcId: vpc-a01106c2
            InternetGatewayId: igw-c0a643a9
            Tags: []
      properties:
        internetGatewaySet:
          allOf:
            - $ref: '#/components/schemas/InternetGatewayList'
            - description: Information about one or more internet gateways.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    InternetGatewayId:
      type: string
    DescribeIpamPoolsResult:
      type: object
      properties:
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
        ipamPoolSet:
          allOf:
            - $ref: '#/components/schemas/IpamPoolSet'
            - description: Information about the IPAM pools.
    DescribeIpamScopesResult:
      type: object
      properties:
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
        ipamScopeSet:
          allOf:
            - $ref: '#/components/schemas/IpamScopeSet'
            - description: The scopes you want information on.
    DescribeIpamsResult:
      type: object
      properties:
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
        ipamSet:
          allOf:
            - $ref: '#/components/schemas/IpamSet'
            - description: Information about the IPAMs.
    DescribeIpv6PoolsResult:
      type: object
      properties:
        ipv6PoolSet:
          allOf:
            - $ref: '#/components/schemas/Ipv6PoolSet'
            - description: Information about the IPv6 address pools.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    Ipv6PoolEc2Id:
      type: string
    DescribeKeyPairsResult:
      type: object
      example:
        KeyPairs:
          - KeyFingerprint: '1f:51:ae:28:bf:89:e9:d8:1f:25:5d:37:2d:7d:b8:ca:9f:f5:f1:6f'
            KeyName: my-key-pair
      properties:
        keySet:
          allOf:
            - $ref: '#/components/schemas/KeyPairList'
            - description: Information about the key pairs.
    KeyPairName:
      type: string
    KeyPairId:
      type: string
    DescribeLaunchTemplateVersionsResult:
      type: object
      example:
        LaunchTemplateVersions:
          - CreateTime: '2017-11-20T13:12:32.000Z'
            CreatedBy: 'arn:aws:iam::123456789102:root'
            DefaultVersion: false
            LaunchTemplateData:
              ImageId: ami-6057e21a
              InstanceType: t2.medium
              KeyName: kp-us-east
              NetworkInterfaces:
                - DeviceIndex: 0
                  Groups:
                    - sg-7c227019
                  SubnetId: subnet-1a2b3c4d
            LaunchTemplateId: lt-068f72b72934aff71
            LaunchTemplateName: Webservers
            VersionNumber: 2
          - CreateTime: '2017-11-20T12:52:33.000Z'
            CreatedBy: 'arn:aws:iam::123456789102:root'
            DefaultVersion: true
            LaunchTemplateData:
              ImageId: ami-aabbcc11
              InstanceType: t2.medium
              KeyName: kp-us-east
              NetworkInterfaces:
                - AssociatePublicIpAddress: true
                  DeleteOnTermination: false
                  DeviceIndex: 0
                  Groups:
                    - sg-7c227019
                  SubnetId: subnet-7b16de0c
              UserData: ''
            LaunchTemplateId: lt-068f72b72934aff71
            LaunchTemplateName: Webservers
            VersionNumber: 1
      properties:
        launchTemplateVersionSet:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateVersionSet'
            - description: Information about the launch template versions.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeLaunchTemplatesResult:
      type: object
      example:
        LaunchTemplates:
          - CreateTime: '2018-01-16T04:32:57.000Z'
            CreatedBy: 'arn:aws:iam::123456789012:root'
            DefaultVersionNumber: 1
            LatestVersionNumber: 1
            LaunchTemplateId: lt-01238c059e3466abc
            LaunchTemplateName: my-template
      properties:
        launchTemplates:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateSet'
            - description: Information about the launch templates.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    LaunchTemplateId:
      type: string
    LaunchTemplateName:
      type: string
      pattern: '[a-zA-Z0-9\(\)\.\-/_]+'
      minLength: 3
      maxLength: 128
    DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsResult:
      type: object
      properties:
        localGatewayRouteTableVirtualInterfaceGroupAssociationSet:
          allOf:
            - $ref: '#/components/schemas/LocalGatewayRouteTableVirtualInterfaceGroupAssociationSet'
            - description: Information about the associations.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    LocalGatewayRouteTableVirtualInterfaceGroupAssociationId:
      type: string
    DescribeLocalGatewayRouteTableVpcAssociationsResult:
      type: object
      properties:
        localGatewayRouteTableVpcAssociationSet:
          allOf:
            - $ref: '#/components/schemas/LocalGatewayRouteTableVpcAssociationSet'
            - description: Information about the associations.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    LocalGatewayRouteTableVpcAssociationId:
      type: string
    DescribeLocalGatewayRouteTablesResult:
      type: object
      properties:
        localGatewayRouteTableSet:
          allOf:
            - $ref: '#/components/schemas/LocalGatewayRouteTableSet'
            - description: Information about the local gateway route tables.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    LocalGatewayRoutetableId:
      type: string
    DescribeLocalGatewayVirtualInterfaceGroupsResult:
      type: object
      properties:
        localGatewayVirtualInterfaceGroupSet:
          allOf:
            - $ref: '#/components/schemas/LocalGatewayVirtualInterfaceGroupSet'
            - description: The virtual interface groups.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    LocalGatewayVirtualInterfaceGroupId:
      type: string
    DescribeLocalGatewayVirtualInterfacesResult:
      type: object
      properties:
        localGatewayVirtualInterfaceSet:
          allOf:
            - $ref: '#/components/schemas/LocalGatewayVirtualInterfaceSet'
            - description: Information about the virtual interfaces.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    LocalGatewayVirtualInterfaceId:
      type: string
    DescribeLocalGatewaysResult:
      type: object
      properties:
        localGatewaySet:
          allOf:
            - $ref: '#/components/schemas/LocalGatewaySet'
            - description: Information about the local gateways.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    LocalGatewayId:
      type: string
    DescribeManagedPrefixListsResult:
      type: object
      properties:
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
        prefixListSet:
          allOf:
            - $ref: '#/components/schemas/ManagedPrefixListSet'
            - description: Information about the prefix lists.
    DescribeMovingAddressesResult:
      type: object
      example:
        MovingAddressStatuses:
          - MoveStatus: MovingToVpc
            PublicIp: 198.51.100.0
      properties:
        movingAddressStatusSet:
          allOf:
            - $ref: '#/components/schemas/MovingAddressStatusSet'
            - description: The status for each Elastic IP address.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeNatGatewaysResult:
      type: object
      example:
        NatGateways:
          - CreateTime: '2015-12-01T12:26:55.983Z'
            NatGatewayAddresses:
              - AllocationId: eipalloc-89c620ec
                NetworkInterfaceId: eni-9dec76cd
                PrivateIp: 10.0.0.149
                PublicIp: 198.11.222.333
            NatGatewayId: nat-05dba92075d71c408
            State: available
            SubnetId: subnet-847e4dc2
            VpcId: vpc-1a2b3c4d
      properties:
        natGatewaySet:
          allOf:
            - $ref: '#/components/schemas/NatGatewayList'
            - description: Information about the NAT gateways.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    NatGatewayId:
      type: string
    DescribeNetworkAclsResult:
      type: object
      example:
        NetworkAcls:
          - Associations:
              - NetworkAclAssociationId: aclassoc-66ea5f0b
                NetworkAclId: acl-9aeb5ef7
                SubnetId: subnet-65ea5f08
            Entries:
              - CidrBlock: 0.0.0.0/0
                Egress: true
                Protocol: '-1'
                RuleAction: deny
                RuleNumber: 32767
              - CidrBlock: 0.0.0.0/0
                Egress: false
                Protocol: '-1'
                RuleAction: deny
                RuleNumber: 32767
            IsDefault: false
            NetworkAclId: acl-5fb85d36
            Tags: []
            VpcId: vpc-a01106c2
      properties:
        networkAclSet:
          allOf:
            - $ref: '#/components/schemas/NetworkAclList'
            - description: Information about one or more network ACLs.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    NetworkAclId:
      type: string
    DescribeNetworkInsightsAccessScopeAnalysesResult:
      type: object
      properties:
        networkInsightsAccessScopeAnalysisSet:
          allOf:
            - $ref: '#/components/schemas/NetworkInsightsAccessScopeAnalysisList'
            - description: The Network Access Scope analyses.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    NetworkInsightsAccessScopeAnalysisId:
      type: string
    DescribeNetworkInsightsAccessScopesResult:
      type: object
      properties:
        networkInsightsAccessScopeSet:
          allOf:
            - $ref: '#/components/schemas/NetworkInsightsAccessScopeList'
            - description: The Network Access Scopes.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    NetworkInsightsAccessScopeId:
      type: string
    DescribeNetworkInsightsAnalysesResult:
      type: object
      properties:
        networkInsightsAnalysisSet:
          allOf:
            - $ref: '#/components/schemas/NetworkInsightsAnalysisList'
            - description: Information about the network insights analyses.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    NetworkInsightsAnalysisId:
      type: string
    DescribeNetworkInsightsPathsResult:
      type: object
      properties:
        networkInsightsPathSet:
          allOf:
            - $ref: '#/components/schemas/NetworkInsightsPathList'
            - description: Information about the paths.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    NetworkInsightsPathId:
      type: string
    DescribeNetworkInterfaceAttributeResult:
      type: object
      example:
        NetworkInterfaceId: eni-686ea200
        SourceDestCheck:
          Value: true
      properties:
        attachment:
          allOf:
            - $ref: '#/components/schemas/NetworkInterfaceAttachment'
            - description: The attachment (if any) of the network interface.
        description:
          allOf:
            - $ref: '#/components/schemas/AttributeValue'
            - description: The description of the network interface.
        groupSet:
          allOf:
            - $ref: '#/components/schemas/GroupIdentifierList'
            - description: The security groups associated with the network interface.
        networkInterfaceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the network interface.
        sourceDestCheck:
          allOf:
            - $ref: '#/components/schemas/AttributeBooleanValue'
            - description: Indicates whether source/destination checking is enabled.
      description: Contains the output of DescribeNetworkInterfaceAttribute.
    DescribeNetworkInterfacePermissionsResult:
      type: object
      properties:
        networkInterfacePermissions:
          allOf:
            - $ref: '#/components/schemas/NetworkInterfacePermissionList'
            - description: The network interface permissions.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results.
      description: Contains the output for DescribeNetworkInterfacePermissions.
    NetworkInterfacePermissionId:
      type: string
    DescribeNetworkInterfacesResult:
      type: object
      example:
        NetworkInterfaces:
          - Association:
              AssociationId: eipassoc-0fbb766a
              IpOwnerId: '123456789012'
              PublicDnsName: ec2-203-0-113-12.compute-1.amazonaws.com
              PublicIp: 203.0.113.12
            Attachment:
              AttachTime: '2013-11-30T23:36:42.000Z'
              AttachmentId: eni-attach-66c4350a
              DeleteOnTermination: false
              DeviceIndex: 1
              InstanceId: i-1234567890abcdef0
              InstanceOwnerId: '123456789012'
              Status: attached
            AvailabilityZone: us-east-1d
            Description: my network interface
            Groups:
              - GroupId: sg-8637d3e3
                GroupName: default
            MacAddress: '02:2f:8f:b0:cf:75'
            NetworkInterfaceId: eni-e5aa89a3
            OwnerId: '123456789012'
            PrivateDnsName: ip-10-0-1-17.ec2.internal
            PrivateIpAddress: 10.0.1.17
            PrivateIpAddresses:
              - Association:
                  AssociationId: eipassoc-0fbb766a
                  IpOwnerId: '123456789012'
                  PublicDnsName: ec2-203-0-113-12.compute-1.amazonaws.com
                  PublicIp: 203.0.113.12
                Primary: true
                PrivateDnsName: ip-10-0-1-17.ec2.internal
                PrivateIpAddress: 10.0.1.17
            RequesterManaged: false
            SourceDestCheck: true
            Status: in-use
            SubnetId: subnet-b61f49f0
            TagSet: []
            VpcId: vpc-a01106c2
      properties:
        networkInterfaceSet:
          allOf:
            - $ref: '#/components/schemas/NetworkInterfaceList'
            - description: Information about one or more network interfaces.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
      description: Contains the output of DescribeNetworkInterfaces.
    DescribePlacementGroupsResult:
      type: object
      properties:
        placementGroupSet:
          allOf:
            - $ref: '#/components/schemas/PlacementGroupList'
            - description: Information about the placement groups.
    PlacementGroupName:
      type: string
    PlacementGroupId:
      type: string
    DescribePrefixListsResult:
      type: object
      properties:
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
        prefixListSet:
          allOf:
            - $ref: '#/components/schemas/PrefixListSet'
            - description: All available prefix lists.
    PrefixListResourceId:
      type: string
    DescribePrincipalIdFormatResult:
      type: object
      properties:
        principalSet:
          allOf:
            - $ref: '#/components/schemas/PrincipalIdFormatList'
            - description: Information about the ID format settings for the ARN.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is null when there are no more results to return.
    DescribePublicIpv4PoolsResult:
      type: object
      properties:
        publicIpv4PoolSet:
          allOf:
            - $ref: '#/components/schemas/PublicIpv4PoolSet'
            - description: Information about the address pools.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    Ipv4PoolEc2Id:
      type: string
    DescribeRegionsResult:
      type: object
      example:
        Regions:
          - Endpoint: ec2.ap-south-1.amazonaws.com
            RegionName: ap-south-1
          - Endpoint: ec2.eu-west-1.amazonaws.com
            RegionName: eu-west-1
          - Endpoint: ec2.ap-southeast-1.amazonaws.com
            RegionName: ap-southeast-1
          - Endpoint: ec2.ap-southeast-2.amazonaws.com
            RegionName: ap-southeast-2
          - Endpoint: ec2.eu-central-1.amazonaws.com
            RegionName: eu-central-1
          - Endpoint: ec2.ap-northeast-2.amazonaws.com
            RegionName: ap-northeast-2
          - Endpoint: ec2.ap-northeast-1.amazonaws.com
            RegionName: ap-northeast-1
          - Endpoint: ec2.us-east-1.amazonaws.com
            RegionName: us-east-1
          - Endpoint: ec2.sa-east-1.amazonaws.com
            RegionName: sa-east-1
          - Endpoint: ec2.us-west-1.amazonaws.com
            RegionName: us-west-1
          - Endpoint: ec2.us-west-2.amazonaws.com
            RegionName: us-west-2
      properties:
        regionInfo:
          allOf:
            - $ref: '#/components/schemas/RegionList'
            - description: Information about the Regions.
    DescribeReplaceRootVolumeTasksResult:
      type: object
      properties:
        replaceRootVolumeTaskSet:
          allOf:
            - $ref: '#/components/schemas/ReplaceRootVolumeTasks'
            - description: Information about the root volume replacement task.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    ReplaceRootVolumeTaskId:
      type: string
    DescribeReservedInstancesResult:
      type: object
      properties:
        reservedInstancesSet:
          allOf:
            - $ref: '#/components/schemas/ReservedInstancesList'
            - description: A list of Reserved Instances.
      description: Contains the output for DescribeReservedInstances.
    DescribeReservedInstancesListingsResult:
      type: object
      properties:
        reservedInstancesListingsSet:
          allOf:
            - $ref: '#/components/schemas/ReservedInstancesListingList'
            - description: Information about the Reserved Instance listing.
      description: Contains the output of DescribeReservedInstancesListings.
    DescribeReservedInstancesModificationsResult:
      type: object
      properties:
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
        reservedInstancesModificationsSet:
          allOf:
            - $ref: '#/components/schemas/ReservedInstancesModificationList'
            - description: The Reserved Instance modification information.
      description: Contains the output of DescribeReservedInstancesModifications.
    ReservedInstancesModificationId:
      type: string
    DescribeReservedInstancesOfferingsResult:
      type: object
      properties:
        reservedInstancesOfferingsSet:
          allOf:
            - $ref: '#/components/schemas/ReservedInstancesOfferingList'
            - description: A list of Reserved Instances offerings.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
      description: Contains the output of DescribeReservedInstancesOfferings.
    ReservedInstancesOfferingId:
      type: string
    DescribeRouteTablesResult:
      type: object
      example:
        RouteTables:
          - Associations:
              - Main: true
                RouteTableAssociationId: rtbassoc-d8ccddba
                RouteTableId: rtb-1f382e7d
            PropagatingVgws: []
            RouteTableId: rtb-1f382e7d
            Routes:
              - DestinationCidrBlock: 10.0.0.0/16
                GatewayId: local
                State: active
            Tags: []
            VpcId: vpc-a01106c2
      properties:
        routeTableSet:
          allOf:
            - $ref: '#/components/schemas/RouteTableList'
            - description: Information about one or more route tables.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
      description: Contains the output of DescribeRouteTables.
    DescribeScheduledInstanceAvailabilityResult:
      type: object
      example:
        ScheduledInstanceAvailabilitySet:
          - AvailabilityZone: us-west-2b
            AvailableInstanceCount: 20
            FirstSlotStartTime: '2016-01-31T00:00:00Z'
            HourlyPrice: '0.095'
            InstanceType: c4.large
            MaxTermDurationInDays: 366
            MinTermDurationInDays: 366
            NetworkPlatform: EC2-VPC
            Platform: Linux/UNIX
            PurchaseToken: eyJ2IjoiMSIsInMiOjEsImMiOi...
            Recurrence:
              Frequency: Weekly
              Interval: 1
              OccurrenceDaySet:
                - 1
              OccurrenceRelativeToEnd: false
            SlotDurationInHours: 23
            TotalScheduledInstanceHours: 1219
      properties:
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token required to retrieve the next set of results. This value is <code>null</code> when there are no more results to return.
        scheduledInstanceAvailabilitySet:
          allOf:
            - $ref: '#/components/schemas/ScheduledInstanceAvailabilitySet'
            - description: Information about the available Scheduled Instances.
      description: Contains the output of DescribeScheduledInstanceAvailability.
    DateTime:
      type: string
      format: date-time
    DescribeScheduledInstancesResult:
      type: object
      example:
        ScheduledInstanceSet:
          - AvailabilityZone: us-west-2b
            CreateDate: '2016-01-25T21:43:38.612Z'
            HourlyPrice: '0.095'
            InstanceCount: 1
            InstanceType: c4.large
            NetworkPlatform: EC2-VPC
            NextSlotStartTime: '2016-01-31T09:00:00Z'
            Platform: Linux/UNIX
            Recurrence:
              Frequency: Weekly
              Interval: 1
              OccurrenceDaySet:
                - 1
              OccurrenceRelativeToEnd: false
              OccurrenceUnit: ''
            ScheduledInstanceId: sci-1234-1234-1234-1234-123456789012
            SlotDurationInHours: 32
            TermEndDate: '2017-01-31T09:00:00Z'
            TermStartDate: '2016-01-31T09:00:00Z'
            TotalScheduledInstanceHours: 1696
      properties:
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token required to retrieve the next set of results. This value is <code>null</code> when there are no more results to return.
        scheduledInstanceSet:
          allOf:
            - $ref: '#/components/schemas/ScheduledInstanceSet'
            - description: Information about the Scheduled Instances.
      description: Contains the output of DescribeScheduledInstances.
    ScheduledInstanceId:
      type: string
    DescribeSecurityGroupReferencesResult:
      type: object
      example:
        SecurityGroupReferenceSet:
          - GroupId: sg-903004f8
            ReferencingVpcId: vpc-1a2b3c4d
            VpcPeeringConnectionId: pcx-b04deed9
      properties:
        securityGroupReferenceSet:
          allOf:
            - $ref: '#/components/schemas/SecurityGroupReferences'
            - description: Information about the VPCs with the referencing security groups.
    DescribeSecurityGroupRulesResult:
      type: object
      properties:
        securityGroupRuleSet:
          allOf:
            - $ref: '#/components/schemas/SecurityGroupRuleList'
            - description: Information about security group rules.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return. '
    DescribeSecurityGroupsResult:
      type: object
      example: {}
      properties:
        securityGroupInfo:
          allOf:
            - $ref: '#/components/schemas/SecurityGroupList'
            - description: Information about the security groups.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    SecurityGroupName:
      type: string
    DescribeSnapshotAttributeResult:
      type: object
      example:
        CreateVolumePermissions: []
        SnapshotId: snap-066877671789bd71b
      properties:
        createVolumePermission:
          allOf:
            - $ref: '#/components/schemas/CreateVolumePermissionList'
            - description: The users and groups that have the permissions for creating volumes from the snapshot.
        productCodes:
          allOf:
            - $ref: '#/components/schemas/ProductCodeList'
            - description: The product codes.
        snapshotId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the EBS snapshot.
    DescribeSnapshotTierStatusResult:
      type: object
      properties:
        snapshotTierStatusSet:
          allOf:
            - $ref: '#/components/schemas/snapshotTierStatusSet'
            - description: Information about the snapshot's storage tier.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeSnapshotsResult:
      type: object
      example:
        NextToken: ''
        Snapshots:
          - Description: This is my copied snapshot.
            OwnerId: 012345678910
            Progress: 87%
            SnapshotId: snap-066877671789bd71b
            StartTime: '2014-02-28T21:37:27.000Z'
            State: pending
            VolumeId: vol-1234567890abcdef0
            VolumeSize: 8
      properties:
        snapshotSet:
          allOf:
            - $ref: '#/components/schemas/SnapshotList'
            - description: Information about the snapshots.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The <code>NextToken</code> value to include in a future <code>DescribeSnapshots</code> request. When the results of a <code>DescribeSnapshots</code> request exceed <code>MaxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.'
    SnapshotId:
      type: string
    DescribeSpotDatafeedSubscriptionResult:
      type: object
      example:
        SpotDatafeedSubscription:
          Bucket: my-s3-bucket
          OwnerId: '123456789012'
          Prefix: spotdata
          State: Active
      properties:
        spotDatafeedSubscription:
          allOf:
            - $ref: '#/components/schemas/SpotDatafeedSubscription'
            - description: The Spot Instance data feed subscription.
      description: Contains the output of DescribeSpotDatafeedSubscription.
    DescribeSpotFleetInstancesResponse:
      type: object
      example:
        ActiveInstances:
          - InstanceId: i-1234567890abcdef0
            InstanceType: m3.medium
            SpotInstanceRequestId: sir-08b93456
        SpotFleetRequestId: sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE
      properties:
        activeInstanceSet:
          allOf:
            - $ref: '#/components/schemas/ActiveInstanceSet'
            - description: The running instances. This list is refreshed periodically and might be out of date.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token required to retrieve the next set of results. This value is <code>null</code> when there are no more results to return.
        spotFleetRequestId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Spot Fleet request.
      description: Contains the output of DescribeSpotFleetInstances.
    DescribeSpotFleetRequestHistoryResponse:
      type: object
      example:
        HistoryRecords:
          - EventInformation:
              EventSubType: submitted
            EventType: fleetRequestChange
            Timestamp: '2015-05-26T23:17:20.697Z'
          - EventInformation:
              EventSubType: active
            EventType: fleetRequestChange
            Timestamp: '2015-05-26T23:17:20.873Z'
          - EventInformation:
              EventSubType: launched
              InstanceId: i-1234567890abcdef0
            EventType: instanceChange
            Timestamp: '2015-05-26T23:21:21.712Z'
          - EventInformation:
              EventSubType: launched
              InstanceId: i-1234567890abcdef1
            EventType: instanceChange
            Timestamp: '2015-05-26T23:21:21.816Z'
        NextToken: CpHNsscimcV5oH7bSbub03CI2Qms5+ypNpNm+53MNlR0YcXAkp0xFlfKf91yVxSExmbtma3awYxMFzNA663ZskT0AHtJ6TCb2Z8bQC2EnZgyELbymtWPfpZ1ZbauVg+P+TfGlWxWWB/Vr5dk5d4LfdgA/DRAHUrYgxzrEXAMPLE=
        SpotFleetRequestId: sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE
        StartTime: '2015-05-26T00:00:00Z'
      properties:
        historyRecordSet:
          allOf:
            - $ref: '#/components/schemas/HistoryRecords'
            - description: Information about the events in the history of the Spot Fleet request.
        lastEvaluatedTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: '<p>The last date and time for the events, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). All records up to this time were retrieved.</p> <p>If <code>nextToken</code> indicates that there are more results, this value is not present.</p>'
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token required to retrieve the next set of results. This value is <code>null</code> when there are no more results to return.
        spotFleetRequestId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Spot Fleet request.
        startTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: 'The starting date and time for the events, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).'
      description: Contains the output of DescribeSpotFleetRequestHistory.
    DescribeSpotFleetRequestsResponse:
      type: object
      example:
        SpotFleetRequestConfigs:
          - SpotFleetRequestConfig:
              IamFleetRole: 'arn:aws:iam::123456789012:role/my-spot-fleet-role'
              LaunchSpecifications:
                - EbsOptimized: false
                  ImageId: ami-1a2b3c4d
                  InstanceType: cc2.8xlarge
                  NetworkInterfaces:
                    - AssociatePublicIpAddress: true
                      DeleteOnTermination: false
                      DeviceIndex: 0
                      SecondaryPrivateIpAddressCount: 0
                      SubnetId: subnet-a61dafcf
                - EbsOptimized: false
                  ImageId: ami-1a2b3c4d
                  InstanceType: r3.8xlarge
                  NetworkInterfaces:
                    - AssociatePublicIpAddress: true
                      DeleteOnTermination: false
                      DeviceIndex: 0
                      SecondaryPrivateIpAddressCount: 0
                      SubnetId: subnet-a61dafcf
              SpotPrice: '0.05'
              TargetCapacity: 20
            SpotFleetRequestId: sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE
            SpotFleetRequestState: active
      properties:
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token required to retrieve the next set of results. This value is <code>null</code> when there are no more results to return.
        spotFleetRequestConfigSet:
          allOf:
            - $ref: '#/components/schemas/SpotFleetRequestConfigSet'
            - description: Information about the configuration of your Spot Fleet.
      description: Contains the output of DescribeSpotFleetRequests.
    DescribeSpotInstanceRequestsResult:
      type: object
      example:
        SpotInstanceRequests:
          - CreateTime: '2014-04-30T18:14:55.000Z'
            InstanceId: i-1234567890abcdef0
            LaunchSpecification:
              BlockDeviceMappings:
                - DeviceName: /dev/sda1
                  Ebs:
                    DeleteOnTermination: true
                    VolumeSize: 8
                    VolumeType: standard
              EbsOptimized: false
              ImageId: ami-7aba833f
              InstanceType: m1.small
              KeyName: my-key-pair
              SecurityGroups:
                - GroupId: sg-e38f24a7
                  GroupName: my-security-group
            LaunchedAvailabilityZone: us-west-1b
            ProductDescription: Linux/UNIX
            SpotInstanceRequestId: sir-08b93456
            SpotPrice: '0.010000'
            State: active
            Status:
              Code: fulfilled
              Message: Your Spot request is fulfilled.
              UpdateTime: '2014-04-30T18:16:21.000Z'
            Type: one-time
      properties:
        spotInstanceRequestSet:
          allOf:
            - $ref: '#/components/schemas/SpotInstanceRequestList'
            - description: One or more Spot Instance requests.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next set of results. This value is <code>null</code> when there are no more results to return.
      description: Contains the output of DescribeSpotInstanceRequests.
    DescribeSpotPriceHistoryResult:
      type: object
      example:
        SpotPriceHistory:
          - AvailabilityZone: us-west-1a
            InstanceType: m1.xlarge
            ProductDescription: Linux/UNIX (Amazon VPC)
            SpotPrice: '0.080000'
            Timestamp: '2014-01-06T04:32:53.000Z'
          - AvailabilityZone: us-west-1c
            InstanceType: m1.xlarge
            ProductDescription: Linux/UNIX (Amazon VPC)
            SpotPrice: '0.080000'
            Timestamp: '2014-01-05T11:28:26.000Z'
      properties:
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token required to retrieve the next set of results. This value is null or an empty string when there are no more results to return.
        spotPriceHistorySet:
          allOf:
            - $ref: '#/components/schemas/SpotPriceHistoryList'
            - description: The historical Spot prices.
      description: Contains the output of DescribeSpotPriceHistory.
    DescribeStaleSecurityGroupsResult:
      type: object
      properties:
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
        staleSecurityGroupSet:
          allOf:
            - $ref: '#/components/schemas/StaleSecurityGroupSet'
            - description: Information about the stale security groups.
    DescribeStoreImageTasksResult:
      type: object
      properties:
        storeImageTaskResultSet:
          allOf:
            - $ref: '#/components/schemas/StoreImageTaskResultSet'
            - description: The information about the AMI store tasks.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeSubnetsResult:
      type: object
      example:
        Subnets:
          - AvailabilityZone: us-east-1c
            AvailableIpAddressCount: 251
            CidrBlock: 10.0.1.0/24
            DefaultForAz: false
            MapPublicIpOnLaunch: false
            State: available
            SubnetId: subnet-9d4a7b6c
            VpcId: vpc-a01106c2
      properties:
        subnetSet:
          allOf:
            - $ref: '#/components/schemas/SubnetList'
            - description: Information about one or more subnets.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeTagsResult:
      type: object
      example:
        Tags:
          - Key: Stack
            ResourceId: i-1234567890abcdef8
            ResourceType: instance
            Value: test
          - Key: Name
            ResourceId: i-1234567890abcdef8
            ResourceType: instance
            Value: Beta Server
      properties:
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagDescriptionList'
            - description: The tags.
    DescribeTrafficMirrorFiltersResult:
      type: object
      properties:
        trafficMirrorFilterSet:
          allOf:
            - $ref: '#/components/schemas/TrafficMirrorFilterSet'
            - description: Information about one or more Traffic Mirror filters.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. The value is <code>null</code> when there are no more results to return.
    TrafficMirrorFilterId:
      type: string
    DescribeTrafficMirrorSessionsResult:
      type: object
      properties:
        trafficMirrorSessionSet:
          allOf:
            - $ref: '#/components/schemas/TrafficMirrorSessionSet'
            - description: 'Describes one or more Traffic Mirror sessions. By default, all Traffic Mirror sessions are described. Alternatively, you can filter the results.'
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. The value is <code>null</code> when there are no more results to return.
    TrafficMirrorSessionId:
      type: string
    DescribeTrafficMirrorTargetsResult:
      type: object
      properties:
        trafficMirrorTargetSet:
          allOf:
            - $ref: '#/components/schemas/TrafficMirrorTargetSet'
            - description: Information about one or more Traffic Mirror targets.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. The value is <code>null</code> when there are no more results to return.
    TrafficMirrorTargetId:
      type: string
    DescribeTransitGatewayAttachmentsResult:
      type: object
      properties:
        transitGatewayAttachments:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayAttachmentList'
            - description: Information about the attachments.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    TransitGatewayAttachmentId:
      type: string
    DescribeTransitGatewayConnectPeersResult:
      type: object
      properties:
        transitGatewayConnectPeerSet:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayConnectPeerList'
            - description: Information about the Connect peers.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    TransitGatewayConnectPeerId:
      type: string
    DescribeTransitGatewayConnectsResult:
      type: object
      properties:
        transitGatewayConnectSet:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayConnectList'
            - description: Information about the Connect attachments.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeTransitGatewayMulticastDomainsResult:
      type: object
      properties:
        transitGatewayMulticastDomains:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayMulticastDomainList'
            - description: Information about the transit gateway multicast domains.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    TransitGatewayMulticastDomainId:
      type: string
    DescribeTransitGatewayPeeringAttachmentsResult:
      type: object
      properties:
        transitGatewayPeeringAttachments:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayPeeringAttachmentList'
            - description: The transit gateway peering attachments.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeTransitGatewayRouteTablesResult:
      type: object
      properties:
        transitGatewayRouteTables:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayRouteTableList'
            - description: Information about the transit gateway route tables.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    TransitGatewayRouteTableId:
      type: string
    DescribeTransitGatewayVpcAttachmentsResult:
      type: object
      properties:
        transitGatewayVpcAttachments:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayVpcAttachmentList'
            - description: Information about the VPC attachments.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeTransitGatewaysResult:
      type: object
      properties:
        transitGatewaySet:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayList'
            - description: Information about the transit gateways.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    TransitGatewayId:
      type: string
    DescribeTrunkInterfaceAssociationsResult:
      type: object
      properties:
        interfaceAssociationSet:
          allOf:
            - $ref: '#/components/schemas/TrunkInterfaceAssociationList'
            - description: Information about the trunk associations.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    TrunkInterfaceAssociationId:
      type: string
    DescribeVolumeAttributeResult:
      type: object
      example:
        AutoEnableIO:
          Value: false
        VolumeId: vol-049df61146c4d7901
      properties:
        autoEnableIO:
          allOf:
            - $ref: '#/components/schemas/AttributeBooleanValue'
            - description: The state of <code>autoEnableIO</code> attribute.
        productCodes:
          allOf:
            - $ref: '#/components/schemas/ProductCodeList'
            - description: A list of product codes.
        volumeId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the volume.
    DescribeVolumeStatusResult:
      type: object
      example:
        VolumeStatuses: []
      properties:
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
        volumeStatusSet:
          allOf:
            - $ref: '#/components/schemas/VolumeStatusList'
            - description: Information about the status of the volumes.
    VolumeId:
      type: string
    DescribeVolumesResult:
      type: object
      example:
        Volumes:
          - Attachments:
              - AttachTime: '2013-12-18T22:35:00.000Z'
                DeleteOnTermination: true
                Device: /dev/sda1
                InstanceId: i-1234567890abcdef0
                State: attached
                VolumeId: vol-049df61146c4d7901
            AvailabilityZone: us-east-1a
            CreateTime: '2013-12-18T22:35:00.084Z'
            Size: 8
            SnapshotId: snap-1234567890abcdef0
            State: in-use
            VolumeId: vol-049df61146c4d7901
            VolumeType: standard
      properties:
        volumeSet:
          allOf:
            - $ref: '#/components/schemas/VolumeList'
            - description: Information about the volumes.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The <code>NextToken</code> value to include in a future <code>DescribeVolumes</code> request. When the results of a <code>DescribeVolumes</code> request exceed <code>MaxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.'
    DescribeVolumesModificationsResult:
      type: object
      properties:
        volumeModificationSet:
          allOf:
            - $ref: '#/components/schemas/VolumeModificationList'
            - description: Information about the volume modifications.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'Token for pagination, null if there are no more results '
    DescribeVpcAttributeResult:
      type: object
      example:
        EnableDnsHostnames:
          Value: true
        VpcId: vpc-a01106c2
      properties:
        vpcId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the VPC.
        enableDnsHostnames:
          allOf:
            - $ref: '#/components/schemas/AttributeBooleanValue'
            - description: 'Indicates whether the instances launched in the VPC get DNS hostnames. If this attribute is <code>true</code>, instances in the VPC get DNS hostnames; otherwise, they do not.'
        enableDnsSupport:
          allOf:
            - $ref: '#/components/schemas/AttributeBooleanValue'
            - description: 'Indicates whether DNS resolution is enabled for the VPC. If this attribute is <code>true</code>, the Amazon DNS server resolves DNS hostnames for your instances to their corresponding IP addresses; otherwise, it does not.'
    DescribeVpcClassicLinkResult:
      type: object
      properties:
        vpcSet:
          allOf:
            - $ref: '#/components/schemas/VpcClassicLinkList'
            - description: The ClassicLink status of one or more VPCs.
    VpcId:
      type: string
    DescribeVpcClassicLinkDnsSupportResult:
      type: object
      properties:
        nextToken:
          allOf:
            - $ref: '#/components/schemas/DescribeVpcClassicLinkDnsSupportNextToken'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
        vpcs:
          allOf:
            - $ref: '#/components/schemas/ClassicLinkDnsSupportList'
            - description: Information about the ClassicLink DNS support status of the VPCs.
    DescribeVpcEndpointConnectionNotificationsResult:
      type: object
      properties:
        connectionNotificationSet:
          allOf:
            - $ref: '#/components/schemas/ConnectionNotificationSet'
            - description: One or more notifications.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeVpcEndpointConnectionsResult:
      type: object
      properties:
        vpcEndpointConnectionSet:
          allOf:
            - $ref: '#/components/schemas/VpcEndpointConnectionSet'
            - description: Information about one or more VPC endpoint connections.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeVpcEndpointServiceConfigurationsResult:
      type: object
      properties:
        serviceConfigurationSet:
          allOf:
            - $ref: '#/components/schemas/ServiceConfigurationSet'
            - description: Information about one or more services.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeVpcEndpointServicePermissionsResult:
      type: object
      properties:
        allowedPrincipals:
          allOf:
            - $ref: '#/components/schemas/AllowedPrincipalSet'
            - description: Information about one or more allowed principals.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeVpcEndpointServicesResult:
      type: object
      properties:
        serviceNameSet:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: A list of supported services.
        serviceDetailSet:
          allOf:
            - $ref: '#/components/schemas/ServiceDetailSet'
            - description: Information about the service.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
      description: Contains the output of DescribeVpcEndpointServices.
    DescribeVpcEndpointsResult:
      type: object
      properties:
        vpcEndpointSet:
          allOf:
            - $ref: '#/components/schemas/VpcEndpointSet'
            - description: Information about the endpoints.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
      description: Contains the output of DescribeVpcEndpoints.
    DescribeVpcPeeringConnectionsResult:
      type: object
      properties:
        vpcPeeringConnectionSet:
          allOf:
            - $ref: '#/components/schemas/VpcPeeringConnectionList'
            - description: Information about the VPC peering connections.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    VpcPeeringConnectionId:
      type: string
    DescribeVpcsResult:
      type: object
      example:
        Vpcs:
          - CidrBlock: 10.0.0.0/16
            DhcpOptionsId: dopt-7a8b9c2d
            InstanceTenancy: default
            IsDefault: false
            State: available
            Tags:
              - Key: Name
                Value: MyVPC
            VpcId: vpc-a01106c2
      properties:
        vpcSet:
          allOf:
            - $ref: '#/components/schemas/VpcList'
            - description: Information about one or more VPCs.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeVpnConnectionsResult:
      type: object
      properties:
        vpnConnectionSet:
          allOf:
            - $ref: '#/components/schemas/VpnConnectionList'
            - description: Information about one or more VPN connections.
      description: Contains the output of DescribeVpnConnections.
    VpnConnectionId:
      type: string
    DescribeVpnGatewaysResult:
      type: object
      properties:
        vpnGatewaySet:
          allOf:
            - $ref: '#/components/schemas/VpnGatewayList'
            - description: Information about one or more virtual private gateways.
      description: Contains the output of DescribeVpnGateways.
    VpnGatewayId:
      type: string
    DetachClassicLinkVpcResult:
      type: object
      properties:
        return:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Returns <code>true</code> if the request succeeds; otherwise, it returns an error.'
    DisableEbsEncryptionByDefaultResult:
      type: object
      properties:
        ebsEncryptionByDefault:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: The updated status of encryption by default.
    DisableFastLaunchResult:
      type: object
      properties:
        imageId:
          allOf:
            - $ref: '#/components/schemas/ImageId'
            - description: The ID of the image for which faster-launching has been turned off.
        resourceType:
          allOf:
            - $ref: '#/components/schemas/FastLaunchResourceType'
            - description: 'The pre-provisioning resource type that must be cleaned after turning off faster launching for the Windows AMI. Supported values include: <code>snapshot</code>.'
        snapshotConfiguration:
          allOf:
            - $ref: '#/components/schemas/FastLaunchSnapshotConfigurationResponse'
            - description: Parameters that were used for faster launching for the Windows AMI before faster launching was turned off. This informs the clean-up process.
        launchTemplate:
          allOf:
            - $ref: '#/components/schemas/FastLaunchLaunchTemplateSpecificationResponse'
            - description: The launch template that was used to launch Windows instances from pre-provisioned snapshots.
        maxParallelLaunches:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The maximum number of parallel instances to launch for creating resources.
        ownerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The owner of the Windows AMI for which faster launching was turned off.
        state:
          allOf:
            - $ref: '#/components/schemas/FastLaunchStateCode'
            - description: The current state of faster launching for the specified Windows AMI.
        stateTransitionReason:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The reason that the state changed for faster launching for the Windows AMI.
        stateTransitionTime:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: The time that the state changed for faster launching for the Windows AMI.
    DisableFastSnapshotRestoresResult:
      type: object
      properties:
        successful:
          allOf:
            - $ref: '#/components/schemas/DisableFastSnapshotRestoreSuccessSet'
            - description: Information about the snapshots for which fast snapshot restores were successfully disabled.
        unsuccessful:
          allOf:
            - $ref: '#/components/schemas/DisableFastSnapshotRestoreErrorSet'
            - description: Information about the snapshots for which fast snapshot restores could not be disabled.
    DisableImageDeprecationResult:
      type: object
      properties:
        return:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Returns <code>true</code> if the request succeeds; otherwise, it returns an error.'
    DisableIpamOrganizationAdminAccountResult:
      type: object
      properties:
        success:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: The result of disabling the IPAM account.
    DisableSerialConsoleAccessResult:
      type: object
      properties:
        serialConsoleAccessEnabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'If <code>true</code>, access to the EC2 serial console of all instances is enabled for your account. If <code>false</code>, access to the EC2 serial console of all instances is disabled for your account.'
    DisableTransitGatewayRouteTablePropagationResult:
      type: object
      properties:
        propagation:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayPropagation'
            - description: Information about route propagation.
    DisableVpcClassicLinkResult:
      type: object
      properties:
        return:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Returns <code>true</code> if the request succeeds; otherwise, it returns an error.'
    DisableVpcClassicLinkDnsSupportResult:
      type: object
      properties:
        return:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Returns <code>true</code> if the request succeeds; otherwise, it returns an error.'
    DisassociateClientVpnTargetNetworkResult:
      type: object
      properties:
        associationId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the target network association.
        status:
          allOf:
            - $ref: '#/components/schemas/AssociationStatus'
            - description: The current state of the target network association.
    DisassociateEnclaveCertificateIamRoleResult:
      type: object
      properties:
        return:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Returns <code>true</code> if the request succeeds; otherwise, it returns an error.'
    DisassociateIamInstanceProfileResult:
      type: object
      example:
        IamInstanceProfileAssociation:
          AssociationId: iip-assoc-05020b59952902f5f
          IamInstanceProfile:
            Arn: 'arn:aws:iam::123456789012:instance-profile/admin-role'
            Id: AIPAI5IVIHMFFYY2DKV5Y
          InstanceId: i-123456789abcde123
          State: disassociating
      properties:
        iamInstanceProfileAssociation:
          allOf:
            - $ref: '#/components/schemas/IamInstanceProfileAssociation'
            - description: Information about the IAM instance profile association.
    DisassociateInstanceEventWindowResult:
      type: object
      properties:
        instanceEventWindow:
          allOf:
            - $ref: '#/components/schemas/InstanceEventWindow'
            - description: Information about the event window.
    DisassociateSubnetCidrBlockResult:
      type: object
      properties:
        ipv6CidrBlockAssociation:
          allOf:
            - $ref: '#/components/schemas/SubnetIpv6CidrBlockAssociation'
            - description: Information about the IPv6 CIDR block association.
        subnetId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the subnet.
    DisassociateTransitGatewayMulticastDomainResult:
      type: object
      properties:
        associations:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayMulticastDomainAssociations'
            - description: Information about the association.
    DisassociateTransitGatewayRouteTableResult:
      type: object
      properties:
        association:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayAssociation'
            - description: Information about the association.
    DisassociateTrunkInterfaceResult:
      type: object
      properties:
        return:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Returns <code>true</code> if the request succeeds; otherwise, it returns an error.'
        clientToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to Ensure Idempotency</a>.'
    DisassociateVpcCidrBlockResult:
      type: object
      properties:
        ipv6CidrBlockAssociation:
          allOf:
            - $ref: '#/components/schemas/VpcIpv6CidrBlockAssociation'
            - description: Information about the IPv6 CIDR block association.
        cidrBlockAssociation:
          allOf:
            - $ref: '#/components/schemas/VpcCidrBlockAssociation'
            - description: Information about the IPv4 CIDR block association.
        vpcId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the VPC.
    EnableEbsEncryptionByDefaultResult:
      type: object
      properties:
        ebsEncryptionByDefault:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: The updated status of encryption by default.
    EnableFastLaunchResult:
      type: object
      properties:
        imageId:
          allOf:
            - $ref: '#/components/schemas/ImageId'
            - description: The image ID that identifies the Windows AMI for which faster launching was enabled.
        resourceType:
          allOf:
            - $ref: '#/components/schemas/FastLaunchResourceType'
            - description: The type of resource that was defined for pre-provisioning the Windows AMI for faster launching.
        snapshotConfiguration:
          allOf:
            - $ref: '#/components/schemas/FastLaunchSnapshotConfigurationResponse'
            - description: The configuration settings that were defined for creating and managing the pre-provisioned snapshots for faster launching of the Windows AMI. This property is returned when the associated <code>resourceType</code> is <code>snapshot</code>.
        launchTemplate:
          allOf:
            - $ref: '#/components/schemas/FastLaunchLaunchTemplateSpecificationResponse'
            - description: The launch template that is used when launching Windows instances from pre-provisioned snapshots.
        maxParallelLaunches:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The maximum number of parallel instances to launch for creating resources.
        ownerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The owner ID for the Windows AMI for which faster launching was enabled.
        state:
          allOf:
            - $ref: '#/components/schemas/FastLaunchStateCode'
            - description: The current state of faster launching for the specified Windows AMI.
        stateTransitionReason:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The reason that the state changed for faster launching for the Windows AMI.
        stateTransitionTime:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: The time that the state changed for faster launching for the Windows AMI.
    EnableFastSnapshotRestoresResult:
      type: object
      properties:
        successful:
          allOf:
            - $ref: '#/components/schemas/EnableFastSnapshotRestoreSuccessSet'
            - description: Information about the snapshots for which fast snapshot restores were successfully enabled.
        unsuccessful:
          allOf:
            - $ref: '#/components/schemas/EnableFastSnapshotRestoreErrorSet'
            - description: Information about the snapshots for which fast snapshot restores could not be enabled.
    EnableImageDeprecationResult:
      type: object
      properties:
        return:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Returns <code>true</code> if the request succeeds; otherwise, it returns an error.'
    EnableIpamOrganizationAdminAccountResult:
      type: object
      properties:
        success:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: The result of enabling the IPAM account.
    EnableSerialConsoleAccessResult:
      type: object
      properties:
        serialConsoleAccessEnabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'If <code>true</code>, access to the EC2 serial console of all instances is enabled for your account. If <code>false</code>, access to the EC2 serial console of all instances is disabled for your account.'
    EnableTransitGatewayRouteTablePropagationResult:
      type: object
      properties:
        propagation:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayPropagation'
            - description: Information about route propagation.
    EnableVpcClassicLinkResult:
      type: object
      properties:
        return:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Returns <code>true</code> if the request succeeds; otherwise, it returns an error.'
    EnableVpcClassicLinkDnsSupportResult:
      type: object
      properties:
        return:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Returns <code>true</code> if the request succeeds; otherwise, it returns an error.'
    ExportClientVpnClientCertificateRevocationListResult:
      type: object
      properties:
        certificateRevocationList:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Information about the client certificate revocation list.
        status:
          allOf:
            - $ref: '#/components/schemas/ClientCertificateRevocationListStatus'
            - description: The current state of the client certificate revocation list.
    ExportClientVpnClientConfigurationResult:
      type: object
      properties:
        clientConfiguration:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The contents of the Client VPN endpoint configuration file.
    ExportImageResult:
      type: object
      properties:
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A description of the image being exported.
        diskImageFormat:
          allOf:
            - $ref: '#/components/schemas/DiskImageFormat'
            - description: The disk image format for the exported image.
        exportImageTaskId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the export image task.
        imageId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the image.
        roleName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the role that grants VM Import/Export permission to export images to your Amazon S3 bucket.
        progress:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The percent complete of the export image task.
        s3ExportLocation:
          allOf:
            - $ref: '#/components/schemas/ExportTaskS3Location'
            - description: Information about the destination Amazon S3 bucket.
        status:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The status of the export image task. The possible values are <code>active</code>, <code>completed</code>, <code>deleting</code>, and <code>deleted</code>.'
        statusMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The status message for the export image task.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: Any tags assigned to the export image task.
    ExportTransitGatewayRoutesResult:
      type: object
      properties:
        s3Location:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The URL of the exported file in Amazon S3. For example, s3://<i>bucket_name</i>/VPCTransitGateway/TransitGatewayRouteTables/<i>file_name</i>.'
    GetAssociatedEnclaveCertificateIamRolesResult:
      type: object
      properties:
        associatedRoleSet:
          allOf:
            - $ref: '#/components/schemas/AssociatedRolesList'
            - description: Information about the associated IAM roles.
    GetAssociatedIpv6PoolCidrsResult:
      type: object
      properties:
        ipv6CidrAssociationSet:
          allOf:
            - $ref: '#/components/schemas/Ipv6CidrAssociationSet'
            - description: Information about the IPv6 CIDR block associations.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    GetCapacityReservationUsageResult:
      type: object
      properties:
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
        capacityReservationId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Capacity Reservation.
        instanceType:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The type of instance for which the Capacity Reservation reserves capacity.
        totalInstanceCount:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of instances for which the Capacity Reservation reserves capacity.
        availableInstanceCount:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The remaining capacity. Indicates the number of instances that can be launched in the Capacity Reservation.
        state:
          allOf:
            - $ref: '#/components/schemas/CapacityReservationState'
            - description: '<p>The current state of the Capacity Reservation. A Capacity Reservation can be in one of the following states:</p> <ul> <li> <p> <code>active</code> - The Capacity Reservation is active and the capacity is available for your use.</p> </li> <li> <p> <code>expired</code> - The Capacity Reservation expired automatically at the date and time specified in your request. The reserved capacity is no longer available for your use.</p> </li> <li> <p> <code>cancelled</code> - The Capacity Reservation was cancelled. The reserved capacity is no longer available for your use.</p> </li> <li> <p> <code>pending</code> - The Capacity Reservation request was successful but the capacity provisioning is still pending.</p> </li> <li> <p> <code>failed</code> - The Capacity Reservation request has failed. A request might fail due to invalid request parameters, capacity constraints, or instance limit constraints. Failed requests are retained for 60 minutes.</p> </li> </ul>'
        instanceUsageSet:
          allOf:
            - $ref: '#/components/schemas/InstanceUsageSet'
            - description: Information about the Capacity Reservation usage.
    GetCoipPoolUsageResult:
      type: object
      properties:
        coipPoolId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the customer-owned address pool.
        coipAddressUsageSet:
          allOf:
            - $ref: '#/components/schemas/CoipAddressUsageSet'
            - description: Information about the address usage.
        localGatewayRouteTableId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the local gateway route table.
    GetConsoleOutputResult:
      type: object
      example:
        InstanceId: i-1234567890abcdef0
        Output: ...
        Timestamp: '2018-05-25T21:23:53.000Z'
      properties:
        instanceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the instance.
        output:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The console output, base64-encoded. If you are using a command line tool, the tool decodes the output for you.'
        timestamp:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The time at which the output was last updated.
    GetConsoleScreenshotResult:
      type: object
      properties:
        imageData:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The data that comprises the image.
        instanceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the instance.
    GetDefaultCreditSpecificationResult:
      type: object
      properties:
        instanceFamilyCreditSpecification:
          allOf:
            - $ref: '#/components/schemas/InstanceFamilyCreditSpecification'
            - description: The default credit option for CPU usage of the instance family.
    GetEbsDefaultKmsKeyIdResult:
      type: object
      properties:
        kmsKeyId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Resource Name (ARN) of the default KMS key for encryption by default.
    GetEbsEncryptionByDefaultResult:
      type: object
      properties:
        ebsEncryptionByDefault:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether encryption by default is enabled.
    GetFlowLogsIntegrationTemplateResult:
      type: object
      properties:
        result:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The generated CloudFormation template.
    AthenaIntegrationsSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/AthenaIntegration'
          - xml:
              name: item
      minItems: 1
      maxItems: 10
    GetGroupsForCapacityReservationResult:
      type: object
      properties:
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
        capacityReservationGroupSet:
          allOf:
            - $ref: '#/components/schemas/CapacityReservationGroupSet'
            - description: Information about the resource groups to which the Capacity Reservation has been added.
    GetHostReservationPurchasePreviewResult:
      type: object
      properties:
        currencyCode:
          allOf:
            - $ref: '#/components/schemas/CurrencyCodeValues'
            - description: 'The currency in which the <code>totalUpfrontPrice</code> and <code>totalHourlyPrice</code> amounts are specified. At this time, the only supported currency is <code>USD</code>.'
        purchase:
          allOf:
            - $ref: '#/components/schemas/PurchaseSet'
            - description: The purchase information of the Dedicated Host reservation and the Dedicated Hosts associated with it.
        totalHourlyPrice:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The potential total hourly price of the reservation per hour.
        totalUpfrontPrice:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The potential total upfront price. This is billed immediately.
    GetInstanceTypesFromInstanceRequirementsResult:
      type: object
      properties:
        instanceTypeSet:
          allOf:
            - $ref: '#/components/schemas/InstanceTypeInfoFromInstanceRequirementsSet'
            - description: The instance types with the specified instance attributes.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token for the next set of results.
    ArchitectureType:
      type: string
      enum:
        - i386
        - x86_64
        - arm64
        - x86_64_mac
    VirtualizationType:
      type: string
      enum:
        - hvm
        - paravirtual
    MemoryMiBRequest:
      type: object
      required:
        - Min
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The maximum amount of memory, in MiB. To specify no maximum limit, omit this parameter.'
      description: 'The minimum and maximum amount of memory, in MiB.'
    MemoryGiBPerVCpuRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Double'
            - description: 'The maximum amount of memory per vCPU, in GiB. To specify no maximum limit, omit this parameter.'
      description: 'The minimum and maximum amount of memory per vCPU, in GiB.'
    ExcludedInstanceTypeSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ExcludedInstanceType'
          - xml:
              name: item
      minItems: 0
      maxItems: 400
    LocalStorage:
      type: string
      enum:
        - included
        - required
        - excluded
    BaselineEbsBandwidthMbpsRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The maximum baseline bandwidth, in Mbps. To specify no maximum limit, omit this parameter.'
      description: 'The minimum and maximum baseline bandwidth to Amazon EBS, in Mbps. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-optimized.html">Amazon EBS–optimized instances</a> in the <i>Amazon EC2 User Guide</i>.'
    AcceleratorCountRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The maximum number of accelerators. To specify no maximum limit, omit this parameter. To exclude accelerator-enabled instance types, set <code>Max</code> to <code>0</code>.'
      description: 'The minimum and maximum number of accelerators (GPUs, FPGAs, or Amazon Web Services Inferentia chips) on an instance. To exclude accelerator-enabled instance types, set <code>Max</code> to <code>0</code>.'
    AcceleratorManufacturerSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/AcceleratorManufacturer'
          - xml:
              name: item
    AcceleratorTotalMemoryMiBRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The maximum amount of accelerator memory, in MiB. To specify no maximum limit, omit this parameter.'
      description: 'The minimum and maximum amount of total accelerator memory, in MiB.'
    GetInstanceUefiDataResult:
      type: object
      properties:
        instanceId:
          allOf:
            - $ref: '#/components/schemas/InstanceId'
            - description: The ID of the instance from which to retrieve the UEFI data.
        uefiData:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Base64 representation of the non-volatile UEFI variable store.
    GetIpamAddressHistoryResult:
      type: object
      properties:
        historyRecordSet:
          allOf:
            - $ref: '#/components/schemas/IpamAddressHistoryRecordSet'
            - description: 'A historical record for a CIDR within an IPAM scope. If the CIDR is associated with an EC2 instance, you will see an object in the response for the instance and one for the network interface.'
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    GetIpamPoolAllocationsResult:
      type: object
      properties:
        ipamPoolAllocationSet:
          allOf:
            - $ref: '#/components/schemas/IpamPoolAllocationSet'
            - description: The IPAM pool allocations you want information on.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    GetIpamPoolCidrsResult:
      type: object
      properties:
        ipamPoolCidrSet:
          allOf:
            - $ref: '#/components/schemas/IpamPoolCidrSet'
            - description: Information about the CIDRs provisioned to an IPAM pool.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    GetIpamResourceCidrsResult:
      type: object
      properties:
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
        ipamResourceCidrSet:
          allOf:
            - $ref: '#/components/schemas/IpamResourceCidrSet'
            - description: The resource CIDRs.
    GetLaunchTemplateDataResult:
      type: object
      example:
        LaunchTemplateData:
          BlockDeviceMappings:
            - DeviceName: /dev/xvda
              Ebs:
                DeleteOnTermination: true
                Encrypted: false
                Iops: 100
                SnapshotId: snap-02594938353ef77d3
                VolumeSize: 8
                VolumeType: gp2
          EbsOptimized: false
          ImageId: ami-32cf7b4a
          InstanceType: t2.medium
          KeyName: my-key-pair
          Monitoring:
            Enabled: false
          NetworkInterfaces:
            - AssociatePublicIpAddress: false
              DeleteOnTermination: true
              Description: ''
              DeviceIndex: 0
              Groups:
                - sg-d14e1bb4
              Ipv6Addresses: []
              NetworkInterfaceId: eni-4338b5a9
              PrivateIpAddress: 10.0.3.233
              PrivateIpAddresses:
                - Primary: true
                  PrivateIpAddress: 10.0.3.233
              SubnetId: subnet-5264e837
          Placement:
            AvailabilityZone: us-east-2b
            GroupName: ''
            Tenancy: default
      properties:
        launchTemplateData:
          allOf:
            - $ref: '#/components/schemas/ResponseLaunchTemplateData'
            - description: The instance data.
    GetManagedPrefixListAssociationsResult:
      type: object
      properties:
        prefixListAssociationSet:
          allOf:
            - $ref: '#/components/schemas/PrefixListAssociationSet'
            - description: Information about the associations.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    GetManagedPrefixListEntriesResult:
      type: object
      properties:
        entrySet:
          allOf:
            - $ref: '#/components/schemas/PrefixListEntrySet'
            - description: Information about the prefix list entries.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    GetNetworkInsightsAccessScopeAnalysisFindingsResult:
      type: object
      properties:
        networkInsightsAccessScopeAnalysisId:
          allOf:
            - $ref: '#/components/schemas/NetworkInsightsAccessScopeAnalysisId'
            - description: The ID of the Network Access Scope analysis.
        analysisStatus:
          allOf:
            - $ref: '#/components/schemas/AnalysisStatus'
            - description: The status of Network Access Scope Analysis.
        analysisFindingSet:
          allOf:
            - $ref: '#/components/schemas/AccessScopeAnalysisFindingList'
            - description: The findings associated with Network Access Scope Analysis.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    GetNetworkInsightsAccessScopeContentResult:
      type: object
      properties:
        networkInsightsAccessScopeContent:
          allOf:
            - $ref: '#/components/schemas/NetworkInsightsAccessScopeContent'
            - description: The Network Access Scope content.
    GetPasswordDataResult:
      type: object
      properties:
        instanceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Windows instance.
        passwordData:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The password of the instance. Returns an empty string if the password is not available.
        timestamp:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The time the data was last updated.
    GetReservedInstancesExchangeQuoteResult:
      type: object
      properties:
        currencyCode:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The currency of the transaction.
        isValidExchange:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'If <code>true</code>, the exchange is valid. If <code>false</code>, the exchange cannot be completed.'
        outputReservedInstancesWillExpireAt:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The new end date of the reservation term.
        paymentDue:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The total true upfront charge for the exchange.
        reservedInstanceValueRollup:
          allOf:
            - $ref: '#/components/schemas/ReservationValue'
            - description: The cost associated with the Reserved Instance.
        reservedInstanceValueSet:
          allOf:
            - $ref: '#/components/schemas/ReservedInstanceReservationValueSet'
            - description: The configuration of your Convertible Reserved Instances.
        targetConfigurationValueRollup:
          allOf:
            - $ref: '#/components/schemas/ReservationValue'
            - description: The cost associated with the Reserved Instance.
        targetConfigurationValueSet:
          allOf:
            - $ref: '#/components/schemas/TargetReservationValueSet'
            - description: The values of the target Convertible Reserved Instances.
        validationFailureReason:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Describes the reason why the exchange cannot be completed.
      description: Contains the output of GetReservedInstancesExchangeQuote.
    GetSerialConsoleAccessStatusResult:
      type: object
      properties:
        serialConsoleAccessEnabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'If <code>true</code>, access to the EC2 serial console of all instances is enabled for your account. If <code>false</code>, access to the EC2 serial console of all instances is disabled for your account.'
    GetSpotPlacementScoresResult:
      type: object
      properties:
        spotPlacementScoreSet:
          allOf:
            - $ref: '#/components/schemas/SpotPlacementScores'
            - description: '<p>The Spot placement score for the top 10 Regions or Availability Zones, scored on a scale from 1 to 10. Each score&#x2028; reflects how likely it is that each Region or Availability Zone will succeed at fulfilling the specified target capacity&#x2028; <i>at the time of the Spot placement score request</i>. A score of <code>10</code> means that your Spot capacity request is highly likely to succeed in that Region or Availability Zone. </p> <p>If you request a Spot placement score for Regions, a high score assumes that your fleet request will be configured to use all Availability Zones and the <code>capacity-optimized</code> allocation strategy. If you request a Spot placement score for Availability Zones, a high score assumes that your fleet request will be configured to use a single Availability Zone and the <code>capacity-optimized</code> allocation strategy.</p> <p>Different&#x2028; Regions or Availability Zones might return the same score.</p> <note> <p>The Spot placement score serves as a recommendation only. No score guarantees that your Spot request will be fully or partially fulfilled.</p> </note>'
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token for the next set of results.
    ArchitectureTypeSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ArchitectureType'
          - xml:
              name: item
      minItems: 0
      maxItems: 3
    InstanceRequirementsRequest:
      type: object
      required:
        - VCpuCount
        - MemoryMiB
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/MemoryMiBRequest'
            - description: 'The minimum and maximum amount of memory, in MiB.'
        CpuManufacturer:
          allOf:
            - $ref: '#/components/schemas/MemoryGiBPerVCpuRequest'
            - description: '<p>The minimum and maximum amount of memory per vCPU, in GiB.</p> <p>Default: No minimum or maximum limits</p>'
        ExcludedInstanceType:
          allOf:
            - $ref: '#/components/schemas/ExcludedInstanceTypeSet'
            - description: '<p>The instance types to exclude. You can use strings with one or more wild cards, represented by an asterisk (<code>*</code>), to exclude an instance family, type, size, or generation. The following are examples: <code>m5.8xlarge</code>, <code>c5*.*</code>, <code>m5a.*</code>, <code>r*</code>, <code>*3*</code>.</p> <p>For example, if you specify <code>c5*</code>,Amazon EC2 will exclude the entire C5 instance family, which includes all C5a and C5n instance types. If you specify <code>m5a.*</code>, Amazon EC2 will exclude all the M5a instance types, but not the M5n instance types.</p> <p>Default: No excluded instance types</p>'
        InstanceGeneration:
          allOf:
            - $ref: '#/components/schemas/LocalStorage'
            - description: '<p>Indicates whether instance types with instance store volumes are included, excluded, or required. For more information, <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html">Amazon EC2 instance store</a> in the <i>Amazon EC2 User Guide</i>.</p> <ul> <li> <p>To include instance types with instance store volumes, specify <code>included</code>.</p> </li> <li> <p>To require only instance types with instance store volumes, specify <code>required</code>.</p> </li> <li> <p>To exclude instance types with instance store volumes, specify <code>excluded</code>.</p> </li> </ul> <p>Default: <code>included</code> </p>'
        LocalStorageType:
          allOf:
            - $ref: '#/components/schemas/BaselineEbsBandwidthMbpsRequest'
            - description: '<p>The minimum and maximum baseline bandwidth to Amazon EBS, in Mbps. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-optimized.html">Amazon EBS–optimized instances</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>Default: No minimum or maximum limits</p>'
        AcceleratorType:
          allOf:
            - $ref: '#/components/schemas/AcceleratorCountRequest'
            - description: '<p>The minimum and maximum number of accelerators (GPUs, FPGAs, or Amazon Web Services Inferentia chips) on an instance.</p> <p>To exclude accelerator-enabled instance types, set <code>Max</code> to <code>0</code>.</p> <p>Default: No minimum or maximum limits</p>'
        AcceleratorManufacturer:
          allOf:
            - $ref: '#/components/schemas/AcceleratorManufacturerSet'
            - description: '<p>Indicates whether instance types must have accelerators by specific manufacturers.</p> <ul> <li> <p>For instance types with NVIDIA devices, specify <code>nvidia</code>.</p> </li> <li> <p>For instance types with AMD devices, specify <code>amd</code>.</p> </li> <li> <p>For instance types with Amazon Web Services devices, specify <code>amazon-web-services</code>.</p> </li> <li> <p>For instance types with Xilinx devices, specify <code>xilinx</code>.</p> </li> </ul> <p>Default: Any manufacturer</p>'
        AcceleratorName:
          allOf:
            - $ref: '#/components/schemas/AcceleratorTotalMemoryMiBRequest'
            - description: '<p>The minimum and maximum amount of total accelerator memory, in MiB.</p> <p>Default: No minimum or maximum limits</p>'
      description: '<p>The attributes for the instance types. When you specify instance attributes, Amazon EC2 will identify instance types with these attributes.</p> <p>When you specify multiple parameters, you get instance types that satisfy all of the specified parameters. If you specify multiple values for a parameter, you get instance types that satisfy any of the specified values.</p> <note> <p>You must specify <code>VCpuCount</code> and <code>MemoryMiB</code>. All other parameters are optional. Any unspecified optional parameter is set to its default.</p> </note> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-attribute-based-instance-type-selection.html">Attribute-based instance type selection for EC2 Fleet</a>, <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-attribute-based-instance-type-selection.html">Attribute-based instance type selection for Spot Fleet</a>, and <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-placement-score.html">Spot placement score</a> in the <i>Amazon EC2 User Guide</i>.</p>'
    GetSubnetCidrReservationsResult:
      type: object
      properties:
        subnetIpv4CidrReservationSet:
          allOf:
            - $ref: '#/components/schemas/SubnetCidrReservationList'
            - description: Information about the IPv4 subnet CIDR reservations.
        subnetIpv6CidrReservationSet:
          allOf:
            - $ref: '#/components/schemas/SubnetCidrReservationList'
            - description: Information about the IPv6 subnet CIDR reservations.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    GetTransitGatewayAttachmentPropagationsResult:
      type: object
      properties:
        transitGatewayAttachmentPropagations:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayAttachmentPropagationList'
            - description: Information about the propagation route tables.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    GetTransitGatewayMulticastDomainAssociationsResult:
      type: object
      properties:
        multicastDomainAssociations:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayMulticastDomainAssociationList'
            - description: Information about the multicast domain associations.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    GetTransitGatewayPrefixListReferencesResult:
      type: object
      properties:
        transitGatewayPrefixListReferenceSet:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayPrefixListReferenceSet'
            - description: Information about the prefix list references.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    GetTransitGatewayRouteTableAssociationsResult:
      type: object
      properties:
        associations:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayRouteTableAssociationList'
            - description: Information about the associations.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    GetTransitGatewayRouteTablePropagationsResult:
      type: object
      properties:
        transitGatewayRouteTablePropagations:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayRouteTablePropagationList'
            - description: Information about the route table propagations.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    GetVpnConnectionDeviceSampleConfigurationResult:
      type: object
      properties:
        vpnConnectionDeviceSampleConfiguration:
          allOf:
            - $ref: '#/components/schemas/VpnConnectionDeviceSampleConfiguration'
            - description: Sample configuration file for the specified customer gateway device.
    GetVpnConnectionDeviceTypesResult:
      type: object
      properties:
        vpnConnectionDeviceTypeSet:
          allOf:
            - $ref: '#/components/schemas/VpnConnectionDeviceTypeList'
            - description: List of customer gateway devices that have a sample configuration file available for use.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'The <code>NextToken</code> value to include in a future <code>GetVpnConnectionDeviceTypes</code> request. When the results of a <code>GetVpnConnectionDeviceTypes</code> request exceed <code>MaxResults</code>, this value can be used to retrieve the next page of results. This value is null when there are no more results to return.'
    ImportClientVpnClientCertificateRevocationListResult:
      type: object
      properties:
        return:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Returns <code>true</code> if the request succeeds; otherwise, it returns an error.'
    ImportImageResult:
      type: object
      properties:
        architecture:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The architecture of the virtual machine.
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A description of the import task.
        encrypted:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the AMI is encrypted.
        hypervisor:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The target hypervisor of the import task.
        imageId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Amazon Machine Image (AMI) created by the import task.
        importTaskId:
          allOf:
            - $ref: '#/components/schemas/ImportImageTaskId'
            - description: The task ID of the import image task.
        kmsKeyId:
          allOf:
            - $ref: '#/components/schemas/KmsKeyId'
            - description: The identifier for the symmetric KMS key that was used to create the encrypted AMI.
        licenseType:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The license type of the virtual machine.
        platform:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The operating system of the virtual machine.
        progress:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The progress of the task.
        snapshotDetailSet:
          allOf:
            - $ref: '#/components/schemas/SnapshotDetailList'
            - description: Information about the snapshots.
        status:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A brief status of the task.
        statusMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A detailed status message of the import task.
        licenseSpecifications:
          allOf:
            - $ref: '#/components/schemas/ImportImageLicenseSpecificationListResponse'
            - description: The ARNs of the license configurations.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: Any tags assigned to the import image task.
        usageOperation:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The usage operation value.
    ImageDiskContainer:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/UserBucket'
            - description: The S3 bucket for the disk image.
      description: Describes the disk container object for an import image task.
    ImportImageLicenseConfigurationRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ARN of a license configuration.
      description: The request information of license configurations.
    ImportInstanceResult:
      type: object
      properties:
        conversionTask:
          allOf:
            - $ref: '#/components/schemas/ConversionTask'
            - description: Information about the conversion task.
    DiskImage:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/VolumeDetail'
            - description: Information about the volume.
      description: Describes a disk image.
    ArchitectureValues:
      type: string
      enum:
        - i386
        - x86_64
        - arm64
        - x86_64_mac
    SecurityGroupStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/SecurityGroupName'
          - xml:
              name: SecurityGroup
    ShutdownBehavior:
      type: string
      enum:
        - stop
        - terminate
    Placement:
      type: object
      properties:
        availabilityZone:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The Availability Zone of the instance.</p> <p>If not specified, an Availability Zone will be automatically chosen for you based on the load balancing criteria for the Region.</p> <p>This parameter is not supported by <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet">CreateFleet</a>.</p>'
        affinity:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The affinity setting for the instance on the Dedicated Host. This parameter is not supported for the <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html">ImportInstance</a> command.</p> <p>This parameter is not supported by <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet">CreateFleet</a>.</p>'
        groupName:
          allOf:
            - $ref: '#/components/schemas/PlacementGroupName'
            - description: The name of the placement group the instance is in.
        partitionNumber:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: '<p>The number of the partition that the instance is in. Valid only if the placement group strategy is set to <code>partition</code>.</p> <p>This parameter is not supported by <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet">CreateFleet</a>.</p>'
        hostId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The ID of the Dedicated Host on which the instance resides. This parameter is not supported for the <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html">ImportInstance</a> command.</p> <p>This parameter is not supported by <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet">CreateFleet</a>.</p>'
        tenancy:
          allOf:
            - $ref: '#/components/schemas/Tenancy'
            - description: '<p>The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of <code>dedicated</code> runs on single-tenant hardware. The <code>host</code> tenancy is not supported for the <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html">ImportInstance</a> command.</p> <p>This parameter is not supported by <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet">CreateFleet</a>.</p> <p>T3 instances that use the <code>unlimited</code> CPU credit option do not support <code>host</code> tenancy.</p>'
        spreadDomain:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>Reserved for future use.</p> <p>This parameter is not supported by <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet">CreateFleet</a>.</p>'
        hostResourceGroupArn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The ARN of the host resource group in which to launch the instances. If you specify a host resource group ARN, omit the <b>Tenancy</b> parameter or set it to <code>host</code>.</p> <p>This parameter is not supported by <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet">CreateFleet</a>.</p>'
      description: Describes the placement of an instance.
    UserData:
      type: object
      properties:
        data:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The user data. If you are using an Amazon Web Services SDK or command line tool, Base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide Base64-encoded text.'
      description: Describes the user data for an instance.
    ImportKeyPairResult:
      type: object
      properties:
        keyFingerprint:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<ul> <li> <p>For RSA key pairs, the key fingerprint is the MD5 public key fingerprint as specified in section 4 of RFC 4716.</p> </li> <li> <p>For ED25519 key pairs, the key fingerprint is the base64-encoded SHA-256 digest, which is the default for OpenSSH, starting with <a href="http://www.openssh.com/txt/release-6.8">OpenSSH 6.8</a>.</p> </li> </ul>'
        keyName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The key pair name that you provided.
        keyPairId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the resulting key pair.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags applied to the imported key pair.
    ImportSnapshotResult:
      type: object
      properties:
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A description of the import snapshot task.
        importTaskId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the import snapshot task.
        snapshotTaskDetail:
          allOf:
            - $ref: '#/components/schemas/SnapshotTaskDetail'
            - description: Information about the import snapshot task.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: Any tags assigned to the import snapshot task.
    UserBucket:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The file name of the disk image.
      description: Describes the Amazon S3 bucket for the disk image.
    ImportVolumeResult:
      type: object
      properties:
        conversionTask:
          allOf:
            - $ref: '#/components/schemas/ConversionTask'
            - description: Information about the conversion task.
    ListImagesInRecycleBinResult:
      type: object
      properties:
        imageSet:
          allOf:
            - $ref: '#/components/schemas/ImageRecycleBinInfoList'
            - description: Information about the AMIs.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    ListSnapshotsInRecycleBinResult:
      type: object
      properties:
        snapshotSet:
          allOf:
            - $ref: '#/components/schemas/SnapshotRecycleBinInfoList'
            - description: Information about the snapshots.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    ModifyAddressAttributeResult:
      type: object
      properties:
        address:
          allOf:
            - $ref: '#/components/schemas/AddressAttribute'
            - description: Information about the Elastic IP address.
    ModifyAvailabilityZoneGroupResult:
      type: object
      properties:
        return:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Is <code>true</code> if the request succeeds, and an error otherwise.'
    ModifyCapacityReservationResult:
      type: object
      properties:
        return:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Returns <code>true</code> if the request succeeds; otherwise, it returns an error.'
    ModifyCapacityReservationFleetResult:
      type: object
      properties:
        return:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Returns <code>true</code> if the request succeeds; otherwise, it returns an error.'
    ModifyClientVpnEndpointResult:
      type: object
      properties:
        return:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Returns <code>true</code> if the request succeeds; otherwise, it returns an error.'
    ModifyDefaultCreditSpecificationResult:
      type: object
      properties:
        instanceFamilyCreditSpecification:
          allOf:
            - $ref: '#/components/schemas/InstanceFamilyCreditSpecification'
            - description: The default credit option for CPU usage of the instance family.
    ModifyEbsDefaultKmsKeyIdResult:
      type: object
      properties:
        kmsKeyId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Resource Name (ARN) of the default KMS key for encryption by default.
    ModifyFleetResult:
      type: object
      properties:
        return:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'If the request succeeds, the response returns <code>true</code>. If the request fails, no response is returned, and instead an error message is returned.'
    ModifyFpgaImageAttributeResult:
      type: object
      properties:
        fpgaImageAttribute:
          allOf:
            - $ref: '#/components/schemas/FpgaImageAttribute'
            - description: Information about the attribute.
    LoadPermissionListRequest:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/LoadPermissionRequest'
          - xml:
              name: item
    ModifyHostsResult:
      type: object
      properties:
        successful:
          allOf:
            - $ref: '#/components/schemas/ResponseHostIdList'
            - description: The IDs of the Dedicated Hosts that were successfully modified.
        unsuccessful:
          allOf:
            - $ref: '#/components/schemas/UnsuccessfulItemList'
            - description: The IDs of the Dedicated Hosts that could not be modified. Check whether the setting you requested can be used.
    LaunchPermissionList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/LaunchPermission'
          - xml:
              name: item
    InstanceBlockDeviceMappingSpecification:
      type: object
      properties:
        deviceName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The device name (for example, <code>/dev/sdh</code> or <code>xvdh</code>).'
        ebs:
          allOf:
            - $ref: '#/components/schemas/EbsInstanceBlockDeviceSpecification'
            - description: Parameters used to automatically set up EBS volumes when the instance is launched.
        noDevice:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: suppress the specified device included in the block device mapping.
        virtualName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The virtual device name.
      description: Describes a block device mapping entry.
    Blob:
      type: string
    ModifyInstanceCapacityReservationAttributesResult:
      type: object
      properties:
        return:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Returns <code>true</code> if the request succeeds; otherwise, it returns an error.'
    CapacityReservationTarget:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ARN of the Capacity Reservation resource group in which to run the instance.
      description: Describes a target Capacity Reservation or Capacity Reservation group.
    ModifyInstanceCreditSpecificationResult:
      type: object
      properties:
        successfulInstanceCreditSpecificationSet:
          allOf:
            - $ref: '#/components/schemas/SuccessfulInstanceCreditSpecificationSet'
            - description: Information about the instances whose credit option for CPU usage was successfully modified.
        unsuccessfulInstanceCreditSpecificationSet:
          allOf:
            - $ref: '#/components/schemas/UnsuccessfulInstanceCreditSpecificationSet'
            - description: Information about the instances whose credit option for CPU usage was not modified.
    InstanceCreditSpecificationRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: <p>The credit option for CPU usage of the instance. Valid values are <code>standard</code> and <code>unlimited</code>.</p> <p>T3 instances with <code>host</code> tenancy do not support the <code>unlimited</code> CPU credit option.</p>
      description: Describes the credit option for CPU usage of a burstable performance instance.
    ModifyInstanceEventStartTimeResult:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/InstanceStatusEvent'
    ModifyInstanceEventWindowResult:
      type: object
      properties:
        instanceEventWindow:
          allOf:
            - $ref: '#/components/schemas/InstanceEventWindow'
            - description: Information about the event window.
    ModifyInstanceMaintenanceOptionsResult:
      type: object
      properties:
        instanceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the instance.
        autoRecovery:
          allOf:
            - $ref: '#/components/schemas/InstanceAutoRecoveryState'
            - description: Provides information on the current automatic recovery behavior of your instance.
    ModifyInstanceMetadataOptionsResult:
      type: object
      properties:
        instanceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the instance.
        instanceMetadataOptions:
          allOf:
            - $ref: '#/components/schemas/InstanceMetadataOptionsResponse'
            - description: The metadata options for the instance.
    ModifyInstancePlacementResult:
      type: object
      properties:
        return:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Is <code>true</code> if the request succeeds, and an error otherwise.'
    ModifyIpamResult:
      type: object
      properties:
        ipam:
          allOf:
            - $ref: '#/components/schemas/Ipam'
            - description: The results of the modification.
    RemoveIpamOperatingRegion:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the operating Region you want to remove.
      description: '<p>Remove an operating Region from an IPAM. Operating Regions are Amazon Web Services Regions where the IPAM is allowed to manage IP address CIDRs. IPAM only discovers and monitors resources in the Amazon Web Services Regions you select as operating Regions.</p> <p>For more information about operating Regions, see <a href="/vpc/latest/ipam/create-ipam.html">Create an IPAM</a> in the <i>Amazon VPC IPAM User Guide</i> </p>'
    ModifyIpamPoolResult:
      type: object
      properties:
        ipamPool:
          allOf:
            - $ref: '#/components/schemas/IpamPool'
            - description: The results of the modification.
    ModifyIpamResourceCidrResult:
      type: object
      properties:
        ipamResourceCidr:
          $ref: '#/components/schemas/IpamResourceCidr'
    ModifyIpamScopeResult:
      type: object
      properties:
        ipamScope:
          allOf:
            - $ref: '#/components/schemas/IpamScope'
            - description: The results of the modification.
    ModifyLaunchTemplateResult:
      type: object
      example:
        LaunchTemplate:
          CreateTime: '2017-12-01T13:35:46.000Z'
          CreatedBy: 'arn:aws:iam::123456789012:root'
          DefaultVersionNumber: 2
          LatestVersionNumber: 2
          LaunchTemplateId: lt-0abcd290751193123
          LaunchTemplateName: WebServers
      properties:
        launchTemplate:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplate'
            - description: Information about the launch template.
    ModifyManagedPrefixListResult:
      type: object
      properties:
        prefixList:
          allOf:
            - $ref: '#/components/schemas/ManagedPrefixList'
            - description: Information about the prefix list.
    RemovePrefixListEntry:
      type: object
      required:
        - Cidr
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The CIDR block.
      description: An entry for a prefix list.
    NetworkInterfaceAttachmentId:
      type: string
    ModifyPrivateDnsNameOptionsResult:
      type: object
      properties:
        return:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Returns <code>true</code> if the request succeeds; otherwise, it returns an error.'
    ModifyReservedInstancesResult:
      type: object
      properties:
        reservedInstancesModificationId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID for the modification.
      description: Contains the output of ModifyReservedInstances.
    ReservedInstancesConfiguration:
      type: object
      properties:
        availabilityZone:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Availability Zone for the modified Reserved Instances.
        instanceCount:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: <p>The number of modified Reserved Instances.</p> <note> <p>This is a required field for a request.</p> </note>
        instanceType:
          allOf:
            - $ref: '#/components/schemas/InstanceType'
            - description: The instance type for the modified Reserved Instances.
        platform:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The network platform of the modified Reserved Instances, which is either EC2-Classic or EC2-VPC.'
        scope:
          allOf:
            - $ref: '#/components/schemas/scope'
            - description: Whether the Reserved Instance is applied to instances in a Region or instances in a specific Availability Zone.
      description: Describes the configuration settings for the modified Reserved Instances.
    ModifySecurityGroupRulesResult:
      type: object
      properties:
        return:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Returns <code>true</code> if the request succeeds; otherwise, returns an error.'
    SecurityGroupRuleUpdate:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/SecurityGroupRuleRequest'
            - description: Information about the security group rule.
      description: Describes an update to a security group rule.
    CreateVolumePermissionList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/CreateVolumePermission'
          - xml:
              name: item
    ModifySnapshotTierResult:
      type: object
      properties:
        snapshotId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the snapshot.
        tieringStartTime:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: The date and time when the archive process was started.
    ModifySpotFleetRequestResponse:
      type: object
      example:
        Return: true
      properties:
        return:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'If the request succeeds, the response returns <code>true</code>. If the request fails, no response is returned, and instead an error message is returned.'
      description: Contains the output of ModifySpotFleetRequest.
    LaunchTemplateConfig:
      type: object
      properties:
        launchTemplateSpecification:
          allOf:
            - $ref: '#/components/schemas/FleetLaunchTemplateSpecification'
            - description: The launch template.
        overrides:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateOverridesList'
            - description: Any parameters that you specify override the same parameters in the launch template.
      description: Describes a launch template and overrides.
    ModifyTrafficMirrorFilterNetworkServicesResult:
      type: object
      properties:
        trafficMirrorFilter:
          allOf:
            - $ref: '#/components/schemas/TrafficMirrorFilter'
            - description: The Traffic Mirror filter that the network service is associated with.
    TrafficMirrorNetworkService:
      type: string
      enum:
        - amazon-dns
    ModifyTrafficMirrorFilterRuleResult:
      type: object
      properties:
        trafficMirrorFilterRule:
          allOf:
            - $ref: '#/components/schemas/TrafficMirrorFilterRule'
            - description: Modifies a Traffic Mirror rule.
    TrafficMirrorFilterRuleField:
      type: string
      enum:
        - destination-port-range
        - source-port-range
        - protocol
        - description
    ModifyTrafficMirrorSessionResult:
      type: object
      properties:
        trafficMirrorSession:
          allOf:
            - $ref: '#/components/schemas/TrafficMirrorSession'
            - description: Information about the Traffic Mirror session.
    TrafficMirrorSessionField:
      type: string
      enum:
        - packet-length
        - description
        - virtual-network-id
    ModifyTransitGatewayResult:
      type: object
      properties:
        transitGateway:
          $ref: '#/components/schemas/TransitGateway'
    ModifyTransitGatewayPrefixListReferenceResult:
      type: object
      properties:
        transitGatewayPrefixListReference:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayPrefixListReference'
            - description: Information about the prefix list reference.
    ModifyTransitGatewayVpcAttachmentResult:
      type: object
      properties:
        transitGatewayVpcAttachment:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayVpcAttachment'
            - description: Information about the modified attachment.
    ModifyVolumeResult:
      type: object
      properties:
        volumeModification:
          allOf:
            - $ref: '#/components/schemas/VolumeModification'
            - description: Information about the volume modification.
    ModifyVpcEndpointResult:
      type: object
      properties:
        return:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Returns <code>true</code> if the request succeeds; otherwise, it returns an error.'
    ModifyVpcEndpointConnectionNotificationResult:
      type: object
      properties:
        return:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Returns <code>true</code> if the request succeeds; otherwise, it returns an error.'
    ModifyVpcEndpointServiceConfigurationResult:
      type: object
      properties:
        return:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Returns <code>true</code> if the request succeeds; otherwise, it returns an error.'
    ModifyVpcEndpointServicePayerResponsibilityResult:
      type: object
      properties:
        return:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Returns <code>true</code> if the request succeeds; otherwise, it returns an error.'
    ModifyVpcEndpointServicePermissionsResult:
      type: object
      properties:
        return:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Returns <code>true</code> if the request succeeds; otherwise, it returns an error.'
    ModifyVpcPeeringConnectionOptionsResult:
      type: object
      properties:
        accepterPeeringConnectionOptions:
          allOf:
            - $ref: '#/components/schemas/PeeringConnectionOptions'
            - description: Information about the VPC peering connection options for the accepter VPC.
        requesterPeeringConnectionOptions:
          allOf:
            - $ref: '#/components/schemas/PeeringConnectionOptions'
            - description: Information about the VPC peering connection options for the requester VPC.
    ModifyVpcTenancyResult:
      type: object
      properties:
        return:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Returns <code>true</code> if the request succeeds; otherwise, returns an error.'
    ModifyVpnConnectionResult:
      type: object
      properties:
        vpnConnection:
          $ref: '#/components/schemas/VpnConnection'
    ModifyVpnConnectionOptionsResult:
      type: object
      properties:
        vpnConnection:
          $ref: '#/components/schemas/VpnConnection'
    ModifyVpnTunnelCertificateResult:
      type: object
      properties:
        vpnConnection:
          $ref: '#/components/schemas/VpnConnection'
    ModifyVpnTunnelOptionsResult:
      type: object
      properties:
        vpnConnection:
          $ref: '#/components/schemas/VpnConnection'
    Phase1EncryptionAlgorithmsRequestList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Phase1EncryptionAlgorithmsRequestListValue'
          - xml:
              name: item
    Phase2EncryptionAlgorithmsRequestList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Phase2EncryptionAlgorithmsRequestListValue'
          - xml:
              name: item
    Phase1IntegrityAlgorithmsRequestList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Phase1IntegrityAlgorithmsRequestListValue'
          - xml:
              name: item
    Phase2IntegrityAlgorithmsRequestList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Phase2IntegrityAlgorithmsRequestListValue'
          - xml:
              name: item
    Phase1DHGroupNumbersRequestList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Phase1DHGroupNumbersRequestListValue'
          - xml:
              name: item
    Phase2DHGroupNumbersRequestList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Phase2DHGroupNumbersRequestListValue'
          - xml:
              name: item
    MonitorInstancesResult:
      type: object
      properties:
        instancesSet:
          allOf:
            - $ref: '#/components/schemas/InstanceMonitoringList'
            - description: The monitoring information.
    MoveAddressToVpcResult:
      type: object
      example:
        Status: MoveInProgress
      properties:
        allocationId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The allocation ID for the Elastic IP address.
        status:
          allOf:
            - $ref: '#/components/schemas/Status'
            - description: The status of the move of the IP address.
    MoveByoipCidrToIpamResult:
      type: object
      properties:
        byoipCidr:
          $ref: '#/components/schemas/ByoipCidr'
    ProvisionByoipCidrResult:
      type: object
      properties:
        byoipCidr:
          allOf:
            - $ref: '#/components/schemas/ByoipCidr'
            - description: Information about the address range.
    ProvisionIpamPoolCidrResult:
      type: object
      properties:
        ipamPoolCidr:
          allOf:
            - $ref: '#/components/schemas/IpamPoolCidr'
            - description: Information about the provisioned CIDR.
    ProvisionPublicIpv4PoolCidrResult:
      type: object
      properties:
        poolId:
          allOf:
            - $ref: '#/components/schemas/Ipv4PoolEc2Id'
            - description: The ID of the pool that you want to provision the CIDR to.
        poolAddressRange:
          $ref: '#/components/schemas/PublicIpv4PoolRange'
    PurchaseHostReservationResult:
      type: object
      properties:
        clientToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.'
        currencyCode:
          allOf:
            - $ref: '#/components/schemas/CurrencyCodeValues'
            - description: 'The currency in which the <code>totalUpfrontPrice</code> and <code>totalHourlyPrice</code> amounts are specified. At this time, the only supported currency is <code>USD</code>.'
        purchase:
          allOf:
            - $ref: '#/components/schemas/PurchaseSet'
            - description: Describes the details of the purchase.
        totalHourlyPrice:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The total hourly price of the reservation calculated per hour.
        totalUpfrontPrice:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The total amount charged to your account when you purchase the reservation.
    PurchaseReservedInstancesOfferingResult:
      type: object
      properties:
        reservedInstancesId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The IDs of the purchased Reserved Instances. If your purchase crosses into a discounted pricing tier, the final Reserved Instances IDs might change. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts-reserved-instances-application.html#crossing-pricing-tiers">Crossing pricing tiers</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.'
      description: Contains the output of PurchaseReservedInstancesOffering.
    Double:
      type: number
      format: double
    CurrencyCodeValues:
      type: string
      enum:
        - USD
    PurchaseScheduledInstancesResult:
      type: object
      example:
        ScheduledInstanceSet:
          - AvailabilityZone: us-west-2b
            CreateDate: '2016-01-25T21:43:38.612Z'
            HourlyPrice: '0.095'
            InstanceCount: 1
            InstanceType: c4.large
            NetworkPlatform: EC2-VPC
            NextSlotStartTime: '2016-01-31T09:00:00Z'
            Platform: Linux/UNIX
            Recurrence:
              Frequency: Weekly
              Interval: 1
              OccurrenceDaySet:
                - 1
              OccurrenceRelativeToEnd: false
              OccurrenceUnit: ''
            ScheduledInstanceId: sci-1234-1234-1234-1234-123456789012
            SlotDurationInHours: 32
            TermEndDate: '2017-01-31T09:00:00Z'
            TermStartDate: '2016-01-31T09:00:00Z'
            TotalScheduledInstanceHours: 1696
      properties:
        scheduledInstanceSet:
          allOf:
            - $ref: '#/components/schemas/PurchasedScheduledInstanceSet'
            - description: Information about the Scheduled Instances.
      description: Contains the output of PurchaseScheduledInstances.
    PurchaseRequest:
      type: object
      required:
        - InstanceCount
        - PurchaseToken
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The purchase token.
      description: Describes a request to purchase Scheduled Instances.
    RegisterImageResult:
      type: object
      properties:
        imageId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the newly registered AMI.
      description: Contains the output of RegisterImage.
    RegisterInstanceEventNotificationAttributesResult:
      type: object
      properties:
        instanceTagAttribute:
          allOf:
            - $ref: '#/components/schemas/InstanceTagNotificationAttribute'
            - description: The resulting set of tag keys.
    RegisterTransitGatewayMulticastGroupMembersResult:
      type: object
      properties:
        registeredMulticastGroupMembers:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayMulticastRegisteredGroupMembers'
            - description: Information about the registered transit gateway multicast group members.
    RegisterTransitGatewayMulticastGroupSourcesResult:
      type: object
      properties:
        registeredMulticastGroupSources:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayMulticastRegisteredGroupSources'
            - description: Information about the transit gateway multicast group sources.
    RejectTransitGatewayMulticastDomainAssociationsResult:
      type: object
      properties:
        associations:
          $ref: '#/components/schemas/TransitGatewayMulticastDomainAssociations'
    RejectTransitGatewayPeeringAttachmentResult:
      type: object
      properties:
        transitGatewayPeeringAttachment:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayPeeringAttachment'
            - description: The transit gateway peering attachment.
    RejectTransitGatewayVpcAttachmentResult:
      type: object
      properties:
        transitGatewayVpcAttachment:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayVpcAttachment'
            - description: Information about the attachment.
    RejectVpcEndpointConnectionsResult:
      type: object
      properties:
        unsuccessful:
          allOf:
            - $ref: '#/components/schemas/UnsuccessfulItemSet'
            - description: 'Information about the endpoints that were not rejected, if applicable.'
    RejectVpcPeeringConnectionResult:
      type: object
      properties:
        return:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Returns <code>true</code> if the request succeeds; otherwise, it returns an error.'
    ReleaseHostsResult:
      type: object
      properties:
        successful:
          allOf:
            - $ref: '#/components/schemas/ResponseHostIdList'
            - description: The IDs of the Dedicated Hosts that were successfully released.
        unsuccessful:
          allOf:
            - $ref: '#/components/schemas/UnsuccessfulItemList'
            - description: 'The IDs of the Dedicated Hosts that could not be released, including an error message.'
    ReleaseIpamPoolAllocationResult:
      type: object
      properties:
        success:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates if the release was successful.
    ReplaceIamInstanceProfileAssociationResult:
      type: object
      properties:
        iamInstanceProfileAssociation:
          allOf:
            - $ref: '#/components/schemas/IamInstanceProfileAssociation'
            - description: Information about the IAM instance profile association.
    ReplaceNetworkAclAssociationResult:
      type: object
      example:
        NewAssociationId: aclassoc-3999875b
      properties:
        newAssociationId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the new association.
    ReplaceRouteTableAssociationResult:
      type: object
      example:
        NewAssociationId: rtbassoc-3a1f0f58
      properties:
        newAssociationId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the new association.
        associationState:
          allOf:
            - $ref: '#/components/schemas/RouteTableAssociationState'
            - description: The state of the association.
    ReplaceTransitGatewayRouteResult:
      type: object
      properties:
        route:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayRoute'
            - description: Information about the modified route.
    ReportInstanceReasonCodes:
      type: string
      enum:
        - instance-stuck-in-state
        - unresponsive
        - not-accepting-credentials
        - password-not-available
        - performance-network
        - performance-instance-store
        - performance-ebs-volume
        - performance-other
        - other
    RequestSpotFleetResponse:
      type: object
      example:
        SpotFleetRequestId: sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE
      properties:
        spotFleetRequestId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Spot Fleet request.
      description: Contains the output of RequestSpotFleet.
    AllocationStrategy:
      type: string
      enum:
        - lowestPrice
        - diversified
        - capacityOptimized
        - capacityOptimizedPrioritized
    OnDemandAllocationStrategy:
      type: string
      enum:
        - lowestPrice
        - prioritized
    SpotMaintenanceStrategies:
      type: object
      properties:
        capacityRebalance:
          allOf:
            - $ref: '#/components/schemas/SpotCapacityRebalance'
            - description: 'The Spot Instance replacement strategy to use when Amazon EC2 emits a signal that your Spot Instance is at an elevated risk of being interrupted. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-capacity-rebalance.html">Capacity rebalancing</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.'
      description: The strategies for managing your Spot Instances that are at an elevated risk of being interrupted.
    ExcessCapacityTerminationPolicy:
      type: string
      enum:
        - noTermination
        - default
    LaunchSpecsList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/SpotFleetLaunchSpecification'
          - xml:
              name: item
    LaunchTemplateConfigList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/LaunchTemplateConfig'
          - xml:
              name: item
    FleetType:
      type: string
      enum:
        - request
        - maintain
        - instant
    InstanceInterruptionBehavior:
      type: string
      enum:
        - hibernate
        - stop
        - terminate
    LoadBalancersConfig:
      type: object
      properties:
        classicLoadBalancersConfig:
          allOf:
            - $ref: '#/components/schemas/ClassicLoadBalancersConfig'
            - description: The Classic Load Balancers.
        targetGroupsConfig:
          allOf:
            - $ref: '#/components/schemas/TargetGroupsConfig'
            - description: The target groups.
      description: Describes the Classic Load Balancers and target groups to attach to a Spot Fleet request.
    TagSpecificationList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/TagSpecification'
          - xml:
              name: item
    RequestSpotInstancesResult:
      type: object
      properties:
        spotInstanceRequestSet:
          allOf:
            - $ref: '#/components/schemas/SpotInstanceRequestList'
            - description: One or more Spot Instance requests.
      description: Contains the output of RequestSpotInstances.
    RequestSpotLaunchSpecificationSecurityGroupIdList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/SecurityGroupId'
          - xml:
              name: item
    RequestSpotLaunchSpecificationSecurityGroupList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: item
    BlockDeviceMappingList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/BlockDeviceMapping'
          - xml:
              name: item
    IamInstanceProfileSpecification:
      type: object
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Resource Name (ARN) of the instance profile.
        name:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the instance profile.
      description: Describes an IAM instance profile.
    KernelId:
      type: string
    RunInstancesMonitoringEnabled:
      type: object
      required:
        - Enabled
      properties:
        enabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is enabled.'
      description: Describes the monitoring of an instance.
    InstanceNetworkInterfaceSpecificationList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/InstanceNetworkInterfaceSpecification'
          - xml:
              name: item
    SpotPlacement:
      type: object
      properties:
        availabilityZone:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The Availability Zone.</p> <p>[Spot Fleet only] To specify multiple Availability Zones, separate them using commas; for example, "us-west-2a, us-west-2b".</p>'
        groupName:
          allOf:
            - $ref: '#/components/schemas/PlacementGroupName'
            - description: The name of the placement group.
        tenancy:
          allOf:
            - $ref: '#/components/schemas/Tenancy'
            - description: The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of <code>dedicated</code> runs on single-tenant hardware. The <code>host</code> tenancy is not supported for Spot Instances.
      description: Describes Spot Instance placement.
    RamdiskId:
      type: string
    ResetAddressAttributeResult:
      type: object
      properties:
        address:
          allOf:
            - $ref: '#/components/schemas/AddressAttribute'
            - description: Information about the IP address.
    ResetEbsDefaultKmsKeyIdResult:
      type: object
      properties:
        kmsKeyId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Resource Name (ARN) of the default KMS key for EBS encryption by default.
    ResetFpgaImageAttributeResult:
      type: object
      properties:
        return:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Is <code>true</code> if the request succeeds, and an error otherwise.'
    RestoreAddressToClassicResult:
      type: object
      example:
        PublicIp: 198.51.100.0
        Status: MoveInProgress
      properties:
        publicIp:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Elastic IP address.
        status:
          allOf:
            - $ref: '#/components/schemas/Status'
            - description: The move status for the IP address.
    RestoreImageFromRecycleBinResult:
      type: object
      properties:
        return:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Returns <code>true</code> if the request succeeds; otherwise, it returns an error.'
    RestoreManagedPrefixListVersionResult:
      type: object
      properties:
        prefixList:
          allOf:
            - $ref: '#/components/schemas/ManagedPrefixList'
            - description: Information about the prefix list.
    RestoreSnapshotFromRecycleBinResult:
      type: object
      properties:
        snapshotId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the snapshot.
        outpostArn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The ARN of the Outpost on which the snapshot is stored. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshots-outposts.html">Amazon EBS local snapshots on Outposts</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.'
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The description for the snapshot.
        encrypted:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the snapshot is encrypted.
        ownerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Amazon Web Services account that owns the EBS snapshot.
        progress:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The progress of the snapshot, as a percentage.'
        startTime:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: The time stamp when the snapshot was initiated.
        status:
          allOf:
            - $ref: '#/components/schemas/SnapshotState'
            - description: The state of the snapshot.
        volumeId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the volume that was used to create the snapshot.
        volumeSize:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The size of the volume, in GiB.'
    RestoreSnapshotTierResult:
      type: object
      properties:
        snapshotId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the snapshot.
        restoreStartTime:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: The date and time when the snapshot restore process started.
        restoreDuration:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: For temporary restores only. The number of days for which the archived snapshot is temporarily restored.
        isPermanentRestore:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the snapshot is permanently restored. <code>true</code> indicates a permanent restore. <code>false</code> indicates a temporary restore.
    RevokeClientVpnIngressResult:
      type: object
      properties:
        status:
          allOf:
            - $ref: '#/components/schemas/ClientVpnAuthorizationRuleStatus'
            - description: The current state of the authorization rule.
    RevokeSecurityGroupEgressResult:
      type: object
      properties:
        return:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Returns <code>true</code> if the request succeeds; otherwise, returns an error.'
        unknownIpPermissionSet:
          allOf:
            - $ref: '#/components/schemas/IpPermissionList'
            - description: 'The outbound rules that were unknown to the service. In some cases, <code>unknownIpPermissionSet</code> might be in a different format from the request parameter. '
    RevokeSecurityGroupIngressResult:
      type: object
      properties:
        return:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Returns <code>true</code> if the request succeeds; otherwise, returns an error.'
        unknownIpPermissionSet:
          allOf:
            - $ref: '#/components/schemas/IpPermissionList'
            - description: 'The inbound rules that were unknown to the service. In some cases, <code>unknownIpPermissionSet</code> might be in a different format from the request parameter. '
    Reservation:
      type: object
      example: {}
      properties:
        groupSet:
          allOf:
            - $ref: '#/components/schemas/GroupIdentifierList'
            - description: '[EC2-Classic only] The security groups.'
        instancesSet:
          allOf:
            - $ref: '#/components/schemas/InstanceList'
            - description: The instances.
        ownerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Amazon Web Services account that owns the reservation.
        requesterId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The ID of the requester that launched the instances on your behalf (for example, Amazon Web Services Management Console or Auto Scaling).'
        reservationId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the reservation.
      description: 'Describes a launch request for one or more instances, and includes owner, requester, and security group information that applies to all instances in the launch request.'
    Tenancy:
      type: string
      enum:
        - default
        - dedicated
        - host
    InstanceNetworkInterfaceSpecification:
      type: object
      properties:
        associatePublicIpAddress:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Indicates whether to assign a public IPv4 address to an instance you launch in a VPC. The public IP address can only be assigned to a network interface for eth0, and can only be assigned to a new network interface, not an existing one. You cannot specify more than one network interface in the request. If launching into a default subnet, the default value is <code>true</code>.'
        deleteOnTermination:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'If set to <code>true</code>, the interface is deleted when the instance is terminated. You can specify <code>true</code> only if creating a new network interface when launching an instance.'
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The description of the network interface. Applies only if creating a network interface when launching an instance.
        deviceIndex:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: '<p>The position of the network interface in the attachment order. A primary network interface has a device index of 0.</p> <p>If you specify a network interface when launching an instance, you must specify the device index.</p>'
        SecurityGroupId:
          allOf:
            - $ref: '#/components/schemas/SecurityGroupIdStringList'
            - description: The IDs of the security groups for the network interface. Applies only if creating a network interface when launching an instance.
        ipv6AddressCount:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: A number of IPv6 addresses to assign to the network interface. Amazon EC2 chooses the IPv6 addresses from the range of the subnet. You cannot specify this option and the option to assign specific IPv6 addresses in the same request. You can specify this option if you've specified a minimum number of instances to launch.
        ipv6AddressesSet:
          allOf:
            - $ref: '#/components/schemas/InstanceIpv6AddressList'
            - description: One or more IPv6 addresses to assign to the network interface. You cannot specify this option and the option to assign a number of IPv6 addresses in the same request. You cannot specify this option if you've specified a minimum number of instances to launch.
        networkInterfaceId:
          allOf:
            - $ref: '#/components/schemas/NetworkInterfaceId'
            - description: '<p>The ID of the network interface.</p> <p>If you are creating a Spot Fleet, omit this parameter because you can’t specify a network interface ID in a launch specification.</p>'
        privateIpAddress:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The private IPv4 address of the network interface. Applies only if creating a network interface when launching an instance. You cannot specify this option if you''re launching more than one instance in a <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html">RunInstances</a> request.'
        privateIpAddressesSet:
          allOf:
            - $ref: '#/components/schemas/PrivateIpAddressSpecificationList'
            - description: 'One or more private IPv4 addresses to assign to the network interface. Only one private IPv4 address can be designated as primary. You cannot specify this option if you''re launching more than one instance in a <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html">RunInstances</a> request.'
        secondaryPrivateIpAddressCount:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The number of secondary private IPv4 addresses. You can''t specify this option and specify more than one private IP address using the private IP addresses option. You cannot specify this option if you''re launching more than one instance in a <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html">RunInstances</a> request.'
        subnetId:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: '<p>The index of the network card. Some instance types support multiple network cards. The primary network interface must be assigned to network card index 0. The default is network card index 0.</p> <p>If you are using <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotInstances.html">RequestSpotInstances</a> to create Spot Instances, omit this parameter because you can’t specify the network card index when using this API. To specify the network card index, use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html">RunInstances</a>.</p>'
        Ipv4Prefix:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of IPv4 delegated prefixes to be automatically assigned to the network interface. You cannot use this option if you use the <code>Ipv4Prefix</code> option.
        Ipv6Prefix:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of IPv6 delegated prefixes to be automatically assigned to the network interface. You cannot use this option if you use the <code>Ipv6Prefix</code> option.
      description: Describes a network interface.
    ElasticGpuSpecification:
      type: object
      required:
        - Type
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The type of Elastic Graphics accelerator. For more information about the values to specify for <code>Type</code>, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-graphics.html#elastic-graphics-basics">Elastic Graphics Basics</a>, specifically the Elastic Graphics accelerator column, in the <i>Amazon Elastic Compute Cloud User Guide for Windows Instances</i>.'
      description: A specification for an Elastic Graphics accelerator.
    ElasticInferenceAccelerator:
      type: object
      required:
        - Type
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/ElasticInferenceAcceleratorCount'
            - description: '<p> The number of elastic inference accelerators to attach to the instance. </p> <p>Default: 1</p>'
      description: ' Describes an elastic inference accelerator. '
    SpotMarketOptions:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/InstanceInterruptionBehavior'
            - description: The behavior when a Spot Instance is interrupted. The default is <code>terminate</code>.
      description: The options for Spot Instances.
    LicenseConfigurationRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Resource Name (ARN) of the license configuration.
      description: Describes a license configuration.
    InstanceMetadataTagsState:
      type: string
      enum:
        - disabled
        - enabled
    InstanceAutoRecoveryState:
      type: string
      enum:
        - disabled
        - default
    RunScheduledInstancesResult:
      type: object
      example:
        InstanceIdSet:
          - i-1234567890abcdef0
      properties:
        instanceIdSet:
          allOf:
            - $ref: '#/components/schemas/InstanceIdSet'
            - description: The IDs of the newly launched instances.
      description: Contains the output of RunScheduledInstances.
    ScheduledInstancesMonitoring:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether monitoring is enabled.
      description: Describes whether monitoring is enabled for a Scheduled Instance.
    SearchLocalGatewayRoutesResult:
      type: object
      properties:
        routeSet:
          allOf:
            - $ref: '#/components/schemas/LocalGatewayRouteList'
            - description: Information about the routes.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    SearchTransitGatewayMulticastGroupsResult:
      type: object
      properties:
        multicastGroups:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayMulticastGroupList'
            - description: Information about the transit gateway multicast group.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    SearchTransitGatewayRoutesResult:
      type: object
      properties:
        routeSet:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayRouteList'
            - description: Information about the routes.
        additionalRoutesAvailable:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether there are additional routes available.
    StartInstancesResult:
      type: object
      example:
        StartingInstances:
          - CurrentState:
              Code: 0
              Name: pending
            InstanceId: i-1234567890abcdef0
            PreviousState:
              Code: 80
              Name: stopped
      properties:
        instancesSet:
          allOf:
            - $ref: '#/components/schemas/InstanceStateChangeList'
            - description: Information about the started instances.
    StartNetworkInsightsAccessScopeAnalysisResult:
      type: object
      properties:
        networkInsightsAccessScopeAnalysis:
          allOf:
            - $ref: '#/components/schemas/NetworkInsightsAccessScopeAnalysis'
            - description: The Network Access Scope analysis.
    StartNetworkInsightsAnalysisResult:
      type: object
      properties:
        networkInsightsAnalysis:
          allOf:
            - $ref: '#/components/schemas/NetworkInsightsAnalysis'
            - description: Information about the network insights analysis.
    ResourceArn:
      type: string
      minLength: 1
      maxLength: 1283
    StartVpcEndpointServicePrivateDnsVerificationResult:
      type: object
      properties:
        return:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Returns <code>true</code> if the request succeeds; otherwise, it returns an error.'
    StopInstancesResult:
      type: object
      example:
        StoppingInstances:
          - CurrentState:
              Code: 64
              Name: stopping
            InstanceId: i-1234567890abcdef0
            PreviousState:
              Code: 16
              Name: running
      properties:
        instancesSet:
          allOf:
            - $ref: '#/components/schemas/InstanceStateChangeList'
            - description: Information about the stopped instances.
    TerminateClientVpnConnectionsResult:
      type: object
      properties:
        clientVpnEndpointId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Client VPN endpoint.
        username:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The user who established the terminated client connections.
        connectionStatuses:
          allOf:
            - $ref: '#/components/schemas/TerminateConnectionStatusSet'
            - description: The current state of the client connections.
    TerminateInstancesResult:
      type: object
      example:
        TerminatingInstances:
          - CurrentState:
              Code: 32
              Name: shutting-down
            InstanceId: i-1234567890abcdef0
            PreviousState:
              Code: 16
              Name: running
      properties:
        instancesSet:
          allOf:
            - $ref: '#/components/schemas/InstanceStateChangeList'
            - description: Information about the terminated instances.
    UnassignIpv6AddressesResult:
      type: object
      properties:
        networkInterfaceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the network interface.
        unassignedIpv6Addresses:
          allOf:
            - $ref: '#/components/schemas/Ipv6AddressList'
            - description: The IPv6 addresses that have been unassigned from the network interface.
        unassignedIpv6PrefixSet:
          allOf:
            - $ref: '#/components/schemas/IpPrefixList'
            - description: The IPv4 prefixes that have been unassigned from the network interface.
    UnmonitorInstancesResult:
      type: object
      properties:
        instancesSet:
          allOf:
            - $ref: '#/components/schemas/InstanceMonitoringList'
            - description: The monitoring information.
    UpdateSecurityGroupRuleDescriptionsEgressResult:
      type: object
      example: {}
      properties:
        return:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Returns <code>true</code> if the request succeeds; otherwise, returns an error.'
    SecurityGroupRuleDescription:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The description of the security group rule.
      description: <p>Describes the description of a security group rule.</p> <p>You can use this when you want to update the security group rule description for either an inbound or outbound rule.</p>
    UpdateSecurityGroupRuleDescriptionsIngressResult:
      type: object
      example: {}
      properties:
        return:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Returns <code>true</code> if the request succeeds; otherwise, returns an error.'
    WithdrawByoipCidrResult:
      type: object
      properties:
        byoipCidr:
          allOf:
            - $ref: '#/components/schemas/ByoipCidr'
            - description: Information about the address pool.
    AcceleratorCount:
      type: object
      properties:
        min:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The minimum number of accelerators. If this parameter is not specified, there is no minimum limit.'
        max:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The maximum number of accelerators. If this parameter is not specified, there is no maximum limit.'
      description: 'The minimum and maximum number of accelerators (GPUs, FPGAs, or Amazon Web Services Inferentia chips) on an instance.'
    AcceleratorManufacturer:
      type: string
      enum:
        - nvidia
        - amd
        - amazon-web-services
        - xilinx
    AcceleratorName:
      type: string
      enum:
        - a100
        - v100
        - k80
        - t4
        - m60
        - radeon-pro-v520
        - vu9p
    AcceleratorNameSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/AcceleratorName'
          - xml:
              name: item
    AcceleratorTotalMemoryMiB:
      type: object
      properties:
        min:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The minimum amount of accelerator memory, in MiB. If this parameter is not specified, there is no minimum limit.'
        max:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The maximum amount of accelerator memory, in MiB. If this parameter is not specified, there is no maximum limit.'
      description: 'The minimum and maximum amount of total accelerator memory, in MiB.'
    AcceleratorType:
      type: string
      enum:
        - gpu
        - fpga
        - inference
    AcceleratorTypeSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/AcceleratorType'
          - xml:
              name: item
    ReservedInstanceIdSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ReservationId'
          - xml:
              name: ReservedInstanceId
    TargetConfigurationRequestSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/TargetConfigurationRequest'
          - xml:
              name: TargetConfigurationRequest
    AcceptReservedInstancesExchangeQuoteRequest:
      type: object
      required:
        - ReservedInstanceIds
      title: AcceptReservedInstancesExchangeQuoteRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        ReservedInstanceId:
          allOf:
            - $ref: '#/components/schemas/ReservedInstanceIdSet'
            - description: The IDs of the Convertible Reserved Instances to exchange for another Convertible Reserved Instance of the same or higher value.
        TargetConfiguration:
          allOf:
            - $ref: '#/components/schemas/TargetConfigurationRequestSet'
            - description: The configuration of the target Convertible Reserved Instance to exchange for your current Convertible Reserved Instances.
      description: Contains the parameters for accepting the quote.
    AcceptTransitGatewayMulticastDomainAssociationsRequest:
      type: object
      title: AcceptTransitGatewayMulticastDomainAssociationsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    TransitGatewayMulticastDomainAssociations:
      type: object
      properties:
        transitGatewayMulticastDomainId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the transit gateway multicast domain.
        transitGatewayAttachmentId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the transit gateway attachment.
        resourceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the resource.
        resourceType:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayAttachmentResourceType'
            - description: 'The type of resource, for example a VPC attachment.'
        resourceOwnerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: ' The ID of the Amazon Web Services account that owns the resource.'
        subnets:
          allOf:
            - $ref: '#/components/schemas/SubnetAssociationList'
            - description: The subnets associated with the multicast domain.
      description: Describes the multicast domain associations.
    AcceptTransitGatewayPeeringAttachmentRequest:
      type: object
      required:
        - TransitGatewayAttachmentId
      title: AcceptTransitGatewayPeeringAttachmentRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    TransitGatewayPeeringAttachment:
      type: object
      properties:
        transitGatewayAttachmentId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the transit gateway peering attachment.
        requesterTgwInfo:
          allOf:
            - $ref: '#/components/schemas/PeeringTgwInfo'
            - description: Information about the requester transit gateway.
        accepterTgwInfo:
          allOf:
            - $ref: '#/components/schemas/PeeringTgwInfo'
            - description: Information about the accepter transit gateway.
        status:
          allOf:
            - $ref: '#/components/schemas/PeeringAttachmentStatus'
            - description: The status of the transit gateway peering attachment.
        state:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayAttachmentState'
            - description: The state of the transit gateway peering attachment. Note that the <code>initiating</code> state has been deprecated.
        creationTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The time the transit gateway peering attachment was created.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags for the transit gateway peering attachment.
      description: Describes the transit gateway peering attachment.
    AcceptTransitGatewayVpcAttachmentRequest:
      type: object
      required:
        - TransitGatewayAttachmentId
      title: AcceptTransitGatewayVpcAttachmentRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    TransitGatewayVpcAttachment:
      type: object
      properties:
        transitGatewayAttachmentId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the attachment.
        transitGatewayId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the transit gateway.
        vpcId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the VPC.
        vpcOwnerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Amazon Web Services account that owns the VPC.
        state:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayAttachmentState'
            - description: The state of the VPC attachment. Note that the <code>initiating</code> state has been deprecated.
        subnetIds:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: The IDs of the subnets.
        creationTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The creation time.
        options:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayVpcAttachmentOptions'
            - description: The VPC attachment options.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags for the VPC attachment.
      description: Describes a VPC attachment.
    VpcEndpointIdList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/VpcEndpointId'
          - xml:
              name: item
    AcceptVpcEndpointConnectionsRequest:
      type: object
      required:
        - ServiceId
        - VpcEndpointIds
      title: AcceptVpcEndpointConnectionsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/VpcEndpointServiceId'
            - description: The ID of the VPC endpoint service.
        VpcEndpointId:
          allOf:
            - $ref: '#/components/schemas/VpcEndpointIdList'
            - description: The IDs of one or more interface VPC endpoints.
    UnsuccessfulItemSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/UnsuccessfulItem'
          - xml:
              name: item
    AcceptVpcPeeringConnectionRequest:
      type: object
      title: AcceptVpcPeeringConnectionRequest
      properties:
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        vpcPeeringConnectionId:
          allOf:
            - $ref: '#/components/schemas/VpcPeeringConnectionId'
            - description: The ID of the VPC peering connection. You must specify this parameter in the request.
    VpcPeeringConnection:
      type: object
      properties:
        accepterVpcInfo:
          allOf:
            - $ref: '#/components/schemas/VpcPeeringConnectionVpcInfo'
            - description: Information about the accepter VPC. CIDR block information is only returned when describing an active VPC peering connection.
        expirationTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The time that an unaccepted VPC peering connection will expire.
        requesterVpcInfo:
          allOf:
            - $ref: '#/components/schemas/VpcPeeringConnectionVpcInfo'
            - description: Information about the requester VPC. CIDR block information is only returned when describing an active VPC peering connection.
        status:
          allOf:
            - $ref: '#/components/schemas/VpcPeeringConnectionStateReason'
            - description: The status of the VPC peering connection.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: Any tags assigned to the resource.
        vpcPeeringConnectionId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the VPC peering connection.
      description: Describes a VPC peering connection.
    PathComponentList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/PathComponent'
          - xml:
              name: item
    AccessScopeAnalysisFinding:
      type: object
      properties:
        networkInsightsAccessScopeAnalysisId:
          allOf:
            - $ref: '#/components/schemas/NetworkInsightsAccessScopeAnalysisId'
            - description: The ID of the Network Access Scope analysis.
        networkInsightsAccessScopeId:
          allOf:
            - $ref: '#/components/schemas/NetworkInsightsAccessScopeId'
            - description: The ID of the Network Access Scope.
        findingId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the finding.
        findingComponentSet:
          allOf:
            - $ref: '#/components/schemas/PathComponentList'
            - description: The finding components.
      description: Describes a finding for a Network Access Scope.
    AccessScopeAnalysisFindingList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/AccessScopeAnalysisFinding'
          - xml:
              name: item
    PathStatement:
      type: object
      properties:
        packetHeaderStatement:
          allOf:
            - $ref: '#/components/schemas/PacketHeaderStatement'
            - description: The packet header statement.
        resourceStatement:
          allOf:
            - $ref: '#/components/schemas/ResourceStatement'
            - description: The resource statement.
      description: Describes a path statement.
    ThroughResourcesStatementList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ThroughResourcesStatement'
          - xml:
              name: item
    AccessScopePath:
      type: object
      properties:
        source:
          allOf:
            - $ref: '#/components/schemas/PathStatement'
            - description: The source.
        destination:
          allOf:
            - $ref: '#/components/schemas/PathStatement'
            - description: The destination.
        throughResourceSet:
          allOf:
            - $ref: '#/components/schemas/ThroughResourcesStatementList'
            - description: The through resources.
      description: Describes a path.
    AccessScopePathList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/AccessScopePath'
          - xml:
              name: item
    AccessScopePathListRequest:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/AccessScopePathRequest'
          - xml:
              name: item
    PathStatementRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/ResourceStatementRequest'
            - description: The resource statement.
      description: Describes a path statement.
    ThroughResourcesStatementRequestList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ThroughResourcesStatementRequest'
          - xml:
              name: item
    AccountAttributeValueList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/AccountAttributeValue'
          - xml:
              name: item
    AccountAttribute:
      type: object
      properties:
        attributeName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the account attribute.
        attributeValueSet:
          allOf:
            - $ref: '#/components/schemas/AccountAttributeValueList'
            - description: The values for the account attribute.
      description: Describes an account attribute.
    AccountAttributeList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/AccountAttribute'
          - xml:
              name: item
    AccountAttributeNameStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/AccountAttributeName'
          - xml:
              name: attributeName
    AccountAttributeValue:
      type: object
      properties:
        attributeValue:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The value of the attribute.
      description: Describes a value of an account attribute.
    InstanceHealthStatus:
      type: string
      enum:
        - healthy
        - unhealthy
    ActiveInstance:
      type: object
      properties:
        instanceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the instance.
        instanceType:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The instance type.
        spotInstanceRequestId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Spot Instance request.
        instanceHealth:
          allOf:
            - $ref: '#/components/schemas/InstanceHealthStatus'
            - description: 'The health status of the instance. If the status of either the instance status check or the system status check is <code>impaired</code>, the health status of the instance is <code>unhealthy</code>. Otherwise, the health status is <code>healthy</code>.'
      description: Describes a running instance in a Spot Fleet.
    ActiveInstanceSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ActiveInstance'
          - xml:
              name: item
    ActivityStatus:
      type: string
      enum:
        - error
        - pending_fulfillment
        - pending_termination
        - fulfilled
    AddIpamOperatingRegionSet:
      type: array
      items:
        $ref: '#/components/schemas/AddIpamOperatingRegion'
      minItems: 0
      maxItems: 50
    AddPrefixListEntries:
      type: array
      items:
        $ref: '#/components/schemas/AddPrefixListEntry'
      minItems: 0
      maxItems: 100
    AnalysisComponent:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the component.
        arn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Resource Name (ARN) of the component.
        name:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the analysis component.
      description: Describes a path component.
    AdditionalDetail:
      type: object
      properties:
        additionalDetailType:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The information type.
        component:
          allOf:
            - $ref: '#/components/schemas/AnalysisComponent'
            - description: The path component.
      description: Describes an additional detail for a path analysis.
    AdditionalDetailList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/AdditionalDetail'
          - xml:
              name: item
    DomainType:
      type: string
      enum:
        - vpc
        - standard
    Address:
      type: object
      properties:
        instanceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the instance that the address is associated with (if any).
        publicIp:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Elastic IP address.
        allocationId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID representing the allocation of the address for use with EC2-VPC.
        associationId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID representing the association of the address with an instance in a VPC.
        domain:
          allOf:
            - $ref: '#/components/schemas/DomainType'
            - description: Indicates whether this Elastic IP address is for use with instances in EC2-Classic (<code>standard</code>) or instances in a VPC (<code>vpc</code>).
        networkInterfaceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the network interface.
        networkInterfaceOwnerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Amazon Web Services account that owns the network interface.
        privateIpAddress:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The private IP address associated with the Elastic IP address.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: Any tags assigned to the Elastic IP address.
        publicIpv4Pool:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of an address pool.
        networkBorderGroup:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The name of the unique set of Availability Zones, Local Zones, or Wavelength Zones from which Amazon Web Services advertises IP addresses.'
        customerOwnedIp:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The customer-owned IP address.
        customerOwnedIpv4Pool:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the customer-owned address pool.
        carrierIp:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The carrier IP address associated. This option is only available for network interfaces which reside in a subnet in a Wavelength Zone (for example an EC2 instance). '
      description: 'Describes an Elastic IP address, or a carrier IP address.'
    PublicIpAddress:
      type: string
    PtrUpdateStatus:
      type: object
      properties:
        value:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The value for the PTR record update.
        status:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The status of the PTR record update.
        reason:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The reason for the PTR record update.
      description: The status of an updated pointer (PTR) record for an Elastic IP address.
    AddressAttribute:
      type: object
      properties:
        publicIp:
          allOf:
            - $ref: '#/components/schemas/PublicIpAddress'
            - description: The public IP address.
        allocationId:
          allOf:
            - $ref: '#/components/schemas/AllocationId'
            - description: '[EC2-VPC] The allocation ID.'
        ptrRecord:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The pointer (PTR) record for the IP address.
        ptrRecordUpdate:
          allOf:
            - $ref: '#/components/schemas/PtrUpdateStatus'
            - description: The updated PTR record for the IP address.
      description: The attributes associated with an Elastic IP address.
    AddressAttributeName:
      type: string
      enum:
        - domain-name
    AddressFamily:
      type: string
      enum:
        - ipv4
        - ipv6
    AddressList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Address'
          - xml:
              name: item
    AddressMaxResults:
      type: integer
      minimum: 1
      maximum: 1000
    AddressSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/AddressAttribute'
          - xml:
              name: item
    AdvertiseByoipCidrRequest:
      type: object
      required:
        - Cidr
      title: AdvertiseByoipCidrRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    ByoipCidr:
      type: object
      properties:
        cidr:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The address range, in CIDR notation.'
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The description of the address range.
        statusMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'Upon success, contains the ID of the address pool. Otherwise, contains an error message.'
        state:
          allOf:
            - $ref: '#/components/schemas/ByoipCidrState'
            - description: The state of the address pool.
      description: Information about an address range that is provisioned for use with your Amazon Web Services resources through bring your own IP addresses (BYOIP).
    Affinity:
      type: string
      enum:
        - default
        - host
    AllocateAddressRequest:
      type: object
      title: AllocateAddressRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The ID of a customer-owned address pool. Use this parameter to let Amazon EC2 select an address from the address pool. Alternatively, specify a specific address from the address pool.'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/TagSpecificationList'
            - description: The tags to assign to the Elastic IP address.
    AutoPlacement:
      type: string
      enum:
        - 'on'
        - 'off'
    AllocateHostsRequest:
      type: object
      required:
        - AvailabilityZone
        - Quantity
      title: AllocateHostsRequest
      properties:
        autoPlacement:
          allOf:
            - $ref: '#/components/schemas/AutoPlacement'
            - description: '<p>Indicates whether the host accepts any untargeted instance launches that match its instance type configuration, or if it only accepts Host tenancy instance launches that specify its unique host ID. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/how-dedicated-hosts-work.html#dedicated-hosts-understanding"> Understanding auto-placement and affinity</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>Default: <code>on</code> </p>'
        availabilityZone:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Availability Zone in which to allocate the Dedicated Host.
        clientToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.'
        instanceType:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>Specifies the instance family to be supported by the Dedicated Hosts. If you specify an instance family, the Dedicated Hosts support multiple instance types within that instance family.</p> <p>If you want the Dedicated Hosts to support a specific instance type only, omit this parameter and specify <b>InstanceType</b> instead. You cannot specify <b>InstanceFamily</b> and <b>InstanceType</b> in the same request.</p>'
        quantity:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of Dedicated Hosts to allocate to your account with these parameters.
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Resource Name (ARN) of the Amazon Web Services Outpost on which to allocate the Dedicated Host.
    ResponseHostIdList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: item
    IpamPoolAllocationDisallowedCidrs:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: item
    AllocateIpamPoolCidrRequest:
      type: object
      required:
        - IpamPoolId
      title: AllocateIpamPoolCidrRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: A preview of the next available CIDR in a pool.
        DisallowedCidr:
          allOf:
            - $ref: '#/components/schemas/IpamPoolAllocationDisallowedCidrs'
            - description: Exclude a particular CIDR range from being returned by the pool.
    IpamPoolAllocation:
      type: object
      properties:
        cidr:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The CIDR for the allocation. A CIDR is a representation of an IP address and its associated network mask (or netmask) and refers to a range of IP addresses. An IPv4 CIDR example is <code>10.24.34.0/23</code>. An IPv6 CIDR example is <code>2001:DB8::/32</code>.'
        ipamPoolAllocationId:
          allOf:
            - $ref: '#/components/schemas/IpamPoolAllocationId'
            - description: The ID of an allocation.
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A description of the pool allocation.
        resourceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the resource.
        resourceType:
          allOf:
            - $ref: '#/components/schemas/IpamPoolAllocationResourceType'
            - description: The type of the resource.
        resourceRegion:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Web Services Region of the resource.
        resourceOwner:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The owner of the resource.
      description: 'In IPAM, an allocation is a CIDR assignment from an IPAM pool to another resource or IPAM pool.'
    AllocationIdList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/AllocationId'
          - xml:
              name: AllocationId
    AllocationIds:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/AllocationId'
          - xml:
              name: item
    AllocationState:
      type: string
      enum:
        - available
        - under-assessment
        - permanent-failure
        - released
        - released-permanent-failure
        - pending
    PrincipalType:
      type: string
      enum:
        - All
        - Service
        - OrganizationUnit
        - Account
        - User
        - Role
    AllowedPrincipal:
      type: object
      properties:
        principalType:
          allOf:
            - $ref: '#/components/schemas/PrincipalType'
            - description: The type of principal.
        principal:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Resource Name (ARN) of the principal.
      description: Describes a principal.
    AllowedPrincipalSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/AllowedPrincipal'
          - xml:
              name: item
    AllowsMultipleInstanceTypes:
      type: string
      enum:
        - 'on'
        - 'off'
    AlternatePathHint:
      type: object
      properties:
        componentId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the component.
        componentArn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Resource Name (ARN) of the component.
      description: Describes an potential intermediate component of a feasible path.
    AlternatePathHintList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/AlternatePathHint'
          - xml:
              name: item
    PortRange:
      type: object
      properties:
        from:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The first port in the range.
        to:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The last port in the range.
      description: Describes a range of ports.
    AnalysisAclRule:
      type: object
      properties:
        cidr:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The IPv4 address range, in CIDR notation.'
        egress:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the rule is an outbound rule.
        portRange:
          allOf:
            - $ref: '#/components/schemas/PortRange'
            - description: The range of ports.
        protocol:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The protocol.
        ruleAction:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Indicates whether to allow or deny traffic that matches the rule.
        ruleNumber:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The rule number.
      description: Describes a network access control (ACL) rule.
    AnalysisComponentList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/AnalysisComponent'
          - xml:
              name: item
    Port:
      type: integer
      minimum: 1
      maximum: 65535
    AnalysisLoadBalancerListener:
      type: object
      properties:
        loadBalancerPort:
          allOf:
            - $ref: '#/components/schemas/Port'
            - description: The port on which the load balancer is listening.
        instancePort:
          allOf:
            - $ref: '#/components/schemas/Port'
            - description: '[Classic Load Balancers] The back-end port for the listener.'
      description: Describes a load balancer listener.
    IpAddress:
      type: string
      pattern: '^([0-9]{1,3}.){3}[0-9]{1,3}$'
      minLength: 0
      maxLength: 15
    AnalysisLoadBalancerTarget:
      type: object
      properties:
        address:
          allOf:
            - $ref: '#/components/schemas/IpAddress'
            - description: The IP address.
        availabilityZone:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Availability Zone.
        instance:
          allOf:
            - $ref: '#/components/schemas/AnalysisComponent'
            - description: Information about the instance.
        port:
          allOf:
            - $ref: '#/components/schemas/Port'
            - description: The port on which the target is listening.
      description: Describes a load balancer target.
    IpAddressList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/IpAddress'
          - xml:
              name: item
    PortRangeList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/PortRange'
          - xml:
              name: item
    AnalysisPacketHeader:
      type: object
      properties:
        destinationAddressSet:
          allOf:
            - $ref: '#/components/schemas/IpAddressList'
            - description: The destination addresses.
        destinationPortRangeSet:
          allOf:
            - $ref: '#/components/schemas/PortRangeList'
            - description: The destination port ranges.
        protocol:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The protocol.
        sourceAddressSet:
          allOf:
            - $ref: '#/components/schemas/IpAddressList'
            - description: The source addresses.
        sourcePortRangeSet:
          allOf:
            - $ref: '#/components/schemas/PortRangeList'
            - description: The source port ranges.
      description: Describes a header. Reflects any changes made by a component as traffic passes through. The fields of an inbound header are null except for the first component of a path.
    AnalysisRouteTableRoute:
      type: object
      properties:
        destinationCidr:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The destination IPv4 address, in CIDR notation.'
        destinationPrefixListId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The prefix of the Amazon Web Service.
        egressOnlyInternetGatewayId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of an egress-only internet gateway.
        gatewayId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The ID of the gateway, such as an internet gateway or virtual private gateway.'
        instanceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The ID of the instance, such as a NAT instance.'
        natGatewayId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of a NAT gateway.
        networkInterfaceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of a network interface.
        origin:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>Describes how the route was created. The following are the possible values:</p> <ul> <li> <p>CreateRouteTable - The route was automatically created when the route table was created.</p> </li> <li> <p>CreateRoute - The route was manually added to the route table.</p> </li> <li> <p>EnableVgwRoutePropagation - The route was propagated by route propagation.</p> </li> </ul>'
        transitGatewayId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of a transit gateway.
        vpcPeeringConnectionId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of a VPC peering connection.
      description: Describes a route table route.
    AnalysisSecurityGroupRule:
      type: object
      properties:
        cidr:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The IPv4 address range, in CIDR notation.'
        direction:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The direction. The following are the possible values:</p> <ul> <li> <p>egress</p> </li> <li> <p>ingress</p> </li> </ul>'
        securityGroupId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The security group ID.
        portRange:
          allOf:
            - $ref: '#/components/schemas/PortRange'
            - description: The port range.
        prefixListId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The prefix list ID.
        protocol:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The protocol name.
      description: Describes a security group rule.
    AnalysisStatus:
      type: string
      enum:
        - running
        - succeeded
        - failed
    ApplySecurityGroupsToClientVpnTargetNetworkRequest:
      type: object
      required:
        - ClientVpnEndpointId
        - VpcId
        - SecurityGroupIds
      title: ApplySecurityGroupsToClientVpnTargetNetworkRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/VpcId'
            - description: The ID of the VPC in which the associated target network is located.
        SecurityGroupId:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    ClientVpnSecurityGroupIdSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/SecurityGroupId'
          - xml:
              name: item
    ArchitectureTypeList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ArchitectureType'
          - xml:
              name: item
    ArnList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ResourceArn'
          - xml:
              name: item
    IpPrefixList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: item
    AssignIpv6AddressesRequest:
      type: object
      required:
        - NetworkInterfaceId
      title: AssignIpv6AddressesRequest
      properties:
        ipv6AddressCount:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of additional IPv6 addresses to assign to the network interface. The specified number of IPv6 addresses are assigned in addition to the existing IPv6 addresses that are already assigned to the network interface. Amazon EC2 automatically selects the IPv6 addresses from the subnet range. You can't use this option if specifying specific IPv6 addresses.
        ipv6Addresses:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of IPv6 prefixes that Amazon Web Services automatically assigns to the network interface. You cannot use this option if you use the <code>Ipv6Prefixes</code> option.
        Ipv6Prefix:
          allOf:
            - $ref: '#/components/schemas/IpPrefixList'
            - description: One or more IPv6 prefixes assigned to the network interface. You cannot use this option if you use the <code>Ipv6PrefixCount</code> option.
        networkInterfaceId:
          allOf:
            - $ref: '#/components/schemas/NetworkInterfaceId'
            - description: The ID of the network interface.
    Ipv6AddressList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: item
    PrivateIpAddressStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: PrivateIpAddress
    AssignPrivateIpAddressesRequest:
      type: object
      required:
        - NetworkInterfaceId
      title: AssignPrivateIpAddressesRequest
      properties:
        allowReassignment:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether to allow an IP address that is already assigned to another network interface or instance to be reassigned to the specified network interface.
        networkInterfaceId:
          allOf:
            - $ref: '#/components/schemas/NetworkInterfaceId'
            - description: The ID of the network interface.
        privateIpAddress:
          allOf:
            - $ref: '#/components/schemas/PrivateIpAddressStringList'
            - description: '<p>One or more IP addresses to be assigned as a secondary private IP address to the network interface. You can''t specify this parameter when also specifying a number of secondary IP addresses.</p> <p>If you don''t specify an IP address, Amazon EC2 automatically selects an IP address within the subnet range.</p>'
        secondaryPrivateIpAddressCount:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of secondary IP addresses to assign to the network interface. You can't specify this parameter when also specifying private IP addresses.
        Ipv4Prefix:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of IPv4 prefixes that Amazon Web Services automatically assigns to the network interface. You cannot use this option if you use the <code>Ipv4 Prefixes</code> option.
      description: Contains the parameters for AssignPrivateIpAddresses.
    AssignedPrivateIpAddressList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/AssignedPrivateIpAddress'
          - xml:
              name: item
    Ipv4PrefixesList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Ipv4PrefixSpecification'
          - xml:
              name: item
    AssignedPrivateIpAddress:
      type: object
      properties:
        privateIpAddress:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The private IP address assigned to the network interface.
      description: Describes the private IP addresses assigned to a network interface.
    AssociateAddressRequest:
      type: object
      title: AssociateAddressRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '[EC2-Classic] The Elastic IP address to associate with the instance. This is required for EC2-Classic.'
        allowReassociation:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: '[EC2-VPC] For a VPC in an EC2-Classic account, specify true to allow an Elastic IP address that is already associated with an instance or network interface to be reassociated with the specified instance or network interface. Otherwise, the operation fails. In a VPC in an EC2-VPC-only account, reassociation is automatic, therefore you can specify false to ensure the operation fails if the Elastic IP address is already associated with another resource.'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        networkInterfaceId:
          allOf:
            - $ref: '#/components/schemas/NetworkInterfaceId'
            - description: '<p>[EC2-VPC] The ID of the network interface. If the instance has more than one network interface, you must specify a network interface ID.</p> <p>For EC2-VPC, you can specify either the instance ID or the network interface ID, but not both. </p>'
        privateIpAddress:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '[EC2-VPC] The primary or secondary private IP address to associate with the Elastic IP address. If no private IP address is specified, the Elastic IP address is associated with the primary private IP address.'
    AssociateClientVpnTargetNetworkRequest:
      type: object
      required:
        - ClientVpnEndpointId
        - SubnetId
      title: AssociateClientVpnTargetNetworkRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    AssociationStatus:
      type: object
      properties:
        code:
          allOf:
            - $ref: '#/components/schemas/AssociationStatusCode'
            - description: The state of the target network association.
        message:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'A message about the status of the target network association, if applicable.'
      description: Describes the state of a target network association.
    AssociateDhcpOptionsRequest:
      type: object
      required:
        - DhcpOptionsId
        - VpcId
      title: AssociateDhcpOptionsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/VpcId'
            - description: The ID of the VPC.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    AssociateEnclaveCertificateIamRoleRequest:
      type: object
      title: AssociateEnclaveCertificateIamRoleRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    AssociateIamInstanceProfileRequest:
      type: object
      required:
        - IamInstanceProfile
        - InstanceId
      title: AssociateIamInstanceProfileRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/InstanceId'
            - description: The ID of the instance.
    IamInstanceProfileAssociation:
      type: object
      properties:
        associationId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the association.
        instanceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the instance.
        iamInstanceProfile:
          allOf:
            - $ref: '#/components/schemas/IamInstanceProfile'
            - description: The IAM instance profile.
        state:
          allOf:
            - $ref: '#/components/schemas/IamInstanceProfileAssociationState'
            - description: The state of the association.
        timestamp:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The time the IAM instance profile was associated with the instance.
      description: Describes an association between an IAM instance profile and an instance.
    InstanceEventWindowAssociationRequest:
      type: object
      properties:
        InstanceId:
          allOf:
            - $ref: '#/components/schemas/InstanceIdList'
            - description: 'The IDs of the instances to associate with the event window. If the instance is on a Dedicated Host, you can''t specify the Instance ID parameter; you must use the Dedicated Host ID parameter.'
        InstanceTag:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The instance tags to associate with the event window. Any instances associated with the tags will be associated with the event window.
        DedicatedHostId:
          allOf:
            - $ref: '#/components/schemas/DedicatedHostIdList'
            - description: The IDs of the Dedicated Hosts to associate with the event window.
      description: 'One or more targets associated with the specified event window. Only one <i>type</i> of target (instance ID, instance tag, or Dedicated Host ID) can be associated with an event window.'
    AssociateInstanceEventWindowRequest:
      type: object
      required:
        - InstanceEventWindowId
        - AssociationTarget
      title: AssociateInstanceEventWindowRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/InstanceEventWindowAssociationRequest'
            - description: One or more targets associated with the specified event window.
    InstanceEventWindow:
      type: object
      properties:
        instanceEventWindowId:
          allOf:
            - $ref: '#/components/schemas/InstanceEventWindowId'
            - description: The ID of the event window.
        timeRangeSet:
          allOf:
            - $ref: '#/components/schemas/InstanceEventWindowTimeRangeList'
            - description: One or more time ranges defined for the event window.
        name:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the event window.
        cronExpression:
          allOf:
            - $ref: '#/components/schemas/InstanceEventWindowCronExpression'
            - description: The cron expression defined for the event window.
        associationTarget:
          allOf:
            - $ref: '#/components/schemas/InstanceEventWindowAssociationTarget'
            - description: One or more targets associated with the event window.
        state:
          allOf:
            - $ref: '#/components/schemas/InstanceEventWindowState'
            - description: The current state of the event window.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The instance tags associated with the event window.
      description: The event window.
    RouteGatewayId:
      type: string
    AssociateRouteTableRequest:
      type: object
      required:
        - RouteTableId
      title: AssociateRouteTableRequest
      properties:
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        routeTableId:
          allOf:
            - $ref: '#/components/schemas/RouteTableId'
            - description: The ID of the route table.
        subnetId:
          allOf:
            - $ref: '#/components/schemas/RouteGatewayId'
            - description: The ID of the internet gateway or virtual private gateway.
    RouteTableAssociationState:
      type: object
      properties:
        state:
          allOf:
            - $ref: '#/components/schemas/RouteTableAssociationStateCode'
            - description: The state of the association.
        statusMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The status message, if applicable.'
      description: Describes the state of an association between a route table and a subnet or gateway.
    AssociateSubnetCidrBlockRequest:
      type: object
      required:
        - Ipv6CidrBlock
        - SubnetId
      title: AssociateSubnetCidrBlockRequest
      properties:
        ipv6CidrBlock:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The IPv6 CIDR block for your subnet. The subnet must have a /64 prefix length.
        subnetId:
          allOf:
            - $ref: '#/components/schemas/SubnetId'
            - description: The ID of your subnet.
    SubnetIpv6CidrBlockAssociation:
      type: object
      properties:
        associationId:
          allOf:
            - $ref: '#/components/schemas/SubnetCidrAssociationId'
            - description: The ID of the association.
        ipv6CidrBlock:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The IPv6 CIDR block.
        ipv6CidrBlockState:
          allOf:
            - $ref: '#/components/schemas/SubnetCidrBlockState'
            - description: The state of the CIDR block.
      description: Describes an association between a subnet and an IPv6 CIDR block.
    AssociateTransitGatewayMulticastDomainRequest:
      type: object
      title: AssociateTransitGatewayMulticastDomainRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    AssociateTransitGatewayRouteTableRequest:
      type: object
      required:
        - TransitGatewayRouteTableId
        - TransitGatewayAttachmentId
      title: AssociateTransitGatewayRouteTableRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    TransitGatewayAssociation:
      type: object
      properties:
        transitGatewayRouteTableId:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayRouteTableId'
            - description: The ID of the transit gateway route table.
        transitGatewayAttachmentId:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayAttachmentId'
            - description: The ID of the attachment.
        resourceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the resource.
        resourceType:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayAttachmentResourceType'
            - description: The resource type. Note that the <code>tgw-peering</code> resource type has been deprecated.
        state:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayAssociationState'
            - description: The state of the association.
      description: Describes an association between a resource attachment and a transit gateway route table.
    AssociateTrunkInterfaceRequest:
      type: object
      required:
        - BranchInterfaceId
        - TrunkInterfaceId
      title: AssociateTrunkInterfaceRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    TrunkInterfaceAssociation:
      type: object
      properties:
        associationId:
          allOf:
            - $ref: '#/components/schemas/TrunkInterfaceAssociationId'
            - description: The ID of the association.
        branchInterfaceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the branch network interface.
        trunkInterfaceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the trunk network interface.
        interfaceProtocol:
          allOf:
            - $ref: '#/components/schemas/InterfaceProtocolType'
            - description: The interface protocol. Valid values are <code>VLAN</code> and <code>GRE</code>.
        vlanId:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The ID of the VLAN when you use the VLAN protocol.
        greKey:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The application key when you use the GRE protocol.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags for the trunk interface association.
      description: '<note> <p>Currently available in <b>limited preview only</b>. If you are interested in using this feature, contact your account manager.</p> </note> <p>Information about an association between a branch network interface with a trunk network interface.</p>'
    NetmaskLength:
      type: integer
    AssociateVpcCidrBlockRequest:
      type: object
      required:
        - VpcId
      title: AssociateVpcCidrBlockRequest
      properties:
        amazonProvidedIpv6CidrBlock:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: An IPv4 CIDR block to associate with the VPC.
        vpcId:
          allOf:
            - $ref: '#/components/schemas/NetmaskLength'
            - description: 'The netmask length of the IPv6 CIDR you would like to associate from an Amazon VPC IP Address Manager (IPAM) pool. For more information about IPAM, see <a href="/vpc/latest/ipam/what-is-it-ipam.html">What is IPAM?</a> in the <i>Amazon VPC IPAM User Guide</i>. '
    VpcIpv6CidrBlockAssociation:
      type: object
      properties:
        associationId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The association ID for the IPv6 CIDR block.
        ipv6CidrBlock:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The IPv6 CIDR block.
        ipv6CidrBlockState:
          allOf:
            - $ref: '#/components/schemas/VpcCidrBlockState'
            - description: Information about the state of the CIDR block.
        networkBorderGroup:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The name of the unique set of Availability Zones, Local Zones, or Wavelength Zones from which Amazon Web Services advertises IP addresses, for example, <code>us-east-1-wl1-bos-wlz-1</code>.'
        ipv6Pool:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the IPv6 address pool from which the IPv6 CIDR block is allocated.
      description: Describes an IPv6 CIDR block associated with a VPC.
    VpcCidrBlockAssociation:
      type: object
      properties:
        associationId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The association ID for the IPv4 CIDR block.
        cidrBlock:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The IPv4 CIDR block.
        cidrBlockState:
          allOf:
            - $ref: '#/components/schemas/VpcCidrBlockState'
            - description: Information about the state of the CIDR block.
      description: Describes an IPv4 CIDR block associated with a VPC.
    AssociatedNetworkType:
      type: string
      enum:
        - vpc
    AssociatedRole:
      type: object
      properties:
        associatedRoleArn:
          allOf:
            - $ref: '#/components/schemas/ResourceArn'
            - description: The ARN of the associated IAM role.
        certificateS3BucketName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the Amazon S3 bucket in which the Amazon S3 object is stored.
        certificateS3ObjectKey:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The key of the Amazon S3 object ey where the certificate, certificate chain, and encrypted private key bundle is stored. The object key is formated as follows: <code>role_arn</code>/<code>certificate_arn</code>. '
        encryptionKmsKeyId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the KMS customer master key (CMK) used to encrypt the private key.
      description: Information about the associated IAM roles.
    AssociatedRolesList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/AssociatedRole'
          - xml:
              name: item
    AssociatedTargetNetwork:
      type: object
      properties:
        networkId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the subnet.
        networkType:
          allOf:
            - $ref: '#/components/schemas/AssociatedNetworkType'
            - description: The target network type.
      description: Describes a target network that is associated with a Client VPN endpoint. A target network is a subnet in a VPC.
    AssociatedTargetNetworkSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/AssociatedTargetNetwork'
          - xml:
              name: item
    AssociationIdList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/IamInstanceProfileAssociationId'
          - xml:
              name: AssociationId
    AssociationStatusCode:
      type: string
      enum:
        - associating
        - associated
        - association-failed
        - disassociating
        - disassociated
    MillisecondDateTime:
      type: string
      format: date-time
    AthenaIntegration:
      type: object
      required:
        - IntegrationResultS3DestinationArn
        - PartitionLoadFrequency
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: The end date for the partition.
      description: Describes integration options for Amazon Athena.
    GroupIdStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/SecurityGroupId'
          - xml:
              name: groupId
    AttachClassicLinkVpcRequest:
      type: object
      required:
        - Groups
        - InstanceId
        - VpcId
      title: AttachClassicLinkVpcRequest
      properties:
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        SecurityGroupId:
          allOf:
            - $ref: '#/components/schemas/GroupIdStringList'
            - description: The ID of one or more of the VPC's security groups. You cannot specify security groups from a different VPC.
        instanceId:
          allOf:
            - $ref: '#/components/schemas/InstanceId'
            - description: The ID of an EC2-Classic instance to link to the ClassicLink-enabled VPC.
        vpcId:
          allOf:
            - $ref: '#/components/schemas/VpcId'
            - description: The ID of a ClassicLink-enabled VPC.
    AttachInternetGatewayRequest:
      type: object
      required:
        - InternetGatewayId
        - VpcId
      title: AttachInternetGatewayRequest
      properties:
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        internetGatewayId:
          allOf:
            - $ref: '#/components/schemas/InternetGatewayId'
            - description: The ID of the internet gateway.
        vpcId:
          allOf:
            - $ref: '#/components/schemas/VpcId'
            - description: The ID of the VPC.
    AttachNetworkInterfaceRequest:
      type: object
      required:
        - DeviceIndex
        - InstanceId
        - NetworkInterfaceId
      title: AttachNetworkInterfaceRequest
      properties:
        deviceIndex:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The index of the device for the network interface attachment.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        instanceId:
          allOf:
            - $ref: '#/components/schemas/InstanceId'
            - description: The ID of the instance.
        networkInterfaceId:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The index of the network card. Some instance types support multiple network cards. The primary network interface must be assigned to network card index 0. The default is network card index 0.
      description: Contains the parameters for AttachNetworkInterface.
    AttachVolumeRequest:
      type: object
      required:
        - Device
        - InstanceId
        - VolumeId
      title: AttachVolumeRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/VolumeId'
            - description: The ID of the EBS volume. The volume and instance must be within the same Availability Zone.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    AttachVpnGatewayRequest:
      type: object
      required:
        - VpcId
        - VpnGatewayId
      title: AttachVpnGatewayRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/VpnGatewayId'
            - description: The ID of the virtual private gateway.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
      description: Contains the parameters for AttachVpnGateway.
    VpcAttachment:
      type: object
      properties:
        state:
          allOf:
            - $ref: '#/components/schemas/AttachmentStatus'
            - description: The current state of the attachment.
        vpcId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the VPC.
      description: Describes an attachment between a virtual private gateway and a VPC.
    AttachmentStatus:
      type: string
      enum:
        - attaching
        - attached
        - detaching
        - detached
    AttributeBooleanValue:
      type: object
      properties:
        value:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: The attribute value. The valid values are <code>true</code> or <code>false</code>.
      description: Describes a value for a resource attribute that is a Boolean value.
    AttributeValue:
      type: object
      properties:
        value:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The attribute value. The value is case-sensitive.
      description: Describes a value for a resource attribute that is a String.
    ClientVpnAuthorizationRuleStatus:
      type: object
      properties:
        code:
          allOf:
            - $ref: '#/components/schemas/ClientVpnAuthorizationRuleStatusCode'
            - description: The state of the authorization rule.
        message:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'A message about the status of the authorization rule, if applicable.'
      description: Describes the state of an authorization rule.
    AuthorizationRule:
      type: object
      properties:
        clientVpnEndpointId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Client VPN endpoint with which the authorization rule is associated.
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A brief description of the authorization rule.
        groupId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Active Directory group to which the authorization rule grants access.
        accessAll:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the authorization rule grants access to all clients.
        destinationCidr:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The IPv4 address range, in CIDR notation, of the network to which the authorization rule applies.'
        status:
          allOf:
            - $ref: '#/components/schemas/ClientVpnAuthorizationRuleStatus'
            - description: The current state of the authorization rule.
      description: Information about an authorization rule.
    AuthorizationRuleSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/AuthorizationRule'
          - xml:
              name: item
    AuthorizeClientVpnIngressRequest:
      type: object
      required:
        - ClientVpnEndpointId
        - TargetNetworkCidr
      title: AuthorizeClientVpnIngressRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    IpPermissionList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/IpPermission'
          - xml:
              name: item
    AuthorizeSecurityGroupEgressRequest:
      type: object
      required:
        - GroupId
      title: AuthorizeSecurityGroupEgressRequest
      properties:
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        groupId:
          allOf:
            - $ref: '#/components/schemas/SecurityGroupId'
            - description: The ID of the security group.
        ipPermissions:
          allOf:
            - $ref: '#/components/schemas/IpPermissionList'
            - description: The sets of IP permissions. You can't specify a destination security group and a CIDR IP address range in the same set of permissions.
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/TagSpecificationList'
            - description: The tags applied to the security group rule.
        cidrIp:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Not supported. Use a set of IP permissions to specify the CIDR.
        fromPort:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: Not supported. Use a set of IP permissions to specify the port.
        ipProtocol:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Not supported. Use a set of IP permissions to specify the protocol name or number.
        toPort:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: Not supported. Use a set of IP permissions to specify the port.
        sourceSecurityGroupName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Not supported. Use a set of IP permissions to specify a destination security group.
        sourceSecurityGroupOwnerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Not supported. Use a set of IP permissions to specify a destination security group.
    SecurityGroupRuleList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/SecurityGroupRule'
          - xml:
              name: item
    AuthorizeSecurityGroupIngressRequest:
      type: object
      title: AuthorizeSecurityGroupIngressRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: '<p>The end of port range for the TCP and UDP protocols, or an ICMP code number. For the ICMP code number, use <code>-1</code> to specify all codes. If you specify all ICMP types, you must specify all codes.</p> <p>Alternatively, use a set of IP permissions to specify multiple rules and a description for the rule.</p>'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/TagSpecificationList'
            - description: '[VPC Only] The tags applied to the security group rule.'
    AutoAcceptSharedAttachmentsValue:
      type: string
      enum:
        - enable
        - disable
    AutoRecoveryFlag:
      type: boolean
    AvailabilityZoneState:
      type: string
      enum:
        - available
        - information
        - impaired
        - unavailable
    AvailabilityZoneOptInStatus:
      type: string
      enum:
        - opt-in-not-required
        - opted-in
        - not-opted-in
    AvailabilityZoneMessageList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/AvailabilityZoneMessage'
          - xml:
              name: item
    AvailabilityZone:
      type: object
      properties:
        zoneState:
          allOf:
            - $ref: '#/components/schemas/AvailabilityZoneState'
            - description: 'The state of the Availability Zone, Local Zone, or Wavelength Zone. This value is always <code>available</code>.'
        optInStatus:
          allOf:
            - $ref: '#/components/schemas/AvailabilityZoneOptInStatus'
            - description: '<p>For Availability Zones, this parameter always has the value of <code>opt-in-not-required</code>.</p> <p>For Local Zones and Wavelength Zones, this parameter is the opt-in status. The possible values are <code>opted-in</code>, and <code>not-opted-in</code>.</p>'
        messageSet:
          allOf:
            - $ref: '#/components/schemas/AvailabilityZoneMessageList'
            - description: 'Any messages about the Availability Zone, Local Zone, or Wavelength Zone.'
        regionName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the Region.
        zoneName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The name of the Availability Zone, Local Zone, or Wavelength Zone.'
        zoneId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The ID of the Availability Zone, Local Zone, or Wavelength Zone.'
        groupName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p> For Availability Zones, this parameter has the same value as the Region name.</p> <p>For Local Zones, the name of the associated group, for example <code>us-west-2-lax-1</code>.</p> <p>For Wavelength Zones, the name of the associated group, for example <code>us-east-1-wl1-bos-wlz-1</code>.</p>'
        networkBorderGroup:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the network border group.
        zoneType:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The type of zone. The valid values are <code>availability-zone</code>, <code>local-zone</code>, and <code>wavelength-zone</code>.'
        parentZoneName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The name of the zone that handles some of the Local Zone or Wavelength Zone control plane operations, such as API calls.'
        parentZoneId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The ID of the zone that handles some of the Local Zone or Wavelength Zone control plane operations, such as API calls.'
      description: 'Describes Availability Zones, Local Zones, and Wavelength Zones.'
    AvailabilityZoneList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/AvailabilityZone'
          - xml:
              name: item
    AvailabilityZoneMessage:
      type: object
      properties:
        message:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The message about the Availability Zone, Local Zone, or Wavelength Zone.'
      description: 'Describes a message about an Availability Zone, Local Zone, or Wavelength Zone.'
    AvailabilityZoneStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: AvailabilityZone
    AvailableInstanceCapacityList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/InstanceCapacity'
          - xml:
              name: item
    AvailableCapacity:
      type: object
      properties:
        availableInstanceCapacity:
          allOf:
            - $ref: '#/components/schemas/AvailableInstanceCapacityList'
            - description: 'The number of instances that can be launched onto the Dedicated Host depending on the host''s available capacity. For Dedicated Hosts that support multiple instance types, this parameter represents the number of instances for each instance size that is supported on the host.'
        availableVCpus:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of vCPUs available for launching instances onto the Dedicated Host.
      description: 'The capacity information for instances that can be launched onto the Dedicated Host. '
    InstanceCapacity:
      type: object
      properties:
        availableCapacity:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of instances that can be launched onto the Dedicated Host based on the host's available capacity.
        instanceType:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The instance type supported by the Dedicated Host.
        totalCapacity:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The total number of instances that can be launched onto the Dedicated Host if there are no instances running on it.
      description: Information about the number of instances that can be launched onto the Dedicated Host.
    BareMetal:
      type: string
      enum:
        - included
        - required
        - excluded
    BareMetalFlag:
      type: boolean
    BaselineBandwidthInMbps:
      type: integer
    BaselineEbsBandwidthMbps:
      type: object
      properties:
        min:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The minimum baseline bandwidth, in Mbps. If this parameter is not specified, there is no minimum limit.'
        max:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The maximum baseline bandwidth, in Mbps. If this parameter is not specified, there is no maximum limit.'
      description: 'The minimum and maximum baseline bandwidth to Amazon EBS, in Mbps. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-optimized.html">Amazon EBS–optimized instances</a> in the <i>Amazon EC2 User Guide</i>.'
    BaselineIops:
      type: integer
    BaselineThroughputInMBps:
      type: number
      format: double
    BatchState:
      type: string
      enum:
        - submitted
        - active
        - cancelled
        - failed
        - cancelled_running
        - cancelled_terminating
        - modifying
    BgpStatus:
      type: string
      enum:
        - up
        - down
    BillingProductList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: item
    BlobAttributeValue:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/Blob'
    EbsBlockDevice:
      type: object
      properties:
        deleteOnTermination:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Indicates whether the EBS volume is deleted on instance termination. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#preserving-volumes-on-termination">Preserving Amazon EBS volumes on instance termination</a> in the <i>Amazon EC2 User Guide</i>.'
        iops:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: '<p>The number of I/O operations per second (IOPS). For <code>gp3</code>, <code>io1</code>, and <code>io2</code> volumes, this represents the number of IOPS that are provisioned for the volume. For <code>gp2</code> volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting.</p> <p>The following are the supported values for each volume type:</p> <ul> <li> <p> <code>gp3</code>: 3,000-16,000 IOPS</p> </li> <li> <p> <code>io1</code>: 100-64,000 IOPS</p> </li> <li> <p> <code>io2</code>: 100-64,000 IOPS</p> </li> </ul> <p>For <code>io1</code> and <code>io2</code> volumes, we guarantee 64,000 IOPS only for <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances">Instances built on the Nitro System</a>. Other instance families guarantee performance up to 32,000 IOPS.</p> <p>This parameter is required for <code>io1</code> and <code>io2</code> volumes. The default for <code>gp3</code> volumes is 3,000 IOPS. This parameter is not supported for <code>gp2</code>, <code>st1</code>, <code>sc1</code>, or <code>standard</code> volumes.</p>'
        snapshotId:
          allOf:
            - $ref: '#/components/schemas/SnapshotId'
            - description: The ID of the snapshot.
        volumeSize:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: '<p>The size of the volume, in GiBs. You must specify either a snapshot ID or a volume size. If you specify a snapshot, the default is the snapshot size. You can specify a volume size that is equal to or larger than the snapshot size.</p> <p>The following are the supported volumes sizes for each volume type:</p> <ul> <li> <p> <code>gp2</code> and <code>gp3</code>:1-16,384</p> </li> <li> <p> <code>io1</code> and <code>io2</code>: 4-16,384</p> </li> <li> <p> <code>st1</code> and <code>sc1</code>: 125-16,384</p> </li> <li> <p> <code>standard</code>: 1-1,024</p> </li> </ul>'
        volumeType:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>Identifier (key ID, key alias, ID ARN, or alias ARN) for a customer managed CMK under which the EBS volume is encrypted.</p> <p>This parameter is only supported on <code>BlockDeviceMapping</code> objects called by <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html">RunInstances</a>, <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotFleet.html">RequestSpotFleet</a>, and <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotInstances.html">RequestSpotInstances</a>.</p>'
        throughput:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: '<p>The throughput that the volume supports, in MiB/s.</p> <p>This parameter is valid only for <code>gp3</code> volumes.</p> <p>Valid Range: Minimum value of 125. Maximum value of 1000.</p>'
        outpostArn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The ARN of the Outpost on which the snapshot is stored.</p> <p>This parameter is only supported on <code>BlockDeviceMapping</code> objects called by <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateImage.html"> CreateImage</a>.</p>'
        encrypted:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: '<p>Indicates whether the encryption state of an EBS volume is changed while being restored from a backing snapshot. The effect of setting the encryption state to <code>true</code> depends on the volume origin (new or from a snapshot), starting encryption state, ownership, and whether encryption by default is enabled. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#encryption-parameters">Amazon EBS encryption</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>In no case can you remove encryption from an encrypted volume.</p> <p>Encrypted volumes can only be attached to instances that support Amazon EBS encryption. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#EBSEncryption_supported_instances">Supported instance types</a>.</p> <p>This parameter is not returned by <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeImageAttribute.html">DescribeImageAttribute</a>.</p>'
      description: Describes a block device for an EBS volume.
    BlockDeviceMappingRequestList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/BlockDeviceMapping'
          - xml:
              name: BlockDeviceMapping
    BootModeType:
      type: string
      enum:
        - legacy-bios
        - uefi
    BootModeTypeList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/BootModeType'
          - xml:
              name: item
    BootModeValues:
      type: string
      enum:
        - legacy-bios
        - uefi
    BoxedDouble:
      type: number
      format: double
    BundleIdStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/BundleId'
          - xml:
              name: BundleId
    Storage:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/S3Storage'
            - description: An Amazon S3 storage location.
      description: Describes the storage location for an instance store-backed AMI.
    BundleInstanceRequest:
      type: object
      required:
        - InstanceId
        - Storage
      title: BundleInstanceRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Storage'
            - description: 'The bucket in which to store the AMI. You can specify a bucket that you already own or a new bucket that Amazon EC2 creates on your behalf. If you specify a bucket that belongs to someone else, Amazon EC2 returns an error.'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
      description: Contains the parameters for BundleInstance.
    BundleTask:
      type: object
      properties:
        bundleId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the bundle task.
        error:
          allOf:
            - $ref: '#/components/schemas/BundleTaskError'
            - description: 'If the task fails, a description of the error.'
        instanceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the instance associated with this bundle task.
        progress:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The level of task completion, as a percent (for example, 20%).'
        startTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The time this task started.
        state:
          allOf:
            - $ref: '#/components/schemas/BundleTaskState'
            - description: The state of the task.
        storage:
          allOf:
            - $ref: '#/components/schemas/Storage'
            - description: The Amazon S3 storage locations.
        updateTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The time of the most recent update for the task.
      description: Describes a bundle task.
    BundleTaskError:
      type: object
      properties:
        code:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The error code.
        message:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The error message.
      description: Describes an error for <a>BundleInstance</a>.
    BundleTaskState:
      type: string
      enum:
        - pending
        - waiting-for-shutdown
        - bundling
        - storing
        - cancelling
        - complete
        - failed
    BundleTaskList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/BundleTask'
          - xml:
              name: item
    BurstablePerformance:
      type: string
      enum:
        - included
        - required
        - excluded
    BurstablePerformanceFlag:
      type: boolean
    ByoipCidrState:
      type: string
      enum:
        - advertised
        - deprovisioned
        - failed-deprovision
        - failed-provision
        - pending-deprovision
        - pending-provision
        - provisioned
        - provisioned-not-publicly-advertisable
    ByoipCidrSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ByoipCidr'
          - xml:
              name: item
    CancelBatchErrorCode:
      type: string
      enum:
        - fleetRequestIdDoesNotExist
        - fleetRequestIdMalformed
        - fleetRequestNotInCancellableState
        - unexpectedError
    CancelBundleTaskRequest:
      type: object
      required:
        - BundleId
      title: CancelBundleTaskRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/BundleId'
            - description: The ID of the bundle task.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
      description: Contains the parameters for CancelBundleTask.
    CancelCapacityReservationFleetErrorCode:
      type: string
    CancelCapacityReservationFleetErrorMessage:
      type: string
    CancelCapacityReservationFleetError:
      type: object
      properties:
        code:
          allOf:
            - $ref: '#/components/schemas/CancelCapacityReservationFleetErrorCode'
            - description: The error code.
        message:
          allOf:
            - $ref: '#/components/schemas/CancelCapacityReservationFleetErrorMessage'
            - description: The error message.
      description: Describes a Capacity Reservation Fleet cancellation error.
    CapacityReservationFleetIdSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/CapacityReservationFleetId'
          - xml:
              name: item
    CancelCapacityReservationFleetsRequest:
      type: object
      required:
        - CapacityReservationFleetIds
      title: CancelCapacityReservationFleetsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        CapacityReservationFleetId:
          allOf:
            - $ref: '#/components/schemas/CapacityReservationFleetIdSet'
            - description: The IDs of the Capacity Reservation Fleets to cancel.
    CapacityReservationFleetCancellationStateSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/CapacityReservationFleetCancellationState'
          - xml:
              name: item
    FailedCapacityReservationFleetCancellationResultSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/FailedCapacityReservationFleetCancellationResult'
          - xml:
              name: item
    CancelCapacityReservationRequest:
      type: object
      required:
        - CapacityReservationId
      title: CancelCapacityReservationRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    CancelConversionRequest:
      type: object
      required:
        - ConversionTaskId
      title: CancelConversionRequest
      properties:
        conversionTaskId:
          allOf:
            - $ref: '#/components/schemas/ConversionTaskId'
            - description: The ID of the conversion task.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        reasonMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The reason for canceling the conversion task.
    ExportVmTaskId:
      type: string
    CancelExportTaskRequest:
      type: object
      required:
        - ExportTaskId
      title: CancelExportTaskRequest
      properties:
        exportTaskId:
          allOf:
            - $ref: '#/components/schemas/ExportVmTaskId'
            - description: The ID of the export task. This is the ID returned by <code>CreateInstanceExportTask</code>.
    ImportTaskId:
      type: string
    CancelImportTaskRequest:
      type: object
      title: CancelImportTaskRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/ImportTaskId'
            - description: The ID of the import image or import snapshot task to be canceled.
    ReservedInstancesListingId:
      type: string
    CancelReservedInstancesListingRequest:
      type: object
      required:
        - ReservedInstancesListingId
      title: CancelReservedInstancesListingRequest
      properties:
        reservedInstancesListingId:
          allOf:
            - $ref: '#/components/schemas/ReservedInstancesListingId'
            - description: The ID of the Reserved Instance listing.
      description: Contains the parameters for CancelReservedInstancesListing.
    ReservedInstancesListingList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ReservedInstancesListing'
          - xml:
              name: item
    CancelSpotFleetRequestsError:
      type: object
      properties:
        code:
          allOf:
            - $ref: '#/components/schemas/CancelBatchErrorCode'
            - description: The error code.
        message:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The description for the error code.
      description: Describes a Spot Fleet error.
    CancelSpotFleetRequestsErrorItem:
      type: object
      properties:
        error:
          allOf:
            - $ref: '#/components/schemas/CancelSpotFleetRequestsError'
            - description: The error.
        spotFleetRequestId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Spot Fleet request.
      description: Describes a Spot Fleet request that was not successfully canceled.
    CancelSpotFleetRequestsErrorSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/CancelSpotFleetRequestsErrorItem'
          - xml:
              name: item
    SpotFleetRequestIdList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/SpotFleetRequestId'
          - xml:
              name: item
    CancelSpotFleetRequestsRequest:
      type: object
      required:
        - SpotFleetRequestIds
        - TerminateInstances
      title: CancelSpotFleetRequestsRequest
      properties:
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        spotFleetRequestId:
          allOf:
            - $ref: '#/components/schemas/SpotFleetRequestIdList'
            - description: The IDs of the Spot Fleet requests.
        terminateInstances:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether to terminate instances for a Spot Fleet request if it is canceled successfully.
      description: Contains the parameters for CancelSpotFleetRequests.
    CancelSpotFleetRequestsSuccessSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/CancelSpotFleetRequestsSuccessItem'
          - xml:
              name: item
    CancelSpotFleetRequestsSuccessItem:
      type: object
      properties:
        currentSpotFleetRequestState:
          allOf:
            - $ref: '#/components/schemas/BatchState'
            - description: The current state of the Spot Fleet request.
        previousSpotFleetRequestState:
          allOf:
            - $ref: '#/components/schemas/BatchState'
            - description: The previous state of the Spot Fleet request.
        spotFleetRequestId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Spot Fleet request.
      description: Describes a Spot Fleet request that was successfully canceled.
    CancelSpotInstanceRequestState:
      type: string
      enum:
        - active
        - open
        - closed
        - cancelled
        - completed
    SpotInstanceRequestIdList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/SpotInstanceRequestId'
          - xml:
              name: SpotInstanceRequestId
    CancelSpotInstanceRequestsRequest:
      type: object
      required:
        - SpotInstanceRequestIds
      title: CancelSpotInstanceRequestsRequest
      properties:
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        SpotInstanceRequestId:
          allOf:
            - $ref: '#/components/schemas/SpotInstanceRequestIdList'
            - description: One or more Spot Instance request IDs.
      description: Contains the parameters for CancelSpotInstanceRequests.
    CancelledSpotInstanceRequestList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/CancelledSpotInstanceRequest'
          - xml:
              name: item
    CancelledSpotInstanceRequest:
      type: object
      properties:
        spotInstanceRequestId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Spot Instance request.
        state:
          allOf:
            - $ref: '#/components/schemas/CancelSpotInstanceRequestState'
            - description: The state of the Spot Instance request.
      description: Describes a request to cancel a Spot Instance.
    CapacityReservationInstancePlatform:
      type: string
      enum:
        - Linux/UNIX
        - Red Hat Enterprise Linux
        - SUSE Linux
        - Windows
        - Windows with SQL Server
        - Windows with SQL Server Enterprise
        - Windows with SQL Server Standard
        - Windows with SQL Server Web
        - Linux with SQL Server Standard
        - Linux with SQL Server Web
        - Linux with SQL Server Enterprise
        - RHEL with SQL Server Standard
        - RHEL with SQL Server Enterprise
        - RHEL with SQL Server Web
        - RHEL with HA
        - RHEL with HA and SQL Server Standard
        - RHEL with HA and SQL Server Enterprise
    CapacityReservationTenancy:
      type: string
      enum:
        - default
        - dedicated
    CapacityReservationState:
      type: string
      enum:
        - active
        - expired
        - cancelled
        - pending
        - failed
    EndDateType:
      type: string
      enum:
        - unlimited
        - limited
    InstanceMatchCriteria:
      type: string
      enum:
        - open
        - targeted
    OutpostArn:
      type: string
      pattern: '^arn:aws([a-z-]+)?:outposts:[a-z\d-]+:\d{12}:outpost/op-[a-f0-9]{17}$'
    PlacementGroupArn:
      type: string
      pattern: '^arn:aws([a-z-]+)?:ec2:[a-z\d-]+:\d{12}:placement-group/([^\s].+[^\s]){1,255}$'
    CapacityReservation:
      type: object
      properties:
        capacityReservationId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Capacity Reservation.
        ownerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Amazon Web Services account that owns the Capacity Reservation.
        capacityReservationArn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Resource Name (ARN) of the Capacity Reservation.
        availabilityZoneId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Availability Zone ID of the Capacity Reservation.
        instanceType:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The type of instance for which the Capacity Reservation reserves capacity.
        instancePlatform:
          allOf:
            - $ref: '#/components/schemas/CapacityReservationInstancePlatform'
            - description: The type of operating system for which the Capacity Reservation reserves capacity.
        availabilityZone:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Availability Zone in which the capacity is reserved.
        tenancy:
          allOf:
            - $ref: '#/components/schemas/CapacityReservationTenancy'
            - description: '<p>Indicates the tenancy of the Capacity Reservation. A Capacity Reservation can have one of the following tenancy settings:</p> <ul> <li> <p> <code>default</code> - The Capacity Reservation is created on hardware that is shared with other Amazon Web Services accounts.</p> </li> <li> <p> <code>dedicated</code> - The Capacity Reservation is created on single-tenant hardware that is dedicated to a single Amazon Web Services account.</p> </li> </ul>'
        totalInstanceCount:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The total number of instances for which the Capacity Reservation reserves capacity.
        availableInstanceCount:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The remaining capacity. Indicates the number of instances that can be launched in the Capacity Reservation.
        ebsOptimized:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the Capacity Reservation supports EBS-optimized instances. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS- optimized instance.
        ephemeralStorage:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Indicates whether the Capacity Reservation supports instances with temporary, block-level storage.'
        state:
          allOf:
            - $ref: '#/components/schemas/CapacityReservationState'
            - description: '<p>The current state of the Capacity Reservation. A Capacity Reservation can be in one of the following states:</p> <ul> <li> <p> <code>active</code> - The Capacity Reservation is active and the capacity is available for your use.</p> </li> <li> <p> <code>expired</code> - The Capacity Reservation expired automatically at the date and time specified in your request. The reserved capacity is no longer available for your use.</p> </li> <li> <p> <code>cancelled</code> - The Capacity Reservation was cancelled. The reserved capacity is no longer available for your use.</p> </li> <li> <p> <code>pending</code> - The Capacity Reservation request was successful but the capacity provisioning is still pending.</p> </li> <li> <p> <code>failed</code> - The Capacity Reservation request has failed. A request might fail due to invalid request parameters, capacity constraints, or instance limit constraints. Failed requests are retained for 60 minutes.</p> </li> </ul>'
        startDate:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: The date and time at which the Capacity Reservation was started.
        endDate:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: 'The date and time at which the Capacity Reservation expires. When a Capacity Reservation expires, the reserved capacity is released and you can no longer launch instances into it. The Capacity Reservation''s state changes to <code>expired</code> when it reaches its end date and time.'
        endDateType:
          allOf:
            - $ref: '#/components/schemas/EndDateType'
            - description: '<p>Indicates the way in which the Capacity Reservation ends. A Capacity Reservation can have one of the following end types:</p> <ul> <li> <p> <code>unlimited</code> - The Capacity Reservation remains active until you explicitly cancel it.</p> </li> <li> <p> <code>limited</code> - The Capacity Reservation expires automatically at a specified date and time.</p> </li> </ul>'
        instanceMatchCriteria:
          allOf:
            - $ref: '#/components/schemas/InstanceMatchCriteria'
            - description: '<p>Indicates the type of instance launches that the Capacity Reservation accepts. The options include:</p> <ul> <li> <p> <code>open</code> - The Capacity Reservation accepts all instances that have matching attributes (instance type, platform, and Availability Zone). Instances that have matching attributes launch into the Capacity Reservation automatically without specifying any additional parameters.</p> </li> <li> <p> <code>targeted</code> - The Capacity Reservation only accepts instances that have matching attributes (instance type, platform, and Availability Zone), and explicitly target the Capacity Reservation. This ensures that only permitted instances can use the reserved capacity. </p> </li> </ul>'
        createDate:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The date and time at which the Capacity Reservation was created.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: Any tags assigned to the Capacity Reservation.
        outpostArn:
          allOf:
            - $ref: '#/components/schemas/OutpostArn'
            - description: The Amazon Resource Name (ARN) of the Outpost on which the Capacity Reservation was created.
        capacityReservationFleetId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Capacity Reservation Fleet to which the Capacity Reservation belongs. Only valid for Capacity Reservations that were created by a Capacity Reservation Fleet.
        placementGroupArn:
          allOf:
            - $ref: '#/components/schemas/PlacementGroupArn'
            - description: 'The Amazon Resource Name (ARN) of the cluster placement group in which the Capacity Reservation was created. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/cr-cpg.html"> Capacity Reservations for cluster placement groups</a> in the <i>Amazon EC2 User Guide</i>.'
      description: Describes a Capacity Reservation.
    CapacityReservationFleetState:
      type: string
      enum:
        - submitted
        - modifying
        - active
        - partially_fulfilled
        - expiring
        - expired
        - cancelling
        - cancelled
        - failed
    FleetCapacityReservationTenancy:
      type: string
      enum:
        - default
    FleetInstanceMatchCriteria:
      type: string
      enum:
        - open
    FleetCapacityReservationSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/FleetCapacityReservation'
          - xml:
              name: item
    CapacityReservationFleet:
      type: object
      properties:
        capacityReservationFleetId:
          allOf:
            - $ref: '#/components/schemas/CapacityReservationFleetId'
            - description: The ID of the Capacity Reservation Fleet.
        capacityReservationFleetArn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ARN of the Capacity Reservation Fleet.
        state:
          allOf:
            - $ref: '#/components/schemas/CapacityReservationFleetState'
            - description: '<p>The state of the Capacity Reservation Fleet. Possible states include:</p> <ul> <li> <p> <code>submitted</code> - The Capacity Reservation Fleet request has been submitted and Amazon Elastic Compute Cloud is preparing to create the Capacity Reservations.</p> </li> <li> <p> <code>modifying</code> - The Capacity Reservation Fleet is being modified. The Fleet remains in this state until the modification is complete.</p> </li> <li> <p> <code>active</code> - The Capacity Reservation Fleet has fulfilled its total target capacity and it is attempting to maintain this capacity. The Fleet remains in this state until it is modified or deleted.</p> </li> <li> <p> <code>partially_fulfilled</code> - The Capacity Reservation Fleet has partially fulfilled its total target capacity. There is insufficient Amazon EC2 to fulfill the total target capacity. The Fleet is attempting to asynchronously fulfill its total target capacity.</p> </li> <li> <p> <code>expiring</code> - The Capacity Reservation Fleet has reach its end date and it is in the process of expiring. One or more of its Capacity reservations might still be active.</p> </li> <li> <p> <code>expired</code> - The Capacity Reservation Fleet has reach its end date. The Fleet and its Capacity Reservations are expired. The Fleet can''t create new Capacity Reservations.</p> </li> <li> <p> <code>cancelling</code> - The Capacity Reservation Fleet is in the process of being cancelled. One or more of its Capacity reservations might still be active.</p> </li> <li> <p> <code>cancelled</code> - The Capacity Reservation Fleet has been manually cancelled. The Fleet and its Capacity Reservations are cancelled and the Fleet can''t create new Capacity Reservations.</p> </li> <li> <p> <code>failed</code> - The Capacity Reservation Fleet failed to reserve capacity for the specified instance types.</p> </li> </ul>'
        totalTargetCapacity:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The total number of capacity units for which the Capacity Reservation Fleet reserves capacity. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/crfleet-concepts.html#target-capacity">Total target capacity</a> in the Amazon EC2 User Guide.'
        totalFulfilledCapacity:
          allOf:
            - $ref: '#/components/schemas/Double'
            - description: The capacity units that have been fulfilled.
        tenancy:
          allOf:
            - $ref: '#/components/schemas/FleetCapacityReservationTenancy'
            - description: '<p>The tenancy of the Capacity Reservation Fleet. Tenancies include:</p> <ul> <li> <p> <code>default</code> - The Capacity Reservation Fleet is created on hardware that is shared with other Amazon Web Services accounts.</p> </li> <li> <p> <code>dedicated</code> - The Capacity Reservation Fleet is created on single-tenant hardware that is dedicated to a single Amazon Web Services account.</p> </li> </ul>'
        endDate:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: The date and time at which the Capacity Reservation Fleet expires.
        createTime:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: The date and time at which the Capacity Reservation Fleet was created.
        instanceMatchCriteria:
          allOf:
            - $ref: '#/components/schemas/FleetInstanceMatchCriteria'
            - description: '<p>Indicates the type of instance launches that the Capacity Reservation Fleet accepts. All Capacity Reservations in the Fleet inherit this instance matching criteria.</p> <p>Currently, Capacity Reservation Fleets support <code>open</code> instance matching criteria only. This means that instances that have matching attributes (instance type, platform, and Availability Zone) run in the Capacity Reservations automatically. Instances do not need to explicitly target a Capacity Reservation Fleet to use its reserved capacity.</p>'
        allocationStrategy:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The strategy used by the Capacity Reservation Fleet to determine which of the specified instance types to use. For more information, see For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/crfleet-concepts.html#allocation-strategy"> Allocation strategy</a> in the Amazon EC2 User Guide.'
        instanceTypeSpecificationSet:
          allOf:
            - $ref: '#/components/schemas/FleetCapacityReservationSet'
            - description: Information about the instance types for which to reserve the capacity.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags assigned to the Capacity Reservation Fleet.
      description: Information about a Capacity Reservation Fleet.
    CapacityReservationFleetCancellationState:
      type: object
      properties:
        currentFleetState:
          allOf:
            - $ref: '#/components/schemas/CapacityReservationFleetState'
            - description: The current state of the Capacity Reservation Fleet.
        previousFleetState:
          allOf:
            - $ref: '#/components/schemas/CapacityReservationFleetState'
            - description: The previous state of the Capacity Reservation Fleet.
        capacityReservationFleetId:
          allOf:
            - $ref: '#/components/schemas/CapacityReservationFleetId'
            - description: The ID of the Capacity Reservation Fleet that was successfully cancelled.
      description: Describes a Capacity Reservation Fleet that was successfully cancelled.
    CapacityReservationFleetSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/CapacityReservationFleet'
          - xml:
              name: item
    CapacityReservationGroup:
      type: object
      properties:
        groupArn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ARN of the resource group.
        ownerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Amazon Web Services account that owns the resource group.
      description: Describes a resource group to which a Capacity Reservation has been added.
    CapacityReservationGroupSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/CapacityReservationGroup'
          - xml:
              name: item
    CapacityReservationIdSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/CapacityReservationId'
          - xml:
              name: item
    FleetCapacityReservationUsageStrategy:
      type: string
      enum:
        - use-capacity-reservations-first
    CapacityReservationOptions:
      type: object
      properties:
        usageStrategy:
          allOf:
            - $ref: '#/components/schemas/FleetCapacityReservationUsageStrategy'
            - description: '<p>Indicates whether to use unused Capacity Reservations for fulfilling On-Demand capacity.</p> <p>If you specify <code>use-capacity-reservations-first</code>, the fleet uses unused Capacity Reservations to fulfill On-Demand capacity up to the target On-Demand capacity. If multiple instance pools have unused Capacity Reservations, the On-Demand allocation strategy (<code>lowest-price</code> or <code>prioritized</code>) is applied. If the number of unused Capacity Reservations is less than the On-Demand target capacity, the remaining On-Demand target capacity is launched according to the On-Demand allocation strategy (<code>lowest-price</code> or <code>prioritized</code>).</p> <p>If you do not specify a value, the fleet fulfils the On-Demand capacity according to the chosen On-Demand allocation strategy.</p>'
      description: '<p>Describes the strategy for using unused Capacity Reservations for fulfilling On-Demand capacity.</p> <note> <p>This strategy can only be used if the EC2 Fleet is of type <code>instant</code>.</p> </note> <p>For more information about Capacity Reservations, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-capacity-reservations.html">On-Demand Capacity Reservations</a> in the <i>Amazon EC2 User Guide</i>. For examples of using Capacity Reservations in an EC2 Fleet, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-examples.html">EC2 Fleet example configurations</a> in the <i>Amazon EC2 User Guide</i>.</p>'
    CapacityReservationOptionsRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/FleetCapacityReservationUsageStrategy'
            - description: '<p>Indicates whether to use unused Capacity Reservations for fulfilling On-Demand capacity.</p> <p>If you specify <code>use-capacity-reservations-first</code>, the fleet uses unused Capacity Reservations to fulfill On-Demand capacity up to the target On-Demand capacity. If multiple instance pools have unused Capacity Reservations, the On-Demand allocation strategy (<code>lowest-price</code> or <code>prioritized</code>) is applied. If the number of unused Capacity Reservations is less than the On-Demand target capacity, the remaining On-Demand target capacity is launched according to the On-Demand allocation strategy (<code>lowest-price</code> or <code>prioritized</code>).</p> <p>If you do not specify a value, the fleet fulfils the On-Demand capacity according to the chosen On-Demand allocation strategy.</p>'
      description: '<p>Describes the strategy for using unused Capacity Reservations for fulfilling On-Demand capacity.</p> <note> <p>This strategy can only be used if the EC2 Fleet is of type <code>instant</code>.</p> </note> <p>For more information about Capacity Reservations, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-capacity-reservations.html">On-Demand Capacity Reservations</a> in the <i>Amazon EC2 User Guide</i>. For examples of using Capacity Reservations in an EC2 Fleet, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-examples.html">EC2 Fleet example configurations</a> in the <i>Amazon EC2 User Guide</i>.</p>'
    CapacityReservationPreference:
      type: string
      enum:
        - open
        - none
    CapacityReservationSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/CapacityReservation'
          - xml:
              name: item
    CapacityReservationSpecification:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/CapacityReservationTarget'
            - description: Information about the target Capacity Reservation or Capacity Reservation group.
      description: '<p>Describes an instance''s Capacity Reservation targeting option. You can specify only one parameter at a time. If you specify <code>CapacityReservationPreference</code> and <code>CapacityReservationTarget</code>, the request fails.</p> <p>Use the <code>CapacityReservationPreference</code> parameter to configure the instance to run as an On-Demand Instance or to run in any <code>open</code> Capacity Reservation that has matching attributes (instance type, platform, Availability Zone). Use the <code>CapacityReservationTarget</code> parameter to explicitly target a specific Capacity Reservation or a Capacity Reservation group.</p>'
    CapacityReservationTargetResponse:
      type: object
      properties:
        capacityReservationId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the targeted Capacity Reservation.
        capacityReservationResourceGroupArn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ARN of the targeted Capacity Reservation group.
      description: Describes a target Capacity Reservation or Capacity Reservation group.
    CapacityReservationSpecificationResponse:
      type: object
      properties:
        capacityReservationPreference:
          allOf:
            - $ref: '#/components/schemas/CapacityReservationPreference'
            - description: '<p>Describes the instance''s Capacity Reservation preferences. Possible preferences include:</p> <ul> <li> <p> <code>open</code> - The instance can run in any <code>open</code> Capacity Reservation that has matching attributes (instance type, platform, Availability Zone).</p> </li> <li> <p> <code>none</code> - The instance avoids running in a Capacity Reservation even if one is available. The instance runs in On-Demand capacity.</p> </li> </ul>'
        capacityReservationTarget:
          allOf:
            - $ref: '#/components/schemas/CapacityReservationTargetResponse'
            - description: Information about the targeted Capacity Reservation or Capacity Reservation group.
      description: 'Describes the instance''s Capacity Reservation targeting preferences. The action returns the <code>capacityReservationPreference</code> response element if the instance is configured to run in On-Demand capacity, or if it is configured in run in any <code>open</code> Capacity Reservation that has matching attributes (instance type, platform, Availability Zone). The action returns the <code>capacityReservationTarget</code> response element if the instance explicily targets a specific Capacity Reservation or Capacity Reservation group.'
    CarrierGatewayState:
      type: string
      enum:
        - pending
        - available
        - deleting
        - deleted
    CarrierGateway:
      type: object
      properties:
        carrierGatewayId:
          allOf:
            - $ref: '#/components/schemas/CarrierGatewayId'
            - description: The ID of the carrier gateway.
        vpcId:
          allOf:
            - $ref: '#/components/schemas/VpcId'
            - description: The ID of the VPC associated with the carrier gateway.
        state:
          allOf:
            - $ref: '#/components/schemas/CarrierGatewayState'
            - description: The state of the carrier gateway.
        ownerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Web Services account ID of the owner of the carrier gateway.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags assigned to the carrier gateway.
      description: Describes a carrier gateway.
    CarrierGatewayIdSet:
      type: array
      items:
        $ref: '#/components/schemas/CarrierGatewayId'
    CarrierGatewayMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    CarrierGatewaySet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/CarrierGateway'
          - xml:
              name: item
    CertificateAuthentication:
      type: object
      properties:
        clientRootCertificateChain:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The ARN of the client certificate. '
      description: Information about the client certificate used for authentication.
    CertificateAuthenticationRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ARN of the client certificate. The certificate must be signed by a certificate authority (CA) and it must be provisioned in Certificate Manager (ACM).
      description: Information about the client certificate to be used for authentication.
    CidrAuthorizationContext:
      type: object
      required:
        - Message
        - Signature
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The signed authorization message for the prefix and account.
      description: 'Provides authorization for Amazon to bring a specific IP address range to a specific Amazon Web Services account using bring your own IP addresses (BYOIP). For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-byoip.html#prepare-for-byoip">Configuring your BYOIP address range</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.'
    CidrBlock:
      type: object
      properties:
        cidrBlock:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The IPv4 CIDR block.
      description: Describes an IPv4 CIDR block.
    CidrBlockSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/CidrBlock'
          - xml:
              name: item
    ClassicLinkDnsSupport:
      type: object
      properties:
        classicLinkDnsSupported:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether ClassicLink DNS support is enabled for the VPC.
        vpcId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the VPC.
      description: Describes the ClassicLink DNS support status of a VPC.
    ClassicLinkDnsSupportList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ClassicLinkDnsSupport'
          - xml:
              name: item
    GroupIdentifierList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/GroupIdentifier'
          - xml:
              name: item
    ClassicLinkInstance:
      type: object
      properties:
        groupSet:
          allOf:
            - $ref: '#/components/schemas/GroupIdentifierList'
            - description: A list of security groups.
        instanceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the instance.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: Any tags assigned to the instance.
        vpcId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the VPC.
      description: Describes a linked EC2-Classic instance.
    ClassicLinkInstanceList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ClassicLinkInstance'
          - xml:
              name: item
    ClassicLoadBalancer:
      type: object
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the load balancer.
      description: Describes a Classic Load Balancer.
    ClassicLoadBalancers:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ClassicLoadBalancer'
          - xml:
              name: item
      minItems: 1
      maxItems: 5
    ClassicLoadBalancersConfig:
      type: object
      properties:
        classicLoadBalancers:
          allOf:
            - $ref: '#/components/schemas/ClassicLoadBalancers'
            - description: One or more Classic Load Balancers.
      description: Describes the Classic Load Balancers to attach to a Spot Fleet. Spot Fleet registers the running Spot Instances with these Classic Load Balancers.
    ClientCertificateRevocationListStatusCode:
      type: string
      enum:
        - pending
        - active
    ClientCertificateRevocationListStatus:
      type: object
      properties:
        code:
          allOf:
            - $ref: '#/components/schemas/ClientCertificateRevocationListStatusCode'
            - description: The state of the client certificate revocation list.
        message:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'A message about the status of the client certificate revocation list, if applicable.'
      description: Describes the state of a client certificate revocation list.
    ClientConnectOptions:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Resource Name (ARN) of the Lambda function used for connection authorization.
      description: The options for managing connection authorization for new client connections.
    ClientVpnEndpointAttributeStatus:
      type: object
      properties:
        code:
          allOf:
            - $ref: '#/components/schemas/ClientVpnEndpointAttributeStatusCode'
            - description: The status code.
        message:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The status message.
      description: Describes the status of the Client VPN endpoint attribute.
    ClientConnectResponseOptions:
      type: object
      properties:
        enabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether client connect options are enabled.
        lambdaFunctionArn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Resource Name (ARN) of the Lambda function used for connection authorization.
        status:
          allOf:
            - $ref: '#/components/schemas/ClientVpnEndpointAttributeStatus'
            - description: The status of any updates to the client connect options.
      description: The options for managing connection authorization for new client connections.
    ClientData:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The time that the disk upload starts.
      description: Describes the client-specific data.
    ClientLoginBannerOptions:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Customizable text that will be displayed in a banner on Amazon Web Services provided clients when a VPN session is established. UTF-8 encoded characters only. Maximum of 1400 characters.
      description: Options for enabling a customizable text banner that will be displayed on Amazon Web Services provided clients when a VPN session is established.
    ClientLoginBannerResponseOptions:
      type: object
      properties:
        enabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: '<p>Current state of text banner feature.</p> <p>Valid values: <code>true | false</code> </p>'
        bannerText:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Customizable text that will be displayed in a banner on Amazon Web Services provided clients when a VPN session is established. UTF-8 encoded characters only. Maximum of 1400 characters.
      description: Current state of options for customizable text banner that will be displayed on Amazon Web Services provided clients when a VPN session is established.
    ClientVpnAssociationId:
      type: string
    ClientVpnAuthenticationType:
      type: string
      enum:
        - certificate-authentication
        - directory-service-authentication
        - federated-authentication
    DirectoryServiceAuthentication:
      type: object
      properties:
        directoryId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Active Directory used for authentication.
      description: Describes an Active Directory.
    FederatedAuthentication:
      type: object
      properties:
        samlProviderArn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Resource Name (ARN) of the IAM SAML identity provider.
        selfServiceSamlProviderArn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Resource Name (ARN) of the IAM SAML identity provider for the self-service portal.
      description: Describes the IAM SAML identity providers used for federated authentication.
    ClientVpnAuthentication:
      type: object
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/ClientVpnAuthenticationType'
            - description: The authentication type used.
        activeDirectory:
          allOf:
            - $ref: '#/components/schemas/DirectoryServiceAuthentication'
            - description: 'Information about the Active Directory, if applicable.'
        mutualAuthentication:
          allOf:
            - $ref: '#/components/schemas/CertificateAuthentication'
            - description: 'Information about the authentication certificates, if applicable.'
        federatedAuthentication:
          allOf:
            - $ref: '#/components/schemas/FederatedAuthentication'
            - description: 'Information about the IAM SAML identity provider, if applicable.'
      description: 'Describes the authentication methods used by a Client VPN endpoint. For more information, see <a href="https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/client-authentication.html">Authentication</a> in the <i>Client VPN Administrator Guide</i>.'
    ClientVpnAuthenticationList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ClientVpnAuthentication'
          - xml:
              name: item
    FederatedAuthenticationRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Resource Name (ARN) of the IAM SAML identity provider for the self-service portal.
      description: The IAM SAML identity provider used for federated authentication.
    ClientVpnAuthenticationRequestList:
      type: array
      items:
        $ref: '#/components/schemas/ClientVpnAuthenticationRequest'
    ClientVpnAuthorizationRuleStatusCode:
      type: string
      enum:
        - authorizing
        - active
        - failed
        - revoking
    ClientVpnConnectionStatus:
      type: object
      properties:
        code:
          allOf:
            - $ref: '#/components/schemas/ClientVpnConnectionStatusCode'
            - description: The state of the client connection.
        message:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'A message about the status of the client connection, if applicable.'
      description: Describes the status of a client connection.
    ValueStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: item
    ClientVpnConnection:
      type: object
      properties:
        clientVpnEndpointId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Client VPN endpoint to which the client is connected.
        timestamp:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The current date and time.
        connectionId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the client connection.
        username:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The username of the client who established the client connection. This information is only provided if Active Directory client authentication is used.
        connectionEstablishedTime:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The date and time the client connection was established.
        ingressBytes:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The number of bytes sent by the client.
        egressBytes:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The number of bytes received by the client.
        ingressPackets:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The number of packets sent by the client.
        egressPackets:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The number of packets received by the client.
        clientIp:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The IP address of the client.
        commonName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The common name associated with the client. This is either the name of the client certificate, or the Active Directory user name.'
        status:
          allOf:
            - $ref: '#/components/schemas/ClientVpnConnectionStatus'
            - description: The current state of the client connection.
        connectionEndTime:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The date and time the client connection was terminated.
        postureComplianceStatusSet:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: 'The statuses returned by the client connect handler for posture compliance, if applicable.'
      description: Describes a client connection.
    ClientVpnConnectionSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ClientVpnConnection'
          - xml:
              name: item
    ClientVpnConnectionStatusCode:
      type: string
      enum:
        - active
        - failed-to-terminate
        - terminating
        - terminated
    ClientVpnEndpointStatus:
      type: object
      properties:
        code:
          allOf:
            - $ref: '#/components/schemas/ClientVpnEndpointStatusCode'
            - description: '<p>The state of the Client VPN endpoint. Possible states include:</p> <ul> <li> <p> <code>pending-associate</code> - The Client VPN endpoint has been created but no target networks have been associated. The Client VPN endpoint cannot accept connections.</p> </li> <li> <p> <code>available</code> - The Client VPN endpoint has been created and a target network has been associated. The Client VPN endpoint can accept connections.</p> </li> <li> <p> <code>deleting</code> - The Client VPN endpoint is being deleted. The Client VPN endpoint cannot accept connections.</p> </li> <li> <p> <code>deleted</code> - The Client VPN endpoint has been deleted. The Client VPN endpoint cannot accept connections.</p> </li> </ul>'
        message:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A message about the status of the Client VPN endpoint.
      description: Describes the state of a Client VPN endpoint.
    VpnProtocol:
      type: string
      enum:
        - openvpn
    TransportProtocol:
      type: string
      enum:
        - tcp
        - udp
    ConnectionLogResponseOptions:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the Amazon CloudWatch Logs log stream to which connection logging data is published.
      description: Information about the client connection logging options for a Client VPN endpoint.
    ClientVpnEndpoint:
      type: object
      properties:
        clientVpnEndpointId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Client VPN endpoint.
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A brief description of the endpoint.
        status:
          allOf:
            - $ref: '#/components/schemas/ClientVpnEndpointStatus'
            - description: The current state of the Client VPN endpoint.
        creationTime:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The date and time the Client VPN endpoint was created.
        deletionTime:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The date and time the Client VPN endpoint was deleted, if applicable.'
        dnsName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The DNS name to be used by clients when connecting to the Client VPN endpoint.
        clientCidrBlock:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The IPv4 address range, in CIDR notation, from which client IP addresses are assigned.'
        dnsServer:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: 'Information about the DNS servers to be used for DNS resolution. '
        splitTunnel:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: '<p>Indicates whether split-tunnel is enabled in the Client VPN endpoint.</p> <p>For information about split-tunnel VPN endpoints, see <a href="https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/split-tunnel-vpn.html">Split-Tunnel Client VPN endpoint</a> in the <i>Client VPN Administrator Guide</i>.</p>'
        vpnProtocol:
          allOf:
            - $ref: '#/components/schemas/VpnProtocol'
            - description: The protocol used by the VPN session.
        transportProtocol:
          allOf:
            - $ref: '#/components/schemas/TransportProtocol'
            - description: The transport protocol used by the Client VPN endpoint.
        vpnPort:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The port number for the Client VPN endpoint.
        associatedTargetNetwork:
          allOf:
            - $ref: '#/components/schemas/AssociatedTargetNetworkSet'
            - deprecated: true
              description: 'Information about the associated target networks. A target network is a subnet in a VPC.This property is deprecated. To view the target networks associated with a Client VPN endpoint, call DescribeClientVpnTargetNetworks and inspect the clientVpnTargetNetworks response element.'
        serverCertificateArn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ARN of the server certificate.
        authenticationOptions:
          allOf:
            - $ref: '#/components/schemas/ClientVpnAuthenticationList'
            - description: Information about the authentication method used by the Client VPN endpoint.
        connectionLogOptions:
          allOf:
            - $ref: '#/components/schemas/ConnectionLogResponseOptions'
            - description: Information about the client connection logging options for the Client VPN endpoint.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: Any tags assigned to the Client VPN endpoint.
        securityGroupIdSet:
          allOf:
            - $ref: '#/components/schemas/ClientVpnSecurityGroupIdSet'
            - description: The IDs of the security groups for the target network.
        vpcId:
          allOf:
            - $ref: '#/components/schemas/VpcId'
            - description: The ID of the VPC.
        selfServicePortalUrl:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The URL of the self-service portal.
        clientConnectOptions:
          allOf:
            - $ref: '#/components/schemas/ClientConnectResponseOptions'
            - description: The options for managing connection authorization for new client connections.
        sessionTimeoutHours:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: '<p>The maximum VPN session duration time in hours.</p> <p>Valid values: <code>8 | 10 | 12 | 24</code> </p> <p>Default value: <code>24</code> </p>'
        clientLoginBannerOptions:
          allOf:
            - $ref: '#/components/schemas/ClientLoginBannerResponseOptions'
            - description: Options for enabling a customizable text banner that will be displayed on Amazon Web Services provided clients when a VPN session is established.
      description: Describes a Client VPN endpoint.
    ClientVpnEndpointAttributeStatusCode:
      type: string
      enum:
        - applying
        - applied
    ClientVpnEndpointIdList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ClientVpnEndpointId'
          - xml:
              name: item
    ClientVpnEndpointStatusCode:
      type: string
      enum:
        - pending-associate
        - available
        - deleting
        - deleted
    ClientVpnRouteStatus:
      type: object
      properties:
        code:
          allOf:
            - $ref: '#/components/schemas/ClientVpnRouteStatusCode'
            - description: The state of the Client VPN endpoint route.
        message:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'A message about the status of the Client VPN endpoint route, if applicable.'
      description: Describes the state of a Client VPN endpoint route.
    ClientVpnRoute:
      type: object
      properties:
        clientVpnEndpointId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Client VPN endpoint with which the route is associated.
        destinationCidr:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The IPv4 address range, in CIDR notation, of the route destination.'
        targetSubnet:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the subnet through which traffic is routed.
        type:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The route type.
        origin:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Indicates how the route was associated with the Client VPN endpoint. <code>associate</code> indicates that the route was automatically added when the target network was associated with the Client VPN endpoint. <code>add-route</code> indicates that the route was manually added using the <b>CreateClientVpnRoute</b> action.
        status:
          allOf:
            - $ref: '#/components/schemas/ClientVpnRouteStatus'
            - description: The current state of the route.
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A brief description of the route.
      description: Information about a Client VPN endpoint route.
    ClientVpnRouteSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ClientVpnRoute'
          - xml:
              name: item
    ClientVpnRouteStatusCode:
      type: string
      enum:
        - creating
        - active
        - failed
        - deleting
    CoipAddressUsage:
      type: object
      properties:
        allocationId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The allocation ID of the address.
        awsAccountId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Web Services account ID.
        awsService:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Web Services service.
        coIp:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The customer-owned IP address.
      description: Describes address usage for a customer-owned address pool.
    CoipAddressUsageSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/CoipAddressUsage'
          - xml:
              name: item
    CoipPool:
      type: object
      properties:
        poolId:
          allOf:
            - $ref: '#/components/schemas/Ipv4PoolCoipId'
            - description: The ID of the address pool.
        poolCidrSet:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: The address ranges of the address pool.
        localGatewayRouteTableId:
          allOf:
            - $ref: '#/components/schemas/LocalGatewayRoutetableId'
            - description: The ID of the local gateway route table.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags.
        poolArn:
          allOf:
            - $ref: '#/components/schemas/ResourceArn'
            - description: The ARN of the address pool.
      description: Describes a customer-owned address pool.
    CoipPoolId:
      type: string
    CoipPoolIdSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Ipv4PoolCoipId'
          - xml:
              name: item
    CoipPoolMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    CoipPoolSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/CoipPool'
          - xml:
              name: item
    ConfirmProductInstanceRequest:
      type: object
      required:
        - InstanceId
        - ProductCode
      title: ConfirmProductInstanceRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The product code. This must be a product code that you own.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    ConnectionLogOptions:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the CloudWatch Logs log stream to which the connection data is published.
      description: Describes the client connection logging options for the Client VPN endpoint.
    ConnectionNotificationType:
      type: string
      enum:
        - Topic
    ConnectionNotificationState:
      type: string
      enum:
        - Enabled
        - Disabled
    ConnectionNotification:
      type: object
      properties:
        connectionNotificationId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the notification.
        serviceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the endpoint service.
        vpcEndpointId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the VPC endpoint.
        connectionNotificationType:
          allOf:
            - $ref: '#/components/schemas/ConnectionNotificationType'
            - description: The type of notification.
        connectionNotificationArn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ARN of the SNS topic for the notification.
        connectionEvents:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: 'The events for the notification. Valid values are <code>Accept</code>, <code>Connect</code>, <code>Delete</code>, and <code>Reject</code>.'
        connectionNotificationState:
          allOf:
            - $ref: '#/components/schemas/ConnectionNotificationState'
            - description: The state of the notification.
      description: Describes a connection notification for a VPC endpoint or VPC endpoint service.
    ConnectionNotificationIdsList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ConnectionNotificationId'
          - xml:
              name: item
    ConnectionNotificationSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ConnectionNotification'
          - xml:
              name: item
    ConnectivityType:
      type: string
      enum:
        - private
        - public
    ConversionIdStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ConversionTaskId'
          - xml:
              name: item
    ImportInstanceTaskDetails:
      type: object
      properties:
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A description of the task.
        instanceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the instance.
        platform:
          allOf:
            - $ref: '#/components/schemas/PlatformValues'
            - description: The instance operating system.
        volumes:
          allOf:
            - $ref: '#/components/schemas/ImportInstanceVolumeDetailSet'
            - description: The volumes.
      description: Describes an import instance task.
    ImportVolumeTaskDetails:
      type: object
      properties:
        availabilityZone:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Availability Zone where the resulting volume will reside.
        bytesConverted:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: The number of bytes converted so far.
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The description you provided when starting the import volume task.
        image:
          allOf:
            - $ref: '#/components/schemas/DiskImageDescription'
            - description: The image.
        volume:
          allOf:
            - $ref: '#/components/schemas/DiskImageVolumeDescription'
            - description: The volume.
      description: Describes an import volume task.
    ConversionTaskState:
      type: string
      enum:
        - active
        - cancelling
        - cancelled
        - completed
    ConversionTask:
      type: object
      properties:
        conversionTaskId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the conversion task.
        expirationTime:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The time when the task expires. If the upload isn''t complete before the expiration time, we automatically cancel the task.'
        importInstance:
          allOf:
            - $ref: '#/components/schemas/ImportInstanceTaskDetails'
            - description: 'If the task is for importing an instance, this contains information about the import instance task.'
        importVolume:
          allOf:
            - $ref: '#/components/schemas/ImportVolumeTaskDetails'
            - description: 'If the task is for importing a volume, this contains information about the import volume task.'
        state:
          allOf:
            - $ref: '#/components/schemas/ConversionTaskState'
            - description: The state of the conversion task.
        statusMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The status message related to the conversion task.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: Any tags assigned to the task.
      description: Describes a conversion task.
    CopyFpgaImageRequest:
      type: object
      required:
        - SourceFpgaImageId
        - SourceRegion
      title: CopyFpgaImageRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">Ensuring idempotency</a>.'
    CopyImageRequest:
      type: object
      required:
        - Name
        - SourceImageId
        - SourceRegion
      title: CopyImageRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A description for the new AMI in the destination Region.
        encrypted:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Specifies whether the destination snapshots of the copied image should be encrypted. You can encrypt a copy of an unencrypted snapshot, but you cannot create an unencrypted copy of an encrypted snapshot. The default KMS key for Amazon EBS is used unless you specify a non-default Key Management Service (KMS) KMS key using <code>KmsKeyId</code>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.'
        kmsKeyId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The Amazon Resource Name (ARN) of the Outpost to which to copy the AMI. Only specify this parameter when copying an AMI from an Amazon Web Services Region to an Outpost. The AMI must be in the Region of the destination Outpost. You cannot copy an AMI from an Outpost to a Region, from one Outpost to another, or within the same Outpost.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshots-outposts.html#copy-amis"> Copying AMIs from an Amazon Web Services Region to an Outpost</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
      description: Contains the parameters for CopyImage.
    KmsKeyId:
      type: string
    CopySnapshotRequest:
      type: object
      required:
        - SourceRegion
        - SourceSnapshotId
      title: CopySnapshotRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The Amazon Resource Name (ARN) of the Outpost to which to copy the snapshot. Only specify this parameter when copying a snapshot from an Amazon Web Services Region to an Outpost. The snapshot must be in the Region for the destination Outpost. You cannot copy a snapshot from an Outpost to a Region, from one Outpost to another, or within the same Outpost.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshots-outposts.html#copy-snapshots"> Copy snapshots from an Amazon Web Services Region to an Outpost</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
        destinationRegion:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The destination Region to use in the <code>PresignedUrl</code> parameter of a snapshot copy operation. This parameter is only valid for specifying the destination Region in a <code>PresignedUrl</code> parameter, where it is required.</p> <p>The snapshot copy is sent to the regional endpoint that you sent the HTTP request to (for example, <code>ec2.us-east-1.amazonaws.com</code>). With the CLI, this is specified using the <code>--region</code> parameter or the default Region in your Amazon Web Services configuration file.</p>'
        encrypted:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'To encrypt a copy of an unencrypted snapshot if encryption by default is not enabled, enable encryption using this parameter. Otherwise, omit this parameter. Encrypted snapshots are encrypted, even if you omit this parameter and encryption by default is not enabled. You cannot set this parameter to false. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.'
        kmsKeyId:
          allOf:
            - $ref: '#/components/schemas/KmsKeyId'
            - description: '<p>The identifier of the Key Management Service (KMS) KMS key to use for Amazon EBS encryption. If this parameter is not specified, your KMS key for Amazon EBS is used. If <code>KmsKeyId</code> is specified, the encrypted state must be <code>true</code>.</p> <p>You can specify the KMS key using any of the following:</p> <ul> <li> <p>Key ID. For example, 1234abcd-12ab-34cd-56ef-1234567890ab.</p> </li> <li> <p>Key alias. For example, alias/ExampleAlias.</p> </li> <li> <p>Key ARN. For example, arn:aws:kms:us-east-1:012345678910:key/1234abcd-12ab-34cd-56ef-1234567890ab.</p> </li> <li> <p>Alias ARN. For example, arn:aws:kms:us-east-1:012345678910:alias/ExampleAlias.</p> </li> </ul> <p>Amazon Web Services authenticates the KMS key asynchronously. Therefore, if you specify an ID, alias, or ARN that is not valid, the action can appear to complete, but eventually fails.</p>'
        presignedUrl:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the EBS snapshot to copy.
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/TagSpecificationList'
            - description: The tags to apply to the new snapshot.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    CopyTagsFromSource:
      type: string
      enum:
        - volume
    CoreCount:
      type: integer
    CoreCountList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/CoreCount'
          - xml:
              name: item
    CoreNetworkArn:
      type: string
    CpuManufacturer:
      type: string
      enum:
        - intel
        - amd
        - amazon-web-services
    CpuManufacturerSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/CpuManufacturer'
          - xml:
              name: item
    CpuOptions:
      type: object
      properties:
        coreCount:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of CPU cores for the instance.
        threadsPerCore:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of threads per CPU core.
      description: The CPU options for the instance.
    CpuOptionsRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The number of threads per CPU core. To disable multithreading for the instance, specify a value of <code>1</code>. Otherwise, specify the default value of <code>2</code>.'
      description: The CPU options for the instance. Both the core count and threads per core must be specified in the request.
    CreateCapacityReservationFleetRequest:
      type: object
      required:
        - InstanceTypeSpecifications
        - TotalTargetCapacity
      title: CreateCapacityReservationFleetRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensure Idempotency</a>.'
        InstanceTypeSpecification:
          allOf:
            - $ref: '#/components/schemas/FleetInstanceMatchCriteria'
            - description: '<p>Indicates the type of instance launches that the Capacity Reservation Fleet accepts. All Capacity Reservations in the Fleet inherit this instance matching criteria.</p> <p>Currently, Capacity Reservation Fleets support <code>open</code> instance matching criteria only. This means that instances that have matching attributes (instance type, platform, and Availability Zone) run in the Capacity Reservations automatically. Instances do not need to explicitly target a Capacity Reservation Fleet to use its reserved capacity.</p>'
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    CreateCapacityReservationRequest:
      type: object
      required:
        - InstanceType
        - InstancePlatform
        - InstanceCount
      title: CreateCapacityReservationRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/PlacementGroupArn'
            - description: 'The Amazon Resource Name (ARN) of the cluster placement group in which to create the Capacity Reservation. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/cr-cpg.html"> Capacity Reservations for cluster placement groups</a> in the <i>Amazon EC2 User Guide</i>.'
    CreateCarrierGatewayRequest:
      type: object
      required:
        - VpcId
      title: CreateCarrierGatewayRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/VpcId'
            - description: The ID of the VPC to associate with the carrier gateway.
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to ensure idempotency</a>.'
    CreateClientVpnEndpointRequest:
      type: object
      required:
        - ClientCidrBlock
        - ServerCertificateArn
        - AuthenticationOptions
        - ConnectionLogOptions
      title: CreateClientVpnEndpointRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The ARN of the server certificate. For more information, see the <a href="https://docs.aws.amazon.com/acm/latest/userguide/">Certificate Manager User Guide</a>.'
        Authentication:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to ensure idempotency</a>.'
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/TagSpecificationList'
            - description: The tags to apply to the Client VPN endpoint during creation.
        SecurityGroupId:
          allOf:
            - $ref: '#/components/schemas/ClientLoginBannerOptions'
            - description: Options for enabling a customizable text banner that will be displayed on Amazon Web Services provided clients when a VPN session is established.
    CreateClientVpnRouteRequest:
      type: object
      required:
        - ClientVpnEndpointId
        - DestinationCidrBlock
        - TargetVpcSubnetId
      title: CreateClientVpnRouteRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    GatewayType:
      type: string
      enum:
        - ipsec.1
    CreateCustomerGatewayRequest:
      type: object
      required:
        - BgpAsn
        - Type
      title: CreateCustomerGatewayRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: '<p>For devices that support BGP, the customer gateway''s BGP ASN.</p> <p>Default: 65000</p>'
        IpAddress:
          allOf:
            - $ref: '#/components/schemas/GatewayType'
            - description: The type of VPN connection that this customer gateway supports (<code>ipsec.1</code>).
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>A name for the customer gateway device.</p> <p>Length Constraints: Up to 255 characters.</p>'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
      description: Contains the parameters for CreateCustomerGateway.
    CustomerGateway:
      type: object
      properties:
        bgpAsn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The customer gateway's Border Gateway Protocol (BGP) Autonomous System Number (ASN).
        customerGatewayId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the customer gateway.
        ipAddress:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Internet-routable IP address of the customer gateway's outside interface.
        certificateArn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Resource Name (ARN) for the customer gateway certificate.
        state:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The current state of the customer gateway (<code>pending | available | deleting | deleted</code>).
        type:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The type of VPN connection the customer gateway supports (<code>ipsec.1</code>).
        deviceName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of customer gateway device.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: Any tags assigned to the customer gateway.
      description: Describes a customer gateway.
    CreateDefaultSubnetRequest:
      type: object
      required:
        - AvailabilityZone
      title: CreateDefaultSubnetRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Indicates whether to create an IPv6 only subnet. If you already have a default subnet for this Availability Zone, you must delete it before you can create an IPv6 only subnet.'
    Subnet:
      type: object
      properties:
        availabilityZone:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Availability Zone of the subnet.
        availabilityZoneId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The AZ ID of the subnet.
        availableIpAddressCount:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of unused private IPv4 addresses in the subnet. The IPv4 addresses for any stopped instances are considered unavailable.
        cidrBlock:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The IPv4 CIDR block assigned to the subnet.
        defaultForAz:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether this is the default subnet for the Availability Zone.
        enableLniAtDeviceIndex:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: ' Indicates the device position for local network interfaces in this subnet. For example, <code>1</code> indicates local network interfaces in this subnet are the secondary network interface (eth1). '
        mapPublicIpOnLaunch:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether instances launched in this subnet receive a public IPv4 address.
        mapCustomerOwnedIpOnLaunch:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether a network interface created in this subnet (including a network interface created by <a>RunInstances</a>) receives a customer-owned IPv4 address.
        customerOwnedIpv4Pool:
          allOf:
            - $ref: '#/components/schemas/CoipPoolId'
            - description: The customer-owned IPv4 address pool associated with the subnet.
        state:
          allOf:
            - $ref: '#/components/schemas/SubnetState'
            - description: The current state of the subnet.
        subnetId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the subnet.
        vpcId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the VPC the subnet is in.
        ownerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Amazon Web Services account that owns the subnet.
        assignIpv6AddressOnCreation:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether a network interface created in this subnet (including a network interface created by <a>RunInstances</a>) receives an IPv6 address.
        ipv6CidrBlockAssociationSet:
          allOf:
            - $ref: '#/components/schemas/SubnetIpv6CidrBlockAssociationSet'
            - description: Information about the IPv6 CIDR blocks associated with the subnet.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: Any tags assigned to the subnet.
        subnetArn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Resource Name (ARN) of the subnet.
        outpostArn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Resource Name (ARN) of the Outpost.
        enableDns64:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations.
        ipv6Native:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether this is an IPv6 only subnet.
        privateDnsNameOptionsOnLaunch:
          allOf:
            - $ref: '#/components/schemas/PrivateDnsNameOptionsOnLaunch'
            - description: The type of hostnames to assign to instances in the subnet at launch. An instance hostname is based on the IPv4 address or ID of the instance.
      description: Describes a subnet.
    CreateDefaultVpcRequest:
      type: object
      title: CreateDefaultVpcRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    Vpc:
      type: object
      properties:
        cidrBlock:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The primary IPv4 CIDR block for the VPC.
        dhcpOptionsId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the set of DHCP options you've associated with the VPC.
        state:
          allOf:
            - $ref: '#/components/schemas/VpcState'
            - description: The current state of the VPC.
        vpcId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the VPC.
        ownerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Amazon Web Services account that owns the VPC.
        instanceTenancy:
          allOf:
            - $ref: '#/components/schemas/Tenancy'
            - description: The allowed tenancy of instances launched into the VPC.
        ipv6CidrBlockAssociationSet:
          allOf:
            - $ref: '#/components/schemas/VpcIpv6CidrBlockAssociationSet'
            - description: Information about the IPv6 CIDR blocks associated with the VPC.
        cidrBlockAssociationSet:
          allOf:
            - $ref: '#/components/schemas/VpcCidrBlockAssociationSet'
            - description: Information about the IPv4 CIDR blocks associated with the VPC.
        isDefault:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the VPC is the default VPC.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: Any tags assigned to the VPC.
      description: Describes a VPC.
    NewDhcpConfigurationList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/NewDhcpConfiguration'
          - xml:
              name: item
    CreateDhcpOptionsRequest:
      type: object
      required:
        - DhcpConfigurations
      title: CreateDhcpOptionsRequest
      properties:
        dhcpConfiguration:
          allOf:
            - $ref: '#/components/schemas/NewDhcpConfigurationList'
            - description: A DHCP configuration option.
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/TagSpecificationList'
            - description: The tags to assign to the DHCP option.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DhcpOptions:
      type: object
      properties:
        dhcpConfigurationSet:
          allOf:
            - $ref: '#/components/schemas/DhcpConfigurationList'
            - description: One or more DHCP options in the set.
        dhcpOptionsId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the set of DHCP options.
        ownerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Amazon Web Services account that owns the DHCP options set.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: Any tags assigned to the DHCP options set.
      description: Describes a set of DHCP options.
    CreateEgressOnlyInternetGatewayRequest:
      type: object
      required:
        - VpcId
      title: CreateEgressOnlyInternetGatewayRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/VpcId'
            - description: The ID of the VPC for which to create the egress-only internet gateway.
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/TagSpecificationList'
            - description: The tags to assign to the egress-only internet gateway.
    EgressOnlyInternetGateway:
      type: object
      properties:
        attachmentSet:
          allOf:
            - $ref: '#/components/schemas/InternetGatewayAttachmentList'
            - description: Information about the attachment of the egress-only internet gateway.
        egressOnlyInternetGatewayId:
          allOf:
            - $ref: '#/components/schemas/EgressOnlyInternetGatewayId'
            - description: The ID of the egress-only internet gateway.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags assigned to the egress-only internet gateway.
      description: Describes an egress-only internet gateway.
    LaunchTemplateAndOverridesResponse:
      type: object
      properties:
        launchTemplateSpecification:
          allOf:
            - $ref: '#/components/schemas/FleetLaunchTemplateSpecification'
            - description: The launch template.
        overrides:
          allOf:
            - $ref: '#/components/schemas/FleetLaunchTemplateOverrides'
            - description: Any parameters that you specify override the same parameters in the launch template.
      description: Describes a launch template and overrides.
    InstanceLifecycle:
      type: string
      enum:
        - spot
        - on-demand
    CreateFleetError:
      type: object
      properties:
        launchTemplateAndOverrides:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateAndOverridesResponse'
            - description: The launch templates and overrides that were used for launching the instances. The values that you specify in the Overrides replace the values in the launch template.
        lifecycle:
          allOf:
            - $ref: '#/components/schemas/InstanceLifecycle'
            - description: Indicates if the instance that could not be launched was a Spot Instance or On-Demand Instance.
        errorCode:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The error code that indicates why the instance could not be launched. For more information about error codes, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/errors-overview.html.html">Error codes</a>.'
        errorMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The error message that describes why the instance could not be launched. For more information about error messages, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/errors-overview.html.html">Error codes</a>.'
      description: Describes the instances that could not be launched by the fleet.
    CreateFleetErrorsSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/CreateFleetError'
          - xml:
              name: item
    InstanceIdsSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/InstanceId'
          - xml:
              name: item
    PlatformValues:
      type: string
      enum:
        - Windows
    CreateFleetInstance:
      type: object
      properties:
        launchTemplateAndOverrides:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateAndOverridesResponse'
            - description: The launch templates and overrides that were used for launching the instances. The values that you specify in the Overrides replace the values in the launch template.
        lifecycle:
          allOf:
            - $ref: '#/components/schemas/InstanceLifecycle'
            - description: Indicates if the instance that was launched is a Spot Instance or On-Demand Instance.
        instanceIds:
          allOf:
            - $ref: '#/components/schemas/InstanceIdsSet'
            - description: The IDs of the instances.
        instanceType:
          allOf:
            - $ref: '#/components/schemas/InstanceType'
            - description: The instance type.
        platform:
          allOf:
            - $ref: '#/components/schemas/PlatformValues'
            - description: 'The value is <code>Windows</code> for Windows instances. Otherwise, the value is blank.'
      description: Describes the instances that were launched by the fleet.
    CreateFleetInstancesSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/CreateFleetInstance'
          - xml:
              name: item
    CreateFleetRequest:
      type: object
      required:
        - LaunchTemplateConfigs
        - TargetCapacitySpecification
      title: CreateFleetRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Indicates whether EC2 Fleet should replace unhealthy Spot Instances. Supported only for fleets of type <code>maintain</code>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/manage-ec2-fleet.html#ec2-fleet-health-checks">EC2 Fleet health checks</a> in the <i>Amazon EC2 User Guide</i>.'
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Reserved.
    DestinationOptionsRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether to partition the flow log per hour. This reduces the cost and response time for queries. The default is <code>false</code>.
      description: Describes the destination options for a flow log.
    CreateFlowLogsRequest:
      type: object
      required:
        - ResourceIds
        - ResourceType
        - TrafficType
      title: CreateFlowLogsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The name of a new or existing CloudWatch Logs log group where Amazon EC2 publishes your flow logs.</p> <p>If you specify <code>LogDestinationType</code> as <code>s3</code>, do not specify <code>DeliverLogsPermissionArn</code> or <code>LogGroupName</code>.</p>'
        ResourceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The fields to include in the flow log record, in the order in which they should appear. For a list of available fields, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs.html#flow-log-records">Flow log records</a>. If you omit this parameter, the flow log is created using the default format. If you specify this parameter, you must specify at least one field.</p> <p>Specify the fields using the <code>${field-id}</code> format, separated by spaces. For the CLI, surround this parameter value with single quotes on Linux or double quotes on Windows.</p>'
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/DestinationOptionsRequest'
            - description: The destination options.
    CreateFpgaImageRequest:
      type: object
      required:
        - InputStorageLocation
      title: CreateFpgaImageRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.'
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/TagSpecificationList'
            - description: The tags to apply to the FPGA image during creation.
    CreateImageRequest:
      type: object
      required:
        - InstanceId
        - Name
      title: CreateImageRequest
      properties:
        blockDeviceMapping:
          allOf:
            - $ref: '#/components/schemas/BlockDeviceMappingRequestList'
            - description: 'The block device mappings. This parameter cannot be used to modify the encryption status of existing volumes or snapshots. To create an AMI with encrypted snapshots, use the <a>CopyImage</a> action.'
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A description for the new image.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        instanceId:
          allOf:
            - $ref: '#/components/schemas/InstanceId'
            - description: The ID of the instance.
        name:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>A name for the new image.</p> <p>Constraints: 3-128 alphanumeric characters, parentheses (()), square brackets ([]), spaces ( ), periods (.), slashes (/), dashes (-), single quotes (''), at-signs (@), or underscores(_)</p>'
        noReboot:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: '<p>By default, when Amazon EC2 creates the new AMI, it reboots the instance so that it can take snapshots of the attached volumes while data is at rest, in order to ensure a consistent state. You can set the <code>NoReboot</code> parameter to <code>true</code> in the API request, or use the <code>--no-reboot</code> option in the CLI to prevent Amazon EC2 from shutting down and rebooting the instance.</p> <important> <p>If you choose to bypass the shutdown and reboot process by setting the <code>NoReboot</code> parameter to <code>true</code> in the API request, or by using the <code>--no-reboot</code> option in the CLI, we can''t guarantee the file system integrity of the created image.</p> </important> <p>Default: <code>false</code> (follow standard reboot process)</p>'
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/TagSpecificationList'
            - description: '<p>The tags to apply to the AMI and snapshots on creation. You can tag the AMI, the snapshots, or both.</p> <ul> <li> <p>To tag the AMI, the value for <code>ResourceType</code> must be <code>image</code>.</p> </li> <li> <p>To tag the snapshots that are created of the root volume and of other Amazon EBS volumes that are attached to the instance, the value for <code>ResourceType</code> must be <code>snapshot</code>. The same tag is applied to all of the snapshots that are created.</p> </li> </ul> <p>If you specify other values for <code>ResourceType</code>, the request fails.</p> <p>To tag an AMI or snapshot after it has been created, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html">CreateTags</a>. </p>'
    InstanceEventWindowCronExpression:
      type: string
    CreateInstanceEventWindowRequest:
      type: object
      title: CreateInstanceEventWindowRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the event window.
        TimeRange:
          allOf:
            - $ref: '#/components/schemas/InstanceEventWindowCronExpression'
            - description: '<p>The cron expression for the event window, for example, <code>* 0-4,20-23 * * 1,5</code>. If you specify a cron expression, you can''t specify a time range.</p> <p>Constraints:</p> <ul> <li> <p>Only hour and day of the week values are supported.</p> </li> <li> <p>For day of the week values, you can specify either integers <code>0</code> through <code>6</code>, or alternative single values <code>SUN</code> through <code>SAT</code>.</p> </li> <li> <p>The minute, month, and year must be specified by <code>*</code>.</p> </li> <li> <p>The hour value must be one or a multiple range, for example, <code>0-4</code> or <code>0-4,20-23</code>.</p> </li> <li> <p>Each hour range must be &gt;= 2 hours, for example, <code>0-2</code> or <code>20-23</code>.</p> </li> <li> <p>The event window must be &gt;= 4 hours. The combined total time ranges in the event window must be &gt;= 4 hours.</p> </li> </ul> <p>For more information about cron expressions, see <a href="https://en.wikipedia.org/wiki/Cron">cron</a> on the <i>Wikipedia website</i>.</p>'
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/TagSpecificationList'
            - description: The tags to apply to the event window.
    ExportToS3TaskSpecification:
      type: object
      properties:
        containerFormat:
          allOf:
            - $ref: '#/components/schemas/ContainerFormat'
            - description: 'The container format used to combine disk images with metadata (such as OVF). If absent, only the disk image is exported.'
        diskImageFormat:
          allOf:
            - $ref: '#/components/schemas/DiskImageFormat'
            - description: The format for the exported image.
        s3Bucket:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon S3 bucket for the destination image. The destination bucket must exist and grant WRITE and READ_ACP permissions to the Amazon Web Services account <code>vm-import-export@amazon.com</code>.
        s3Prefix:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The image is written to a single object in the Amazon S3 bucket at the S3 key s3prefix + exportTaskId + '.' + diskImageFormat.
      description: Describes an export instance task.
    ExportEnvironment:
      type: string
      enum:
        - citrix
        - vmware
        - microsoft
    CreateInstanceExportTaskRequest:
      type: object
      required:
        - ExportToS3Task
        - InstanceId
        - TargetEnvironment
      title: CreateInstanceExportTaskRequest
      properties:
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A description for the conversion task or the resource being exported. The maximum length is 255 characters.
        exportToS3:
          allOf:
            - $ref: '#/components/schemas/ExportToS3TaskSpecification'
            - description: The format and location for an export instance task.
        instanceId:
          allOf:
            - $ref: '#/components/schemas/InstanceId'
            - description: The ID of the instance.
        targetEnvironment:
          allOf:
            - $ref: '#/components/schemas/ExportEnvironment'
            - description: The target virtualization environment.
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/TagSpecificationList'
            - description: The tags to apply to the export instance task during creation.
    ExportTask:
      type: object
      properties:
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A description of the resource being exported.
        exportTaskId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the export task.
        exportToS3:
          allOf:
            - $ref: '#/components/schemas/ExportToS3Task'
            - description: Information about the export task.
        instanceExport:
          allOf:
            - $ref: '#/components/schemas/InstanceExportDetails'
            - description: Information about the instance to export.
        state:
          allOf:
            - $ref: '#/components/schemas/ExportTaskState'
            - description: The state of the export task.
        statusMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The status message related to the export task.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags for the export task.
      description: Describes an export instance task.
    CreateInternetGatewayRequest:
      type: object
      title: CreateInternetGatewayRequest
      properties:
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/TagSpecificationList'
            - description: The tags to assign to the internet gateway.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    InternetGateway:
      type: object
      properties:
        attachmentSet:
          allOf:
            - $ref: '#/components/schemas/InternetGatewayAttachmentList'
            - description: Any VPCs attached to the internet gateway.
        internetGatewayId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the internet gateway.
        ownerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Amazon Web Services account that owns the internet gateway.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: Any tags assigned to the internet gateway.
      description: Describes an internet gateway.
    IpamNetmaskLength:
      type: integer
      minimum: 0
      maximum: 128
    RequestIpamResourceTagList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/RequestIpamResourceTag'
          - xml:
              name: item
    IpamPoolAwsService:
      type: string
      enum:
        - ec2
    CreateIpamPoolRequest:
      type: object
      required:
        - IpamScopeId
        - AddressFamily
      title: CreateIpamPoolRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/IpamNetmaskLength'
            - description: 'The default netmask length for allocations added to this pool. If, for example, the CIDR assigned to this pool is 10.0.0.0/8 and you enter 16 here, new allocations will default to 10.0.0.0/16.'
        AllocationResourceTag:
          allOf:
            - $ref: '#/components/schemas/RequestIpamResourceTagList'
            - description: 'Tags that are required for resources that use CIDRs from this IPAM pool. Resources that do not have these tags will not be allowed to allocate space from the pool. If the resources have their tags changed after they have allocated space or if the allocation tagging requirements are changed on the pool, the resource may be marked as noncompliant.'
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/IpamPoolAwsService'
            - description: 'Limits which service in Amazon Web Services that the pool can be used in. "ec2", for example, allows users to use space for Elastic IP addresses and VPCs.'
    IpamPool:
      type: object
      properties:
        ownerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Web Services account ID of the owner of the IPAM pool.
        ipamPoolId:
          allOf:
            - $ref: '#/components/schemas/IpamPoolId'
            - description: The ID of the IPAM pool.
        sourceIpamPoolId:
          allOf:
            - $ref: '#/components/schemas/IpamPoolId'
            - description: The ID of the source IPAM pool. You can use this option to create an IPAM pool within an existing source pool.
        ipamPoolArn:
          allOf:
            - $ref: '#/components/schemas/ResourceArn'
            - description: The ARN of the IPAM pool.
        ipamScopeArn:
          allOf:
            - $ref: '#/components/schemas/ResourceArn'
            - description: The ARN of the scope of the IPAM pool.
        ipamScopeType:
          allOf:
            - $ref: '#/components/schemas/IpamScopeType'
            - description: 'In IPAM, a scope is the highest-level container within IPAM. An IPAM contains two default scopes. Each scope represents the IP space for a single network. The private scope is intended for all private IP address space. The public scope is intended for all public IP address space. Scopes enable you to reuse IP addresses across multiple unconnected networks without causing IP address overlap or conflict.'
        ipamArn:
          allOf:
            - $ref: '#/components/schemas/ResourceArn'
            - description: The ARN of the IPAM.
        ipamRegion:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Web Services Region of the IPAM pool.
        locale:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The locale of the IPAM pool. In IPAM, the locale is the Amazon Web Services Region where you want to make an IPAM pool available for allocations. Only resources in the same Region as the locale of the pool can get IP address allocations from the pool. You can only allocate a CIDR for a VPC, for example, from an IPAM pool that shares a locale with the VPC’s Region. Note that once you choose a Locale for a pool, you cannot modify it. If you choose an Amazon Web Services Region for locale that has not been configured as an operating Region for the IPAM, you''ll get an error.'
        poolDepth:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The depth of pools in your IPAM pool. The pool depth quota is 10. For more information, see <a href="/vpc/latest/ipam/quotas-ipam.html">Quotas in IPAM</a> in the <i>Amazon VPC IPAM User Guide</i>. '
        state:
          allOf:
            - $ref: '#/components/schemas/IpamPoolState'
            - description: The state of the IPAM pool.
        stateMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A message related to the failed creation of an IPAM pool.
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The description of the IPAM pool.
        autoImport:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: '<p>If selected, IPAM will continuously look for resources within the CIDR range of this pool and automatically import them as allocations into your IPAM. The CIDRs that will be allocated for these resources must not already be allocated to other resources in order for the import to succeed. IPAM will import a CIDR regardless of its compliance with the pool''s allocation rules, so a resource might be imported and subsequently marked as noncompliant. If IPAM discovers multiple CIDRs that overlap, IPAM will import the largest CIDR only. If IPAM discovers multiple CIDRs with matching CIDRs, IPAM will randomly import one of them only. </p> <p>A locale must be set on the pool for this feature to work.</p>'
        publiclyAdvertisable:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Determines if a pool is publicly advertisable. This option is not available for pools with AddressFamily set to <code>ipv4</code>.
        addressFamily:
          allOf:
            - $ref: '#/components/schemas/AddressFamily'
            - description: The address family of the pool.
        allocationMinNetmaskLength:
          allOf:
            - $ref: '#/components/schemas/IpamNetmaskLength'
            - description: The minimum netmask length required for CIDR allocations in this IPAM pool to be compliant. The minimum netmask length must be less than the maximum netmask length. Possible netmask lengths for IPv4 addresses are 0 - 32. Possible netmask lengths for IPv6 addresses are 0 - 128.
        allocationMaxNetmaskLength:
          allOf:
            - $ref: '#/components/schemas/IpamNetmaskLength'
            - description: The maximum netmask length possible for CIDR allocations in this IPAM pool to be compliant. The maximum netmask length must be greater than the minimum netmask length. Possible netmask lengths for IPv4 addresses are 0 - 32. Possible netmask lengths for IPv6 addresses are 0 - 128.
        allocationDefaultNetmaskLength:
          allOf:
            - $ref: '#/components/schemas/IpamNetmaskLength'
            - description: 'The default netmask length for allocations added to this pool. If, for example, the CIDR assigned to this pool is 10.0.0.0/8 and you enter 16 here, new allocations will default to 10.0.0.0/16.'
        allocationResourceTagSet:
          allOf:
            - $ref: '#/components/schemas/IpamResourceTagList'
            - description: 'Tags that are required for resources that use CIDRs from this IPAM pool. Resources that do not have these tags will not be allowed to allocate space from the pool. If the resources have their tags changed after they have allocated space or if the allocation tagging requirements are changed on the pool, the resource may be marked as noncompliant.'
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: 'The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.'
        awsService:
          allOf:
            - $ref: '#/components/schemas/IpamPoolAwsService'
            - description: 'Limits which service in Amazon Web Services that the pool can be used in. "ec2", for example, allows users to use space for Elastic IP addresses and VPCs.'
      description: 'In IPAM, a pool is a collection of contiguous IP addresses CIDRs. Pools enable you to organize your IP addresses according to your routing and security needs. For example, if you have separate routing and security needs for development and production applications, you can create a pool for each.'
    CreateIpamRequest:
      type: object
      title: CreateIpamRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A description for the IPAM.
        OperatingRegion:
          allOf:
            - $ref: '#/components/schemas/AddIpamOperatingRegionSet'
            - description: '<p>The operating Regions for the IPAM. Operating Regions are Amazon Web Services Regions where the IPAM is allowed to manage IP address CIDRs. IPAM only discovers and monitors resources in the Amazon Web Services Regions you select as operating Regions.</p> <p>For more information about operating Regions, see <a href="/vpc/latest/ipam/create-ipam.html">Create an IPAM</a> in the <i>Amazon VPC IPAM User Guide</i>. </p>'
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.'
    Ipam:
      type: object
      properties:
        ownerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Web Services account ID of the owner of the IPAM.
        ipamId:
          allOf:
            - $ref: '#/components/schemas/IpamId'
            - description: The ID of the IPAM.
        ipamArn:
          allOf:
            - $ref: '#/components/schemas/ResourceArn'
            - description: The ARN of the IPAM.
        ipamRegion:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Web Services Region of the IPAM.
        publicDefaultScopeId:
          allOf:
            - $ref: '#/components/schemas/IpamScopeId'
            - description: The ID of the IPAM's default public scope.
        privateDefaultScopeId:
          allOf:
            - $ref: '#/components/schemas/IpamScopeId'
            - description: The ID of the IPAM's default private scope.
        scopeCount:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The number of scopes in the IPAM. The scope quota is 5. For more information on quotas, see <a href="/vpc/latest/ipam/quotas-ipam.html">Quotas in IPAM</a> in the <i>Amazon VPC IPAM User Guide</i>. '
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The description for the IPAM.
        operatingRegionSet:
          allOf:
            - $ref: '#/components/schemas/IpamOperatingRegionSet'
            - description: '<p>The operating Regions for an IPAM. Operating Regions are Amazon Web Services Regions where the IPAM is allowed to manage IP address CIDRs. IPAM only discovers and monitors resources in the Amazon Web Services Regions you select as operating Regions.</p> <p>For more information about operating Regions, see <a href="/vpc/latest/ipam/create-ipam.html">Create an IPAM</a> in the <i>Amazon VPC IPAM User Guide</i>.</p>'
        state:
          allOf:
            - $ref: '#/components/schemas/IpamState'
            - description: The state of the IPAM.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: 'The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.'
      description: 'IPAM is a VPC feature that you can use to automate your IP address management workflows including assigning, tracking, troubleshooting, and auditing IP addresses across Amazon Web Services Regions and accounts throughout your Amazon Web Services Organization. For more information, see <a href="/vpc/latest/ipam/what-is-it-ipam.html">What is IPAM?</a> in the <i>Amazon VPC IPAM User Guide</i>.'
    CreateIpamScopeRequest:
      type: object
      required:
        - IpamId
      title: CreateIpamScopeRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A description for the scope you're creating.
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.'
    IpamScope:
      type: object
      properties:
        ownerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Web Services account ID of the owner of the scope.
        ipamScopeId:
          allOf:
            - $ref: '#/components/schemas/IpamScopeId'
            - description: The ID of the scope.
        ipamScopeArn:
          allOf:
            - $ref: '#/components/schemas/ResourceArn'
            - description: The ARN of the scope.
        ipamArn:
          allOf:
            - $ref: '#/components/schemas/ResourceArn'
            - description: The ARN of the IPAM.
        ipamRegion:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Web Services Region of the IPAM scope.
        ipamScopeType:
          allOf:
            - $ref: '#/components/schemas/IpamScopeType'
            - description: The type of the scope.
        isDefault:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Defines if the scope is the default scope or not.
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The description of the scope.
        poolCount:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of pools in the scope.
        state:
          allOf:
            - $ref: '#/components/schemas/IpamScopeState'
            - description: The state of the IPAM scope.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: 'The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.'
      description: '<p>In IPAM, a scope is the highest-level container within IPAM. An IPAM contains two default scopes. Each scope represents the IP space for a single network. The private scope is intended for all private IP address space. The public scope is intended for all public IP address space. Scopes enable you to reuse IP addresses across multiple unconnected networks without causing IP address overlap or conflict.</p> <p>For more information, see <a href="/vpc/latest/ipam/how-it-works-ipam.html">How IPAM works</a> in the <i>Amazon VPC IPAM User Guide</i>.</p>'
    KeyType:
      type: string
      enum:
        - rsa
        - ed25519
    KeyFormat:
      type: string
      enum:
        - pem
        - ppk
    CreateKeyPairRequest:
      type: object
      required:
        - KeyName
      title: CreateKeyPairRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>A unique name for the key pair.</p> <p>Constraints: Up to 255 ASCII characters</p>'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/KeyType'
            - description: '<p>The type of key pair. Note that ED25519 keys are not supported for Windows instances.</p> <p>Default: <code>rsa</code> </p>'
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/KeyFormat'
            - description: '<p>The format of the key pair.</p> <p>Default: <code>pem</code> </p>'
    RequestLaunchTemplateData:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateIamInstanceProfileSpecificationRequest'
            - description: The name or Amazon Resource Name (ARN) of an IAM instance profile.
        BlockDeviceMapping:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateBlockDeviceMappingRequestList'
            - description: The block device mapping.
        NetworkInterface:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The user data to make available to the instance. You must provide base64-encoded text. User data is limited to 16 KB. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html">Running Commands on Your Linux Instance at Launch</a> (Linux) or <a href="https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ec2-instance-metadata.html#instancedata-add-user-data">Adding User Data</a> (Windows).</p> <p>If you are creating the launch template for use with Batch, the user data must be provided in the <a href="https://cloudinit.readthedocs.io/en/latest/topics/format.html#mime-multi-part-archive"> MIME multi-part archive format</a>. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/launch-templates.html">Amazon EC2 user data in launch templates</a> in the <i>Batch User Guide</i>.</p>'
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateTagSpecificationRequestList'
            - description: 'The tags to apply to the resources during launch. You can only tag instances and volumes on launch. The specified tags are applied to all instances or volumes that are created during launch. To tag a resource after it has been created, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html">CreateTags</a>.'
        ElasticGpuSpecification:
          allOf:
            - $ref: '#/components/schemas/ElasticGpuSpecificationList'
            - description: An elastic GPU to associate with the instance.
        ElasticInferenceAccelerator:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateElasticInferenceAcceleratorList'
            - description: ' The elastic inference accelerator for the instance. '
        SecurityGroupId:
          allOf:
            - $ref: '#/components/schemas/SecurityGroupIdStringList'
            - description: 'One or more security group IDs. You can create a security group using <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSecurityGroup.html">CreateSecurityGroup</a>. You cannot specify both a security group ID and security name in the same request.'
        SecurityGroup:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateCapacityReservationSpecificationRequest'
            - description: 'The Capacity Reservation targeting option. If you do not specify this parameter, the instance''s Capacity Reservation preference defaults to <code>open</code>, which enables it to run in any open Capacity Reservation that has matching attributes (instance type, platform, Availability Zone).'
        LicenseSpecification:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateInstanceMaintenanceOptionsRequest'
            - description: The maintenance options for the instance.
      description: <p>The information to include in the launch template.</p> <note> <p>You must specify at least one parameter for the launch template data.</p> </note>
    CreateLaunchTemplateRequest:
      type: object
      required:
        - LaunchTemplateName
        - LaunchTemplateData
      title: CreateLaunchTemplateRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/RequestLaunchTemplateData'
            - description: The information for the launch template.
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/TagSpecificationList'
            - description: The tags to apply to the launch template during creation.
    LaunchTemplate:
      type: object
      properties:
        launchTemplateId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the launch template.
        launchTemplateName:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateName'
            - description: The name of the launch template.
        createTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The time launch template was created.
        createdBy:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The principal that created the launch template. '
        defaultVersionNumber:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: The version number of the default version of the launch template.
        latestVersionNumber:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: The version number of the latest version of the launch template.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags for the launch template.
      description: Describes a launch template.
    ValidationWarning:
      type: object
      properties:
        errorSet:
          allOf:
            - $ref: '#/components/schemas/ErrorSet'
            - description: The error codes and error messages.
      description: The error codes and error messages that are returned for the parameters or parameter combinations that are not valid when a new launch template or new version of a launch template is created.
    CreateLaunchTemplateVersionRequest:
      type: object
      required:
        - LaunchTemplateData
      title: CreateLaunchTemplateVersionRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/RequestLaunchTemplateData'
            - description: The information for the launch template.
    LaunchTemplateVersion:
      type: object
      properties:
        launchTemplateId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the launch template.
        launchTemplateName:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateName'
            - description: The name of the launch template.
        versionNumber:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: The version number.
        versionDescription:
          allOf:
            - $ref: '#/components/schemas/VersionDescription'
            - description: The description for the version.
        createTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The time the version was created.
        createdBy:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The principal that created the version.
        defaultVersion:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the version is the default version.
        launchTemplateData:
          allOf:
            - $ref: '#/components/schemas/ResponseLaunchTemplateData'
            - description: Information about the launch template.
      description: Describes a launch template version.
    CreateLocalGatewayRouteRequest:
      type: object
      required:
        - DestinationCidrBlock
        - LocalGatewayRouteTableId
        - LocalGatewayVirtualInterfaceGroupId
      title: CreateLocalGatewayRouteRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    LocalGatewayRoute:
      type: object
      properties:
        destinationCidrBlock:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The CIDR block used for destination matches.
        localGatewayVirtualInterfaceGroupId:
          allOf:
            - $ref: '#/components/schemas/LocalGatewayVirtualInterfaceGroupId'
            - description: The ID of the virtual interface group.
        type:
          allOf:
            - $ref: '#/components/schemas/LocalGatewayRouteType'
            - description: The route type.
        state:
          allOf:
            - $ref: '#/components/schemas/LocalGatewayRouteState'
            - description: The state of the route.
        localGatewayRouteTableId:
          allOf:
            - $ref: '#/components/schemas/LocalGatewayRoutetableId'
            - description: The ID of the local gateway route table.
        localGatewayRouteTableArn:
          allOf:
            - $ref: '#/components/schemas/ResourceArn'
            - description: The Amazon Resource Name (ARN) of the local gateway route table.
        ownerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Amazon Web Services account that owns the local gateway route.
      description: Describes a route for a local gateway route table.
    CreateLocalGatewayRouteTableVpcAssociationRequest:
      type: object
      required:
        - LocalGatewayRouteTableId
        - VpcId
      title: CreateLocalGatewayRouteTableVpcAssociationRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/VpcId'
            - description: The ID of the VPC.
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    LocalGatewayRouteTableVpcAssociation:
      type: object
      properties:
        localGatewayRouteTableVpcAssociationId:
          allOf:
            - $ref: '#/components/schemas/LocalGatewayRouteTableVpcAssociationId'
            - description: The ID of the association.
        localGatewayRouteTableId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the local gateway route table.
        localGatewayRouteTableArn:
          allOf:
            - $ref: '#/components/schemas/ResourceArn'
            - description: The Amazon Resource Name (ARN) of the local gateway route table for the association.
        localGatewayId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the local gateway.
        vpcId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the VPC.
        ownerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Amazon Web Services account that owns the local gateway route table for the association.
        state:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The state of the association.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags assigned to the association.
      description: Describes an association between a local gateway route table and a VPC.
    CreateManagedPrefixListRequest:
      type: object
      required:
        - PrefixListName
        - MaxEntries
        - AddressFamily
      title: CreateManagedPrefixListRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>A name for the prefix list.</p> <p>Constraints: Up to 255 characters in length. The name cannot start with <code>com.amazonaws</code>.</p>'
        Entry:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The maximum number of entries for the prefix list.
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>Unique, case-sensitive identifier you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.</p> <p>Constraints: Up to 255 UTF-8 characters in length.</p>'
    ManagedPrefixList:
      type: object
      properties:
        prefixListId:
          allOf:
            - $ref: '#/components/schemas/PrefixListResourceId'
            - description: The ID of the prefix list.
        addressFamily:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The IP address version.
        state:
          allOf:
            - $ref: '#/components/schemas/PrefixListState'
            - description: The current state of the prefix list.
        stateMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The state message.
        prefixListArn:
          allOf:
            - $ref: '#/components/schemas/ResourceArn'
            - description: The Amazon Resource Name (ARN) for the prefix list.
        prefixListName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the prefix list.
        maxEntries:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The maximum number of entries for the prefix list.
        version:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: The version of the prefix list.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags for the prefix list.
        ownerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the owner of the prefix list.
      description: Describes a managed prefix list.
    CreateNatGatewayRequest:
      type: object
      required:
        - SubnetId
      title: CreateNatGatewayRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/SubnetId'
            - description: The subnet in which to create the NAT gateway.
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/ConnectivityType'
            - description: Indicates whether the NAT gateway supports public or private connectivity. The default is public connectivity.
    NatGateway:
      type: object
      properties:
        createTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The date and time the NAT gateway was created.
        deleteTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: 'The date and time the NAT gateway was deleted, if applicable.'
        failureCode:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'If the NAT gateway could not be created, specifies the error code for the failure. (<code>InsufficientFreeAddressesInSubnet</code> | <code>Gateway.NotAttached</code> | <code>InvalidAllocationID.NotFound</code> | <code>Resource.AlreadyAssociated</code> | <code>InternalError</code> | <code>InvalidSubnetID.NotFound</code>)'
        failureMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>If the NAT gateway could not be created, specifies the error message for the failure, that corresponds to the error code.</p> <ul> <li> <p>For InsufficientFreeAddressesInSubnet: "Subnet has insufficient free addresses to create this NAT gateway"</p> </li> <li> <p>For Gateway.NotAttached: "Network vpc-xxxxxxxx has no Internet gateway attached"</p> </li> <li> <p>For InvalidAllocationID.NotFound: "Elastic IP address eipalloc-xxxxxxxx could not be associated with this NAT gateway"</p> </li> <li> <p>For Resource.AlreadyAssociated: "Elastic IP address eipalloc-xxxxxxxx is already associated"</p> </li> <li> <p>For InternalError: "Network interface eni-xxxxxxxx, created and used internally by this NAT gateway is in an invalid state. Please try again."</p> </li> <li> <p>For InvalidSubnetID.NotFound: "The specified subnet subnet-xxxxxxxx does not exist or could not be found."</p> </li> </ul>'
        natGatewayAddressSet:
          allOf:
            - $ref: '#/components/schemas/NatGatewayAddressList'
            - description: Information about the IP addresses and network interface associated with the NAT gateway.
        natGatewayId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the NAT gateway.
        provisionedBandwidth:
          allOf:
            - $ref: '#/components/schemas/ProvisionedBandwidth'
            - description: 'Reserved. If you need to sustain traffic greater than the <a href="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html">documented limits</a>, contact us through the <a href="https://console.aws.amazon.com/support/home?">Support Center</a>.'
        state:
          allOf:
            - $ref: '#/components/schemas/NatGatewayState'
            - description: '<p>The state of the NAT gateway.</p> <ul> <li> <p> <code>pending</code>: The NAT gateway is being created and is not ready to process traffic.</p> </li> <li> <p> <code>failed</code>: The NAT gateway could not be created. Check the <code>failureCode</code> and <code>failureMessage</code> fields for the reason.</p> </li> <li> <p> <code>available</code>: The NAT gateway is able to process traffic. This status remains until you delete the NAT gateway, and does not indicate the health of the NAT gateway.</p> </li> <li> <p> <code>deleting</code>: The NAT gateway is in the process of being terminated and may still be processing traffic.</p> </li> <li> <p> <code>deleted</code>: The NAT gateway has been terminated and is no longer processing traffic.</p> </li> </ul>'
        subnetId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the subnet in which the NAT gateway is located.
        vpcId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the VPC in which the NAT gateway is located.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags for the NAT gateway.
        connectivityType:
          allOf:
            - $ref: '#/components/schemas/ConnectivityType'
            - description: Indicates whether the NAT gateway supports public or private connectivity.
      description: Describes a NAT gateway.
    IcmpTypeCode:
      type: object
      properties:
        code:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The ICMP code. A value of -1 means all codes for the specified ICMP type.
        type:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The ICMP type. A value of -1 means all types.
      description: Describes the ICMP type and code.
    RuleAction:
      type: string
      enum:
        - allow
        - deny
    CreateNetworkAclEntryRequest:
      type: object
      required:
        - Egress
        - NetworkAclId
        - Protocol
        - RuleAction
        - RuleNumber
      title: CreateNetworkAclEntryRequest
      properties:
        cidrBlock:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The IPv4 network range to allow or deny, in CIDR notation (for example <code>172.16.0.0/24</code>). We modify the specified CIDR block to its canonical form; for example, if you specify <code>100.68.0.18/18</code>, we modify it to <code>100.68.0.0/18</code>.'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        egress:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether this is an egress rule (rule is applied to traffic leaving the subnet).
        Icmp:
          allOf:
            - $ref: '#/components/schemas/IcmpTypeCode'
            - description: 'ICMP protocol: The ICMP or ICMPv6 type and code. Required if specifying protocol 1 (ICMP) or protocol 58 (ICMPv6) with an IPv6 CIDR block.'
        ipv6CidrBlock:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The IPv6 network range to allow or deny, in CIDR notation (for example <code>2001:db8:1234:1a00::/64</code>).'
        networkAclId:
          allOf:
            - $ref: '#/components/schemas/NetworkAclId'
            - description: The ID of the network ACL.
        portRange:
          allOf:
            - $ref: '#/components/schemas/PortRange'
            - description: 'TCP or UDP protocols: The range of ports the rule applies to. Required if specifying protocol 6 (TCP) or 17 (UDP).'
        protocol:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The protocol number. A value of "-1" means all protocols. If you specify "-1" or a protocol number other than "6" (TCP), "17" (UDP), or "1" (ICMP), traffic on all ports is allowed, regardless of any ports or ICMP types or codes that you specify. If you specify protocol "58" (ICMPv6) and specify an IPv4 CIDR block, traffic for all ICMP types and codes allowed, regardless of any that you specify. If you specify protocol "58" (ICMPv6) and specify an IPv6 CIDR block, you must specify an ICMP type and code.'
        ruleAction:
          allOf:
            - $ref: '#/components/schemas/RuleAction'
            - description: Indicates whether to allow or deny the traffic that matches the rule.
        ruleNumber:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: '<p>The rule number for the entry (for example, 100). ACL entries are processed in ascending order by rule number.</p> <p>Constraints: Positive integer from 1 to 32766. The range 32767 to 65535 is reserved for internal use.</p>'
    CreateNetworkAclRequest:
      type: object
      required:
        - VpcId
      title: CreateNetworkAclRequest
      properties:
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        vpcId:
          allOf:
            - $ref: '#/components/schemas/VpcId'
            - description: The ID of the VPC.
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/TagSpecificationList'
            - description: The tags to assign to the network ACL.
    NetworkAcl:
      type: object
      properties:
        associationSet:
          allOf:
            - $ref: '#/components/schemas/NetworkAclAssociationList'
            - description: Any associations between the network ACL and one or more subnets
        entrySet:
          allOf:
            - $ref: '#/components/schemas/NetworkAclEntryList'
            - description: One or more entries (rules) in the network ACL.
        default:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether this is the default network ACL for the VPC.
        networkAclId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the network ACL.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: Any tags assigned to the network ACL.
        vpcId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the VPC for the network ACL.
        ownerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Amazon Web Services account that owns the network ACL.
      description: Describes a network ACL.
    CreateNetworkInsightsAccessScopeRequest:
      type: object
      required:
        - ClientToken
      title: CreateNetworkInsightsAccessScopeRequest
      properties:
        MatchPath:
          allOf:
            - $ref: '#/components/schemas/AccessScopePathListRequest'
            - description: The paths to match.
        ExcludePath:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to ensure idempotency</a>.'
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    NetworkInsightsAccessScope:
      type: object
      properties:
        networkInsightsAccessScopeId:
          allOf:
            - $ref: '#/components/schemas/NetworkInsightsAccessScopeId'
            - description: The ID of the Network Access Scope.
        networkInsightsAccessScopeArn:
          allOf:
            - $ref: '#/components/schemas/ResourceArn'
            - description: The Amazon Resource Name (ARN) of the Network Access Scope.
        createdDate:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: The creation date.
        updatedDate:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: The last updated date.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags.
      description: Describes a Network Access Scope.
    NetworkInsightsAccessScopeContent:
      type: object
      properties:
        networkInsightsAccessScopeId:
          allOf:
            - $ref: '#/components/schemas/NetworkInsightsAccessScopeId'
            - description: The ID of the Network Access Scope.
        matchPathSet:
          allOf:
            - $ref: '#/components/schemas/AccessScopePathList'
            - description: The paths to match.
        excludePathSet:
          allOf:
            - $ref: '#/components/schemas/AccessScopePathList'
            - description: The paths to exclude.
      description: Describes the Network Access Scope content.
    CreateNetworkInsightsPathRequest:
      type: object
      required:
        - Source
        - Destination
        - Protocol
        - ClientToken
      title: CreateNetworkInsightsPathRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Port'
            - description: The destination port.
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to ensure idempotency</a>.'
    NetworkInsightsPath:
      type: object
      properties:
        networkInsightsPathId:
          allOf:
            - $ref: '#/components/schemas/NetworkInsightsPathId'
            - description: The ID of the path.
        networkInsightsPathArn:
          allOf:
            - $ref: '#/components/schemas/ResourceArn'
            - description: The Amazon Resource Name (ARN) of the path.
        createdDate:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: The time stamp when the path was created.
        source:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Web Services resource that is the source of the path.
        destination:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Web Services resource that is the destination of the path.
        sourceIp:
          allOf:
            - $ref: '#/components/schemas/IpAddress'
            - description: The IP address of the Amazon Web Services resource that is the source of the path.
        destinationIp:
          allOf:
            - $ref: '#/components/schemas/IpAddress'
            - description: The IP address of the Amazon Web Services resource that is the destination of the path.
        protocol:
          allOf:
            - $ref: '#/components/schemas/Protocol'
            - description: The protocol.
        destinationPort:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The destination port.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags associated with the path.
      description: Describes a path.
    CreateNetworkInterfacePermissionRequest:
      type: object
      required:
        - NetworkInterfaceId
        - Permission
      title: CreateNetworkInterfacePermissionRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
      description: Contains the parameters for CreateNetworkInterfacePermission.
    NetworkInterfacePermission:
      type: object
      properties:
        networkInterfacePermissionId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the network interface permission.
        networkInterfaceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the network interface.
        awsAccountId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Web Services account ID.
        awsService:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Web Service.
        permission:
          allOf:
            - $ref: '#/components/schemas/InterfacePermissionType'
            - description: The type of permission.
        permissionState:
          allOf:
            - $ref: '#/components/schemas/NetworkInterfacePermissionState'
            - description: Information about the state of the permission.
      description: Describes a permission for a network interface.
    InstanceIpv6AddressList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/InstanceIpv6Address'
          - xml:
              name: item
    PrivateIpAddressSpecificationList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/PrivateIpAddressSpecification'
          - xml:
              name: item
    NetworkInterfaceCreationType:
      type: string
      enum:
        - efa
        - branch
        - trunk
    CreateNetworkInterfaceRequest:
      type: object
      required:
        - SubnetId
      title: CreateNetworkInterfaceRequest
      properties:
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A description for the network interface.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        SecurityGroupId:
          allOf:
            - $ref: '#/components/schemas/SecurityGroupIdStringList'
            - description: The IDs of one or more security groups.
        ipv6AddressCount:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The number of IPv6 addresses to assign to a network interface. Amazon EC2 automatically selects the IPv6 addresses from the subnet range. You can''t use this option if specifying specific IPv6 addresses. If your subnet has the <code>AssignIpv6AddressOnCreation</code> attribute set to <code>true</code>, you can specify <code>0</code> to override this setting.'
        ipv6Addresses:
          allOf:
            - $ref: '#/components/schemas/InstanceIpv6AddressList'
            - description: One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. You can't use this option if you're specifying a number of IPv6 addresses.
        privateIpAddress:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The primary private IPv4 address of the network interface. If you don''t specify an IPv4 address, Amazon EC2 selects one for you from the subnet''s IPv4 CIDR range. If you specify an IP address, you cannot indicate any IP addresses specified in <code>privateIpAddresses</code> as primary (only one IP address can be designated as primary).'
        privateIpAddresses:
          allOf:
            - $ref: '#/components/schemas/PrivateIpAddressSpecificationList'
            - description: One or more private IPv4 addresses.
        secondaryPrivateIpAddressCount:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: '<p>The number of secondary private IPv4 addresses to assign to a network interface. When you specify a number of secondary IPv4 addresses, Amazon EC2 selects these IP addresses within the subnet''s IPv4 CIDR range. You can''t specify this option and specify more than one private IP address using <code>privateIpAddresses</code>.</p> <p>The number of IP addresses you can assign to a network interface varies by instance type. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI">IP Addresses Per ENI Per Instance Type</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>'
        Ipv4Prefix:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of IPv4 prefixes that Amazon Web Services automatically assigns to the network interface. You cannot use this option if you use the <code>Ipv4 Prefixes</code> option.
        Ipv6Prefix:
          allOf:
            - $ref: '#/components/schemas/NetworkInterfaceCreationType'
            - description: <p>The type of network interface. The default is <code>interface</code>.</p> <p>The only supported values are <code>efa</code> and <code>trunk</code>.</p>
        subnetId:
          allOf:
            - $ref: '#/components/schemas/SubnetId'
            - description: The ID of the subnet to associate with the network interface.
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.'
      description: Contains the parameters for CreateNetworkInterface.
    NetworkInterface:
      type: object
      properties:
        association:
          allOf:
            - $ref: '#/components/schemas/NetworkInterfaceAssociation'
            - description: The association information for an Elastic IP address (IPv4) associated with the network interface.
        attachment:
          allOf:
            - $ref: '#/components/schemas/NetworkInterfaceAttachment'
            - description: The network interface attachment.
        availabilityZone:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Availability Zone.
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A description.
        groupSet:
          allOf:
            - $ref: '#/components/schemas/GroupIdentifierList'
            - description: Any security groups for the network interface.
        interfaceType:
          allOf:
            - $ref: '#/components/schemas/NetworkInterfaceType'
            - description: The type of network interface.
        ipv6AddressesSet:
          allOf:
            - $ref: '#/components/schemas/NetworkInterfaceIpv6AddressesList'
            - description: The IPv6 addresses associated with the network interface.
        macAddress:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The MAC address.
        networkInterfaceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the network interface.
        outpostArn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Resource Name (ARN) of the Outpost.
        ownerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Web Services account ID of the owner of the network interface.
        privateDnsName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The private DNS name.
        privateIpAddress:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The IPv4 address of the network interface within the subnet.
        privateIpAddressesSet:
          allOf:
            - $ref: '#/components/schemas/NetworkInterfacePrivateIpAddressList'
            - description: The private IPv4 addresses associated with the network interface.
        ipv4PrefixSet:
          allOf:
            - $ref: '#/components/schemas/Ipv4PrefixesList'
            - description: The IPv4 prefixes that are assigned to the network interface.
        ipv6PrefixSet:
          allOf:
            - $ref: '#/components/schemas/Ipv6PrefixesList'
            - description: The IPv6 prefixes that are assigned to the network interface.
        requesterId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The alias or Amazon Web Services account ID of the principal or service that created the network interface.
        requesterManaged:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the network interface is being managed by Amazon Web Services.
        sourceDestCheck:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether source/destination checking is enabled.
        status:
          allOf:
            - $ref: '#/components/schemas/NetworkInterfaceStatus'
            - description: The status of the network interface.
        subnetId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the subnet.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: Any tags assigned to the network interface.
        vpcId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the VPC.
        denyAllIgwTraffic:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Indicates whether a network interface with an IPv6 address is unreachable from the public internet. If the value is <code>true</code>, inbound traffic from the internet is dropped and you cannot assign an elastic IP address to the network interface. The network interface is reachable from peered VPCs and resources connected through a transit gateway, including on-premises networks.'
        ipv6Native:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether this is an IPv6 only network interface.
        ipv6Address:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The IPv6 globally unique address associated with the network interface.
      description: Describes a network interface.
    CreatePlacementGroupRequest:
      type: object
      title: CreatePlacementGroupRequest
      properties:
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        groupName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>A name for the placement group. Must be unique within the scope of your account for the Region.</p> <p>Constraints: Up to 255 ASCII characters</p>'
        strategy:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of partitions. Valid only when <b>Strategy</b> is set to <code>partition</code>.
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/TagSpecificationList'
            - description: The tags to apply to the new placement group.
    PlacementGroup:
      type: object
      properties:
        groupName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the placement group.
        state:
          allOf:
            - $ref: '#/components/schemas/PlacementGroupState'
            - description: The state of the placement group.
        strategy:
          allOf:
            - $ref: '#/components/schemas/PlacementStrategy'
            - description: The placement strategy.
        partitionCount:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of partitions. Valid only if <b>strategy</b> is set to <code>partition</code>.
        groupId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the placement group.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: Any tags applied to the placement group.
        groupArn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Resource Name (ARN) of the placement group.
      description: Describes a placement group.
    CreatePublicIpv4PoolRequest:
      type: object
      title: CreatePublicIpv4PoolRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/TagSpecificationList'
            - description: 'The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.'
    CreateReplaceRootVolumeTaskRequest:
      type: object
      required:
        - InstanceId
      title: CreateReplaceRootVolumeTaskRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/TagSpecificationList'
            - description: The tags to apply to the root volume replacement task.
    ReplaceRootVolumeTask:
      type: object
      properties:
        replaceRootVolumeTaskId:
          allOf:
            - $ref: '#/components/schemas/ReplaceRootVolumeTaskId'
            - description: The ID of the root volume replacement task.
        instanceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the instance for which the root volume replacement task was created.
        taskState:
          allOf:
            - $ref: '#/components/schemas/ReplaceRootVolumeTaskState'
            - description: '<p>The state of the task. The task can be in one of the following states:</p> <ul> <li> <p> <code>pending</code> - the replacement volume is being created.</p> </li> <li> <p> <code>in-progress</code> - the original volume is being detached and the replacement volume is being attached.</p> </li> <li> <p> <code>succeeded</code> - the replacement volume has been successfully attached to the instance and the instance is available.</p> </li> <li> <p> <code>failing</code> - the replacement task is in the process of failing.</p> </li> <li> <p> <code>failed</code> - the replacement task has failed but the original root volume is still attached.</p> </li> <li> <p> <code>failing-detached</code> - the replacement task is in the process of failing. The instance might have no root volume attached.</p> </li> <li> <p> <code>failed-detached</code> - the replacement task has failed and the instance has no root volume attached.</p> </li> </ul>'
        startTime:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The time the task was started.
        completeTime:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The time the task completed.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags assigned to the task.
      description: Information about a root volume replacement task.
    PriceScheduleSpecificationList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/PriceScheduleSpecification'
          - xml:
              name: item
    CreateReservedInstancesListingRequest:
      type: object
      required:
        - ClientToken
        - InstanceCount
        - PriceSchedules
        - ReservedInstancesId
      title: CreateReservedInstancesListingRequest
      properties:
        clientToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'Unique, case-sensitive identifier you provide to ensure idempotency of your listings. This helps avoid duplicate listings. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.'
        instanceCount:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of instances that are a part of a Reserved Instance account to be listed in the Reserved Instance Marketplace. This number should be less than or equal to the instance count associated with the Reserved Instance ID specified in this call.
        priceSchedules:
          allOf:
            - $ref: '#/components/schemas/PriceScheduleSpecificationList'
            - description: A list specifying the price of the Standard Reserved Instance for each month remaining in the Reserved Instance term.
        reservedInstancesId:
          allOf:
            - $ref: '#/components/schemas/ReservationId'
            - description: The ID of the active Standard Reserved Instance.
      description: Contains the parameters for CreateReservedInstancesListing.
    CreateRestoreImageTaskRequest:
      type: object
      required:
        - Bucket
        - ObjectKey
      title: CreateRestoreImageTaskRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The name for the restored AMI. The name must be unique for AMIs in the Region for this account. If you do not provide a name, the new AMI gets the same name as the original AMI.'
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    CreateRouteRequest:
      type: object
      required:
        - RouteTableId
      title: CreateRouteRequest
      properties:
        destinationCidrBlock:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The IPv4 CIDR address block used for the destination match. Routing decisions are based on the most specific match. We modify the specified CIDR block to its canonical form; for example, if you specify <code>100.68.0.18/18</code>, we modify it to <code>100.68.0.0/18</code>.'
        destinationIpv6CidrBlock:
          allOf:
            - $ref: '#/components/schemas/PrefixListResourceId'
            - description: The ID of a prefix list used for the destination match.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/VpcEndpointId'
            - description: The ID of a VPC endpoint. Supported for Gateway Load Balancer endpoints only.
        egressOnlyInternetGatewayId:
          allOf:
            - $ref: '#/components/schemas/EgressOnlyInternetGatewayId'
            - description: '[IPv6 traffic only] The ID of an egress-only internet gateway.'
        gatewayId:
          allOf:
            - $ref: '#/components/schemas/RouteGatewayId'
            - description: The ID of an internet gateway or virtual private gateway attached to your VPC.
        instanceId:
          allOf:
            - $ref: '#/components/schemas/InstanceId'
            - description: The ID of a NAT instance in your VPC. The operation fails if you specify an instance ID unless exactly one network interface is attached.
        natGatewayId:
          allOf:
            - $ref: '#/components/schemas/CarrierGatewayId'
            - description: <p>The ID of the carrier gateway.</p> <p>You can only use this option when the VPC contains a subnet which is associated with a Wavelength Zone.</p>
        networkInterfaceId:
          allOf:
            - $ref: '#/components/schemas/NetworkInterfaceId'
            - description: The ID of a network interface.
        routeTableId:
          allOf:
            - $ref: '#/components/schemas/RouteTableId'
            - description: The ID of the route table for the route.
        vpcPeeringConnectionId:
          allOf:
            - $ref: '#/components/schemas/CoreNetworkArn'
            - description: The Amazon Resource Name (ARN) of the core network.
    CreateRouteTableRequest:
      type: object
      required:
        - VpcId
      title: CreateRouteTableRequest
      properties:
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        vpcId:
          allOf:
            - $ref: '#/components/schemas/VpcId'
            - description: The ID of the VPC.
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/TagSpecificationList'
            - description: The tags to assign to the route table.
    RouteTable:
      type: object
      properties:
        associationSet:
          allOf:
            - $ref: '#/components/schemas/RouteTableAssociationList'
            - description: The associations between the route table and one or more subnets or a gateway.
        propagatingVgwSet:
          allOf:
            - $ref: '#/components/schemas/PropagatingVgwList'
            - description: Any virtual private gateway (VGW) propagating routes.
        routeTableId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the route table.
        routeSet:
          allOf:
            - $ref: '#/components/schemas/RouteList'
            - description: The routes in the route table.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: Any tags assigned to the route table.
        vpcId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the VPC.
        ownerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Amazon Web Services account that owns the route table.
      description: Describes a route table.
    CreateSecurityGroupRequest:
      type: object
      required:
        - Description
        - GroupName
      title: CreateSecurityGroupRequest
      properties:
        GroupDescription:
          allOf:
            - $ref: '#/components/schemas/VpcId'
            - description: '[EC2-VPC] The ID of the VPC. Required for EC2-VPC.'
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/TagSpecificationList'
            - description: The tags to assign to the security group.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    CreateSnapshotRequest:
      type: object
      required:
        - VolumeId
      title: CreateSnapshotRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/VolumeId'
            - description: The ID of the Amazon EBS volume.
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/TagSpecificationList'
            - description: The tags to apply to the snapshot during creation.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    CreateSnapshotsRequest:
      type: object
      required:
        - InstanceSpecification
      title: CreateSnapshotsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The Amazon Resource Name (ARN) of the Outpost on which to create the local snapshots.</p> <ul> <li> <p>To create snapshots from an instance in a Region, omit this parameter. The snapshots are created in the same Region as the instance.</p> </li> <li> <p>To create snapshots from an instance on an Outpost and store the snapshots in the Region, omit this parameter. The snapshots are created in the Region for the Outpost.</p> </li> <li> <p>To create snapshots from an instance on an Outpost and store the snapshots on an Outpost, specify the ARN of the destination Outpost. The snapshots must be created on the same Outpost as the instance.</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshots-outposts.html#create-multivol-snapshot"> Create multi-volume local snapshots from instances on an Outpost</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/CopyTagsFromSource'
            - description: Copies the tags from the specified volume to corresponding snapshot.
    SnapshotSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/SnapshotInfo'
          - xml:
              name: item
    CreateSpotDatafeedSubscriptionRequest:
      type: object
      required:
        - Bucket
      title: CreateSpotDatafeedSubscriptionRequest
      properties:
        bucket:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The name of the Amazon S3 bucket in which to store the Spot Instance data feed. For more information about bucket names, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html#bucketnamingrules">Rules for bucket naming</a> in the <i>Amazon S3 Developer Guide</i>.'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        prefix:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The prefix for the data feed file names.
      description: Contains the parameters for CreateSpotDatafeedSubscription.
    SpotDatafeedSubscription:
      type: object
      properties:
        bucket:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the Amazon S3 bucket where the Spot Instance data feed is located.
        fault:
          allOf:
            - $ref: '#/components/schemas/SpotInstanceStateFault'
            - description: 'The fault codes for the Spot Instance request, if any.'
        ownerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Web Services account ID of the account.
        prefix:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The prefix for the data feed files.
        state:
          allOf:
            - $ref: '#/components/schemas/DatafeedSubscriptionState'
            - description: The state of the Spot Instance data feed subscription.
      description: Describes the data feed for a Spot Instance.
    CreateStoreImageTaskRequest:
      type: object
      required:
        - ImageId
        - Bucket
      title: CreateStoreImageTaskRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The name of the Amazon S3 bucket in which the AMI object will be stored. The bucket must be in the Region in which the request is being made. The AMI object appears in the bucket only after the upload task has completed. '
        S3ObjectTag:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    CreateSubnetCidrReservationRequest:
      type: object
      required:
        - SubnetId
        - Cidr
        - ReservationType
      title: CreateSubnetCidrReservationRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/TagSpecificationList'
            - description: The tags to assign to the subnet CIDR reservation.
    SubnetCidrReservation:
      type: object
      properties:
        subnetCidrReservationId:
          allOf:
            - $ref: '#/components/schemas/SubnetCidrReservationId'
            - description: The ID of the subnet CIDR reservation.
        subnetId:
          allOf:
            - $ref: '#/components/schemas/SubnetId'
            - description: The ID of the subnet.
        cidr:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The CIDR that has been reserved.
        reservationType:
          allOf:
            - $ref: '#/components/schemas/SubnetCidrReservationType'
            - description: 'The type of reservation. '
        ownerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The ID of the account that owns the subnet CIDR reservation. '
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The description assigned to the subnet CIDR reservation.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags assigned to the subnet CIDR reservation.
      description: Describes a subnet CIDR reservation.
    CreateSubnetRequest:
      type: object
      required:
        - VpcId
      title: CreateSubnetRequest
      properties:
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/VpcId'
            - description: The ID of the VPC.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether to create an IPv6 only subnet.
    ResourceIdList:
      type: array
      items:
        $ref: '#/components/schemas/TaggableResourceId'
    CreateTagsRequest:
      type: object
      required:
        - Resources
        - Tags
      title: CreateTagsRequest
      properties:
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        ResourceId:
          allOf:
            - $ref: '#/components/schemas/ResourceIdList'
            - description: '<p>The IDs of the resources, separated by spaces.</p> <p>Constraints: Up to 1000 resource IDs. We recommend breaking up this request into smaller batches.</p>'
        Tag:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: 'The tags. The <code>value</code> parameter is required, but if you don''t want the tag to have a value, specify the parameter with no value, and we set the value to an empty string.'
    CreateTrafficMirrorFilterRequest:
      type: object
      title: CreateTrafficMirrorFilterRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The description of the Traffic Mirror filter.
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to ensure idempotency</a>.'
    TrafficMirrorFilter:
      type: object
      properties:
        trafficMirrorFilterId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Traffic Mirror filter.
        ingressFilterRuleSet:
          allOf:
            - $ref: '#/components/schemas/TrafficMirrorFilterRuleList'
            - description: Information about the ingress rules that are associated with the Traffic Mirror filter.
        egressFilterRuleSet:
          allOf:
            - $ref: '#/components/schemas/TrafficMirrorFilterRuleList'
            - description: Information about the egress rules that are associated with the Traffic Mirror filter.
        networkServiceSet:
          allOf:
            - $ref: '#/components/schemas/TrafficMirrorNetworkServiceList'
            - description: The network service traffic that is associated with the Traffic Mirror filter.
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The description of the Traffic Mirror filter.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags assigned to the Traffic Mirror filter.
      description: Describes the Traffic Mirror filter.
    CreateTrafficMirrorFilterRuleRequest:
      type: object
      required:
        - TrafficMirrorFilterId
        - TrafficDirection
        - RuleNumber
        - RuleAction
        - DestinationCidrBlock
        - SourceCidrBlock
      title: CreateTrafficMirrorFilterRuleRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to ensure idempotency</a>.'
    TrafficMirrorFilterRule:
      type: object
      properties:
        trafficMirrorFilterRuleId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Traffic Mirror rule.
        trafficMirrorFilterId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Traffic Mirror filter that the rule is associated with.
        trafficDirection:
          allOf:
            - $ref: '#/components/schemas/TrafficDirection'
            - description: The traffic direction assigned to the Traffic Mirror rule.
        ruleNumber:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The rule number of the Traffic Mirror rule.
        ruleAction:
          allOf:
            - $ref: '#/components/schemas/TrafficMirrorRuleAction'
            - description: The action assigned to the Traffic Mirror rule.
        protocol:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The protocol assigned to the Traffic Mirror rule.
        destinationPortRange:
          allOf:
            - $ref: '#/components/schemas/TrafficMirrorPortRange'
            - description: The destination port range assigned to the Traffic Mirror rule.
        sourcePortRange:
          allOf:
            - $ref: '#/components/schemas/TrafficMirrorPortRange'
            - description: The source port range assigned to the Traffic Mirror rule.
        destinationCidrBlock:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The destination CIDR block assigned to the Traffic Mirror rule.
        sourceCidrBlock:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The source CIDR block assigned to the Traffic Mirror rule.
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The description of the Traffic Mirror rule.
      description: Describes the Traffic Mirror rule.
    CreateTrafficMirrorSessionRequest:
      type: object
      required:
        - NetworkInterfaceId
        - TrafficMirrorTargetId
        - TrafficMirrorFilterId
        - SessionNumber
      title: CreateTrafficMirrorSessionRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The description of the Traffic Mirror session.
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to ensure idempotency</a>.'
    TrafficMirrorSession:
      type: object
      properties:
        trafficMirrorSessionId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID for the Traffic Mirror session.
        trafficMirrorTargetId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Traffic Mirror target.
        trafficMirrorFilterId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Traffic Mirror filter.
        networkInterfaceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Traffic Mirror session's network interface.
        ownerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the account that owns the Traffic Mirror session.
        packetLength:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The number of bytes in each packet to mirror. These are the bytes after the VXLAN header. To mirror a subset, set this to the length (in bytes) to mirror. For example, if you set this value to 100, then the first 100 bytes that meet the filter criteria are copied to the target. Do not specify this parameter when you want to mirror the entire packet'
        sessionNumber:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: <p>The session number determines the order in which sessions are evaluated when an interface is used by multiple sessions. The first session with a matching filter is the one that mirrors the packets.</p> <p>Valid values are 1-32766.</p>
        virtualNetworkId:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The virtual network ID associated with the Traffic Mirror session.
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The description of the Traffic Mirror session.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags assigned to the Traffic Mirror session.
      description: Describes a Traffic Mirror session.
    CreateTrafficMirrorTargetRequest:
      type: object
      title: CreateTrafficMirrorTargetRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The description of the Traffic Mirror target.
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/VpcEndpointId'
            - description: The ID of the Gateway Load Balancer endpoint.
    TrafficMirrorTarget:
      type: object
      properties:
        trafficMirrorTargetId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Traffic Mirror target.
        networkInterfaceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The network interface ID that is attached to the target.
        networkLoadBalancerArn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Resource Name (ARN) of the Network Load Balancer.
        type:
          allOf:
            - $ref: '#/components/schemas/TrafficMirrorTargetType'
            - description: The type of Traffic Mirror target.
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Information about the Traffic Mirror target.
        ownerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the account that owns the Traffic Mirror target.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags assigned to the Traffic Mirror target.
        gatewayLoadBalancerEndpointId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Gateway Load Balancer endpoint.
      description: Describes a Traffic Mirror target.
    InsideCidrBlocksStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: item
    CreateTransitGatewayConnectPeerRequest:
      type: object
      required:
        - TransitGatewayAttachmentId
        - PeerAddress
        - InsideCidrBlocks
      title: CreateTransitGatewayConnectPeerRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/InsideCidrBlocksStringList'
            - description: 'The range of inside IP addresses that are used for BGP peering. You must specify a size /29 IPv4 CIDR block from the <code>169.254.0.0/16</code> range. The first address from the range must be configured on the appliance as the BGP IP address. You can also optionally specify a size /125 IPv6 CIDR block from the <code>fd00::/8</code> range.'
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    TransitGatewayConnectPeer:
      type: object
      properties:
        transitGatewayAttachmentId:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayAttachmentId'
            - description: The ID of the Connect attachment.
        transitGatewayConnectPeerId:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayConnectPeerId'
            - description: The ID of the Connect peer.
        state:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayConnectPeerState'
            - description: The state of the Connect peer.
        creationTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The creation time.
        connectPeerConfiguration:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayConnectPeerConfiguration'
            - description: The Connect peer details.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags for the Connect peer.
      description: Describes a transit gateway Connect peer.
    CreateTransitGatewayConnectRequestOptions:
      type: object
      required:
        - Protocol
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/ProtocolValue'
            - description: The tunnel protocol.
      description: The options for a Connect attachment.
    CreateTransitGatewayConnectRequest:
      type: object
      required:
        - TransportTransitGatewayAttachmentId
        - Options
      title: CreateTransitGatewayConnectRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/CreateTransitGatewayConnectRequestOptions'
            - description: The Connect attachment options.
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    TransitGatewayConnect:
      type: object
      properties:
        transitGatewayAttachmentId:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayAttachmentId'
            - description: The ID of the Connect attachment.
        transportTransitGatewayAttachmentId:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayAttachmentId'
            - description: The ID of the attachment from which the Connect attachment was created.
        transitGatewayId:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayId'
            - description: The ID of the transit gateway.
        state:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayAttachmentState'
            - description: The state of the attachment.
        creationTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The creation time.
        options:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayConnectOptions'
            - description: The Connect attachment options.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags for the attachment.
      description: Describes a transit gateway Connect attachment.
    CreateTransitGatewayMulticastDomainRequestOptions:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/AutoAcceptSharedAssociationsValue'
            - description: Indicates whether to automatically accept cross-account subnet associations that are associated with the transit gateway multicast domain.
      description: The options for the transit gateway multicast domain.
    CreateTransitGatewayMulticastDomainRequest:
      type: object
      required:
        - TransitGatewayId
      title: CreateTransitGatewayMulticastDomainRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/CreateTransitGatewayMulticastDomainRequestOptions'
            - description: The options for the transit gateway multicast domain.
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    TransitGatewayMulticastDomain:
      type: object
      properties:
        transitGatewayMulticastDomainId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the transit gateway multicast domain.
        transitGatewayId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the transit gateway.
        transitGatewayMulticastDomainArn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Resource Name (ARN) of the transit gateway multicast domain.
        ownerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: ' The ID of the Amazon Web Services account that owns the transit gateway multicast domain.'
        options:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayMulticastDomainOptions'
            - description: The options for the transit gateway multicast domain.
        state:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayMulticastDomainState'
            - description: The state of the transit gateway multicast domain.
        creationTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The time the transit gateway multicast domain was created.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags for the transit gateway multicast domain.
      description: Describes the transit gateway multicast domain.
    CreateTransitGatewayPeeringAttachmentRequest:
      type: object
      required:
        - TransitGatewayId
        - PeerTransitGatewayId
        - PeerAccountId
        - PeerRegion
      title: CreateTransitGatewayPeeringAttachmentRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Region where the peer transit gateway is located.
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    CreateTransitGatewayPrefixListReferenceRequest:
      type: object
      required:
        - TransitGatewayRouteTableId
        - PrefixListId
      title: CreateTransitGatewayPrefixListReferenceRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    TransitGatewayPrefixListReference:
      type: object
      properties:
        transitGatewayRouteTableId:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayRouteTableId'
            - description: The ID of the transit gateway route table.
        prefixListId:
          allOf:
            - $ref: '#/components/schemas/PrefixListResourceId'
            - description: The ID of the prefix list.
        prefixListOwnerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the prefix list owner.
        state:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayPrefixListReferenceState'
            - description: The state of the prefix list reference.
        blackhole:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether traffic that matches this route is dropped.
        transitGatewayAttachment:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayPrefixListAttachment'
            - description: Information about the transit gateway attachment.
      description: Describes a prefix list reference.
    TransitGatewayRequestOptions:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayCidrBlockStringList'
            - description: 'One or more IPv4 or IPv6 CIDR blocks for the transit gateway. Must be a size /24 CIDR block or larger for IPv4, or a size /64 CIDR block or larger for IPv6.'
      description: Describes the options for a transit gateway.
    CreateTransitGatewayRequest:
      type: object
      title: CreateTransitGatewayRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayRequestOptions'
            - description: The transit gateway options.
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    TransitGateway:
      type: object
      properties:
        transitGatewayId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the transit gateway.
        transitGatewayArn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Resource Name (ARN) of the transit gateway.
        state:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayState'
            - description: The state of the transit gateway.
        ownerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Amazon Web Services account that owns the transit gateway.
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The description of the transit gateway.
        creationTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The creation time.
        options:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayOptions'
            - description: The transit gateway options.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags for the transit gateway.
      description: Describes a transit gateway.
    CreateTransitGatewayRouteRequest:
      type: object
      required:
        - DestinationCidrBlock
        - TransitGatewayRouteTableId
      title: CreateTransitGatewayRouteRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    TransitGatewayRoute:
      type: object
      properties:
        destinationCidrBlock:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The CIDR block used for destination matches.
        prefixListId:
          allOf:
            - $ref: '#/components/schemas/PrefixListResourceId'
            - description: The ID of the prefix list used for destination matches.
        transitGatewayAttachments:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayRouteAttachmentList'
            - description: The attachments.
        type:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayRouteType'
            - description: The route type.
        state:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayRouteState'
            - description: The state of the route.
      description: Describes a route for a transit gateway route table.
    CreateTransitGatewayRouteTableRequest:
      type: object
      required:
        - TransitGatewayId
      title: CreateTransitGatewayRouteTableRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    TransitGatewayRouteTable:
      type: object
      properties:
        transitGatewayRouteTableId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the transit gateway route table.
        transitGatewayId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the transit gateway.
        state:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayRouteTableState'
            - description: The state of the transit gateway route table.
        defaultAssociationRouteTable:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether this is the default association route table for the transit gateway.
        defaultPropagationRouteTable:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether this is the default propagation route table for the transit gateway.
        creationTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The creation time.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: Any tags assigned to the route table.
      description: Describes a transit gateway route table.
    CreateTransitGatewayVpcAttachmentRequest:
      type: object
      required:
        - TransitGatewayId
        - VpcId
        - SubnetIds
      title: CreateTransitGatewayVpcAttachmentRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    CreateTransitGatewayVpcAttachmentRequestOptions:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/ApplianceModeSupportValue'
            - description: 'Enable or disable support for appliance mode. If enabled, a traffic flow between a source and destination uses the same Availability Zone for the VPC attachment for the lifetime of that flow. The default is <code>disable</code>.'
      description: Describes the options for a VPC attachment.
    PermissionGroup:
      type: string
      enum:
        - all
    CreateVolumePermission:
      type: object
      properties:
        group:
          allOf:
            - $ref: '#/components/schemas/PermissionGroup'
            - description: The group to be added or removed. The possible value is <code>all</code>.
        userId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Amazon Web Services account to be added or removed.
      description: Describes the user or group to be added or removed from the list of create volume permissions for a volume.
    CreateVolumePermissionModifications:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/CreateVolumePermissionList'
            - description: Removes the specified Amazon Web Services account ID or group from the list.
      description: Describes modifications to the list of create volume permissions for a volume.
    VolumeType:
      type: string
      enum:
        - standard
        - io1
        - io2
        - gp2
        - sc1
        - st1
        - gp3
    CreateVolumeRequest:
      type: object
      required:
        - AvailabilityZone
      title: CreateVolumeRequest
      properties:
        AvailabilityZone:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Availability Zone in which to create the volume.
        encrypted:
          allOf:
            - $ref: '#/components/schemas/VolumeType'
            - description: '<p>The volume type. This parameter can be one of the following values:</p> <ul> <li> <p>General Purpose SSD: <code>gp2</code> | <code>gp3</code> </p> </li> <li> <p>Provisioned IOPS SSD: <code>io1</code> | <code>io2</code> </p> </li> <li> <p>Throughput Optimized HDD: <code>st1</code> </p> </li> <li> <p>Cold HDD: <code>sc1</code> </p> </li> <li> <p>Magnetic: <code>standard</code> </p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html">Amazon EBS volume types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>Default: <code>gp2</code> </p>'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensure Idempotency</a>.'
    CreateVpcEndpointConnectionNotificationRequest:
      type: object
      required:
        - ConnectionNotificationArn
        - ConnectionEvents
      title: CreateVpcEndpointConnectionNotificationRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to ensure idempotency</a>.'
    VpcEndpointRouteTableIdList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/RouteTableId'
          - xml:
              name: item
    VpcEndpointSubnetIdList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/SubnetId'
          - xml:
              name: item
    CreateVpcEndpointRequest:
      type: object
      required:
        - VpcId
        - ServiceName
      title: CreateVpcEndpointRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '(Interface and gateway endpoints) A policy to attach to the endpoint that controls access to the service. The policy must be in valid JSON format. If this parameter is not specified, we attach a default policy that allows full access to the service.'
        RouteTableId:
          allOf:
            - $ref: '#/components/schemas/VpcEndpointRouteTableIdList'
            - description: (Gateway endpoint) One or more route table IDs.
        SubnetId:
          allOf:
            - $ref: '#/components/schemas/VpcEndpointSubnetIdList'
            - description: '(Interface and Gateway Load Balancer endpoints) The ID of one or more subnets in which to create an endpoint network interface. For a Gateway Load Balancer endpoint, you can specify one subnet only.'
        SecurityGroupId:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: '<p>(Interface endpoint) Indicates whether to associate a private hosted zone with the specified VPC. The private hosted zone contains a record set for the default public DNS name for the service for the Region (for example, <code>kinesis.us-east-1.amazonaws.com</code>), which resolves to the private IP addresses of the endpoint network interfaces in the VPC. This enables you to make requests to the default public DNS name for the service instead of the public DNS names that are automatically generated by the VPC endpoint service.</p> <p>To use a private hosted zone, you must set the following VPC attributes to <code>true</code>: <code>enableDnsHostnames</code> and <code>enableDnsSupport</code>. Use <a>ModifyVpcAttribute</a> to set the VPC attributes.</p> <p>Default: <code>true</code> </p>'
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/TagSpecificationList'
            - description: The tags to associate with the endpoint.
      description: Contains the parameters for CreateVpcEndpoint.
    VpcEndpoint:
      type: object
      properties:
        vpcEndpointId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the endpoint.
        vpcEndpointType:
          allOf:
            - $ref: '#/components/schemas/VpcEndpointType'
            - description: The type of endpoint.
        vpcId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the VPC to which the endpoint is associated.
        serviceName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the service to which the endpoint is associated.
        state:
          allOf:
            - $ref: '#/components/schemas/State'
            - description: The state of the endpoint.
        policyDocument:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The policy document associated with the endpoint, if applicable.'
        routeTableIdSet:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: (Gateway endpoint) One or more route tables associated with the endpoint.
        subnetIdSet:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: (Interface endpoint) The subnets for the endpoint.
        groupSet:
          allOf:
            - $ref: '#/components/schemas/GroupIdentifierSet'
            - description: (Interface endpoint) Information about the security groups that are associated with the network interface.
        ipAddressType:
          allOf:
            - $ref: '#/components/schemas/IpAddressType'
            - description: The IP address type for the endpoint.
        dnsOptions:
          allOf:
            - $ref: '#/components/schemas/DnsOptions'
            - description: The DNS options for the endpoint.
        privateDnsEnabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: (Interface endpoint) Indicates whether the VPC is associated with a private hosted zone.
        requesterManaged:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the endpoint is being managed by its service.
        networkInterfaceIdSet:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: (Interface endpoint) One or more network interfaces for the endpoint.
        dnsEntrySet:
          allOf:
            - $ref: '#/components/schemas/DnsEntrySet'
            - description: (Interface endpoint) The DNS entries for the endpoint.
        creationTimestamp:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: The date and time that the endpoint was created.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: Any tags assigned to the endpoint.
        ownerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Amazon Web Services account that owns the endpoint.
        lastError:
          allOf:
            - $ref: '#/components/schemas/LastError'
            - description: The last error that occurred for endpoint.
      description: Describes a VPC endpoint.
    CreateVpcEndpointServiceConfigurationRequest:
      type: object
      title: CreateVpcEndpointServiceConfigurationRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: (Interface endpoint configuration) The private DNS name to assign to the VPC endpoint service.
        NetworkLoadBalancerArn:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: The Amazon Resource Names (ARNs) of one or more Network Load Balancers for your service.
        GatewayLoadBalancerArn:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: The Amazon Resource Names (ARNs) of one or more Gateway Load Balancers.
        SupportedIpAddressType:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to ensure idempotency</a>.'
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/TagSpecificationList'
            - description: The tags to associate with the service.
    ServiceConfiguration:
      type: object
      properties:
        serviceType:
          allOf:
            - $ref: '#/components/schemas/ServiceTypeDetailSet'
            - description: The type of service.
        serviceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the service.
        serviceName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the service.
        serviceState:
          allOf:
            - $ref: '#/components/schemas/ServiceState'
            - description: The service state.
        availabilityZoneSet:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: The Availability Zones in which the service is available.
        acceptanceRequired:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether requests from other Amazon Web Services accounts to create an endpoint to the service must first be accepted.
        managesVpcEndpoints:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the service manages its VPC endpoints. Management of the service VPC endpoints using the VPC endpoint API is restricted.
        networkLoadBalancerArnSet:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: The Amazon Resource Names (ARNs) of the Network Load Balancers for the service.
        gatewayLoadBalancerArnSet:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: The Amazon Resource Names (ARNs) of the Gateway Load Balancers for the service.
        supportedIpAddressTypeSet:
          allOf:
            - $ref: '#/components/schemas/SupportedIpAddressTypes'
            - description: The supported IP address types.
        baseEndpointDnsNameSet:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: The DNS names for the service.
        privateDnsName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The private DNS name for the service.
        privateDnsNameConfiguration:
          allOf:
            - $ref: '#/components/schemas/PrivateDnsNameConfiguration'
            - description: Information about the endpoint service private DNS name configuration.
        payerResponsibility:
          allOf:
            - $ref: '#/components/schemas/PayerResponsibility'
            - description: The payer responsibility.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: Any tags assigned to the service.
      description: Describes a service configuration for a VPC endpoint service.
    CreateVpcPeeringConnectionRequest:
      type: object
      title: CreateVpcPeeringConnectionRequest
      properties:
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        peerOwnerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The Amazon Web Services account ID of the owner of the accepter VPC.</p> <p>Default: Your Amazon Web Services account ID</p>'
        peerVpcId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the VPC with which you are creating the VPC peering connection. You must specify this parameter in the request.
        vpcId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The Region code for the accepter VPC, if the accepter VPC is located in a Region other than the Region in which you make the request.</p> <p>Default: The Region in which you make the request.</p>'
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/TagSpecificationList'
            - description: The tags to assign to the peering connection.
    CreateVpcRequest:
      type: object
      title: CreateVpcRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The IPv4 network range for the VPC, in CIDR notation. For example, <code>10.0.0.0/16</code>. We modify the specified CIDR block to its canonical form; for example, if you specify <code>100.68.0.18/18</code>, we modify it to <code>100.68.0.0/18</code>.'
        amazonProvidedIpv6CidrBlock:
          allOf:
            - $ref: '#/components/schemas/NetmaskLength'
            - description: 'The netmask length of the IPv6 CIDR you want to allocate to this VPC from an Amazon VPC IP Address Manager (IPAM) pool. For more information about IPAM, see <a href="/vpc/latest/ipam/what-is-it-ipam.html">What is IPAM?</a> in the <i>Amazon VPC IPAM User Guide</i>.'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        instanceTenancy:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: <p>The name of the location from which we advertise the IPV6 CIDR block. Use this parameter to limit the address to this location.</p> <p> You must set <code>AmazonProvidedIpv6CidrBlock</code> to <code>true</code> to use this parameter.</p>
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/TagSpecificationList'
            - description: The tags to assign to the VPC.
    VpnConnectionOptionsSpecification:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: '<p>Indicate whether to enable acceleration for the VPN connection.</p> <p>Default: <code>false</code> </p>'
        staticRoutesOnly:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The IPv6 CIDR on the Amazon Web Services side of the VPN connection.</p> <p>Default: <code>::/0</code> </p>'
      description: Describes VPN connection options.
    CreateVpnConnectionRequest:
      type: object
      required:
        - CustomerGatewayId
        - Type
      title: CreateVpnConnectionRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayId'
            - description: 'The ID of the transit gateway. If you specify a transit gateway, you cannot specify a virtual private gateway.'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        options:
          allOf:
            - $ref: '#/components/schemas/VpnConnectionOptionsSpecification'
            - description: The options for the VPN connection.
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/TagSpecificationList'
            - description: The tags to apply to the VPN connection.
      description: Contains the parameters for CreateVpnConnection.
    VpnConnection:
      type: object
      properties:
        customerGatewayConfiguration:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The configuration information for the VPN connection''s customer gateway (in the native XML format). This element is always present in the <a>CreateVpnConnection</a> response; however, it''s present in the <a>DescribeVpnConnections</a> response only if the VPN connection is in the <code>pending</code> or <code>available</code> state.'
        customerGatewayId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the customer gateway at your end of the VPN connection.
        category:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The category of the VPN connection. A value of <code>VPN</code> indicates an Amazon Web Services VPN connection. A value of <code>VPN-Classic</code> indicates an Amazon Web Services Classic VPN connection.
        state:
          allOf:
            - $ref: '#/components/schemas/VpnState'
            - description: The current state of the VPN connection.
        type:
          allOf:
            - $ref: '#/components/schemas/GatewayType'
            - description: The type of VPN connection.
        vpnConnectionId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the VPN connection.
        vpnGatewayId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the virtual private gateway at the Amazon Web Services side of the VPN connection.
        transitGatewayId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the transit gateway associated with the VPN connection.
        coreNetworkArn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ARN of the core network.
        coreNetworkAttachmentArn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ARN of the core network attachment.
        gatewayAssociationState:
          allOf:
            - $ref: '#/components/schemas/GatewayAssociationState'
            - description: The current state of the gateway association.
        options:
          allOf:
            - $ref: '#/components/schemas/VpnConnectionOptions'
            - description: The VPN connection options.
        routes:
          allOf:
            - $ref: '#/components/schemas/VpnStaticRouteList'
            - description: The static routes associated with the VPN connection.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: Any tags assigned to the VPN connection.
        vgwTelemetry:
          allOf:
            - $ref: '#/components/schemas/VgwTelemetryList'
            - description: Information about the VPN tunnel.
      description: Describes a VPN connection.
    CreateVpnConnectionRouteRequest:
      type: object
      required:
        - DestinationCidrBlock
        - VpnConnectionId
      title: CreateVpnConnectionRouteRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/VpnConnectionId'
            - description: The ID of the VPN connection.
      description: Contains the parameters for CreateVpnConnectionRoute.
    CreateVpnGatewayRequest:
      type: object
      required:
        - Type
      title: CreateVpnGatewayRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/GatewayType'
            - description: The type of VPN connection this virtual private gateway supports.
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: '<p>A private Autonomous System Number (ASN) for the Amazon side of a BGP session. If you''re using a 16-bit ASN, it must be in the 64512 to 65534 range. If you''re using a 32-bit ASN, it must be in the 4200000000 to 4294967294 range.</p> <p>Default: 64512</p>'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
      description: Contains the parameters for CreateVpnGateway.
    VpnGateway:
      type: object
      properties:
        availabilityZone:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The Availability Zone where the virtual private gateway was created, if applicable. This field may be empty or not returned.'
        state:
          allOf:
            - $ref: '#/components/schemas/VpnState'
            - description: The current state of the virtual private gateway.
        type:
          allOf:
            - $ref: '#/components/schemas/GatewayType'
            - description: The type of VPN connection the virtual private gateway supports.
        attachments:
          allOf:
            - $ref: '#/components/schemas/VpcAttachmentList'
            - description: Any VPCs attached to the virtual private gateway.
        vpnGatewayId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the virtual private gateway.
        amazonSideAsn:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: The private Autonomous System Number (ASN) for the Amazon side of a BGP session.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: Any tags assigned to the virtual private gateway.
      description: Describes a virtual private gateway.
    CreditSpecification:
      type: object
      properties:
        cpuCredits:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The credit option for CPU usage of a T2, T3, or T3a instance. Valid values are <code>standard</code> and <code>unlimited</code>.'
      description: 'Describes the credit option for CPU usage of a T2, T3, or T3a instance.'
    CreditSpecificationRequest:
      type: object
      required:
        - CpuCredits
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The credit option for CPU usage of a T2, T3, or T3a instance. Valid values are <code>standard</code> and <code>unlimited</code>.'
      description: 'The credit option for CPU usage of a T2, T3, or T3a instance.'
    CurrentGenerationFlag:
      type: boolean
    CustomerGatewayIdStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/CustomerGatewayId'
          - xml:
              name: CustomerGatewayId
    CustomerGatewayList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/CustomerGateway'
          - xml:
              name: item
    DITMaxResults:
      type: integer
      minimum: 5
      maximum: 100
    DITOMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    DatafeedSubscriptionState:
      type: string
      enum:
        - Active
        - Inactive
    DedicatedHostFlag:
      type: boolean
    DefaultNetworkCardIndex:
      type: integer
    DefaultRouteTableAssociationValue:
      type: string
      enum:
        - enable
        - disable
    DefaultRouteTablePropagationValue:
      type: string
      enum:
        - enable
        - disable
    DefaultTargetCapacityType:
      type: string
      enum:
        - spot
        - on-demand
    DefaultingDhcpOptionsId:
      type: string
    DeleteCarrierGatewayRequest:
      type: object
      required:
        - CarrierGatewayId
      title: DeleteCarrierGatewayRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DeleteClientVpnEndpointRequest:
      type: object
      required:
        - ClientVpnEndpointId
      title: DeleteClientVpnEndpointRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DeleteClientVpnRouteRequest:
      type: object
      required:
        - ClientVpnEndpointId
        - DestinationCidrBlock
      title: DeleteClientVpnRouteRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DeleteCustomerGatewayRequest:
      type: object
      required:
        - CustomerGatewayId
      title: DeleteCustomerGatewayRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/CustomerGatewayId'
            - description: The ID of the customer gateway.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
      description: Contains the parameters for DeleteCustomerGateway.
    DeleteDhcpOptionsRequest:
      type: object
      required:
        - DhcpOptionsId
      title: DeleteDhcpOptionsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/DhcpOptionsId'
            - description: The ID of the DHCP options set.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DeleteEgressOnlyInternetGatewayRequest:
      type: object
      required:
        - EgressOnlyInternetGatewayId
      title: DeleteEgressOnlyInternetGatewayRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/EgressOnlyInternetGatewayId'
            - description: The ID of the egress-only internet gateway.
    DeleteFleetErrorCode:
      type: string
      enum:
        - fleetIdDoesNotExist
        - fleetIdMalformed
        - fleetNotInDeletableState
        - unexpectedError
    DeleteFleetError:
      type: object
      properties:
        code:
          allOf:
            - $ref: '#/components/schemas/DeleteFleetErrorCode'
            - description: The error code.
        message:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The description for the error code.
      description: Describes an EC2 Fleet error.
    DeleteFleetErrorItem:
      type: object
      properties:
        error:
          allOf:
            - $ref: '#/components/schemas/DeleteFleetError'
            - description: The error.
        fleetId:
          allOf:
            - $ref: '#/components/schemas/FleetId'
            - description: The ID of the EC2 Fleet.
      description: Describes an EC2 Fleet that was not successfully deleted.
    DeleteFleetErrorSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/DeleteFleetErrorItem'
          - xml:
              name: item
    FleetStateCode:
      type: string
      enum:
        - submitted
        - active
        - deleted
        - failed
        - deleted_running
        - deleted_terminating
        - modifying
    DeleteFleetSuccessItem:
      type: object
      properties:
        currentFleetState:
          allOf:
            - $ref: '#/components/schemas/FleetStateCode'
            - description: The current state of the EC2 Fleet.
        previousFleetState:
          allOf:
            - $ref: '#/components/schemas/FleetStateCode'
            - description: The previous state of the EC2 Fleet.
        fleetId:
          allOf:
            - $ref: '#/components/schemas/FleetId'
            - description: The ID of the EC2 Fleet.
      description: Describes an EC2 Fleet that was successfully deleted.
    DeleteFleetSuccessSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/DeleteFleetSuccessItem'
          - xml:
              name: item
    DeleteFleetsRequest:
      type: object
      required:
        - FleetIds
        - TerminateInstances
      title: DeleteFleetsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        FleetId:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: '<p>Indicates whether to terminate the instances when the EC2 Fleet is deleted. The default is to terminate the instances.</p> <p>To let the instances continue to run after the EC2 Fleet is deleted, specify <code>NoTerminateInstances</code>. Supported only for fleets of type <code>maintain</code> and <code>request</code>.</p> <p>For <code>instant</code> fleets, you cannot specify <code>NoTerminateInstances</code>. A deleted <code>instant</code> fleet with running instances is not supported.</p>'
    FlowLogIdList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/VpcFlowLogId'
          - xml:
              name: item
    DeleteFlowLogsRequest:
      type: object
      required:
        - FlowLogIds
      title: DeleteFlowLogsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        FlowLogId:
          allOf:
            - $ref: '#/components/schemas/FlowLogIdList'
            - description: '<p>One or more flow log IDs.</p> <p>Constraint: Maximum of 1000 flow log IDs.</p>'
    DeleteFpgaImageRequest:
      type: object
      required:
        - FpgaImageId
      title: DeleteFpgaImageRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/FpgaImageId'
            - description: The ID of the AFI.
    DeleteInstanceEventWindowRequest:
      type: object
      required:
        - InstanceEventWindowId
      title: DeleteInstanceEventWindowRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/InstanceEventWindowId'
            - description: The ID of the event window.
    InstanceEventWindowStateChange:
      type: object
      properties:
        instanceEventWindowId:
          allOf:
            - $ref: '#/components/schemas/InstanceEventWindowId'
            - description: The ID of the event window.
        state:
          allOf:
            - $ref: '#/components/schemas/InstanceEventWindowState'
            - description: The current state of the event window.
      description: The state of the event window.
    DeleteInternetGatewayRequest:
      type: object
      required:
        - InternetGatewayId
      title: DeleteInternetGatewayRequest
      properties:
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        internetGatewayId:
          allOf:
            - $ref: '#/components/schemas/InternetGatewayId'
            - description: The ID of the internet gateway.
    IpamPoolId:
      type: string
    DeleteIpamPoolRequest:
      type: object
      required:
        - IpamPoolId
      title: DeleteIpamPoolRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/IpamPoolId'
            - description: The ID of the pool to delete.
    DeleteIpamRequest:
      type: object
      required:
        - IpamId
      title: DeleteIpamRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: '<p>Enables you to quickly delete an IPAM, private scopes, pools in private scopes, and any allocations in the pools in private scopes. You cannot delete the IPAM with this option if there is a pool in your public scope. If you use this option, IPAM does the following:</p> <ul> <li> <p>Deallocates any CIDRs allocated to VPC resources (such as VPCs) in pools in private scopes.</p> <note> <p>No VPC resources are deleted as a result of enabling this option. The CIDR associated with the resource will no longer be allocated from an IPAM pool, but the CIDR itself will remain unchanged.</p> </note> </li> <li> <p>Deprovisions all IPv4 CIDRs provisioned to IPAM pools in private scopes.</p> </li> <li> <p>Deletes all IPAM pools in private scopes.</p> </li> <li> <p>Deletes all non-default private scopes in the IPAM.</p> </li> <li> <p>Deletes the default public and private scopes and the IPAM.</p> </li> </ul>'
    IpamScopeId:
      type: string
    DeleteIpamScopeRequest:
      type: object
      required:
        - IpamScopeId
      title: DeleteIpamScopeRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/IpamScopeId'
            - description: The ID of the scope to delete.
    DeleteKeyPairRequest:
      type: object
      title: DeleteKeyPairRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/KeyPairId'
            - description: The ID of the key pair.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DeleteLaunchTemplateRequest:
      type: object
      title: DeleteLaunchTemplateRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateName'
            - description: The name of the launch template. You must specify either the launch template ID or launch template name in the request.
    VersionStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: item
    DeleteLaunchTemplateVersionsRequest:
      type: object
      required:
        - Versions
      title: DeleteLaunchTemplateVersionsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateName'
            - description: The name of the launch template. You must specify either the launch template ID or launch template name in the request.
        LaunchTemplateVersion:
          allOf:
            - $ref: '#/components/schemas/VersionStringList'
            - description: The version numbers of one or more launch template versions to delete.
    ResponseError:
      type: object
      properties:
        code:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateErrorCode'
            - description: The error code.
        message:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The error message, if applicable.'
      description: Describes the error that's returned when you cannot delete a launch template version.
    DeleteLaunchTemplateVersionsResponseErrorItem:
      type: object
      properties:
        launchTemplateId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the launch template.
        launchTemplateName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the launch template.
        versionNumber:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: The version number of the launch template.
        responseError:
          allOf:
            - $ref: '#/components/schemas/ResponseError'
            - description: Information about the error.
      description: Describes a launch template version that could not be deleted.
    DeleteLaunchTemplateVersionsResponseErrorSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/DeleteLaunchTemplateVersionsResponseErrorItem'
          - xml:
              name: item
    DeleteLaunchTemplateVersionsResponseSuccessItem:
      type: object
      properties:
        launchTemplateId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the launch template.
        launchTemplateName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the launch template.
        versionNumber:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: The version number of the launch template.
      description: Describes a launch template version that was successfully deleted.
    DeleteLaunchTemplateVersionsResponseSuccessSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/DeleteLaunchTemplateVersionsResponseSuccessItem'
          - xml:
              name: item
    DeleteLocalGatewayRouteRequest:
      type: object
      required:
        - DestinationCidrBlock
        - LocalGatewayRouteTableId
      title: DeleteLocalGatewayRouteRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DeleteLocalGatewayRouteTableVpcAssociationRequest:
      type: object
      required:
        - LocalGatewayRouteTableVpcAssociationId
      title: DeleteLocalGatewayRouteTableVpcAssociationRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DeleteManagedPrefixListRequest:
      type: object
      required:
        - PrefixListId
      title: DeleteManagedPrefixListRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/PrefixListResourceId'
            - description: The ID of the prefix list.
    DeleteNatGatewayRequest:
      type: object
      required:
        - NatGatewayId
      title: DeleteNatGatewayRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/NatGatewayId'
            - description: The ID of the NAT gateway.
    DeleteNetworkAclEntryRequest:
      type: object
      required:
        - Egress
        - NetworkAclId
        - RuleNumber
      title: DeleteNetworkAclEntryRequest
      properties:
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        egress:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the rule is an egress rule.
        networkAclId:
          allOf:
            - $ref: '#/components/schemas/NetworkAclId'
            - description: The ID of the network ACL.
        ruleNumber:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The rule number of the entry to delete.
    DeleteNetworkAclRequest:
      type: object
      required:
        - NetworkAclId
      title: DeleteNetworkAclRequest
      properties:
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        networkAclId:
          allOf:
            - $ref: '#/components/schemas/NetworkAclId'
            - description: The ID of the network ACL.
    DeleteNetworkInsightsAccessScopeAnalysisRequest:
      type: object
      required:
        - NetworkInsightsAccessScopeAnalysisId
      title: DeleteNetworkInsightsAccessScopeAnalysisRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DeleteNetworkInsightsAccessScopeRequest:
      type: object
      required:
        - NetworkInsightsAccessScopeId
      title: DeleteNetworkInsightsAccessScopeRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/NetworkInsightsAccessScopeId'
            - description: The ID of the Network Access Scope.
    DeleteNetworkInsightsAnalysisRequest:
      type: object
      required:
        - NetworkInsightsAnalysisId
      title: DeleteNetworkInsightsAnalysisRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/NetworkInsightsAnalysisId'
            - description: The ID of the network insights analysis.
    DeleteNetworkInsightsPathRequest:
      type: object
      required:
        - NetworkInsightsPathId
      title: DeleteNetworkInsightsPathRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/NetworkInsightsPathId'
            - description: The ID of the path.
    DeleteNetworkInterfacePermissionRequest:
      type: object
      required:
        - NetworkInterfacePermissionId
      title: DeleteNetworkInterfacePermissionRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
      description: Contains the parameters for DeleteNetworkInterfacePermission.
    DeleteNetworkInterfaceRequest:
      type: object
      required:
        - NetworkInterfaceId
      title: DeleteNetworkInterfaceRequest
      properties:
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        networkInterfaceId:
          allOf:
            - $ref: '#/components/schemas/NetworkInterfaceId'
            - description: The ID of the network interface.
      description: Contains the parameters for DeleteNetworkInterface.
    DeletePlacementGroupRequest:
      type: object
      required:
        - GroupName
      title: DeletePlacementGroupRequest
      properties:
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        groupName:
          allOf:
            - $ref: '#/components/schemas/PlacementGroupName'
            - description: The name of the placement group.
    DeletePublicIpv4PoolRequest:
      type: object
      required:
        - PoolId
      title: DeletePublicIpv4PoolRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Ipv4PoolEc2Id'
            - description: The ID of the public IPv4 pool you want to delete.
    DeleteQueuedReservedInstancesErrorCode:
      type: string
      enum:
        - reserved-instances-id-invalid
        - reserved-instances-not-in-queued-state
        - unexpected-error
    DeleteQueuedReservedInstancesError:
      type: object
      properties:
        code:
          allOf:
            - $ref: '#/components/schemas/DeleteQueuedReservedInstancesErrorCode'
            - description: The error code.
        message:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The error message.
      description: Describes the error for a Reserved Instance whose queued purchase could not be deleted.
    DeleteQueuedReservedInstancesIdList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ReservationId'
          - xml:
              name: item
      minItems: 1
      maxItems: 100
    DeleteQueuedReservedInstancesRequest:
      type: object
      required:
        - ReservedInstancesIds
      title: DeleteQueuedReservedInstancesRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        ReservedInstancesId:
          allOf:
            - $ref: '#/components/schemas/DeleteQueuedReservedInstancesIdList'
            - description: The IDs of the Reserved Instances.
    SuccessfulQueuedPurchaseDeletionSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/SuccessfulQueuedPurchaseDeletion'
          - xml:
              name: item
    FailedQueuedPurchaseDeletionSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/FailedQueuedPurchaseDeletion'
          - xml:
              name: item
    DeleteRouteRequest:
      type: object
      required:
        - RouteTableId
      title: DeleteRouteRequest
      properties:
        destinationCidrBlock:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The IPv4 CIDR range for the route. The value you specify must match the CIDR for the route exactly.
        destinationIpv6CidrBlock:
          allOf:
            - $ref: '#/components/schemas/PrefixListResourceId'
            - description: The ID of the prefix list for the route.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        routeTableId:
          allOf:
            - $ref: '#/components/schemas/RouteTableId'
            - description: The ID of the route table.
    DeleteRouteTableRequest:
      type: object
      required:
        - RouteTableId
      title: DeleteRouteTableRequest
      properties:
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        routeTableId:
          allOf:
            - $ref: '#/components/schemas/RouteTableId'
            - description: The ID of the route table.
    DeleteSecurityGroupRequest:
      type: object
      title: DeleteSecurityGroupRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/SecurityGroupName'
            - description: '[EC2-Classic, default VPC] The name of the security group. You can specify either the security group name or the security group ID.'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DeleteSnapshotRequest:
      type: object
      required:
        - SnapshotId
      title: DeleteSnapshotRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/SnapshotId'
            - description: The ID of the EBS snapshot.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DeleteSpotDatafeedSubscriptionRequest:
      type: object
      title: DeleteSpotDatafeedSubscriptionRequest
      properties:
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
      description: Contains the parameters for DeleteSpotDatafeedSubscription.
    DeleteSubnetCidrReservationRequest:
      type: object
      required:
        - SubnetCidrReservationId
      title: DeleteSubnetCidrReservationRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DeleteSubnetRequest:
      type: object
      required:
        - SubnetId
      title: DeleteSubnetRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/SubnetId'
            - description: The ID of the subnet.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DeleteTagsRequest:
      type: object
      required:
        - Resources
      title: DeleteTagsRequest
      properties:
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        resourceId:
          allOf:
            - $ref: '#/components/schemas/ResourceIdList'
            - description: '<p>The IDs of the resources, separated by spaces.</p> <p>Constraints: Up to 1000 resource IDs. We recommend breaking up this request into smaller batches.</p>'
        tag:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: '<p>The tags to delete. Specify a tag key and an optional tag value to delete specific tags. If you specify a tag key without a tag value, we delete any tag with this key regardless of its value. If you specify a tag key with an empty string as the tag value, we delete the tag only if its value is an empty string.</p> <p>If you omit this parameter, we delete all user-defined tags for the specified resources. We do not delete Amazon Web Services-generated tags (tags that have the <code>aws:</code> prefix).</p> <p>Constraints: Up to 1000 tags.</p>'
    DeleteTrafficMirrorFilterRequest:
      type: object
      required:
        - TrafficMirrorFilterId
      title: DeleteTrafficMirrorFilterRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DeleteTrafficMirrorFilterRuleRequest:
      type: object
      required:
        - TrafficMirrorFilterRuleId
      title: DeleteTrafficMirrorFilterRuleRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DeleteTrafficMirrorSessionRequest:
      type: object
      required:
        - TrafficMirrorSessionId
      title: DeleteTrafficMirrorSessionRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DeleteTrafficMirrorTargetRequest:
      type: object
      required:
        - TrafficMirrorTargetId
      title: DeleteTrafficMirrorTargetRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DeleteTransitGatewayConnectPeerRequest:
      type: object
      required:
        - TransitGatewayConnectPeerId
      title: DeleteTransitGatewayConnectPeerRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DeleteTransitGatewayConnectRequest:
      type: object
      required:
        - TransitGatewayAttachmentId
      title: DeleteTransitGatewayConnectRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DeleteTransitGatewayMulticastDomainRequest:
      type: object
      required:
        - TransitGatewayMulticastDomainId
      title: DeleteTransitGatewayMulticastDomainRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DeleteTransitGatewayPeeringAttachmentRequest:
      type: object
      required:
        - TransitGatewayAttachmentId
      title: DeleteTransitGatewayPeeringAttachmentRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DeleteTransitGatewayPrefixListReferenceRequest:
      type: object
      required:
        - TransitGatewayRouteTableId
        - PrefixListId
      title: DeleteTransitGatewayPrefixListReferenceRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DeleteTransitGatewayRequest:
      type: object
      required:
        - TransitGatewayId
      title: DeleteTransitGatewayRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DeleteTransitGatewayRouteRequest:
      type: object
      required:
        - TransitGatewayRouteTableId
        - DestinationCidrBlock
      title: DeleteTransitGatewayRouteRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DeleteTransitGatewayRouteTableRequest:
      type: object
      required:
        - TransitGatewayRouteTableId
      title: DeleteTransitGatewayRouteTableRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DeleteTransitGatewayVpcAttachmentRequest:
      type: object
      required:
        - TransitGatewayAttachmentId
      title: DeleteTransitGatewayVpcAttachmentRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DeleteVolumeRequest:
      type: object
      required:
        - VolumeId
      title: DeleteVolumeRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/VolumeId'
            - description: The ID of the volume.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DeleteVpcEndpointConnectionNotificationsRequest:
      type: object
      required:
        - ConnectionNotificationIds
      title: DeleteVpcEndpointConnectionNotificationsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        ConnectionNotificationId:
          allOf:
            - $ref: '#/components/schemas/ConnectionNotificationIdsList'
            - description: One or more notification IDs.
    VpcEndpointServiceIdList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/VpcEndpointServiceId'
          - xml:
              name: item
    DeleteVpcEndpointServiceConfigurationsRequest:
      type: object
      required:
        - ServiceIds
      title: DeleteVpcEndpointServiceConfigurationsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        ServiceId:
          allOf:
            - $ref: '#/components/schemas/VpcEndpointServiceIdList'
            - description: The IDs of one or more services.
    DeleteVpcEndpointsRequest:
      type: object
      required:
        - VpcEndpointIds
      title: DeleteVpcEndpointsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        VpcEndpointId:
          allOf:
            - $ref: '#/components/schemas/VpcEndpointIdList'
            - description: One or more VPC endpoint IDs.
      description: Contains the parameters for DeleteVpcEndpoints.
    DeleteVpcPeeringConnectionRequest:
      type: object
      required:
        - VpcPeeringConnectionId
      title: DeleteVpcPeeringConnectionRequest
      properties:
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        vpcPeeringConnectionId:
          allOf:
            - $ref: '#/components/schemas/VpcPeeringConnectionId'
            - description: The ID of the VPC peering connection.
    DeleteVpcRequest:
      type: object
      required:
        - VpcId
      title: DeleteVpcRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/VpcId'
            - description: The ID of the VPC.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DeleteVpnConnectionRequest:
      type: object
      required:
        - VpnConnectionId
      title: DeleteVpnConnectionRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/VpnConnectionId'
            - description: The ID of the VPN connection.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
      description: Contains the parameters for DeleteVpnConnection.
    DeleteVpnConnectionRouteRequest:
      type: object
      required:
        - DestinationCidrBlock
        - VpnConnectionId
      title: DeleteVpnConnectionRouteRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/VpnConnectionId'
            - description: The ID of the VPN connection.
      description: Contains the parameters for DeleteVpnConnectionRoute.
    DeleteVpnGatewayRequest:
      type: object
      required:
        - VpnGatewayId
      title: DeleteVpnGatewayRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/VpnGatewayId'
            - description: The ID of the virtual private gateway.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
      description: Contains the parameters for DeleteVpnGateway.
    DeprovisionByoipCidrRequest:
      type: object
      required:
        - Cidr
      title: DeprovisionByoipCidrRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DeprovisionIpamPoolCidrRequest:
      type: object
      required:
        - IpamPoolId
      title: DeprovisionIpamPoolCidrRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The CIDR which you want to deprovision from the pool.
    IpamPoolCidr:
      type: object
      properties:
        cidr:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The CIDR provisioned to the IPAM pool. A CIDR is a representation of an IP address and its associated network mask (or netmask) and refers to a range of IP addresses. An IPv4 CIDR example is <code>10.24.34.0/23</code>. An IPv6 CIDR example is <code>2001:DB8::/32</code>.'
        state:
          allOf:
            - $ref: '#/components/schemas/IpamPoolCidrState'
            - description: The state of the CIDR.
        failureReason:
          allOf:
            - $ref: '#/components/schemas/IpamPoolCidrFailureReason'
            - description: Details related to why an IPAM pool CIDR failed to be provisioned.
      description: A CIDR provisioned to an IPAM pool.
    DeprovisionPublicIpv4PoolCidrRequest:
      type: object
      required:
        - PoolId
        - Cidr
      title: DeprovisionPublicIpv4PoolCidrRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The CIDR you want to deprovision from the pool.
    DeprovisionedAddressSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: item
    DeregisterImageRequest:
      type: object
      required:
        - ImageId
      title: DeregisterImageRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/ImageId'
            - description: The ID of the AMI.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
      description: Contains the parameters for DeregisterImage.
    DeregisterInstanceTagAttributeRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether to deregister all tag keys in the current Region. Specify <code>false</code> to deregister all tag keys.
        InstanceTagKey:
          allOf:
            - $ref: '#/components/schemas/InstanceTagKeySet'
            - description: Information about the tag keys to deregister.
      description: Information about the tag keys to deregister for the current Region. You can either specify individual tag keys or deregister all tag keys in the current Region. You must specify either <code>IncludeAllTagsOfInstance</code> or <code>InstanceTagKeys</code> in the request
    DeregisterInstanceEventNotificationAttributesRequest:
      type: object
      title: DeregisterInstanceEventNotificationAttributesRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/DeregisterInstanceTagAttributeRequest'
            - description: Information about the tag keys to deregister.
    InstanceTagNotificationAttribute:
      type: object
      properties:
        instanceTagKeySet:
          allOf:
            - $ref: '#/components/schemas/InstanceTagKeySet'
            - description: The registered tag keys.
        includeAllTagsOfInstance:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates wheter all tag keys in the current Region are registered to appear in scheduled event notifications. <code>true</code> indicates that all tag keys in the current Region are registered.
      description: Describes the registered tag keys for the current Region.
    DeregisterTransitGatewayMulticastGroupMembersRequest:
      type: object
      title: DeregisterTransitGatewayMulticastGroupMembersRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    TransitGatewayMulticastDeregisteredGroupMembers:
      type: object
      properties:
        transitGatewayMulticastDomainId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the transit gateway multicast domain.
        deregisteredNetworkInterfaceIds:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: The network interface IDs of the deregistered members.
        groupIpAddress:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The IP address assigned to the transit gateway multicast group.
      description: Describes the deregistered transit gateway multicast group members.
    DeregisterTransitGatewayMulticastGroupSourcesRequest:
      type: object
      title: DeregisterTransitGatewayMulticastGroupSourcesRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    TransitGatewayMulticastDeregisteredGroupSources:
      type: object
      properties:
        transitGatewayMulticastDomainId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the transit gateway multicast domain.
        deregisteredNetworkInterfaceIds:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: The network interface IDs of the non-registered members.
        groupIpAddress:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The IP address assigned to the transit gateway multicast group.
      description: Describes the deregistered transit gateway multicast group sources.
    DescribeAccountAttributesRequest:
      type: object
      title: DescribeAccountAttributesRequest
      properties:
        attributeName:
          allOf:
            - $ref: '#/components/schemas/AccountAttributeNameStringList'
            - description: The account attribute names.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DescribeAddressesAttributeRequest:
      type: object
      title: DescribeAddressesAttributeRequest
      properties:
        AllocationId:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    NextToken:
      type: string
    FilterList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Filter'
          - xml:
              name: Filter
    PublicIpStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: PublicIp
    DescribeAddressesRequest:
      type: object
      title: DescribeAddressesRequest
      properties:
        Filter:
          allOf:
            - $ref: '#/components/schemas/FilterList'
            - description: '<p>One or more filters. Filter names and values are case-sensitive.</p> <ul> <li> <p> <code>allocation-id</code> - [EC2-VPC] The allocation ID for the address.</p> </li> <li> <p> <code>association-id</code> - [EC2-VPC] The association ID for the address.</p> </li> <li> <p> <code>domain</code> - Indicates whether the address is for use in EC2-Classic (<code>standard</code>) or in a VPC (<code>vpc</code>).</p> </li> <li> <p> <code>instance-id</code> - The ID of the instance the address is associated with, if any.</p> </li> <li> <p> <code>network-border-group</code> - A unique set of Availability Zones, Local Zones, or Wavelength Zones from where Amazon Web Services advertises IP addresses. </p> </li> <li> <p> <code>network-interface-id</code> - [EC2-VPC] The ID of the network interface that the address is associated with, if any.</p> </li> <li> <p> <code>network-interface-owner-id</code> - The Amazon Web Services account ID of the owner.</p> </li> <li> <p> <code>private-ip-address</code> - [EC2-VPC] The private IP address associated with the Elastic IP address.</p> </li> <li> <p> <code>public-ip</code> - The Elastic IP address, or the carrier IP address.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> </ul>'
        PublicIp:
          allOf:
            - $ref: '#/components/schemas/PublicIpStringList'
            - description: '<p>One or more Elastic IP addresses.</p> <p>Default: Describes all your Elastic IP addresses.</p>'
        AllocationId:
          allOf:
            - $ref: '#/components/schemas/AllocationIdList'
            - description: '[EC2-VPC] Information about the allocation IDs.'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DescribeAggregateIdFormatRequest:
      type: object
      title: DescribeAggregateIdFormatRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    IdFormatList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/IdFormat'
          - xml:
              name: item
    ZoneNameStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: ZoneName
    DescribeAvailabilityZonesRequest:
      type: object
      title: DescribeAvailabilityZonesRequest
      properties:
        Filter:
          allOf:
            - $ref: '#/components/schemas/FilterList'
            - description: '<p>The filters.</p> <ul> <li> <p> <code>group-name</code> - For Availability Zones, use the Region name. For Local Zones, use the name of the group associated with the Local Zone (for example, <code>us-west-2-lax-1</code>) For Wavelength Zones, use the name of the group associated with the Wavelength Zone (for example, <code>us-east-1-wl1-bos-wlz-1</code>).</p> </li> <li> <p> <code>message</code> - The Zone message.</p> </li> <li> <p> <code>opt-in-status</code> - The opt-in status (<code>opted-in</code>, and <code>not-opted-in</code> | <code>opt-in-not-required</code>).</p> </li> <li> <p> <code>parent-zoneID</code> - The ID of the zone that handles some of the Local Zone and Wavelength Zone control plane operations, such as API calls.</p> </li> <li> <p> <code>parent-zoneName</code> - The ID of the zone that handles some of the Local Zone and Wavelength Zone control plane operations, such as API calls.</p> </li> <li> <p> <code>region-name</code> - The name of the Region for the Zone (for example, <code>us-east-1</code>).</p> </li> <li> <p> <code>state</code> - The state of the Availability Zone, the Local Zone, or the Wavelength Zone (<code>available</code>).</p> </li> <li> <p> <code>zone-id</code> - The ID of the Availability Zone (for example, <code>use1-az1</code>), the Local Zone (for example, <code>usw2-lax1-az1</code>), or the Wavelength Zone (for example, <code>us-east-1-wl1-bos-wlz-1</code>).</p> </li> <li> <p> <code>zone-type</code> - The type of zone, for example, <code>local-zone</code>.</p> </li> <li> <p> <code>zone-name</code> - The name of the Availability Zone (for example, <code>us-east-1a</code>), the Local Zone (for example, <code>us-west-2-lax-1a</code>), or the Wavelength Zone (for example, <code>us-east-1-wl1-bos-wlz-1</code>).</p> </li> <li> <p> <code>zone-type</code> - The type of zone, for example, <code>local-zone</code>.</p> </li> </ul>'
        ZoneName:
          allOf:
            - $ref: '#/components/schemas/ZoneNameStringList'
            - description: 'The names of the Availability Zones, Local Zones, and Wavelength Zones.'
        ZoneId:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: '<p>Include all Availability Zones, Local Zones, and Wavelength Zones regardless of your opt-in status.</p> <p>If you do not use this parameter, the results include only the zones for the Regions where you have chosen the option to opt in.</p>'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DescribeBundleTasksRequest:
      type: object
      title: DescribeBundleTasksRequest
      properties:
        BundleId:
          allOf:
            - $ref: '#/components/schemas/BundleIdStringList'
            - description: '<p>The bundle task IDs.</p> <p>Default: Describes all your bundle tasks.</p>'
        Filter:
          allOf:
            - $ref: '#/components/schemas/FilterList'
            - description: '<p>The filters.</p> <ul> <li> <p> <code>bundle-id</code> - The ID of the bundle task.</p> </li> <li> <p> <code>error-code</code> - If the task failed, the error code returned.</p> </li> <li> <p> <code>error-message</code> - If the task failed, the error message returned.</p> </li> <li> <p> <code>instance-id</code> - The ID of the instance.</p> </li> <li> <p> <code>progress</code> - The level of task completion, as a percentage (for example, 20%).</p> </li> <li> <p> <code>s3-bucket</code> - The Amazon S3 bucket to store the AMI.</p> </li> <li> <p> <code>s3-prefix</code> - The beginning of the AMI name.</p> </li> <li> <p> <code>start-time</code> - The time the task started (for example, 2013-09-15T17:15:20.000Z).</p> </li> <li> <p> <code>state</code> - The state of the task (<code>pending</code> | <code>waiting-for-shutdown</code> | <code>bundling</code> | <code>storing</code> | <code>cancelling</code> | <code>complete</code> | <code>failed</code>).</p> </li> <li> <p> <code>update-time</code> - The time of the most recent update for the task.</p> </li> </ul>'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DescribeByoipCidrsMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    DescribeByoipCidrsRequest:
      type: object
      required:
        - MaxResults
      title: DescribeByoipCidrsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token for the next page of results.
    DescribeCapacityReservationFleetsMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    DescribeCapacityReservationFleetsRequest:
      type: object
      title: DescribeCapacityReservationFleetsRequest
      properties:
        CapacityReservationFleetId:
          allOf:
            - $ref: '#/components/schemas/DescribeCapacityReservationFleetsMaxResults'
            - description: 'The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned <code>nextToken</code> value. This value can be between 5 and 500. If <code>maxResults</code> is given a larger value than 500, you receive an error.'
        Filter:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DescribeCapacityReservationsMaxResults:
      type: integer
      minimum: 1
      maximum: 1000
    DescribeCapacityReservationsRequest:
      type: object
      title: DescribeCapacityReservationsRequest
      properties:
        CapacityReservationId:
          allOf:
            - $ref: '#/components/schemas/DescribeCapacityReservationsMaxResults'
            - description: 'The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned <code>nextToken</code> value. This value can be between 5 and 500. If <code>maxResults</code> is given a larger value than 500, you receive an error.'
        Filter:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DescribeCarrierGatewaysRequest:
      type: object
      title: DescribeCarrierGatewaysRequest
      properties:
        CarrierGatewayId:
          allOf:
            - $ref: '#/components/schemas/CarrierGatewayIdSet'
            - description: One or more carrier gateway IDs.
        Filter:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DescribeClassicLinkInstancesMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    InstanceIdStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/InstanceId'
          - xml:
              name: InstanceId
    DescribeClassicLinkInstancesRequest:
      type: object
      title: DescribeClassicLinkInstancesRequest
      properties:
        Filter:
          allOf:
            - $ref: '#/components/schemas/FilterList'
            - description: '<p>One or more filters.</p> <ul> <li> <p> <code>group-id</code> - The ID of a VPC security group that''s associated with the instance.</p> </li> <li> <p> <code>instance-id</code> - The ID of the instance.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC to which the instance is linked.</p> <p> <code>vpc-id</code> - The ID of the VPC that the instance is linked to.</p> </li> </ul>'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        InstanceId:
          allOf:
            - $ref: '#/components/schemas/InstanceIdStringList'
            - description: One or more instance IDs. Must be instances linked to a VPC through ClassicLink.
        maxResults:
          allOf:
            - $ref: '#/components/schemas/DescribeClassicLinkInstancesMaxResults'
            - description: '<p>The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p> <p>Constraint: If the value is greater than 1000, we return only 1000 items.</p>'
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token for the next page of results.
    DescribeClientVpnAuthorizationRulesMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    DescribeClientVpnAuthorizationRulesRequest:
      type: object
      required:
        - ClientVpnEndpointId
      title: DescribeClientVpnAuthorizationRulesRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token to retrieve the next page of results.
        Filter:
          allOf:
            - $ref: '#/components/schemas/DescribeClientVpnAuthorizationRulesMaxResults'
            - description: The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the nextToken value.
    DescribeClientVpnConnectionsMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    DescribeClientVpnConnectionsRequest:
      type: object
      required:
        - ClientVpnEndpointId
      title: DescribeClientVpnConnectionsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/ClientVpnEndpointId'
            - description: The ID of the Client VPN endpoint.
        Filter:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DescribeClientVpnEndpointMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    DescribeClientVpnEndpointsRequest:
      type: object
      title: DescribeClientVpnEndpointsRequest
      properties:
        ClientVpnEndpointId:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token to retrieve the next page of results.
        Filter:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    EndpointSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ClientVpnEndpoint'
          - xml:
              name: item
    DescribeClientVpnRoutesMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    DescribeClientVpnRoutesRequest:
      type: object
      required:
        - ClientVpnEndpointId
      title: DescribeClientVpnRoutesRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/ClientVpnEndpointId'
            - description: The ID of the Client VPN endpoint.
        Filter:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DescribeClientVpnTargetNetworksMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    DescribeClientVpnTargetNetworksRequest:
      type: object
      required:
        - ClientVpnEndpointId
      title: DescribeClientVpnTargetNetworksRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token to retrieve the next page of results.
        Filter:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    TargetNetworkSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/TargetNetwork'
          - xml:
              name: item
    DescribeCoipPoolsRequest:
      type: object
      title: DescribeCoipPoolsRequest
      properties:
        PoolId:
          allOf:
            - $ref: '#/components/schemas/CoipPoolIdSet'
            - description: The IDs of the address pools.
        Filter:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DescribeConversionTaskList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ConversionTask'
          - xml:
              name: item
    DescribeConversionTasksRequest:
      type: object
      title: DescribeConversionTasksRequest
      properties:
        conversionTaskId:
          allOf:
            - $ref: '#/components/schemas/ConversionIdStringList'
            - description: The conversion task IDs.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DescribeCustomerGatewaysRequest:
      type: object
      title: DescribeCustomerGatewaysRequest
      properties:
        CustomerGatewayId:
          allOf:
            - $ref: '#/components/schemas/CustomerGatewayIdStringList'
            - description: '<p>One or more customer gateway IDs.</p> <p>Default: Describes all your customer gateways.</p>'
        Filter:
          allOf:
            - $ref: '#/components/schemas/FilterList'
            - description: '<p>One or more filters.</p> <ul> <li> <p> <code>bgp-asn</code> - The customer gateway''s Border Gateway Protocol (BGP) Autonomous System Number (ASN).</p> </li> <li> <p> <code>customer-gateway-id</code> - The ID of the customer gateway.</p> </li> <li> <p> <code>ip-address</code> - The IP address of the customer gateway''s Internet-routable external interface.</p> </li> <li> <p> <code>state</code> - The state of the customer gateway (<code>pending</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>).</p> </li> <li> <p> <code>type</code> - The type of customer gateway. Currently, the only supported type is <code>ipsec.1</code>.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> </ul>'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
      description: Contains the parameters for DescribeCustomerGateways.
    DescribeDhcpOptionsMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    DhcpOptionsIdStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/DhcpOptionsId'
          - xml:
              name: DhcpOptionsId
    DescribeDhcpOptionsRequest:
      type: object
      title: DescribeDhcpOptionsRequest
      properties:
        DhcpOptionsId:
          allOf:
            - $ref: '#/components/schemas/DhcpOptionsIdStringList'
            - description: '<p>The IDs of one or more DHCP options sets.</p> <p>Default: Describes all your DHCP options sets.</p>'
        Filter:
          allOf:
            - $ref: '#/components/schemas/FilterList'
            - description: '<p>One or more filters.</p> <ul> <li> <p> <code>dhcp-options-id</code> - The ID of a DHCP options set.</p> </li> <li> <p> <code>key</code> - The key for one of the options (for example, <code>domain-name</code>).</p> </li> <li> <p> <code>value</code> - The value for one of the options.</p> </li> <li> <p> <code>owner-id</code> - The ID of the Amazon Web Services account that owns the DHCP options set.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> </ul>'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/DescribeDhcpOptionsMaxResults'
            - description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
    DhcpOptionsList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/DhcpOptions'
          - xml:
              name: item
    DescribeEgressOnlyInternetGatewaysMaxResults:
      type: integer
      minimum: 5
      maximum: 255
    DescribeEgressOnlyInternetGatewaysRequest:
      type: object
      title: DescribeEgressOnlyInternetGatewaysRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        EgressOnlyInternetGatewayId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token for the next page of results.
        Filter:
          allOf:
            - $ref: '#/components/schemas/FilterList'
            - description: '<p>One or more filters.</p> <ul> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> </ul>'
    EgressOnlyInternetGatewayList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/EgressOnlyInternetGateway'
          - xml:
              name: item
    DescribeElasticGpusMaxResults:
      type: integer
      minimum: 10
      maximum: 1000
    DescribeElasticGpusRequest:
      type: object
      title: DescribeElasticGpusRequest
      properties:
        ElasticGpuId:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        Filter:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to request the next page of results.
    ElasticGpuSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ElasticGpus'
          - xml:
              name: item
    DescribeExportImageTasksMaxResults:
      type: integer
      minimum: 1
      maximum: 500
    DescribeExportImageTasksRequest:
      type: object
      title: DescribeExportImageTasksRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        Filter:
          allOf:
            - $ref: '#/components/schemas/FilterList'
            - description: 'Filter tasks using the <code>task-state</code> filter and one of the following values: <code>active</code>, <code>completed</code>, <code>deleting</code>, or <code>deleted</code>.'
        ExportImageTaskId:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: A token that indicates the next page of results.
    ExportImageTaskList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ExportImageTask'
          - xml:
              name: item
    ExportTaskIdStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ExportTaskId'
          - xml:
              name: ExportTaskId
    DescribeExportTasksRequest:
      type: object
      title: DescribeExportTasksRequest
      properties:
        exportTaskId:
          allOf:
            - $ref: '#/components/schemas/ExportTaskIdStringList'
            - description: The export task IDs.
        Filter:
          allOf:
            - $ref: '#/components/schemas/FilterList'
            - description: the filters for the export tasks.
    ExportTaskList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ExportTask'
          - xml:
              name: item
    FastLaunchImageIdList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ImageId'
          - xml:
              name: ImageId
    DescribeFastLaunchImagesRequest:
      type: object
      title: DescribeFastLaunchImagesRequest
      properties:
        ImageId:
          allOf:
            - $ref: '#/components/schemas/FastLaunchImageIdList'
            - description: Details for one or more Windows AMI image IDs.
        Filter:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DescribeFastLaunchImagesRequestMaxResults:
      type: integer
      minimum: 0
      maximum: 200
    DescribeFastLaunchImagesSuccessSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/DescribeFastLaunchImagesSuccessItem'
          - xml:
              name: item
    FastLaunchResourceType:
      type: string
      enum:
        - snapshot
    FastLaunchSnapshotConfigurationResponse:
      type: object
      properties:
        targetResourceCount:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of pre-provisioned snapshots requested to keep on hand for a fast-launch enabled Windows AMI.
      description: Configuration settings for creating and managing pre-provisioned snapshots for a fast-launch enabled Windows AMI.
    FastLaunchLaunchTemplateSpecificationResponse:
      type: object
      properties:
        launchTemplateId:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateId'
            - description: The ID of the launch template for faster launching of the associated Windows AMI.
        launchTemplateName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the launch template for faster launching of the associated Windows AMI.
        version:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The version of the launch template for faster launching of the associated Windows AMI.
      description: Identifies the launch template to use for faster launching of the Windows AMI.
    FastLaunchStateCode:
      type: string
      enum:
        - enabling
        - enabling-failed
        - enabled
        - enabled-failed
        - disabling
        - disabling-failed
    DescribeFastLaunchImagesSuccessItem:
      type: object
      properties:
        imageId:
          allOf:
            - $ref: '#/components/schemas/ImageId'
            - description: The image ID that identifies the fast-launch enabled Windows image.
        resourceType:
          allOf:
            - $ref: '#/components/schemas/FastLaunchResourceType'
            - description: 'The resource type that is used for pre-provisioning the Windows AMI. Supported values include: <code>snapshot</code>.'
        snapshotConfiguration:
          allOf:
            - $ref: '#/components/schemas/FastLaunchSnapshotConfigurationResponse'
            - description: A group of parameters that are used for pre-provisioning the associated Windows AMI using snapshots.
        launchTemplate:
          allOf:
            - $ref: '#/components/schemas/FastLaunchLaunchTemplateSpecificationResponse'
            - description: The launch template that the fast-launch enabled Windows AMI uses when it launches Windows instances from pre-provisioned snapshots.
        maxParallelLaunches:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The maximum number of parallel instances that are launched for creating resources.
        ownerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The owner ID for the fast-launch enabled Windows AMI.
        state:
          allOf:
            - $ref: '#/components/schemas/FastLaunchStateCode'
            - description: The current state of faster launching for the specified Windows AMI.
        stateTransitionReason:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The reason that faster launching for the Windows AMI changed to the current state.
        stateTransitionTime:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: The time that faster launching for the Windows AMI changed to the current state.
      description: Describe details about a fast-launch enabled Windows image that meets the requested criteria. Criteria are defined by the <code>DescribeFastLaunchImages</code> action filters.
    FastSnapshotRestoreStateCode:
      type: string
      enum:
        - enabling
        - optimizing
        - enabled
        - disabling
        - disabled
    DescribeFastSnapshotRestoreSuccessItem:
      type: object
      properties:
        snapshotId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the snapshot.
        availabilityZone:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Availability Zone.
        state:
          allOf:
            - $ref: '#/components/schemas/FastSnapshotRestoreStateCode'
            - description: The state of fast snapshot restores.
        stateTransitionReason:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The reason for the state transition. The possible values are as follows:</p> <ul> <li> <p> <code>Client.UserInitiated</code> - The state successfully transitioned to <code>enabling</code> or <code>disabling</code>.</p> </li> <li> <p> <code>Client.UserInitiated - Lifecycle state transition</code> - The state successfully transitioned to <code>optimizing</code>, <code>enabled</code>, or <code>disabled</code>.</p> </li> </ul>'
        ownerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Amazon Web Services account that enabled fast snapshot restores on the snapshot.
        ownerAlias:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Web Services owner alias that enabled fast snapshot restores on the snapshot. This is intended for future use.
        enablingTime:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: The time at which fast snapshot restores entered the <code>enabling</code> state.
        optimizingTime:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: The time at which fast snapshot restores entered the <code>optimizing</code> state.
        enabledTime:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: The time at which fast snapshot restores entered the <code>enabled</code> state.
        disablingTime:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: The time at which fast snapshot restores entered the <code>disabling</code> state.
        disabledTime:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: The time at which fast snapshot restores entered the <code>disabled</code> state.
      description: Describes fast snapshot restores for a snapshot.
    DescribeFastSnapshotRestoreSuccessSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/DescribeFastSnapshotRestoreSuccessItem'
          - xml:
              name: item
    DescribeFastSnapshotRestoresMaxResults:
      type: integer
      minimum: 0
      maximum: 200
    DescribeFastSnapshotRestoresRequest:
      type: object
      title: DescribeFastSnapshotRestoresRequest
      properties:
        Filter:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DescribeFleetError:
      type: object
      properties:
        launchTemplateAndOverrides:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateAndOverridesResponse'
            - description: The launch templates and overrides that were used for launching the instances. The values that you specify in the Overrides replace the values in the launch template.
        lifecycle:
          allOf:
            - $ref: '#/components/schemas/InstanceLifecycle'
            - description: Indicates if the instance that could not be launched was a Spot Instance or On-Demand Instance.
        errorCode:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The error code that indicates why the instance could not be launched. For more information about error codes, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/errors-overview.html.html">Error codes</a>.'
        errorMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The error message that describes why the instance could not be launched. For more information about error messages, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/errors-overview.html.html">Error codes</a>.'
      description: Describes the instances that could not be launched by the fleet.
    DescribeFleetHistoryRequest:
      type: object
      required:
        - FleetId
        - StartTime
      title: DescribeFleetHistoryRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: 'The start date and time for the events, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).'
    HistoryRecordSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/HistoryRecordEntry'
          - xml:
              name: item
    DescribeFleetInstancesRequest:
      type: object
      required:
        - FleetId
      title: DescribeFleetInstancesRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/FleetId'
            - description: The ID of the EC2 Fleet.
        Filter:
          allOf:
            - $ref: '#/components/schemas/FilterList'
            - description: <p>The filters.</p> <ul> <li> <p> <code>instance-type</code> - The instance type.</p> </li> </ul>
    DescribeFleetsErrorSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/DescribeFleetError'
          - xml:
              name: item
    DescribeFleetsInstances:
      type: object
      properties:
        launchTemplateAndOverrides:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateAndOverridesResponse'
            - description: The launch templates and overrides that were used for launching the instances. The values that you specify in the Overrides replace the values in the launch template.
        lifecycle:
          allOf:
            - $ref: '#/components/schemas/InstanceLifecycle'
            - description: Indicates if the instance that was launched is a Spot Instance or On-Demand Instance.
        instanceIds:
          allOf:
            - $ref: '#/components/schemas/InstanceIdsSet'
            - description: The IDs of the instances.
        instanceType:
          allOf:
            - $ref: '#/components/schemas/InstanceType'
            - description: The instance type.
        platform:
          allOf:
            - $ref: '#/components/schemas/PlatformValues'
            - description: 'The value is <code>Windows</code> for Windows instances. Otherwise, the value is blank.'
      description: Describes the instances that were launched by the fleet.
    DescribeFleetsInstancesSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/DescribeFleetsInstances'
          - xml:
              name: item
    FleetIdSet:
      type: array
      items:
        $ref: '#/components/schemas/FleetId'
    DescribeFleetsRequest:
      type: object
      title: DescribeFleetsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token for the next set of results.
        FleetId:
          allOf:
            - $ref: '#/components/schemas/FleetIdSet'
            - description: '<p>The IDs of the EC2 Fleets.</p> <note> <p>If a fleet is of type <code>instant</code>, you must specify the fleet ID, otherwise it does not appear in the response.</p> </note>'
        Filter:
          allOf:
            - $ref: '#/components/schemas/FilterList'
            - description: <p>The filters.</p> <ul> <li> <p> <code>activity-status</code> - The progress of the EC2 Fleet ( <code>error</code> | <code>pending-fulfillment</code> | <code>pending-termination</code> | <code>fulfilled</code>).</p> </li> <li> <p> <code>excess-capacity-termination-policy</code> - Indicates whether to terminate running instances if the target capacity is decreased below the current EC2 Fleet size (<code>true</code> | <code>false</code>).</p> </li> <li> <p> <code>fleet-state</code> - The state of the EC2 Fleet (<code>submitted</code> | <code>active</code> | <code>deleted</code> | <code>failed</code> | <code>deleted-running</code> | <code>deleted-terminating</code> | <code>modifying</code>).</p> </li> <li> <p> <code>replace-unhealthy-instances</code> - Indicates whether EC2 Fleet should replace unhealthy instances (<code>true</code> | <code>false</code>).</p> </li> <li> <p> <code>type</code> - The type of request (<code>instant</code> | <code>request</code> | <code>maintain</code>).</p> </li> </ul>
    FleetSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/FleetData'
          - xml:
              name: item
    DescribeFlowLogsRequest:
      type: object
      title: DescribeFlowLogsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/FilterList'
            - description: '<p>One or more filters.</p> <ul> <li> <p> <code>deliver-log-status</code> - The status of the logs delivery (<code>SUCCESS</code> | <code>FAILED</code>).</p> </li> <li> <p> <code>log-destination-type</code> - The type of destination to which the flow log publishes data. Possible destination types include <code>cloud-watch-logs</code> and <code>s3</code>.</p> </li> <li> <p> <code>flow-log-id</code> - The ID of the flow log.</p> </li> <li> <p> <code>log-group-name</code> - The name of the log group.</p> </li> <li> <p> <code>resource-id</code> - The ID of the VPC, subnet, or network interface.</p> </li> <li> <p> <code>traffic-type</code> - The type of traffic (<code>ACCEPT</code> | <code>REJECT</code> | <code>ALL</code>).</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> </ul>'
        FlowLogId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token for the next page of results.
    FlowLogSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/FlowLog'
          - xml:
              name: item
    FpgaImageAttributeName:
      type: string
      enum:
        - description
        - name
        - loadPermission
        - productCodes
    DescribeFpgaImageAttributeRequest:
      type: object
      required:
        - FpgaImageId
        - Attribute
      title: DescribeFpgaImageAttributeRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/FpgaImageAttributeName'
            - description: The AFI attribute.
    FpgaImageAttribute:
      type: object
      properties:
        fpgaImageId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the AFI.
        name:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the AFI.
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The description of the AFI.
        loadPermissions:
          allOf:
            - $ref: '#/components/schemas/LoadPermissionList'
            - description: The load permissions.
        productCodes:
          allOf:
            - $ref: '#/components/schemas/ProductCodeList'
            - description: The product codes.
      description: Describes an Amazon FPGA image (AFI) attribute.
    DescribeFpgaImagesMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    FpgaImageIdList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/FpgaImageId'
          - xml:
              name: item
    OwnerStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: Owner
    DescribeFpgaImagesRequest:
      type: object
      title: DescribeFpgaImagesRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        FpgaImageId:
          allOf:
            - $ref: '#/components/schemas/FpgaImageIdList'
            - description: The AFI IDs.
        Owner:
          allOf:
            - $ref: '#/components/schemas/OwnerStringList'
            - description: 'Filters the AFI by owner. Specify an Amazon Web Services account ID, <code>self</code> (owner is the sender of the request), or an Amazon Web Services owner alias (valid values are <code>amazon</code> | <code>aws-marketplace</code>).'
        Filter:
          allOf:
            - $ref: '#/components/schemas/DescribeFpgaImagesMaxResults'
            - description: The maximum number of results to return in a single call.
    FpgaImageList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/FpgaImage'
          - xml:
              name: item
    OfferingId:
      type: string
    DescribeHostReservationOfferingsRequest:
      type: object
      title: DescribeHostReservationOfferingsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/OfferingId'
            - description: The ID of the reservation offering.
    HostOfferingSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/HostOffering'
          - xml:
              name: item
    DescribeHostReservationsMaxResults:
      type: integer
      minimum: 5
      maximum: 500
    DescribeHostReservationsRequest:
      type: object
      title: DescribeHostReservationsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results.
    HostReservationSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/HostReservation'
          - xml:
              name: item
    RequestHostIdList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/DedicatedHostId'
          - xml:
              name: item
    DescribeHostsRequest:
      type: object
      title: DescribeHostsRequest
      properties:
        filter:
          allOf:
            - $ref: '#/components/schemas/FilterList'
            - description: '<p>The filters.</p> <ul> <li> <p> <code>auto-placement</code> - Whether auto-placement is enabled or disabled (<code>on</code> | <code>off</code>).</p> </li> <li> <p> <code>availability-zone</code> - The Availability Zone of the host.</p> </li> <li> <p> <code>client-token</code> - The idempotency token that you provided when you allocated the host.</p> </li> <li> <p> <code>host-reservation-id</code> - The ID of the reservation assigned to this host.</p> </li> <li> <p> <code>instance-type</code> - The instance type size that the Dedicated Host is configured to support.</p> </li> <li> <p> <code>state</code> - The allocation state of the Dedicated Host (<code>available</code> | <code>under-assessment</code> | <code>permanent-failure</code> | <code>released</code> | <code>released-permanent-failure</code>).</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> </ul>'
        hostId:
          allOf:
            - $ref: '#/components/schemas/RequestHostIdList'
            - description: The IDs of the Dedicated Hosts. The IDs are used for targeted instance launches.
        maxResults:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: '<p>The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned <code>nextToken</code> value. This value can be between 5 and 500. If <code>maxResults</code> is given a larger value than 500, you receive an error.</p> <p>You cannot specify this parameter and the host IDs parameter in the same request.</p>'
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to use to retrieve the next page of results.
    HostList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Host'
          - xml:
              name: item
    DescribeIamInstanceProfileAssociationsMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    DescribeIamInstanceProfileAssociationsRequest:
      type: object
      title: DescribeIamInstanceProfileAssociationsRequest
      properties:
        AssociationId:
          allOf:
            - $ref: '#/components/schemas/AssociationIdList'
            - description: The IAM instance profile associations.
        Filter:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token to request the next page of results.
    IamInstanceProfileAssociationSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/IamInstanceProfileAssociation'
          - xml:
              name: item
    DescribeIdFormatRequest:
      type: object
      title: DescribeIdFormatRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The type of resource: <code>bundle</code> | <code>conversion-task</code> | <code>customer-gateway</code> | <code>dhcp-options</code> | <code>elastic-ip-allocation</code> | <code>elastic-ip-association</code> | <code>export-task</code> | <code>flow-log</code> | <code>image</code> | <code>import-task</code> | <code>instance</code> | <code>internet-gateway</code> | <code>network-acl</code> | <code>network-acl-association</code> | <code>network-interface</code> | <code>network-interface-attachment</code> | <code>prefix-list</code> | <code>reservation</code> | <code>route-table</code> | <code>route-table-association</code> | <code>security-group</code> | <code>snapshot</code> | <code>subnet</code> | <code>subnet-cidr-block-association</code> | <code>volume</code> | <code>vpc</code> | <code>vpc-cidr-block-association</code> | <code>vpc-endpoint</code> | <code>vpc-peering-connection</code> | <code>vpn-connection</code> | <code>vpn-gateway</code> '
    DescribeIdentityIdFormatRequest:
      type: object
      required:
        - PrincipalArn
      title: DescribeIdentityIdFormatRequest
      properties:
        principalArn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The ARN of the principal, which can be an IAM role, IAM user, or the root user.'
        resource:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The type of resource: <code>bundle</code> | <code>conversion-task</code> | <code>customer-gateway</code> | <code>dhcp-options</code> | <code>elastic-ip-allocation</code> | <code>elastic-ip-association</code> | <code>export-task</code> | <code>flow-log</code> | <code>image</code> | <code>import-task</code> | <code>instance</code> | <code>internet-gateway</code> | <code>network-acl</code> | <code>network-acl-association</code> | <code>network-interface</code> | <code>network-interface-attachment</code> | <code>prefix-list</code> | <code>reservation</code> | <code>route-table</code> | <code>route-table-association</code> | <code>security-group</code> | <code>snapshot</code> | <code>subnet</code> | <code>subnet-cidr-block-association</code> | <code>volume</code> | <code>vpc</code> | <code>vpc-cidr-block-association</code> | <code>vpc-endpoint</code> | <code>vpc-peering-connection</code> | <code>vpn-connection</code> | <code>vpn-gateway</code> '
    DescribeImageAttributeRequest:
      type: object
      required:
        - Attribute
        - ImageId
      title: DescribeImageAttributeRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/ImageId'
            - description: The ID of the AMI.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
      description: Contains the parameters for DescribeImageAttribute.
    ExecutableByStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: ExecutableBy
    ImageIdStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ImageId'
          - xml:
              name: ImageId
    DescribeImagesRequest:
      type: object
      title: DescribeImagesRequest
      properties:
        ExecutableBy:
          allOf:
            - $ref: '#/components/schemas/ExecutableByStringList'
            - description: '<p>Scopes the images by users with explicit launch permissions. Specify an Amazon Web Services account ID, <code>self</code> (the sender of the request), or <code>all</code> (public AMIs).</p> <ul> <li> <p>If you specify an Amazon Web Services account ID that is not your own, only AMIs shared with that specific Amazon Web Services account ID are returned. However, AMIs that are shared with the account’s organization or organizational unit (OU) are not returned.</p> </li> <li> <p>If you specify <code>self</code> or your own Amazon Web Services account ID, AMIs shared with your account are returned. In addition, AMIs that are shared with the organization or OU of which you are member are also returned. </p> </li> <li> <p>If you specify <code>all</code>, all public AMIs are returned.</p> </li> </ul>'
        Filter:
          allOf:
            - $ref: '#/components/schemas/FilterList'
            - description: '<p>The filters.</p> <ul> <li> <p> <code>architecture</code> - The image architecture (<code>i386</code> | <code>x86_64</code> | <code>arm64</code>).</p> </li> <li> <p> <code>block-device-mapping.delete-on-termination</code> - A Boolean value that indicates whether the Amazon EBS volume is deleted on instance termination.</p> </li> <li> <p> <code>block-device-mapping.device-name</code> - The device name specified in the block device mapping (for example, <code>/dev/sdh</code> or <code>xvdh</code>).</p> </li> <li> <p> <code>block-device-mapping.snapshot-id</code> - The ID of the snapshot used for the Amazon EBS volume.</p> </li> <li> <p> <code>block-device-mapping.volume-size</code> - The volume size of the Amazon EBS volume, in GiB.</p> </li> <li> <p> <code>block-device-mapping.volume-type</code> - The volume type of the Amazon EBS volume (<code>io1</code> | <code>io2</code> | <code>gp2</code> | <code>gp3</code> | <code>sc1 </code>| <code>st1</code> | <code>standard</code>).</p> </li> <li> <p> <code>block-device-mapping.encrypted</code> - A Boolean that indicates whether the Amazon EBS volume is encrypted.</p> </li> <li> <p> <code>creation-date</code> - The time when the image was created, in the ISO 8601 format in the UTC time zone (YYYY-MM-DDThh:mm:ss.sssZ), for example, <code>2021-09-29T11:04:43.305Z</code>. You can use a wildcard (<code>*</code>), for example, <code>2021-09-29T*</code>, which matches an entire day.</p> </li> <li> <p> <code>description</code> - The description of the image (provided during image creation).</p> </li> <li> <p> <code>ena-support</code> - A Boolean that indicates whether enhanced networking with ENA is enabled.</p> </li> <li> <p> <code>hypervisor</code> - The hypervisor type (<code>ovm</code> | <code>xen</code>).</p> </li> <li> <p> <code>image-id</code> - The ID of the image.</p> </li> <li> <p> <code>image-type</code> - The image type (<code>machine</code> | <code>kernel</code> | <code>ramdisk</code>).</p> </li> <li> <p> <code>is-public</code> - A Boolean that indicates whether the image is public.</p> </li> <li> <p> <code>kernel-id</code> - The kernel ID.</p> </li> <li> <p> <code>manifest-location</code> - The location of the image manifest.</p> </li> <li> <p> <code>name</code> - The name of the AMI (provided during image creation).</p> </li> <li> <p> <code>owner-alias</code> - The owner alias (<code>amazon</code> | <code>aws-marketplace</code>). The valid aliases are defined in an Amazon-maintained list. This is not the Amazon Web Services account alias that can be set using the IAM console. We recommend that you use the <b>Owner</b> request parameter instead of this filter.</p> </li> <li> <p> <code>owner-id</code> - The Amazon Web Services account ID of the owner. We recommend that you use the <b>Owner</b> request parameter instead of this filter.</p> </li> <li> <p> <code>platform</code> - The platform. To only list Windows-based AMIs, use <code>windows</code>.</p> </li> <li> <p> <code>product-code</code> - The product code.</p> </li> <li> <p> <code>product-code.type</code> - The type of the product code (<code>marketplace</code>).</p> </li> <li> <p> <code>ramdisk-id</code> - The RAM disk ID.</p> </li> <li> <p> <code>root-device-name</code> - The device name of the root device volume (for example, <code>/dev/sda1</code>).</p> </li> <li> <p> <code>root-device-type</code> - The type of the root device volume (<code>ebs</code> | <code>instance-store</code>).</p> </li> <li> <p> <code>state</code> - The state of the image (<code>available</code> | <code>pending</code> | <code>failed</code>).</p> </li> <li> <p> <code>state-reason-code</code> - The reason code for the state change.</p> </li> <li> <p> <code>state-reason-message</code> - The message for the state change.</p> </li> <li> <p> <code>sriov-net-support</code> - A value of <code>simple</code> indicates that enhanced networking with the Intel 82599 VF interface is enabled.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>virtualization-type</code> - The virtualization type (<code>paravirtual</code> | <code>hvm</code>).</p> </li> </ul>'
        ImageId:
          allOf:
            - $ref: '#/components/schemas/ImageIdStringList'
            - description: '<p>The image IDs.</p> <p>Default: Describes all images available to you.</p>'
        Owner:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: '<p>If <code>true</code>, all deprecated AMIs are included in the response. If <code>false</code>, no deprecated AMIs are included in the response. If no value is specified, the default value is <code>false</code>.</p> <note> <p>If you are the AMI owner, all deprecated AMIs appear in the response regardless of the value (<code>true</code> or <code>false</code>) that you set for this parameter.</p> </note>'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    ImageList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Image'
          - xml:
              name: item
    DescribeImportImageTasksRequest:
      type: object
      title: DescribeImportImageTasksRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/FilterList'
            - description: 'Filter tasks using the <code>task-state</code> filter and one of the following values: <code>active</code>, <code>completed</code>, <code>deleting</code>, or <code>deleted</code>.'
        ImportTaskId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A token that indicates the next page of results.
    ImportImageTaskList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ImportImageTask'
          - xml:
              name: item
    DescribeImportSnapshotTasksRequest:
      type: object
      title: DescribeImportSnapshotTasksRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/FilterList'
            - description: The filters.
        ImportTaskId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A token that indicates the next page of results.
    ImportSnapshotTaskList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ImportSnapshotTask'
          - xml:
              name: item
    InstanceAttributeName:
      type: string
      enum:
        - instanceType
        - kernel
        - ramdisk
        - userData
        - disableApiTermination
        - instanceInitiatedShutdownBehavior
        - rootDeviceName
        - blockDeviceMapping
        - productCodes
        - sourceDestCheck
        - groupSet
        - ebsOptimized
        - sriovNetSupport
        - enaSupport
        - enclaveOptions
    DescribeInstanceAttributeRequest:
      type: object
      required:
        - Attribute
        - InstanceId
      title: DescribeInstanceAttributeRequest
      properties:
        attribute:
          allOf:
            - $ref: '#/components/schemas/InstanceAttributeName'
            - description: '<p>The instance attribute.</p> <p>Note: The <code>enaSupport</code> attribute is not supported at this time.</p>'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        instanceId:
          allOf:
            - $ref: '#/components/schemas/InstanceId'
            - description: The ID of the instance.
    DescribeInstanceCreditSpecificationsMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    DescribeInstanceCreditSpecificationsRequest:
      type: object
      title: DescribeInstanceCreditSpecificationsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        Filter:
          allOf:
            - $ref: '#/components/schemas/FilterList'
            - description: <p>The filters.</p> <ul> <li> <p> <code>instance-id</code> - The ID of the instance.</p> </li> </ul>
        InstanceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to retrieve the next page of results.
    InstanceCreditSpecificationList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/InstanceCreditSpecification'
          - xml:
              name: item
    DescribeInstanceEventNotificationAttributesRequest:
      type: object
      title: DescribeInstanceEventNotificationAttributesRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    InstanceEventWindowIdSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/InstanceEventWindowId'
          - xml:
              name: InstanceEventWindowId
    DescribeInstanceEventWindowsRequest:
      type: object
      title: DescribeInstanceEventWindowsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        InstanceEventWindowId:
          allOf:
            - $ref: '#/components/schemas/InstanceEventWindowIdSet'
            - description: The IDs of the event windows.
        Filter:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to request the next page of results.
      description: <para>Describe instance event windows by InstanceEventWindow.</para>
    InstanceEventWindowSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/InstanceEventWindow'
          - xml:
              name: item
    DescribeInstanceStatusRequest:
      type: object
      title: DescribeInstanceStatusRequest
      properties:
        Filter:
          allOf:
            - $ref: '#/components/schemas/FilterList'
            - description: '<p>The filters.</p> <ul> <li> <p> <code>availability-zone</code> - The Availability Zone of the instance.</p> </li> <li> <p> <code>event.code</code> - The code for the scheduled event (<code>instance-reboot</code> | <code>system-reboot</code> | <code>system-maintenance</code> | <code>instance-retirement</code> | <code>instance-stop</code>).</p> </li> <li> <p> <code>event.description</code> - A description of the event.</p> </li> <li> <p> <code>event.instance-event-id</code> - The ID of the event whose date and time you are modifying.</p> </li> <li> <p> <code>event.not-after</code> - The latest end time for the scheduled event (for example, <code>2014-09-15T17:15:20.000Z</code>).</p> </li> <li> <p> <code>event.not-before</code> - The earliest start time for the scheduled event (for example, <code>2014-09-15T17:15:20.000Z</code>).</p> </li> <li> <p> <code>event.not-before-deadline</code> - The deadline for starting the event (for example, <code>2014-09-15T17:15:20.000Z</code>).</p> </li> <li> <p> <code>instance-state-code</code> - The code for the instance state, as a 16-bit unsigned integer. The high byte is used for internal purposes and should be ignored. The low byte is set based on the state represented. The valid values are 0 (pending), 16 (running), 32 (shutting-down), 48 (terminated), 64 (stopping), and 80 (stopped).</p> </li> <li> <p> <code>instance-state-name</code> - The state of the instance (<code>pending</code> | <code>running</code> | <code>shutting-down</code> | <code>terminated</code> | <code>stopping</code> | <code>stopped</code>).</p> </li> <li> <p> <code>instance-status.reachability</code> - Filters on instance status where the name is <code>reachability</code> (<code>passed</code> | <code>failed</code> | <code>initializing</code> | <code>insufficient-data</code>).</p> </li> <li> <p> <code>instance-status.status</code> - The status of the instance (<code>ok</code> | <code>impaired</code> | <code>initializing</code> | <code>insufficient-data</code> | <code>not-applicable</code>).</p> </li> <li> <p> <code>system-status.reachability</code> - Filters on system status where the name is <code>reachability</code> (<code>passed</code> | <code>failed</code> | <code>initializing</code> | <code>insufficient-data</code>).</p> </li> <li> <p> <code>system-status.status</code> - The system status of the instance (<code>ok</code> | <code>impaired</code> | <code>initializing</code> | <code>insufficient-data</code> | <code>not-applicable</code>).</p> </li> </ul>'
        InstanceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to retrieve the next page of results.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        includeAllInstances:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: '<p>When <code>true</code>, includes the health status for all instances. When <code>false</code>, includes the health status for running instances only.</p> <p>Default: <code>false</code> </p>'
    InstanceStatusList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/InstanceStatus'
          - xml:
              name: item
    LocationType:
      type: string
      enum:
        - region
        - availability-zone
        - availability-zone-id
    DescribeInstanceTypeOfferingsRequest:
      type: object
      title: DescribeInstanceTypeOfferingsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/LocationType'
            - description: The location type.
        Filter:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token to retrieve the next page of results.
    InstanceTypeOfferingsList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/InstanceTypeOffering'
          - xml:
              name: item
    RequestInstanceTypeList:
      type: array
      items:
        $ref: '#/components/schemas/InstanceType'
      minItems: 0
      maxItems: 100
    DescribeInstanceTypesRequest:
      type: object
      title: DescribeInstanceTypesRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        InstanceType:
          allOf:
            - $ref: '#/components/schemas/RequestInstanceTypeList'
            - description: 'The instance types. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance types</a> in the <i>Amazon EC2 User Guide</i>.'
        Filter:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token to retrieve the next page of results.
    InstanceTypeInfoList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/InstanceTypeInfo'
          - xml:
              name: item
    DescribeInstancesRequest:
      type: object
      title: DescribeInstancesRequest
      properties:
        Filter:
          allOf:
            - $ref: '#/components/schemas/FilterList'
            - description: '<p>The filters.</p> <ul> <li> <p> <code>affinity</code> - The affinity setting for an instance running on a Dedicated Host (<code>default</code> | <code>host</code>).</p> </li> <li> <p> <code>architecture</code> - The instance architecture (<code>i386</code> | <code>x86_64</code> | <code>arm64</code>).</p> </li> <li> <p> <code>availability-zone</code> - The Availability Zone of the instance.</p> </li> <li> <p> <code>block-device-mapping.attach-time</code> - The attach time for an EBS volume mapped to the instance, for example, <code>2010-09-15T17:15:20.000Z</code>.</p> </li> <li> <p> <code>block-device-mapping.delete-on-termination</code> - A Boolean that indicates whether the EBS volume is deleted on instance termination.</p> </li> <li> <p> <code>block-device-mapping.device-name</code> - The device name specified in the block device mapping (for example, <code>/dev/sdh</code> or <code>xvdh</code>).</p> </li> <li> <p> <code>block-device-mapping.status</code> - The status for the EBS volume (<code>attaching</code> | <code>attached</code> | <code>detaching</code> | <code>detached</code>).</p> </li> <li> <p> <code>block-device-mapping.volume-id</code> - The volume ID of the EBS volume.</p> </li> <li> <p> <code>capacity-reservation-id</code> - The ID of the Capacity Reservation into which the instance was launched.</p> </li> <li> <p> <code>client-token</code> - The idempotency token you provided when you launched the instance.</p> </li> <li> <p> <code>dns-name</code> - The public DNS name of the instance.</p> </li> <li> <p> <code>group-id</code> - The ID of the security group for the instance. EC2-Classic only.</p> </li> <li> <p> <code>group-name</code> - The name of the security group for the instance. EC2-Classic only.</p> </li> <li> <p> <code>hibernation-options.configured</code> - A Boolean that indicates whether the instance is enabled for hibernation. A value of <code>true</code> means that the instance is enabled for hibernation. </p> </li> <li> <p> <code>host-id</code> - The ID of the Dedicated Host on which the instance is running, if applicable.</p> </li> <li> <p> <code>hypervisor</code> - The hypervisor type of the instance (<code>ovm</code> | <code>xen</code>). The value <code>xen</code> is used for both Xen and Nitro hypervisors.</p> </li> <li> <p> <code>iam-instance-profile.arn</code> - The instance profile associated with the instance. Specified as an ARN.</p> </li> <li> <p> <code>image-id</code> - The ID of the image used to launch the instance.</p> </li> <li> <p> <code>instance-id</code> - The ID of the instance.</p> </li> <li> <p> <code>instance-lifecycle</code> - Indicates whether this is a Spot Instance or a Scheduled Instance (<code>spot</code> | <code>scheduled</code>).</p> </li> <li> <p> <code>instance-state-code</code> - The state of the instance, as a 16-bit unsigned integer. The high byte is used for internal purposes and should be ignored. The low byte is set based on the state represented. The valid values are: 0 (pending), 16 (running), 32 (shutting-down), 48 (terminated), 64 (stopping), and 80 (stopped).</p> </li> <li> <p> <code>instance-state-name</code> - The state of the instance (<code>pending</code> | <code>running</code> | <code>shutting-down</code> | <code>terminated</code> | <code>stopping</code> | <code>stopped</code>).</p> </li> <li> <p> <code>instance-type</code> - The type of instance (for example, <code>t2.micro</code>).</p> </li> <li> <p> <code>instance.group-id</code> - The ID of the security group for the instance. </p> </li> <li> <p> <code>instance.group-name</code> - The name of the security group for the instance. </p> </li> <li> <p> <code>ip-address</code> - The public IPv4 address of the instance.</p> </li> <li> <p> <code>kernel-id</code> - The kernel ID.</p> </li> <li> <p> <code>key-name</code> - The name of the key pair used when the instance was launched.</p> </li> <li> <p> <code>launch-index</code> - When launching multiple instances, this is the index for the instance in the launch group (for example, 0, 1, 2, and so on). </p> </li> <li> <p> <code>launch-time</code> - The time when the instance was launched, in the ISO 8601 format in the UTC time zone (YYYY-MM-DDThh:mm:ss.sssZ), for example, <code>2021-09-29T11:04:43.305Z</code>. You can use a wildcard (<code>*</code>), for example, <code>2021-09-29T*</code>, which matches an entire day.</p> </li> <li> <p> <code>metadata-options.http-tokens</code> - The metadata request authorization state (<code>optional</code> | <code>required</code>)</p> </li> <li> <p> <code>metadata-options.http-put-response-hop-limit</code> - The http metadata request put response hop limit (integer, possible values <code>1</code> to <code>64</code>)</p> </li> <li> <p> <code>metadata-options.http-endpoint</code> - Enable or disable metadata access on http endpoint (<code>enabled</code> | <code>disabled</code>)</p> </li> <li> <p> <code>monitoring-state</code> - Indicates whether detailed monitoring is enabled (<code>disabled</code> | <code>enabled</code>).</p> </li> <li> <p> <code>network-interface.addresses.private-ip-address</code> - The private IPv4 address associated with the network interface.</p> </li> <li> <p> <code>network-interface.addresses.primary</code> - Specifies whether the IPv4 address of the network interface is the primary private IPv4 address.</p> </li> <li> <p> <code>network-interface.addresses.association.public-ip</code> - The ID of the association of an Elastic IP address (IPv4) with a network interface.</p> </li> <li> <p> <code>network-interface.addresses.association.ip-owner-id</code> - The owner ID of the private IPv4 address associated with the network interface.</p> </li> <li> <p> <code>network-interface.association.public-ip</code> - The address of the Elastic IP address (IPv4) bound to the network interface.</p> </li> <li> <p> <code>network-interface.association.ip-owner-id</code> - The owner of the Elastic IP address (IPv4) associated with the network interface.</p> </li> <li> <p> <code>network-interface.association.allocation-id</code> - The allocation ID returned when you allocated the Elastic IP address (IPv4) for your network interface.</p> </li> <li> <p> <code>network-interface.association.association-id</code> - The association ID returned when the network interface was associated with an IPv4 address.</p> </li> <li> <p> <code>network-interface.attachment.attachment-id</code> - The ID of the interface attachment.</p> </li> <li> <p> <code>network-interface.attachment.instance-id</code> - The ID of the instance to which the network interface is attached.</p> </li> <li> <p> <code>network-interface.attachment.instance-owner-id</code> - The owner ID of the instance to which the network interface is attached.</p> </li> <li> <p> <code>network-interface.attachment.device-index</code> - The device index to which the network interface is attached.</p> </li> <li> <p> <code>network-interface.attachment.status</code> - The status of the attachment (<code>attaching</code> | <code>attached</code> | <code>detaching</code> | <code>detached</code>).</p> </li> <li> <p> <code>network-interface.attachment.attach-time</code> - The time that the network interface was attached to an instance.</p> </li> <li> <p> <code>network-interface.attachment.delete-on-termination</code> - Specifies whether the attachment is deleted when an instance is terminated.</p> </li> <li> <p> <code>network-interface.availability-zone</code> - The Availability Zone for the network interface.</p> </li> <li> <p> <code>network-interface.description</code> - The description of the network interface.</p> </li> <li> <p> <code>network-interface.group-id</code> - The ID of a security group associated with the network interface.</p> </li> <li> <p> <code>network-interface.group-name</code> - The name of a security group associated with the network interface.</p> </li> <li> <p> <code>network-interface.ipv6-addresses.ipv6-address</code> - The IPv6 address associated with the network interface.</p> </li> <li> <p> <code>network-interface.mac-address</code> - The MAC address of the network interface.</p> </li> <li> <p> <code>network-interface.network-interface-id</code> - The ID of the network interface.</p> </li> <li> <p> <code>network-interface.owner-id</code> - The ID of the owner of the network interface.</p> </li> <li> <p> <code>network-interface.private-dns-name</code> - The private DNS name of the network interface.</p> </li> <li> <p> <code>network-interface.requester-id</code> - The requester ID for the network interface.</p> </li> <li> <p> <code>network-interface.requester-managed</code> - Indicates whether the network interface is being managed by Amazon Web Services.</p> </li> <li> <p> <code>network-interface.status</code> - The status of the network interface (<code>available</code>) | <code>in-use</code>).</p> </li> <li> <p> <code>network-interface.source-dest-check</code> - Whether the network interface performs source/destination checking. A value of <code>true</code> means that checking is enabled, and <code>false</code> means that checking is disabled. The value must be <code>false</code> for the network interface to perform network address translation (NAT) in your VPC.</p> </li> <li> <p> <code>network-interface.subnet-id</code> - The ID of the subnet for the network interface.</p> </li> <li> <p> <code>network-interface.vpc-id</code> - The ID of the VPC for the network interface.</p> </li> <li> <p> <code>outpost-arn</code> - The Amazon Resource Name (ARN) of the Outpost.</p> </li> <li> <p> <code>owner-id</code> - The Amazon Web Services account ID of the instance owner.</p> </li> <li> <p> <code>placement-group-name</code> - The name of the placement group for the instance.</p> </li> <li> <p> <code>placement-partition-number</code> - The partition in which the instance is located.</p> </li> <li> <p> <code>platform</code> - The platform. To list only Windows instances, use <code>windows</code>.</p> </li> <li> <p> <code>private-dns-name</code> - The private IPv4 DNS name of the instance.</p> </li> <li> <p> <code>private-ip-address</code> - The private IPv4 address of the instance.</p> </li> <li> <p> <code>product-code</code> - The product code associated with the AMI used to launch the instance.</p> </li> <li> <p> <code>product-code.type</code> - The type of product code (<code>devpay</code> | <code>marketplace</code>).</p> </li> <li> <p> <code>ramdisk-id</code> - The RAM disk ID.</p> </li> <li> <p> <code>reason</code> - The reason for the current state of the instance (for example, shows "User Initiated [date]" when you stop or terminate the instance). Similar to the state-reason-code filter.</p> </li> <li> <p> <code>requester-id</code> - The ID of the entity that launched the instance on your behalf (for example, Amazon Web Services Management Console, Auto Scaling, and so on).</p> </li> <li> <p> <code>reservation-id</code> - The ID of the instance''s reservation. A reservation ID is created any time you launch an instance. A reservation ID has a one-to-one relationship with an instance launch request, but can be associated with more than one instance if you launch multiple instances using the same launch request. For example, if you launch one instance, you get one reservation ID. If you launch ten instances using the same launch request, you also get one reservation ID.</p> </li> <li> <p> <code>root-device-name</code> - The device name of the root device volume (for example, <code>/dev/sda1</code>).</p> </li> <li> <p> <code>root-device-type</code> - The type of the root device volume (<code>ebs</code> | <code>instance-store</code>).</p> </li> <li> <p> <code>source-dest-check</code> - Indicates whether the instance performs source/destination checking. A value of <code>true</code> means that checking is enabled, and <code>false</code> means that checking is disabled. The value must be <code>false</code> for the instance to perform network address translation (NAT) in your VPC. </p> </li> <li> <p> <code>spot-instance-request-id</code> - The ID of the Spot Instance request.</p> </li> <li> <p> <code>state-reason-code</code> - The reason code for the state change.</p> </li> <li> <p> <code>state-reason-message</code> - A message that describes the state change.</p> </li> <li> <p> <code>subnet-id</code> - The ID of the subnet for the instance.</p> </li> <li> <p> <code>tag:&lt;key&gt;</code> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources that have a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>tenancy</code> - The tenancy of an instance (<code>dedicated</code> | <code>default</code> | <code>host</code>).</p> </li> <li> <p> <code>virtualization-type</code> - The virtualization type of the instance (<code>paravirtual</code> | <code>hvm</code>).</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC that the instance is running in.</p> </li> </ul>'
        InstanceId:
          allOf:
            - $ref: '#/components/schemas/InstanceIdStringList'
            - description: '<p>The instance IDs.</p> <p>Default: Describes all your instances.</p>'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        maxResults:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value. This value can be between 5 and 1000. You cannot specify this parameter and the instance IDs parameter in the same call.'
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to request the next page of results.
    ReservationList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Reservation'
          - xml:
              name: item
    DescribeInternetGatewaysMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    DescribeInternetGatewaysRequest:
      type: object
      title: DescribeInternetGatewaysRequest
      properties:
        Filter:
          allOf:
            - $ref: '#/components/schemas/FilterList'
            - description: '<p>One or more filters.</p> <ul> <li> <p> <code>attachment.state</code> - The current state of the attachment between the gateway and the VPC (<code>available</code>). Present only if a VPC is attached.</p> </li> <li> <p> <code>attachment.vpc-id</code> - The ID of an attached VPC.</p> </li> <li> <p> <code>internet-gateway-id</code> - The ID of the Internet gateway.</p> </li> <li> <p> <code>owner-id</code> - The ID of the Amazon Web Services account that owns the internet gateway.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> </ul>'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        internetGatewayId:
          allOf:
            - $ref: '#/components/schemas/DescribeInternetGatewaysMaxResults'
            - description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
    InternetGatewayList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/InternetGateway'
          - xml:
              name: item
    DescribeIpamPoolsRequest:
      type: object
      title: DescribeIpamPoolsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        Filter:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token for the next page of results.
        IpamPoolId:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: The IDs of the IPAM pools you would like information on.
    IpamPoolSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/IpamPool'
          - xml:
              name: item
    DescribeIpamScopesRequest:
      type: object
      title: DescribeIpamScopesRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        Filter:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token for the next page of results.
        IpamScopeId:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: The IDs of the scopes you want information on.
    IpamScopeSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/IpamScope'
          - xml:
              name: item
    DescribeIpamsRequest:
      type: object
      title: DescribeIpamsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        Filter:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token for the next page of results.
        IpamId:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: The IDs of the IPAMs you want information on.
    IpamSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Ipam'
          - xml:
              name: item
    DescribeIpv6PoolsRequest:
      type: object
      title: DescribeIpv6PoolsRequest
      properties:
        PoolId:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        Filter:
          allOf:
            - $ref: '#/components/schemas/FilterList'
            - description: '<p>One or more filters.</p> <ul> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> </ul>'
    Ipv6PoolSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Ipv6Pool'
          - xml:
              name: item
    KeyNameStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/KeyPairName'
          - xml:
              name: KeyName
    KeyPairIdStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/KeyPairId'
          - xml:
              name: KeyPairId
    DescribeKeyPairsRequest:
      type: object
      title: DescribeKeyPairsRequest
      properties:
        Filter:
          allOf:
            - $ref: '#/components/schemas/FilterList'
            - description: '<p>The filters.</p> <ul> <li> <p> <code>key-pair-id</code> - The ID of the key pair.</p> </li> <li> <p> <code>fingerprint</code> - The fingerprint of the key pair.</p> </li> <li> <p> <code>key-name</code> - The name of the key pair.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> </ul>'
        KeyName:
          allOf:
            - $ref: '#/components/schemas/KeyNameStringList'
            - description: '<p>The key pair names.</p> <p>Default: Describes all of your key pairs.</p>'
        KeyPairId:
          allOf:
            - $ref: '#/components/schemas/KeyPairIdStringList'
            - description: The IDs of the key pairs.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: '<p>If <code>true</code>, the public key material is included in the response.</p> <p>Default: <code>false</code> </p>'
    KeyPairList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/KeyPairInfo'
          - xml:
              name: item
    DescribeLaunchTemplateVersionsRequest:
      type: object
      title: DescribeLaunchTemplateVersionsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateName'
            - description: 'The name of the launch template. To describe one or more versions of a specified launch template, you must specify either the launch template ID or the launch template name in the request. To describe all the latest or default launch template versions in your account, you must omit this parameter.'
        LaunchTemplateVersion:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value. This value can be between 1 and 200.'
        Filter:
          allOf:
            - $ref: '#/components/schemas/FilterList'
            - description: <p>One or more filters.</p> <ul> <li> <p> <code>create-time</code> - The time the launch template version was created.</p> </li> <li> <p> <code>ebs-optimized</code> - A boolean that indicates whether the instance is optimized for Amazon EBS I/O.</p> </li> <li> <p> <code>http-endpoint</code> - Indicates whether the HTTP metadata endpoint on your instances is enabled (<code>enabled</code> | <code>disabled</code>).</p> </li> <li> <p> <code>http-protocol-ipv4</code> - Indicates whether the IPv4 endpoint for the instance metadata service is enabled (<code>enabled</code> | <code>disabled</code>).</p> </li> <li> <p> <code>host-resource-group-arn</code> - The ARN of the host resource group in which to launch the instances.</p> </li> <li> <p> <code>http-tokens</code> - The state of token usage for your instance metadata requests (<code>optional</code> | <code>required</code>).</p> </li> <li> <p> <code>iam-instance-profile</code> - The ARN of the IAM instance profile.</p> </li> <li> <p> <code>image-id</code> - The ID of the AMI.</p> </li> <li> <p> <code>instance-type</code> - The instance type.</p> </li> <li> <p> <code>is-default-version</code> - A boolean that indicates whether the launch template version is the default version.</p> </li> <li> <p> <code>kernel-id</code> - The kernel ID.</p> </li> <li> <p> <code>license-configuration-arn</code> - The ARN of the license configuration.</p> </li> <li> <p> <code>network-card-index</code> - The index of the network card.</p> </li> <li> <p> <code>ram-disk-id</code> - The RAM disk ID.</p> </li> </ul>
    LaunchTemplateVersionSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/LaunchTemplateVersion'
          - xml:
              name: item
    DescribeLaunchTemplatesMaxResults:
      type: integer
      minimum: 1
      maximum: 200
    LaunchTemplateIdStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/LaunchTemplateId'
          - xml:
              name: item
    LaunchTemplateNameStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/LaunchTemplateName'
          - xml:
              name: item
    DescribeLaunchTemplatesRequest:
      type: object
      title: DescribeLaunchTemplatesRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        LaunchTemplateId:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateIdStringList'
            - description: One or more launch template IDs.
        LaunchTemplateName:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateNameStringList'
            - description: One or more launch template names.
        Filter:
          allOf:
            - $ref: '#/components/schemas/DescribeLaunchTemplatesMaxResults'
            - description: 'The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value. This value can be between 1 and 200.'
    LaunchTemplateSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/LaunchTemplate'
          - xml:
              name: item
    LocalGatewayRouteTableVirtualInterfaceGroupAssociationIdSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/LocalGatewayRouteTableVirtualInterfaceGroupAssociationId'
          - xml:
              name: item
    DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsRequest:
      type: object
      title: DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsRequest
      properties:
        LocalGatewayRouteTableVirtualInterfaceGroupAssociationId:
          allOf:
            - $ref: '#/components/schemas/LocalGatewayRouteTableVirtualInterfaceGroupAssociationIdSet'
            - description: The IDs of the associations.
        Filter:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    LocalGatewayRouteTableVirtualInterfaceGroupAssociationSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/LocalGatewayRouteTableVirtualInterfaceGroupAssociation'
          - xml:
              name: item
    LocalGatewayRouteTableVpcAssociationIdSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/LocalGatewayRouteTableVpcAssociationId'
          - xml:
              name: item
    DescribeLocalGatewayRouteTableVpcAssociationsRequest:
      type: object
      title: DescribeLocalGatewayRouteTableVpcAssociationsRequest
      properties:
        LocalGatewayRouteTableVpcAssociationId:
          allOf:
            - $ref: '#/components/schemas/LocalGatewayRouteTableVpcAssociationIdSet'
            - description: The IDs of the associations.
        Filter:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    LocalGatewayRouteTableVpcAssociationSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/LocalGatewayRouteTableVpcAssociation'
          - xml:
              name: item
    LocalGatewayRouteTableIdSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/LocalGatewayRoutetableId'
          - xml:
              name: item
    DescribeLocalGatewayRouteTablesRequest:
      type: object
      title: DescribeLocalGatewayRouteTablesRequest
      properties:
        LocalGatewayRouteTableId:
          allOf:
            - $ref: '#/components/schemas/LocalGatewayRouteTableIdSet'
            - description: The IDs of the local gateway route tables.
        Filter:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    LocalGatewayRouteTableSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/LocalGatewayRouteTable'
          - xml:
              name: item
    LocalGatewayVirtualInterfaceGroupIdSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/LocalGatewayVirtualInterfaceGroupId'
          - xml:
              name: item
    DescribeLocalGatewayVirtualInterfaceGroupsRequest:
      type: object
      title: DescribeLocalGatewayVirtualInterfaceGroupsRequest
      properties:
        LocalGatewayVirtualInterfaceGroupId:
          allOf:
            - $ref: '#/components/schemas/LocalGatewayVirtualInterfaceGroupIdSet'
            - description: The IDs of the virtual interface groups.
        Filter:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    LocalGatewayVirtualInterfaceGroupSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/LocalGatewayVirtualInterfaceGroup'
          - xml:
              name: item
    LocalGatewayVirtualInterfaceIdSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/LocalGatewayVirtualInterfaceId'
          - xml:
              name: item
    DescribeLocalGatewayVirtualInterfacesRequest:
      type: object
      title: DescribeLocalGatewayVirtualInterfacesRequest
      properties:
        LocalGatewayVirtualInterfaceId:
          allOf:
            - $ref: '#/components/schemas/LocalGatewayVirtualInterfaceIdSet'
            - description: The IDs of the virtual interfaces.
        Filter:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    LocalGatewayVirtualInterfaceSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/LocalGatewayVirtualInterface'
          - xml:
              name: item
    LocalGatewayIdSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/LocalGatewayId'
          - xml:
              name: item
    DescribeLocalGatewaysRequest:
      type: object
      title: DescribeLocalGatewaysRequest
      properties:
        LocalGatewayId:
          allOf:
            - $ref: '#/components/schemas/LocalGatewayIdSet'
            - description: The IDs of the local gateways.
        Filter:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    LocalGatewaySet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/LocalGateway'
          - xml:
              name: item
    DescribeManagedPrefixListsRequest:
      type: object
      title: DescribeManagedPrefixListsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        Filter:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token for the next page of results.
        PrefixListId:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: One or more prefix list IDs.
    ManagedPrefixListSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ManagedPrefixList'
          - xml:
              name: item
    DescribeMovingAddressesMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    DescribeMovingAddressesRequest:
      type: object
      title: DescribeMovingAddressesRequest
      properties:
        filter:
          allOf:
            - $ref: '#/components/schemas/FilterList'
            - description: <p>One or more filters.</p> <ul> <li> <p> <code>moving-status</code> - The status of the Elastic IP address (<code>MovingToVpc</code> | <code>RestoringToClassic</code>).</p> </li> </ul>
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        maxResults:
          allOf:
            - $ref: '#/components/schemas/DescribeMovingAddressesMaxResults'
            - description: '<p>The maximum number of results to return for the request in a single page. The remaining results of the initial request can be seen by sending another request with the returned <code>NextToken</code> value. This value can be between 5 and 1000; if <code>MaxResults</code> is given a value outside of this range, an error is returned.</p> <p>Default: If no value is provided, the default is 1000.</p>'
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token for the next page of results.
        publicIp:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: One or more Elastic IP addresses.
    MovingAddressStatusSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/MovingAddressStatus'
          - xml:
              name: item
    DescribeNatGatewaysMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    DescribeNatGatewaysRequest:
      type: object
      title: DescribeNatGatewaysRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/DescribeNatGatewaysMaxResults'
            - description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
        NatGatewayId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token for the next page of results.
    NatGatewayList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/NatGateway'
          - xml:
              name: item
    DescribeNetworkAclsMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    DescribeNetworkAclsRequest:
      type: object
      title: DescribeNetworkAclsRequest
      properties:
        Filter:
          allOf:
            - $ref: '#/components/schemas/FilterList'
            - description: '<p>One or more filters.</p> <ul> <li> <p> <code>association.association-id</code> - The ID of an association ID for the ACL.</p> </li> <li> <p> <code>association.network-acl-id</code> - The ID of the network ACL involved in the association.</p> </li> <li> <p> <code>association.subnet-id</code> - The ID of the subnet involved in the association.</p> </li> <li> <p> <code>default</code> - Indicates whether the ACL is the default network ACL for the VPC.</p> </li> <li> <p> <code>entry.cidr</code> - The IPv4 CIDR range specified in the entry.</p> </li> <li> <p> <code>entry.icmp.code</code> - The ICMP code specified in the entry, if any.</p> </li> <li> <p> <code>entry.icmp.type</code> - The ICMP type specified in the entry, if any.</p> </li> <li> <p> <code>entry.ipv6-cidr</code> - The IPv6 CIDR range specified in the entry.</p> </li> <li> <p> <code>entry.port-range.from</code> - The start of the port range specified in the entry. </p> </li> <li> <p> <code>entry.port-range.to</code> - The end of the port range specified in the entry. </p> </li> <li> <p> <code>entry.protocol</code> - The protocol specified in the entry (<code>tcp</code> | <code>udp</code> | <code>icmp</code> or a protocol number).</p> </li> <li> <p> <code>entry.rule-action</code> - Allows or denies the matching traffic (<code>allow</code> | <code>deny</code>).</p> </li> <li> <p> <code>entry.rule-number</code> - The number of an entry (in other words, rule) in the set of ACL entries.</p> </li> <li> <p> <code>network-acl-id</code> - The ID of the network ACL.</p> </li> <li> <p> <code>owner-id</code> - The ID of the Amazon Web Services account that owns the network ACL.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC for the network ACL.</p> </li> </ul>'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        NetworkAclId:
          allOf:
            - $ref: '#/components/schemas/DescribeNetworkAclsMaxResults'
            - description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
    NetworkAclList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/NetworkAcl'
          - xml:
              name: item
    DescribeNetworkInsightsAccessScopeAnalysesRequest:
      type: object
      title: DescribeNetworkInsightsAccessScopeAnalysesRequest
      properties:
        NetworkInsightsAccessScopeAnalysisId:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: Filters the results based on the start time. The analysis must have started on or before this time.
        Filter:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token for the next page of results.
    NetworkInsightsAccessScopeAnalysisList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/NetworkInsightsAccessScopeAnalysis'
          - xml:
              name: item
    NetworkInsightsAccessScopeIdList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/NetworkInsightsAccessScopeId'
          - xml:
              name: item
    DescribeNetworkInsightsAccessScopesRequest:
      type: object
      title: DescribeNetworkInsightsAccessScopesRequest
      properties:
        NetworkInsightsAccessScopeId:
          allOf:
            - $ref: '#/components/schemas/NetworkInsightsAccessScopeIdList'
            - description: The IDs of the Network Access Scopes.
        Filter:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token for the next page of results.
    NetworkInsightsAccessScopeList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/NetworkInsightsAccessScope'
          - xml:
              name: item
    DescribeNetworkInsightsAnalysesRequest:
      type: object
      title: DescribeNetworkInsightsAnalysesRequest
      properties:
        NetworkInsightsAnalysisId:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: The time when the network insights analyses ended.
        Filter:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token for the next page of results.
    NetworkInsightsAnalysisList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/NetworkInsightsAnalysis'
          - xml:
              name: item
    NetworkInsightsPathIdList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/NetworkInsightsPathId'
          - xml:
              name: item
    DescribeNetworkInsightsPathsRequest:
      type: object
      title: DescribeNetworkInsightsPathsRequest
      properties:
        NetworkInsightsPathId:
          allOf:
            - $ref: '#/components/schemas/NetworkInsightsPathIdList'
            - description: The IDs of the paths.
        Filter:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token for the next page of results.
    NetworkInsightsPathList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/NetworkInsightsPath'
          - xml:
              name: item
    NetworkInterfaceAttribute:
      type: string
      enum:
        - description
        - groupSet
        - sourceDestCheck
        - attachment
    DescribeNetworkInterfaceAttributeRequest:
      type: object
      required:
        - NetworkInterfaceId
      title: DescribeNetworkInterfaceAttributeRequest
      properties:
        attribute:
          allOf:
            - $ref: '#/components/schemas/NetworkInterfaceAttribute'
            - description: The attribute of the network interface. This parameter is required.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        networkInterfaceId:
          allOf:
            - $ref: '#/components/schemas/NetworkInterfaceId'
            - description: The ID of the network interface.
      description: Contains the parameters for DescribeNetworkInterfaceAttribute.
    NetworkInterfaceAttachment:
      type: object
      properties:
        attachTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The timestamp indicating when the attachment initiated.
        attachmentId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the network interface attachment.
        deleteOnTermination:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the network interface is deleted when the instance is terminated.
        deviceIndex:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The device index of the network interface attachment on the instance.
        networkCardIndex:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The index of the network card.
        instanceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the instance.
        instanceOwnerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Web Services account ID of the owner of the instance.
        status:
          allOf:
            - $ref: '#/components/schemas/AttachmentStatus'
            - description: The attachment state.
      description: Describes a network interface attachment.
    DescribeNetworkInterfacePermissionsMaxResults:
      type: integer
      minimum: 5
      maximum: 255
    NetworkInterfacePermissionIdList:
      type: array
      items:
        $ref: '#/components/schemas/NetworkInterfacePermissionId'
    DescribeNetworkInterfacePermissionsRequest:
      type: object
      title: DescribeNetworkInterfacePermissionsRequest
      properties:
        NetworkInterfacePermissionId:
          allOf:
            - $ref: '#/components/schemas/NetworkInterfacePermissionIdList'
            - description: One or more network interface permission IDs.
        Filter:
          allOf:
            - $ref: '#/components/schemas/DescribeNetworkInterfacePermissionsMaxResults'
            - description: 'The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value. If this parameter is not specified, up to 50 results are returned by default.'
      description: Contains the parameters for DescribeNetworkInterfacePermissions.
    NetworkInterfacePermissionList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/NetworkInterfacePermission'
          - xml:
              name: item
    DescribeNetworkInterfacesMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    DescribeNetworkInterfacesRequest:
      type: object
      title: DescribeNetworkInterfacesRequest
      properties:
        filter:
          allOf:
            - $ref: '#/components/schemas/FilterList'
            - description: '<p>One or more filters.</p> <ul> <li> <p> <code>addresses.private-ip-address</code> - The private IPv4 addresses associated with the network interface.</p> </li> <li> <p> <code>addresses.primary</code> - Whether the private IPv4 address is the primary IP address associated with the network interface. </p> </li> <li> <p> <code>addresses.association.public-ip</code> - The association ID returned when the network interface was associated with the Elastic IP address (IPv4).</p> </li> <li> <p> <code>addresses.association.owner-id</code> - The owner ID of the addresses associated with the network interface.</p> </li> <li> <p> <code>association.association-id</code> - The association ID returned when the network interface was associated with an IPv4 address.</p> </li> <li> <p> <code>association.allocation-id</code> - The allocation ID returned when you allocated the Elastic IP address (IPv4) for your network interface.</p> </li> <li> <p> <code>association.ip-owner-id</code> - The owner of the Elastic IP address (IPv4) associated with the network interface.</p> </li> <li> <p> <code>association.public-ip</code> - The address of the Elastic IP address (IPv4) bound to the network interface.</p> </li> <li> <p> <code>association.public-dns-name</code> - The public DNS name for the network interface (IPv4).</p> </li> <li> <p> <code>attachment.attachment-id</code> - The ID of the interface attachment.</p> </li> <li> <p> <code>attachment.attach-time</code> - The time that the network interface was attached to an instance.</p> </li> <li> <p> <code>attachment.delete-on-termination</code> - Indicates whether the attachment is deleted when an instance is terminated.</p> </li> <li> <p> <code>attachment.device-index</code> - The device index to which the network interface is attached.</p> </li> <li> <p> <code>attachment.instance-id</code> - The ID of the instance to which the network interface is attached.</p> </li> <li> <p> <code>attachment.instance-owner-id</code> - The owner ID of the instance to which the network interface is attached.</p> </li> <li> <p> <code>attachment.status</code> - The status of the attachment (<code>attaching</code> | <code>attached</code> | <code>detaching</code> | <code>detached</code>).</p> </li> <li> <p> <code>availability-zone</code> - The Availability Zone of the network interface.</p> </li> <li> <p> <code>description</code> - The description of the network interface.</p> </li> <li> <p> <code>group-id</code> - The ID of a security group associated with the network interface.</p> </li> <li> <p> <code>group-name</code> - The name of a security group associated with the network interface.</p> </li> <li> <p> <code>ipv6-addresses.ipv6-address</code> - An IPv6 address associated with the network interface.</p> </li> <li> <p> <code>interface-type</code> - The type of network interface (<code>api_gateway_managed</code> | <code>aws_codestar_connections_managed</code> | <code>branch</code> | <code>efa</code> | <code>gateway_load_balancer</code> | <code>gateway_load_balancer_endpoint</code> | <code>global_accelerator_managed</code> | <code>interface</code> | <code>iot_rules_managed</code> | <code>lambda</code> | <code>load_balancer</code> | <code>nat_gateway</code> | <code>network_load_balancer</code> | <code>quicksight</code> | <code>transit_gateway</code> | <code>trunk</code> | <code>vpc_endpoint</code>).</p> </li> <li> <p> <code>mac-address</code> - The MAC address of the network interface.</p> </li> <li> <p> <code>network-interface-id</code> - The ID of the network interface.</p> </li> <li> <p> <code>owner-id</code> - The Amazon Web Services account ID of the network interface owner.</p> </li> <li> <p> <code>private-ip-address</code> - The private IPv4 address or addresses of the network interface.</p> </li> <li> <p> <code>private-dns-name</code> - The private DNS name of the network interface (IPv4).</p> </li> <li> <p> <code>requester-id</code> - The alias or Amazon Web Services account ID of the principal or service that created the network interface.</p> </li> <li> <p> <code>requester-managed</code> - Indicates whether the network interface is being managed by an Amazon Web Service (for example, Amazon Web Services Management Console, Auto Scaling, and so on).</p> </li> <li> <p> <code>source-dest-check</code> - Indicates whether the network interface performs source/destination checking. A value of <code>true</code> means checking is enabled, and <code>false</code> means checking is disabled. The value must be <code>false</code> for the network interface to perform network address translation (NAT) in your VPC. </p> </li> <li> <p> <code>status</code> - The status of the network interface. If the network interface is not attached to an instance, the status is <code>available</code>; if a network interface is attached to an instance the status is <code>in-use</code>.</p> </li> <li> <p> <code>subnet-id</code> - The ID of the subnet for the network interface.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC for the network interface.</p> </li> </ul>'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        NetworkInterfaceId:
          allOf:
            - $ref: '#/components/schemas/DescribeNetworkInterfacesMaxResults'
            - description: The maximum number of items to return for this request. The request returns a token that you can specify in a subsequent call to get the next set of results. You cannot specify this parameter and the network interface IDs parameter in the same request.
      description: Contains the parameters for DescribeNetworkInterfaces.
    NetworkInterfaceList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/NetworkInterface'
          - xml:
              name: item
    PlacementGroupStringList:
      type: array
      items:
        $ref: '#/components/schemas/PlacementGroupName'
    PlacementGroupIdStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/PlacementGroupId'
          - xml:
              name: GroupId
    DescribePlacementGroupsRequest:
      type: object
      title: DescribePlacementGroupsRequest
      properties:
        Filter:
          allOf:
            - $ref: '#/components/schemas/FilterList'
            - description: '<p>The filters.</p> <ul> <li> <p> <code>group-name</code> - The name of the placement group.</p> </li> <li> <p> <code>group-arn</code> - The Amazon Resource Name (ARN) of the placement group.</p> </li> <li> <p> <code>state</code> - The state of the placement group (<code>pending</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>).</p> </li> <li> <p> <code>strategy</code> - The strategy of the placement group (<code>cluster</code> | <code>spread</code> | <code>partition</code>).</p> </li> <li> <p> <code>tag:&lt;key&gt;</code> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources that have a tag with a specific key, regardless of the tag value.</p> </li> </ul>'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        groupName:
          allOf:
            - $ref: '#/components/schemas/PlacementGroupStringList'
            - description: '<p>The names of the placement groups.</p> <p>Default: Describes all your placement groups, or only those otherwise specified.</p>'
        GroupId:
          allOf:
            - $ref: '#/components/schemas/PlacementGroupIdStringList'
            - description: The IDs of the placement groups.
    PlacementGroupList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/PlacementGroup'
          - xml:
              name: item
    PrefixListResourceIdStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/PrefixListResourceId'
          - xml:
              name: item
    DescribePrefixListsRequest:
      type: object
      title: DescribePrefixListsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        Filter:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token for the next page of results.
        PrefixListId:
          allOf:
            - $ref: '#/components/schemas/PrefixListResourceIdStringList'
            - description: One or more prefix list IDs.
    PrefixListSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/PrefixList'
          - xml:
              name: item
    DescribePrincipalIdFormatMaxResults:
      type: integer
      minimum: 1
      maximum: 1000
    DescribePrincipalIdFormatRequest:
      type: object
      title: DescribePrincipalIdFormatRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        Resource:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to request the next page of results.
    PrincipalIdFormatList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/PrincipalIdFormat'
          - xml:
              name: item
    PoolMaxResults:
      type: integer
      minimum: 1
      maximum: 10
    DescribePublicIpv4PoolsRequest:
      type: object
      title: DescribePublicIpv4PoolsRequest
      properties:
        PoolId:
          allOf:
            - $ref: '#/components/schemas/PoolMaxResults'
            - description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
        Filter:
          allOf:
            - $ref: '#/components/schemas/FilterList'
            - description: '<p>One or more filters.</p> <ul> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> </ul>'
    PublicIpv4PoolSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/PublicIpv4Pool'
          - xml:
              name: item
    RegionNameStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: RegionName
    DescribeRegionsRequest:
      type: object
      title: DescribeRegionsRequest
      properties:
        Filter:
          allOf:
            - $ref: '#/components/schemas/FilterList'
            - description: '<p>The filters.</p> <ul> <li> <p> <code>endpoint</code> - The endpoint of the Region (for example, <code>ec2.us-east-1.amazonaws.com</code>).</p> </li> <li> <p> <code>opt-in-status</code> - The opt-in status of the Region (<code>opt-in-not-required</code> | <code>opted-in</code> | <code>not-opted-in</code>).</p> </li> <li> <p> <code>region-name</code> - The name of the Region (for example, <code>us-east-1</code>).</p> </li> </ul>'
        RegionName:
          allOf:
            - $ref: '#/components/schemas/RegionNameStringList'
            - description: 'The names of the Regions. You can specify any Regions, whether they are enabled and disabled for your account.'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Indicates whether to display all Regions, including Regions that are disabled for your account.'
    RegionList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Region'
          - xml:
              name: item
    DescribeReplaceRootVolumeTasksMaxResults:
      type: integer
      minimum: 1
      maximum: 50
    ReplaceRootVolumeTaskIds:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ReplaceRootVolumeTaskId'
          - xml:
              name: ReplaceRootVolumeTaskId
    DescribeReplaceRootVolumeTasksRequest:
      type: object
      title: DescribeReplaceRootVolumeTasksRequest
      properties:
        ReplaceRootVolumeTaskId:
          allOf:
            - $ref: '#/components/schemas/ReplaceRootVolumeTaskIds'
            - description: The ID of the root volume replacement task to view.
        Filter:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    ReplaceRootVolumeTasks:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ReplaceRootVolumeTask'
          - xml:
              name: item
    DescribeReservedInstancesListingsRequest:
      type: object
      title: DescribeReservedInstancesListingsRequest
      properties:
        Filter:
          allOf:
            - $ref: '#/components/schemas/FilterList'
            - description: <p>One or more filters.</p> <ul> <li> <p> <code>reserved-instances-id</code> - The ID of the Reserved Instances.</p> </li> <li> <p> <code>reserved-instances-listing-id</code> - The ID of the Reserved Instances listing.</p> </li> <li> <p> <code>status</code> - The status of the Reserved Instance listing (<code>pending</code> | <code>active</code> | <code>cancelled</code> | <code>closed</code>).</p> </li> <li> <p> <code>status-message</code> - The reason for the status.</p> </li> </ul>
        reservedInstancesId:
          allOf:
            - $ref: '#/components/schemas/ReservationId'
            - description: One or more Reserved Instance IDs.
        reservedInstancesListingId:
          allOf:
            - $ref: '#/components/schemas/ReservedInstancesListingId'
            - description: One or more Reserved Instance listing IDs.
      description: Contains the parameters for DescribeReservedInstancesListings.
    ReservedInstancesModificationIdStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ReservedInstancesModificationId'
          - xml:
              name: ReservedInstancesModificationId
    DescribeReservedInstancesModificationsRequest:
      type: object
      title: DescribeReservedInstancesModificationsRequest
      properties:
        Filter:
          allOf:
            - $ref: '#/components/schemas/FilterList'
            - description: <p>One or more filters.</p> <ul> <li> <p> <code>client-token</code> - The idempotency token for the modification request.</p> </li> <li> <p> <code>create-date</code> - The time when the modification request was created.</p> </li> <li> <p> <code>effective-date</code> - The time when the modification becomes effective.</p> </li> <li> <p> <code>modification-result.reserved-instances-id</code> - The ID for the Reserved Instances created as part of the modification request. This ID is only available when the status of the modification is <code>fulfilled</code>.</p> </li> <li> <p> <code>modification-result.target-configuration.availability-zone</code> - The Availability Zone for the new Reserved Instances.</p> </li> <li> <p> <code>modification-result.target-configuration.instance-count </code> - The number of new Reserved Instances.</p> </li> <li> <p> <code>modification-result.target-configuration.instance-type</code> - The instance type of the new Reserved Instances.</p> </li> <li> <p> <code>modification-result.target-configuration.platform</code> - The network platform of the new Reserved Instances (<code>EC2-Classic</code> | <code>EC2-VPC</code>).</p> </li> <li> <p> <code>reserved-instances-id</code> - The ID of the Reserved Instances modified.</p> </li> <li> <p> <code>reserved-instances-modification-id</code> - The ID of the modification request.</p> </li> <li> <p> <code>status</code> - The status of the Reserved Instances modification request (<code>processing</code> | <code>fulfilled</code> | <code>failed</code>).</p> </li> <li> <p> <code>status-message</code> - The reason for the status.</p> </li> <li> <p> <code>update-date</code> - The time when the modification request was last updated.</p> </li> </ul>
        ReservedInstancesModificationId:
          allOf:
            - $ref: '#/components/schemas/ReservedInstancesModificationIdStringList'
            - description: IDs for the submitted modification request.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to retrieve the next page of results.
      description: Contains the parameters for DescribeReservedInstancesModifications.
    ReservedInstancesModificationList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ReservedInstancesModification'
          - xml:
              name: item
    RIProductDescription:
      type: string
      enum:
        - Linux/UNIX
        - Linux/UNIX (Amazon VPC)
        - Windows
        - Windows (Amazon VPC)
    ReservedInstancesOfferingIdStringList:
      type: array
      items:
        $ref: '#/components/schemas/ReservedInstancesOfferingId'
    OfferingTypeValues:
      type: string
      enum:
        - Heavy Utilization
        - Medium Utilization
        - Light Utilization
        - No Upfront
        - Partial Upfront
        - All Upfront
    DescribeReservedInstancesOfferingsRequest:
      type: object
      title: DescribeReservedInstancesOfferingsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Availability Zone in which the Reserved Instance can be used.
        Filter:
          allOf:
            - $ref: '#/components/schemas/RIProductDescription'
            - description: The Reserved Instance product platform description. Instances that include <code>(Amazon VPC)</code> in the description are for use with Amazon VPC.
        ReservedInstancesOfferingId:
          allOf:
            - $ref: '#/components/schemas/ReservedInstancesOfferingIdStringList'
            - description: One or more Reserved Instances offering IDs.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        instanceTenancy:
          allOf:
            - $ref: '#/components/schemas/Tenancy'
            - description: '<p>The tenancy of the instances covered by the reservation. A Reserved Instance with a tenancy of <code>dedicated</code> is applied to instances that run in a VPC on single-tenant hardware (i.e., Dedicated Instances).</p> <p> <b>Important:</b> The <code>host</code> value cannot be used with this parameter. Use the <code>default</code> or <code>dedicated</code> values only.</p> <p>Default: <code>default</code> </p>'
        maxResults:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: '<p>The maximum number of results to return for the request in a single page. The remaining results of the initial request can be seen by sending another request with the returned <code>NextToken</code> value. The maximum is 100.</p> <p>Default: 100</p>'
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to retrieve the next page of results.
        offeringType:
          allOf:
            - $ref: '#/components/schemas/OfferingTypeValues'
            - description: 'The Reserved Instance offering type. If you are using tools that predate the 2011-11-01 API version, you only have access to the <code>Medium Utilization</code> Reserved Instance offering type. '
      description: Contains the parameters for DescribeReservedInstancesOfferings.
    ReservedInstancesOfferingList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ReservedInstancesOffering'
          - xml:
              name: item
    OfferingClassType:
      type: string
      enum:
        - standard
        - convertible
    ReservedInstancesIdStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ReservationId'
          - xml:
              name: ReservedInstancesId
    DescribeReservedInstancesRequest:
      type: object
      title: DescribeReservedInstancesRequest
      properties:
        Filter:
          allOf:
            - $ref: '#/components/schemas/OfferingClassType'
            - description: Describes whether the Reserved Instance is Standard or Convertible.
        ReservedInstancesId:
          allOf:
            - $ref: '#/components/schemas/ReservedInstancesIdStringList'
            - description: '<p>One or more Reserved Instance IDs.</p> <p>Default: Describes all your Reserved Instances, or only those otherwise specified.</p>'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        offeringType:
          allOf:
            - $ref: '#/components/schemas/OfferingTypeValues'
            - description: 'The Reserved Instance offering type. If you are using tools that predate the 2011-11-01 API version, you only have access to the <code>Medium Utilization</code> Reserved Instance offering type.'
      description: Contains the parameters for DescribeReservedInstances.
    ReservedInstancesList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ReservedInstances'
          - xml:
              name: item
    DescribeRouteTablesMaxResults:
      type: integer
      minimum: 5
      maximum: 100
    DescribeRouteTablesRequest:
      type: object
      title: DescribeRouteTablesRequest
      properties:
        Filter:
          allOf:
            - $ref: '#/components/schemas/FilterList'
            - description: '<p>One or more filters.</p> <ul> <li> <p> <code>association.route-table-association-id</code> - The ID of an association ID for the route table.</p> </li> <li> <p> <code>association.route-table-id</code> - The ID of the route table involved in the association.</p> </li> <li> <p> <code>association.subnet-id</code> - The ID of the subnet involved in the association.</p> </li> <li> <p> <code>association.main</code> - Indicates whether the route table is the main route table for the VPC (<code>true</code> | <code>false</code>). Route tables that do not have an association ID are not returned in the response.</p> </li> <li> <p> <code>owner-id</code> - The ID of the Amazon Web Services account that owns the route table.</p> </li> <li> <p> <code>route-table-id</code> - The ID of the route table.</p> </li> <li> <p> <code>route.destination-cidr-block</code> - The IPv4 CIDR range specified in a route in the table.</p> </li> <li> <p> <code>route.destination-ipv6-cidr-block</code> - The IPv6 CIDR range specified in a route in the route table.</p> </li> <li> <p> <code>route.destination-prefix-list-id</code> - The ID (prefix) of the Amazon Web Service specified in a route in the table.</p> </li> <li> <p> <code>route.egress-only-internet-gateway-id</code> - The ID of an egress-only Internet gateway specified in a route in the route table.</p> </li> <li> <p> <code>route.gateway-id</code> - The ID of a gateway specified in a route in the table.</p> </li> <li> <p> <code>route.instance-id</code> - The ID of an instance specified in a route in the table.</p> </li> <li> <p> <code>route.nat-gateway-id</code> - The ID of a NAT gateway.</p> </li> <li> <p> <code>route.transit-gateway-id</code> - The ID of a transit gateway.</p> </li> <li> <p> <code>route.origin</code> - Describes how the route was created. <code>CreateRouteTable</code> indicates that the route was automatically created when the route table was created; <code>CreateRoute</code> indicates that the route was manually added to the route table; <code>EnableVgwRoutePropagation</code> indicates that the route was propagated by route propagation.</p> </li> <li> <p> <code>route.state</code> - The state of a route in the route table (<code>active</code> | <code>blackhole</code>). The blackhole state indicates that the route''s target isn''t available (for example, the specified gateway isn''t attached to the VPC, the specified NAT instance has been terminated, and so on).</p> </li> <li> <p> <code>route.vpc-peering-connection-id</code> - The ID of a VPC peering connection specified in a route in the table.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC for the route table.</p> </li> </ul>'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        RouteTableId:
          allOf:
            - $ref: '#/components/schemas/DescribeRouteTablesMaxResults'
            - description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
    RouteTableList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/RouteTable'
          - xml:
              name: item
    DescribeScheduledInstanceAvailabilityMaxResults:
      type: integer
      minimum: 5
      maximum: 300
    ScheduledInstanceRecurrenceRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The interval quantity. The interval unit depends on the value of <code>Frequency</code>. For example, every 2 weeks or every 2 months.'
        OccurrenceDay:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The unit for <code>OccurrenceDays</code> (<code>DayOfWeek</code> or <code>DayOfMonth</code>). This value is required for a monthly schedule. You can't specify <code>DayOfWeek</code> with a weekly schedule. You can't specify this value with a daily schedule.
      description: Describes the recurring schedule for a Scheduled Instance.
    DescribeScheduledInstanceAvailabilityRequest:
      type: object
      required:
        - FirstSlotStartTimeRange
        - Recurrence
      title: DescribeScheduledInstanceAvailabilityRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        Filter:
          allOf:
            - $ref: '#/components/schemas/ScheduledInstanceRecurrenceRequest'
            - description: The schedule recurrence.
      description: Contains the parameters for DescribeScheduledInstanceAvailability.
    ScheduledInstanceAvailabilitySet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ScheduledInstanceAvailability'
          - xml:
              name: item
    SlotStartTimeRangeRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: 'The latest date and time, in UTC, for the Scheduled Instance to start.'
      description: Describes the time period for a Scheduled Instance to start its first schedule.
    DescribeScheduledInstancesRequest:
      type: object
      title: DescribeScheduledInstancesRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        Filter:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token for the next set of results.
        ScheduledInstanceId:
          allOf:
            - $ref: '#/components/schemas/SlotStartTimeRangeRequest'
            - description: The time period for the first schedule to start.
      description: Contains the parameters for DescribeScheduledInstances.
    ScheduledInstanceSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ScheduledInstance'
          - xml:
              name: item
    GroupIds:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/SecurityGroupId'
          - xml:
              name: item
    DescribeSecurityGroupReferencesRequest:
      type: object
      required:
        - GroupId
      title: DescribeSecurityGroupReferencesRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/GroupIds'
            - description: The IDs of the security groups in your account.
    SecurityGroupReferences:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/SecurityGroupReference'
          - xml:
              name: item
    DescribeSecurityGroupRulesMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    DescribeSecurityGroupRulesRequest:
      type: object
      title: DescribeSecurityGroupRulesRequest
      properties:
        Filter:
          allOf:
            - $ref: '#/components/schemas/FilterList'
            - description: '<p>One or more filters.</p> <ul> <li> <p> <code>group-id</code> - The ID of the security group.</p> </li> <li> <p> <code>security-group-rule-id</code> - The ID of the security group rule.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> </ul>'
        SecurityGroupRuleId:
          allOf:
            - $ref: '#/components/schemas/DescribeSecurityGroupRulesMaxResults'
            - description: 'The maximum number of results to return in a single call. To retrieve the remaining results, make another request with the returned <code>NextToken</code> value. This value can be between 5 and 1000. If this parameter is not specified, then all results are returned.'
    DescribeSecurityGroupsMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    GroupNameStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/SecurityGroupName'
          - xml:
              name: GroupName
    DescribeSecurityGroupsRequest:
      type: object
      title: DescribeSecurityGroupsRequest
      properties:
        Filter:
          allOf:
            - $ref: '#/components/schemas/FilterList'
            - description: '<p>The filters. If using multiple filters for rules, the results include security groups for which any combination of rules - not necessarily a single rule - match all filters.</p> <ul> <li> <p> <code>description</code> - The description of the security group.</p> </li> <li> <p> <code>egress.ip-permission.cidr</code> - An IPv4 CIDR block for an outbound security group rule.</p> </li> <li> <p> <code>egress.ip-permission.from-port</code> - For an outbound rule, the start of port range for the TCP and UDP protocols, or an ICMP type number.</p> </li> <li> <p> <code>egress.ip-permission.group-id</code> - The ID of a security group that has been referenced in an outbound security group rule.</p> </li> <li> <p> <code>egress.ip-permission.group-name</code> - The name of a security group that is referenced in an outbound security group rule.</p> </li> <li> <p> <code>egress.ip-permission.ipv6-cidr</code> - An IPv6 CIDR block for an outbound security group rule.</p> </li> <li> <p> <code>egress.ip-permission.prefix-list-id</code> - The ID of a prefix list to which a security group rule allows outbound access.</p> </li> <li> <p> <code>egress.ip-permission.protocol</code> - The IP protocol for an outbound security group rule (<code>tcp</code> | <code>udp</code> | <code>icmp</code>, a protocol number, or -1 for all protocols).</p> </li> <li> <p> <code>egress.ip-permission.to-port</code> - For an outbound rule, the end of port range for the TCP and UDP protocols, or an ICMP code.</p> </li> <li> <p> <code>egress.ip-permission.user-id</code> - The ID of an Amazon Web Services account that has been referenced in an outbound security group rule.</p> </li> <li> <p> <code>group-id</code> - The ID of the security group. </p> </li> <li> <p> <code>group-name</code> - The name of the security group.</p> </li> <li> <p> <code>ip-permission.cidr</code> - An IPv4 CIDR block for an inbound security group rule.</p> </li> <li> <p> <code>ip-permission.from-port</code> - For an inbound rule, the start of port range for the TCP and UDP protocols, or an ICMP type number.</p> </li> <li> <p> <code>ip-permission.group-id</code> - The ID of a security group that has been referenced in an inbound security group rule.</p> </li> <li> <p> <code>ip-permission.group-name</code> - The name of a security group that is referenced in an inbound security group rule.</p> </li> <li> <p> <code>ip-permission.ipv6-cidr</code> - An IPv6 CIDR block for an inbound security group rule.</p> </li> <li> <p> <code>ip-permission.prefix-list-id</code> - The ID of a prefix list from which a security group rule allows inbound access.</p> </li> <li> <p> <code>ip-permission.protocol</code> - The IP protocol for an inbound security group rule (<code>tcp</code> | <code>udp</code> | <code>icmp</code>, a protocol number, or -1 for all protocols).</p> </li> <li> <p> <code>ip-permission.to-port</code> - For an inbound rule, the end of port range for the TCP and UDP protocols, or an ICMP code.</p> </li> <li> <p> <code>ip-permission.user-id</code> - The ID of an Amazon Web Services account that has been referenced in an inbound security group rule.</p> </li> <li> <p> <code>owner-id</code> - The Amazon Web Services account ID of the owner of the security group.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC specified when the security group was created.</p> </li> </ul>'
        GroupId:
          allOf:
            - $ref: '#/components/schemas/GroupIdStringList'
            - description: '<p>The IDs of the security groups. Required for security groups in a nondefault VPC.</p> <p>Default: Describes all of your security groups.</p>'
        GroupName:
          allOf:
            - $ref: '#/components/schemas/GroupNameStringList'
            - description: '<p>[EC2-Classic and default VPC only] The names of the security groups. You can specify either the security group name or the security group ID. For security groups in a nondefault VPC, use the <code>group-name</code> filter to describe security groups by name.</p> <p>Default: Describes all of your security groups.</p>'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/DescribeSecurityGroupsMaxResults'
            - description: 'The maximum number of results to return in a single call. To retrieve the remaining results, make another request with the returned <code>NextToken</code> value. This value can be between 5 and 1000. If this parameter is not specified, then all results are returned.'
    SecurityGroupList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/SecurityGroup'
          - xml:
              name: item
    DescribeSnapshotAttributeRequest:
      type: object
      required:
        - Attribute
        - SnapshotId
      title: DescribeSnapshotAttributeRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/SnapshotId'
            - description: The ID of the EBS snapshot.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    ProductCodeList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ProductCode'
          - xml:
              name: item
    DescribeSnapshotTierStatusMaxResults:
      type: integer
    DescribeSnapshotTierStatusRequest:
      type: object
      title: DescribeSnapshotTierStatusRequest
      properties:
        Filter:
          allOf:
            - $ref: '#/components/schemas/DescribeSnapshotTierStatusMaxResults'
            - description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
    snapshotTierStatusSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/SnapshotTierStatus'
          - xml:
              name: item
    RestorableByStringList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    SnapshotIdStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/SnapshotId'
          - xml:
              name: SnapshotId
    DescribeSnapshotsRequest:
      type: object
      title: DescribeSnapshotsRequest
      properties:
        Filter:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The <code>NextToken</code> value returned from a previous paginated <code>DescribeSnapshots</code> request where <code>MaxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>NextToken</code> value. This value is <code>null</code> when there are no more results to return.
        Owner:
          allOf:
            - $ref: '#/components/schemas/OwnerStringList'
            - description: 'Scopes the results to snapshots with the specified owners. You can specify a combination of Amazon Web Services account IDs, <code>self</code>, and <code>amazon</code>.'
        RestorableBy:
          allOf:
            - $ref: '#/components/schemas/RestorableByStringList'
            - description: The IDs of the Amazon Web Services accounts that can create volumes from the snapshot.
        SnapshotId:
          allOf:
            - $ref: '#/components/schemas/SnapshotIdStringList'
            - description: '<p>The snapshot IDs.</p> <p>Default: Describes the snapshots for which you have create volume permissions.</p>'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    SnapshotList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Snapshot'
          - xml:
              name: item
    DescribeSpotDatafeedSubscriptionRequest:
      type: object
      title: DescribeSpotDatafeedSubscriptionRequest
      properties:
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
      description: Contains the parameters for DescribeSpotDatafeedSubscription.
    DescribeSpotFleetInstancesMaxResults:
      type: integer
      minimum: 1
      maximum: 1000
    DescribeSpotFleetInstancesRequest:
      type: object
      required:
        - SpotFleetRequestId
      title: DescribeSpotFleetInstancesRequest
      properties:
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        maxResults:
          allOf:
            - $ref: '#/components/schemas/DescribeSpotFleetInstancesMaxResults'
            - description: 'The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.'
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token for the next set of results.
        spotFleetRequestId:
          allOf:
            - $ref: '#/components/schemas/SpotFleetRequestId'
            - description: The ID of the Spot Fleet request.
      description: Contains the parameters for DescribeSpotFleetInstances.
    DescribeSpotFleetRequestHistoryMaxResults:
      type: integer
      minimum: 1
      maximum: 1000
    EventType:
      type: string
      enum:
        - instanceChange
        - fleetRequestChange
        - error
        - information
    DescribeSpotFleetRequestHistoryRequest:
      type: object
      required:
        - SpotFleetRequestId
        - StartTime
      title: DescribeSpotFleetRequestHistoryRequest
      properties:
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        eventType:
          allOf:
            - $ref: '#/components/schemas/EventType'
            - description: 'The type of events to describe. By default, all events are described.'
        maxResults:
          allOf:
            - $ref: '#/components/schemas/DescribeSpotFleetRequestHistoryMaxResults'
            - description: 'The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.'
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token for the next set of results.
        spotFleetRequestId:
          allOf:
            - $ref: '#/components/schemas/SpotFleetRequestId'
            - description: The ID of the Spot Fleet request.
        startTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: 'The starting date and time for the events, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).'
      description: Contains the parameters for DescribeSpotFleetRequestHistory.
    HistoryRecords:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/HistoryRecord'
          - xml:
              name: item
    DescribeSpotFleetRequestsRequest:
      type: object
      title: DescribeSpotFleetRequestsRequest
      properties:
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        maxResults:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.'
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token for the next set of results.
        spotFleetRequestId:
          allOf:
            - $ref: '#/components/schemas/SpotFleetRequestIdList'
            - description: The IDs of the Spot Fleet requests.
      description: Contains the parameters for DescribeSpotFleetRequests.
    SpotFleetRequestConfigSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/SpotFleetRequestConfig'
          - xml:
              name: item
    DescribeSpotInstanceRequestsRequest:
      type: object
      title: DescribeSpotInstanceRequestsRequest
      properties:
        Filter:
          allOf:
            - $ref: '#/components/schemas/FilterList'
            - description: '<p>One or more filters.</p> <ul> <li> <p> <code>availability-zone-group</code> - The Availability Zone group.</p> </li> <li> <p> <code>create-time</code> - The time stamp when the Spot Instance request was created.</p> </li> <li> <p> <code>fault-code</code> - The fault code related to the request.</p> </li> <li> <p> <code>fault-message</code> - The fault message related to the request.</p> </li> <li> <p> <code>instance-id</code> - The ID of the instance that fulfilled the request.</p> </li> <li> <p> <code>launch-group</code> - The Spot Instance launch group.</p> </li> <li> <p> <code>launch.block-device-mapping.delete-on-termination</code> - Indicates whether the EBS volume is deleted on instance termination.</p> </li> <li> <p> <code>launch.block-device-mapping.device-name</code> - The device name for the volume in the block device mapping (for example, <code>/dev/sdh</code> or <code>xvdh</code>).</p> </li> <li> <p> <code>launch.block-device-mapping.snapshot-id</code> - The ID of the snapshot for the EBS volume.</p> </li> <li> <p> <code>launch.block-device-mapping.volume-size</code> - The size of the EBS volume, in GiB.</p> </li> <li> <p> <code>launch.block-device-mapping.volume-type</code> - The type of EBS volume: <code>gp2</code> for General Purpose SSD, <code>io1</code> or <code>io2</code> for Provisioned IOPS SSD, <code>st1</code> for Throughput Optimized HDD, <code>sc1</code>for Cold HDD, or <code>standard</code> for Magnetic.</p> </li> <li> <p> <code>launch.group-id</code> - The ID of the security group for the instance.</p> </li> <li> <p> <code>launch.group-name</code> - The name of the security group for the instance.</p> </li> <li> <p> <code>launch.image-id</code> - The ID of the AMI.</p> </li> <li> <p> <code>launch.instance-type</code> - The type of instance (for example, <code>m3.medium</code>).</p> </li> <li> <p> <code>launch.kernel-id</code> - The kernel ID.</p> </li> <li> <p> <code>launch.key-name</code> - The name of the key pair the instance launched with.</p> </li> <li> <p> <code>launch.monitoring-enabled</code> - Whether detailed monitoring is enabled for the Spot Instance.</p> </li> <li> <p> <code>launch.ramdisk-id</code> - The RAM disk ID.</p> </li> <li> <p> <code>launched-availability-zone</code> - The Availability Zone in which the request is launched.</p> </li> <li> <p> <code>network-interface.addresses.primary</code> - Indicates whether the IP address is the primary private IP address.</p> </li> <li> <p> <code>network-interface.delete-on-termination</code> - Indicates whether the network interface is deleted when the instance is terminated.</p> </li> <li> <p> <code>network-interface.description</code> - A description of the network interface.</p> </li> <li> <p> <code>network-interface.device-index</code> - The index of the device for the network interface attachment on the instance.</p> </li> <li> <p> <code>network-interface.group-id</code> - The ID of the security group associated with the network interface.</p> </li> <li> <p> <code>network-interface.network-interface-id</code> - The ID of the network interface.</p> </li> <li> <p> <code>network-interface.private-ip-address</code> - The primary private IP address of the network interface.</p> </li> <li> <p> <code>network-interface.subnet-id</code> - The ID of the subnet for the instance.</p> </li> <li> <p> <code>product-description</code> - The product description associated with the instance (<code>Linux/UNIX</code> | <code>Windows</code>).</p> </li> <li> <p> <code>spot-instance-request-id</code> - The Spot Instance request ID.</p> </li> <li> <p> <code>spot-price</code> - The maximum hourly price for any Spot Instance launched to fulfill the request.</p> </li> <li> <p> <code>state</code> - The state of the Spot Instance request (<code>open</code> | <code>active</code> | <code>closed</code> | <code>cancelled</code> | <code>failed</code>). Spot request status information can help you track your Amazon EC2 Spot Instance requests. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-request-status.html">Spot request status</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p> </li> <li> <p> <code>status-code</code> - The short code describing the most recent evaluation of your Spot Instance request.</p> </li> <li> <p> <code>status-message</code> - The message explaining the status of the Spot Instance request.</p> </li> <li> <p> <code>tag:&lt;key&gt;</code> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>type</code> - The type of Spot Instance request (<code>one-time</code> | <code>persistent</code>).</p> </li> <li> <p> <code>valid-from</code> - The start date of the request.</p> </li> <li> <p> <code>valid-until</code> - The end date of the request.</p> </li> </ul>'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        SpotInstanceRequestId:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The maximum number of results to return in a single call. Specify a value between 5 and 1000. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.'
      description: Contains the parameters for DescribeSpotInstanceRequests.
    SpotInstanceRequestList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/SpotInstanceRequest'
          - xml:
              name: item
    InstanceTypeList:
      type: array
      items:
        $ref: '#/components/schemas/InstanceType'
    ProductDescriptionList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    DescribeSpotPriceHistoryRequest:
      type: object
      title: DescribeSpotPriceHistoryRequest
      properties:
        Filter:
          allOf:
            - $ref: '#/components/schemas/FilterList'
            - description: '<p>One or more filters.</p> <ul> <li> <p> <code>availability-zone</code> - The Availability Zone for which prices should be returned.</p> </li> <li> <p> <code>instance-type</code> - The type of instance (for example, <code>m3.medium</code>).</p> </li> <li> <p> <code>product-description</code> - The product description for the Spot price (<code>Linux/UNIX</code> | <code>Red Hat Enterprise Linux</code> | <code>SUSE Linux</code> | <code>Windows</code> | <code>Linux/UNIX (Amazon VPC)</code> | <code>Red Hat Enterprise Linux (Amazon VPC)</code> | <code>SUSE Linux (Amazon VPC)</code> | <code>Windows (Amazon VPC)</code>).</p> </li> <li> <p> <code>spot-price</code> - The Spot price. The value must match exactly (or use wildcards; greater than or less than comparison is not supported).</p> </li> <li> <p> <code>timestamp</code> - The time stamp of the Spot price history, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). You can use wildcards (* and ?). Greater than or less than comparison is not supported.</p> </li> </ul>'
        availabilityZone:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Filters the results by the specified Availability Zone.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        endTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: 'The date and time, up to the current date, from which to stop retrieving the price history data, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).'
        InstanceType:
          allOf:
            - $ref: '#/components/schemas/InstanceTypeList'
            - description: Filters the results by the specified instance types.
        maxResults:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.'
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token for the next set of results.
        ProductDescription:
          allOf:
            - $ref: '#/components/schemas/ProductDescriptionList'
            - description: Filters the results by the specified basic product descriptions.
        startTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: 'The date and time, up to the past 90 days, from which to start retrieving the price history data, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).'
      description: Contains the parameters for DescribeSpotPriceHistory.
    SpotPriceHistoryList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/SpotPrice'
          - xml:
              name: item
    DescribeStaleSecurityGroupsMaxResults:
      type: integer
      minimum: 5
      maximum: 255
    DescribeStaleSecurityGroupsNextToken:
      type: string
      minLength: 1
      maxLength: 1024
    DescribeStaleSecurityGroupsRequest:
      type: object
      required:
        - VpcId
      title: DescribeStaleSecurityGroupsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/VpcId'
            - description: The ID of the VPC.
    StaleSecurityGroupSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/StaleSecurityGroup'
          - xml:
              name: item
    DescribeStoreImageTasksRequestMaxResults:
      type: integer
      minimum: 1
      maximum: 200
    DescribeStoreImageTasksRequest:
      type: object
      title: DescribeStoreImageTasksRequest
      properties:
        ImageId:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        Filter:
          allOf:
            - $ref: '#/components/schemas/DescribeStoreImageTasksRequestMaxResults'
            - description: 'The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value. This value can be between 1 and 200. You cannot specify this parameter and the <code>ImageIDs</code> parameter in the same call.'
    StoreImageTaskResultSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/StoreImageTaskResult'
          - xml:
              name: item
    DescribeSubnetsMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    SubnetIdStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/SubnetId'
          - xml:
              name: SubnetId
    DescribeSubnetsRequest:
      type: object
      title: DescribeSubnetsRequest
      properties:
        Filter:
          allOf:
            - $ref: '#/components/schemas/FilterList'
            - description: '<p>One or more filters.</p> <ul> <li> <p> <code>availability-zone</code> - The Availability Zone for the subnet. You can also use <code>availabilityZone</code> as the filter name.</p> </li> <li> <p> <code>availability-zone-id</code> - The ID of the Availability Zone for the subnet. You can also use <code>availabilityZoneId</code> as the filter name.</p> </li> <li> <p> <code>available-ip-address-count</code> - The number of IPv4 addresses in the subnet that are available.</p> </li> <li> <p> <code>cidr-block</code> - The IPv4 CIDR block of the subnet. The CIDR block you specify must exactly match the subnet''s CIDR block for information to be returned for the subnet. You can also use <code>cidr</code> or <code>cidrBlock</code> as the filter names.</p> </li> <li> <p> <code>default-for-az</code> - Indicates whether this is the default subnet for the Availability Zone (<code>true</code> | <code>false</code>). You can also use <code>defaultForAz</code> as the filter name.</p> </li> <li> <p> <code>ipv6-cidr-block-association.ipv6-cidr-block</code> - An IPv6 CIDR block associated with the subnet.</p> </li> <li> <p> <code>ipv6-cidr-block-association.association-id</code> - An association ID for an IPv6 CIDR block associated with the subnet.</p> </li> <li> <p> <code>ipv6-cidr-block-association.state</code> - The state of an IPv6 CIDR block associated with the subnet.</p> </li> <li> <p> <code>ipv6-native</code> - Indicates whether this is an IPv6 only subnet (<code>true</code> | <code>false</code>).</p> </li> <li> <p> <code>outpost-arn</code> - The Amazon Resource Name (ARN) of the Outpost.</p> </li> <li> <p> <code>owner-id</code> - The ID of the Amazon Web Services account that owns the subnet.</p> </li> <li> <p> <code>state</code> - The state of the subnet (<code>pending</code> | <code>available</code>).</p> </li> <li> <p> <code>subnet-arn</code> - The Amazon Resource Name (ARN) of the subnet.</p> </li> <li> <p> <code>subnet-id</code> - The ID of the subnet.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC for the subnet.</p> </li> </ul>'
        SubnetId:
          allOf:
            - $ref: '#/components/schemas/SubnetIdStringList'
            - description: '<p>One or more subnet IDs.</p> <p>Default: Describes all your subnets.</p>'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/DescribeSubnetsMaxResults'
            - description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
    SubnetList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Subnet'
          - xml:
              name: item
    DescribeTagsRequest:
      type: object
      title: DescribeTagsRequest
      properties:
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        Filter:
          allOf:
            - $ref: '#/components/schemas/FilterList'
            - description: '<p>The filters.</p> <ul> <li> <p> <code>key</code> - The tag key.</p> </li> <li> <p> <code>resource-id</code> - The ID of the resource.</p> </li> <li> <p> <code>resource-type</code> - The resource type (<code>customer-gateway</code> | <code>dedicated-host</code> | <code>dhcp-options</code> | <code>elastic-ip</code> | <code>fleet</code> | <code>fpga-image</code> | <code>host-reservation</code> | <code>image</code> | <code>instance</code> | <code>internet-gateway</code> | <code>key-pair</code> | <code>launch-template</code> | <code>natgateway</code> | <code>network-acl</code> | <code>network-interface</code> | <code>placement-group</code> | <code>reserved-instances</code> | <code>route-table</code> | <code>security-group</code> | <code>snapshot</code> | <code>spot-instances-request</code> | <code>subnet</code> | <code>volume</code> | <code>vpc</code> | <code>vpc-endpoint</code> | <code>vpc-endpoint-service</code> | <code>vpc-peering-connection</code> | <code>vpn-connection</code> | <code>vpn-gateway</code>).</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of the tag. For example, specify "tag:Owner" for the filter name and "TeamA" for the filter value to find resources with the tag "Owner=TeamA".</p> </li> <li> <p> <code>value</code> - The tag value.</p> </li> </ul>'
        maxResults:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The maximum number of results to return in a single call. This value can be between 5 and 1000. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.'
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to retrieve the next page of results.
    TagDescriptionList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/TagDescription'
          - xml:
              name: item
    DescribeTrafficMirrorFiltersRequest:
      type: object
      title: DescribeTrafficMirrorFiltersRequest
      properties:
        TrafficMirrorFilterId:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        Filter:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token for the next page of results.
    TrafficMirrorFilterSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/TrafficMirrorFilter'
          - xml:
              name: item
    DescribeTrafficMirrorSessionsRequest:
      type: object
      title: DescribeTrafficMirrorSessionsRequest
      properties:
        TrafficMirrorSessionId:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        Filter:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token for the next page of results.
    TrafficMirrorSessionSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/TrafficMirrorSession'
          - xml:
              name: item
    DescribeTrafficMirrorTargetsRequest:
      type: object
      title: DescribeTrafficMirrorTargetsRequest
      properties:
        TrafficMirrorTargetId:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        Filter:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token for the next page of results.
    TrafficMirrorTargetSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/TrafficMirrorTarget'
          - xml:
              name: item
    TransitGatewayAttachmentIdStringList:
      type: array
      items:
        $ref: '#/components/schemas/TransitGatewayAttachmentId'
    DescribeTransitGatewayAttachmentsRequest:
      type: object
      title: DescribeTransitGatewayAttachmentsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayAttachmentIdStringList'
            - description: The IDs of the attachments.
        Filter:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    TransitGatewayAttachmentList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/TransitGatewayAttachment'
          - xml:
              name: item
    TransitGatewayConnectPeerIdStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/TransitGatewayConnectPeerId'
          - xml:
              name: item
    DescribeTransitGatewayConnectPeersRequest:
      type: object
      title: DescribeTransitGatewayConnectPeersRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayConnectPeerIdStringList'
            - description: The IDs of the Connect peers.
        Filter:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    TransitGatewayConnectPeerList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/TransitGatewayConnectPeer'
          - xml:
              name: item
    DescribeTransitGatewayConnectsRequest:
      type: object
      title: DescribeTransitGatewayConnectsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayAttachmentIdStringList'
            - description: The IDs of the attachments.
        Filter:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    TransitGatewayConnectList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/TransitGatewayConnect'
          - xml:
              name: item
    TransitGatewayMulticastDomainIdStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/TransitGatewayMulticastDomainId'
          - xml:
              name: item
    DescribeTransitGatewayMulticastDomainsRequest:
      type: object
      title: DescribeTransitGatewayMulticastDomainsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayMulticastDomainIdStringList'
            - description: The ID of the transit gateway multicast domain.
        Filter:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    TransitGatewayMulticastDomainList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/TransitGatewayMulticastDomain'
          - xml:
              name: item
    DescribeTransitGatewayPeeringAttachmentsRequest:
      type: object
      title: DescribeTransitGatewayPeeringAttachmentsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayAttachmentIdStringList'
            - description: One or more IDs of the transit gateway peering attachments.
        Filter:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    TransitGatewayPeeringAttachmentList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/TransitGatewayPeeringAttachment'
          - xml:
              name: item
    TransitGatewayRouteTableIdStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/TransitGatewayRouteTableId'
          - xml:
              name: item
    DescribeTransitGatewayRouteTablesRequest:
      type: object
      title: DescribeTransitGatewayRouteTablesRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayRouteTableIdStringList'
            - description: The IDs of the transit gateway route tables.
        Filter:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    TransitGatewayRouteTableList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/TransitGatewayRouteTable'
          - xml:
              name: item
    DescribeTransitGatewayVpcAttachmentsRequest:
      type: object
      title: DescribeTransitGatewayVpcAttachmentsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayAttachmentIdStringList'
            - description: The IDs of the attachments.
        Filter:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    TransitGatewayVpcAttachmentList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/TransitGatewayVpcAttachment'
          - xml:
              name: item
    TransitGatewayIdStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/TransitGatewayId'
          - xml:
              name: item
    DescribeTransitGatewaysRequest:
      type: object
      title: DescribeTransitGatewaysRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayIdStringList'
            - description: The IDs of the transit gateways.
        Filter:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    TransitGatewayList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/TransitGateway'
          - xml:
              name: item
    DescribeTrunkInterfaceAssociationsMaxResults:
      type: integer
      minimum: 5
      maximum: 255
    DescribeTrunkInterfaceAssociationsRequest:
      type: object
      title: DescribeTrunkInterfaceAssociationsRequest
      properties:
        AssociationId:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        Filter:
          allOf:
            - $ref: '#/components/schemas/DescribeTrunkInterfaceAssociationsMaxResults'
            - description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
    TrunkInterfaceAssociationList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/TrunkInterfaceAssociation'
          - xml:
              name: item
    DescribeVolumeAttributeRequest:
      type: object
      required:
        - Attribute
        - VolumeId
      title: DescribeVolumeAttributeRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/VolumeId'
            - description: The ID of the volume.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    VolumeIdStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/VolumeId'
          - xml:
              name: VolumeId
    DescribeVolumeStatusRequest:
      type: object
      title: DescribeVolumeStatusRequest
      properties:
        Filter:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The <code>NextToken</code> value to include in a future <code>DescribeVolumeStatus</code> request. When the results of the request exceed <code>MaxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.'
        VolumeId:
          allOf:
            - $ref: '#/components/schemas/VolumeIdStringList'
            - description: '<p>The IDs of the volumes.</p> <p>Default: Describes all your volumes.</p>'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    VolumeStatusList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/VolumeStatusItem'
          - xml:
              name: item
    DescribeVolumesModificationsRequest:
      type: object
      title: DescribeVolumesModificationsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        VolumeId:
          allOf:
            - $ref: '#/components/schemas/VolumeIdStringList'
            - description: The IDs of the volumes.
        Filter:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The maximum number of results (up to a limit of 500) to be returned in a paginated request.
    VolumeModificationList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/VolumeModification'
          - xml:
              name: item
    DescribeVolumesRequest:
      type: object
      title: DescribeVolumesRequest
      properties:
        Filter:
          allOf:
            - $ref: '#/components/schemas/FilterList'
            - description: '<p>The filters.</p> <ul> <li> <p> <code>attachment.attach-time</code> - The time stamp when the attachment initiated.</p> </li> <li> <p> <code>attachment.delete-on-termination</code> - Whether the volume is deleted on instance termination.</p> </li> <li> <p> <code>attachment.device</code> - The device name specified in the block device mapping (for example, <code>/dev/sda1</code>).</p> </li> <li> <p> <code>attachment.instance-id</code> - The ID of the instance the volume is attached to.</p> </li> <li> <p> <code>attachment.status</code> - The attachment state (<code>attaching</code> | <code>attached</code> | <code>detaching</code>).</p> </li> <li> <p> <code>availability-zone</code> - The Availability Zone in which the volume was created.</p> </li> <li> <p> <code>create-time</code> - The time stamp when the volume was created.</p> </li> <li> <p> <code>encrypted</code> - Indicates whether the volume is encrypted (<code>true</code> | <code>false</code>)</p> </li> <li> <p> <code>multi-attach-enabled</code> - Indicates whether the volume is enabled for Multi-Attach (<code>true</code> | <code>false</code>)</p> </li> <li> <p> <code>fast-restored</code> - Indicates whether the volume was created from a snapshot that is enabled for fast snapshot restore (<code>true</code> | <code>false</code>).</p> </li> <li> <p> <code>size</code> - The size of the volume, in GiB.</p> </li> <li> <p> <code>snapshot-id</code> - The snapshot from which the volume was created.</p> </li> <li> <p> <code>status</code> - The state of the volume (<code>creating</code> | <code>available</code> | <code>in-use</code> | <code>deleting</code> | <code>deleted</code> | <code>error</code>).</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>volume-id</code> - The volume ID.</p> </li> <li> <p> <code>volume-type</code> - The Amazon EBS volume type (<code>gp2</code> | <code>gp3</code> | <code>io1</code> | <code>io2</code> | <code>st1</code> | <code>sc1</code>| <code>standard</code>)</p> </li> </ul>'
        VolumeId:
          allOf:
            - $ref: '#/components/schemas/VolumeIdStringList'
            - description: The volume IDs.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        maxResults:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The maximum number of volume results returned by <code>DescribeVolumes</code> in paginated output. When this parameter is used, <code>DescribeVolumes</code> only returns <code>MaxResults</code> results in a single page along with a <code>NextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeVolumes</code> request with the returned <code>NextToken</code> value. This value can be between 5 and 500; if <code>MaxResults</code> is given a value larger than 500, only 500 results are returned. If this parameter is not used, then <code>DescribeVolumes</code> returns all results. You cannot specify this parameter and the volume IDs parameter in the same request.'
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The <code>NextToken</code> value returned from a previous paginated <code>DescribeVolumes</code> request where <code>MaxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>NextToken</code> value. This value is <code>null</code> when there are no more results to return.
    VolumeList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Volume'
          - xml:
              name: item
    DescribeVpcAttributeRequest:
      type: object
      required:
        - Attribute
        - VpcId
      title: DescribeVpcAttributeRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/VpcId'
            - description: The ID of the VPC.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DescribeVpcClassicLinkDnsSupportMaxResults:
      type: integer
      minimum: 5
      maximum: 255
    DescribeVpcClassicLinkDnsSupportNextToken:
      type: string
      minLength: 1
      maxLength: 1024
    VpcClassicLinkIdList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/VpcId'
          - xml:
              name: VpcId
    DescribeVpcClassicLinkDnsSupportRequest:
      type: object
      title: DescribeVpcClassicLinkDnsSupportRequest
      properties:
        maxResults:
          allOf:
            - $ref: '#/components/schemas/DescribeVpcClassicLinkDnsSupportMaxResults'
            - description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
        nextToken:
          allOf:
            - $ref: '#/components/schemas/VpcClassicLinkIdList'
            - description: One or more VPC IDs.
    DescribeVpcClassicLinkRequest:
      type: object
      title: DescribeVpcClassicLinkRequest
      properties:
        Filter:
          allOf:
            - $ref: '#/components/schemas/FilterList'
            - description: '<p>One or more filters.</p> <ul> <li> <p> <code>is-classic-link-enabled</code> - Whether the VPC is enabled for ClassicLink (<code>true</code> | <code>false</code>).</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> </ul>'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        VpcId:
          allOf:
            - $ref: '#/components/schemas/VpcClassicLinkIdList'
            - description: One or more VPCs for which you want to describe the ClassicLink status.
    VpcClassicLinkList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/VpcClassicLink'
          - xml:
              name: item
    DescribeVpcEndpointConnectionNotificationsRequest:
      type: object
      title: DescribeVpcEndpointConnectionNotificationsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/ConnectionNotificationId'
            - description: The ID of the notification.
        Filter:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to request the next page of results.
    DescribeVpcEndpointConnectionsRequest:
      type: object
      title: DescribeVpcEndpointConnectionsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        Filter:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to retrieve the next page of results.
    VpcEndpointConnectionSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/VpcEndpointConnection'
          - xml:
              name: item
    DescribeVpcEndpointServiceConfigurationsRequest:
      type: object
      title: DescribeVpcEndpointServiceConfigurationsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        ServiceId:
          allOf:
            - $ref: '#/components/schemas/VpcEndpointServiceIdList'
            - description: The IDs of one or more services.
        Filter:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to retrieve the next page of results.
    ServiceConfigurationSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ServiceConfiguration'
          - xml:
              name: item
    DescribeVpcEndpointServicePermissionsRequest:
      type: object
      required:
        - ServiceId
      title: DescribeVpcEndpointServicePermissionsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/VpcEndpointServiceId'
            - description: The ID of the service.
        Filter:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token to retrieve the next page of results.
    DescribeVpcEndpointServicesRequest:
      type: object
      title: DescribeVpcEndpointServicesRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        ServiceName:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: One or more service names.
        Filter:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token for the next set of items to return. (You received this token from a prior call.)
      description: Contains the parameters for DescribeVpcEndpointServices.
    ServiceDetailSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ServiceDetail'
          - xml:
              name: item
    DescribeVpcEndpointsRequest:
      type: object
      title: DescribeVpcEndpointsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        VpcEndpointId:
          allOf:
            - $ref: '#/components/schemas/VpcEndpointIdList'
            - description: One or more endpoint IDs.
        Filter:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token for the next set of items to return. (You received this token from a prior call.)
      description: Contains the parameters for DescribeVpcEndpoints.
    VpcEndpointSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/VpcEndpoint'
          - xml:
              name: item
    DescribeVpcPeeringConnectionsMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    DescribeVpcPeeringConnectionsRequest:
      type: object
      title: DescribeVpcPeeringConnectionsRequest
      properties:
        Filter:
          allOf:
            - $ref: '#/components/schemas/FilterList'
            - description: '<p>One or more filters.</p> <ul> <li> <p> <code>accepter-vpc-info.cidr-block</code> - The IPv4 CIDR block of the accepter VPC.</p> </li> <li> <p> <code>accepter-vpc-info.owner-id</code> - The ID of the Amazon Web Services account that owns the accepter VPC.</p> </li> <li> <p> <code>accepter-vpc-info.vpc-id</code> - The ID of the accepter VPC.</p> </li> <li> <p> <code>expiration-time</code> - The expiration date and time for the VPC peering connection.</p> </li> <li> <p> <code>requester-vpc-info.cidr-block</code> - The IPv4 CIDR block of the requester''s VPC.</p> </li> <li> <p> <code>requester-vpc-info.owner-id</code> - The ID of the Amazon Web Services account that owns the requester VPC.</p> </li> <li> <p> <code>requester-vpc-info.vpc-id</code> - The ID of the requester VPC.</p> </li> <li> <p> <code>status-code</code> - The status of the VPC peering connection (<code>pending-acceptance</code> | <code>failed</code> | <code>expired</code> | <code>provisioning</code> | <code>active</code> | <code>deleting</code> | <code>deleted</code> | <code>rejected</code>).</p> </li> <li> <p> <code>status-message</code> - A message that provides more information about the status of the VPC peering connection, if applicable.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>vpc-peering-connection-id</code> - The ID of the VPC peering connection.</p> </li> </ul>'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        VpcPeeringConnectionId:
          allOf:
            - $ref: '#/components/schemas/DescribeVpcPeeringConnectionsMaxResults'
            - description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
    VpcPeeringConnectionList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/VpcPeeringConnection'
          - xml:
              name: item
    DescribeVpcsMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    VpcIdStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/VpcId'
          - xml:
              name: VpcId
    DescribeVpcsRequest:
      type: object
      title: DescribeVpcsRequest
      properties:
        Filter:
          allOf:
            - $ref: '#/components/schemas/FilterList'
            - description: '<p>One or more filters.</p> <ul> <li> <p> <code>cidr</code> - The primary IPv4 CIDR block of the VPC. The CIDR block you specify must exactly match the VPC''s CIDR block for information to be returned for the VPC. Must contain the slash followed by one or two digits (for example, <code>/28</code>).</p> </li> <li> <p> <code>cidr-block-association.cidr-block</code> - An IPv4 CIDR block associated with the VPC.</p> </li> <li> <p> <code>cidr-block-association.association-id</code> - The association ID for an IPv4 CIDR block associated with the VPC.</p> </li> <li> <p> <code>cidr-block-association.state</code> - The state of an IPv4 CIDR block associated with the VPC.</p> </li> <li> <p> <code>dhcp-options-id</code> - The ID of a set of DHCP options.</p> </li> <li> <p> <code>ipv6-cidr-block-association.ipv6-cidr-block</code> - An IPv6 CIDR block associated with the VPC.</p> </li> <li> <p> <code>ipv6-cidr-block-association.ipv6-pool</code> - The ID of the IPv6 address pool from which the IPv6 CIDR block is allocated.</p> </li> <li> <p> <code>ipv6-cidr-block-association.association-id</code> - The association ID for an IPv6 CIDR block associated with the VPC.</p> </li> <li> <p> <code>ipv6-cidr-block-association.state</code> - The state of an IPv6 CIDR block associated with the VPC.</p> </li> <li> <p> <code>is-default</code> - Indicates whether the VPC is the default VPC.</p> </li> <li> <p> <code>owner-id</code> - The ID of the Amazon Web Services account that owns the VPC.</p> </li> <li> <p> <code>state</code> - The state of the VPC (<code>pending</code> | <code>available</code>).</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC.</p> </li> </ul>'
        VpcId:
          allOf:
            - $ref: '#/components/schemas/VpcIdStringList'
            - description: '<p>One or more VPC IDs.</p> <p>Default: Describes all your VPCs.</p>'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/DescribeVpcsMaxResults'
            - description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
    VpcList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Vpc'
          - xml:
              name: item
    VpnConnectionIdStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/VpnConnectionId'
          - xml:
              name: VpnConnectionId
    DescribeVpnConnectionsRequest:
      type: object
      title: DescribeVpnConnectionsRequest
      properties:
        Filter:
          allOf:
            - $ref: '#/components/schemas/FilterList'
            - description: '<p>One or more filters.</p> <ul> <li> <p> <code>customer-gateway-configuration</code> - The configuration information for the customer gateway.</p> </li> <li> <p> <code>customer-gateway-id</code> - The ID of a customer gateway associated with the VPN connection.</p> </li> <li> <p> <code>state</code> - The state of the VPN connection (<code>pending</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>).</p> </li> <li> <p> <code>option.static-routes-only</code> - Indicates whether the connection has static routes only. Used for devices that do not support Border Gateway Protocol (BGP).</p> </li> <li> <p> <code>route.destination-cidr-block</code> - The destination CIDR block. This corresponds to the subnet used in a customer data center.</p> </li> <li> <p> <code>bgp-asn</code> - The BGP Autonomous System Number (ASN) associated with a BGP device.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>type</code> - The type of VPN connection. Currently the only supported type is <code>ipsec.1</code>.</p> </li> <li> <p> <code>vpn-connection-id</code> - The ID of the VPN connection.</p> </li> <li> <p> <code>vpn-gateway-id</code> - The ID of a virtual private gateway associated with the VPN connection.</p> </li> <li> <p> <code>transit-gateway-id</code> - The ID of a transit gateway associated with the VPN connection.</p> </li> </ul>'
        VpnConnectionId:
          allOf:
            - $ref: '#/components/schemas/VpnConnectionIdStringList'
            - description: '<p>One or more VPN connection IDs.</p> <p>Default: Describes your VPN connections.</p>'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
      description: Contains the parameters for DescribeVpnConnections.
    VpnConnectionList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/VpnConnection'
          - xml:
              name: item
    VpnGatewayIdStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/VpnGatewayId'
          - xml:
              name: VpnGatewayId
    DescribeVpnGatewaysRequest:
      type: object
      title: DescribeVpnGatewaysRequest
      properties:
        Filter:
          allOf:
            - $ref: '#/components/schemas/FilterList'
            - description: '<p>One or more filters.</p> <ul> <li> <p> <code>amazon-side-asn</code> - The Autonomous System Number (ASN) for the Amazon side of the gateway.</p> </li> <li> <p> <code>attachment.state</code> - The current state of the attachment between the gateway and the VPC (<code>attaching</code> | <code>attached</code> | <code>detaching</code> | <code>detached</code>).</p> </li> <li> <p> <code>attachment.vpc-id</code> - The ID of an attached VPC.</p> </li> <li> <p> <code>availability-zone</code> - The Availability Zone for the virtual private gateway (if applicable).</p> </li> <li> <p> <code>state</code> - The state of the virtual private gateway (<code>pending</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>).</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>type</code> - The type of virtual private gateway. Currently the only supported type is <code>ipsec.1</code>.</p> </li> <li> <p> <code>vpn-gateway-id</code> - The ID of the virtual private gateway.</p> </li> </ul>'
        VpnGatewayId:
          allOf:
            - $ref: '#/components/schemas/VpnGatewayIdStringList'
            - description: '<p>One or more virtual private gateway IDs.</p> <p>Default: Describes all your virtual private gateways.</p>'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
      description: Contains the parameters for DescribeVpnGateways.
    VpnGatewayList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/VpnGateway'
          - xml:
              name: item
    DestinationFileFormat:
      type: string
      enum:
        - plain-text
        - parquet
    DestinationOptionsResponse:
      type: object
      properties:
        fileFormat:
          allOf:
            - $ref: '#/components/schemas/DestinationFileFormat'
            - description: The format for the flow log.
        hiveCompatiblePartitions:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether to use Hive-compatible prefixes for flow logs stored in Amazon S3.
        perHourPartition:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether to partition the flow log per hour.
      description: Describes the destination options for a flow log.
    DetachClassicLinkVpcRequest:
      type: object
      required:
        - InstanceId
        - VpcId
      title: DetachClassicLinkVpcRequest
      properties:
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        instanceId:
          allOf:
            - $ref: '#/components/schemas/InstanceId'
            - description: The ID of the instance to unlink from the VPC.
        vpcId:
          allOf:
            - $ref: '#/components/schemas/VpcId'
            - description: The ID of the VPC to which the instance is linked.
    DetachInternetGatewayRequest:
      type: object
      required:
        - InternetGatewayId
        - VpcId
      title: DetachInternetGatewayRequest
      properties:
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        internetGatewayId:
          allOf:
            - $ref: '#/components/schemas/InternetGatewayId'
            - description: The ID of the internet gateway.
        vpcId:
          allOf:
            - $ref: '#/components/schemas/VpcId'
            - description: The ID of the VPC.
    DetachNetworkInterfaceRequest:
      type: object
      required:
        - AttachmentId
      title: DetachNetworkInterfaceRequest
      properties:
        attachmentId:
          allOf:
            - $ref: '#/components/schemas/NetworkInterfaceAttachmentId'
            - description: The ID of the attachment.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        force:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: '<p>Specifies whether to force a detachment.</p> <note> <ul> <li> <p>Use the <code>Force</code> parameter only as a last resort to detach a network interface from a failed instance. </p> </li> <li> <p>If you use the <code>Force</code> parameter to detach a network interface, you might not be able to attach a different network interface to the same index on the instance without first stopping and starting the instance.</p> </li> <li> <p>If you force the detachment of a network interface, the <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">instance metadata</a> might not get updated. This means that the attributes associated with the detached network interface might still be visible. The instance metadata will get updated when you stop and start the instance.</p> </li> </ul> </note>'
      description: Contains the parameters for DetachNetworkInterface.
    DetachVolumeRequest:
      type: object
      required:
        - VolumeId
      title: DetachVolumeRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/VolumeId'
            - description: The ID of the volume.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DetachVpnGatewayRequest:
      type: object
      required:
        - VpcId
        - VpnGatewayId
      title: DetachVpnGatewayRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/VpnGatewayId'
            - description: The ID of the virtual private gateway.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
      description: Contains the parameters for DetachVpnGateway.
    DeviceType:
      type: string
      enum:
        - ebs
        - instance-store
    DhcpConfigurationValueList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/AttributeValue'
          - xml:
              name: item
    DhcpConfiguration:
      type: object
      properties:
        key:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of a DHCP option.
        valueSet:
          allOf:
            - $ref: '#/components/schemas/DhcpConfigurationValueList'
            - description: One or more values for the DHCP option.
      description: Describes a DHCP configuration option.
    DhcpConfigurationList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/DhcpConfiguration'
          - xml:
              name: item
    DirectoryServiceAuthenticationRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Active Directory to be used for authentication.
      description: Describes the Active Directory to be used for client authentication.
    DisableEbsEncryptionByDefaultRequest:
      type: object
      title: DisableEbsEncryptionByDefaultRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DisableFastLaunchRequest:
      type: object
      required:
        - ImageId
      title: DisableFastLaunchRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DisableFastSnapshotRestoreStateErrorSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/DisableFastSnapshotRestoreStateErrorItem'
          - xml:
              name: item
    DisableFastSnapshotRestoreErrorItem:
      type: object
      properties:
        snapshotId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the snapshot.
        fastSnapshotRestoreStateErrorSet:
          allOf:
            - $ref: '#/components/schemas/DisableFastSnapshotRestoreStateErrorSet'
            - description: The errors.
      description: Contains information about the errors that occurred when disabling fast snapshot restores.
    DisableFastSnapshotRestoreErrorSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/DisableFastSnapshotRestoreErrorItem'
          - xml:
              name: item
    DisableFastSnapshotRestoreStateError:
      type: object
      properties:
        code:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The error code.
        message:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The error message.
      description: Describes an error that occurred when disabling fast snapshot restores.
    DisableFastSnapshotRestoreStateErrorItem:
      type: object
      properties:
        availabilityZone:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Availability Zone.
        error:
          allOf:
            - $ref: '#/components/schemas/DisableFastSnapshotRestoreStateError'
            - description: The error.
      description: Contains information about an error that occurred when disabling fast snapshot restores.
    DisableFastSnapshotRestoreSuccessItem:
      type: object
      properties:
        snapshotId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the snapshot.
        availabilityZone:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Availability Zone.
        state:
          allOf:
            - $ref: '#/components/schemas/FastSnapshotRestoreStateCode'
            - description: The state of fast snapshot restores for the snapshot.
        stateTransitionReason:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The reason for the state transition. The possible values are as follows:</p> <ul> <li> <p> <code>Client.UserInitiated</code> - The state successfully transitioned to <code>enabling</code> or <code>disabling</code>.</p> </li> <li> <p> <code>Client.UserInitiated - Lifecycle state transition</code> - The state successfully transitioned to <code>optimizing</code>, <code>enabled</code>, or <code>disabled</code>.</p> </li> </ul>'
        ownerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Amazon Web Services account that enabled fast snapshot restores on the snapshot.
        ownerAlias:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Web Services owner alias that enabled fast snapshot restores on the snapshot. This is intended for future use.
        enablingTime:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: The time at which fast snapshot restores entered the <code>enabling</code> state.
        optimizingTime:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: The time at which fast snapshot restores entered the <code>optimizing</code> state.
        enabledTime:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: The time at which fast snapshot restores entered the <code>enabled</code> state.
        disablingTime:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: The time at which fast snapshot restores entered the <code>disabling</code> state.
        disabledTime:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: The time at which fast snapshot restores entered the <code>disabled</code> state.
      description: Describes fast snapshot restores that were successfully disabled.
    DisableFastSnapshotRestoreSuccessSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/DisableFastSnapshotRestoreSuccessItem'
          - xml:
              name: item
    DisableFastSnapshotRestoresRequest:
      type: object
      required:
        - AvailabilityZones
        - SourceSnapshotIds
      title: DisableFastSnapshotRestoresRequest
      properties:
        AvailabilityZone:
          allOf:
            - $ref: '#/components/schemas/AvailabilityZoneStringList'
            - description: 'One or more Availability Zones. For example, <code>us-east-2a</code>.'
        SourceSnapshotId:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DisableImageDeprecationRequest:
      type: object
      required:
        - ImageId
      title: DisableImageDeprecationRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DisableIpamOrganizationAdminAccountRequest:
      type: object
      required:
        - DelegatedAdminAccountId
      title: DisableIpamOrganizationAdminAccountRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Organizations member account ID that you want to disable as IPAM account.
    DisableSerialConsoleAccessRequest:
      type: object
      title: DisableSerialConsoleAccessRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DisableTransitGatewayRouteTablePropagationRequest:
      type: object
      required:
        - TransitGatewayRouteTableId
        - TransitGatewayAttachmentId
      title: DisableTransitGatewayRouteTablePropagationRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    TransitGatewayPropagation:
      type: object
      properties:
        transitGatewayAttachmentId:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayAttachmentId'
            - description: The ID of the attachment.
        resourceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the resource.
        resourceType:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayAttachmentResourceType'
            - description: The resource type. Note that the <code>tgw-peering</code> resource type has been deprecated.
        transitGatewayRouteTableId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the transit gateway route table.
        state:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayPropagationState'
            - description: The state.
      description: Describes route propagation.
    DisableVgwRoutePropagationRequest:
      type: object
      required:
        - GatewayId
        - RouteTableId
      title: DisableVgwRoutePropagationRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
      description: Contains the parameters for DisableVgwRoutePropagation.
    DisableVpcClassicLinkDnsSupportRequest:
      type: object
      title: DisableVpcClassicLinkDnsSupportRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/VpcId'
            - description: The ID of the VPC.
    DisableVpcClassicLinkRequest:
      type: object
      required:
        - VpcId
      title: DisableVpcClassicLinkRequest
      properties:
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        vpcId:
          allOf:
            - $ref: '#/components/schemas/VpcId'
            - description: The ID of the VPC.
    DisassociateAddressRequest:
      type: object
      title: DisassociateAddressRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '[EC2-Classic] The Elastic IP address. Required for EC2-Classic.'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DisassociateClientVpnTargetNetworkRequest:
      type: object
      required:
        - ClientVpnEndpointId
        - AssociationId
      title: DisassociateClientVpnTargetNetworkRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DisassociateEnclaveCertificateIamRoleRequest:
      type: object
      title: DisassociateEnclaveCertificateIamRoleRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DisassociateIamInstanceProfileRequest:
      type: object
      required:
        - AssociationId
      title: DisassociateIamInstanceProfileRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/IamInstanceProfileAssociationId'
            - description: The ID of the IAM instance profile association.
    InstanceEventWindowDisassociationRequest:
      type: object
      properties:
        InstanceId:
          allOf:
            - $ref: '#/components/schemas/InstanceIdList'
            - description: The IDs of the instances to disassociate from the event window.
        InstanceTag:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The instance tags to disassociate from the event window. Any instances associated with the tags will be disassociated from the event window.
        DedicatedHostId:
          allOf:
            - $ref: '#/components/schemas/DedicatedHostIdList'
            - description: The IDs of the Dedicated Hosts to disassociate from the event window.
      description: The targets to disassociate from the specified event window.
    DisassociateInstanceEventWindowRequest:
      type: object
      required:
        - InstanceEventWindowId
        - AssociationTarget
      title: DisassociateInstanceEventWindowRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/InstanceEventWindowDisassociationRequest'
            - description: One or more targets to disassociate from the specified event window.
    RouteTableAssociationId:
      type: string
    DisassociateRouteTableRequest:
      type: object
      required:
        - AssociationId
      title: DisassociateRouteTableRequest
      properties:
        associationId:
          allOf:
            - $ref: '#/components/schemas/RouteTableAssociationId'
            - description: The association ID representing the current association between the route table and subnet or gateway.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    SubnetCidrAssociationId:
      type: string
    DisassociateSubnetCidrBlockRequest:
      type: object
      required:
        - AssociationId
      title: DisassociateSubnetCidrBlockRequest
      properties:
        associationId:
          allOf:
            - $ref: '#/components/schemas/SubnetCidrAssociationId'
            - description: The association ID for the CIDR block.
    DisassociateTransitGatewayMulticastDomainRequest:
      type: object
      title: DisassociateTransitGatewayMulticastDomainRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DisassociateTransitGatewayRouteTableRequest:
      type: object
      required:
        - TransitGatewayRouteTableId
        - TransitGatewayAttachmentId
      title: DisassociateTransitGatewayRouteTableRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    DisassociateTrunkInterfaceRequest:
      type: object
      required:
        - AssociationId
      title: DisassociateTrunkInterfaceRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    VpcCidrAssociationId:
      type: string
    DisassociateVpcCidrBlockRequest:
      type: object
      required:
        - AssociationId
      title: DisassociateVpcCidrBlockRequest
      properties:
        associationId:
          allOf:
            - $ref: '#/components/schemas/VpcCidrAssociationId'
            - description: The association ID for the CIDR block.
    DiskCount:
      type: integer
    VolumeDetail:
      type: object
      required:
        - Size
      properties:
        size:
          type: integer
          description: 'The size of the volume, in GiB.'
      description: Describes an EBS volume.
    DiskImageDescription:
      type: object
      properties:
        checksum:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The checksum computed for the disk image.
        format:
          allOf:
            - $ref: '#/components/schemas/DiskImageFormat'
            - description: The disk image format.
        importManifestUrl:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>A presigned URL for the import manifest stored in Amazon S3. For information about creating a presigned URL for an Amazon S3 object, read the "Query String Request Authentication Alternative" section of the <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html">Authenticating REST Requests</a> topic in the <i>Amazon Simple Storage Service Developer Guide</i>.</p> <p>For information about the import manifest referenced by this API action, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html">VM Import Manifest</a>.</p>'
        size:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: 'The size of the disk image, in GiB.'
      description: Describes a disk image.
    DiskImageDetail:
      type: object
      required:
        - Bytes
        - Format
        - ImportManifestUrl
      properties:
        bytes:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: 'The size of the disk image, in GiB.'
        format:
          allOf:
            - $ref: '#/components/schemas/DiskImageFormat'
            - description: The disk image format.
        importManifestUrl:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>A presigned URL for the import manifest stored in Amazon S3 and presented here as an Amazon S3 presigned URL. For information about creating a presigned URL for an Amazon S3 object, read the "Query String Request Authentication Alternative" section of the <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html">Authenticating REST Requests</a> topic in the <i>Amazon Simple Storage Service Developer Guide</i>.</p> <p>For information about the import manifest referenced by this API action, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html">VM Import Manifest</a>.</p>'
      description: Describes a disk image.
    DiskImageList:
      type: array
      items:
        $ref: '#/components/schemas/DiskImage'
    DiskImageVolumeDescription:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The volume identifier.
        size:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: 'The size of the volume, in GiB.'
      description: Describes a disk image volume.
    DiskSize:
      type: integer
    DiskType:
      type: string
      enum:
        - hdd
        - ssd
    DiskInfo:
      type: object
      properties:
        sizeInGB:
          allOf:
            - $ref: '#/components/schemas/DiskSize'
            - description: The size of the disk in GB.
        count:
          allOf:
            - $ref: '#/components/schemas/DiskCount'
            - description: The number of disks with this configuration.
        type:
          allOf:
            - $ref: '#/components/schemas/DiskType'
            - description: The type of disk.
      description: Describes a disk.
    DiskInfoList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/DiskInfo'
          - xml:
              name: item
    DnsEntry:
      type: object
      properties:
        dnsName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The DNS name.
        hostedZoneId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the private hosted zone.
      description: Describes a DNS entry.
    DnsEntrySet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/DnsEntry'
          - xml:
              name: item
    DnsNameState:
      type: string
      enum:
        - pendingVerification
        - verified
        - failed
    DnsOptions:
      type: object
      properties:
        dnsRecordIpType:
          allOf:
            - $ref: '#/components/schemas/DnsRecordIpType'
            - description: The DNS records created for the endpoint.
      description: Describes the DNS options for an endpoint.
    DnsOptionsSpecification:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/DnsRecordIpType'
            - description: The DNS records created for the endpoint.
      description: Describes the DNS options for an endpoint.
    DnsServersOptionsModifyStructure:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether DNS servers should be used. Specify <code>False</code> to delete the existing DNS servers.
      description: Information about the DNS server to be used.
    DnsSupportValue:
      type: string
      enum:
        - enable
        - disable
    DoubleWithConstraints:
      type: number
      format: double
      minimum: 0.001
      maximum: 99.999
    EbsEncryptionSupport:
      type: string
      enum:
        - unsupported
        - supported
    EbsOptimizedSupport:
      type: string
      enum:
        - unsupported
        - supported
        - default
    EbsOptimizedInfo:
      type: object
      properties:
        baselineBandwidthInMbps:
          allOf:
            - $ref: '#/components/schemas/BaselineBandwidthInMbps'
            - description: 'The baseline bandwidth performance for an EBS-optimized instance type, in Mbps.'
        baselineThroughputInMBps:
          allOf:
            - $ref: '#/components/schemas/BaselineThroughputInMBps'
            - description: 'The baseline throughput performance for an EBS-optimized instance type, in MB/s.'
        baselineIops:
          allOf:
            - $ref: '#/components/schemas/BaselineIops'
            - description: The baseline input/output storage operations per seconds for an EBS-optimized instance type.
        maximumBandwidthInMbps:
          allOf:
            - $ref: '#/components/schemas/MaximumBandwidthInMbps'
            - description: 'The maximum bandwidth performance for an EBS-optimized instance type, in Mbps.'
        maximumThroughputInMBps:
          allOf:
            - $ref: '#/components/schemas/MaximumThroughputInMBps'
            - description: 'The maximum throughput performance for an EBS-optimized instance type, in MB/s.'
        maximumIops:
          allOf:
            - $ref: '#/components/schemas/MaximumIops'
            - description: The maximum input/output storage operations per second for an EBS-optimized instance type.
      description: Describes the optimized EBS performance for supported instance types.
    EbsNvmeSupport:
      type: string
      enum:
        - unsupported
        - supported
        - required
    EbsInfo:
      type: object
      properties:
        ebsOptimizedSupport:
          allOf:
            - $ref: '#/components/schemas/EbsOptimizedSupport'
            - description: 'Indicates whether the instance type is Amazon EBS-optimized. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html">Amazon EBS-optimized instances</a> in <i>Amazon EC2 User Guide</i>.'
        encryptionSupport:
          allOf:
            - $ref: '#/components/schemas/EbsEncryptionSupport'
            - description: Indicates whether Amazon EBS encryption is supported.
        ebsOptimizedInfo:
          allOf:
            - $ref: '#/components/schemas/EbsOptimizedInfo'
            - description: Describes the optimized EBS performance for the instance type.
        nvmeSupport:
          allOf:
            - $ref: '#/components/schemas/EbsNvmeSupport'
            - description: Indicates whether non-volatile memory express (NVMe) is supported.
      description: Describes the Amazon EBS features supported by the instance type.
    EbsInstanceBlockDevice:
      type: object
      properties:
        attachTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The time stamp when the attachment initiated.
        deleteOnTermination:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the volume is deleted on instance termination.
        status:
          allOf:
            - $ref: '#/components/schemas/AttachmentStatus'
            - description: The attachment state.
        volumeId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the EBS volume.
      description: Describes a parameter used to set up an EBS volume in a block device mapping.
    EbsInstanceBlockDeviceSpecification:
      type: object
      properties:
        deleteOnTermination:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the volume is deleted on instance termination.
        volumeId:
          allOf:
            - $ref: '#/components/schemas/VolumeId'
            - description: The ID of the EBS volume.
      description: Describes information used to set up an EBS volume specified in a block device mapping.
    MaximumBandwidthInMbps:
      type: integer
    MaximumThroughputInMBps:
      type: number
      format: double
    MaximumIops:
      type: integer
    MaximumEfaInterfaces:
      type: integer
    EfaInfo:
      type: object
      properties:
        maximumEfaInterfaces:
          allOf:
            - $ref: '#/components/schemas/MaximumEfaInterfaces'
            - description: The maximum number of Elastic Fabric Adapters for the instance type.
      description: Describes the Elastic Fabric Adapters for the instance type.
    EfaSupportedFlag:
      type: boolean
    InternetGatewayAttachmentList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/InternetGatewayAttachment'
          - xml:
              name: item
    EgressOnlyInternetGatewayIdList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/EgressOnlyInternetGatewayId'
          - xml:
              name: item
    ElasticGpuAssociation:
      type: object
      properties:
        elasticGpuId:
          allOf:
            - $ref: '#/components/schemas/ElasticGpuId'
            - description: The ID of the Elastic Graphics accelerator.
        elasticGpuAssociationId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the association.
        elasticGpuAssociationState:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The state of the association between the instance and the Elastic Graphics accelerator.
        elasticGpuAssociationTime:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The time the Elastic Graphics accelerator was associated with the instance.
      description: Describes the association between an instance and an Elastic Graphics accelerator.
    ElasticGpuAssociationList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ElasticGpuAssociation'
          - xml:
              name: item
    ElasticGpuStatus:
      type: string
      enum:
        - OK
        - IMPAIRED
    ElasticGpuHealth:
      type: object
      properties:
        status:
          allOf:
            - $ref: '#/components/schemas/ElasticGpuStatus'
            - description: The health status.
      description: Describes the status of an Elastic Graphics accelerator.
    ElasticGpuIdSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ElasticGpuId'
          - xml:
              name: item
    ElasticGpus:
      type: object
      properties:
        elasticGpuId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Elastic Graphics accelerator.
        availabilityZone:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Availability Zone in the which the Elastic Graphics accelerator resides.
        elasticGpuType:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The type of Elastic Graphics accelerator.
        elasticGpuHealth:
          allOf:
            - $ref: '#/components/schemas/ElasticGpuHealth'
            - description: The status of the Elastic Graphics accelerator.
        elasticGpuState:
          allOf:
            - $ref: '#/components/schemas/ElasticGpuState'
            - description: The state of the Elastic Graphics accelerator.
        instanceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the instance to which the Elastic Graphics accelerator is attached.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags assigned to the Elastic Graphics accelerator.
      description: Describes an Elastic Graphics accelerator.
    ElasticGpuSpecificationResponse:
      type: object
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The elastic GPU type.
      description: Describes an elastic GPU.
    ElasticGpuSpecificationResponseList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ElasticGpuSpecificationResponse'
          - xml:
              name: item
    ElasticGpuSpecifications:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ElasticGpuSpecification'
          - xml:
              name: item
    ElasticGpuState:
      type: string
      enum:
        - ATTACHED
    ElasticInferenceAcceleratorCount:
      type: integer
      minimum: 1
    ElasticInferenceAcceleratorAssociation:
      type: object
      properties:
        elasticInferenceAcceleratorArn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: ' The Amazon Resource Name (ARN) of the elastic inference accelerator. '
        elasticInferenceAcceleratorAssociationId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: ' The ID of the association. '
        elasticInferenceAcceleratorAssociationState:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: ' The state of the elastic inference accelerator. '
        elasticInferenceAcceleratorAssociationTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: ' The time at which the elastic inference accelerator is associated with an instance. '
      description: ' Describes the association between an instance and an elastic inference accelerator. '
    ElasticInferenceAcceleratorAssociationList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ElasticInferenceAcceleratorAssociation'
          - xml:
              name: item
    ElasticInferenceAccelerators:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ElasticInferenceAccelerator'
          - xml:
              name: item
    ElasticIpAssociationId:
      type: string
    EnaSupport:
      type: string
      enum:
        - unsupported
        - supported
        - required
    EnableEbsEncryptionByDefaultRequest:
      type: object
      title: EnableEbsEncryptionByDefaultRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    EnableFastLaunchRequest:
      type: object
      required:
        - ImageId
      title: EnableFastLaunchRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    EnableFastSnapshotRestoreStateErrorSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/EnableFastSnapshotRestoreStateErrorItem'
          - xml:
              name: item
    EnableFastSnapshotRestoreErrorItem:
      type: object
      properties:
        snapshotId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the snapshot.
        fastSnapshotRestoreStateErrorSet:
          allOf:
            - $ref: '#/components/schemas/EnableFastSnapshotRestoreStateErrorSet'
            - description: The errors.
      description: Contains information about the errors that occurred when enabling fast snapshot restores.
    EnableFastSnapshotRestoreErrorSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/EnableFastSnapshotRestoreErrorItem'
          - xml:
              name: item
    EnableFastSnapshotRestoreStateError:
      type: object
      properties:
        code:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The error code.
        message:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The error message.
      description: Describes an error that occurred when enabling fast snapshot restores.
    EnableFastSnapshotRestoreStateErrorItem:
      type: object
      properties:
        availabilityZone:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Availability Zone.
        error:
          allOf:
            - $ref: '#/components/schemas/EnableFastSnapshotRestoreStateError'
            - description: The error.
      description: Contains information about an error that occurred when enabling fast snapshot restores.
    EnableFastSnapshotRestoreSuccessItem:
      type: object
      properties:
        snapshotId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the snapshot.
        availabilityZone:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Availability Zone.
        state:
          allOf:
            - $ref: '#/components/schemas/FastSnapshotRestoreStateCode'
            - description: The state of fast snapshot restores.
        stateTransitionReason:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The reason for the state transition. The possible values are as follows:</p> <ul> <li> <p> <code>Client.UserInitiated</code> - The state successfully transitioned to <code>enabling</code> or <code>disabling</code>.</p> </li> <li> <p> <code>Client.UserInitiated - Lifecycle state transition</code> - The state successfully transitioned to <code>optimizing</code>, <code>enabled</code>, or <code>disabled</code>.</p> </li> </ul>'
        ownerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Amazon Web Services account that enabled fast snapshot restores on the snapshot.
        ownerAlias:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Web Services owner alias that enabled fast snapshot restores on the snapshot. This is intended for future use.
        enablingTime:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: The time at which fast snapshot restores entered the <code>enabling</code> state.
        optimizingTime:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: The time at which fast snapshot restores entered the <code>optimizing</code> state.
        enabledTime:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: The time at which fast snapshot restores entered the <code>enabled</code> state.
        disablingTime:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: The time at which fast snapshot restores entered the <code>disabling</code> state.
        disabledTime:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: The time at which fast snapshot restores entered the <code>disabled</code> state.
      description: Describes fast snapshot restores that were successfully enabled.
    EnableFastSnapshotRestoreSuccessSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/EnableFastSnapshotRestoreSuccessItem'
          - xml:
              name: item
    EnableFastSnapshotRestoresRequest:
      type: object
      required:
        - AvailabilityZones
        - SourceSnapshotIds
      title: EnableFastSnapshotRestoresRequest
      properties:
        AvailabilityZone:
          allOf:
            - $ref: '#/components/schemas/AvailabilityZoneStringList'
            - description: 'One or more Availability Zones. For example, <code>us-east-2a</code>.'
        SourceSnapshotId:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    EnableImageDeprecationRequest:
      type: object
      required:
        - ImageId
        - DeprecateAt
      title: EnableImageDeprecationRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    EnableIpamOrganizationAdminAccountRequest:
      type: object
      required:
        - DelegatedAdminAccountId
      title: EnableIpamOrganizationAdminAccountRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Organizations member account ID that you want to enable as the IPAM account.
    EnableSerialConsoleAccessRequest:
      type: object
      title: EnableSerialConsoleAccessRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    EnableTransitGatewayRouteTablePropagationRequest:
      type: object
      required:
        - TransitGatewayRouteTableId
        - TransitGatewayAttachmentId
      title: EnableTransitGatewayRouteTablePropagationRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    EnableVgwRoutePropagationRequest:
      type: object
      required:
        - GatewayId
        - RouteTableId
      title: EnableVgwRoutePropagationRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
      description: Contains the parameters for EnableVgwRoutePropagation.
    EnableVolumeIORequest:
      type: object
      required:
        - VolumeId
      title: EnableVolumeIORequest
      properties:
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        volumeId:
          allOf:
            - $ref: '#/components/schemas/VolumeId'
            - description: The ID of the volume.
    EnableVpcClassicLinkDnsSupportRequest:
      type: object
      title: EnableVpcClassicLinkDnsSupportRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/VpcId'
            - description: The ID of the VPC.
    EnableVpcClassicLinkRequest:
      type: object
      required:
        - VpcId
      title: EnableVpcClassicLinkRequest
      properties:
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        vpcId:
          allOf:
            - $ref: '#/components/schemas/VpcId'
            - description: The ID of the VPC.
    EnclaveOptions:
      type: object
      properties:
        enabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'If this parameter is set to <code>true</code>, the instance is enabled for Amazon Web Services Nitro Enclaves; otherwise, it is not enabled for Amazon Web Services Nitro Enclaves.'
      description: Indicates whether the instance is enabled for Amazon Web Services Nitro Enclaves.
    EnclaveOptionsRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'To enable the instance for Amazon Web Services Nitro Enclaves, set this parameter to <code>true</code>.'
      description: 'Indicates whether the instance is enabled for Amazon Web Services Nitro Enclaves. For more information, see <a href="https://docs.aws.amazon.com/enclaves/latest/user/nitro-enclave.html"> What is Amazon Web Services Nitro Enclaves?</a> in the <i>Amazon Web Services Nitro Enclaves User Guide</i>.'
    EncryptionInTransitSupported:
      type: boolean
    EphemeralNvmeSupport:
      type: string
      enum:
        - unsupported
        - supported
        - required
    ValidationError:
      type: object
      properties:
        code:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The error code that indicates why the parameter or parameter combination is not valid. For more information about error codes, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/errors-overview.html.html">Error Codes</a>.'
        message:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The error message that describes why the parameter or parameter combination is not valid. For more information about error messages, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/errors-overview.html.html">Error Codes</a>.'
      description: The error code and error message that is returned for a parameter or parameter combination that is not valid when a new launch template or new version of a launch template is created.
    ErrorSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ValidationError'
          - xml:
              name: item
    EventCode:
      type: string
      enum:
        - instance-reboot
        - system-reboot
        - system-maintenance
        - instance-retirement
        - instance-stop
    EventInformation:
      type: object
      properties:
        eventDescription:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The description of the event.
        eventSubType:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The event.</p> <p> <code>error</code> events:</p> <ul> <li> <p> <code>iamFleetRoleInvalid</code> - The EC2 Fleet or Spot Fleet does not have the required permissions either to launch or terminate an instance.</p> </li> <li> <p> <code>allLaunchSpecsTemporarilyBlacklisted</code> - None of the configurations are valid, and several attempts to launch instances have failed. For more information, see the description of the event.</p> </li> <li> <p> <code>spotInstanceCountLimitExceeded</code> - You''ve reached the limit on the number of Spot Instances that you can launch.</p> </li> <li> <p> <code>spotFleetRequestConfigurationInvalid</code> - The configuration is not valid. For more information, see the description of the event.</p> </li> </ul> <p> <code>fleetRequestChange</code> events:</p> <ul> <li> <p> <code>active</code> - The EC2 Fleet or Spot Fleet request has been validated and Amazon EC2 is attempting to maintain the target number of running instances.</p> </li> <li> <p> <code>cancelled</code> - The EC2 Fleet or Spot Fleet request is canceled and has no running instances. The EC2 Fleet or Spot Fleet will be deleted two days after its instances are terminated.</p> </li> <li> <p> <code>cancelled_running</code> - The EC2 Fleet or Spot Fleet request is canceled and does not launch additional instances. Its existing instances continue to run until they are interrupted or terminated. The request remains in this state until all instances are interrupted or terminated.</p> </li> <li> <p> <code>cancelled_terminating</code> - The EC2 Fleet or Spot Fleet request is canceled and its instances are terminating. The request remains in this state until all instances are terminated.</p> </li> <li> <p> <code>expired</code> - The EC2 Fleet or Spot Fleet request has expired. If the request was created with <code>TerminateInstancesWithExpiration</code> set, a subsequent <code>terminated</code> event indicates that the instances are terminated.</p> </li> <li> <p> <code>modify_in_progress</code> - The EC2 Fleet or Spot Fleet request is being modified. The request remains in this state until the modification is fully processed.</p> </li> <li> <p> <code>modify_succeeded</code> - The EC2 Fleet or Spot Fleet request was modified.</p> </li> <li> <p> <code>submitted</code> - The EC2 Fleet or Spot Fleet request is being evaluated and Amazon EC2 is preparing to launch the target number of instances.</p> </li> <li> <p> <code>progress</code> - The EC2 Fleet or Spot Fleet request is in the process of being fulfilled.</p> </li> </ul> <p> <code>instanceChange</code> events:</p> <ul> <li> <p> <code>launched</code> - A new instance was launched.</p> </li> <li> <p> <code>terminated</code> - An instance was terminated by the user.</p> </li> <li> <p> <code>termination_notified</code> - An instance termination notification was sent when a Spot Instance was terminated by Amazon EC2 during scale-down, when the target capacity of the fleet was modified down, for example, from a target capacity of 4 to a target capacity of 3.</p> </li> </ul> <p> <code>Information</code> events:</p> <ul> <li> <p> <code>fleetProgressHalted</code> - The price in every launch specification is not valid because it is below the Spot price (all the launch specifications have produced <code>launchSpecUnusable</code> events). A launch specification might become valid if the Spot price changes.</p> </li> <li> <p> <code>launchSpecTemporarilyBlacklisted</code> - The configuration is not valid and several attempts to launch instances have failed. For more information, see the description of the event.</p> </li> <li> <p> <code>launchSpecUnusable</code> - The price in a launch specification is not valid because it is below the Spot price.</p> </li> <li> <p> <code>registerWithLoadBalancersFailed</code> - An attempt to register instances with load balancers failed. For more information, see the description of the event.</p> </li> </ul>'
        instanceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the instance. This information is available only for <code>instanceChange</code> events.
      description: Describes an EC2 Fleet or Spot Fleet event.
    ExcludedInstanceType:
      type: string
      pattern: '[a-zA-Z0-9\.\*]+'
      minLength: 1
      maxLength: 30
    StringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: item
    TransitGatewayRouteTableRoute:
      type: object
      properties:
        destinationCidr:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The CIDR block used for destination matches.
        state:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The state of the route.
        routeOrigin:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The route origin. The following are the possible values:</p> <ul> <li> <p>static</p> </li> <li> <p>propagated</p> </li> </ul>'
        prefixListId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the prefix list.
        attachmentId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the route attachment.
        resourceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the resource for the route attachment.
        resourceType:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The resource type for the route attachment.
      description: Describes a route in a transit gateway route table.
    Explanation:
      type: object
      properties:
        acl:
          allOf:
            - $ref: '#/components/schemas/AnalysisComponent'
            - description: The network ACL.
        aclRule:
          allOf:
            - $ref: '#/components/schemas/AnalysisAclRule'
            - description: The network ACL rule.
        address:
          allOf:
            - $ref: '#/components/schemas/IpAddress'
            - description: 'The IPv4 address, in CIDR notation.'
        addressSet:
          allOf:
            - $ref: '#/components/schemas/IpAddressList'
            - description: 'The IPv4 addresses, in CIDR notation.'
        attachedTo:
          allOf:
            - $ref: '#/components/schemas/AnalysisComponent'
            - description: The resource to which the component is attached.
        availabilityZoneSet:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: The Availability Zones.
        cidrSet:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: The CIDR ranges.
        component:
          allOf:
            - $ref: '#/components/schemas/AnalysisComponent'
            - description: The component.
        customerGateway:
          allOf:
            - $ref: '#/components/schemas/AnalysisComponent'
            - description: The customer gateway.
        destination:
          allOf:
            - $ref: '#/components/schemas/AnalysisComponent'
            - description: The destination.
        destinationVpc:
          allOf:
            - $ref: '#/components/schemas/AnalysisComponent'
            - description: The destination VPC.
        direction:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The direction. The following are the possible values:</p> <ul> <li> <p>egress</p> </li> <li> <p>ingress</p> </li> </ul>'
        explanationCode:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The explanation code.
        ingressRouteTable:
          allOf:
            - $ref: '#/components/schemas/AnalysisComponent'
            - description: The route table.
        internetGateway:
          allOf:
            - $ref: '#/components/schemas/AnalysisComponent'
            - description: The internet gateway.
        loadBalancerArn:
          allOf:
            - $ref: '#/components/schemas/ResourceArn'
            - description: The Amazon Resource Name (ARN) of the load balancer.
        classicLoadBalancerListener:
          allOf:
            - $ref: '#/components/schemas/AnalysisLoadBalancerListener'
            - description: The listener for a Classic Load Balancer.
        loadBalancerListenerPort:
          allOf:
            - $ref: '#/components/schemas/Port'
            - description: The listener port of the load balancer.
        loadBalancerTarget:
          allOf:
            - $ref: '#/components/schemas/AnalysisLoadBalancerTarget'
            - description: The target.
        loadBalancerTargetGroup:
          allOf:
            - $ref: '#/components/schemas/AnalysisComponent'
            - description: The target group.
        loadBalancerTargetGroupSet:
          allOf:
            - $ref: '#/components/schemas/AnalysisComponentList'
            - description: The target groups.
        loadBalancerTargetPort:
          allOf:
            - $ref: '#/components/schemas/Port'
            - description: The target port.
        elasticLoadBalancerListener:
          allOf:
            - $ref: '#/components/schemas/AnalysisComponent'
            - description: The load balancer listener.
        missingComponent:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The missing component.
        natGateway:
          allOf:
            - $ref: '#/components/schemas/AnalysisComponent'
            - description: The NAT gateway.
        networkInterface:
          allOf:
            - $ref: '#/components/schemas/AnalysisComponent'
            - description: The network interface.
        packetField:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The packet field.
        vpcPeeringConnection:
          allOf:
            - $ref: '#/components/schemas/AnalysisComponent'
            - description: The VPC peering connection.
        port:
          allOf:
            - $ref: '#/components/schemas/Port'
            - description: The port.
        portRangeSet:
          allOf:
            - $ref: '#/components/schemas/PortRangeList'
            - description: The port ranges.
        prefixList:
          allOf:
            - $ref: '#/components/schemas/AnalysisComponent'
            - description: The prefix list.
        protocolSet:
          allOf:
            - $ref: '#/components/schemas/StringList'
            - description: The protocols.
        routeTableRoute:
          allOf:
            - $ref: '#/components/schemas/AnalysisRouteTableRoute'
            - description: The route table route.
        routeTable:
          allOf:
            - $ref: '#/components/schemas/AnalysisComponent'
            - description: The route table.
        securityGroup:
          allOf:
            - $ref: '#/components/schemas/AnalysisComponent'
            - description: The security group.
        securityGroupRule:
          allOf:
            - $ref: '#/components/schemas/AnalysisSecurityGroupRule'
            - description: The security group rule.
        securityGroupSet:
          allOf:
            - $ref: '#/components/schemas/AnalysisComponentList'
            - description: The security groups.
        sourceVpc:
          allOf:
            - $ref: '#/components/schemas/AnalysisComponent'
            - description: The source VPC.
        state:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The state.
        subnet:
          allOf:
            - $ref: '#/components/schemas/AnalysisComponent'
            - description: The subnet.
        subnetRouteTable:
          allOf:
            - $ref: '#/components/schemas/AnalysisComponent'
            - description: The route table for the subnet.
        vpc:
          allOf:
            - $ref: '#/components/schemas/AnalysisComponent'
            - description: The component VPC.
        vpcEndpoint:
          allOf:
            - $ref: '#/components/schemas/AnalysisComponent'
            - description: The VPC endpoint.
        vpnConnection:
          allOf:
            - $ref: '#/components/schemas/AnalysisComponent'
            - description: The VPN connection.
        vpnGateway:
          allOf:
            - $ref: '#/components/schemas/AnalysisComponent'
            - description: The VPN gateway.
        transitGateway:
          allOf:
            - $ref: '#/components/schemas/AnalysisComponent'
            - description: The transit gateway.
        transitGatewayRouteTable:
          allOf:
            - $ref: '#/components/schemas/AnalysisComponent'
            - description: The transit gateway route table.
        transitGatewayRouteTableRoute:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayRouteTableRoute'
            - description: The transit gateway route table route.
        transitGatewayAttachment:
          allOf:
            - $ref: '#/components/schemas/AnalysisComponent'
            - description: The transit gateway attachment.
      description: 'Describes an explanation code for an unreachable path. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/reachability/explanation-codes.html">Reachability Analyzer explanation codes</a>.'
    ExplanationList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Explanation'
          - xml:
              name: item
    ExportClientVpnClientCertificateRevocationListRequest:
      type: object
      required:
        - ClientVpnEndpointId
      title: ExportClientVpnClientCertificateRevocationListRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    ExportClientVpnClientConfigurationRequest:
      type: object
      required:
        - ClientVpnEndpointId
      title: ExportClientVpnClientConfigurationRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    ExportImageRequest:
      type: object
      required:
        - DiskImageFormat
        - ImageId
        - S3ExportLocation
      title: ExportImageRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The name of the role that grants VM Import/Export permission to export images to your Amazon S3 bucket. If this parameter is not specified, the default role is named ''vmimport''.'
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/TagSpecificationList'
            - description: The tags to apply to the export image task during creation.
    ExportTaskS3Location:
      type: object
      properties:
        s3Bucket:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The destination Amazon S3 bucket.
        s3Prefix:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The prefix (logical hierarchy) in the bucket.
      description: Describes the destination for an export image task.
    ExportImageTask:
      type: object
      properties:
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A description of the image being exported.
        exportImageTaskId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the export image task.
        imageId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the image.
        progress:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The percent complete of the export image task.
        s3ExportLocation:
          allOf:
            - $ref: '#/components/schemas/ExportTaskS3Location'
            - description: Information about the destination Amazon S3 bucket.
        status:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The status of the export image task. The possible values are <code>active</code>, <code>completed</code>, <code>deleting</code>, and <code>deleted</code>.'
        statusMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The status message for the export image task.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: Any tags assigned to the export image task.
      description: Describes an export image task.
    ExportImageTaskIdList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ExportImageTaskId'
          - xml:
              name: ExportImageTaskId
    ExportToS3Task:
      type: object
      properties:
        containerFormat:
          allOf:
            - $ref: '#/components/schemas/ContainerFormat'
            - description: 'The container format used to combine disk images with metadata (such as OVF). If absent, only the disk image is exported.'
        diskImageFormat:
          allOf:
            - $ref: '#/components/schemas/DiskImageFormat'
            - description: The format for the exported image.
        s3Bucket:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon S3 bucket for the destination image. The destination bucket must exist and grant WRITE and READ_ACP permissions to the Amazon Web Services account <code>vm-import-export@amazon.com</code>.
        s3Key:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The encryption key for your S3 bucket.
      description: Describes the format and location for the export task.
    InstanceExportDetails:
      type: object
      properties:
        instanceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the resource being exported.
        targetEnvironment:
          allOf:
            - $ref: '#/components/schemas/ExportEnvironment'
            - description: The target virtualization environment.
      description: Describes an instance to export.
    ExportTaskState:
      type: string
      enum:
        - active
        - cancelling
        - cancelled
        - completed
    ExportTaskS3LocationRequest:
      type: object
      required:
        - S3Bucket
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The prefix (logical hierarchy) in the bucket.
      description: Describes the destination for an export image task.
    ExportTransitGatewayRoutesRequest:
      type: object
      required:
        - TransitGatewayRouteTableId
        - S3Bucket
      title: ExportTransitGatewayRoutesRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayRouteTableId'
            - description: The ID of the route table.
        Filter:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    FailedCapacityReservationFleetCancellationResult:
      type: object
      properties:
        capacityReservationFleetId:
          allOf:
            - $ref: '#/components/schemas/CapacityReservationFleetId'
            - description: The ID of the Capacity Reservation Fleet that could not be cancelled.
        cancelCapacityReservationFleetError:
          allOf:
            - $ref: '#/components/schemas/CancelCapacityReservationFleetError'
            - description: Information about the Capacity Reservation Fleet cancellation error.
      description: Describes a Capacity Reservation Fleet that could not be cancelled.
    FailedQueuedPurchaseDeletion:
      type: object
      properties:
        error:
          allOf:
            - $ref: '#/components/schemas/DeleteQueuedReservedInstancesError'
            - description: The error.
        reservedInstancesId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Reserved Instance.
      description: Describes a Reserved Instance whose queued purchase was not deleted.
    FastLaunchLaunchTemplateSpecificationRequest:
      type: object
      required:
        - Version
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The version of the launch template to use for faster launching for a Windows AMI.
      description: '<p>Request to create a launch template for a fast-launch enabled Windows AMI.</p> <note> <p>Note - You can specify either the <code>LaunchTemplateName</code> or the <code>LaunchTemplateId</code>, but not both.</p> </note>'
    FastLaunchSnapshotConfigurationRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of pre-provisioned snapshots to keep on hand for a fast-launch enabled Windows AMI.
      description: Configuration settings for creating and managing pre-provisioned snapshots for a fast-launch enabled Windows AMI.
    FindingsFound:
      type: string
      enum:
        - 'true'
        - 'false'
        - unknown
    FleetActivityStatus:
      type: string
      enum:
        - error
        - pending_fulfillment
        - pending_termination
        - fulfilled
    IntegerWithConstraints:
      type: integer
      minimum: 0
    FleetCapacityReservation:
      type: object
      properties:
        capacityReservationId:
          allOf:
            - $ref: '#/components/schemas/CapacityReservationId'
            - description: The ID of the Capacity Reservation.
        availabilityZoneId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Availability Zone in which the Capacity Reservation reserves capacity.
        instanceType:
          allOf:
            - $ref: '#/components/schemas/InstanceType'
            - description: The instance type for which the Capacity Reservation reserves capacity.
        instancePlatform:
          allOf:
            - $ref: '#/components/schemas/CapacityReservationInstancePlatform'
            - description: The type of operating system for which the Capacity Reservation reserves capacity.
        availabilityZone:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Availability Zone in which the Capacity Reservation reserves capacity.
        totalInstanceCount:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The total number of instances for which the Capacity Reservation reserves capacity.
        fulfilledCapacity:
          allOf:
            - $ref: '#/components/schemas/Double'
            - description: 'The number of capacity units fulfilled by the Capacity Reservation. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/crfleet-concepts.html#target-capacity"> Total target capacity</a> in the Amazon EC2 User Guide.'
        ebsOptimized:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the Capacity Reservation reserves capacity for EBS-optimized instance types.
        createDate:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: The date and time at which the Capacity Reservation was created.
        weight:
          allOf:
            - $ref: '#/components/schemas/DoubleWithConstraints'
            - description: 'The weight of the instance type in the Capacity Reservation Fleet. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/crfleet-concepts.html#instance-weight"> Instance type weight</a> in the Amazon EC2 User Guide.'
        priority:
          allOf:
            - $ref: '#/components/schemas/IntegerWithConstraints'
            - description: 'The priority of the instance type in the Capacity Reservation Fleet. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/crfleet-concepts.html#instance-priority"> Instance type priority</a> in the Amazon EC2 User Guide.'
      description: Information about a Capacity Reservation in a Capacity Reservation Fleet.
    FleetExcessCapacityTerminationPolicy:
      type: string
      enum:
        - no-termination
        - termination
    FleetLaunchTemplateConfigList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/FleetLaunchTemplateConfig'
          - xml:
              name: item
    TargetCapacitySpecification:
      type: object
      properties:
        totalTargetCapacity:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The number of units to request, filled using <code>DefaultTargetCapacityType</code>.'
        onDemandTargetCapacity:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The number of On-Demand units to request. If you specify a target capacity for Spot units, you cannot specify a target capacity for On-Demand units.'
        spotTargetCapacity:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The maximum number of Spot units to launch. If you specify a target capacity for On-Demand units, you cannot specify a target capacity for Spot units.'
        defaultTargetCapacityType:
          allOf:
            - $ref: '#/components/schemas/DefaultTargetCapacityType'
            - description: 'The default <code>TotalTargetCapacity</code>, which is either <code>Spot</code> or <code>On-Demand</code>.'
        targetCapacityUnitType:
          allOf:
            - $ref: '#/components/schemas/TargetCapacityUnitType'
            - description: '<p>The unit for the target capacity.</p> <p>Default: <code>units</code> (translates to number of instances)</p>'
      description: '<p>The number of units to request. You can choose to set the target capacity in terms of instances or a performance characteristic that is important to your application workload, such as vCPUs, memory, or I/O. If the request type is <code>maintain</code>, you can specify a target capacity of 0 and add capacity later.</p> <p>You can use the On-Demand Instance <code>MaxTotalPrice</code> parameter, the Spot Instance <code>MaxTotalPrice</code>, or both to ensure that your fleet cost does not exceed your budget. If you set a maximum price per hour for the On-Demand Instances and Spot Instances in your request, EC2 Fleet will launch instances until it reaches the maximum amount that you''re willing to pay. When the maximum amount you''re willing to pay is reached, the fleet stops launching instances even if it hasn’t met the target capacity. The <code>MaxTotalPrice</code> parameters are located in <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_OnDemandOptions.html">OnDemandOptions</a> and <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SpotOptions">SpotOptions</a>.</p>'
    SpotOptions:
      type: object
      properties:
        allocationStrategy:
          allOf:
            - $ref: '#/components/schemas/SpotAllocationStrategy'
            - description: '<p>The strategy that determines how to allocate the target Spot Instance capacity across the Spot Instance pools specified by the EC2 Fleet.</p> <p> <code>lowest-price</code> - EC2 Fleet launches instances from the Spot Instance pools with the lowest price.</p> <p> <code>diversified</code> - EC2 Fleet launches instances from all of the Spot Instance pools that you specify.</p> <p> <code>capacity-optimized</code> (recommended) - EC2 Fleet launches instances from Spot Instance pools with optimal capacity for the number of instances that are launching. To give certain instance types a higher chance of launching first, use <code>capacity-optimized-prioritized</code>. Set a priority for each instance type by using the <code>Priority</code> parameter for <code>LaunchTemplateOverrides</code>. You can assign the same priority to different <code>LaunchTemplateOverrides</code>. EC2 implements the priorities on a best-effort basis, but optimizes for capacity first. <code>capacity-optimized-prioritized</code> is supported only if your fleet uses a launch template. Note that if the On-Demand <code>AllocationStrategy</code> is set to <code>prioritized</code>, the same priority is applied when fulfilling On-Demand capacity.</p> <p>Default: <code>lowest-price</code> </p>'
        maintenanceStrategies:
          allOf:
            - $ref: '#/components/schemas/FleetSpotMaintenanceStrategies'
            - description: The strategies for managing your workloads on your Spot Instances that will be interrupted. Currently only the capacity rebalance strategy is available.
        instanceInterruptionBehavior:
          allOf:
            - $ref: '#/components/schemas/SpotInstanceInterruptionBehavior'
            - description: '<p>The behavior when a Spot Instance is interrupted.</p> <p>Default: <code>terminate</code> </p>'
        instancePoolsToUseCount:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: '<p>The number of Spot pools across which to allocate your target Spot capacity. Supported only when <code>AllocationStrategy</code> is set to <code>lowest-price</code>. EC2 Fleet selects the cheapest Spot pools and evenly allocates your target Spot capacity across the number of Spot pools that you specify.</p> <p>Note that EC2 Fleet attempts to draw Spot Instances from the number of pools that you specify on a best effort basis. If a pool runs out of Spot capacity before fulfilling your target capacity, EC2 Fleet will continue to fulfill your request by drawing from the next cheapest pool. To ensure that your target capacity is met, you might receive Spot Instances from more than the number of pools that you specified. Similarly, if most of the pools have no Spot capacity, you might receive your full target capacity from fewer than the number of pools that you specified.</p>'
        singleInstanceType:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: <p>Indicates that the fleet uses a single instance type to launch all Spot Instances in the fleet.</p> <p>Supported only for fleets of type <code>instant</code>.</p>
        singleAvailabilityZone:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: <p>Indicates that the fleet launches all Spot Instances into a single Availability Zone.</p> <p>Supported only for fleets of type <code>instant</code>.</p>
        minTargetCapacity:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: '<p>The minimum target capacity for Spot Instances in the fleet. If the minimum target capacity is not reached, the fleet launches no instances.</p> <p>Supported only for fleets of type <code>instant</code>.</p> <p>At least one of the following must be specified: <code>SingleAvailabilityZone</code> | <code>SingleInstanceType</code> </p>'
        maxTotalPrice:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The maximum amount per hour for Spot Instances that you're willing to pay.
      description: Describes the configuration of Spot Instances in an EC2 Fleet.
    OnDemandOptions:
      type: object
      properties:
        allocationStrategy:
          allOf:
            - $ref: '#/components/schemas/FleetOnDemandAllocationStrategy'
            - description: '<p>The strategy that determines the order of the launch template overrides to use in fulfilling On-Demand capacity.</p> <p> <code>lowest-price</code> - EC2 Fleet uses price to determine the order, launching the lowest price first.</p> <p> <code>prioritized</code> - EC2 Fleet uses the priority that you assigned to each launch template override, launching the highest priority first.</p> <p>Default: <code>lowest-price</code> </p>'
        capacityReservationOptions:
          allOf:
            - $ref: '#/components/schemas/CapacityReservationOptions'
            - description: <p>The strategy for using unused Capacity Reservations for fulfilling On-Demand capacity.</p> <p>Supported only for fleets of type <code>instant</code>.</p>
        singleInstanceType:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: <p>Indicates that the fleet uses a single instance type to launch all On-Demand Instances in the fleet.</p> <p>Supported only for fleets of type <code>instant</code>.</p>
        singleAvailabilityZone:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: <p>Indicates that the fleet launches all On-Demand Instances into a single Availability Zone.</p> <p>Supported only for fleets of type <code>instant</code>.</p>
        minTargetCapacity:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: '<p>The minimum target capacity for On-Demand Instances in the fleet. If the minimum target capacity is not reached, the fleet launches no instances.</p> <p>Supported only for fleets of type <code>instant</code>.</p> <p>At least one of the following must be specified: <code>SingleAvailabilityZone</code> | <code>SingleInstanceType</code> </p>'
        maxTotalPrice:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The maximum amount per hour for On-Demand Instances that you're willing to pay.
      description: Describes the configuration of On-Demand Instances in an EC2 Fleet.
    FleetData:
      type: object
      properties:
        activityStatus:
          allOf:
            - $ref: '#/components/schemas/FleetActivityStatus'
            - description: 'The progress of the EC2 Fleet. If there is an error, the status is <code>error</code>. After all requests are placed, the status is <code>pending_fulfillment</code>. If the size of the EC2 Fleet is equal to or greater than its target capacity, the status is <code>fulfilled</code>. If the size of the EC2 Fleet is decreased, the status is <code>pending_termination</code> while instances are terminating.'
        createTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The creation date and time of the EC2 Fleet.
        fleetId:
          allOf:
            - $ref: '#/components/schemas/FleetId'
            - description: The ID of the EC2 Fleet.
        fleetState:
          allOf:
            - $ref: '#/components/schemas/FleetStateCode'
            - description: The state of the EC2 Fleet.
        clientToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring idempotency</a>.</p> <p>Constraints: Maximum 64 ASCII characters</p>'
        excessCapacityTerminationPolicy:
          allOf:
            - $ref: '#/components/schemas/FleetExcessCapacityTerminationPolicy'
            - description: Indicates whether running instances should be terminated if the target capacity of the EC2 Fleet is decreased below the current size of the EC2 Fleet.
        fulfilledCapacity:
          allOf:
            - $ref: '#/components/schemas/Double'
            - description: The number of units fulfilled by this request compared to the set target capacity.
        fulfilledOnDemandCapacity:
          allOf:
            - $ref: '#/components/schemas/Double'
            - description: The number of units fulfilled by this request compared to the set target On-Demand capacity.
        launchTemplateConfigs:
          allOf:
            - $ref: '#/components/schemas/FleetLaunchTemplateConfigList'
            - description: The launch template and overrides.
        targetCapacitySpecification:
          allOf:
            - $ref: '#/components/schemas/TargetCapacitySpecification'
            - description: 'The number of units to request. You can choose to set the target capacity in terms of instances or a performance characteristic that is important to your application workload, such as vCPUs, memory, or I/O. If the request type is <code>maintain</code>, you can specify a target capacity of 0 and add capacity later.'
        terminateInstancesWithExpiration:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Indicates whether running instances should be terminated when the EC2 Fleet expires. '
        type:
          allOf:
            - $ref: '#/components/schemas/FleetType'
            - description: 'The type of request. Indicates whether the EC2 Fleet only <code>requests</code> the target capacity, or also attempts to <code>maintain</code> it. If you request a certain target capacity, EC2 Fleet only places the required requests; it does not attempt to replenish instances if capacity is diminished, and it does not submit requests in alternative capacity pools if capacity is unavailable. To maintain a certain target capacity, EC2 Fleet places the required requests to meet this target capacity. It also automatically replenishes any interrupted Spot Instances. Default: <code>maintain</code>.'
        validFrom:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: 'The start date and time of the request, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). The default is to start fulfilling the request immediately. '
        validUntil:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: 'The end date and time of the request, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). At this point, no new instance requests are placed or able to fulfill the request. The default end date is 7 days from the current date. '
        replaceUnhealthyInstances:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Indicates whether EC2 Fleet should replace unhealthy Spot Instances. Supported only for fleets of type <code>maintain</code>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/manage-ec2-fleet.html#ec2-fleet-health-checks">EC2 Fleet health checks</a> in the <i>Amazon EC2 User Guide</i>.'
        spotOptions:
          allOf:
            - $ref: '#/components/schemas/SpotOptions'
            - description: The configuration of Spot Instances in an EC2 Fleet.
        onDemandOptions:
          allOf:
            - $ref: '#/components/schemas/OnDemandOptions'
            - description: The allocation strategy of On-Demand Instances in an EC2 Fleet.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags for an EC2 Fleet resource.
        errorSet:
          allOf:
            - $ref: '#/components/schemas/DescribeFleetsErrorSet'
            - description: Information about the instances that could not be launched by the fleet. Valid only when <b>Type</b> is set to <code>instant</code>.
        fleetInstanceSet:
          allOf:
            - $ref: '#/components/schemas/DescribeFleetsInstancesSet'
            - description: Information about the instances that were launched by the fleet. Valid only when <b>Type</b> is set to <code>instant</code>.
        context:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Reserved.
      description: Describes an EC2 Fleet.
    FleetEventType:
      type: string
      enum:
        - instance-change
        - fleet-change
        - service-error
    FleetLaunchTemplateSpecification:
      type: object
      properties:
        launchTemplateId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The ID of the launch template. If you specify the template ID, you can''t specify the template name.'
        launchTemplateName:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateName'
            - description: 'The name of the launch template. If you specify the template name, you can''t specify the template ID.'
        version:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The launch template version number, <code>$Latest</code>, or <code>$Default</code>. You must specify a value, otherwise the request fails.</p> <p>If the value is <code>$Latest</code>, Amazon EC2 uses the latest version of the launch template.</p> <p>If the value is <code>$Default</code>, Amazon EC2 uses the default version of the launch template.</p>'
      description: 'Describes the Amazon EC2 launch template and the launch template version that can be used by a Spot Fleet request to configure Amazon EC2 instances. For information about launch templates, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html">Launching an instance from a launch template</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.'
    FleetLaunchTemplateOverridesList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/FleetLaunchTemplateOverrides'
          - xml:
              name: item
    FleetLaunchTemplateConfig:
      type: object
      properties:
        launchTemplateSpecification:
          allOf:
            - $ref: '#/components/schemas/FleetLaunchTemplateSpecification'
            - description: The launch template.
        overrides:
          allOf:
            - $ref: '#/components/schemas/FleetLaunchTemplateOverridesList'
            - description: Any parameters that you specify override the same parameters in the launch template.
      description: Describes a launch template and overrides.
    FleetLaunchTemplateConfigListRequest:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/FleetLaunchTemplateConfigRequest'
          - xml:
              name: item
      minItems: 0
      maxItems: 50
    FleetLaunchTemplateOverridesListRequest:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/FleetLaunchTemplateOverridesRequest'
          - xml:
              name: item
    PlacementResponse:
      type: object
      properties:
        groupName:
          allOf:
            - $ref: '#/components/schemas/PlacementGroupName'
            - description: The name of the placement group that the instance is in.
      description: Describes the placement of an instance.
    InstanceRequirements:
      type: object
      properties:
        vCpuCount:
          allOf:
            - $ref: '#/components/schemas/VCpuCountRange'
            - description: The minimum and maximum number of vCPUs.
        memoryMiB:
          allOf:
            - $ref: '#/components/schemas/MemoryMiB'
            - description: 'The minimum and maximum amount of memory, in MiB.'
        cpuManufacturerSet:
          allOf:
            - $ref: '#/components/schemas/CpuManufacturerSet'
            - description: '<p>The CPU manufacturers to include.</p> <ul> <li> <p>For instance types with Intel CPUs, specify <code>intel</code>.</p> </li> <li> <p>For instance types with AMD CPUs, specify <code>amd</code>.</p> </li> <li> <p>For instance types with Amazon Web Services CPUs, specify <code>amazon-web-services</code>.</p> </li> </ul> <note> <p>Don''t confuse the CPU manufacturer with the CPU architecture. Instances will be launched with a compatible CPU architecture based on the Amazon Machine Image (AMI) that you specify in your launch template.</p> </note> <p>Default: Any manufacturer</p>'
        memoryGiBPerVCpu:
          allOf:
            - $ref: '#/components/schemas/MemoryGiBPerVCpu'
            - description: '<p>The minimum and maximum amount of memory per vCPU, in GiB.</p> <p>Default: No minimum or maximum limits</p>'
        excludedInstanceTypeSet:
          allOf:
            - $ref: '#/components/schemas/ExcludedInstanceTypeSet'
            - description: '<p>The instance types to exclude. You can use strings with one or more wild cards, represented by an asterisk (<code>*</code>), to exclude an instance type, size, or generation. The following are examples: <code>m5.8xlarge</code>, <code>c5*.*</code>, <code>m5a.*</code>, <code>r*</code>, <code>*3*</code>.</p> <p>For example, if you specify <code>c5*</code>,Amazon EC2 will exclude the entire C5 instance family, which includes all C5a and C5n instance types. If you specify <code>m5a.*</code>, Amazon EC2 will exclude all the M5a instance types, but not the M5n instance types.</p> <p>Default: No excluded instance types</p>'
        instanceGenerationSet:
          allOf:
            - $ref: '#/components/schemas/InstanceGenerationSet'
            - description: '<p>Indicates whether current or previous generation instance types are included. The current generation instance types are recommended for use. Current generation instance types are typically the latest two to three generations in each instance family. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance types</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>For current generation instance types, specify <code>current</code>.</p> <p>For previous generation instance types, specify <code>previous</code>.</p> <p>Default: Current and previous generation instance types</p>'
        spotMaxPricePercentageOverLowestPrice:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: '<p>The price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage above the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 selects instance types with your attributes, it excludes instance types priced above your threshold.</p> <p>The parameter accepts an integer, which Amazon EC2 interprets as a percentage.</p> <p>To turn off price protection, specify a high value, such as <code>999999</code>.</p> <p>This parameter is not supported for <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetSpotPlacementScores.html">GetSpotPlacementScores</a> and <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetInstanceTypesFromInstanceRequirements.html">GetInstanceTypesFromInstanceRequirements</a>.</p> <note> <p>If you set <code>TargetCapacityUnitType</code> to <code>vcpu</code> or <code>memory-mib</code>, the price protection threshold is applied based on the per-vCPU or per-memory price instead of the per-instance price.</p> </note> <p>Default: <code>100</code> </p>'
        onDemandMaxPricePercentageOverLowestPrice:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: '<p>The price protection threshold for On-Demand Instances. This is the maximum you’ll pay for an On-Demand Instance, expressed as a percentage above the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 selects instance types with your attributes, it excludes instance types priced above your threshold.</p> <p>The parameter accepts an integer, which Amazon EC2 interprets as a percentage.</p> <p>To turn off price protection, specify a high value, such as <code>999999</code>.</p> <p>This parameter is not supported for <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetSpotPlacementScores.html">GetSpotPlacementScores</a> and <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetInstanceTypesFromInstanceRequirements.html">GetInstanceTypesFromInstanceRequirements</a>.</p> <note> <p>If you set <code>TargetCapacityUnitType</code> to <code>vcpu</code> or <code>memory-mib</code>, the price protection threshold is applied based on the per-vCPU or per-memory price instead of the per-instance price.</p> </note> <p>Default: <code>20</code> </p>'
        bareMetal:
          allOf:
            - $ref: '#/components/schemas/BareMetal'
            - description: '<p>Indicates whether bare metal instance types must be included, excluded, or required.</p> <ul> <li> <p>To include bare metal instance types, specify <code>included</code>.</p> </li> <li> <p>To require only bare metal instance types, specify <code>required</code>.</p> </li> <li> <p>To exclude bare metal instance types, specify <code>excluded</code>.</p> </li> </ul> <p>Default: <code>excluded</code> </p>'
        burstablePerformance:
          allOf:
            - $ref: '#/components/schemas/BurstablePerformance'
            - description: '<p>Indicates whether burstable performance T instance types are included, excluded, or required. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html">Burstable performance instances</a>.</p> <ul> <li> <p>To include burstable performance instance types, specify <code>included</code>.</p> </li> <li> <p>To require only burstable performance instance types, specify <code>required</code>.</p> </li> <li> <p>To exclude burstable performance instance types, specify <code>excluded</code>.</p> </li> </ul> <p>Default: <code>excluded</code> </p>'
        requireHibernateSupport:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: '<p>Indicates whether instance types must support hibernation for On-Demand Instances.</p> <p>This parameter is not supported for <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetSpotPlacementScores.html">GetSpotPlacementScores</a>.</p> <p>Default: <code>false</code> </p>'
        networkInterfaceCount:
          allOf:
            - $ref: '#/components/schemas/NetworkInterfaceCount'
            - description: '<p>The minimum and maximum number of network interfaces.</p> <p>Default: No minimum or maximum limits</p>'
        localStorage:
          allOf:
            - $ref: '#/components/schemas/LocalStorage'
            - description: '<p>Indicates whether instance types with instance store volumes are included, excluded, or required. For more information, <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html">Amazon EC2 instance store</a> in the <i>Amazon EC2 User Guide</i>.</p> <ul> <li> <p>To include instance types with instance store volumes, specify <code>included</code>.</p> </li> <li> <p>To require only instance types with instance store volumes, specify <code>required</code>.</p> </li> <li> <p>To exclude instance types with instance store volumes, specify <code>excluded</code>.</p> </li> </ul> <p>Default: <code>included</code> </p>'
        localStorageTypeSet:
          allOf:
            - $ref: '#/components/schemas/LocalStorageTypeSet'
            - description: '<p>The type of local storage that is required.</p> <ul> <li> <p>For instance types with hard disk drive (HDD) storage, specify <code>hdd</code>.</p> </li> <li> <p>For instance types with solid state drive (SDD) storage, specify <code>sdd</code>.</p> </li> </ul> <p>Default: <code>hdd</code> and <code>sdd</code> </p>'
        totalLocalStorageGB:
          allOf:
            - $ref: '#/components/schemas/TotalLocalStorageGB'
            - description: '<p>The minimum and maximum amount of total local storage, in GB.</p> <p>Default: No minimum or maximum limits</p>'
        baselineEbsBandwidthMbps:
          allOf:
            - $ref: '#/components/schemas/BaselineEbsBandwidthMbps'
            - description: '<p>The minimum and maximum baseline bandwidth to Amazon EBS, in Mbps. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-optimized.html">Amazon EBS–optimized instances</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>Default: No minimum or maximum limits</p>'
        acceleratorTypeSet:
          allOf:
            - $ref: '#/components/schemas/AcceleratorTypeSet'
            - description: '<p>The accelerator types that must be on the instance type.</p> <ul> <li> <p>For instance types with GPU accelerators, specify <code>gpu</code>.</p> </li> <li> <p>For instance types with FPGA accelerators, specify <code>fpga</code>.</p> </li> <li> <p>For instance types with inference accelerators, specify <code>inference</code>.</p> </li> </ul> <p>Default: Any accelerator type</p>'
        acceleratorCount:
          allOf:
            - $ref: '#/components/schemas/AcceleratorCount'
            - description: '<p>The minimum and maximum number of accelerators (GPUs, FPGAs, or Amazon Web Services Inferentia chips) on an instance.</p> <p>To exclude accelerator-enabled instance types, set <code>Max</code> to <code>0</code>.</p> <p>Default: No minimum or maximum limits</p>'
        acceleratorManufacturerSet:
          allOf:
            - $ref: '#/components/schemas/AcceleratorManufacturerSet'
            - description: '<p>Indicates whether instance types must have accelerators by specific manufacturers.</p> <ul> <li> <p>For instance types with NVIDIA devices, specify <code>nvidia</code>.</p> </li> <li> <p>For instance types with AMD devices, specify <code>amd</code>.</p> </li> <li> <p>For instance types with Amazon Web Services devices, specify <code>amazon-web-services</code>.</p> </li> <li> <p>For instance types with Xilinx devices, specify <code>xilinx</code>.</p> </li> </ul> <p>Default: Any manufacturer</p>'
        acceleratorNameSet:
          allOf:
            - $ref: '#/components/schemas/AcceleratorNameSet'
            - description: '<p>The accelerators that must be on the instance type.</p> <ul> <li> <p>For instance types with NVIDIA A100 GPUs, specify <code>a100</code>.</p> </li> <li> <p>For instance types with NVIDIA V100 GPUs, specify <code>v100</code>.</p> </li> <li> <p>For instance types with NVIDIA K80 GPUs, specify <code>k80</code>.</p> </li> <li> <p>For instance types with NVIDIA T4 GPUs, specify <code>t4</code>.</p> </li> <li> <p>For instance types with NVIDIA M60 GPUs, specify <code>m60</code>.</p> </li> <li> <p>For instance types with AMD Radeon Pro V520 GPUs, specify <code>radeon-pro-v520</code>.</p> </li> <li> <p>For instance types with Xilinx VU9P FPGAs, specify <code>vu9p</code>.</p> </li> </ul> <p>Default: Any accelerator</p>'
        acceleratorTotalMemoryMiB:
          allOf:
            - $ref: '#/components/schemas/AcceleratorTotalMemoryMiB'
            - description: '<p>The minimum and maximum amount of total accelerator memory, in MiB.</p> <p>Default: No minimum or maximum limits</p>'
      description: '<p>The attributes for the instance types. When you specify instance attributes, Amazon EC2 will identify instance types with these attributes.</p> <p>When you specify multiple parameters, you get instance types that satisfy all of the specified parameters. If you specify multiple values for a parameter, you get instance types that satisfy any of the specified values.</p> <note> <p>You must specify <code>VCpuCount</code> and <code>MemoryMiB</code>. All other parameters are optional. Any unspecified optional parameter is set to its default.</p> </note> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-attribute-based-instance-type-selection.html">Attribute-based instance type selection for EC2 Fleet</a>, <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-attribute-based-instance-type-selection.html">Attribute-based instance type selection for Spot Fleet</a>, and <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-placement-score.html">Spot placement score</a> in the <i>Amazon EC2 User Guide</i>.</p>'
    FleetLaunchTemplateOverrides:
      type: object
      properties:
        instanceType:
          allOf:
            - $ref: '#/components/schemas/InstanceType'
            - description: '<p>The instance type.</p> <note> <p>If you specify <code>InstanceTypes</code>, you can''t specify <code>InstanceRequirements</code>.</p> </note>'
        maxPrice:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The maximum price per unit hour that you are willing to pay for a Spot Instance.
        subnetId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the subnet in which to launch the instances.
        availabilityZone:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Availability Zone in which to launch the instances.
        weightedCapacity:
          allOf:
            - $ref: '#/components/schemas/Double'
            - description: The number of units provided by the specified instance type.
        priority:
          allOf:
            - $ref: '#/components/schemas/Double'
            - description: '<p>The priority for the launch template override. The highest priority is launched first.</p> <p>If the On-Demand <code>AllocationStrategy</code> is set to <code>prioritized</code>, EC2 Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity.</p> <p>If the Spot <code>AllocationStrategy</code> is set to <code>capacity-optimized-prioritized</code>, EC2 Fleet uses priority on a best-effort basis to determine which launch template override to use in fulfilling Spot capacity, but optimizes for capacity first.</p> <p>Valid values are whole numbers starting at <code>0</code>. The lower the number, the higher the priority. If no number is set, the override has the lowest priority. You can set the same priority for different launch template overrides.</p>'
        placement:
          allOf:
            - $ref: '#/components/schemas/PlacementResponse'
            - description: 'The location where the instance launched, if applicable.'
        instanceRequirements:
          allOf:
            - $ref: '#/components/schemas/InstanceRequirements'
            - description: '<p>The attributes for the instance types. When you specify instance attributes, Amazon EC2 will identify instance types with those attributes.</p> <note> <p>If you specify <code>InstanceRequirements</code>, you can''t specify <code>InstanceTypes</code>.</p> </note>'
      description: Describes overrides for a launch template.
    FleetLaunchTemplateOverridesRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/InstanceRequirementsRequest'
            - description: '<p>The attributes for the instance types. When you specify instance attributes, Amazon EC2 will identify instance types with those attributes.</p> <note> <p>If you specify <code>InstanceRequirements</code>, you can''t specify <code>InstanceTypes</code>.</p> </note>'
      description: Describes overrides for a launch template.
    FleetLaunchTemplateSpecificationRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The launch template version number, <code>$Latest</code>, or <code>$Default</code>. You must specify a value, otherwise the request fails.</p> <p>If the value is <code>$Latest</code>, Amazon EC2 uses the latest version of the launch template.</p> <p>If the value is <code>$Default</code>, Amazon EC2 uses the default version of the launch template.</p>'
      description: 'Describes the Amazon EC2 launch template and the launch template version that can be used by an EC2 Fleet to configure Amazon EC2 instances. For information about launch templates, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html">Launching an instance from a launch template</a> in the <i>Amazon EC2 User Guide</i>.'
    FleetOnDemandAllocationStrategy:
      type: string
      enum:
        - lowest-price
        - prioritized
    FleetReplacementStrategy:
      type: string
      enum:
        - launch
        - launch-before-terminate
    FleetSpotCapacityRebalance:
      type: object
      properties:
        replacementStrategy:
          allOf:
            - $ref: '#/components/schemas/FleetReplacementStrategy'
            - description: '<p>The replacement strategy to use. Only available for fleets of type <code>maintain</code>.</p> <p> <code>launch</code> - EC2 Fleet launches a new replacement Spot Instance when a rebalance notification is emitted for an existing Spot Instance in the fleet. EC2 Fleet does not terminate the instances that receive a rebalance notification. You can terminate the old instances, or you can leave them running. You are charged for all instances while they are running. </p> <p> <code>launch-before-terminate</code> - EC2 Fleet launches a new replacement Spot Instance when a rebalance notification is emitted for an existing Spot Instance in the fleet, and then, after a delay that you specify (in <code>TerminationDelay</code>), terminates the instances that received a rebalance notification.</p>'
        terminationDelay:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: '<p>The amount of time (in seconds) that Amazon EC2 waits before terminating the old Spot Instance after launching a new replacement Spot Instance.</p> <p>Required when <code>ReplacementStrategy</code> is set to <code>launch-before-terminate</code>.</p> <p>Not valid when <code>ReplacementStrategy</code> is set to <code>launch</code>.</p> <p>Valid values: Minimum value of <code>120</code> seconds. Maximum value of <code>7200</code> seconds.</p>'
      description: The strategy to use when Amazon EC2 emits a signal that your Spot Instance is at an elevated risk of being interrupted.
    FleetSpotCapacityRebalanceRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: '<p>The amount of time (in seconds) that Amazon EC2 waits before terminating the old Spot Instance after launching a new replacement Spot Instance.</p> <p>Required when <code>ReplacementStrategy</code> is set to <code>launch-before-terminate</code>.</p> <p>Not valid when <code>ReplacementStrategy</code> is set to <code>launch</code>.</p> <p>Valid values: Minimum value of <code>120</code> seconds. Maximum value of <code>7200</code> seconds.</p>'
      description: 'The Spot Instance replacement strategy to use when Amazon EC2 emits a rebalance notification signal that your Spot Instance is at an elevated risk of being interrupted. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-capacity-rebalance.html">Capacity rebalancing</a> in the <i>Amazon EC2 User Guide</i>.'
    FleetSpotMaintenanceStrategies:
      type: object
      properties:
        capacityRebalance:
          allOf:
            - $ref: '#/components/schemas/FleetSpotCapacityRebalance'
            - description: The strategy to use when Amazon EC2 emits a signal that your Spot Instance is at an elevated risk of being interrupted.
      description: The strategies for managing your Spot Instances that are at an elevated risk of being interrupted.
    FleetSpotMaintenanceStrategiesRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/FleetSpotCapacityRebalanceRequest'
            - description: The strategy to use when Amazon EC2 emits a signal that your Spot Instance is at an elevated risk of being interrupted.
      description: The strategies for managing your Spot Instances that are at an elevated risk of being interrupted.
    Float:
      type: number
      format: float
    TrafficType:
      type: string
      enum:
        - ACCEPT
        - REJECT
        - ALL
    LogDestinationType:
      type: string
      enum:
        - cloud-watch-logs
        - s3
    FlowLog:
      type: object
      properties:
        creationTime:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: The date and time the flow log was created.
        deliverLogsErrorMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'Information about the error that occurred. <code>Rate limited</code> indicates that CloudWatch Logs throttling has been applied for one or more network interfaces, or that you''ve reached the limit on the number of log groups that you can create. <code>Access error</code> indicates that the IAM role associated with the flow log does not have sufficient permissions to publish to CloudWatch Logs. <code>Unknown error</code> indicates an internal error.'
        deliverLogsPermissionArn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ARN of the IAM role that posts logs to CloudWatch Logs.
        deliverLogsStatus:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The status of the logs delivery (<code>SUCCESS</code> | <code>FAILED</code>).
        flowLogId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The flow log ID.
        flowLogStatus:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The status of the flow log (<code>ACTIVE</code>).
        logGroupName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the flow log group.
        resourceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the resource on which the flow log was created.
        trafficType:
          allOf:
            - $ref: '#/components/schemas/TrafficType'
            - description: The type of traffic captured for the flow log.
        logDestinationType:
          allOf:
            - $ref: '#/components/schemas/LogDestinationType'
            - description: The type of destination to which the flow log data is published. Flow log data can be published to CloudWatch Logs or Amazon S3.
        logDestination:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The destination to which the flow log data is published. Flow log data can be published to an CloudWatch Logs log group or an Amazon S3 bucket. If the flow log publishes to CloudWatch Logs, this element indicates the Amazon Resource Name (ARN) of the CloudWatch Logs log group to which the data is published. If the flow log publishes to Amazon S3, this element indicates the ARN of the Amazon S3 bucket to which the data is published.'
        logFormat:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The format of the flow log record.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags for the flow log.
        maxAggregationInterval:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: '<p>The maximum interval of time, in seconds, during which a flow of packets is captured and aggregated into a flow log record.</p> <p>When a network interface is attached to a <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances">Nitro-based instance</a>, the aggregation interval is always 60 seconds (1 minute) or less, regardless of the specified value.</p> <p>Valid Values: <code>60</code> | <code>600</code> </p>'
        destinationOptions:
          allOf:
            - $ref: '#/components/schemas/DestinationOptionsResponse'
            - description: The destination options.
      description: Describes a flow log.
    FlowLogResourceIds:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/FlowLogResourceId'
          - xml:
              name: item
    FlowLogsResourceType:
      type: string
      enum:
        - VPC
        - Subnet
        - NetworkInterface
    FpgaDeviceCount:
      type: integer
    FpgaDeviceName:
      type: string
    FpgaDeviceManufacturerName:
      type: string
    FpgaDeviceMemoryInfo:
      type: object
      properties:
        sizeInMiB:
          allOf:
            - $ref: '#/components/schemas/FpgaDeviceMemorySize'
            - description: 'The size of the memory available to the FPGA accelerator, in MiB.'
      description: Describes the memory for the FPGA accelerator for the instance type.
    FpgaDeviceInfo:
      type: object
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/FpgaDeviceName'
            - description: The name of the FPGA accelerator.
        manufacturer:
          allOf:
            - $ref: '#/components/schemas/FpgaDeviceManufacturerName'
            - description: The manufacturer of the FPGA accelerator.
        count:
          allOf:
            - $ref: '#/components/schemas/FpgaDeviceCount'
            - description: The count of FPGA accelerators for the instance type.
        memoryInfo:
          allOf:
            - $ref: '#/components/schemas/FpgaDeviceMemoryInfo'
            - description: Describes the memory for the FPGA accelerator for the instance type.
      description: Describes the FPGA accelerator for the instance type.
    FpgaDeviceInfoList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/FpgaDeviceInfo'
          - xml:
              name: item
    FpgaDeviceMemorySize:
      type: integer
    PciId:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the vendor for the subsystem.
      description: Describes the data that identifies an Amazon FPGA image (AFI) on the PCI bus.
    FpgaImageState:
      type: object
      properties:
        code:
          allOf:
            - $ref: '#/components/schemas/FpgaImageStateCode'
            - description: '<p>The state. The following are the possible values:</p> <ul> <li> <p> <code>pending</code> - AFI bitstream generation is in progress.</p> </li> <li> <p> <code>available</code> - The AFI is available for use.</p> </li> <li> <p> <code>failed</code> - AFI bitstream generation failed.</p> </li> <li> <p> <code>unavailable</code> - The AFI is no longer available for use.</p> </li> </ul>'
        message:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'If the state is <code>failed</code>, this is the error message.'
      description: Describes the state of the bitstream generation process for an Amazon FPGA image (AFI).
    FpgaImage:
      type: object
      properties:
        fpgaImageId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The FPGA image identifier (AFI ID).
        fpgaImageGlobalId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The global FPGA image identifier (AGFI ID).
        name:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the AFI.
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The description of the AFI.
        shellVersion:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The version of the Amazon Web Services Shell that was used to create the bitstream.
        pciId:
          allOf:
            - $ref: '#/components/schemas/PciId'
            - description: Information about the PCI bus.
        state:
          allOf:
            - $ref: '#/components/schemas/FpgaImageState'
            - description: Information about the state of the AFI.
        createTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The date and time the AFI was created.
        updateTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The time of the most recent update to the AFI.
        ownerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Amazon Web Services account that owns the AFI.
        ownerAlias:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The alias of the AFI owner. Possible values include <code>self</code>, <code>amazon</code>, and <code>aws-marketplace</code>.'
        productCodes:
          allOf:
            - $ref: '#/components/schemas/ProductCodeList'
            - description: The product codes for the AFI.
        tags:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: Any tags assigned to the AFI.
        public:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the AFI is public.
        dataRetentionSupport:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether data retention support is enabled for the AFI.
      description: Describes an Amazon FPGA image (AFI).
    LoadPermissionList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/LoadPermission'
          - xml:
              name: item
    FpgaImageStateCode:
      type: string
      enum:
        - pending
        - failed
        - available
        - unavailable
    totalFpgaMemory:
      type: integer
    FpgaInfo:
      type: object
      properties:
        fpgas:
          allOf:
            - $ref: '#/components/schemas/FpgaDeviceInfoList'
            - description: Describes the FPGAs for the instance type.
        totalFpgaMemoryInMiB:
          allOf:
            - $ref: '#/components/schemas/totalFpgaMemory'
            - description: The total memory of all FPGA accelerators for the instance type.
      description: Describes the FPGAs for the instance type.
    FreeTierEligibleFlag:
      type: boolean
    GVCDMaxResults:
      type: integer
      minimum: 200
      maximum: 1000
    GatewayAssociationState:
      type: string
      enum:
        - associated
        - not-associated
        - associating
        - disassociating
    GetAssociatedEnclaveCertificateIamRolesRequest:
      type: object
      title: GetAssociatedEnclaveCertificateIamRolesRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    GetAssociatedIpv6PoolCidrsRequest:
      type: object
      required:
        - PoolId
      title: GetAssociatedIpv6PoolCidrsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    Ipv6CidrAssociationSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Ipv6CidrAssociation'
          - xml:
              name: item
    GetCapacityReservationUsageRequest:
      type: object
      required:
        - CapacityReservationId
      title: GetCapacityReservationUsageRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    GetCapacityReservationUsageRequestMaxResults:
      type: integer
      minimum: 1
      maximum: 1000
    InstanceUsageSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/InstanceUsage'
          - xml:
              name: item
    GetCoipPoolUsageRequest:
      type: object
      required:
        - PoolId
      title: GetCoipPoolUsageRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Ipv4PoolCoipId'
            - description: The ID of the address pool.
        Filter:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    GetConsoleOutputRequest:
      type: object
      required:
        - InstanceId
      title: GetConsoleOutputRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/InstanceId'
            - description: The ID of the instance.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: '<p>When enabled, retrieves the latest console output for the instance.</p> <p>Default: disabled (<code>false</code>)</p>'
    GetConsoleScreenshotRequest:
      type: object
      required:
        - InstanceId
      title: GetConsoleScreenshotRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'When set to <code>true</code>, acts as keystroke input and wakes up an instance that''s in standby or "sleep" mode.'
    UnlimitedSupportedInstanceFamily:
      type: string
      enum:
        - t2
        - t3
        - t3a
        - t4g
    GetDefaultCreditSpecificationRequest:
      type: object
      required:
        - InstanceFamily
      title: GetDefaultCreditSpecificationRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/UnlimitedSupportedInstanceFamily'
            - description: The instance family.
    InstanceFamilyCreditSpecification:
      type: object
      properties:
        instanceFamily:
          allOf:
            - $ref: '#/components/schemas/UnlimitedSupportedInstanceFamily'
            - description: The instance family.
        cpuCredits:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The default credit option for CPU usage of the instance family. Valid values are <code>standard</code> and <code>unlimited</code>.
      description: Describes the default credit option for CPU usage of a burstable performance instance family.
    GetEbsDefaultKmsKeyIdRequest:
      type: object
      title: GetEbsDefaultKmsKeyIdRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    GetEbsEncryptionByDefaultRequest:
      type: object
      title: GetEbsEncryptionByDefaultRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    IntegrateServices:
      type: object
      properties:
        AthenaIntegration:
          allOf:
            - $ref: '#/components/schemas/AthenaIntegrationsSet'
            - description: Information about the integration with Amazon Athena.
      description: Describes service integrations with VPC Flow logs.
    GetFlowLogsIntegrationTemplateRequest:
      type: object
      required:
        - FlowLogId
        - ConfigDeliveryS3DestinationArn
        - IntegrateServices
      title: GetFlowLogsIntegrationTemplateRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'To store the CloudFormation template in Amazon S3, specify the location in Amazon S3.'
        IntegrateService:
          allOf:
            - $ref: '#/components/schemas/IntegrateServices'
            - description: Information about the service integration.
    GetGroupsForCapacityReservationRequest:
      type: object
      required:
        - CapacityReservationId
      title: GetGroupsForCapacityReservationRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    GetGroupsForCapacityReservationRequestMaxResults:
      type: integer
      minimum: 1
      maximum: 1000
    GetHostReservationPurchasePreviewRequest:
      type: object
      required:
        - HostIdSet
        - OfferingId
      title: GetHostReservationPurchasePreviewRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/OfferingId'
            - description: The offering ID of the reservation.
    PurchaseSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Purchase'
          - xml:
              name: item
    GetInstanceTypesFromInstanceRequirementsRequest:
      type: object
      required:
        - ArchitectureTypes
        - VirtualizationTypes
        - InstanceRequirements
      title: GetInstanceTypesFromInstanceRequirementsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        ArchitectureType:
          allOf:
            - $ref: '#/components/schemas/ArchitectureTypeSet'
            - description: The processor architecture type.
        VirtualizationType:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token for the next set of results.
    InstanceTypeInfoFromInstanceRequirementsSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/InstanceTypeInfoFromInstanceRequirements'
          - xml:
              name: item
    GetInstanceUefiDataRequest:
      type: object
      required:
        - InstanceId
      title: GetInstanceUefiDataRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    GetIpamAddressHistoryRequest:
      type: object
      required:
        - Cidr
        - IpamScopeId
      title: GetIpamAddressHistoryRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token for the next page of results.
    IpamAddressHistoryRecordSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/IpamAddressHistoryRecord'
          - xml:
              name: item
    GetIpamPoolAllocationsMaxResults:
      type: integer
      minimum: 1000
      maximum: 100000
    IpamPoolAllocationId:
      type: string
    GetIpamPoolAllocationsRequest:
      type: object
      required:
        - IpamPoolId
      title: GetIpamPoolAllocationsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/IpamPoolAllocationId'
            - description: The ID of the allocation.
        Filter:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token for the next page of results.
    IpamPoolAllocationSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/IpamPoolAllocation'
          - xml:
              name: item
    GetIpamPoolCidrsRequest:
      type: object
      required:
        - IpamPoolId
      title: GetIpamPoolCidrsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/IpamPoolId'
            - description: The ID of the IPAM pool you want the CIDR for.
        Filter:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token for the next page of results.
    IpamPoolCidrSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/IpamPoolCidr'
          - xml:
              name: item
    GetIpamResourceCidrsRequest:
      type: object
      required:
        - IpamScopeId
      title: GetIpamResourceCidrsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        Filter:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Amazon Web Services account that owns the resource.
    IpamResourceCidrSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/IpamResourceCidr'
          - xml:
              name: item
    GetLaunchTemplateDataRequest:
      type: object
      required:
        - InstanceId
      title: GetLaunchTemplateDataRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/InstanceId'
            - description: The ID of the instance.
    ResponseLaunchTemplateData:
      type: object
      properties:
        kernelId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The ID of the kernel, if applicable.'
        ebsOptimized:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Indicates whether the instance is optimized for Amazon EBS I/O. '
        iamInstanceProfile:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateIamInstanceProfileSpecification'
            - description: The IAM instance profile.
        blockDeviceMappingSet:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateBlockDeviceMappingList'
            - description: The block device mappings.
        networkInterfaceSet:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateInstanceNetworkInterfaceSpecificationList'
            - description: The network interfaces.
        imageId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the AMI that was used to launch the instance.
        instanceType:
          allOf:
            - $ref: '#/components/schemas/InstanceType'
            - description: The instance type.
        keyName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the key pair.
        monitoring:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplatesMonitoring'
            - description: The monitoring for the instance.
        placement:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplatePlacement'
            - description: The placement of the instance.
        ramDiskId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The ID of the RAM disk, if applicable.'
        disableApiTermination:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'If set to <code>true</code>, indicates that the instance cannot be terminated using the Amazon EC2 console, command line tool, or API.'
        instanceInitiatedShutdownBehavior:
          allOf:
            - $ref: '#/components/schemas/ShutdownBehavior'
            - description: Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).
        userData:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The user data for the instance. '
        tagSpecificationSet:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateTagSpecificationList'
            - description: The tags.
        elasticGpuSpecificationSet:
          allOf:
            - $ref: '#/components/schemas/ElasticGpuSpecificationResponseList'
            - description: The elastic GPU specification.
        elasticInferenceAcceleratorSet:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateElasticInferenceAcceleratorResponseList'
            - description: ' The elastic inference accelerator for the instance. '
        securityGroupIdSet:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: The security group IDs.
        securityGroupSet:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: The security group names.
        instanceMarketOptions:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateInstanceMarketOptions'
            - description: The market (purchasing) option for the instances.
        creditSpecification:
          allOf:
            - $ref: '#/components/schemas/CreditSpecification'
            - description: The credit option for CPU usage of the instance.
        cpuOptions:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateCpuOptions'
            - description: 'The CPU options for the instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html">Optimizing CPU options</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.'
        capacityReservationSpecification:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateCapacityReservationSpecificationResponse'
            - description: Information about the Capacity Reservation targeting option.
        licenseSet:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateLicenseList'
            - description: The license configurations.
        hibernationOptions:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateHibernationOptions'
            - description: 'Indicates whether an instance is configured for hibernation. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html">Hibernate your instance</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.'
        metadataOptions:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateInstanceMetadataOptions'
            - description: 'The metadata options for the instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">Instance metadata and user data</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.'
        enclaveOptions:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateEnclaveOptions'
            - description: Indicates whether the instance is enabled for Amazon Web Services Nitro Enclaves.
        instanceRequirements:
          allOf:
            - $ref: '#/components/schemas/InstanceRequirements'
            - description: '<p>The attributes for the instance types. When you specify instance attributes, Amazon EC2 will identify instance types with these attributes.</p> <p>If you specify <code>InstanceRequirements</code>, you can''t specify <code>InstanceTypes</code>.</p>'
        privateDnsNameOptions:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplatePrivateDnsNameOptions'
            - description: The options for the instance hostname.
        maintenanceOptions:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateInstanceMaintenanceOptions'
            - description: The maintenance options for your instance.
      description: 'The information for a launch template. '
    GetManagedPrefixListAssociationsMaxResults:
      type: integer
      minimum: 5
      maximum: 255
    GetManagedPrefixListAssociationsRequest:
      type: object
      required:
        - PrefixListId
      title: GetManagedPrefixListAssociationsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token for the next page of results.
    PrefixListAssociationSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/PrefixListAssociation'
          - xml:
              name: item
    GetManagedPrefixListEntriesRequest:
      type: object
      required:
        - PrefixListId
      title: GetManagedPrefixListEntriesRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token for the next page of results.
    PrefixListEntrySet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/PrefixListEntry'
          - xml:
              name: item
    GetNetworkInsightsAccessScopeAnalysisFindingsRequest:
      type: object
      required:
        - NetworkInsightsAccessScopeAnalysisId
      title: GetNetworkInsightsAccessScopeAnalysisFindingsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    GetNetworkInsightsAccessScopeContentRequest:
      type: object
      required:
        - NetworkInsightsAccessScopeId
      title: GetNetworkInsightsAccessScopeContentRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    GetPasswordDataRequest:
      type: object
      required:
        - InstanceId
      title: GetPasswordDataRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/InstanceId'
            - description: The ID of the Windows instance.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    GetReservedInstancesExchangeQuoteRequest:
      type: object
      required:
        - ReservedInstanceIds
      title: GetReservedInstancesExchangeQuoteRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        ReservedInstanceId:
          allOf:
            - $ref: '#/components/schemas/ReservedInstanceIdSet'
            - description: The IDs of the Convertible Reserved Instances to exchange.
        TargetConfiguration:
          allOf:
            - $ref: '#/components/schemas/TargetConfigurationRequestSet'
            - description: The configuration of the target Convertible Reserved Instance to exchange for your current Convertible Reserved Instances.
      description: Contains the parameters for GetReservedInstanceExchangeQuote.
    ReservationValue:
      type: object
      properties:
        hourlyPrice:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The hourly rate of the reservation.
        remainingTotalValue:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The balance of the total value (the sum of remainingUpfrontValue + hourlyPrice * number of hours remaining).
        remainingUpfrontValue:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The remaining upfront cost of the reservation.
      description: The cost associated with the Reserved Instance.
    ReservedInstanceReservationValueSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ReservedInstanceReservationValue'
          - xml:
              name: item
    TargetReservationValueSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/TargetReservationValue'
          - xml:
              name: item
    GetSerialConsoleAccessStatusRequest:
      type: object
      title: GetSerialConsoleAccessStatusRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    GetSpotPlacementScoresRequest:
      type: object
      required:
        - TargetCapacity
      title: GetSpotPlacementScoresRequest
      properties:
        InstanceType:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: '<p>Specify <code>true</code> so that the response returns a list of scored Availability Zones. Otherwise, the response returns a list of scored Regions.</p> <p>A list of scored Availability Zones is useful if you want to launch all of your Spot capacity into a single Availability Zone.</p>'
        RegionName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token for the next set of results.
    SpotPlacementScores:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/SpotPlacementScore'
          - xml:
              name: item
    GetSubnetCidrReservationsMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    GetSubnetCidrReservationsRequest:
      type: object
      required:
        - SubnetId
      title: GetSubnetCidrReservationsRequest
      properties:
        Filter:
          allOf:
            - $ref: '#/components/schemas/GetSubnetCidrReservationsMaxResults'
            - description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
    SubnetCidrReservationList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/SubnetCidrReservation'
          - xml:
              name: item
    GetTransitGatewayAttachmentPropagationsRequest:
      type: object
      required:
        - TransitGatewayAttachmentId
      title: GetTransitGatewayAttachmentPropagationsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayAttachmentId'
            - description: The ID of the attachment.
        Filter:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    TransitGatewayAttachmentPropagationList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/TransitGatewayAttachmentPropagation'
          - xml:
              name: item
    GetTransitGatewayMulticastDomainAssociationsRequest:
      type: object
      title: GetTransitGatewayMulticastDomainAssociationsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayMulticastDomainId'
            - description: The ID of the transit gateway multicast domain.
        Filter:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    TransitGatewayMulticastDomainAssociationList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/TransitGatewayMulticastDomainAssociation'
          - xml:
              name: item
    GetTransitGatewayPrefixListReferencesRequest:
      type: object
      required:
        - TransitGatewayRouteTableId
      title: GetTransitGatewayPrefixListReferencesRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayRouteTableId'
            - description: The ID of the transit gateway route table.
        Filter:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    TransitGatewayPrefixListReferenceSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/TransitGatewayPrefixListReference'
          - xml:
              name: item
    GetTransitGatewayRouteTableAssociationsRequest:
      type: object
      required:
        - TransitGatewayRouteTableId
      title: GetTransitGatewayRouteTableAssociationsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayRouteTableId'
            - description: The ID of the transit gateway route table.
        Filter:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    TransitGatewayRouteTableAssociationList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/TransitGatewayRouteTableAssociation'
          - xml:
              name: item
    GetTransitGatewayRouteTablePropagationsRequest:
      type: object
      required:
        - TransitGatewayRouteTableId
      title: GetTransitGatewayRouteTablePropagationsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayRouteTableId'
            - description: The ID of the transit gateway route table.
        Filter:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    TransitGatewayRouteTablePropagationList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/TransitGatewayRouteTablePropagation'
          - xml:
              name: item
    GetVpnConnectionDeviceSampleConfigurationRequest:
      type: object
      required:
        - VpnConnectionId
        - VpnConnectionDeviceTypeId
      title: GetVpnConnectionDeviceSampleConfigurationRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    VpnConnectionDeviceSampleConfiguration:
      type: string
      format: password
    GetVpnConnectionDeviceTypesRequest:
      type: object
      title: GetVpnConnectionDeviceTypesRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    VpnConnectionDeviceTypeList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/VpnConnectionDeviceType'
          - xml:
              name: item
    GpuDeviceCount:
      type: integer
    GpuDeviceName:
      type: string
    GpuDeviceManufacturerName:
      type: string
    GpuDeviceMemoryInfo:
      type: object
      properties:
        sizeInMiB:
          allOf:
            - $ref: '#/components/schemas/GpuDeviceMemorySize'
            - description: 'The size of the memory available to the GPU accelerator, in MiB.'
      description: Describes the memory available to the GPU accelerator.
    GpuDeviceInfo:
      type: object
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/GpuDeviceName'
            - description: The name of the GPU accelerator.
        manufacturer:
          allOf:
            - $ref: '#/components/schemas/GpuDeviceManufacturerName'
            - description: The manufacturer of the GPU accelerator.
        count:
          allOf:
            - $ref: '#/components/schemas/GpuDeviceCount'
            - description: The number of GPUs for the instance type.
        memoryInfo:
          allOf:
            - $ref: '#/components/schemas/GpuDeviceMemoryInfo'
            - description: Describes the memory available to the GPU accelerator.
      description: Describes the GPU accelerators for the instance type.
    GpuDeviceInfoList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/GpuDeviceInfo'
          - xml:
              name: item
    GpuDeviceMemorySize:
      type: integer
    totalGpuMemory:
      type: integer
    GpuInfo:
      type: object
      properties:
        gpus:
          allOf:
            - $ref: '#/components/schemas/GpuDeviceInfoList'
            - description: Describes the GPU accelerators for the instance type.
        totalGpuMemoryInMiB:
          allOf:
            - $ref: '#/components/schemas/totalGpuMemory'
            - description: 'The total size of the memory for the GPU accelerators for the instance type, in MiB.'
      description: Describes the GPU accelerators for the instance type.
    GroupIdentifier:
      type: object
      properties:
        groupName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the security group.
        groupId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the security group.
      description: Describes a security group.
    SecurityGroupIdentifier:
      type: object
      properties:
        groupId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the security group.
        groupName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the security group.
      description: Describes a security group.
    GroupIdentifierSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/SecurityGroupIdentifier'
          - xml:
              name: item
    HibernationFlag:
      type: boolean
    HibernationOptions:
      type: object
      properties:
        configured:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'If this parameter is set to <code>true</code>, your instance is enabled for hibernation; otherwise, it is not enabled for hibernation.'
      description: 'Indicates whether your instance is configured for hibernation. This parameter is valid only if the instance meets the <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html#hibernating-prerequisites">hibernation prerequisites</a>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html">Hibernate your instance</a> in the <i>Amazon EC2 User Guide</i>.'
    HibernationOptionsRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: '<p>If you set this parameter to <code>true</code>, your instance is enabled for hibernation.</p> <p>Default: <code>false</code> </p>'
      description: 'Indicates whether your instance is configured for hibernation. This parameter is valid only if the instance meets the <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html#hibernating-prerequisites">hibernation prerequisites</a>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html">Hibernate your instance</a> in the <i>Amazon EC2 User Guide</i>.'
    HistoryRecord:
      type: object
      properties:
        eventInformation:
          allOf:
            - $ref: '#/components/schemas/EventInformation'
            - description: Information about the event.
        eventType:
          allOf:
            - $ref: '#/components/schemas/EventType'
            - description: <p>The event type.</p> <ul> <li> <p> <code>error</code> - An error with the Spot Fleet request.</p> </li> <li> <p> <code>fleetRequestChange</code> - A change in the status or configuration of the Spot Fleet request.</p> </li> <li> <p> <code>instanceChange</code> - An instance was launched or terminated.</p> </li> <li> <p> <code>Information</code> - An informational event.</p> </li> </ul>
        timestamp:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: 'The date and time of the event, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).'
      description: Describes an event in the history of the Spot Fleet request.
    HistoryRecordEntry:
      type: object
      properties:
        eventInformation:
          allOf:
            - $ref: '#/components/schemas/EventInformation'
            - description: Information about the event.
        eventType:
          allOf:
            - $ref: '#/components/schemas/FleetEventType'
            - description: The event type.
        timestamp:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: 'The date and time of the event, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).'
      description: Describes an event in the history of an EC2 Fleet.
    HostProperties:
      type: object
      properties:
        cores:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of cores on the Dedicated Host.
        instanceType:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The instance type supported by the Dedicated Host. For example, <code>m5.large</code>. If the host supports multiple instance types, no <b>instanceType</b> is returned.'
        instanceFamily:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The instance family supported by the Dedicated Host. For example, <code>m5</code>.'
        sockets:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of sockets on the Dedicated Host.
        totalVCpus:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The total number of vCPUs on the Dedicated Host.
      description: Describes the properties of a Dedicated Host.
    HostInstanceList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/HostInstance'
          - xml:
              name: item
    HostRecovery:
      type: string
      enum:
        - 'on'
        - 'off'
    Host:
      type: object
      properties:
        autoPlacement:
          allOf:
            - $ref: '#/components/schemas/AutoPlacement'
            - description: Whether auto-placement is on or off.
        availabilityZone:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Availability Zone of the Dedicated Host.
        availableCapacity:
          allOf:
            - $ref: '#/components/schemas/AvailableCapacity'
            - description: Information about the instances running on the Dedicated Host.
        clientToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.'
        hostId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Dedicated Host.
        hostProperties:
          allOf:
            - $ref: '#/components/schemas/HostProperties'
            - description: The hardware specifications of the Dedicated Host.
        hostReservationId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The reservation ID of the Dedicated Host. This returns a <code>null</code> response if the Dedicated Host doesn't have an associated reservation.
        instances:
          allOf:
            - $ref: '#/components/schemas/HostInstanceList'
            - description: The IDs and instance type that are currently running on the Dedicated Host.
        state:
          allOf:
            - $ref: '#/components/schemas/AllocationState'
            - description: The Dedicated Host's state.
        allocationTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The time that the Dedicated Host was allocated.
        releaseTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The time that the Dedicated Host was released.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: Any tags assigned to the Dedicated Host.
        hostRecovery:
          allOf:
            - $ref: '#/components/schemas/HostRecovery'
            - description: Indicates whether host recovery is enabled or disabled for the Dedicated Host.
        allowsMultipleInstanceTypes:
          allOf:
            - $ref: '#/components/schemas/AllowsMultipleInstanceTypes'
            - description: 'Indicates whether the Dedicated Host supports multiple instance types of the same instance family. If the value is <code>on</code>, the Dedicated Host supports multiple instance types in the instance family. If the value is <code>off</code>, the Dedicated Host supports a single instance type only.'
        ownerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Amazon Web Services account that owns the Dedicated Host.
        availabilityZoneId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Availability Zone in which the Dedicated Host is allocated.
        memberOfServiceLinkedResourceGroup:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Indicates whether the Dedicated Host is in a host resource group. If <b>memberOfServiceLinkedResourceGroup</b> is <code>true</code>, the host is in a host resource group; otherwise, it is not.'
        outpostArn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Resource Name (ARN) of the Amazon Web Services Outpost on which the Dedicated Host is allocated.
      description: Describes the properties of the Dedicated Host.
    HostInstance:
      type: object
      properties:
        instanceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of instance that is running on the Dedicated Host.
        instanceType:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The instance type (for example, <code>m3.medium</code>) of the running instance.'
        ownerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Amazon Web Services account that owns the instance.
      description: Describes an instance running on a Dedicated Host.
    PaymentOption:
      type: string
      enum:
        - AllUpfront
        - PartialUpfront
        - NoUpfront
    HostOffering:
      type: object
      properties:
        currencyCode:
          allOf:
            - $ref: '#/components/schemas/CurrencyCodeValues'
            - description: The currency of the offering.
        duration:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The duration of the offering (in seconds).
        hourlyPrice:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The hourly price of the offering.
        instanceFamily:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The instance family of the offering.
        offeringId:
          allOf:
            - $ref: '#/components/schemas/OfferingId'
            - description: The ID of the offering.
        paymentOption:
          allOf:
            - $ref: '#/components/schemas/PaymentOption'
            - description: The available payment option.
        upfrontPrice:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The upfront price of the offering. Does not apply to No Upfront offerings.
      description: Details about the Dedicated Host Reservation offering.
    ResponseHostIdSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: item
    ReservationState:
      type: string
      enum:
        - payment-pending
        - payment-failed
        - active
        - retired
    HostReservation:
      type: object
      properties:
        count:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of Dedicated Hosts the reservation is associated with.
        currencyCode:
          allOf:
            - $ref: '#/components/schemas/CurrencyCodeValues'
            - description: 'The currency in which the <code>upfrontPrice</code> and <code>hourlyPrice</code> amounts are specified. At this time, the only supported currency is <code>USD</code>.'
        duration:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The length of the reservation''s term, specified in seconds. Can be <code>31536000 (1 year)</code> | <code>94608000 (3 years)</code>.'
        end:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The date and time that the reservation ends.
        hostIdSet:
          allOf:
            - $ref: '#/components/schemas/ResponseHostIdSet'
            - description: The IDs of the Dedicated Hosts associated with the reservation.
        hostReservationId:
          allOf:
            - $ref: '#/components/schemas/HostReservationId'
            - description: The ID of the reservation that specifies the associated Dedicated Hosts.
        hourlyPrice:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The hourly price of the reservation.
        instanceFamily:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The instance family of the Dedicated Host Reservation. The instance family on the Dedicated Host must be the same in order for it to benefit from the reservation.
        offeringId:
          allOf:
            - $ref: '#/components/schemas/OfferingId'
            - description: The ID of the reservation. This remains the same regardless of which Dedicated Hosts are associated with it.
        paymentOption:
          allOf:
            - $ref: '#/components/schemas/PaymentOption'
            - description: The payment option selected for this reservation.
        start:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The date and time that the reservation started.
        state:
          allOf:
            - $ref: '#/components/schemas/ReservationState'
            - description: The state of the reservation.
        upfrontPrice:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The upfront price of the reservation.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: Any tags assigned to the Dedicated Host Reservation.
      description: Details about the Dedicated Host Reservation and associated Dedicated Hosts.
    HostReservationIdSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/HostReservationId'
          - xml:
              name: item
    HostTenancy:
      type: string
      enum:
        - dedicated
        - host
    HostnameType:
      type: string
      enum:
        - ip-name
        - resource-name
    Hour:
      type: integer
      minimum: 0
      maximum: 23
    HttpTokensState:
      type: string
      enum:
        - optional
        - required
    HypervisorType:
      type: string
      enum:
        - ovm
        - xen
    IKEVersionsListValue:
      type: object
      properties:
        value:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The IKE version.
      description: The internet key exchange (IKE) version permitted for the VPN tunnel.
    IKEVersionsList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/IKEVersionsListValue'
          - xml:
              name: item
    IKEVersionsRequestListValue:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The IKE version.
      description: The IKE version that is permitted for the VPN tunnel.
    IKEVersionsRequestList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/IKEVersionsRequestListValue'
          - xml:
              name: item
    IamInstanceProfile:
      type: object
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Resource Name (ARN) of the instance profile.
        id:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the instance profile.
      description: Describes an IAM instance profile.
    IamInstanceProfileAssociationState:
      type: string
      enum:
        - associating
        - associated
        - disassociating
        - disassociated
    IdFormat:
      type: object
      properties:
        deadline:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: 'The date in UTC at which you are permanently switched over to using longer IDs. If a deadline is not yet available for this resource type, this field is not returned.'
        resource:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The type of resource.
        useLongIds:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether longer IDs (17-character IDs) are enabled for the resource.
      description: Describes the ID format for a resource.
    Igmpv2SupportValue:
      type: string
      enum:
        - enable
        - disable
    ImageTypeValues:
      type: string
      enum:
        - machine
        - kernel
        - ramdisk
    ImageState:
      type: string
      enum:
        - pending
        - available
        - invalid
        - deregistered
        - transient
        - failed
        - error
    StateReason:
      type: object
      properties:
        code:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The reason code for the state change.
        message:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The message for the state change.</p> <ul> <li> <p> <code>Server.InsufficientInstanceCapacity</code>: There was insufficient capacity available to satisfy the launch request.</p> </li> <li> <p> <code>Server.InternalError</code>: An internal error caused the instance to terminate during launch.</p> </li> <li> <p> <code>Server.ScheduledStop</code>: The instance was stopped due to a scheduled retirement.</p> </li> <li> <p> <code>Server.SpotInstanceShutdown</code>: The instance was stopped because the number of Spot requests with a maximum price equal to or higher than the Spot price exceeded available capacity or because of an increase in the Spot price.</p> </li> <li> <p> <code>Server.SpotInstanceTermination</code>: The instance was terminated because the number of Spot requests with a maximum price equal to or higher than the Spot price exceeded available capacity or because of an increase in the Spot price.</p> </li> <li> <p> <code>Client.InstanceInitiatedShutdown</code>: The instance was shut down using the <code>shutdown -h</code> command from the instance.</p> </li> <li> <p> <code>Client.InstanceTerminated</code>: The instance was terminated or rebooted during AMI creation.</p> </li> <li> <p> <code>Client.InternalError</code>: A client error caused the instance to terminate during launch.</p> </li> <li> <p> <code>Client.InvalidSnapshot.NotFound</code>: The specified snapshot was not found.</p> </li> <li> <p> <code>Client.UserInitiatedHibernate</code>: Hibernation was initiated on the instance.</p> </li> <li> <p> <code>Client.UserInitiatedShutdown</code>: The instance was shut down using the Amazon EC2 API.</p> </li> <li> <p> <code>Client.VolumeLimitExceeded</code>: The limit on the number of EBS volumes or total storage was exceeded. Decrease usage or request an increase in your account limits.</p> </li> </ul>'
      description: Describes a state change.
    TpmSupportValues:
      type: string
      enum:
        - v2.0
    Image:
      type: object
      properties:
        architecture:
          allOf:
            - $ref: '#/components/schemas/ArchitectureValues'
            - description: The architecture of the image.
        creationDate:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The date and time the image was created.
        imageId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the AMI.
        imageLocation:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The location of the AMI.
        imageType:
          allOf:
            - $ref: '#/components/schemas/ImageTypeValues'
            - description: The type of image.
        isPublic:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the image has public launch permissions. The value is <code>true</code> if this image has public launch permissions or <code>false</code> if it has only implicit and explicit launch permissions.
        kernelId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The kernel associated with the image, if any. Only applicable for machine images.'
        imageOwnerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Amazon Web Services account that owns the image.
        platform:
          allOf:
            - $ref: '#/components/schemas/PlatformValues'
            - description: 'This value is set to <code>windows</code> for Windows AMIs; otherwise, it is blank.'
        platformDetails:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The platform details associated with the billing code of the AMI. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-billing-info.html">Understanding AMI billing</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.'
        usageOperation:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The operation of the Amazon EC2 instance and the billing code that is associated with the AMI. <code>usageOperation</code> corresponds to the <a href="https://docs.aws.amazon.com/cur/latest/userguide/Lineitem-columns.html#Lineitem-details-O-Operation">lineitem/Operation</a> column on your Amazon Web Services Cost and Usage Report and in the <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/price-changes.html">Amazon Web Services Price List API</a>. You can view these fields on the <b>Instances</b> or <b>AMIs</b> pages in the Amazon EC2 console, or in the responses that are returned by the <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeImages.html">DescribeImages</a> command in the Amazon EC2 API, or the <a href="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-images.html">describe-images</a> command in the CLI.'
        productCodes:
          allOf:
            - $ref: '#/components/schemas/ProductCodeList'
            - description: Any product codes associated with the AMI.
        ramdiskId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The RAM disk associated with the image, if any. Only applicable for machine images.'
        imageState:
          allOf:
            - $ref: '#/components/schemas/ImageState'
            - description: 'The current state of the AMI. If the state is <code>available</code>, the image is successfully registered and can be used to launch an instance.'
        blockDeviceMapping:
          allOf:
            - $ref: '#/components/schemas/BlockDeviceMappingList'
            - description: Any block device mapping entries.
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The description of the AMI that was provided during image creation.
        enaSupport:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Specifies whether enhanced networking with ENA is enabled.
        hypervisor:
          allOf:
            - $ref: '#/components/schemas/HypervisorType'
            - description: The hypervisor type of the image.
        imageOwnerAlias:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The Amazon Web Services account alias (for example, <code>amazon</code>, <code>self</code>) or the Amazon Web Services account ID of the AMI owner.'
        name:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the AMI that was provided during image creation.
        rootDeviceName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The device name of the root device volume (for example, <code>/dev/sda1</code>).'
        rootDeviceType:
          allOf:
            - $ref: '#/components/schemas/DeviceType'
            - description: The type of root device used by the AMI. The AMI can use an Amazon EBS volume or an instance store volume.
        sriovNetSupport:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Specifies whether enhanced networking with the Intel 82599 Virtual Function interface is enabled.
        stateReason:
          allOf:
            - $ref: '#/components/schemas/StateReason'
            - description: The reason for the state change.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: Any tags assigned to the image.
        virtualizationType:
          allOf:
            - $ref: '#/components/schemas/VirtualizationType'
            - description: The type of virtualization of the AMI.
        bootMode:
          allOf:
            - $ref: '#/components/schemas/BootModeValues'
            - description: 'The boot mode of the image. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html">Boot modes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.'
        tpmSupport:
          allOf:
            - $ref: '#/components/schemas/TpmSupportValues'
            - description: 'If the image is configured for NitroTPM support, the value is <code>v2.0</code>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nitrotpm.html">NitroTPM</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.'
        deprecationTime:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The date and time to deprecate the AMI, in UTC, in the following format: <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z. If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute.'
      description: Describes an image.
    ImageAttributeName:
      type: string
      enum:
        - description
        - kernel
        - ramdisk
        - launchPermission
        - productCodes
        - blockDeviceMapping
        - sriovNetSupport
        - bootMode
        - tpmSupport
        - uefiData
        - lastLaunchedTime
    ImageDiskContainerList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ImageDiskContainer'
          - xml:
              name: item
    ImageIdList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ImageId'
          - xml:
              name: item
    ImageRecycleBinInfo:
      type: object
      properties:
        imageId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the AMI.
        name:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the AMI.
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The description of the AMI.
        recycleBinEnterTime:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: The date and time when the AMI entered the Recycle Bin.
        recycleBinExitTime:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: The date and time when the AMI is to be permanently deleted from the Recycle Bin.
      description: Information about an AMI that is currently in the Recycle Bin.
    ImageRecycleBinInfoList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ImageRecycleBinInfo'
          - xml:
              name: item
    ImportClientVpnClientCertificateRevocationListRequest:
      type: object
      required:
        - ClientVpnEndpointId
        - CertificateRevocationList
      title: ImportClientVpnClientCertificateRevocationListRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    ImportImageLicenseConfigurationResponse:
      type: object
      properties:
        licenseConfigurationArn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ARN of a license configuration.
      description: ' The response information for license configurations.'
    ImportImageLicenseSpecificationListRequest:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ImportImageLicenseConfigurationRequest'
          - xml:
              name: item
    ImportImageLicenseSpecificationListResponse:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ImportImageLicenseConfigurationResponse'
          - xml:
              name: item
    ImportImageRequest:
      type: object
      title: ImportImageRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A description string for the import image task.
        DiskContainer:
          allOf:
            - $ref: '#/components/schemas/ImportImageLicenseSpecificationListRequest'
            - description: The ARNs of the license configurations.
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/BootModeValues'
            - description: The boot mode of the virtual machine.
    SnapshotDetailList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/SnapshotDetail'
          - xml:
              name: item
    ImportImageTask:
      type: object
      properties:
        architecture:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The architecture of the virtual machine.</p> <p>Valid values: <code>i386</code> | <code>x86_64</code> | <code>arm64</code> </p>'
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A description of the import task.
        encrypted:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the image is encrypted.
        hypervisor:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The target hypervisor for the import task.</p> <p>Valid values: <code>xen</code> </p>'
        imageId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Amazon Machine Image (AMI) of the imported virtual machine.
        importTaskId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the import image task.
        kmsKeyId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The identifier for the KMS key that was used to create the encrypted image.
        licenseType:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The license type of the virtual machine.
        platform:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The description string for the import image task.
        progress:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The percentage of progress of the import image task.
        snapshotDetailSet:
          allOf:
            - $ref: '#/components/schemas/SnapshotDetailList'
            - description: Information about the snapshots.
        status:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A brief status for the import image task.
        statusMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A descriptive status message for the import image task.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags for the import image task.
        licenseSpecifications:
          allOf:
            - $ref: '#/components/schemas/ImportImageLicenseSpecificationListResponse'
            - description: The ARNs of the license configurations that are associated with the import image task.
        usageOperation:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The usage operation value.
        bootMode:
          allOf:
            - $ref: '#/components/schemas/BootModeValues'
            - description: The boot mode of the virtual machine.
      description: Describes an import image task.
    ImportInstanceLaunchSpecification:
      type: object
      properties:
        additionalInfo:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Reserved.
        architecture:
          allOf:
            - $ref: '#/components/schemas/ArchitectureValues'
            - description: The architecture of the instance.
        GroupId:
          allOf:
            - $ref: '#/components/schemas/SecurityGroupIdStringList'
            - description: The security group IDs.
        GroupName:
          allOf:
            - $ref: '#/components/schemas/SecurityGroupStringList'
            - description: The security group names.
        instanceInitiatedShutdownBehavior:
          allOf:
            - $ref: '#/components/schemas/ShutdownBehavior'
            - description: Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).
        instanceType:
          allOf:
            - $ref: '#/components/schemas/InstanceType'
            - description: 'The instance type. For more information about the instance types that you can import, see <a href="https://docs.aws.amazon.com/vm-import/latest/userguide/vmie_prereqs.html#vmimport-instance-types">Instance Types</a> in the VM Import/Export User Guide.'
        monitoring:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether monitoring is enabled.
        placement:
          allOf:
            - $ref: '#/components/schemas/Placement'
            - description: The placement information for the instance.
        privateIpAddress:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '[EC2-VPC] An available IP address from the IP address range of the subnet.'
        subnetId:
          allOf:
            - $ref: '#/components/schemas/SubnetId'
            - description: '[EC2-VPC] The ID of the subnet in which to launch the instance.'
        userData:
          allOf:
            - $ref: '#/components/schemas/UserData'
            - description: The Base64-encoded user data to make available to the instance.
      description: Describes the launch specification for VM import.
    ImportInstanceRequest:
      type: object
      required:
        - Platform
      title: ImportInstanceRequest
      properties:
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A description for the instance being imported.
        diskImage:
          allOf:
            - $ref: '#/components/schemas/DiskImageList'
            - description: The disk image.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        launchSpecification:
          allOf:
            - $ref: '#/components/schemas/ImportInstanceLaunchSpecification'
            - description: The launch specification.
        platform:
          allOf:
            - $ref: '#/components/schemas/PlatformValues'
            - description: The instance operating system.
    ImportInstanceVolumeDetailSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ImportInstanceVolumeDetailItem'
          - xml:
              name: item
    ImportInstanceVolumeDetailItem:
      type: object
      properties:
        availabilityZone:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Availability Zone where the resulting instance will reside.
        bytesConverted:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: The number of bytes converted so far.
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A description of the task.
        image:
          allOf:
            - $ref: '#/components/schemas/DiskImageDescription'
            - description: The image.
        status:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The status of the import of this particular disk image.
        statusMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The status information or errors related to the disk image.
        volume:
          allOf:
            - $ref: '#/components/schemas/DiskImageVolumeDescription'
            - description: The volume.
      description: Describes an import volume task.
    ImportKeyPairRequest:
      type: object
      required:
        - KeyName
        - PublicKeyMaterial
      title: ImportKeyPairRequest
      properties:
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        keyName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A unique name for the key pair.
        publicKeyMaterial:
          allOf:
            - $ref: '#/components/schemas/Blob'
            - description: 'The public key. For API calls, the text must be base64-encoded. For command line tools, base64 encoding is performed for you.'
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/TagSpecificationList'
            - description: The tags to apply to the imported key pair.
    ImportSnapshotRequest:
      type: object
      title: ImportSnapshotRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The name of the role to use when not using the default role, ''vmimport''.'
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/TagSpecificationList'
            - description: The tags to apply to the import snapshot task during creation.
    SnapshotTaskDetail:
      type: object
      properties:
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The description of the snapshot.
        diskImageSize:
          allOf:
            - $ref: '#/components/schemas/Double'
            - description: 'The size of the disk in the snapshot, in GiB.'
        encrypted:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the snapshot is encrypted.
        format:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The format of the disk image from which the snapshot is created.
        kmsKeyId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The identifier for the KMS key that was used to create the encrypted snapshot.
        progress:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The percentage of completion for the import snapshot task.
        snapshotId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The snapshot ID of the disk being imported.
        status:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A brief status for the import snapshot task.
        statusMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A detailed status message for the import snapshot task.
        url:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The URL of the disk image from which the snapshot is created.
        userBucket:
          allOf:
            - $ref: '#/components/schemas/UserBucketDetails'
            - description: The Amazon S3 bucket for the disk image.
      description: Details about the import snapshot task.
    ImportSnapshotTask:
      type: object
      properties:
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A description of the import snapshot task.
        importTaskId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the import snapshot task.
        snapshotTaskDetail:
          allOf:
            - $ref: '#/components/schemas/SnapshotTaskDetail'
            - description: Describes an import snapshot task.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags for the import snapshot task.
      description: Describes an import snapshot task.
    ImportSnapshotTaskIdList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ImportSnapshotTaskId'
          - xml:
              name: ImportTaskId
    ImportTaskIdList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ImportImageTaskId'
          - xml:
              name: ImportTaskId
    ImportVolumeRequest:
      type: object
      required:
        - AvailabilityZone
        - Image
        - Volume
      title: ImportVolumeRequest
      properties:
        availabilityZone:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Availability Zone for the resulting EBS volume.
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A description of the volume.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        image:
          allOf:
            - $ref: '#/components/schemas/DiskImageDetail'
            - description: The disk image.
        volume:
          allOf:
            - $ref: '#/components/schemas/VolumeDetail'
            - description: The volume size.
    InferenceDeviceInfoList:
      type: array
      items:
        $ref: '#/components/schemas/InferenceDeviceInfo'
    InferenceAcceleratorInfo:
      type: object
      properties:
        accelerators:
          allOf:
            - $ref: '#/components/schemas/InferenceDeviceInfoList'
            - description: Describes the Inference accelerators for the instance type.
      description: Describes the Inference accelerators for the instance type.
    InferenceDeviceCount:
      type: integer
    InferenceDeviceName:
      type: string
    InferenceDeviceManufacturerName:
      type: string
    InferenceDeviceInfo:
      type: object
      properties:
        count:
          allOf:
            - $ref: '#/components/schemas/InferenceDeviceCount'
            - description: The number of Inference accelerators for the instance type.
        name:
          allOf:
            - $ref: '#/components/schemas/InferenceDeviceName'
            - description: The name of the Inference accelerator.
        manufacturer:
          allOf:
            - $ref: '#/components/schemas/InferenceDeviceManufacturerName'
            - description: The manufacturer of the Inference accelerator.
      description: Describes the Inference accelerators for the instance type.
    Monitoring:
      type: object
      properties:
        state:
          allOf:
            - $ref: '#/components/schemas/MonitoringState'
            - description: 'Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is enabled.'
      description: Describes the monitoring of an instance.
    InstanceState:
      type: object
      properties:
        code:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: '<p>The state of the instance as a 16-bit unsigned integer. </p> <p>The high byte is all of the bits between 2^8 and (2^16)-1, which equals decimal values between 256 and 65,535. These numerical values are used for internal purposes and should be ignored.</p> <p>The low byte is all of the bits between 2^0 and (2^8)-1, which equals decimal values between 0 and 255. </p> <p>The valid values for instance-state-code will all be in the range of the low byte and they are:</p> <ul> <li> <p> <code>0</code> : <code>pending</code> </p> </li> <li> <p> <code>16</code> : <code>running</code> </p> </li> <li> <p> <code>32</code> : <code>shutting-down</code> </p> </li> <li> <p> <code>48</code> : <code>terminated</code> </p> </li> <li> <p> <code>64</code> : <code>stopping</code> </p> </li> <li> <p> <code>80</code> : <code>stopped</code> </p> </li> </ul> <p>You can ignore the high byte value by zeroing out all of the bits above 2^8 or 256 in decimal.</p>'
        name:
          allOf:
            - $ref: '#/components/schemas/InstanceStateName'
            - description: The current state of the instance.
      description: Describes the current state of an instance.
    InstanceBlockDeviceMappingList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/InstanceBlockDeviceMapping'
          - xml:
              name: item
    InstanceLifecycleType:
      type: string
      enum:
        - spot
        - scheduled
    InstanceNetworkInterfaceList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/InstanceNetworkInterface'
          - xml:
              name: item
    LicenseList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/LicenseConfiguration'
          - xml:
              name: item
    InstanceMetadataOptionsResponse:
      type: object
      properties:
        state:
          allOf:
            - $ref: '#/components/schemas/InstanceMetadataOptionsState'
            - description: <p>The state of the metadata option changes.</p> <p> <code>pending</code> - The metadata options are being updated and the instance is not ready to process metadata traffic with the new selection.</p> <p> <code>applied</code> - The metadata options have been successfully applied on the instance.</p>
        httpTokens:
          allOf:
            - $ref: '#/components/schemas/HttpTokensState'
            - description: '<p>The state of token usage for your instance metadata requests.</p> <p>If the state is <code>optional</code>, you can choose to retrieve instance metadata with or without a signed token header on your request. If you retrieve the IAM role credentials without a token, the version 1.0 role credentials are returned. If you retrieve the IAM role credentials using a valid signed token, the version 2.0 role credentials are returned.</p> <p>If the state is <code>required</code>, you must send a signed token header with any instance metadata retrieval requests. In this state, retrieving the IAM role credential always returns the version 2.0 credentials; the version 1.0 credentials are not available.</p> <p>Default: <code>optional</code> </p>'
        httpPutResponseHopLimit:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: '<p>The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel.</p> <p>Default: 1</p> <p>Possible values: Integers from 1 to 64</p>'
        httpEndpoint:
          allOf:
            - $ref: '#/components/schemas/InstanceMetadataEndpointState'
            - description: '<p>Indicates whether the HTTP metadata endpoint on your instances is enabled or disabled.</p> <p>If the value is <code>disabled</code>, you cannot access your instance metadata.</p>'
        httpProtocolIpv6:
          allOf:
            - $ref: '#/components/schemas/InstanceMetadataProtocolState'
            - description: Indicates whether the IPv6 endpoint for the instance metadata service is enabled or disabled.
        instanceMetadataTags:
          allOf:
            - $ref: '#/components/schemas/InstanceMetadataTagsState'
            - description: 'Indicates whether access to instance tags from the instance metadata is enabled or disabled. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#work-with-tags-in-IMDS">Work with instance tags using the instance metadata</a>.'
      description: The metadata options for the instance.
    PrivateDnsNameOptionsResponse:
      type: object
      properties:
        hostnameType:
          allOf:
            - $ref: '#/components/schemas/HostnameType'
            - description: The type of hostname to assign to an instance.
        enableResourceNameDnsARecord:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether to respond to DNS queries for instance hostnames with DNS A records.
        enableResourceNameDnsAAAARecord:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.
      description: Describes the options for instance hostnames.
    InstanceMaintenanceOptions:
      type: object
      properties:
        autoRecovery:
          allOf:
            - $ref: '#/components/schemas/InstanceAutoRecoveryState'
            - description: Provides information on the current automatic recovery behavior of your instance.
      description: The maintenance options for the instance.
    Instance:
      type: object
      properties:
        amiLaunchIndex:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The AMI launch index, which can be used to find this instance in the launch group.'
        imageId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the AMI used to launch the instance.
        instanceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the instance.
        instanceType:
          allOf:
            - $ref: '#/components/schemas/InstanceType'
            - description: The instance type.
        kernelId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The kernel associated with this instance, if applicable.'
        keyName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The name of the key pair, if this instance was launched with an associated key pair.'
        launchTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The time the instance was launched.
        monitoring:
          allOf:
            - $ref: '#/components/schemas/Monitoring'
            - description: The monitoring for the instance.
        placement:
          allOf:
            - $ref: '#/components/schemas/Placement'
            - description: 'The location where the instance launched, if applicable.'
        platform:
          allOf:
            - $ref: '#/components/schemas/PlatformValues'
            - description: The value is <code>Windows</code> for Windows instances; otherwise blank.
        privateDnsName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>(IPv4 only) The private DNS hostname name assigned to the instance. This DNS hostname can only be used inside the Amazon EC2 network. This name is not available until the instance enters the <code>running</code> state. </p> <p>[EC2-VPC] The Amazon-provided DNS server resolves Amazon-provided private DNS hostnames if you''ve enabled DNS resolution and DNS hostnames in your VPC. If you are not using the Amazon-provided DNS server in your VPC, your custom domain name servers must resolve the hostname as appropriate.</p>'
        privateIpAddress:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The private IPv4 address assigned to the instance.
        productCodes:
          allOf:
            - $ref: '#/components/schemas/ProductCodeList'
            - description: 'The product codes attached to this instance, if applicable.'
        dnsName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '(IPv4 only) The public DNS name assigned to the instance. This name is not available until the instance enters the <code>running</code> state. For EC2-VPC, this name is only available if you''ve enabled DNS hostnames for your VPC.'
        ipAddress:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The public IPv4 address, or the Carrier IP address assigned to the instance, if applicable.</p> <p>A Carrier IP address only applies to an instance launched in a subnet associated with a Wavelength Zone.</p>'
        ramdiskId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The RAM disk associated with this instance, if applicable.'
        instanceState:
          allOf:
            - $ref: '#/components/schemas/InstanceState'
            - description: The current state of the instance.
        reason:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The reason for the most recent state transition. This might be an empty string.
        subnetId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '[EC2-VPC] The ID of the subnet in which the instance is running.'
        vpcId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '[EC2-VPC] The ID of the VPC in which the instance is running.'
        architecture:
          allOf:
            - $ref: '#/components/schemas/ArchitectureValues'
            - description: The architecture of the image.
        blockDeviceMapping:
          allOf:
            - $ref: '#/components/schemas/InstanceBlockDeviceMappingList'
            - description: Any block device mapping entries for the instance.
        clientToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The idempotency token you provided when you launched the instance, if applicable.'
        ebsOptimized:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the instance is optimized for Amazon EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.
        enaSupport:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Specifies whether enhanced networking with ENA is enabled.
        hypervisor:
          allOf:
            - $ref: '#/components/schemas/HypervisorType'
            - description: The hypervisor type of the instance. The value <code>xen</code> is used for both Xen and Nitro hypervisors.
        iamInstanceProfile:
          allOf:
            - $ref: '#/components/schemas/IamInstanceProfile'
            - description: 'The IAM instance profile associated with the instance, if applicable.'
        instanceLifecycle:
          allOf:
            - $ref: '#/components/schemas/InstanceLifecycleType'
            - description: Indicates whether this is a Spot Instance or a Scheduled Instance.
        elasticGpuAssociationSet:
          allOf:
            - $ref: '#/components/schemas/ElasticGpuAssociationList'
            - description: The Elastic GPU associated with the instance.
        elasticInferenceAcceleratorAssociationSet:
          allOf:
            - $ref: '#/components/schemas/ElasticInferenceAcceleratorAssociationList'
            - description: ' The elastic inference accelerator associated with the instance.'
        networkInterfaceSet:
          allOf:
            - $ref: '#/components/schemas/InstanceNetworkInterfaceList'
            - description: '[EC2-VPC] The network interfaces for the instance.'
        outpostArn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Resource Name (ARN) of the Outpost.
        rootDeviceName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The device name of the root device volume (for example, <code>/dev/sda1</code>).'
        rootDeviceType:
          allOf:
            - $ref: '#/components/schemas/DeviceType'
            - description: The root device type used by the AMI. The AMI can use an EBS volume or an instance store volume.
        groupSet:
          allOf:
            - $ref: '#/components/schemas/GroupIdentifierList'
            - description: The security groups for the instance.
        sourceDestCheck:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether source/destination checking is enabled.
        spotInstanceRequestId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'If the request is a Spot Instance request, the ID of the request.'
        sriovNetSupport:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Specifies whether enhanced networking with the Intel 82599 Virtual Function interface is enabled.
        stateReason:
          allOf:
            - $ref: '#/components/schemas/StateReason'
            - description: The reason for the most recent state transition.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: Any tags assigned to the instance.
        virtualizationType:
          allOf:
            - $ref: '#/components/schemas/VirtualizationType'
            - description: The virtualization type of the instance.
        cpuOptions:
          allOf:
            - $ref: '#/components/schemas/CpuOptions'
            - description: The CPU options for the instance.
        capacityReservationId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Capacity Reservation.
        capacityReservationSpecification:
          allOf:
            - $ref: '#/components/schemas/CapacityReservationSpecificationResponse'
            - description: Information about the Capacity Reservation targeting option.
        hibernationOptions:
          allOf:
            - $ref: '#/components/schemas/HibernationOptions'
            - description: Indicates whether the instance is enabled for hibernation.
        licenseSet:
          allOf:
            - $ref: '#/components/schemas/LicenseList'
            - description: The license configurations for the instance.
        metadataOptions:
          allOf:
            - $ref: '#/components/schemas/InstanceMetadataOptionsResponse'
            - description: The metadata options for the instance.
        enclaveOptions:
          allOf:
            - $ref: '#/components/schemas/EnclaveOptions'
            - description: Indicates whether the instance is enabled for Amazon Web Services Nitro Enclaves.
        bootMode:
          allOf:
            - $ref: '#/components/schemas/BootModeValues'
            - description: 'The boot mode of the instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html">Boot modes</a> in the <i>Amazon EC2 User Guide</i>.'
        platformDetails:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The platform details value for the instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/billing-info-fields.html">AMI billing information fields</a> in the <i>Amazon EC2 User Guide</i>.'
        usageOperation:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The usage operation value for the instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/billing-info-fields.html">AMI billing information fields</a> in the <i>Amazon EC2 User Guide</i>.'
        usageOperationUpdateTime:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: The time that the usage operation was last updated.
        privateDnsNameOptions:
          allOf:
            - $ref: '#/components/schemas/PrivateDnsNameOptionsResponse'
            - description: The options for the instance hostname.
        ipv6Address:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The IPv6 address assigned to the instance.
        tpmSupport:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'If the instance is configured for NitroTPM support, the value is <code>v2.0</code>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nitrotpm.html">NitroTPM</a> in the <i>Amazon EC2 User Guide</i>.'
        maintenanceOptions:
          allOf:
            - $ref: '#/components/schemas/InstanceMaintenanceOptions'
            - description: Provides information on the recovery and maintenance options of your instance.
      description: Describes an instance.
    InstanceBlockDeviceMapping:
      type: object
      properties:
        deviceName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The device name (for example, <code>/dev/sdh</code> or <code>xvdh</code>).'
        ebs:
          allOf:
            - $ref: '#/components/schemas/EbsInstanceBlockDevice'
            - description: Parameters used to automatically set up EBS volumes when the instance is launched.
      description: Describes a block device mapping.
    InstanceBlockDeviceMappingSpecificationList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/InstanceBlockDeviceMappingSpecification'
          - xml:
              name: item
    ListingState:
      type: string
      enum:
        - available
        - sold
        - cancelled
        - pending
    InstanceCount:
      type: object
      properties:
        instanceCount:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of listed Reserved Instances in the state specified by the <code>state</code>.
        state:
          allOf:
            - $ref: '#/components/schemas/ListingState'
            - description: The states of the listed Reserved Instances.
      description: Describes a Reserved Instance listing state.
    InstanceCountList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/InstanceCount'
          - xml:
              name: item
    InstanceCreditSpecification:
      type: object
      properties:
        instanceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the instance.
        cpuCredits:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The credit option for CPU usage of the instance. Valid values are <code>standard</code> and <code>unlimited</code>.
      description: 'Describes the credit option for CPU usage of a burstable performance instance. '
    InstanceCreditSpecificationListRequest:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/InstanceCreditSpecificationRequest'
          - xml:
              name: item
    InstanceEventId:
      type: string
    InstanceEventWindowTimeRangeList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/InstanceEventWindowTimeRange'
          - xml:
              name: item
    InstanceEventWindowAssociationTarget:
      type: object
      properties:
        instanceIdSet:
          allOf:
            - $ref: '#/components/schemas/InstanceIdList'
            - description: The IDs of the instances associated with the event window.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The instance tags associated with the event window. Any instances associated with the tags will be associated with the event window.
        dedicatedHostIdSet:
          allOf:
            - $ref: '#/components/schemas/DedicatedHostIdList'
            - description: The IDs of the Dedicated Hosts associated with the event window.
      description: One or more targets associated with the event window.
    InstanceEventWindowState:
      type: string
      enum:
        - creating
        - deleting
        - active
        - deleted
    WeekDay:
      type: string
      enum:
        - sunday
        - monday
        - tuesday
        - wednesday
        - thursday
        - friday
        - saturday
    InstanceEventWindowTimeRange:
      type: object
      properties:
        startWeekDay:
          allOf:
            - $ref: '#/components/schemas/WeekDay'
            - description: The day on which the time range begins.
        startHour:
          allOf:
            - $ref: '#/components/schemas/Hour'
            - description: The hour when the time range begins.
        endWeekDay:
          allOf:
            - $ref: '#/components/schemas/WeekDay'
            - description: The day on which the time range ends.
        endHour:
          allOf:
            - $ref: '#/components/schemas/Hour'
            - description: The hour when the time range ends.
      description: 'The start day and time and the end day and time of the time range, in UTC.'
    InstanceEventWindowTimeRangeRequestSet:
      type: array
      items:
        $ref: '#/components/schemas/InstanceEventWindowTimeRangeRequest'
    InstanceGeneration:
      type: string
      enum:
        - current
        - previous
    InstanceGenerationSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/InstanceGeneration'
          - xml:
              name: item
    InstanceIdSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/InstanceId'
          - xml:
              name: item
    InstanceIpv4Prefix:
      type: object
      properties:
        ipv4Prefix:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: One or more IPv4 prefixes assigned to the network interface.
      description: Information about an IPv4 prefix.
    InstanceIpv4PrefixList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/InstanceIpv4Prefix'
          - xml:
              name: item
    InstanceIpv6AddressRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The IPv6 address.
      description: Describes an IPv6 address.
    InstanceIpv6AddressListRequest:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/InstanceIpv6AddressRequest'
          - xml:
              name: InstanceIpv6Address
    InstanceIpv6Prefix:
      type: object
      properties:
        ipv6Prefix:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: One or more IPv6 prefixes assigned to the network interface.
      description: Information about an IPv6 prefix.
    InstanceIpv6PrefixList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/InstanceIpv6Prefix'
          - xml:
              name: item
    InstanceList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Instance'
          - xml:
              name: item
    InstanceMaintenanceOptionsRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/InstanceAutoRecoveryState'
            - description: 'Disables the automatic recovery behavior of your instance or sets it to default. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-recover.html#instance-configuration-recovery">Simplified automatic recovery</a>.'
      description: The maintenance options for the instance.
    InstanceMarketOptionsRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/SpotMarketOptions'
            - description: The options for Spot Instances.
      description: Describes the market (purchasing) option for the instances.
    InstanceMetadataEndpointState:
      type: string
      enum:
        - disabled
        - enabled
    InstanceMetadataOptionsRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/InstanceMetadataTagsState'
            - description: '<p>Set to <code>enabled</code> to allow access to instance tags from the instance metadata. Set to <code>disabled</code> to turn off access to instance tags from the instance metadata. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#work-with-tags-in-IMDS">Work with instance tags using the instance metadata</a>.</p> <p>Default: <code>disabled</code> </p>'
      description: The metadata options for the instance.
    InstanceMetadataOptionsState:
      type: string
      enum:
        - pending
        - applied
    InstanceMetadataProtocolState:
      type: string
      enum:
        - disabled
        - enabled
    InstanceMonitoring:
      type: object
      properties:
        instanceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the instance.
        monitoring:
          allOf:
            - $ref: '#/components/schemas/Monitoring'
            - description: The monitoring for the instance.
      description: Describes the monitoring of an instance.
    InstanceMonitoringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/InstanceMonitoring'
          - xml:
              name: item
    InstanceNetworkInterfaceAssociation:
      type: object
      properties:
        carrierIp:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The carrier IP address associated with the network interface.
        customerOwnedIp:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The customer-owned IP address associated with the network interface.
        ipOwnerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the owner of the Elastic IP address.
        publicDnsName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The public DNS name.
        publicIp:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The public IP address or Elastic IP address bound to the network interface.
      description: Describes association information for an Elastic IP address (IPv4).
    InstanceNetworkInterfaceAttachment:
      type: object
      properties:
        attachTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The time stamp when the attachment initiated.
        attachmentId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the network interface attachment.
        deleteOnTermination:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the network interface is deleted when the instance is terminated.
        deviceIndex:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The index of the device on the instance for the network interface attachment.
        status:
          allOf:
            - $ref: '#/components/schemas/AttachmentStatus'
            - description: The attachment state.
        networkCardIndex:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The index of the network card.
      description: Describes a network interface attachment.
    InstancePrivateIpAddressList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/InstancePrivateIpAddress'
          - xml:
              name: item
    NetworkInterfaceStatus:
      type: string
      enum:
        - available
        - associated
        - attaching
        - in-use
        - detaching
    InstanceNetworkInterface:
      type: object
      properties:
        association:
          allOf:
            - $ref: '#/components/schemas/InstanceNetworkInterfaceAssociation'
            - description: The association information for an Elastic IPv4 associated with the network interface.
        attachment:
          allOf:
            - $ref: '#/components/schemas/InstanceNetworkInterfaceAttachment'
            - description: The network interface attachment.
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The description.
        groupSet:
          allOf:
            - $ref: '#/components/schemas/GroupIdentifierList'
            - description: One or more security groups.
        ipv6AddressesSet:
          allOf:
            - $ref: '#/components/schemas/InstanceIpv6AddressList'
            - description: One or more IPv6 addresses associated with the network interface.
        macAddress:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The MAC address.
        networkInterfaceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the network interface.
        ownerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Amazon Web Services account that created the network interface.
        privateDnsName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The private DNS name.
        privateIpAddress:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The IPv4 address of the network interface within the subnet.
        privateIpAddressesSet:
          allOf:
            - $ref: '#/components/schemas/InstancePrivateIpAddressList'
            - description: One or more private IPv4 addresses associated with the network interface.
        sourceDestCheck:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether source/destination checking is enabled.
        status:
          allOf:
            - $ref: '#/components/schemas/NetworkInterfaceStatus'
            - description: The status of the network interface.
        subnetId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the subnet.
        vpcId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the VPC.
        interfaceType:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The type of network interface.</p> <p>Valid values: <code>interface</code> | <code>efa</code> | <code>trunk</code> </p>'
        ipv4PrefixSet:
          allOf:
            - $ref: '#/components/schemas/InstanceIpv4PrefixList'
            - description: The IPv4 delegated prefixes that are assigned to the network interface.
        ipv6PrefixSet:
          allOf:
            - $ref: '#/components/schemas/InstanceIpv6PrefixList'
            - description: The IPv6 delegated prefixes that are assigned to the network interface.
      description: Describes a network interface.
    InstancePrivateIpAddress:
      type: object
      properties:
        association:
          allOf:
            - $ref: '#/components/schemas/InstanceNetworkInterfaceAssociation'
            - description: The association information for an Elastic IP address for the network interface.
        primary:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether this IPv4 address is the primary private IP address of the network interface.
        privateDnsName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The private IPv4 DNS name.
        privateIpAddress:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The private IPv4 address of the network interface.
      description: Describes a private IPv4 address.
    VCpuCountRange:
      type: object
      properties:
        min:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The minimum number of vCPUs. If the value is <code>0</code>, there is no minimum limit.'
        max:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The maximum number of vCPUs. If this parameter is not specified, there is no maximum limit.'
      description: The minimum and maximum number of vCPUs.
    MemoryMiB:
      type: object
      properties:
        min:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The minimum amount of memory, in MiB. If this parameter is not specified, there is no minimum limit.'
        max:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The maximum amount of memory, in MiB. If this parameter is not specified, there is no maximum limit.'
      description: 'The minimum and maximum amount of memory, in MiB.'
    MemoryGiBPerVCpu:
      type: object
      properties:
        min:
          allOf:
            - $ref: '#/components/schemas/Double'
            - description: 'The minimum amount of memory per vCPU, in GiB. If this parameter is not specified, there is no minimum limit.'
        max:
          allOf:
            - $ref: '#/components/schemas/Double'
            - description: 'The maximum amount of memory per vCPU, in GiB. If this parameter is not specified, there is no maximum limit.'
      description: '<p>The minimum and maximum amount of memory per vCPU, in GiB.</p> <p/>'
    NetworkInterfaceCount:
      type: object
      properties:
        min:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The minimum number of network interfaces. If this parameter is not specified, there is no minimum limit.'
        max:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The maximum number of network interfaces. If this parameter is not specified, there is no maximum limit.'
      description: The minimum and maximum number of network interfaces.
    LocalStorageTypeSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/LocalStorageType'
          - xml:
              name: item
    TotalLocalStorageGB:
      type: object
      properties:
        min:
          allOf:
            - $ref: '#/components/schemas/Double'
            - description: 'The minimum amount of total local storage, in GB. If this parameter is not specified, there is no minimum limit.'
        max:
          allOf:
            - $ref: '#/components/schemas/Double'
            - description: 'The maximum amount of total local storage, in GB. If this parameter is not specified, there is no maximum limit.'
      description: 'The minimum and maximum amount of total local storage, in GB.'
    InstanceRequirementsWithMetadataRequest:
      type: object
      properties:
        ArchitectureType:
          allOf:
            - $ref: '#/components/schemas/ArchitectureTypeSet'
            - description: The architecture type.
        VirtualizationType:
          allOf:
            - $ref: '#/components/schemas/InstanceRequirementsRequest'
            - description: 'The attributes for the instance types. When you specify instance attributes, Amazon EC2 will identify instance types with those attributes.'
      description: '<p>The architecture type, virtualization type, and other attributes for the instance types. When you specify instance attributes, Amazon EC2 will identify instance types with those attributes.</p> <p>If you specify <code>InstanceRequirementsWithMetadataRequest</code>, you can''t specify <code>InstanceTypes</code>.</p>'
    InstanceSpecification:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Excludes the root volume from being snapshotted.
      description: The instance details to specify which volumes should be snapshotted.
    InstanceStateName:
      type: string
      enum:
        - pending
        - running
        - shutting-down
        - terminated
        - stopping
        - stopped
    InstanceStateChange:
      type: object
      properties:
        currentState:
          allOf:
            - $ref: '#/components/schemas/InstanceState'
            - description: The current state of the instance.
        instanceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the instance.
        previousState:
          allOf:
            - $ref: '#/components/schemas/InstanceState'
            - description: The previous state of the instance.
      description: Describes an instance state change.
    InstanceStateChangeList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/InstanceStateChange'
          - xml:
              name: item
    InstanceStatusEventList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/InstanceStatusEvent'
          - xml:
              name: item
    InstanceStatusSummary:
      type: object
      properties:
        details:
          allOf:
            - $ref: '#/components/schemas/InstanceStatusDetailsList'
            - description: The system instance health or application instance health.
        status:
          allOf:
            - $ref: '#/components/schemas/SummaryStatus'
            - description: The status.
      description: Describes the status of an instance.
    InstanceStatus:
      type: object
      properties:
        availabilityZone:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Availability Zone of the instance.
        outpostArn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Resource Name (ARN) of the Outpost.
        eventsSet:
          allOf:
            - $ref: '#/components/schemas/InstanceStatusEventList'
            - description: Any scheduled events associated with the instance.
        instanceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the instance.
        instanceState:
          allOf:
            - $ref: '#/components/schemas/InstanceState'
            - description: The intended state of the instance. <a>DescribeInstanceStatus</a> requires that an instance be in the <code>running</code> state.
        instanceStatus:
          allOf:
            - $ref: '#/components/schemas/InstanceStatusSummary'
            - description: 'Reports impaired functionality that stems from issues internal to the instance, such as impaired reachability.'
        systemStatus:
          allOf:
            - $ref: '#/components/schemas/InstanceStatusSummary'
            - description: 'Reports impaired functionality that stems from issues related to the systems that support an instance, such as hardware failures and network connectivity problems.'
      description: Describes the status of an instance.
    StatusName:
      type: string
      enum:
        - reachability
    StatusType:
      type: string
      enum:
        - passed
        - failed
        - insufficient-data
        - initializing
    InstanceStatusDetails:
      type: object
      properties:
        impairedSince:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: 'The time when a status check failed. For an instance that was launched and impaired, this is the time when the instance was launched.'
        name:
          allOf:
            - $ref: '#/components/schemas/StatusName'
            - description: The type of instance status.
        status:
          allOf:
            - $ref: '#/components/schemas/StatusType'
            - description: The status.
      description: Describes the instance status.
    InstanceStatusDetailsList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/InstanceStatusDetails'
          - xml:
              name: item
    InstanceStatusEvent:
      type: object
      properties:
        instanceEventId:
          allOf:
            - $ref: '#/components/schemas/InstanceEventId'
            - description: The ID of the event.
        code:
          allOf:
            - $ref: '#/components/schemas/EventCode'
            - description: The event code.
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>A description of the event.</p> <p>After a scheduled event is completed, it can still be described for up to a week. If the event has been completed, this description starts with the following text: [Completed].</p>'
        notAfter:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The latest scheduled end time for the event.
        notBefore:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The earliest scheduled start time for the event.
        notBeforeDeadline:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The deadline for starting the event.
      description: Describes a scheduled event for an instance.
    SummaryStatus:
      type: string
      enum:
        - ok
        - impaired
        - insufficient-data
        - not-applicable
        - initializing
    InstanceStorageEncryptionSupport:
      type: string
      enum:
        - unsupported
        - required
    InstanceStorageFlag:
      type: boolean
    InstanceStorageInfo:
      type: object
      properties:
        totalSizeInGB:
          allOf:
            - $ref: '#/components/schemas/DiskSize'
            - description: 'The total size of the disks, in GB.'
        disks:
          allOf:
            - $ref: '#/components/schemas/DiskInfoList'
            - description: Describes the disks that are available for the instance type.
        nvmeSupport:
          allOf:
            - $ref: '#/components/schemas/EphemeralNvmeSupport'
            - description: Indicates whether non-volatile memory express (NVMe) is supported.
        encryptionSupport:
          allOf:
            - $ref: '#/components/schemas/InstanceStorageEncryptionSupport'
            - description: Indicates whether data is encrypted at rest.
      description: Describes the instance store features that are supported by the instance type.
    InstanceTypeHypervisor:
      type: string
      enum:
        - nitro
        - xen
    UsageClassTypeList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/UsageClassType'
          - xml:
              name: item
    RootDeviceTypeList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/RootDeviceType'
          - xml:
              name: item
    VirtualizationTypeList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/VirtualizationType'
          - xml:
              name: item
    ProcessorInfo:
      type: object
      properties:
        supportedArchitectures:
          allOf:
            - $ref: '#/components/schemas/ArchitectureTypeList'
            - description: The architectures supported by the instance type.
        sustainedClockSpeedInGhz:
          allOf:
            - $ref: '#/components/schemas/ProcessorSustainedClockSpeed'
            - description: 'The speed of the processor, in GHz.'
      description: Describes the processor used by the instance type.
    VCpuInfo:
      type: object
      properties:
        defaultVCpus:
          allOf:
            - $ref: '#/components/schemas/VCpuCount'
            - description: The default number of vCPUs for the instance type.
        defaultCores:
          allOf:
            - $ref: '#/components/schemas/CoreCount'
            - description: The default number of cores for the instance type.
        defaultThreadsPerCore:
          allOf:
            - $ref: '#/components/schemas/ThreadsPerCore'
            - description: The default number of threads per core for the instance type.
        validCores:
          allOf:
            - $ref: '#/components/schemas/CoreCountList'
            - description: The valid number of cores that can be configured for the instance type.
        validThreadsPerCore:
          allOf:
            - $ref: '#/components/schemas/ThreadsPerCoreList'
            - description: 'The valid number of threads per core that can be configured for the instance type. '
      description: Describes the vCPU configurations for the instance type.
    MemoryInfo:
      type: object
      properties:
        sizeInMiB:
          allOf:
            - $ref: '#/components/schemas/MemorySize'
            - description: 'The size of the memory, in MiB.'
      description: Describes the memory for the instance type.
    NetworkInfo:
      type: object
      properties:
        networkPerformance:
          allOf:
            - $ref: '#/components/schemas/NetworkPerformance'
            - description: The network performance.
        maximumNetworkInterfaces:
          allOf:
            - $ref: '#/components/schemas/MaxNetworkInterfaces'
            - description: The maximum number of network interfaces for the instance type.
        maximumNetworkCards:
          allOf:
            - $ref: '#/components/schemas/MaximumNetworkCards'
            - description: The maximum number of physical network cards that can be allocated to the instance.
        defaultNetworkCardIndex:
          allOf:
            - $ref: '#/components/schemas/DefaultNetworkCardIndex'
            - description: 'The index of the default network card, starting at 0.'
        networkCards:
          allOf:
            - $ref: '#/components/schemas/NetworkCardInfoList'
            - description: Describes the network cards for the instance type.
        ipv4AddressesPerInterface:
          allOf:
            - $ref: '#/components/schemas/MaxIpv4AddrPerInterface'
            - description: The maximum number of IPv4 addresses per network interface.
        ipv6AddressesPerInterface:
          allOf:
            - $ref: '#/components/schemas/MaxIpv6AddrPerInterface'
            - description: The maximum number of IPv6 addresses per network interface.
        ipv6Supported:
          allOf:
            - $ref: '#/components/schemas/Ipv6Flag'
            - description: Indicates whether IPv6 is supported.
        enaSupport:
          allOf:
            - $ref: '#/components/schemas/EnaSupport'
            - description: Indicates whether Elastic Network Adapter (ENA) is supported.
        efaSupported:
          allOf:
            - $ref: '#/components/schemas/EfaSupportedFlag'
            - description: Indicates whether Elastic Fabric Adapter (EFA) is supported.
        efaInfo:
          allOf:
            - $ref: '#/components/schemas/EfaInfo'
            - description: Describes the Elastic Fabric Adapters for the instance type.
        encryptionInTransitSupported:
          allOf:
            - $ref: '#/components/schemas/EncryptionInTransitSupported'
            - description: Indicates whether the instance type automatically encrypts in-transit traffic between instances.
      description: Describes the networking features of the instance type.
    PlacementGroupInfo:
      type: object
      properties:
        supportedStrategies:
          allOf:
            - $ref: '#/components/schemas/PlacementGroupStrategyList'
            - description: The supported placement group types.
      description: Describes the placement group support of the instance type.
    InstanceTypeInfo:
      type: object
      properties:
        instanceType:
          allOf:
            - $ref: '#/components/schemas/InstanceType'
            - description: 'The instance type. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance types</a> in the <i>Amazon EC2 User Guide</i>.'
        currentGeneration:
          allOf:
            - $ref: '#/components/schemas/CurrentGenerationFlag'
            - description: Indicates whether the instance type is current generation.
        freeTierEligible:
          allOf:
            - $ref: '#/components/schemas/FreeTierEligibleFlag'
            - description: Indicates whether the instance type is eligible for the free tier.
        supportedUsageClasses:
          allOf:
            - $ref: '#/components/schemas/UsageClassTypeList'
            - description: Indicates whether the instance type is offered for spot or On-Demand.
        supportedRootDeviceTypes:
          allOf:
            - $ref: '#/components/schemas/RootDeviceTypeList'
            - description: The supported root device types.
        supportedVirtualizationTypes:
          allOf:
            - $ref: '#/components/schemas/VirtualizationTypeList'
            - description: The supported virtualization types.
        bareMetal:
          allOf:
            - $ref: '#/components/schemas/BareMetalFlag'
            - description: Indicates whether the instance is a bare metal instance type.
        hypervisor:
          allOf:
            - $ref: '#/components/schemas/InstanceTypeHypervisor'
            - description: The hypervisor for the instance type.
        processorInfo:
          allOf:
            - $ref: '#/components/schemas/ProcessorInfo'
            - description: Describes the processor.
        vCpuInfo:
          allOf:
            - $ref: '#/components/schemas/VCpuInfo'
            - description: Describes the vCPU configurations for the instance type.
        memoryInfo:
          allOf:
            - $ref: '#/components/schemas/MemoryInfo'
            - description: Describes the memory for the instance type.
        instanceStorageSupported:
          allOf:
            - $ref: '#/components/schemas/InstanceStorageFlag'
            - description: Indicates whether instance storage is supported.
        instanceStorageInfo:
          allOf:
            - $ref: '#/components/schemas/InstanceStorageInfo'
            - description: Describes the instance storage for the instance type.
        ebsInfo:
          allOf:
            - $ref: '#/components/schemas/EbsInfo'
            - description: Describes the Amazon EBS settings for the instance type.
        networkInfo:
          allOf:
            - $ref: '#/components/schemas/NetworkInfo'
            - description: Describes the network settings for the instance type.
        gpuInfo:
          allOf:
            - $ref: '#/components/schemas/GpuInfo'
            - description: Describes the GPU accelerator settings for the instance type.
        fpgaInfo:
          allOf:
            - $ref: '#/components/schemas/FpgaInfo'
            - description: Describes the FPGA accelerator settings for the instance type.
        placementGroupInfo:
          allOf:
            - $ref: '#/components/schemas/PlacementGroupInfo'
            - description: Describes the placement group settings for the instance type.
        inferenceAcceleratorInfo:
          allOf:
            - $ref: '#/components/schemas/InferenceAcceleratorInfo'
            - description: Describes the Inference accelerator settings for the instance type.
        hibernationSupported:
          allOf:
            - $ref: '#/components/schemas/HibernationFlag'
            - description: Indicates whether On-Demand hibernation is supported.
        burstablePerformanceSupported:
          allOf:
            - $ref: '#/components/schemas/BurstablePerformanceFlag'
            - description: Indicates whether the instance type is a burstable performance instance type.
        dedicatedHostsSupported:
          allOf:
            - $ref: '#/components/schemas/DedicatedHostFlag'
            - description: Indicates whether Dedicated Hosts are supported on the instance type.
        autoRecoverySupported:
          allOf:
            - $ref: '#/components/schemas/AutoRecoveryFlag'
            - description: Indicates whether auto recovery is supported.
        supportedBootModes:
          allOf:
            - $ref: '#/components/schemas/BootModeTypeList'
            - description: 'The supported boot modes. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html">Boot modes</a> in the <i>Amazon EC2 User Guide</i>.'
      description: Describes the instance type.
    InstanceTypeInfoFromInstanceRequirements:
      type: object
      properties:
        instanceType:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The matching instance type.
      description: The list of instance types with the specified instance attributes.
    Location:
      type: string
    InstanceTypeOffering:
      type: object
      properties:
        instanceType:
          allOf:
            - $ref: '#/components/schemas/InstanceType'
            - description: 'The instance type. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance types</a> in the <i>Amazon EC2 User Guide</i>.'
        locationType:
          allOf:
            - $ref: '#/components/schemas/LocationType'
            - description: The location type.
        location:
          allOf:
            - $ref: '#/components/schemas/Location'
            - description: 'The identifier for the location. This depends on the location type. For example, if the location type is <code>region</code>, the location is the Region code (for example, <code>us-east-2</code>.)'
      description: The instance types offered.
    InstanceTypes:
      type: array
      items:
        $ref: '#/components/schemas/String'
      minItems: 0
      maxItems: 1000
    InstanceUsage:
      type: object
      properties:
        accountId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Amazon Web Services account that is making use of the Capacity Reservation.
        usedInstanceCount:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of instances the Amazon Web Services account currently has in the Capacity Reservation.
      description: Information about the Capacity Reservation usage.
    InterfacePermissionType:
      type: string
      enum:
        - INSTANCE-ATTACH
        - EIP-ASSOCIATE
    InterfaceProtocolType:
      type: string
      enum:
        - VLAN
        - GRE
    InternetGatewayAttachment:
      type: object
      properties:
        state:
          allOf:
            - $ref: '#/components/schemas/AttachmentStatus'
            - description: 'The current state of the attachment. For an internet gateway, the state is <code>available</code> when attached to a VPC; otherwise, this value is not returned.'
        vpcId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the VPC.
      description: Describes the attachment of a VPC to an internet gateway or an egress-only internet gateway.
    InternetGatewayIdList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/InternetGatewayId'
          - xml:
              name: item
    IpAddressType:
      type: string
      enum:
        - ipv4
        - dualstack
        - ipv6
    IpRangeList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/IpRange'
          - xml:
              name: item
    Ipv6RangeList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Ipv6Range'
          - xml:
              name: item
    PrefixListIdList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/PrefixListId'
          - xml:
              name: item
    UserIdGroupPairList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/UserIdGroupPair'
          - xml:
              name: item
    IpRange:
      type: object
      properties:
        cidrIp:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The IPv4 CIDR range. You can either specify a CIDR range or a source security group, not both. To specify a single IPv4 address, use the /32 prefix length.'
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>A description for the security group rule that references this IPv4 address range.</p> <p>Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&amp;;{}!$*</p>'
      description: Describes an IPv4 range.
    IpRanges:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: item
    IpamId:
      type: string
    IpamOperatingRegionSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/IpamOperatingRegion'
          - xml:
              name: item
    IpamState:
      type: string
      enum:
        - create-in-progress
        - create-complete
        - create-failed
        - modify-in-progress
        - modify-complete
        - modify-failed
        - delete-in-progress
        - delete-complete
        - delete-failed
        - isolate-in-progress
        - isolate-complete
        - restore-in-progress
    IpamAddressHistoryMaxResults:
      type: integer
      minimum: 1
      maximum: 1000
    IpamAddressHistoryResourceType:
      type: string
      enum:
        - eip
        - vpc
        - subnet
        - network-interface
        - instance
    IpamComplianceStatus:
      type: string
      enum:
        - compliant
        - noncompliant
        - unmanaged
        - ignored
    IpamOverlapStatus:
      type: string
      enum:
        - overlapping
        - nonoverlapping
        - ignored
    IpamAddressHistoryRecord:
      type: object
      properties:
        resourceOwnerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the resource owner.
        resourceRegion:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Web Services Region of the resource.
        resourceType:
          allOf:
            - $ref: '#/components/schemas/IpamAddressHistoryResourceType'
            - description: The type of the resource.
        resourceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the resource.
        resourceCidr:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The CIDR of the resource.
        resourceName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the resource.
        resourceComplianceStatus:
          allOf:
            - $ref: '#/components/schemas/IpamComplianceStatus'
            - description: 'The compliance status of a resource. For more information on compliance statuses, see <a href="/vpc/latest/ipam/monitor-cidr-compliance-ipam.html">Monitor CIDR usage by resource</a> in the <i>Amazon VPC IPAM User Guide</i>.'
        resourceOverlapStatus:
          allOf:
            - $ref: '#/components/schemas/IpamOverlapStatus'
            - description: 'The overlap status of an IPAM resource. The overlap status tells you if the CIDR for a resource overlaps with another CIDR in the scope. For more information on overlap statuses, see <a href="/vpc/latest/ipam/monitor-cidr-compliance-ipam.html">Monitor CIDR usage by resource</a> in the <i>Amazon VPC IPAM User Guide</i>.'
        vpcId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The VPC ID of the resource.
        sampledStartTime:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: 'Sampled start time of the resource-to-CIDR association within the IPAM scope. Changes are picked up in periodic snapshots, so the start time may have occurred before this specific time.'
        sampledEndTime:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: 'Sampled end time of the resource-to-CIDR association within the IPAM scope. Changes are picked up in periodic snapshots, so the end time may have occurred before this specific time.'
      description: 'The historical record of a CIDR within an IPAM scope. For more information, see <a href="/vpc/latest/ipam/view-history-cidr-ipam.html">View the history of IP addresses</a> in the <i>Amazon VPC IPAM User Guide</i>. '
    IpamCidrAuthorizationContext:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The signed authorization message for the prefix and account.
      description: A signed document that proves that you are authorized to bring the specified IP address range to Amazon using BYOIP.
    IpamManagementState:
      type: string
      enum:
        - managed
        - unmanaged
        - ignored
    IpamMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    IpamOperatingRegion:
      type: object
      properties:
        regionName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the operating Region.
      description: '<p>The operating Regions for an IPAM. Operating Regions are Amazon Web Services Regions where the IPAM is allowed to manage IP address CIDRs. IPAM only discovers and monitors resources in the Amazon Web Services Regions you select as operating Regions.</p> <p>For more information about operating Regions, see <a href="/vpc/latest/ipam/create-ipam.html">Create an IPAM</a> in the <i>Amazon VPC IPAM User Guide</i>.</p>'
    IpamScopeType:
      type: string
      enum:
        - public
        - private
    IpamPoolState:
      type: string
      enum:
        - create-in-progress
        - create-complete
        - create-failed
        - modify-in-progress
        - modify-complete
        - modify-failed
        - delete-in-progress
        - delete-complete
        - delete-failed
        - isolate-in-progress
        - isolate-complete
        - restore-in-progress
    IpamResourceTagList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/IpamResourceTag'
          - xml:
              name: item
    IpamPoolAllocationResourceType:
      type: string
      enum:
        - ipam-pool
        - vpc
        - ec2-public-ipv4-pool
        - custom
    IpamPoolCidrState:
      type: string
      enum:
        - pending-provision
        - provisioned
        - failed-provision
        - pending-deprovision
        - deprovisioned
        - failed-deprovision
        - pending-import
        - failed-import
    IpamPoolCidrFailureReason:
      type: object
      properties:
        code:
          allOf:
            - $ref: '#/components/schemas/IpamPoolCidrFailureCode'
            - description: An error code related to why an IPAM pool CIDR failed to be provisioned.
        message:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A message related to why an IPAM pool CIDR failed to be provisioned.
      description: Details related to why an IPAM pool CIDR failed to be provisioned.
    IpamPoolCidrFailureCode:
      type: string
      enum:
        - cidr-not-available
    IpamResourceType:
      type: string
      enum:
        - vpc
        - subnet
        - eip
        - public-ipv4-pool
        - ipv6-pool
    IpamResourceCidr:
      type: object
      properties:
        ipamId:
          allOf:
            - $ref: '#/components/schemas/IpamId'
            - description: The IPAM ID for an IPAM resource.
        ipamScopeId:
          allOf:
            - $ref: '#/components/schemas/IpamScopeId'
            - description: The scope ID for an IPAM resource.
        ipamPoolId:
          allOf:
            - $ref: '#/components/schemas/IpamPoolId'
            - description: The pool ID for an IPAM resource.
        resourceRegion:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Web Services Region for an IPAM resource.
        resourceOwnerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Web Services account number of the owner of an IPAM resource.
        resourceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of an IPAM resource.
        resourceName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of an IPAM resource.
        resourceCidr:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The CIDR for an IPAM resource.
        resourceType:
          allOf:
            - $ref: '#/components/schemas/IpamResourceType'
            - description: The type of IPAM resource.
        resourceTagSet:
          allOf:
            - $ref: '#/components/schemas/IpamResourceTagList'
            - description: The tags for an IPAM resource.
        ipUsage:
          allOf:
            - $ref: '#/components/schemas/BoxedDouble'
            - description: 'The IP address space in the IPAM pool that is allocated to this resource. To convert the decimal to a percentage, multiply the decimal by 100.'
        complianceStatus:
          allOf:
            - $ref: '#/components/schemas/IpamComplianceStatus'
            - description: 'The compliance status of the IPAM resource. For more information on compliance statuses, see <a href="/vpc/latest/ipam/monitor-cidr-compliance-ipam.html">Monitor CIDR usage by resource</a> in the <i>Amazon VPC IPAM User Guide</i>.'
        managementState:
          allOf:
            - $ref: '#/components/schemas/IpamManagementState'
            - description: 'The management state of the resource. For more information about management states, see <a href="/vpc/latest/ipam/monitor-cidr-compliance-ipam.html">Monitor CIDR usage by resource</a> in the <i>Amazon VPC IPAM User Guide</i>.'
        overlapStatus:
          allOf:
            - $ref: '#/components/schemas/IpamOverlapStatus'
            - description: 'The overlap status of an IPAM resource. The overlap status tells you if the CIDR for a resource overlaps with another CIDR in the scope. For more information on overlap statuses, see <a href="/vpc/latest/ipam/monitor-cidr-compliance-ipam.html">Monitor CIDR usage by resource</a> in the <i>Amazon VPC IPAM User Guide</i>.'
        vpcId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of a VPC.
      description: The CIDR for an IPAM resource.
    IpamResourceTag:
      type: object
      properties:
        key:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.'
        value:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The value of the tag.
      description: 'The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.'
    IpamScopeState:
      type: string
      enum:
        - create-in-progress
        - create-complete
        - create-failed
        - modify-in-progress
        - modify-complete
        - modify-failed
        - delete-in-progress
        - delete-complete
        - delete-failed
        - isolate-in-progress
        - isolate-complete
        - restore-in-progress
    Ipv4PrefixList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Ipv4PrefixSpecificationRequest'
          - xml:
              name: item
    Ipv4PrefixSpecificationResponse:
      type: object
      properties:
        ipv4Prefix:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: One or more IPv4 delegated prefixes assigned to the network interface.
      description: Information about the IPv4 delegated prefixes assigned to a network interface.
    Ipv4PrefixListResponse:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Ipv4PrefixSpecificationResponse'
          - xml:
              name: item
    Ipv4PrefixSpecification:
      type: object
      properties:
        ipv4Prefix:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The IPv4 prefix. For information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-prefix-eni.html"> Assigning prefixes to Amazon EC2 network interfaces</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.'
      description: Describes an IPv4 prefix.
    Ipv6Address:
      type: string
    Ipv6CidrAssociation:
      type: object
      properties:
        ipv6Cidr:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The IPv6 CIDR block.
        associatedResource:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The resource that's associated with the IPv6 CIDR block.
      description: Describes an IPv6 CIDR block association.
    Ipv6CidrBlock:
      type: object
      properties:
        ipv6CidrBlock:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The IPv6 CIDR block.
      description: Describes an IPv6 CIDR block.
    Ipv6CidrBlockSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Ipv6CidrBlock'
          - xml:
              name: item
    Ipv6Flag:
      type: boolean
    PoolCidrBlocksSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/PoolCidrBlock'
          - xml:
              name: item
    Ipv6Pool:
      type: object
      properties:
        poolId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the address pool.
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The description for the address pool.
        poolCidrBlockSet:
          allOf:
            - $ref: '#/components/schemas/PoolCidrBlocksSet'
            - description: The CIDR blocks for the address pool.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: Any tags for the address pool.
      description: Describes an IPv6 address pool.
    Ipv6PoolIdList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Ipv6PoolEc2Id'
          - xml:
              name: item
    Ipv6PoolMaxResults:
      type: integer
      minimum: 1
      maximum: 1000
    Ipv6PrefixList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Ipv6PrefixSpecificationRequest'
          - xml:
              name: item
    Ipv6PrefixSpecificationResponse:
      type: object
      properties:
        ipv6Prefix:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: One or more IPv6 delegated prefixes assigned to the network interface.
      description: Information about the IPv6 delegated prefixes assigned to a network interface.
    Ipv6PrefixListResponse:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Ipv6PrefixSpecificationResponse'
          - xml:
              name: item
    Ipv6PrefixSpecification:
      type: object
      properties:
        ipv6Prefix:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The IPv6 prefix.
      description: Describes the IPv6 prefix.
    Ipv6PrefixesList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Ipv6PrefixSpecification'
          - xml:
              name: item
    Ipv6Range:
      type: object
      properties:
        cidrIpv6:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The IPv6 CIDR range. You can either specify a CIDR range or a source security group, not both. To specify a single IPv6 address, use the /128 prefix length.'
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>A description for the security group rule that references this IPv6 address range.</p> <p>Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&amp;;{}!$*</p>'
      description: '[EC2-VPC only] Describes an IPv6 range.'
    Ipv6SupportValue:
      type: string
      enum:
        - enable
        - disable
    SensitiveUserData:
      type: string
      format: password
    KeyPairInfo:
      type: object
      properties:
        keyPairId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the key pair.
        keyFingerprint:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>If you used <a>CreateKeyPair</a> to create the key pair:</p> <ul> <li> <p>For RSA key pairs, the key fingerprint is the SHA-1 digest of the DER encoded private key.</p> </li> <li> <p>For ED25519 key pairs, the key fingerprint is the base64-encoded SHA-256 digest, which is the default for OpenSSH, starting with <a href="http://www.openssh.com/txt/release-6.8">OpenSSH 6.8</a>.</p> </li> </ul> <p>If you used <a>ImportKeyPair</a> to provide Amazon Web Services the public key:</p> <ul> <li> <p>For RSA key pairs, the key fingerprint is the MD5 public key fingerprint as specified in section 4 of RFC4716.</p> </li> <li> <p>For ED25519 key pairs, the key fingerprint is the base64-encoded SHA-256 digest, which is the default for OpenSSH, starting with <a href="http://www.openssh.com/txt/release-6.8">OpenSSH 6.8</a>.</p> </li> </ul>'
        keyName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the key pair.
        keyType:
          allOf:
            - $ref: '#/components/schemas/KeyType'
            - description: The type of key pair.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: Any tags applied to the key pair.
        publicKey:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The public key material.
        createTime:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: '<p>If you used Amazon EC2 to create the key pair, this is the date and time when the key was created, in <a href="https://www.iso.org/iso-8601-date-and-time-format.html">ISO 8601 date-time format</a>, in the UTC time zone.</p> <p>If you imported an existing key pair to Amazon EC2, this is the date and time the key was imported, in <a href="https://www.iso.org/iso-8601-date-and-time-format.html">ISO 8601 date-time format</a>, in the UTC time zone.</p>'
      description: Describes a key pair.
    LastError:
      type: object
      properties:
        message:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The error message for the VPC endpoint error.
        code:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The error code for the VPC endpoint error.
      description: The last error that occurred for a VPC endpoint.
    LaunchPermission:
      type: object
      properties:
        group:
          allOf:
            - $ref: '#/components/schemas/PermissionGroup'
            - description: The name of the group.
        userId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The Amazon Web Services account ID.</p> <p>Constraints: Up to 10 000 account IDs can be specified in a single request.</p>'
        organizationArn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Resource Name (ARN) of an organization.
        organizationalUnitArn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Resource Name (ARN) of an organizational unit (OU).
      description: Describes a launch permission.
    LaunchPermissionModifications:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/LaunchPermissionList'
            - description: 'The Amazon Web Services account ID, organization ARN, or OU ARN to remove from the list of launch permissions for the AMI.'
      description: Describes a launch permission modification.
    LaunchSpecification:
      type: object
      properties:
        userData:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Base64-encoded user data for the instance.
        groupSet:
          allOf:
            - $ref: '#/components/schemas/GroupIdentifierList'
            - description: 'One or more security groups. When requesting instances in a VPC, you must specify the IDs of the security groups. When requesting instances in EC2-Classic, you can specify the names or the IDs of the security groups.'
        addressingType:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Deprecated.
        blockDeviceMapping:
          allOf:
            - $ref: '#/components/schemas/BlockDeviceMappingList'
            - description: One or more block device mapping entries.
        ebsOptimized:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: '<p>Indicates whether the instance is optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn''t available with all instance types. Additional usage charges apply when using an EBS Optimized instance.</p> <p>Default: <code>false</code> </p>'
        iamInstanceProfile:
          allOf:
            - $ref: '#/components/schemas/IamInstanceProfileSpecification'
            - description: The IAM instance profile.
        imageId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the AMI.
        instanceType:
          allOf:
            - $ref: '#/components/schemas/InstanceType'
            - description: The instance type. Only one instance type can be specified.
        kernelId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the kernel.
        keyName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the key pair.
        networkInterfaceSet:
          allOf:
            - $ref: '#/components/schemas/InstanceNetworkInterfaceSpecificationList'
            - description: 'One or more network interfaces. If you specify a network interface, you must specify subnet IDs and security group IDs using the network interface.'
        placement:
          allOf:
            - $ref: '#/components/schemas/SpotPlacement'
            - description: The placement information for the instance.
        ramdiskId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the RAM disk.
        subnetId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the subnet in which to launch the instance.
        monitoring:
          $ref: '#/components/schemas/RunInstancesMonitoringEnabled'
      description: Describes the launch specification for an instance.
    SpotFleetLaunchSpecification:
      type: object
      properties:
        groupSet:
          allOf:
            - $ref: '#/components/schemas/GroupIdentifierList'
            - description: 'One or more security groups. When requesting instances in a VPC, you must specify the IDs of the security groups. When requesting instances in EC2-Classic, you can specify the names or the IDs of the security groups.'
        addressingType:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Deprecated.
        blockDeviceMapping:
          allOf:
            - $ref: '#/components/schemas/BlockDeviceMappingList'
            - description: 'One or more block devices that are mapped to the Spot Instances. You can''t specify both a snapshot ID and an encryption value. This is because only blank volumes can be encrypted on creation. If a snapshot is the basis for a volume, it is not blank and its encryption status is used for the volume encryption status.'
        ebsOptimized:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: '<p>Indicates whether the instances are optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn''t available with all instance types. Additional usage charges apply when using an EBS Optimized instance.</p> <p>Default: <code>false</code> </p>'
        iamInstanceProfile:
          allOf:
            - $ref: '#/components/schemas/IamInstanceProfileSpecification'
            - description: The IAM instance profile.
        imageId:
          allOf:
            - $ref: '#/components/schemas/ImageId'
            - description: The ID of the AMI.
        instanceType:
          allOf:
            - $ref: '#/components/schemas/InstanceType'
            - description: The instance type.
        kernelId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the kernel.
        keyName:
          allOf:
            - $ref: '#/components/schemas/KeyPairName'
            - description: The name of the key pair.
        monitoring:
          allOf:
            - $ref: '#/components/schemas/SpotFleetMonitoring'
            - description: Enable or disable monitoring for the instances.
        networkInterfaceSet:
          allOf:
            - $ref: '#/components/schemas/InstanceNetworkInterfaceSpecificationList'
            - description: '<p>One or more network interfaces. If you specify a network interface, you must specify subnet IDs and security group IDs using the network interface.</p> <note> <p> <code>SpotFleetLaunchSpecification</code> currently does not support Elastic Fabric Adapter (EFA). To specify an EFA, you must use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_LaunchTemplateConfig.html">LaunchTemplateConfig</a>.</p> </note>'
        placement:
          allOf:
            - $ref: '#/components/schemas/SpotPlacement'
            - description: The placement information.
        ramdiskId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The ID of the RAM disk. Some kernels require additional drivers at launch. Check the kernel requirements for information about whether you need to specify a RAM disk. To find kernel requirements, refer to the Amazon Web Services Resource Center and search for the kernel ID.'
        spotPrice:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The maximum price per unit hour that you are willing to pay for a Spot Instance. If this value is not specified, the default is the Spot price specified for the fleet. To determine the Spot price per unit hour, divide the Spot price by the value of <code>WeightedCapacity</code>.'
        subnetId:
          allOf:
            - $ref: '#/components/schemas/SubnetId'
            - description: 'The IDs of the subnets in which to launch the instances. To specify multiple subnets, separate them using commas; for example, "subnet-1234abcdeexample1, subnet-0987cdef6example2".'
        userData:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Base64-encoded user data that instances use when starting up.
        weightedCapacity:
          allOf:
            - $ref: '#/components/schemas/Double'
            - description: '<p>The number of units provided by the specified instance type. These are the same units that you chose to set the target capacity in terms of instances, or a performance characteristic such as vCPUs, memory, or I/O.</p> <p>If the target capacity divided by this value is not a whole number, Amazon EC2 rounds the number of instances to the next whole number. If this value is not specified, the default is 1.</p>'
        tagSpecificationSet:
          allOf:
            - $ref: '#/components/schemas/SpotFleetTagSpecificationList'
            - description: The tags to apply during creation.
        instanceRequirements:
          allOf:
            - $ref: '#/components/schemas/InstanceRequirements'
            - description: '<p>The attributes for the instance types. When you specify instance attributes, Amazon EC2 will identify instance types with those attributes.</p> <note> <p>If you specify <code>InstanceRequirements</code>, you can''t specify <code>InstanceTypes</code>.</p> </note>'
      description: 'Describes the launch specification for one or more Spot Instances. If you include On-Demand capacity in your fleet request or want to specify an EFA network device, you can''t use <code>SpotFleetLaunchSpecification</code>; you must use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_LaunchTemplateConfig.html">LaunchTemplateConfig</a>.'
    LaunchTemplateAutoRecoveryState:
      type: string
      enum:
        - default
        - disabled
    LaunchTemplateEbsBlockDevice:
      type: object
      properties:
        encrypted:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the EBS volume is encrypted.
        deleteOnTermination:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the EBS volume is deleted on instance termination.
        iops:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The number of I/O operations per second (IOPS) that the volume supports. '
        kmsKeyId:
          allOf:
            - $ref: '#/components/schemas/KmsKeyId'
            - description: The ARN of the Key Management Service (KMS) CMK used for encryption.
        snapshotId:
          allOf:
            - $ref: '#/components/schemas/SnapshotId'
            - description: The ID of the snapshot.
        volumeSize:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The size of the volume, in GiB.'
        volumeType:
          allOf:
            - $ref: '#/components/schemas/VolumeType'
            - description: The volume type.
        throughput:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The throughput that the volume supports, in MiB/s.'
      description: Describes a block device for an EBS volume.
    LaunchTemplateBlockDeviceMapping:
      type: object
      properties:
        deviceName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The device name.
        virtualName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The virtual device name (ephemeralN).
        ebs:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateEbsBlockDevice'
            - description: Information about the block device for an EBS volume.
        noDevice:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'To omit the device from the block device mapping, specify an empty string.'
      description: Describes a block device mapping.
    LaunchTemplateBlockDeviceMappingList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/LaunchTemplateBlockDeviceMapping'
          - xml:
              name: item
    LaunchTemplateBlockDeviceMappingRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'To omit the device from the block device mapping, specify an empty string.'
      description: Describes a block device mapping.
    LaunchTemplateCapacityReservationSpecificationResponse:
      type: object
      properties:
        capacityReservationPreference:
          allOf:
            - $ref: '#/components/schemas/CapacityReservationPreference'
            - description: '<p>Indicates the instance''s Capacity Reservation preferences. Possible preferences include:</p> <ul> <li> <p> <code>open</code> - The instance can run in any <code>open</code> Capacity Reservation that has matching attributes (instance type, platform, Availability Zone).</p> </li> <li> <p> <code>none</code> - The instance avoids running in a Capacity Reservation even if one is available. The instance runs in On-Demand capacity.</p> </li> </ul>'
        capacityReservationTarget:
          allOf:
            - $ref: '#/components/schemas/CapacityReservationTargetResponse'
            - description: Information about the target Capacity Reservation or Capacity Reservation group.
      description: Information about the Capacity Reservation targeting option.
    LaunchTemplateOverridesList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/LaunchTemplateOverrides'
          - xml:
              name: item
    LaunchTemplateCpuOptions:
      type: object
      properties:
        coreCount:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of CPU cores for the instance.
        threadsPerCore:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of threads per CPU core.
      description: The CPU options for the instance.
    LaunchTemplateCpuOptionsRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The number of threads per CPU core. To disable multithreading for the instance, specify a value of 1. Otherwise, specify the default value of 2.'
      description: The CPU options for the instance. Both the core count and threads per core must be specified in the request.
    LaunchTemplateEbsBlockDeviceRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: '<p>The throughput to provision for a <code>gp3</code> volume, with a maximum of 1,000 MiB/s.</p> <p>Valid Range: Minimum value of 125. Maximum value of 1000.</p>'
      description: The parameters for a block device for an EBS volume.
    LaunchTemplateElasticInferenceAcceleratorCount:
      type: integer
      minimum: 1
    LaunchTemplateElasticInferenceAccelerator:
      type: object
      required:
        - Type
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateElasticInferenceAcceleratorCount'
            - description: '<p> The number of elastic inference accelerators to attach to the instance. </p> <p>Default: 1</p>'
      description: ' Describes an elastic inference accelerator. '
    LaunchTemplateElasticInferenceAcceleratorResponse:
      type: object
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: ' The type of elastic inference accelerator. The possible values are eia1.medium, eia1.large, and eia1.xlarge. '
        count:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: '<p> The number of elastic inference accelerators to attach to the instance. </p> <p>Default: 1</p>'
      description: ' Describes an elastic inference accelerator. '
    LaunchTemplateElasticInferenceAcceleratorResponseList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/LaunchTemplateElasticInferenceAcceleratorResponse'
          - xml:
              name: item
    LaunchTemplateEnclaveOptions:
      type: object
      properties:
        enabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'If this parameter is set to <code>true</code>, the instance is enabled for Amazon Web Services Nitro Enclaves; otherwise, it is not enabled for Amazon Web Services Nitro Enclaves.'
      description: Indicates whether the instance is enabled for Amazon Web Services Nitro Enclaves.
    LaunchTemplateEnclaveOptionsRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'To enable the instance for Amazon Web Services Nitro Enclaves, set this parameter to <code>true</code>.'
      description: 'Indicates whether the instance is enabled for Amazon Web Services Nitro Enclaves. For more information, see <a href="https://docs.aws.amazon.com/enclaves/latest/user/nitro-enclave.html"> What is Amazon Web Services Nitro Enclaves?</a> in the <i>Amazon Web Services Nitro Enclaves User Guide</i>.'
    LaunchTemplateErrorCode:
      type: string
      enum:
        - launchTemplateIdDoesNotExist
        - launchTemplateIdMalformed
        - launchTemplateNameDoesNotExist
        - launchTemplateNameMalformed
        - launchTemplateVersionDoesNotExist
        - unexpectedError
    LaunchTemplateHibernationOptions:
      type: object
      properties:
        configured:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'If this parameter is set to <code>true</code>, the instance is enabled for hibernation; otherwise, it is not enabled for hibernation.'
      description: Indicates whether an instance is configured for hibernation.
    LaunchTemplateHibernationOptionsRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: '<p>If you set this parameter to <code>true</code>, the instance is enabled for hibernation.</p> <p>Default: <code>false</code> </p>'
      description: 'Indicates whether the instance is configured for hibernation. This parameter is valid only if the instance meets the <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html#hibernating-prerequisites">hibernation prerequisites</a>.'
    LaunchTemplateHttpTokensState:
      type: string
      enum:
        - optional
        - required
    LaunchTemplateIamInstanceProfileSpecification:
      type: object
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Resource Name (ARN) of the instance profile.
        name:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the instance profile.
      description: Describes an IAM instance profile.
    LaunchTemplateInstanceMaintenanceOptions:
      type: object
      properties:
        autoRecovery:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateAutoRecoveryState'
            - description: Disables the automatic recovery behavior of your instance or sets it to default.
      description: The maintenance options of your instance.
    MarketType:
      type: string
      enum:
        - spot
    LaunchTemplateSpotMarketOptions:
      type: object
      properties:
        maxPrice:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The maximum hourly price you're willing to pay for the Spot Instances.
        spotInstanceType:
          allOf:
            - $ref: '#/components/schemas/SpotInstanceType'
            - description: The Spot Instance request type.
        blockDurationMinutes:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The required duration for the Spot Instances (also known as Spot blocks), in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).'
        validUntil:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: 'The end date of the request. For a one-time request, the request remains active until all instances launch, the request is canceled, or this date is reached. If the request is persistent, it remains active until it is canceled or this date and time is reached.'
        instanceInterruptionBehavior:
          allOf:
            - $ref: '#/components/schemas/InstanceInterruptionBehavior'
            - description: The behavior when a Spot Instance is interrupted.
      description: The options for Spot Instances.
    LaunchTemplateInstanceMarketOptions:
      type: object
      properties:
        marketType:
          allOf:
            - $ref: '#/components/schemas/MarketType'
            - description: The market type.
        spotOptions:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateSpotMarketOptions'
            - description: The options for Spot Instances.
      description: The market (purchasing) option for the instances.
    LaunchTemplateSpotMarketOptionsRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/InstanceInterruptionBehavior'
            - description: The behavior when a Spot Instance is interrupted. The default is <code>terminate</code>.
      description: The options for Spot Instances.
    LaunchTemplateInstanceMarketOptionsRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateSpotMarketOptionsRequest'
            - description: The options for Spot Instances.
      description: The market (purchasing) option for the instances.
    LaunchTemplateInstanceMetadataEndpointState:
      type: string
      enum:
        - disabled
        - enabled
    LaunchTemplateInstanceMetadataOptionsState:
      type: string
      enum:
        - pending
        - applied
    LaunchTemplateInstanceMetadataProtocolIpv6:
      type: string
      enum:
        - disabled
        - enabled
    LaunchTemplateInstanceMetadataTagsState:
      type: string
      enum:
        - disabled
        - enabled
    LaunchTemplateInstanceMetadataOptions:
      type: object
      properties:
        state:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateInstanceMetadataOptionsState'
            - description: <p>The state of the metadata option changes.</p> <p> <code>pending</code> - The metadata options are being updated and the instance is not ready to process metadata traffic with the new selection.</p> <p> <code>applied</code> - The metadata options have been successfully applied on the instance.</p>
        httpTokens:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateHttpTokensState'
            - description: '<p>The state of token usage for your instance metadata requests. If the parameter is not specified in the request, the default state is <code>optional</code>.</p> <p>If the state is <code>optional</code>, you can choose to retrieve instance metadata with or without a signed token header on your request. If you retrieve the IAM role credentials without a token, the version 1.0 role credentials are returned. If you retrieve the IAM role credentials using a valid signed token, the version 2.0 role credentials are returned.</p> <p>If the state is <code>required</code>, you must send a signed token header with any instance metadata retrieval requests. In this state, retrieving the IAM role credentials always returns the version 2.0 credentials; the version 1.0 credentials are not available.</p>'
        httpPutResponseHopLimit:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: '<p>The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel.</p> <p>Default: 1</p> <p>Possible values: Integers from 1 to 64</p>'
        httpEndpoint:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateInstanceMetadataEndpointState'
            - description: '<p>Enables or disables the HTTP metadata endpoint on your instances. If the parameter is not specified, the default state is <code>enabled</code>.</p> <note> <p>If you specify a value of <code>disabled</code>, you will not be able to access your instance metadata. </p> </note>'
        httpProtocolIpv6:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateInstanceMetadataProtocolIpv6'
            - description: '<p>Enables or disables the IPv6 endpoint for the instance metadata service.</p> <p>Default: <code>disabled</code> </p>'
        instanceMetadataTags:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateInstanceMetadataTagsState'
            - description: '<p>Set to <code>enabled</code> to allow access to instance tags from the instance metadata. Set to <code>disabled</code> to turn off access to instance tags from the instance metadata. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#work-with-tags-in-IMDS">Work with instance tags using the instance metadata</a>.</p> <p>Default: <code>disabled</code> </p>'
      description: 'The metadata options for the instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">Instance Metadata and User Data</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.'
    LaunchTemplateInstanceMetadataOptionsRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateInstanceMetadataTagsState'
            - description: '<p>Set to <code>enabled</code> to allow access to instance tags from the instance metadata. Set to <code>disabled</code> to turn off access to instance tags from the instance metadata. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#work-with-tags-in-IMDS">Work with instance tags using the instance metadata</a>.</p> <p>Default: <code>disabled</code> </p>'
      description: 'The metadata options for the instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">Instance Metadata and User Data</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.'
    LaunchTemplateInstanceNetworkInterfaceSpecification:
      type: object
      properties:
        associateCarrierIpAddress:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: '<p>Indicates whether to associate a Carrier IP address with eth0 for a new network interface.</p> <p>Use this option when you launch an instance in a Wavelength Zone and want to associate a Carrier IP address with the network interface. For more information about Carrier IP addresses, see <a href="https://docs.aws.amazon.com/wavelength/latest/developerguide/how-wavelengths-work.html#provider-owned-ip">Carrier IP addresses</a> in the <i>Wavelength Developer Guide</i>.</p>'
        associatePublicIpAddress:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether to associate a public IPv4 address with eth0 for a new network interface.
        deleteOnTermination:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the network interface is deleted when the instance is terminated.
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A description for the network interface.
        deviceIndex:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The device index for the network interface attachment.
        groupSet:
          allOf:
            - $ref: '#/components/schemas/GroupIdStringList'
            - description: The IDs of one or more security groups.
        interfaceType:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The type of network interface.
        ipv6AddressCount:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of IPv6 addresses for the network interface.
        ipv6AddressesSet:
          allOf:
            - $ref: '#/components/schemas/InstanceIpv6AddressList'
            - description: The IPv6 addresses for the network interface.
        networkInterfaceId:
          allOf:
            - $ref: '#/components/schemas/NetworkInterfaceId'
            - description: The ID of the network interface.
        privateIpAddress:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The primary private IPv4 address of the network interface.
        privateIpAddressesSet:
          allOf:
            - $ref: '#/components/schemas/PrivateIpAddressSpecificationList'
            - description: One or more private IPv4 addresses.
        secondaryPrivateIpAddressCount:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of secondary private IPv4 addresses for the network interface.
        subnetId:
          allOf:
            - $ref: '#/components/schemas/SubnetId'
            - description: The ID of the subnet for the network interface.
        networkCardIndex:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The index of the network card.
        ipv4PrefixSet:
          allOf:
            - $ref: '#/components/schemas/Ipv4PrefixListResponse'
            - description: One or more IPv4 prefixes assigned to the network interface.
        ipv4PrefixCount:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of IPv4 prefixes that Amazon Web Services automatically assigned to the network interface.
        ipv6PrefixSet:
          allOf:
            - $ref: '#/components/schemas/Ipv6PrefixListResponse'
            - description: One or more IPv6 prefixes assigned to the network interface.
        ipv6PrefixCount:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of IPv6 prefixes that Amazon Web Services automatically assigned to the network interface.
      description: Describes a network interface.
    LaunchTemplateInstanceNetworkInterfaceSpecificationList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/LaunchTemplateInstanceNetworkInterfaceSpecification'
          - xml:
              name: item
    LaunchTemplateInstanceNetworkInterfaceSpecificationRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The device index for the network interface attachment.
        SecurityGroupId:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The index of the network card. Some instance types support multiple network cards. The primary network interface must be assigned to network card index 0. The default is network card index 0.
        Ipv4Prefix:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of IPv4 prefixes to be automatically assigned to the network interface. You cannot use this option if you use the <code>Ipv4Prefix</code> option.
        Ipv6Prefix:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of IPv6 prefixes to be automatically assigned to the network interface. You cannot use this option if you use the <code>Ipv6Prefix</code> option.
      description: The parameters for a network interface.
    LaunchTemplateInstanceNetworkInterfaceSpecificationRequestList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/LaunchTemplateInstanceNetworkInterfaceSpecificationRequest'
          - xml:
              name: InstanceNetworkInterfaceSpecification
    LaunchTemplateLicenseConfiguration:
      type: object
      properties:
        licenseConfigurationArn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Resource Name (ARN) of the license configuration.
      description: Describes a license configuration.
    LaunchTemplateLicenseConfigurationRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Resource Name (ARN) of the license configuration.
      description: Describes a license configuration.
    LaunchTemplateLicenseList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/LaunchTemplateLicenseConfiguration'
          - xml:
              name: item
    LaunchTemplateLicenseSpecificationListRequest:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/LaunchTemplateLicenseConfigurationRequest'
          - xml:
              name: item
    LaunchTemplateOverrides:
      type: object
      properties:
        instanceType:
          allOf:
            - $ref: '#/components/schemas/InstanceType'
            - description: The instance type.
        spotPrice:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The maximum price per unit hour that you are willing to pay for a Spot Instance.
        subnetId:
          allOf:
            - $ref: '#/components/schemas/SubnetId'
            - description: The ID of the subnet in which to launch the instances.
        availabilityZone:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Availability Zone in which to launch the instances.
        weightedCapacity:
          allOf:
            - $ref: '#/components/schemas/Double'
            - description: The number of units provided by the specified instance type.
        priority:
          allOf:
            - $ref: '#/components/schemas/Double'
            - description: '<p>The priority for the launch template override. The highest priority is launched first.</p> <p>If <code>OnDemandAllocationStrategy</code> is set to <code>prioritized</code>, Spot Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity.</p> <p>If the Spot <code>AllocationStrategy</code> is set to <code>capacityOptimizedPrioritized</code>, Spot Fleet uses priority on a best-effort basis to determine which launch template override to use in fulfilling Spot capacity, but optimizes for capacity first.</p> <p>Valid values are whole numbers starting at <code>0</code>. The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority. You can set the same priority for different launch template overrides.</p>'
        instanceRequirements:
          allOf:
            - $ref: '#/components/schemas/InstanceRequirements'
            - description: '<p>The instance requirements. When you specify instance requirements, Amazon EC2 will identify instance types with the provided requirements, and then use your On-Demand and Spot allocation strategies to launch instances from these instance types, in the same way as when you specify a list of instance types.</p> <note> <p>If you specify <code>InstanceRequirements</code>, you can''t specify <code>InstanceTypes</code>.</p> </note>'
      description: Describes overrides for a launch template.
    LaunchTemplatePlacement:
      type: object
      properties:
        availabilityZone:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Availability Zone of the instance.
        affinity:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The affinity setting for the instance on the Dedicated Host.
        groupName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the placement group for the instance.
        hostId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Dedicated Host for the instance.
        tenancy:
          allOf:
            - $ref: '#/components/schemas/Tenancy'
            - description: 'The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of <code>dedicated</code> runs on single-tenant hardware. '
        spreadDomain:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Reserved for future use.
        hostResourceGroupArn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The ARN of the host resource group in which to launch the instances. '
        partitionNumber:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of the partition the instance should launch in. Valid only if the placement group strategy is set to <code>partition</code>.
      description: Describes the placement of an instance.
    LaunchTemplatePlacementRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of the partition the instance should launch in. Valid only if the placement group strategy is set to <code>partition</code>.
      description: Describes the placement of an instance.
    LaunchTemplatePrivateDnsNameOptions:
      type: object
      properties:
        hostnameType:
          allOf:
            - $ref: '#/components/schemas/HostnameType'
            - description: The type of hostname to assign to an instance.
        enableResourceNameDnsARecord:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether to respond to DNS queries for instance hostnames with DNS A records.
        enableResourceNameDnsAAAARecord:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.
      description: Describes the options for instance hostnames.
    LaunchTemplatePrivateDnsNameOptionsRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.
      description: Describes the options for instance hostnames.
    LaunchTemplateSpecification:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The version number of the launch template.</p> <p>Default: The default version for the launch template.</p>'
      description: 'The launch template to use. You must specify either the launch template ID or launch template name in the request, but not both.'
    SpotInstanceType:
      type: string
      enum:
        - one-time
        - persistent
    ResourceType:
      type: string
      enum:
        - capacity-reservation
        - client-vpn-endpoint
        - customer-gateway
        - carrier-gateway
        - dedicated-host
        - dhcp-options
        - egress-only-internet-gateway
        - elastic-ip
        - elastic-gpu
        - export-image-task
        - export-instance-task
        - fleet
        - fpga-image
        - host-reservation
        - image
        - import-image-task
        - import-snapshot-task
        - instance
        - instance-event-window
        - internet-gateway
        - ipam
        - ipam-pool
        - ipam-scope
        - ipv4pool-ec2
        - ipv6pool-ec2
        - key-pair
        - launch-template
        - local-gateway
        - local-gateway-route-table
        - local-gateway-virtual-interface
        - local-gateway-virtual-interface-group
        - local-gateway-route-table-vpc-association
        - local-gateway-route-table-virtual-interface-group-association
        - natgateway
        - network-acl
        - network-interface
        - network-insights-analysis
        - network-insights-path
        - network-insights-access-scope
        - network-insights-access-scope-analysis
        - placement-group
        - prefix-list
        - replace-root-volume-task
        - reserved-instances
        - route-table
        - security-group
        - security-group-rule
        - snapshot
        - spot-fleet-request
        - spot-instances-request
        - subnet
        - subnet-cidr-reservation
        - traffic-mirror-filter
        - traffic-mirror-session
        - traffic-mirror-target
        - transit-gateway
        - transit-gateway-attachment
        - transit-gateway-connect-peer
        - transit-gateway-multicast-domain
        - transit-gateway-route-table
        - volume
        - vpc
        - vpc-endpoint
        - vpc-endpoint-service
        - vpc-peering-connection
        - vpn-connection
        - vpn-gateway
        - vpc-flow-log
    LaunchTemplateTagSpecification:
      type: object
      properties:
        resourceType:
          allOf:
            - $ref: '#/components/schemas/ResourceType'
            - description: The type of resource.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags for the resource.
      description: The tag specification for the launch template.
    LaunchTemplateTagSpecificationList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/LaunchTemplateTagSpecification'
          - xml:
              name: item
    LaunchTemplateTagSpecificationRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/ResourceType'
            - description: 'The type of resource to tag. Currently, the resource types that support tagging on creation are <code>instance</code>, <code>volume</code>, <code>elastic-gpu</code>, <code>network-interface</code>, and <code>spot-instances-request</code>. To tag a resource after it has been created, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html">CreateTags</a>.'
        Tag:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags to apply to the resource.
      description: The tags specification for the launch template.
    VersionDescription:
      type: string
      minLength: 0
      maxLength: 255
    LaunchTemplatesMonitoring:
      type: object
      properties:
        enabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is enabled.'
      description: Describes the monitoring for the instance.
    LaunchTemplatesMonitoringRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Specify <code>true</code> to enable detailed monitoring. Otherwise, basic monitoring is enabled.'
      description: Describes the monitoring for the instance.
    LicenseConfiguration:
      type: object
      properties:
        licenseConfigurationArn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Resource Name (ARN) of the license configuration.
      description: Describes a license configuration.
    LicenseSpecificationListRequest:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/LicenseConfigurationRequest'
          - xml:
              name: item
    ListImagesInRecycleBinMaxResults:
      type: integer
      minimum: 1
      maximum: 1000
    ListImagesInRecycleBinRequest:
      type: object
      title: ListImagesInRecycleBinRequest
      properties:
        ImageId:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    ListSnapshotsInRecycleBinMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    ListSnapshotsInRecycleBinRequest:
      type: object
      title: ListSnapshotsInRecycleBinRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The token for the next page of results.
        SnapshotId:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    SnapshotRecycleBinInfoList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/SnapshotRecycleBinInfo'
          - xml:
              name: item
    ListingStatus:
      type: string
      enum:
        - active
        - pending
        - cancelled
        - closed
    TargetGroupsConfig:
      type: object
      properties:
        targetGroups:
          allOf:
            - $ref: '#/components/schemas/TargetGroups'
            - description: One or more target groups.
      description: Describes the target groups to attach to a Spot Fleet. Spot Fleet registers the running Spot Instances with these target groups.
    LoadPermission:
      type: object
      properties:
        userId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Web Services account ID.
        group:
          allOf:
            - $ref: '#/components/schemas/PermissionGroup'
            - description: The name of the group.
      description: Describes a load permission.
    LoadPermissionRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Web Services account ID.
      description: Describes a load permission.
    LoadPermissionModifications:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/LoadPermissionListRequest'
            - description: The load permissions to remove.
      description: Describes modifications to the load permissions of an Amazon FPGA image (AFI).
    LocalGateway:
      type: object
      properties:
        localGatewayId:
          allOf:
            - $ref: '#/components/schemas/LocalGatewayId'
            - description: The ID of the local gateway.
        outpostArn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Resource Name (ARN) of the Outpost.
        ownerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Amazon Web Services account that owns the local gateway.
        state:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The state of the local gateway.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags assigned to the local gateway.
      description: Describes a local gateway.
    LocalGatewayMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    LocalGatewayRouteType:
      type: string
      enum:
        - static
        - propagated
    LocalGatewayRouteState:
      type: string
      enum:
        - pending
        - active
        - blackhole
        - deleting
        - deleted
    LocalGatewayRouteList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/LocalGatewayRoute'
          - xml:
              name: item
    LocalGatewayRouteTable:
      type: object
      properties:
        localGatewayRouteTableId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the local gateway route table.
        localGatewayRouteTableArn:
          allOf:
            - $ref: '#/components/schemas/ResourceArn'
            - description: The Amazon Resource Name (ARN) of the local gateway route table.
        localGatewayId:
          allOf:
            - $ref: '#/components/schemas/LocalGatewayId'
            - description: The ID of the local gateway.
        outpostArn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Resource Name (ARN) of the Outpost.
        ownerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Amazon Web Services account that owns the local gateway route table.
        state:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The state of the local gateway route table.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags assigned to the local gateway route table.
      description: Describes a local gateway route table.
    LocalGatewayRouteTableVirtualInterfaceGroupAssociation:
      type: object
      properties:
        localGatewayRouteTableVirtualInterfaceGroupAssociationId:
          allOf:
            - $ref: '#/components/schemas/LocalGatewayRouteTableVirtualInterfaceGroupAssociationId'
            - description: The ID of the association.
        localGatewayVirtualInterfaceGroupId:
          allOf:
            - $ref: '#/components/schemas/LocalGatewayVirtualInterfaceGroupId'
            - description: The ID of the virtual interface group.
        localGatewayId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the local gateway.
        localGatewayRouteTableId:
          allOf:
            - $ref: '#/components/schemas/LocalGatewayId'
            - description: The ID of the local gateway route table.
        localGatewayRouteTableArn:
          allOf:
            - $ref: '#/components/schemas/ResourceArn'
            - description: The Amazon Resource Name (ARN) of the local gateway route table for the virtual interface group.
        ownerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Amazon Web Services account that owns the local gateway virtual interface group association.
        state:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The state of the association.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags assigned to the association.
      description: Describes an association between a local gateway route table and a virtual interface group.
    LocalGatewayVirtualInterface:
      type: object
      properties:
        localGatewayVirtualInterfaceId:
          allOf:
            - $ref: '#/components/schemas/LocalGatewayVirtualInterfaceId'
            - description: The ID of the virtual interface.
        localGatewayId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the local gateway.
        vlan:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The ID of the VLAN.
        localAddress:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The local address.
        peerAddress:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The peer address.
        localBgpAsn:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The Border Gateway Protocol (BGP) Autonomous System Number (ASN) of the local gateway.
        peerBgpAsn:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The peer BGP ASN.
        ownerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Amazon Web Services account that owns the local gateway virtual interface.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags assigned to the virtual interface.
      description: Describes a local gateway virtual interface.
    LocalGatewayVirtualInterfaceGroup:
      type: object
      properties:
        localGatewayVirtualInterfaceGroupId:
          allOf:
            - $ref: '#/components/schemas/LocalGatewayVirtualInterfaceGroupId'
            - description: The ID of the virtual interface group.
        localGatewayVirtualInterfaceIdSet:
          allOf:
            - $ref: '#/components/schemas/LocalGatewayVirtualInterfaceIdSet'
            - description: The IDs of the virtual interfaces.
        localGatewayId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the local gateway.
        ownerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Amazon Web Services account that owns the local gateway virtual interface group.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags assigned to the virtual interface group.
      description: Describes a local gateway virtual interface group.
    LocalStorageType:
      type: string
      enum:
        - hdd
        - ssd
    PrefixListState:
      type: string
      enum:
        - create-in-progress
        - create-complete
        - create-failed
        - modify-in-progress
        - modify-complete
        - modify-failed
        - restore-in-progress
        - restore-complete
        - restore-failed
        - delete-in-progress
        - delete-complete
        - delete-failed
    MaxIpv4AddrPerInterface:
      type: integer
    MaxIpv6AddrPerInterface:
      type: integer
    MaxNetworkInterfaces:
      type: integer
    MaxResults:
      type: integer
    MaximumNetworkCards:
      type: integer
    MembershipType:
      type: string
      enum:
        - static
        - igmp
    MemorySize:
      type: integer
    ModifyAddressAttributeRequest:
      type: object
      required:
        - AllocationId
      title: ModifyAddressAttributeRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    ModifyAvailabilityZoneGroupRequest:
      type: object
      required:
        - GroupName
        - OptInStatus
      title: ModifyAvailabilityZoneGroupRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    ModifyAvailabilityZoneOptInStatus:
      type: string
      enum:
        - opted-in
        - not-opted-in
    ModifyCapacityReservationFleetRequest:
      type: object
      required:
        - CapacityReservationFleetId
      title: ModifyCapacityReservationFleetRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: '<p>Indicates whether to remove the end date from the Capacity Reservation Fleet. If you remove the end date, the Capacity Reservation Fleet does not expire and it remains active until you explicitly cancel it using the <b>CancelCapacityReservationFleet</b> action.</p> <p>You can''t specify <b>RemoveEndDate</b> and <b> EndDate</b> in the same request.</p>'
    ModifyCapacityReservationRequest:
      type: object
      required:
        - CapacityReservationId
      title: ModifyCapacityReservationRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Reserved for future use.
    ModifyClientVpnEndpointRequest:
      type: object
      required:
        - ClientVpnEndpointId
      title: ModifyClientVpnEndpointRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        SecurityGroupId:
          allOf:
            - $ref: '#/components/schemas/ClientLoginBannerOptions'
            - description: Options for enabling a customizable text banner that will be displayed on Amazon Web Services provided clients when a VPN session is established.
    ModifyDefaultCreditSpecificationRequest:
      type: object
      required:
        - InstanceFamily
        - CpuCredits
      title: ModifyDefaultCreditSpecificationRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The credit option for CPU usage of the instance family.</p> <p>Valid Values: <code>standard</code> | <code>unlimited</code> </p>'
    ModifyEbsDefaultKmsKeyIdRequest:
      type: object
      required:
        - KmsKeyId
      title: ModifyEbsDefaultKmsKeyIdRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    ModifyFleetRequest:
      type: object
      required:
        - FleetId
      title: ModifyFleetRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/FleetExcessCapacityTerminationPolicy'
            - description: Indicates whether running instances should be terminated if the total target capacity of the EC2 Fleet is decreased below the current size of the EC2 Fleet.
        LaunchTemplateConfig:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Reserved.
    OperationType:
      type: string
      enum:
        - add
        - remove
    UserIdStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: UserId
    UserGroupStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: UserGroup
    ModifyFpgaImageAttributeRequest:
      type: object
      required:
        - FpgaImageId
      title: ModifyFpgaImageAttributeRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/OperationType'
            - description: The operation type.
        UserId:
          allOf:
            - $ref: '#/components/schemas/UserIdStringList'
            - description: The Amazon Web Services account IDs. This parameter is valid only when modifying the <code>loadPermission</code> attribute.
        UserGroup:
          allOf:
            - $ref: '#/components/schemas/UserGroupStringList'
            - description: The user groups. This parameter is valid only when modifying the <code>loadPermission</code> attribute.
        ProductCode:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A name for the AFI.
    ModifyHostsRequest:
      type: object
      required:
        - HostIds
      title: ModifyHostsRequest
      properties:
        autoPlacement:
          allOf:
            - $ref: '#/components/schemas/AutoPlacement'
            - description: Specify whether to enable or disable auto-placement.
        hostId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>Specifies the instance family to be supported by the Dedicated Host. Specify this parameter to modify a Dedicated Host to support multiple instance types within its current instance family.</p> <p>If you want to modify a Dedicated Host to support a specific instance type only, omit this parameter and specify <b>InstanceType</b> instead. You cannot specify <b>InstanceFamily</b> and <b>InstanceType</b> in the same request.</p>'
    UnsuccessfulItemList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/UnsuccessfulItem'
          - xml:
              name: item
    ModifyIdFormatRequest:
      type: object
      required:
        - Resource
        - UseLongIds
      title: ModifyIdFormatRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicate whether the resource should use longer IDs (17-character IDs).
    ModifyIdentityIdFormatRequest:
      type: object
      required:
        - PrincipalArn
        - Resource
        - UseLongIds
      title: ModifyIdentityIdFormatRequest
      properties:
        principalArn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The ARN of the principal, which can be an IAM user, IAM role, or the root user. Specify <code>all</code> to modify the ID format for all IAM users, IAM roles, and the root user of the account.'
        resource:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The type of resource: <code>bundle</code> | <code>conversion-task</code> | <code>customer-gateway</code> | <code>dhcp-options</code> | <code>elastic-ip-allocation</code> | <code>elastic-ip-association</code> | <code>export-task</code> | <code>flow-log</code> | <code>image</code> | <code>import-task</code> | <code>internet-gateway</code> | <code>network-acl</code> | <code>network-acl-association</code> | <code>network-interface</code> | <code>network-interface-attachment</code> | <code>prefix-list</code> | <code>route-table</code> | <code>route-table-association</code> | <code>security-group</code> | <code>subnet</code> | <code>subnet-cidr-block-association</code> | <code>vpc</code> | <code>vpc-cidr-block-association</code> | <code>vpc-endpoint</code> | <code>vpc-peering-connection</code> | <code>vpn-connection</code> | <code>vpn-gateway</code>.</p> <p>Alternatively, use the <code>all-current</code> option to include all resource types that are currently within their opt-in period for longer IDs.</p>'
        useLongIds:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the resource should use longer IDs (17-character IDs)
    ProductCodeStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: ProductCode
    OrganizationArnStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: OrganizationArn
    OrganizationalUnitArnStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: OrganizationalUnitArn
    ModifyImageAttributeRequest:
      type: object
      required:
        - ImageId
      title: ModifyImageAttributeRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/OperationType'
            - description: The operation type. This parameter can be used only when the <code>Attribute</code> parameter is <code>launchPermission</code>.
        ProductCode:
          allOf:
            - $ref: '#/components/schemas/ProductCodeStringList'
            - description: Not supported.
        UserGroup:
          allOf:
            - $ref: '#/components/schemas/UserGroupStringList'
            - description: The user groups. This parameter can be used only when the <code>Attribute</code> parameter is <code>launchPermission</code>.
        UserId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The value of the attribute being modified. This parameter can be used only when the <code>Attribute</code> parameter is <code>description</code>.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        OrganizationArn:
          allOf:
            - $ref: '#/components/schemas/OrganizationArnStringList'
            - description: The Amazon Resource Name (ARN) of an organization. This parameter can be used only when the <code>Attribute</code> parameter is <code>launchPermission</code>.
        OrganizationalUnitArn:
          allOf:
            - $ref: '#/components/schemas/OrganizationalUnitArnStringList'
            - description: The Amazon Resource Name (ARN) of an organizational unit (OU). This parameter can be used only when the <code>Attribute</code> parameter is <code>launchPermission</code>.
      description: Contains the parameters for ModifyImageAttribute.
    ModifyInstanceAttributeRequest:
      type: object
      required:
        - InstanceId
      title: ModifyInstanceAttributeRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/AttributeBooleanValue'
            - description: 'Enable or disable source/destination checks, which ensure that the instance is either the source or the destination of any traffic that it receives. If the value is <code>true</code>, source/destination checks are enabled; otherwise, they are disabled. The default value is <code>true</code>. You must disable source/destination checks if the instance runs services such as network address translation, routing, or firewalls.'
        attribute:
          allOf:
            - $ref: '#/components/schemas/InstanceAttributeName'
            - description: The name of the attribute.
        blockDeviceMapping:
          allOf:
            - $ref: '#/components/schemas/InstanceBlockDeviceMappingSpecificationList'
            - description: '<p>Modifies the <code>DeleteOnTermination</code> attribute for volumes that are currently attached. The volume must be owned by the caller. If no value is specified for <code>DeleteOnTermination</code>, the default is <code>true</code> and the volume is deleted when the instance is terminated.</p> <p>To add instance store volumes to an Amazon EBS-backed instance, you must add them when you launch the instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html#Using_OverridingAMIBDM">Update the block device mapping when launching an instance</a> in the <i>Amazon EC2 User Guide</i>.</p>'
        disableApiTermination:
          allOf:
            - $ref: '#/components/schemas/AttributeBooleanValue'
            - description: 'If the value is <code>true</code>, you can''t terminate the instance using the Amazon EC2 console, CLI, or API; otherwise, you can. You cannot use this parameter for Spot Instances.'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        ebsOptimized:
          allOf:
            - $ref: '#/components/schemas/AttributeBooleanValue'
            - description: Specifies whether the instance is optimized for Amazon EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.
        enaSupport:
          allOf:
            - $ref: '#/components/schemas/AttributeBooleanValue'
            - description: <p>Set to <code>true</code> to enable enhanced networking with ENA for the instance.</p> <p>This option is supported only for HVM instances. Specifying this option with a PV instance can make it unreachable.</p>
        GroupId:
          allOf:
            - $ref: '#/components/schemas/GroupIdStringList'
            - description: '[EC2-VPC] Replaces the security groups of the instance with the specified security groups. You must specify at least one security group, even if it''s just the default security group for the VPC. You must specify the security group ID, not the security group name.'
        instanceId:
          allOf:
            - $ref: '#/components/schemas/InstanceId'
            - description: The ID of the instance.
        instanceInitiatedShutdownBehavior:
          allOf:
            - $ref: '#/components/schemas/AttributeValue'
            - description: Specifies whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).
        instanceType:
          allOf:
            - $ref: '#/components/schemas/AttributeValue'
            - description: 'Changes the instance type to the specified value. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance types</a> in the <i>Amazon EC2 User Guide</i>. If the instance type is not valid, the error returned is <code>InvalidInstanceAttributeValue</code>.'
        kernel:
          allOf:
            - $ref: '#/components/schemas/AttributeValue'
            - description: 'Changes the instance''s kernel to the specified value. We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedKernels.html">PV-GRUB</a>.'
        ramdisk:
          allOf:
            - $ref: '#/components/schemas/AttributeValue'
            - description: 'Changes the instance''s RAM disk to the specified value. We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedKernels.html">PV-GRUB</a>.'
        sriovNetSupport:
          allOf:
            - $ref: '#/components/schemas/AttributeValue'
            - description: <p>Set to <code>simple</code> to enable enhanced networking with the Intel 82599 Virtual Function interface for the instance.</p> <p>There is no way to disable enhanced networking with the Intel 82599 Virtual Function interface at this time.</p> <p>This option is supported only for HVM instances. Specifying this option with a PV instance can make it unreachable.</p>
        userData:
          allOf:
            - $ref: '#/components/schemas/BlobAttributeValue'
            - description: 'Changes the instance''s user data to the specified value. If you are using an Amazon Web Services SDK or command line tool, base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide base64-encoded text.'
        value:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'A new value for the attribute. Use only with the <code>kernel</code>, <code>ramdisk</code>, <code>userData</code>, <code>disableApiTermination</code>, or <code>instanceInitiatedShutdownBehavior</code> attribute.'
    ModifyInstanceCapacityReservationAttributesRequest:
      type: object
      required:
        - InstanceId
        - CapacityReservationSpecification
      title: ModifyInstanceCapacityReservationAttributesRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    ModifyInstanceCreditSpecificationRequest:
      type: object
      required:
        - InstanceCreditSpecifications
      title: ModifyInstanceCreditSpecificationRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'A unique, case-sensitive token that you provide to ensure idempotency of your modification request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.'
        InstanceCreditSpecification:
          allOf:
            - $ref: '#/components/schemas/InstanceCreditSpecificationListRequest'
            - description: Information about the credit option for CPU usage.
    SuccessfulInstanceCreditSpecificationSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/SuccessfulInstanceCreditSpecificationItem'
          - xml:
              name: item
    UnsuccessfulInstanceCreditSpecificationSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/UnsuccessfulInstanceCreditSpecificationItem'
          - xml:
              name: item
    ModifyInstanceEventStartTimeRequest:
      type: object
      required:
        - InstanceId
        - InstanceEventId
        - NotBefore
      title: ModifyInstanceEventStartTimeRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The new date and time when the event will take place.
    ModifyInstanceEventWindowRequest:
      type: object
      required:
        - InstanceEventWindowId
      title: ModifyInstanceEventWindowRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/InstanceEventWindowId'
            - description: The ID of the event window.
        TimeRange:
          allOf:
            - $ref: '#/components/schemas/InstanceEventWindowCronExpression'
            - description: '<p>The cron expression of the event window, for example, <code>* 0-4,20-23 * * 1,5</code>.</p> <p>Constraints:</p> <ul> <li> <p>Only hour and day of the week values are supported.</p> </li> <li> <p>For day of the week values, you can specify either integers <code>0</code> through <code>6</code>, or alternative single values <code>SUN</code> through <code>SAT</code>.</p> </li> <li> <p>The minute, month, and year must be specified by <code>*</code>.</p> </li> <li> <p>The hour value must be one or a multiple range, for example, <code>0-4</code> or <code>0-4,20-23</code>.</p> </li> <li> <p>Each hour range must be &gt;= 2 hours, for example, <code>0-2</code> or <code>20-23</code>.</p> </li> <li> <p>The event window must be &gt;= 4 hours. The combined total time ranges in the event window must be &gt;= 4 hours.</p> </li> </ul> <p>For more information about cron expressions, see <a href="https://en.wikipedia.org/wiki/Cron">cron</a> on the <i>Wikipedia website</i>.</p>'
    ModifyInstanceMaintenanceOptionsRequest:
      type: object
      required:
        - InstanceId
      title: ModifyInstanceMaintenanceOptionsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    ModifyInstanceMetadataOptionsRequest:
      type: object
      required:
        - InstanceId
      title: ModifyInstanceMetadataOptionsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/InstanceMetadataTagsState'
            - description: '<p>Set to <code>enabled</code> to allow access to instance tags from the instance metadata. Set to <code>disabled</code> to turn off access to instance tags from the instance metadata. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#work-with-tags-in-IMDS">Work with instance tags using the instance metadata</a>.</p> <p>Default: <code>disabled</code> </p>'
    ModifyInstancePlacementRequest:
      type: object
      required:
        - InstanceId
      title: ModifyInstancePlacementRequest
      properties:
        affinity:
          allOf:
            - $ref: '#/components/schemas/PlacementGroupName'
            - description: '<p>The name of the placement group in which to place the instance. For spread placement groups, the instance must have a tenancy of <code>default</code>. For cluster and partition placement groups, the instance must have a tenancy of <code>default</code> or <code>dedicated</code>.</p> <p>To remove an instance from a placement group, specify an empty string ("").</p>'
        hostId:
          allOf:
            - $ref: '#/components/schemas/DedicatedHostId'
            - description: The ID of the Dedicated Host with which to associate the instance.
        instanceId:
          allOf:
            - $ref: '#/components/schemas/InstanceId'
            - description: The ID of the instance that you are modifying.
        tenancy:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ARN of the host resource group in which to place the instance.
    ModifyIpamPoolRequest:
      type: object
      required:
        - IpamPoolId
      title: ModifyIpamPoolRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Clear the default netmask length allocation rule for this pool.
        AddAllocationResourceTag:
          allOf:
            - $ref: '#/components/schemas/RequestIpamResourceTagList'
            - description: 'Add tag allocation rules to a pool. For more information about allocation rules, see <a href="/vpc/latest/ipam/create-top-ipam.html">Create a top-level pool</a> in the <i>Amazon VPC IPAM User Guide</i>.'
        RemoveAllocationResourceTag:
          allOf:
            - $ref: '#/components/schemas/RequestIpamResourceTagList'
            - description: Remove tag allocation rules from a pool.
    RemoveIpamOperatingRegionSet:
      type: array
      items:
        $ref: '#/components/schemas/RemoveIpamOperatingRegion'
      minItems: 0
      maxItems: 50
    ModifyIpamRequest:
      type: object
      required:
        - IpamId
      title: ModifyIpamRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The description of the IPAM you want to modify.
        AddOperatingRegion:
          allOf:
            - $ref: '#/components/schemas/AddIpamOperatingRegionSet'
            - description: '<p>Choose the operating Regions for the IPAM. Operating Regions are Amazon Web Services Regions where the IPAM is allowed to manage IP address CIDRs. IPAM only discovers and monitors resources in the Amazon Web Services Regions you select as operating Regions.</p> <p>For more information about operating Regions, see <a href="/vpc/latest/ipam/create-ipam.html">Create an IPAM</a> in the <i>Amazon VPC IPAM User Guide</i>.</p>'
        RemoveOperatingRegion:
          allOf:
            - $ref: '#/components/schemas/RemoveIpamOperatingRegionSet'
            - description: The operating Regions to remove.
    ModifyIpamResourceCidrRequest:
      type: object
      required:
        - ResourceId
        - ResourceCidr
        - ResourceRegion
        - CurrentIpamScopeId
        - Monitored
      title: ModifyIpamResourceCidrRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Determines if the resource is monitored by IPAM. If a resource is monitored, the resource is discovered by IPAM and you can view details about the resource’s CIDR.'
    ModifyIpamScopeRequest:
      type: object
      required:
        - IpamScopeId
      title: ModifyIpamScopeRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The description of the scope you want to modify.
    ModifyLaunchTemplateRequest:
      type: object
      title: ModifyLaunchTemplateRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateName'
            - description: The name of the launch template. You must specify either the launch template ID or launch template name in the request.
        SetDefaultVersion:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The version number of the launch template to set as the default version.
    ModifyManagedPrefixListRequest:
      type: object
      required:
        - PrefixListId
      title: ModifyManagedPrefixListRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A name for the prefix list.
        AddEntry:
          allOf:
            - $ref: '#/components/schemas/AddPrefixListEntries'
            - description: One or more entries to add to the prefix list.
        RemoveEntry:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: '<p>The maximum number of entries for the prefix list. You cannot modify the entries of a prefix list and modify the size of a prefix list at the same time.</p> <p>If any of the resources that reference the prefix list cannot support the new maximum size, the modify operation fails. Check the state message for the IDs of the first ten resources that do not support the new maximum size.</p>'
    NetworkInterfaceAttachmentChanges:
      type: object
      properties:
        attachmentId:
          allOf:
            - $ref: '#/components/schemas/NetworkInterfaceAttachmentId'
            - description: The ID of the network interface attachment.
        deleteOnTermination:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the network interface is deleted when the instance is terminated.
      description: Describes an attachment change.
    ModifyNetworkInterfaceAttributeRequest:
      type: object
      required:
        - NetworkInterfaceId
      title: ModifyNetworkInterfaceAttributeRequest
      properties:
        attachment:
          allOf:
            - $ref: '#/components/schemas/NetworkInterfaceAttachmentChanges'
            - description: 'Information about the interface attachment. If modifying the ''delete on termination'' attribute, you must specify the ID of the interface attachment.'
        description:
          allOf:
            - $ref: '#/components/schemas/AttributeValue'
            - description: A description for the network interface.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        SecurityGroupId:
          allOf:
            - $ref: '#/components/schemas/SecurityGroupIdStringList'
            - description: 'Changes the security groups for the network interface. The new set of groups you specify replaces the current set. You must specify at least one group, even if it''s just the default security group in the VPC. You must specify the ID of the security group, not the name.'
        networkInterfaceId:
          allOf:
            - $ref: '#/components/schemas/NetworkInterfaceId'
            - description: The ID of the network interface.
        sourceDestCheck:
          allOf:
            - $ref: '#/components/schemas/AttributeBooleanValue'
            - description: 'Enable or disable source/destination checks, which ensure that the instance is either the source or the destination of any traffic that it receives. If the value is <code>true</code>, source/destination checks are enabled; otherwise, they are disabled. The default value is <code>true</code>. You must disable source/destination checks if the instance runs services such as network address translation, routing, or firewalls.'
      description: Contains the parameters for ModifyNetworkInterfaceAttribute.
    ModifyPrivateDnsNameOptionsRequest:
      type: object
      title: ModifyPrivateDnsNameOptionsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.
    ReservedInstancesConfigurationList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ReservedInstancesConfiguration'
          - xml:
              name: item
    ModifyReservedInstancesRequest:
      type: object
      required:
        - ReservedInstancesIds
        - TargetConfigurations
      title: ModifyReservedInstancesRequest
      properties:
        ReservedInstancesId:
          allOf:
            - $ref: '#/components/schemas/ReservedInstancesIdStringList'
            - description: The IDs of the Reserved Instances to modify.
        clientToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'A unique, case-sensitive token you provide to ensure idempotency of your modification request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.'
        ReservedInstancesConfigurationSetItemType:
          allOf:
            - $ref: '#/components/schemas/ReservedInstancesConfigurationList'
            - description: The configuration settings for the Reserved Instances to modify.
      description: Contains the parameters for ModifyReservedInstances.
    ModifySecurityGroupRulesRequest:
      type: object
      required:
        - GroupId
        - SecurityGroupRules
      title: ModifySecurityGroupRulesRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/SecurityGroupId'
            - description: The ID of the security group.
        SecurityGroupRule:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    ModifySnapshotAttributeRequest:
      type: object
      required:
        - SnapshotId
      title: ModifySnapshotAttributeRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/CreateVolumePermissionModifications'
            - description: A JSON representation of the snapshot attribute modification.
        UserGroup:
          allOf:
            - $ref: '#/components/schemas/SnapshotId'
            - description: The ID of the snapshot.
        UserId:
          allOf:
            - $ref: '#/components/schemas/UserIdStringList'
            - description: The account ID to modify for the snapshot.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    ModifySnapshotTierRequest:
      type: object
      required:
        - SnapshotId
      title: ModifySnapshotTierRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    ModifySpotFleetRequestRequest:
      type: object
      required:
        - SpotFleetRequestId
      title: ModifySpotFleetRequestRequest
      properties:
        excessCapacityTerminationPolicy:
          allOf:
            - $ref: '#/components/schemas/ExcessCapacityTerminationPolicy'
            - description: Indicates whether running Spot Instances should be terminated if the target capacity of the Spot Fleet request is decreased below the current size of the Spot Fleet.
        LaunchTemplateConfig:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateConfigList'
            - description: 'The launch template and overrides. You can only use this parameter if you specified a launch template (<code>LaunchTemplateConfigs</code>) in your Spot Fleet request. If you specified <code>LaunchSpecifications</code> in your Spot Fleet request, then omit this parameter.'
        spotFleetRequestId:
          allOf:
            - $ref: '#/components/schemas/SpotFleetRequestId'
            - description: The ID of the Spot Fleet request.
        targetCapacity:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Reserved.
      description: Contains the parameters for ModifySpotFleetRequest.
    ModifySubnetAttributeRequest:
      type: object
      required:
        - SubnetId
      title: ModifySubnetAttributeRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/AttributeBooleanValue'
            - description: Specify <code>true</code> to indicate that network interfaces attached to instances created in the specified subnet should be assigned a public IPv4 address.
        subnetId:
          allOf:
            - $ref: '#/components/schemas/AttributeBooleanValue'
            - description: ' Specify <code>true</code> to indicate that local network interfaces at the current position should be disabled. '
    TrafficMirrorNetworkServiceList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/TrafficMirrorNetworkService'
          - xml:
              name: item
    ModifyTrafficMirrorFilterNetworkServicesRequest:
      type: object
      required:
        - TrafficMirrorFilterId
      title: ModifyTrafficMirrorFilterNetworkServicesRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/TrafficMirrorFilterId'
            - description: The ID of the Traffic Mirror filter.
        AddNetworkService:
          allOf:
            - $ref: '#/components/schemas/TrafficMirrorNetworkServiceList'
            - description: 'The network service, for example Amazon DNS, that you want to mirror.'
        RemoveNetworkService:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    ModifyTrafficMirrorFilterRuleRequest:
      type: object
      required:
        - TrafficMirrorFilterRuleId
      title: ModifyTrafficMirrorFilterRuleRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The description to assign to the Traffic Mirror rule.
        RemoveField:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    ModifyTrafficMirrorSessionRequest:
      type: object
      required:
        - TrafficMirrorSessionId
      title: ModifyTrafficMirrorSessionRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The description to assign to the Traffic Mirror session.
        RemoveField:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    ModifyTransitGatewayOptions:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayRouteTableId'
            - description: The ID of the default propagation route table.
      description: The transit gateway options.
    ModifyTransitGatewayPrefixListReferenceRequest:
      type: object
      required:
        - TransitGatewayRouteTableId
        - PrefixListId
      title: ModifyTransitGatewayPrefixListReferenceRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    ModifyTransitGatewayRequest:
      type: object
      required:
        - TransitGatewayId
      title: ModifyTransitGatewayRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    ModifyTransitGatewayVpcAttachmentRequest:
      type: object
      required:
        - TransitGatewayAttachmentId
      title: ModifyTransitGatewayVpcAttachmentRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    ModifyTransitGatewayVpcAttachmentRequestOptions:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/ApplianceModeSupportValue'
            - description: 'Enable or disable support for appliance mode. If enabled, a traffic flow between a source and destination uses the same Availability Zone for the VPC attachment for the lifetime of that flow. The default is <code>disable</code>.'
      description: Describes the options for a VPC attachment.
    ModifyVolumeAttributeRequest:
      type: object
      required:
        - VolumeId
      title: ModifyVolumeAttributeRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/VolumeId'
            - description: The ID of the volume.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    ModifyVolumeRequest:
      type: object
      required:
        - VolumeId
      title: ModifyVolumeRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Specifies whether to enable Amazon EBS Multi-Attach. If you enable Multi-Attach, you can attach the volume to up to 16 <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances"> Nitro-based instances</a> in the same Availability Zone. This parameter is supported with <code>io1</code> and <code>io2</code> volumes only. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-volumes-multi.html"> Amazon EBS Multi-Attach</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.'
    VolumeModification:
      type: object
      properties:
        volumeId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the volume.
        modificationState:
          allOf:
            - $ref: '#/components/schemas/VolumeModificationState'
            - description: The current modification state. The modification state is null for unmodified volumes.
        statusMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A status message about the modification progress or failure.
        targetSize:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The target size of the volume, in GiB.'
        targetIops:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The target IOPS rate of the volume.
        targetVolumeType:
          allOf:
            - $ref: '#/components/schemas/VolumeType'
            - description: The target EBS volume type of the volume.
        targetThroughput:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The target throughput of the volume, in MiB/s.'
        targetMultiAttachEnabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: The target setting for Amazon EBS Multi-Attach.
        originalSize:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The original size of the volume, in GiB.'
        originalIops:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The original IOPS rate of the volume.
        originalVolumeType:
          allOf:
            - $ref: '#/components/schemas/VolumeType'
            - description: The original EBS volume type of the volume.
        originalThroughput:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The original throughput of the volume, in MiB/s.'
        originalMultiAttachEnabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: The original setting for Amazon EBS Multi-Attach.
        progress:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: 'The modification progress, from 0 to 100 percent complete.'
        startTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The modification start time.
        endTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The modification completion or failure time.
      description: '<p>Describes the modification status of an EBS volume.</p> <p>If the volume has never been modified, some element values will be null.</p>'
    ModifyVpcAttributeRequest:
      type: object
      required:
        - VpcId
      title: ModifyVpcAttributeRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/AttributeBooleanValue'
            - description: '<p>Indicates whether the DNS resolution is supported for the VPC. If enabled, queries to the Amazon provided DNS server at the 169.254.169.253 IP address, or the reserved IP address at the base of the VPC network range "plus two" succeed. If disabled, the Amazon provided DNS service in the VPC that resolves public DNS hostnames to IP addresses is not enabled.</p> <p>You cannot modify the DNS resolution and DNS hostnames attributes in the same request. Use separate requests for each attribute.</p>'
        vpcId:
          allOf:
            - $ref: '#/components/schemas/VpcId'
            - description: The ID of the VPC.
    ModifyVpcEndpointConnectionNotificationRequest:
      type: object
      required:
        - ConnectionNotificationId
      title: ModifyVpcEndpointConnectionNotificationRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: 'One or more events for the endpoint. Valid values are <code>Accept</code>, <code>Connect</code>, <code>Delete</code>, and <code>Reject</code>.'
    VpcEndpointSecurityGroupIdList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/SecurityGroupId'
          - xml:
              name: item
    ModifyVpcEndpointRequest:
      type: object
      required:
        - VpcEndpointId
      title: ModifyVpcEndpointRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: (Interface and gateway endpoints) A policy to attach to the endpoint that controls access to the service. The policy must be in valid JSON format.
        AddRouteTableId:
          allOf:
            - $ref: '#/components/schemas/VpcEndpointRouteTableIdList'
            - description: (Gateway endpoint) One or more route tables IDs to associate with the endpoint.
        RemoveRouteTableId:
          allOf:
            - $ref: '#/components/schemas/VpcEndpointRouteTableIdList'
            - description: (Gateway endpoint) One or more route table IDs to disassociate from the endpoint.
        AddSubnetId:
          allOf:
            - $ref: '#/components/schemas/VpcEndpointSubnetIdList'
            - description: '(Interface and Gateway Load Balancer endpoints) One or more subnet IDs in which to serve the endpoint. For a Gateway Load Balancer endpoint, you can specify only one subnet.'
        RemoveSubnetId:
          allOf:
            - $ref: '#/components/schemas/VpcEndpointSubnetIdList'
            - description: (Interface endpoint) One or more subnets IDs in which to remove the endpoint.
        AddSecurityGroupId:
          allOf:
            - $ref: '#/components/schemas/VpcEndpointSecurityGroupIdList'
            - description: (Interface endpoint) One or more security group IDs to associate with the network interface.
        RemoveSecurityGroupId:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: (Interface endpoint) Indicates whether a private hosted zone is associated with the VPC.
      description: Contains the parameters for ModifyVpcEndpoint.
    ModifyVpcEndpointServiceConfigurationRequest:
      type: object
      required:
        - ServiceId
      title: ModifyVpcEndpointServiceConfigurationRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether requests to create an endpoint to your service must be accepted.
        AddNetworkLoadBalancerArn:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: The Amazon Resource Names (ARNs) of Network Load Balancers to add to your service configuration.
        RemoveNetworkLoadBalancerArn:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: The Amazon Resource Names (ARNs) of Network Load Balancers to remove from your service configuration.
        AddGatewayLoadBalancerArn:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: The Amazon Resource Names (ARNs) of Gateway Load Balancers to add to your service configuration.
        RemoveGatewayLoadBalancerArn:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: The Amazon Resource Names (ARNs) of Gateway Load Balancers to remove from your service configuration.
        AddSupportedIpAddressType:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: The IP address types to add to your service configuration.
        RemoveSupportedIpAddressType:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: The IP address types to remove from your service configuration.
    PayerResponsibility:
      type: string
      enum:
        - ServiceOwner
    ModifyVpcEndpointServicePayerResponsibilityRequest:
      type: object
      required:
        - ServiceId
        - PayerResponsibility
      title: ModifyVpcEndpointServicePayerResponsibilityRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/PayerResponsibility'
            - description: 'The entity that is responsible for the endpoint costs. The default is the endpoint owner. If you set the payer responsibility to the service owner, you cannot set it back to the endpoint owner.'
    ModifyVpcEndpointServicePermissionsRequest:
      type: object
      required:
        - ServiceId
      title: ModifyVpcEndpointServicePermissionsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: The Amazon Resource Names (ARN) of one or more principals. Permissions are revoked for principals in this list.
    ModifyVpcPeeringConnectionOptionsRequest:
      type: object
      required:
        - VpcPeeringConnectionId
      title: ModifyVpcPeeringConnectionOptionsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/VpcPeeringConnectionId'
            - description: The ID of the VPC peering connection.
    PeeringConnectionOptions:
      type: object
      properties:
        allowDnsResolutionFromRemoteVpc:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'If true, the public DNS hostnames of instances in the specified VPC resolve to private IP addresses when queried from instances in the peer VPC.'
        allowEgressFromLocalClassicLinkToRemoteVpc:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'If true, enables outbound communication from an EC2-Classic instance that''s linked to a local VPC using ClassicLink to instances in a peer VPC.'
        allowEgressFromLocalVpcToRemoteClassicLink:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'If true, enables outbound communication from instances in a local VPC to an EC2-Classic instance that''s linked to a peer VPC using ClassicLink.'
      description: Describes the VPC peering connection options.
    ModifyVpcTenancyRequest:
      type: object
      required:
        - VpcId
        - InstanceTenancy
      title: ModifyVpcTenancyRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    ModifyVpnConnectionOptionsRequest:
      type: object
      required:
        - VpnConnectionId
      title: ModifyVpnConnectionOptionsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    ModifyVpnConnectionRequest:
      type: object
      required:
        - VpnConnectionId
      title: ModifyVpnConnectionRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    ModifyVpnTunnelCertificateRequest:
      type: object
      required:
        - VpnConnectionId
        - VpnTunnelOutsideIpAddress
      title: ModifyVpnTunnelCertificateRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    ModifyVpnTunnelOptionsRequest:
      type: object
      required:
        - VpnConnectionId
        - VpnTunnelOutsideIpAddress
        - TunnelOptions
      title: ModifyVpnTunnelOptionsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    ModifyVpnTunnelOptionsSpecification:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The action to take after DPD timeout occurs. Specify <code>restart</code> to restart the IKE initiation. Specify <code>clear</code> to end the IKE session.</p> <p>Valid Values: <code>clear</code> | <code>none</code> | <code>restart</code> </p> <p>Default: <code>clear</code> </p>'
        Phase1EncryptionAlgorithm:
          allOf:
            - $ref: '#/components/schemas/Phase1EncryptionAlgorithmsRequestList'
            - description: '<p>One or more encryption algorithms that are permitted for the VPN tunnel for phase 1 IKE negotiations.</p> <p>Valid values: <code>AES128</code> | <code>AES256</code> | <code>AES128-GCM-16</code> | <code>AES256-GCM-16</code> </p>'
        Phase2EncryptionAlgorithm:
          allOf:
            - $ref: '#/components/schemas/Phase2EncryptionAlgorithmsRequestList'
            - description: '<p>One or more encryption algorithms that are permitted for the VPN tunnel for phase 2 IKE negotiations.</p> <p>Valid values: <code>AES128</code> | <code>AES256</code> | <code>AES128-GCM-16</code> | <code>AES256-GCM-16</code> </p>'
        Phase1IntegrityAlgorithm:
          allOf:
            - $ref: '#/components/schemas/Phase1IntegrityAlgorithmsRequestList'
            - description: '<p>One or more integrity algorithms that are permitted for the VPN tunnel for phase 1 IKE negotiations.</p> <p>Valid values: <code>SHA1</code> | <code>SHA2-256</code> | <code>SHA2-384</code> | <code>SHA2-512</code> </p>'
        Phase2IntegrityAlgorithm:
          allOf:
            - $ref: '#/components/schemas/Phase2IntegrityAlgorithmsRequestList'
            - description: '<p>One or more integrity algorithms that are permitted for the VPN tunnel for phase 2 IKE negotiations.</p> <p>Valid values: <code>SHA1</code> | <code>SHA2-256</code> | <code>SHA2-384</code> | <code>SHA2-512</code> </p>'
        Phase1DHGroupNumber:
          allOf:
            - $ref: '#/components/schemas/Phase1DHGroupNumbersRequestList'
            - description: '<p>One or more Diffie-Hellman group numbers that are permitted for the VPN tunnel for phase 1 IKE negotiations.</p> <p>Valid values: <code>2</code> | <code>14</code> | <code>15</code> | <code>16</code> | <code>17</code> | <code>18</code> | <code>19</code> | <code>20</code> | <code>21</code> | <code>22</code> | <code>23</code> | <code>24</code> </p>'
        Phase2DHGroupNumber:
          allOf:
            - $ref: '#/components/schemas/Phase2DHGroupNumbersRequestList'
            - description: '<p>One or more Diffie-Hellman group numbers that are permitted for the VPN tunnel for phase 2 IKE negotiations.</p> <p>Valid values: <code>2</code> | <code>5</code> | <code>14</code> | <code>15</code> | <code>16</code> | <code>17</code> | <code>18</code> | <code>19</code> | <code>20</code> | <code>21</code> | <code>22</code> | <code>23</code> | <code>24</code> </p>'
        IKEVersion:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The action to take when the establishing the tunnel for the VPN connection. By default, your customer gateway device must initiate the IKE negotiation and bring up the tunnel. Specify <code>start</code> for Amazon Web Services to initiate the IKE negotiation.</p> <p>Valid Values: <code>add</code> | <code>start</code> </p> <p>Default: <code>add</code> </p>'
      description: The Amazon Web Services Site-to-Site VPN tunnel options to modify.
    MonitorInstancesRequest:
      type: object
      required:
        - InstanceIds
      title: MonitorInstancesRequest
      properties:
        InstanceId:
          allOf:
            - $ref: '#/components/schemas/InstanceIdStringList'
            - description: The IDs of the instances.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    MonitoringState:
      type: string
      enum:
        - disabled
        - disabling
        - enabled
        - pending
    MoveAddressToVpcRequest:
      type: object
      required:
        - PublicIp
      title: MoveAddressToVpcRequest
      properties:
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        publicIp:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Elastic IP address.
    Status:
      type: string
      enum:
        - MoveInProgress
        - InVpc
        - InClassic
    MoveByoipCidrToIpamRequest:
      type: object
      required:
        - Cidr
        - IpamPoolId
        - IpamPoolOwner
      title: MoveByoipCidrToIpamRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Web Services account ID of the owner of the IPAM pool.
    MoveStatus:
      type: string
      enum:
        - movingToVpc
        - restoringToClassic
    MovingAddressStatus:
      type: object
      properties:
        moveStatus:
          allOf:
            - $ref: '#/components/schemas/MoveStatus'
            - description: 'The status of the Elastic IP address that''s being moved to the EC2-VPC platform, or restored to the EC2-Classic platform.'
        publicIp:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Elastic IP address.
      description: Describes the status of a moving Elastic IP address.
    MulticastSupportValue:
      type: string
      enum:
        - enable
        - disable
    NatGatewayAddressList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/NatGatewayAddress'
          - xml:
              name: item
    ProvisionedBandwidth:
      type: object
      properties:
        provisionTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: 'Reserved. If you need to sustain traffic greater than the <a href="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html">documented limits</a>, contact us through the <a href="https://console.aws.amazon.com/support/home?">Support Center</a>.'
        provisioned:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'Reserved. If you need to sustain traffic greater than the <a href="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html">documented limits</a>, contact us through the <a href="https://console.aws.amazon.com/support/home?">Support Center</a>.'
        requestTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: 'Reserved. If you need to sustain traffic greater than the <a href="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html">documented limits</a>, contact us through the <a href="https://console.aws.amazon.com/support/home?">Support Center</a>.'
        requested:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'Reserved. If you need to sustain traffic greater than the <a href="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html">documented limits</a>, contact us through the <a href="https://console.aws.amazon.com/support/home?">Support Center</a>.'
        status:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'Reserved. If you need to sustain traffic greater than the <a href="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html">documented limits</a>, contact us through the <a href="https://console.aws.amazon.com/support/home?">Support Center</a>.'
      description: 'Reserved. If you need to sustain traffic greater than the <a href="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html">documented limits</a>, contact us through the <a href="https://console.aws.amazon.com/support/home?">Support Center</a>.'
    NatGatewayState:
      type: string
      enum:
        - pending
        - failed
        - available
        - deleting
        - deleted
    NatGatewayAddress:
      type: object
      properties:
        allocationId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '[Public NAT gateway only] The allocation ID of the Elastic IP address that''s associated with the NAT gateway.'
        networkInterfaceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the network interface associated with the NAT gateway.
        privateIp:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The private IP address associated with the NAT gateway.
        publicIp:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '[Public NAT gateway only] The Elastic IP address associated with the NAT gateway.'
      description: Describes the IP addresses and network interface associated with a NAT gateway.
    NatGatewayIdStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/NatGatewayId'
          - xml:
              name: item
    NetworkAclAssociationList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/NetworkAclAssociation'
          - xml:
              name: item
    NetworkAclEntryList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/NetworkAclEntry'
          - xml:
              name: item
    NetworkAclAssociation:
      type: object
      properties:
        networkAclAssociationId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the association between a network ACL and a subnet.
        networkAclId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the network ACL.
        subnetId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the subnet.
      description: Describes an association between a network ACL and a subnet.
    NetworkAclAssociationId:
      type: string
    NetworkAclEntry:
      type: object
      properties:
        cidrBlock:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The IPv4 network range to allow or deny, in CIDR notation.'
        egress:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the rule is an egress rule (applied to traffic leaving the subnet).
        icmpTypeCode:
          allOf:
            - $ref: '#/components/schemas/IcmpTypeCode'
            - description: 'ICMP protocol: The ICMP type and code.'
        ipv6CidrBlock:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The IPv6 network range to allow or deny, in CIDR notation.'
        portRange:
          allOf:
            - $ref: '#/components/schemas/PortRange'
            - description: 'TCP or UDP protocols: The range of ports the rule applies to.'
        protocol:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The protocol number. A value of "-1" means all protocols.
        ruleAction:
          allOf:
            - $ref: '#/components/schemas/RuleAction'
            - description: Indicates whether to allow or deny the traffic that matches the rule.
        ruleNumber:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The rule number for the entry. ACL entries are processed in ascending order by rule number.
      description: Describes an entry in a network ACL.
    NetworkAclIdStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/NetworkAclId'
          - xml:
              name: item
    NetworkCardIndex:
      type: integer
    NetworkPerformance:
      type: string
    NetworkCardInfo:
      type: object
      properties:
        networkCardIndex:
          allOf:
            - $ref: '#/components/schemas/NetworkCardIndex'
            - description: The index of the network card.
        networkPerformance:
          allOf:
            - $ref: '#/components/schemas/NetworkPerformance'
            - description: The network performance of the network card.
        maximumNetworkInterfaces:
          allOf:
            - $ref: '#/components/schemas/MaxNetworkInterfaces'
            - description: The maximum number of network interfaces for the network card.
      description: Describes the network card support of the instance type.
    NetworkCardInfoList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/NetworkCardInfo'
          - xml:
              name: item
    NetworkInsightsAccessScopeAnalysis:
      type: object
      properties:
        networkInsightsAccessScopeAnalysisId:
          allOf:
            - $ref: '#/components/schemas/NetworkInsightsAccessScopeAnalysisId'
            - description: The ID of the Network Access Scope analysis.
        networkInsightsAccessScopeAnalysisArn:
          allOf:
            - $ref: '#/components/schemas/ResourceArn'
            - description: The Amazon Resource Name (ARN) of the Network Access Scope analysis.
        networkInsightsAccessScopeId:
          allOf:
            - $ref: '#/components/schemas/NetworkInsightsAccessScopeId'
            - description: The ID of the Network Access Scope.
        status:
          allOf:
            - $ref: '#/components/schemas/AnalysisStatus'
            - description: The status.
        statusMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The status message.
        warningMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The warning message.
        startDate:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: The analysis start date.
        endDate:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: The analysis end date.
        findingsFound:
          allOf:
            - $ref: '#/components/schemas/FindingsFound'
            - description: Indicates whether there are findings.
        analyzedEniCount:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of network interfaces analyzed.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags.
      description: Describes a Network Access Scope analysis.
    NetworkInsightsAccessScopeAnalysisIdList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/NetworkInsightsAccessScopeAnalysisId'
          - xml:
              name: item
    NetworkInsightsAnalysis:
      type: object
      properties:
        networkInsightsAnalysisId:
          allOf:
            - $ref: '#/components/schemas/NetworkInsightsAnalysisId'
            - description: The ID of the network insights analysis.
        networkInsightsAnalysisArn:
          allOf:
            - $ref: '#/components/schemas/ResourceArn'
            - description: The Amazon Resource Name (ARN) of the network insights analysis.
        networkInsightsPathId:
          allOf:
            - $ref: '#/components/schemas/NetworkInsightsPathId'
            - description: The ID of the path.
        filterInArnSet:
          allOf:
            - $ref: '#/components/schemas/ArnList'
            - description: The Amazon Resource Names (ARN) of the Amazon Web Services resources that the path must traverse.
        startDate:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: The time the analysis started.
        status:
          allOf:
            - $ref: '#/components/schemas/AnalysisStatus'
            - description: The status of the network insights analysis.
        statusMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The status message, if the status is <code>failed</code>.'
        warningMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The warning message.
        networkPathFound:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the destination is reachable from the source.
        forwardPathComponentSet:
          allOf:
            - $ref: '#/components/schemas/PathComponentList'
            - description: The components in the path from source to destination.
        returnPathComponentSet:
          allOf:
            - $ref: '#/components/schemas/PathComponentList'
            - description: The components in the path from destination to source.
        explanationSet:
          allOf:
            - $ref: '#/components/schemas/ExplanationList'
            - description: 'The explanations. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/reachability/explanation-codes.html">Reachability Analyzer explanation codes</a>.'
        alternatePathHintSet:
          allOf:
            - $ref: '#/components/schemas/AlternatePathHintList'
            - description: Potential intermediate components.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags.
      description: Describes a network insights analysis.
    NetworkInsightsAnalysisIdList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/NetworkInsightsAnalysisId'
          - xml:
              name: item
    NetworkInsightsMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    Protocol:
      type: string
      enum:
        - tcp
        - udp
    NetworkInsightsResourceId:
      type: string
    NetworkInterfaceAssociation:
      type: object
      properties:
        allocationId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The allocation ID.
        associationId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The association ID.
        ipOwnerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Elastic IP address owner.
        publicDnsName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The public DNS name.
        publicIp:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The address of the Elastic IP address bound to the network interface.
        customerOwnedIp:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The customer-owned IP address associated with the network interface.
        carrierIp:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: <p>The carrier IP address associated with the network interface.</p> <p>This option is only available when the network interface is in a subnet which is associated with a Wavelength Zone.</p>
      description: 'Describes association information for an Elastic IP address (IPv4 only), or a Carrier IP address (for a network interface which resides in a subnet in a Wavelength Zone).'
    NetworkInterfaceType:
      type: string
      enum:
        - interface
        - natGateway
        - efa
        - trunk
        - load_balancer
        - network_load_balancer
        - vpc_endpoint
        - branch
        - transit_gateway
        - lambda
        - quicksight
        - global_accelerator_managed
        - api_gateway_managed
        - gateway_load_balancer
        - gateway_load_balancer_endpoint
        - iot_rules_managed
        - aws_codestar_connections_managed
    NetworkInterfaceIpv6AddressesList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/NetworkInterfaceIpv6Address'
          - xml:
              name: item
    NetworkInterfacePrivateIpAddressList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/NetworkInterfacePrivateIpAddress'
          - xml:
              name: item
    NetworkInterfaceCountRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The maximum number of network interfaces. To specify no maximum limit, omit this parameter.'
      description: The minimum and maximum number of network interfaces.
    NetworkInterfaceIdList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/NetworkInterfaceId'
          - xml:
              name: item
    NetworkInterfaceIpv6Address:
      type: object
      properties:
        ipv6Address:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The IPv6 address.
      description: Describes an IPv6 address associated with a network interface.
    NetworkInterfacePermissionState:
      type: object
      properties:
        state:
          allOf:
            - $ref: '#/components/schemas/NetworkInterfacePermissionStateCode'
            - description: The state of the permission.
        statusMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'A status message, if applicable.'
      description: Describes the state of a network interface permission.
    NetworkInterfacePermissionStateCode:
      type: string
      enum:
        - pending
        - granted
        - revoking
        - revoked
    NetworkInterfacePrivateIpAddress:
      type: object
      properties:
        association:
          allOf:
            - $ref: '#/components/schemas/NetworkInterfaceAssociation'
            - description: The association information for an Elastic IP address (IPv4) associated with the network interface.
        primary:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether this IPv4 address is the primary private IPv4 address of the network interface.
        privateDnsName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The private DNS name.
        privateIpAddress:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The private IPv4 address.
      description: Describes the private IPv4 address of a network interface.
    OccurrenceDayRequestSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Integer'
          - xml:
              name: OccurenceDay
    OccurrenceDaySet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Integer'
          - xml:
              name: item
    OnDemandOptionsRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The maximum amount per hour for On-Demand Instances that you're willing to pay.
      description: Describes the configuration of On-Demand Instances in an EC2 Fleet.
    ProtocolList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Protocol'
          - xml:
              name: item
    PacketHeaderStatement:
      type: object
      properties:
        sourceAddressSet:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: The source addresses.
        destinationAddressSet:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: The destination addresses.
        sourcePortSet:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: The source ports.
        destinationPortSet:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: The destination ports.
        sourcePrefixListSet:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: The source prefix lists.
        destinationPrefixListSet:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: The destination prefix lists.
        protocolSet:
          allOf:
            - $ref: '#/components/schemas/ProtocolList'
            - description: The protocols.
      description: Describes a packet header statement.
    PacketHeaderStatementRequest:
      type: object
      properties:
        SourceAddress:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: The source addresses.
        DestinationAddress:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: The destination addresses.
        SourcePort:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: The source ports.
        DestinationPort:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: The destination ports.
        SourcePrefixList:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: The source prefix lists.
        DestinationPrefixList:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: The destination prefix lists.
        Protocol:
          allOf:
            - $ref: '#/components/schemas/ProtocolList'
            - description: The protocols.
      description: Describes a packet header statement.
    PartitionLoadFrequency:
      type: string
      enum:
        - none
        - daily
        - weekly
        - monthly
    PathComponent:
      type: object
      properties:
        sequenceNumber:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The sequence number.
        aclRule:
          allOf:
            - $ref: '#/components/schemas/AnalysisAclRule'
            - description: The network ACL rule.
        attachedTo:
          allOf:
            - $ref: '#/components/schemas/AnalysisComponent'
            - description: The resource to which the path component is attached.
        component:
          allOf:
            - $ref: '#/components/schemas/AnalysisComponent'
            - description: The component.
        destinationVpc:
          allOf:
            - $ref: '#/components/schemas/AnalysisComponent'
            - description: The destination VPC.
        outboundHeader:
          allOf:
            - $ref: '#/components/schemas/AnalysisPacketHeader'
            - description: The outbound header.
        inboundHeader:
          allOf:
            - $ref: '#/components/schemas/AnalysisPacketHeader'
            - description: The inbound header.
        routeTableRoute:
          allOf:
            - $ref: '#/components/schemas/AnalysisRouteTableRoute'
            - description: The route table route.
        securityGroupRule:
          allOf:
            - $ref: '#/components/schemas/AnalysisSecurityGroupRule'
            - description: The security group rule.
        sourceVpc:
          allOf:
            - $ref: '#/components/schemas/AnalysisComponent'
            - description: The source VPC.
        subnet:
          allOf:
            - $ref: '#/components/schemas/AnalysisComponent'
            - description: The subnet.
        vpc:
          allOf:
            - $ref: '#/components/schemas/AnalysisComponent'
            - description: The component VPC.
        additionalDetailSet:
          allOf:
            - $ref: '#/components/schemas/AdditionalDetailList'
            - description: The additional details.
        transitGateway:
          $ref: '#/components/schemas/AnalysisComponent'
        transitGatewayRouteTableRoute:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayRouteTableRoute'
            - description: The route in a transit gateway route table.
      description: Describes a path component.
    ResourceStatement:
      type: object
      properties:
        resourceSet:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: The resources.
        resourceTypeSet:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: The resource types.
      description: Describes a resource statement.
    ResourceStatementRequest:
      type: object
      properties:
        Resource:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: The resources.
        ResourceType:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: The resource types.
      description: Describes a resource statement.
    PeeringAttachmentStatus:
      type: object
      properties:
        code:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The status code.
        message:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The status message, if applicable.'
      description: The status of the transit gateway peering attachment.
    PeeringConnectionOptionsRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'If true, enables outbound communication from instances in a local VPC to an EC2-Classic instance that''s linked to a peer VPC using ClassicLink.'
      description: The VPC peering connection options.
    PeeringTgwInfo:
      type: object
      properties:
        transitGatewayId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the transit gateway.
        ownerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Amazon Web Services account that owns the transit gateway.
        region:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Region of the transit gateway.
      description: Information about the transit gateway in the peering attachment.
    Phase1DHGroupNumbersListValue:
      type: object
      properties:
        value:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The Diffie-Hellmann group number.
      description: The Diffie-Hellmann group number for phase 1 IKE negotiations.
    Phase1DHGroupNumbersList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Phase1DHGroupNumbersListValue'
          - xml:
              name: item
    Phase1DHGroupNumbersRequestListValue:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The Diffie-Hellmann group number.
      description: Specifies a Diffie-Hellman group number for the VPN tunnel for phase 1 IKE negotiations.
    Phase1EncryptionAlgorithmsListValue:
      type: object
      properties:
        value:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The value for the encryption algorithm.
      description: The encryption algorithm for phase 1 IKE negotiations.
    Phase1EncryptionAlgorithmsList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Phase1EncryptionAlgorithmsListValue'
          - xml:
              name: item
    Phase1EncryptionAlgorithmsRequestListValue:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The value for the encryption algorithm.
      description: Specifies the encryption algorithm for the VPN tunnel for phase 1 IKE negotiations.
    Phase1IntegrityAlgorithmsListValue:
      type: object
      properties:
        value:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The value for the integrity algorithm.
      description: The integrity algorithm for phase 1 IKE negotiations.
    Phase1IntegrityAlgorithmsList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Phase1IntegrityAlgorithmsListValue'
          - xml:
              name: item
    Phase1IntegrityAlgorithmsRequestListValue:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The value for the integrity algorithm.
      description: Specifies the integrity algorithm for the VPN tunnel for phase 1 IKE negotiations.
    Phase2DHGroupNumbersListValue:
      type: object
      properties:
        value:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The Diffie-Hellmann group number.
      description: The Diffie-Hellmann group number for phase 2 IKE negotiations.
    Phase2DHGroupNumbersList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Phase2DHGroupNumbersListValue'
          - xml:
              name: item
    Phase2DHGroupNumbersRequestListValue:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The Diffie-Hellmann group number.
      description: Specifies a Diffie-Hellman group number for the VPN tunnel for phase 2 IKE negotiations.
    Phase2EncryptionAlgorithmsListValue:
      type: object
      properties:
        value:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The encryption algorithm.
      description: The encryption algorithm for phase 2 IKE negotiations.
    Phase2EncryptionAlgorithmsList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Phase2EncryptionAlgorithmsListValue'
          - xml:
              name: item
    Phase2EncryptionAlgorithmsRequestListValue:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The encryption algorithm.
      description: Specifies the encryption algorithm for the VPN tunnel for phase 2 IKE negotiations.
    Phase2IntegrityAlgorithmsListValue:
      type: object
      properties:
        value:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The integrity algorithm.
      description: The integrity algorithm for phase 2 IKE negotiations.
    Phase2IntegrityAlgorithmsList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Phase2IntegrityAlgorithmsListValue'
          - xml:
              name: item
    Phase2IntegrityAlgorithmsRequestListValue:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The integrity algorithm.
      description: Specifies the integrity algorithm for the VPN tunnel for phase 2 IKE negotiations.
    PlacementGroupState:
      type: string
      enum:
        - pending
        - available
        - deleting
        - deleted
    PlacementStrategy:
      type: string
      enum:
        - cluster
        - spread
        - partition
    PlacementGroupStrategyList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/PlacementGroupStrategy'
          - xml:
              name: item
    PlacementGroupStrategy:
      type: string
      enum:
        - cluster
        - partition
        - spread
    PoolCidrBlock:
      type: object
      properties:
        poolCidrBlock:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The CIDR block.
      description: Describes a CIDR block for an address pool.
    PrefixList:
      type: object
      properties:
        cidrSet:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: The IP address range of the Amazon Web Service.
        prefixListId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the prefix.
        prefixListName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the prefix.
      description: Describes prefixes for Amazon Web Services services.
    PrefixListAssociation:
      type: object
      properties:
        resourceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the resource.
        resourceOwner:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The owner of the resource.
      description: Describes the resource with which a prefix list is associated.
    PrefixListEntry:
      type: object
      properties:
        cidr:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The CIDR block.
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The description.
      description: Describes a prefix list entry.
    PrefixListId:
      type: object
      properties:
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>A description for the security group rule that references this prefix list ID.</p> <p>Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*</p>'
        prefixListId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the prefix.
      description: Describes a prefix list ID.
    PrefixListIdSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: item
    PrefixListMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    PriceSchedule:
      type: object
      properties:
        active:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: '<p>The current price schedule, as determined by the term remaining for the Reserved Instance in the listing.</p> <p>A specific price schedule is always in effect, but only one price schedule can be active at any time. Take, for example, a Reserved Instance listing that has five months remaining in its term. When you specify price schedules for five months and two months, this means that schedule 1, covering the first three months of the remaining term, will be active during months 5, 4, and 3. Then schedule 2, covering the last two months of the term, will be active for months 2 and 1.</p>'
        currencyCode:
          allOf:
            - $ref: '#/components/schemas/CurrencyCodeValues'
            - description: 'The currency for transacting the Reserved Instance resale. At this time, the only supported currency is <code>USD</code>.'
        price:
          allOf:
            - $ref: '#/components/schemas/Double'
            - description: The fixed price for the term.
        term:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: 'The number of months remaining in the reservation. For example, 2 is the second to the last month before the capacity reservation expires.'
      description: Describes the price for a Reserved Instance.
    PriceScheduleList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/PriceSchedule'
          - xml:
              name: item
    PricingDetail:
      type: object
      properties:
        count:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of reservations available for the price.
        price:
          allOf:
            - $ref: '#/components/schemas/Double'
            - description: The price per instance.
      description: Describes a Reserved Instance offering.
    PricingDetailsList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/PricingDetail'
          - xml:
              name: item
    PrincipalIdFormat:
      type: object
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: PrincipalIdFormatARN description
        statusSet:
          allOf:
            - $ref: '#/components/schemas/IdFormatList'
            - description: PrincipalIdFormatStatuses description
      description: PrincipalIdFormat description
    PrivateDnsDetails:
      type: object
      properties:
        privateDnsName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The private DNS name assigned to the VPC endpoint service.
      description: Information about the Private DNS name for interface endpoints.
    PrivateDnsDetailsSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/PrivateDnsDetails'
          - xml:
              name: item
    PrivateDnsNameConfiguration:
      type: object
      properties:
        state:
          allOf:
            - $ref: '#/components/schemas/DnsNameState'
            - description: <p>The verification state of the VPC endpoint service.</p> <p>&gt;Consumers of the endpoint service can use the private name only when the state is <code>verified</code>.</p>
        type:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The endpoint service verification type, for example TXT.'
        value:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The value the service provider adds to the private DNS name domain record before verification.
        name:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the record subdomain the service provider needs to create. The service provider adds the <code>value</code> text to the <code>name</code>.
      description: Information about the private DNS name for the service endpoint.
    PrivateDnsNameOptionsOnLaunch:
      type: object
      properties:
        hostnameType:
          allOf:
            - $ref: '#/components/schemas/HostnameType'
            - description: 'The type of hostname for EC2 instances. For IPv4 only subnets, an instance DNS name must be based on the instance IPv4 address. For IPv6 only subnets, an instance DNS name must be based on the instance ID. For dual-stack subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID.'
        enableResourceNameDnsARecord:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether to respond to DNS queries for instance hostnames with DNS A records.
        enableResourceNameDnsAAAARecord:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether to respond to DNS queries for instance hostname with DNS AAAA records.
      description: Describes the options for instance hostnames.
    PrivateDnsNameOptionsRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.
      description: Describes the options for instance hostnames.
    ScheduledInstancesPrivateIpAddressConfig:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The IPv4 address.
      description: Describes a private IPv4 address for a Scheduled Instance.
    PrivateIpAddressConfigSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ScheduledInstancesPrivateIpAddressConfig'
          - xml:
              name: PrivateIpAddressConfigSet
    ProcessorSustainedClockSpeed:
      type: number
      format: double
    ProductCodeValues:
      type: string
      enum:
        - devpay
        - marketplace
    ProductCode:
      type: object
      properties:
        productCode:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The product code.
        type:
          allOf:
            - $ref: '#/components/schemas/ProductCodeValues'
            - description: The type of product code.
      description: Describes a product code.
    PropagatingVgw:
      type: object
      properties:
        gatewayId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the virtual private gateway.
      description: Describes a virtual private gateway propagating route.
    PropagatingVgwList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/PropagatingVgw'
          - xml:
              name: item
    ProvisionByoipCidrRequest:
      type: object
      required:
        - Cidr
      title: ProvisionByoipCidrRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        PoolTagSpecification:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Reserved.
    ProvisionIpamPoolCidrRequest:
      type: object
      required:
        - IpamPoolId
      title: ProvisionIpamPoolCidrRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/IpamCidrAuthorizationContext'
            - description: A signed document that proves that you are authorized to bring a specified IP address range to Amazon using BYOIP. This option applies to public pools only.
    ProvisionPublicIpv4PoolCidrRequest:
      type: object
      required:
        - IpamPoolId
        - PoolId
        - NetmaskLength
      title: ProvisionPublicIpv4PoolCidrRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The netmask length of the CIDR you would like to allocate to the public IPv4 pool.
    PublicIpv4PoolRange:
      type: object
      properties:
        firstAddress:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The first IP address in the range.
        lastAddress:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The last IP address in the range.
        addressCount:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of addresses in the range.
        availableAddressCount:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of available addresses in the range.
      description: Describes an address range of an IPv4 address pool.
    PublicIpv4PoolRangeSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/PublicIpv4PoolRange'
          - xml:
              name: item
    PublicIpv4Pool:
      type: object
      properties:
        poolId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the address pool.
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A description of the address pool.
        poolAddressRangeSet:
          allOf:
            - $ref: '#/components/schemas/PublicIpv4PoolRangeSet'
            - description: The address ranges.
        totalAddressCount:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The total number of addresses.
        totalAvailableAddressCount:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The total number of available addresses.
        networkBorderGroup:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the location from which the address pool is advertised. A network border group is a unique set of Availability Zones or Local Zones from where Amazon Web Services advertises public IP addresses.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: Any tags for the address pool.
      description: Describes an IPv4 address pool.
    PublicIpv4PoolIdStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Ipv4PoolEc2Id'
          - xml:
              name: item
    Purchase:
      type: object
      properties:
        currencyCode:
          allOf:
            - $ref: '#/components/schemas/CurrencyCodeValues'
            - description: 'The currency in which the <code>UpfrontPrice</code> and <code>HourlyPrice</code> amounts are specified. At this time, the only supported currency is <code>USD</code>.'
        duration:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The duration of the reservation's term in seconds.
        hostIdSet:
          allOf:
            - $ref: '#/components/schemas/ResponseHostIdSet'
            - description: The IDs of the Dedicated Hosts associated with the reservation.
        hostReservationId:
          allOf:
            - $ref: '#/components/schemas/HostReservationId'
            - description: The ID of the reservation.
        hourlyPrice:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The hourly price of the reservation per hour.
        instanceFamily:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The instance family on the Dedicated Host that the reservation can be associated with.
        paymentOption:
          allOf:
            - $ref: '#/components/schemas/PaymentOption'
            - description: The payment option for the reservation.
        upfrontPrice:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The upfront price of the reservation.
      description: Describes the result of the purchase.
    PurchaseHostReservationRequest:
      type: object
      required:
        - HostIdSet
        - OfferingId
      title: PurchaseHostReservationRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/OfferingId'
            - description: The ID of the offering.
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/TagSpecificationList'
            - description: The tags to apply to the Dedicated Host Reservation during purchase.
    PurchaseRequestSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/PurchaseRequest'
          - xml:
              name: PurchaseRequest
      minItems: 1
    PurchaseReservedInstancesOfferingRequest:
      type: object
      required:
        - InstanceCount
        - ReservedInstancesOfferingId
      title: PurchaseReservedInstancesOfferingRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/ReservedInstancesOfferingId'
            - description: The ID of the Reserved Instance offering to purchase.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        limitPrice:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: 'The time at which to purchase the Reserved Instance, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).'
      description: Contains the parameters for PurchaseReservedInstancesOffering.
    PurchaseScheduledInstancesRequest:
      type: object
      required:
        - PurchaseRequests
      title: PurchaseScheduledInstancesRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        PurchaseRequest:
          allOf:
            - $ref: '#/components/schemas/PurchaseRequestSet'
            - description: The purchase requests.
      description: Contains the parameters for PurchaseScheduledInstances.
    PurchasedScheduledInstanceSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ScheduledInstance'
          - xml:
              name: item
    ScheduledInstance:
      type: object
      properties:
        availabilityZone:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Availability Zone.
        createDate:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The date when the Scheduled Instance was purchased.
        hourlyPrice:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The hourly price for a single instance.
        instanceCount:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of instances.
        instanceType:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The instance type.
        networkPlatform:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The network platform (<code>EC2-Classic</code> or <code>EC2-VPC</code>).
        nextSlotStartTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The time for the next schedule to start.
        platform:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The platform (<code>Linux/UNIX</code> or <code>Windows</code>).
        previousSlotEndTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The time that the previous schedule ended or will end.
        recurrence:
          allOf:
            - $ref: '#/components/schemas/ScheduledInstanceRecurrence'
            - description: The schedule recurrence.
        scheduledInstanceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Scheduled Instance ID.
        slotDurationInHours:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of hours in the schedule.
        termEndDate:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The end date for the Scheduled Instance.
        termStartDate:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The start date for the Scheduled Instance.
        totalScheduledInstanceHours:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The total number of hours for a single instance for the entire term.
      description: Describes a Scheduled Instance.
    ReasonCodesList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ReportInstanceReasonCodes'
          - xml:
              name: item
    RebootInstancesRequest:
      type: object
      required:
        - InstanceIds
      title: RebootInstancesRequest
      properties:
        InstanceId:
          allOf:
            - $ref: '#/components/schemas/InstanceIdStringList'
            - description: The instance IDs.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    RecurringChargeFrequency:
      type: string
      enum:
        - Hourly
    RecurringCharge:
      type: object
      properties:
        amount:
          allOf:
            - $ref: '#/components/schemas/Double'
            - description: The amount of the recurring charge.
        frequency:
          allOf:
            - $ref: '#/components/schemas/RecurringChargeFrequency'
            - description: The frequency of the recurring charge.
      description: Describes a recurring charge.
    RecurringChargesList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/RecurringCharge'
          - xml:
              name: item
    ReferencedSecurityGroup:
      type: object
      properties:
        groupId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the security group.
        peeringStatus:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The status of a VPC peering connection, if applicable.'
        userId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Web Services account ID.
        vpcId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the VPC.
        vpcPeeringConnectionId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the VPC peering connection.
      description: ' Describes the security group that is referenced in the security group rule.'
    Region:
      type: object
      properties:
        regionEndpoint:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Region service endpoint.
        regionName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the Region.
        optInStatus:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The Region opt-in status. The possible values are <code>opt-in-not-required</code>, <code>opted-in</code>, and <code>not-opted-in</code>.'
      description: Describes a Region.
    RegionNames:
      type: array
      items:
        $ref: '#/components/schemas/String'
      minItems: 0
      maxItems: 10
    StringType:
      type: string
      minLength: 0
      maxLength: 64000
    RegisterImageRequest:
      type: object
      required:
        - Name
      title: RegisterImageRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The full path to your AMI manifest in Amazon S3 storage. The specified bucket must have the <code>aws-exec-read</code> canned access control list (ACL) to ensure that it can be accessed by Amazon EC2. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl">Canned ACLs</a> in the <i>Amazon S3 Service Developer Guide</i>.'
        architecture:
          allOf:
            - $ref: '#/components/schemas/ArchitectureValues'
            - description: '<p>The architecture of the AMI.</p> <p>Default: For Amazon EBS-backed AMIs, <code>i386</code>. For instance store-backed AMIs, the architecture specified in the manifest file.</p>'
        BlockDeviceMapping:
          allOf:
            - $ref: '#/components/schemas/BlockDeviceMappingRequestList'
            - description: '<p>The block device mapping entries.</p> <p>If you specify an Amazon EBS volume using the ID of an Amazon EBS snapshot, you can''t specify the encryption state of the volume.</p> <p>If you create an AMI on an Outpost, then all backing snapshots must be on the same Outpost or in the Region of that Outpost. AMIs on an Outpost that include local snapshots can be used to launch instances on the same Outpost only. For more information, <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshots-outposts.html#ami"> Amazon EBS local snapshots on Outposts</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>'
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A description for your AMI.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        enaSupport:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: <p>Set to <code>true</code> to enable enhanced networking with ENA for the AMI and any instances that you launch from the AMI.</p> <p>This option is supported only for HVM AMIs. Specifying this option with a PV AMI can make instances launched from the AMI unreachable.</p>
        kernelId:
          allOf:
            - $ref: '#/components/schemas/KernelId'
            - description: The ID of the kernel.
        name:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>A name for your AMI.</p> <p>Constraints: 3-128 alphanumeric characters, parentheses (()), square brackets ([]), spaces ( ), periods (.), slashes (/), dashes (-), single quotes (''), at-signs (@), or underscores(_)</p>'
        BillingProduct:
          allOf:
            - $ref: '#/components/schemas/BillingProductList'
            - description: 'The billing product codes. Your account must be authorized to specify billing product codes. Otherwise, you can use the Amazon Web Services Marketplace to bill for the use of an AMI.'
        ramdiskId:
          allOf:
            - $ref: '#/components/schemas/RamdiskId'
            - description: The ID of the RAM disk.
        rootDeviceName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The device name of the root device volume (for example, <code>/dev/sda1</code>).'
        sriovNetSupport:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: <p>Set to <code>simple</code> to enable enhanced networking with the Intel 82599 Virtual Function interface for the AMI and any instances that you launch from the AMI.</p> <p>There is no way to disable <code>sriovNetSupport</code> at this time.</p> <p>This option is supported only for HVM AMIs. Specifying this option with a PV AMI can make instances launched from the AMI unreachable.</p>
        virtualizationType:
          allOf:
            - $ref: '#/components/schemas/StringType'
            - description: 'Base64 representation of the non-volatile UEFI variable store. To retrieve the UEFI data, use the <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetInstanceUefiData">GetInstanceUefiData</a> command. You can inspect and modify the UEFI data by using the <a href="https://github.com/awslabs/python-uefivars">python-uefivars tool</a> on GitHub. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/uefi-secure-boot.html">UEFI Secure Boot</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.'
      description: Contains the parameters for RegisterImage.
    RegisterInstanceTagAttributeRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether to register all tag keys in the current Region. Specify <code>true</code> to register all tag keys.
        InstanceTagKey:
          allOf:
            - $ref: '#/components/schemas/InstanceTagKeySet'
            - description: The tag keys to register.
      description: Information about the tag keys to register for the current Region. You can either specify individual tag keys or register all tag keys in the current Region. You must specify either <code>IncludeAllTagsOfInstance</code> or <code>InstanceTagKeys</code> in the request
    RegisterInstanceEventNotificationAttributesRequest:
      type: object
      title: RegisterInstanceEventNotificationAttributesRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/RegisterInstanceTagAttributeRequest'
            - description: Information about the tag keys to register.
    RegisterTransitGatewayMulticastGroupMembersRequest:
      type: object
      title: RegisterTransitGatewayMulticastGroupMembersRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    TransitGatewayMulticastRegisteredGroupMembers:
      type: object
      properties:
        transitGatewayMulticastDomainId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the transit gateway multicast domain.
        registeredNetworkInterfaceIds:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: The ID of the registered network interfaces.
        groupIpAddress:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The IP address assigned to the transit gateway multicast group.
      description: Describes the registered transit gateway multicast group members.
    RegisterTransitGatewayMulticastGroupSourcesRequest:
      type: object
      title: RegisterTransitGatewayMulticastGroupSourcesRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    TransitGatewayMulticastRegisteredGroupSources:
      type: object
      properties:
        transitGatewayMulticastDomainId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the transit gateway multicast domain.
        registeredNetworkInterfaceIds:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: The IDs of the network interfaces members registered with the transit gateway multicast group.
        groupIpAddress:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The IP address assigned to the transit gateway multicast group.
      description: Describes the members registered with the transit gateway multicast group.
    RejectTransitGatewayMulticastDomainAssociationsRequest:
      type: object
      title: RejectTransitGatewayMulticastDomainAssociationsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    RejectTransitGatewayPeeringAttachmentRequest:
      type: object
      required:
        - TransitGatewayAttachmentId
      title: RejectTransitGatewayPeeringAttachmentRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    RejectTransitGatewayVpcAttachmentRequest:
      type: object
      required:
        - TransitGatewayAttachmentId
      title: RejectTransitGatewayVpcAttachmentRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    RejectVpcEndpointConnectionsRequest:
      type: object
      required:
        - ServiceId
        - VpcEndpointIds
      title: RejectVpcEndpointConnectionsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/VpcEndpointServiceId'
            - description: The ID of the service.
        VpcEndpointId:
          allOf:
            - $ref: '#/components/schemas/VpcEndpointIdList'
            - description: The IDs of one or more VPC endpoints.
    RejectVpcPeeringConnectionRequest:
      type: object
      required:
        - VpcPeeringConnectionId
      title: RejectVpcPeeringConnectionRequest
      properties:
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        vpcPeeringConnectionId:
          allOf:
            - $ref: '#/components/schemas/VpcPeeringConnectionId'
            - description: The ID of the VPC peering connection.
    ReleaseAddressRequest:
      type: object
      title: ReleaseAddressRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The set of Availability Zones, Local Zones, or Wavelength Zones from which Amazon Web Services advertises IP addresses.</p> <p>If you provide an incorrect network border group, you receive an <code>InvalidAddress.NotFound</code> error.</p> <p>You cannot use a network border group with EC2 Classic. If you attempt this operation on EC2 classic, you receive an <code>InvalidParameterCombination</code> error.</p>'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    ReleaseHostsRequest:
      type: object
      required:
        - HostIds
      title: ReleaseHostsRequest
      properties:
        hostId:
          allOf:
            - $ref: '#/components/schemas/RequestHostIdList'
            - description: The IDs of the Dedicated Hosts to release.
    ReleaseIpamPoolAllocationRequest:
      type: object
      required:
        - IpamPoolId
        - Cidr
        - IpamPoolAllocationId
      title: ReleaseIpamPoolAllocationRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/IpamPoolAllocationId'
            - description: The ID of the allocation.
    RemovePrefixListEntries:
      type: array
      items:
        $ref: '#/components/schemas/RemovePrefixListEntry'
      minItems: 0
      maxItems: 100
    ReplaceIamInstanceProfileAssociationRequest:
      type: object
      required:
        - IamInstanceProfile
        - AssociationId
      title: ReplaceIamInstanceProfileAssociationRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/IamInstanceProfileAssociationId'
            - description: The ID of the existing IAM instance profile association.
    ReplaceNetworkAclAssociationRequest:
      type: object
      required:
        - AssociationId
        - NetworkAclId
      title: ReplaceNetworkAclAssociationRequest
      properties:
        associationId:
          allOf:
            - $ref: '#/components/schemas/NetworkAclAssociationId'
            - description: The ID of the current association between the original network ACL and the subnet.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        networkAclId:
          allOf:
            - $ref: '#/components/schemas/NetworkAclId'
            - description: The ID of the new network ACL to associate with the subnet.
    ReplaceNetworkAclEntryRequest:
      type: object
      required:
        - Egress
        - NetworkAclId
        - Protocol
        - RuleAction
        - RuleNumber
      title: ReplaceNetworkAclEntryRequest
      properties:
        cidrBlock:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The IPv4 network range to allow or deny, in CIDR notation (for example <code>172.16.0.0/24</code>).'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        egress:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: '<p>Indicates whether to replace the egress rule.</p> <p>Default: If no value is specified, we replace the ingress rule.</p>'
        Icmp:
          allOf:
            - $ref: '#/components/schemas/IcmpTypeCode'
            - description: 'ICMP protocol: The ICMP or ICMPv6 type and code. Required if specifying protocol 1 (ICMP) or protocol 58 (ICMPv6) with an IPv6 CIDR block.'
        ipv6CidrBlock:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The IPv6 network range to allow or deny, in CIDR notation (for example <code>2001:bd8:1234:1a00::/64</code>).'
        networkAclId:
          allOf:
            - $ref: '#/components/schemas/NetworkAclId'
            - description: The ID of the ACL.
        portRange:
          allOf:
            - $ref: '#/components/schemas/PortRange'
            - description: 'TCP or UDP protocols: The range of ports the rule applies to. Required if specifying protocol 6 (TCP) or 17 (UDP).'
        protocol:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The protocol number. A value of "-1" means all protocols. If you specify "-1" or a protocol number other than "6" (TCP), "17" (UDP), or "1" (ICMP), traffic on all ports is allowed, regardless of any ports or ICMP types or codes that you specify. If you specify protocol "58" (ICMPv6) and specify an IPv4 CIDR block, traffic for all ICMP types and codes allowed, regardless of any that you specify. If you specify protocol "58" (ICMPv6) and specify an IPv6 CIDR block, you must specify an ICMP type and code.'
        ruleAction:
          allOf:
            - $ref: '#/components/schemas/RuleAction'
            - description: Indicates whether to allow or deny the traffic that matches the rule.
        ruleNumber:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The rule number of the entry to replace.
    ReplaceRootVolumeTaskState:
      type: string
      enum:
        - pending
        - in-progress
        - failing
        - succeeded
        - failed
        - failed-detached
    ReplaceRouteRequest:
      type: object
      required:
        - RouteTableId
      title: ReplaceRouteRequest
      properties:
        destinationCidrBlock:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The IPv4 CIDR address block used for the destination match. The value that you provide must match the CIDR of an existing route in the table.
        destinationIpv6CidrBlock:
          allOf:
            - $ref: '#/components/schemas/PrefixListResourceId'
            - description: The ID of the prefix list for the route.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/VpcEndpointId'
            - description: The ID of a VPC endpoint. Supported for Gateway Load Balancer endpoints only.
        egressOnlyInternetGatewayId:
          allOf:
            - $ref: '#/components/schemas/EgressOnlyInternetGatewayId'
            - description: '[IPv6 traffic only] The ID of an egress-only internet gateway.'
        gatewayId:
          allOf:
            - $ref: '#/components/schemas/RouteGatewayId'
            - description: The ID of an internet gateway or virtual private gateway.
        instanceId:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Specifies whether to reset the local route to its default target (<code>local</code>).
        natGatewayId:
          allOf:
            - $ref: '#/components/schemas/CarrierGatewayId'
            - description: '[IPv4 traffic only] The ID of a carrier gateway.'
        networkInterfaceId:
          allOf:
            - $ref: '#/components/schemas/NetworkInterfaceId'
            - description: The ID of a network interface.
        routeTableId:
          allOf:
            - $ref: '#/components/schemas/RouteTableId'
            - description: The ID of the route table.
        vpcPeeringConnectionId:
          allOf:
            - $ref: '#/components/schemas/CoreNetworkArn'
            - description: The Amazon Resource Name (ARN) of the core network.
    ReplaceRouteTableAssociationRequest:
      type: object
      required:
        - AssociationId
        - RouteTableId
      title: ReplaceRouteTableAssociationRequest
      properties:
        associationId:
          allOf:
            - $ref: '#/components/schemas/RouteTableAssociationId'
            - description: The association ID.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        routeTableId:
          allOf:
            - $ref: '#/components/schemas/RouteTableId'
            - description: The ID of the new route table to associate with the subnet.
    ReplaceTransitGatewayRouteRequest:
      type: object
      required:
        - DestinationCidrBlock
        - TransitGatewayRouteTableId
      title: ReplaceTransitGatewayRouteRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    ReplacementStrategy:
      type: string
      enum:
        - launch
        - launch-before-terminate
    ReportStatusType:
      type: string
      enum:
        - ok
        - impaired
    ReportInstanceStatusRequest:
      type: object
      required:
        - Instances
        - ReasonCodes
        - Status
      title: ReportInstanceStatusRequest
      properties:
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Descriptive text about the health state of your instance.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        endTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The time at which the reported instance health state ended.
        instanceId:
          allOf:
            - $ref: '#/components/schemas/InstanceIdStringList'
            - description: The instances.
        reasonCode:
          allOf:
            - $ref: '#/components/schemas/ReasonCodesList'
            - description: '<p>The reason codes that describe the health state of your instance.</p> <ul> <li> <p> <code>instance-stuck-in-state</code>: My instance is stuck in a state.</p> </li> <li> <p> <code>unresponsive</code>: My instance is unresponsive.</p> </li> <li> <p> <code>not-accepting-credentials</code>: My instance is not accepting my credentials.</p> </li> <li> <p> <code>password-not-available</code>: A password is not available for my instance.</p> </li> <li> <p> <code>performance-network</code>: My instance is experiencing performance problems that I believe are network related.</p> </li> <li> <p> <code>performance-instance-store</code>: My instance is experiencing performance problems that I believe are related to the instance stores.</p> </li> <li> <p> <code>performance-ebs-volume</code>: My instance is experiencing performance problems that I believe are related to an EBS volume.</p> </li> <li> <p> <code>performance-other</code>: My instance is experiencing performance problems.</p> </li> <li> <p> <code>other</code>: [explain using the description parameter]</p> </li> </ul>'
        startTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The time at which the reported instance health state began.
        status:
          allOf:
            - $ref: '#/components/schemas/ReportStatusType'
            - description: The status of all instances listed.
    RequestHostIdSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/DedicatedHostId'
          - xml:
              name: item
    SpotFleetRequestConfigData:
      type: object
      required:
        - IamFleetRole
        - TargetCapacity
      properties:
        allocationStrategy:
          allOf:
            - $ref: '#/components/schemas/AllocationStrategy'
            - description: '<p>Indicates how to allocate the target Spot Instance capacity across the Spot Instance pools specified by the Spot Fleet request.</p> <p>If the allocation strategy is <code>lowestPrice</code>, Spot Fleet launches instances from the Spot Instance pools with the lowest price. This is the default allocation strategy.</p> <p>If the allocation strategy is <code>diversified</code>, Spot Fleet launches instances from all the Spot Instance pools that you specify.</p> <p>If the allocation strategy is <code>capacityOptimized</code> (recommended), Spot Fleet launches instances from Spot Instance pools with optimal capacity for the number of instances that are launching. To give certain instance types a higher chance of launching first, use <code>capacityOptimizedPrioritized</code>. Set a priority for each instance type by using the <code>Priority</code> parameter for <code>LaunchTemplateOverrides</code>. You can assign the same priority to different <code>LaunchTemplateOverrides</code>. EC2 implements the priorities on a best-effort basis, but optimizes for capacity first. <code>capacityOptimizedPrioritized</code> is supported only if your Spot Fleet uses a launch template. Note that if the <code>OnDemandAllocationStrategy</code> is set to <code>prioritized</code>, the same priority is applied when fulfilling On-Demand capacity.</p>'
        onDemandAllocationStrategy:
          allOf:
            - $ref: '#/components/schemas/OnDemandAllocationStrategy'
            - description: 'The order of the launch template overrides to use in fulfilling On-Demand capacity. If you specify <code>lowestPrice</code>, Spot Fleet uses price to determine the order, launching the lowest price first. If you specify <code>prioritized</code>, Spot Fleet uses the priority that you assign to each Spot Fleet launch template override, launching the highest priority first. If you do not specify a value, Spot Fleet defaults to <code>lowestPrice</code>.'
        spotMaintenanceStrategies:
          allOf:
            - $ref: '#/components/schemas/SpotMaintenanceStrategies'
            - description: The strategies for managing your Spot Instances that are at an elevated risk of being interrupted.
        clientToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of your listings. This helps to avoid duplicate listings. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.'
        excessCapacityTerminationPolicy:
          allOf:
            - $ref: '#/components/schemas/ExcessCapacityTerminationPolicy'
            - description: Indicates whether running Spot Instances should be terminated if you decrease the target capacity of the Spot Fleet request below the current size of the Spot Fleet.
        fulfilledCapacity:
          allOf:
            - $ref: '#/components/schemas/Double'
            - description: The number of units fulfilled by this request compared to the set target capacity. You cannot set this value.
        onDemandFulfilledCapacity:
          allOf:
            - $ref: '#/components/schemas/Double'
            - description: The number of On-Demand units fulfilled by this request compared to the set target On-Demand capacity.
        iamFleetRole:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The Amazon Resource Name (ARN) of an Identity and Access Management (IAM) role that grants the Spot Fleet the permission to request, launch, terminate, and tag instances on your behalf. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-requests.html#spot-fleet-prerequisites">Spot Fleet prerequisites</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>. Spot Fleet can terminate Spot Instances on your behalf when you cancel its Spot Fleet request using <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CancelSpotFleetRequests">CancelSpotFleetRequests</a> or when the Spot Fleet request expires, if you set <code>TerminateInstancesWithExpiration</code>.'
        launchSpecifications:
          allOf:
            - $ref: '#/components/schemas/LaunchSpecsList'
            - description: 'The launch specifications for the Spot Fleet request. If you specify <code>LaunchSpecifications</code>, you can''t specify <code>LaunchTemplateConfigs</code>. If you include On-Demand capacity in your request, you must use <code>LaunchTemplateConfigs</code>.'
        launchTemplateConfigs:
          allOf:
            - $ref: '#/components/schemas/LaunchTemplateConfigList'
            - description: 'The launch template and overrides. If you specify <code>LaunchTemplateConfigs</code>, you can''t specify <code>LaunchSpecifications</code>. If you include On-Demand capacity in your request, you must use <code>LaunchTemplateConfigs</code>.'
        spotPrice:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The maximum price per unit hour that you are willing to pay for a Spot Instance. The default is the On-Demand price.
        targetCapacity:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The number of units to request for the Spot Fleet. You can choose to set the target capacity in terms of instances or a performance characteristic that is important to your application workload, such as vCPUs, memory, or I/O. If the request type is <code>maintain</code>, you can specify a target capacity of 0 and add capacity later.'
        onDemandTargetCapacity:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The number of On-Demand units to request. You can choose to set the target capacity in terms of instances or a performance characteristic that is important to your application workload, such as vCPUs, memory, or I/O. If the request type is <code>maintain</code>, you can specify a target capacity of 0 and add capacity later.'
        onDemandMaxTotalPrice:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The maximum amount per hour for On-Demand Instances that you''re willing to pay. You can use the <code>onDemandMaxTotalPrice</code> parameter, the <code>spotMaxTotalPrice</code> parameter, or both parameters to ensure that your fleet cost does not exceed your budget. If you set a maximum price per hour for the On-Demand Instances and Spot Instances in your request, Spot Fleet will launch instances until it reaches the maximum amount you''re willing to pay. When the maximum amount you''re willing to pay is reached, the fleet stops launching instances even if it hasn’t met the target capacity.'
        spotMaxTotalPrice:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The maximum amount per hour for Spot Instances that you''re willing to pay. You can use the <code>spotdMaxTotalPrice</code> parameter, the <code>onDemandMaxTotalPrice</code> parameter, or both parameters to ensure that your fleet cost does not exceed your budget. If you set a maximum price per hour for the On-Demand Instances and Spot Instances in your request, Spot Fleet will launch instances until it reaches the maximum amount you''re willing to pay. When the maximum amount you''re willing to pay is reached, the fleet stops launching instances even if it hasn’t met the target capacity.'
        terminateInstancesWithExpiration:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether running Spot Instances are terminated when the Spot Fleet request expires.
        type:
          allOf:
            - $ref: '#/components/schemas/FleetType'
            - description: 'The type of request. Indicates whether the Spot Fleet only requests the target capacity or also attempts to maintain it. When this value is <code>request</code>, the Spot Fleet only places the required requests. It does not attempt to replenish Spot Instances if capacity is diminished, nor does it submit requests in alternative Spot pools if capacity is not available. When this value is <code>maintain</code>, the Spot Fleet maintains the target capacity. The Spot Fleet places the required requests to meet capacity and automatically replenishes any interrupted instances. Default: <code>maintain</code>. <code>instant</code> is listed but is not used by Spot Fleet.'
        validFrom:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: 'The start date and time of the request, in UTC format (<i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). By default, Amazon EC2 starts fulfilling the request immediately.'
        validUntil:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: 'The end date and time of the request, in UTC format (<i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). After the end date and time, no new Spot Instance requests are placed or able to fulfill the request. If no value is specified, the Spot Fleet request remains until you cancel it.'
        replaceUnhealthyInstances:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether Spot Fleet should replace unhealthy instances.
        instanceInterruptionBehavior:
          allOf:
            - $ref: '#/components/schemas/InstanceInterruptionBehavior'
            - description: The behavior when a Spot Instance is interrupted. The default is <code>terminate</code>.
        loadBalancersConfig:
          allOf:
            - $ref: '#/components/schemas/LoadBalancersConfig'
            - description: '<p>One or more Classic Load Balancers and target groups to attach to the Spot Fleet request. Spot Fleet registers the running Spot Instances with the specified Classic Load Balancers and target groups.</p> <p>With Network Load Balancers, Spot Fleet cannot register instances that have the following instance types: C1, CC1, CC2, CG1, CG2, CR1, CS1, G1, G2, HI1, HS1, M1, M2, M3, and T1.</p>'
        instancePoolsToUseCount:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: '<p>The number of Spot pools across which to allocate your target Spot capacity. Valid only when Spot <b>AllocationStrategy</b> is set to <code>lowest-price</code>. Spot Fleet selects the cheapest Spot pools and evenly allocates your target Spot capacity across the number of Spot pools that you specify.</p> <p>Note that Spot Fleet attempts to draw Spot Instances from the number of pools that you specify on a best effort basis. If a pool runs out of Spot capacity before fulfilling your target capacity, Spot Fleet will continue to fulfill your request by drawing from the next cheapest pool. To ensure that your target capacity is met, you might receive Spot Instances from more than the number of pools that you specified. Similarly, if most of the pools have no Spot capacity, you might receive your full target capacity from fewer than the number of pools that you specified.</p>'
        context:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Reserved.
        targetCapacityUnitType:
          allOf:
            - $ref: '#/components/schemas/TargetCapacityUnitType'
            - description: '<p>The unit for the target capacity.</p> <p>Default: <code>units</code> (translates to number of instances)</p>'
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/TagSpecificationList'
            - description: 'The key-value pair for tagging the Spot Fleet request on creation. The value for <code>ResourceType</code> must be <code>spot-fleet-request</code>, otherwise the Spot Fleet request fails. To tag instances at launch, specify the tags in the <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html#create-launch-template">launch template</a> (valid only if you use <code>LaunchTemplateConfigs</code>) or in the <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SpotFleetTagSpecification.html"> <code>SpotFleetTagSpecification</code> </a> (valid only if you use <code>LaunchSpecifications</code>). For information about tagging after launch, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#tag-resources">Tagging Your Resources</a>.'
      description: Describes the configuration of a Spot Fleet request.
    RequestSpotFleetRequest:
      type: object
      required:
        - SpotFleetRequestConfig
      title: RequestSpotFleetRequest
      properties:
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        spotFleetRequestConfig:
          allOf:
            - $ref: '#/components/schemas/SpotFleetRequestConfigData'
            - description: The configuration for the Spot Fleet request.
      description: Contains the parameters for RequestSpotFleet.
    RequestSpotLaunchSpecification:
      type: object
      properties:
        SecurityGroupId:
          allOf:
            - $ref: '#/components/schemas/RequestSpotLaunchSpecificationSecurityGroupIdList'
            - description: One or more security group IDs.
        SecurityGroup:
          allOf:
            - $ref: '#/components/schemas/RequestSpotLaunchSpecificationSecurityGroupList'
            - description: 'One or more security groups. When requesting instances in a VPC, you must specify the IDs of the security groups. When requesting instances in EC2-Classic, you can specify the names or the IDs of the security groups.'
        addressingType:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Deprecated.
        blockDeviceMapping:
          allOf:
            - $ref: '#/components/schemas/BlockDeviceMappingList'
            - description: 'One or more block device mapping entries. You can''t specify both a snapshot ID and an encryption value. This is because only blank volumes can be encrypted on creation. If a snapshot is the basis for a volume, it is not blank and its encryption status is used for the volume encryption status.'
        ebsOptimized:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: '<p>Indicates whether the instance is optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn''t available with all instance types. Additional usage charges apply when using an EBS Optimized instance.</p> <p>Default: <code>false</code> </p>'
        iamInstanceProfile:
          allOf:
            - $ref: '#/components/schemas/IamInstanceProfileSpecification'
            - description: The IAM instance profile.
        imageId:
          allOf:
            - $ref: '#/components/schemas/ImageId'
            - description: The ID of the AMI.
        instanceType:
          allOf:
            - $ref: '#/components/schemas/InstanceType'
            - description: The instance type. Only one instance type can be specified.
        kernelId:
          allOf:
            - $ref: '#/components/schemas/KernelId'
            - description: The ID of the kernel.
        keyName:
          allOf:
            - $ref: '#/components/schemas/KeyPairName'
            - description: The name of the key pair.
        monitoring:
          allOf:
            - $ref: '#/components/schemas/RunInstancesMonitoringEnabled'
            - description: '<p>Indicates whether basic or detailed monitoring is enabled for the instance.</p> <p>Default: Disabled</p>'
        NetworkInterface:
          allOf:
            - $ref: '#/components/schemas/InstanceNetworkInterfaceSpecificationList'
            - description: 'One or more network interfaces. If you specify a network interface, you must specify subnet IDs and security group IDs using the network interface.'
        placement:
          allOf:
            - $ref: '#/components/schemas/SpotPlacement'
            - description: The placement information for the instance.
        ramdiskId:
          allOf:
            - $ref: '#/components/schemas/RamdiskId'
            - description: The ID of the RAM disk.
        subnetId:
          allOf:
            - $ref: '#/components/schemas/SubnetId'
            - description: The ID of the subnet in which to launch the instance.
        userData:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Base64-encoded user data for the instance. User data is limited to 16 KB.
      description: Describes the launch specification for an instance.
    RequestSpotInstancesRequest:
      type: object
      title: RequestSpotInstancesRequest
      properties:
        availabilityZoneGroup:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The user-specified name for a logical grouping of requests.</p> <p>When you specify an Availability Zone group in a Spot Instance request, all Spot Instances in the request are launched in the same Availability Zone. Instance proximity is maintained with this parameter, but the choice of Availability Zone is not. The group applies only to requests for Spot Instances of the same instance type. Any additional Spot Instance requests that are specified with the same Availability Zone group name are launched in that same Availability Zone, as long as at least one instance from the group is still active.</p> <p>If there is no active instance running in the Availability Zone group that you specify for a new Spot Instance request (all instances are terminated, the request is expired, or the maximum price you specified falls below current Spot price), then Amazon EC2 launches the instance in any Availability Zone where the constraint can be met. Consequently, the subsequent set of Spot Instances could be placed in a different zone from the original request, even if you specified the same Availability Zone group.</p> <p>Default: Instances are launched in any available Availability Zone.</p>'
        blockDurationMinutes:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: Deprecated.
        clientToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to Ensure Idempotency</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        instanceCount:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: '<p>The maximum number of Spot Instances to launch.</p> <p>Default: 1</p>'
        launchGroup:
          allOf:
            - $ref: '#/components/schemas/RequestSpotLaunchSpecification'
            - description: The launch specification.
        spotPrice:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The maximum price per hour that you are willing to pay for a Spot Instance. The default is the On-Demand price.
        type:
          allOf:
            - $ref: '#/components/schemas/SpotInstanceType'
            - description: '<p>The Spot Instance request type.</p> <p>Default: <code>one-time</code> </p>'
        validFrom:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: '<p>The start date of the request. If this is a one-time request, the request becomes active at this date and time and remains active until all instances launch, the request expires, or the request is canceled. If the request is persistent, the request becomes active at this date and time and remains active until it expires or is canceled.</p> <p>The specified start date and time cannot be equal to the current date and time. You must specify a start date and time that occurs after the current date and time.</p>'
        validUntil:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: '<p>The end date of the request, in UTC format (<i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).</p> <ul> <li> <p>For a persistent request, the request remains active until the <code>ValidUntil</code> date and time is reached. Otherwise, the request remains active until you cancel it. </p> </li> <li> <p>For a one-time request, the request remains active until all instances launch, the request is canceled, or the <code>ValidUntil</code> date and time is reached. By default, the request is valid for 7 days from the date the request was created.</p> </li> </ul>'
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/InstanceInterruptionBehavior'
            - description: The behavior when a Spot Instance is interrupted. The default is <code>terminate</code>.
      description: Contains the parameters for RequestSpotInstances.
    ReservationFleetInstanceSpecificationList:
      type: array
      items:
        $ref: '#/components/schemas/ReservationFleetInstanceSpecification'
    ReservedInstanceLimitPrice:
      type: object
      properties:
        amount:
          allOf:
            - $ref: '#/components/schemas/Double'
            - description: Used for Reserved Instance Marketplace offerings. Specifies the limit price on the total order (instanceCount * price).
        currencyCode:
          allOf:
            - $ref: '#/components/schemas/CurrencyCodeValues'
            - description: 'The currency in which the <code>limitPrice</code> amount is specified. At this time, the only supported currency is <code>USD</code>.'
      description: Describes the limit price of a Reserved Instance offering.
    ReservedInstanceReservationValue:
      type: object
      properties:
        reservationValue:
          allOf:
            - $ref: '#/components/schemas/ReservationValue'
            - description: The total value of the Convertible Reserved Instance that you are exchanging.
        reservedInstanceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Convertible Reserved Instance that you are exchanging.
      description: The total value of the Convertible Reserved Instance.
    ReservedInstanceState:
      type: string
      enum:
        - payment-pending
        - active
        - payment-failed
        - retired
        - queued
        - queued-deleted
    scope:
      type: string
      enum:
        - Availability Zone
        - Region
    ReservedInstances:
      type: object
      properties:
        availabilityZone:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Availability Zone in which the Reserved Instance can be used.
        duration:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: 'The duration of the Reserved Instance, in seconds.'
        end:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The time when the Reserved Instance expires.
        fixedPrice:
          allOf:
            - $ref: '#/components/schemas/Float'
            - description: The purchase price of the Reserved Instance.
        instanceCount:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of reservations purchased.
        instanceType:
          allOf:
            - $ref: '#/components/schemas/InstanceType'
            - description: The instance type on which the Reserved Instance can be used.
        productDescription:
          allOf:
            - $ref: '#/components/schemas/RIProductDescription'
            - description: The Reserved Instance product platform description.
        reservedInstancesId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Reserved Instance.
        start:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The date and time the Reserved Instance started.
        state:
          allOf:
            - $ref: '#/components/schemas/ReservedInstanceState'
            - description: The state of the Reserved Instance purchase.
        usagePrice:
          allOf:
            - $ref: '#/components/schemas/Float'
            - description: 'The usage price of the Reserved Instance, per hour.'
        currencyCode:
          allOf:
            - $ref: '#/components/schemas/CurrencyCodeValues'
            - description: 'The currency of the Reserved Instance. It''s specified using ISO 4217 standard currency codes. At this time, the only supported currency is <code>USD</code>.'
        instanceTenancy:
          allOf:
            - $ref: '#/components/schemas/Tenancy'
            - description: The tenancy of the instance.
        offeringClass:
          allOf:
            - $ref: '#/components/schemas/OfferingClassType'
            - description: The offering class of the Reserved Instance.
        offeringType:
          allOf:
            - $ref: '#/components/schemas/OfferingTypeValues'
            - description: The Reserved Instance offering type.
        recurringCharges:
          allOf:
            - $ref: '#/components/schemas/RecurringChargesList'
            - description: The recurring charge tag assigned to the resource.
        scope:
          allOf:
            - $ref: '#/components/schemas/scope'
            - description: The scope of the Reserved Instance.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: Any tags assigned to the resource.
      description: Describes a Reserved Instance.
    ReservedInstancesId:
      type: object
      properties:
        reservedInstancesId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Reserved Instance.
      description: Describes the ID of a Reserved Instance.
    ReservedInstancesListing:
      type: object
      properties:
        clientToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'A unique, case-sensitive key supplied by the client to ensure that the request is idempotent. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.'
        createDate:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The time the listing was created.
        instanceCounts:
          allOf:
            - $ref: '#/components/schemas/InstanceCountList'
            - description: The number of instances in this state.
        priceSchedules:
          allOf:
            - $ref: '#/components/schemas/PriceScheduleList'
            - description: The price of the Reserved Instance listing.
        reservedInstancesId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Reserved Instance.
        reservedInstancesListingId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Reserved Instance listing.
        status:
          allOf:
            - $ref: '#/components/schemas/ListingStatus'
            - description: The status of the Reserved Instance listing.
        statusMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The reason for the current status of the Reserved Instance listing. The response can be blank.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: Any tags assigned to the resource.
        updateDate:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The last modified timestamp of the listing.
      description: Describes a Reserved Instance listing.
    ReservedInstancesModificationResultList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ReservedInstancesModificationResult'
          - xml:
              name: item
    ReservedIntancesIds:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ReservedInstancesId'
          - xml:
              name: item
    ReservedInstancesModification:
      type: object
      properties:
        clientToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'A unique, case-sensitive key supplied by the client to ensure that the request is idempotent. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.'
        createDate:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The time when the modification request was created.
        effectiveDate:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The time for the modification to become effective.
        modificationResultSet:
          allOf:
            - $ref: '#/components/schemas/ReservedInstancesModificationResultList'
            - description: Contains target configurations along with their corresponding new Reserved Instance IDs.
        reservedInstancesSet:
          allOf:
            - $ref: '#/components/schemas/ReservedIntancesIds'
            - description: The IDs of one or more Reserved Instances.
        reservedInstancesModificationId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A unique ID for the Reserved Instance modification.
        status:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The status of the Reserved Instances modification request.
        statusMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The reason for the status.
        updateDate:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The time when the modification request was last updated.
      description: Describes a Reserved Instance modification.
    ReservedInstancesModificationResult:
      type: object
      properties:
        reservedInstancesId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID for the Reserved Instances that were created as part of the modification request. This field is only available when the modification is fulfilled.
        targetConfiguration:
          allOf:
            - $ref: '#/components/schemas/ReservedInstancesConfiguration'
            - description: The target Reserved Instances configurations supplied as part of the modification request.
      description: Describes the modification request/s.
    ReservedInstancesOffering:
      type: object
      properties:
        availabilityZone:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Availability Zone in which the Reserved Instance can be used.
        duration:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: 'The duration of the Reserved Instance, in seconds.'
        fixedPrice:
          allOf:
            - $ref: '#/components/schemas/Float'
            - description: The purchase price of the Reserved Instance.
        instanceType:
          allOf:
            - $ref: '#/components/schemas/InstanceType'
            - description: The instance type on which the Reserved Instance can be used.
        productDescription:
          allOf:
            - $ref: '#/components/schemas/RIProductDescription'
            - description: The Reserved Instance product platform description.
        reservedInstancesOfferingId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Reserved Instance offering. This is the offering ID used in <a>GetReservedInstancesExchangeQuote</a> to confirm that an exchange can be made.
        usagePrice:
          allOf:
            - $ref: '#/components/schemas/Float'
            - description: 'The usage price of the Reserved Instance, per hour.'
        currencyCode:
          allOf:
            - $ref: '#/components/schemas/CurrencyCodeValues'
            - description: 'The currency of the Reserved Instance offering you are purchasing. It''s specified using ISO 4217 standard currency codes. At this time, the only supported currency is <code>USD</code>.'
        instanceTenancy:
          allOf:
            - $ref: '#/components/schemas/Tenancy'
            - description: The tenancy of the instance.
        marketplace:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Indicates whether the offering is available through the Reserved Instance Marketplace (resale) or Amazon Web Services. If it''s a Reserved Instance Marketplace offering, this is <code>true</code>.'
        offeringClass:
          allOf:
            - $ref: '#/components/schemas/OfferingClassType'
            - description: 'If <code>convertible</code> it can be exchanged for Reserved Instances of the same or higher monetary value, with different configurations. If <code>standard</code>, it is not possible to perform an exchange.'
        offeringType:
          allOf:
            - $ref: '#/components/schemas/OfferingTypeValues'
            - description: The Reserved Instance offering type.
        pricingDetailsSet:
          allOf:
            - $ref: '#/components/schemas/PricingDetailsList'
            - description: The pricing details of the Reserved Instance offering.
        recurringCharges:
          allOf:
            - $ref: '#/components/schemas/RecurringChargesList'
            - description: The recurring charge tag assigned to the resource.
        scope:
          allOf:
            - $ref: '#/components/schemas/scope'
            - description: Whether the Reserved Instance is applied to instances in a Region or an Availability Zone.
      description: Describes a Reserved Instance offering.
    ResetAddressAttributeRequest:
      type: object
      required:
        - AllocationId
        - Attribute
      title: ResetAddressAttributeRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    ResetEbsDefaultKmsKeyIdRequest:
      type: object
      title: ResetEbsDefaultKmsKeyIdRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    ResetFpgaImageAttributeName:
      type: string
      enum:
        - loadPermission
    ResetFpgaImageAttributeRequest:
      type: object
      required:
        - FpgaImageId
      title: ResetFpgaImageAttributeRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/ResetFpgaImageAttributeName'
            - description: The attribute.
    ResetImageAttributeName:
      type: string
      enum:
        - launchPermission
    ResetImageAttributeRequest:
      type: object
      required:
        - Attribute
        - ImageId
      title: ResetImageAttributeRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/ImageId'
            - description: The ID of the AMI.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
      description: Contains the parameters for ResetImageAttribute.
    ResetInstanceAttributeRequest:
      type: object
      required:
        - Attribute
        - InstanceId
      title: ResetInstanceAttributeRequest
      properties:
        attribute:
          allOf:
            - $ref: '#/components/schemas/InstanceAttributeName'
            - description: '<p>The attribute to reset.</p> <important> <p>You can only reset the following attributes: <code>kernel</code> | <code>ramdisk</code> | <code>sourceDestCheck</code>.</p> </important>'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        instanceId:
          allOf:
            - $ref: '#/components/schemas/InstanceId'
            - description: The ID of the instance.
    ResetNetworkInterfaceAttributeRequest:
      type: object
      required:
        - NetworkInterfaceId
      title: ResetNetworkInterfaceAttributeRequest
      properties:
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        networkInterfaceId:
          allOf:
            - $ref: '#/components/schemas/NetworkInterfaceId'
            - description: The ID of the network interface.
        sourceDestCheck:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The source/destination checking attribute. Resets the value to <code>true</code>.
      description: Contains the parameters for ResetNetworkInterfaceAttribute.
    ResetSnapshotAttributeRequest:
      type: object
      required:
        - Attribute
        - SnapshotId
      title: ResetSnapshotAttributeRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/SnapshotId'
            - description: The ID of the snapshot.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    ResourceList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: item
    RestoreAddressToClassicRequest:
      type: object
      required:
        - PublicIp
      title: RestoreAddressToClassicRequest
      properties:
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        publicIp:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Elastic IP address.
    RestoreImageFromRecycleBinRequest:
      type: object
      required:
        - ImageId
      title: RestoreImageFromRecycleBinRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    RestoreManagedPrefixListVersionRequest:
      type: object
      required:
        - PrefixListId
        - PreviousVersion
        - CurrentVersion
      title: RestoreManagedPrefixListVersionRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: The current version number for the prefix list.
    RestoreSnapshotFromRecycleBinRequest:
      type: object
      required:
        - SnapshotId
      title: RestoreSnapshotFromRecycleBinRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    SnapshotState:
      type: string
      enum:
        - pending
        - completed
        - error
        - recoverable
        - recovering
    RestoreSnapshotTierRequest:
      type: object
      required:
        - SnapshotId
      title: RestoreSnapshotTierRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    RestoreSnapshotTierRequestTemporaryRestoreDays:
      type: integer
    ResultRange:
      type: integer
      minimum: 20
      maximum: 500
    RevokeClientVpnIngressRequest:
      type: object
      required:
        - ClientVpnEndpointId
        - TargetNetworkCidr
      title: RevokeClientVpnIngressRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    SecurityGroupRuleIdList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: item
    RevokeSecurityGroupEgressRequest:
      type: object
      required:
        - GroupId
      title: RevokeSecurityGroupEgressRequest
      properties:
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        groupId:
          allOf:
            - $ref: '#/components/schemas/SecurityGroupId'
            - description: The ID of the security group.
        ipPermissions:
          allOf:
            - $ref: '#/components/schemas/IpPermissionList'
            - description: The sets of IP permissions. You can't specify a destination security group and a CIDR IP address range in the same set of permissions.
        SecurityGroupRuleId:
          allOf:
            - $ref: '#/components/schemas/SecurityGroupRuleIdList'
            - description: The IDs of the security group rules.
        cidrIp:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Not supported. Use a set of IP permissions to specify the CIDR.
        fromPort:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: Not supported. Use a set of IP permissions to specify the port.
        ipProtocol:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Not supported. Use a set of IP permissions to specify the protocol name or number.
        toPort:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: Not supported. Use a set of IP permissions to specify the port.
        sourceSecurityGroupName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Not supported. Use a set of IP permissions to specify a destination security group.
        sourceSecurityGroupOwnerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Not supported. Use a set of IP permissions to specify a destination security group.
    RevokeSecurityGroupIngressRequest:
      type: object
      title: RevokeSecurityGroupIngressRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The end of port range for the TCP and UDP protocols, or an ICMP code number. For the ICMP code number, use <code>-1</code> to specify all ICMP codes for the ICMP type.'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        SecurityGroupRuleId:
          allOf:
            - $ref: '#/components/schemas/SecurityGroupRuleIdList'
            - description: The IDs of the security group rules.
    RootDeviceType:
      type: string
      enum:
        - ebs
        - instance-store
    RouteOrigin:
      type: string
      enum:
        - CreateRouteTable
        - CreateRoute
        - EnableVgwRoutePropagation
    RouteState:
      type: string
      enum:
        - active
        - blackhole
    Route:
      type: object
      properties:
        destinationCidrBlock:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The IPv4 CIDR block used for the destination match.
        destinationIpv6CidrBlock:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The IPv6 CIDR block used for the destination match.
        destinationPrefixListId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The prefix of the Amazon Web Service.
        egressOnlyInternetGatewayId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the egress-only internet gateway.
        gatewayId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of a gateway attached to your VPC.
        instanceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of a NAT instance in your VPC.
        instanceOwnerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of Amazon Web Services account that owns the instance.
        natGatewayId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of a NAT gateway.
        transitGatewayId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of a transit gateway.
        localGatewayId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the local gateway.
        carrierGatewayId:
          allOf:
            - $ref: '#/components/schemas/CarrierGatewayId'
            - description: The ID of the carrier gateway.
        networkInterfaceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the network interface.
        origin:
          allOf:
            - $ref: '#/components/schemas/RouteOrigin'
            - description: <p>Describes how the route was created.</p> <ul> <li> <p> <code>CreateRouteTable</code> - The route was automatically created when the route table was created.</p> </li> <li> <p> <code>CreateRoute</code> - The route was manually added to the route table.</p> </li> <li> <p> <code>EnableVgwRoutePropagation</code> - The route was propagated by route propagation.</p> </li> </ul>
        state:
          allOf:
            - $ref: '#/components/schemas/RouteState'
            - description: 'The state of the route. The <code>blackhole</code> state indicates that the route''s target isn''t available (for example, the specified gateway isn''t attached to the VPC, or the specified NAT instance has been terminated).'
        vpcPeeringConnectionId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of a VPC peering connection.
        coreNetworkArn:
          allOf:
            - $ref: '#/components/schemas/CoreNetworkArn'
            - description: The Amazon Resource Name (ARN) of the core network.
      description: Describes a route in a route table.
    RouteList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Route'
          - xml:
              name: item
    RouteTableAssociationList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/RouteTableAssociation'
          - xml:
              name: item
    RouteTableAssociation:
      type: object
      properties:
        main:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether this is the main route table.
        routeTableAssociationId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the association.
        routeTableId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the route table.
        subnetId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the subnet. A subnet ID is not returned for an implicit association.
        gatewayId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the internet gateway or virtual private gateway.
        associationState:
          allOf:
            - $ref: '#/components/schemas/RouteTableAssociationState'
            - description: The state of the association.
      description: Describes an association between a route table and a subnet or gateway.
    RouteTableAssociationStateCode:
      type: string
      enum:
        - associating
        - associated
        - disassociating
        - disassociated
        - failed
    RouteTableIdStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/RouteTableId'
          - xml:
              name: item
    RunInstancesUserData:
      type: string
      format: password
    RunInstancesRequest:
      type: object
      required:
        - MaxCount
        - MinCount
      title: RunInstancesRequest
      properties:
        BlockDeviceMapping:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: '<p>[EC2-VPC] The number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet. You cannot specify this option and the option to assign specific IPv6 addresses in the same request. You can specify this option if you''ve specified a minimum number of instances to launch.</p> <p>You cannot specify this option and the network interfaces option in the same request.</p>'
        Ipv6Address:
          allOf:
            - $ref: '#/components/schemas/RamdiskId'
            - description: '<p>The ID of the RAM disk to select. Some kernels require additional drivers at launch. Check the kernel requirements for information about whether you need to specify a RAM disk. To find kernel requirements, go to the Amazon Web Services Resource Center and search for the kernel ID.</p> <important> <p>We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html">PV-GRUB</a> in the <i>Amazon EC2 User Guide</i>.</p> </important>'
        SecurityGroupId:
          allOf:
            - $ref: '#/components/schemas/SecurityGroupIdStringList'
            - description: '<p>The IDs of the security groups. You can create a security group using <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSecurityGroup.html">CreateSecurityGroup</a>.</p> <p>If you specify a network interface, you must specify any security groups as part of the network interface.</p>'
        SecurityGroup:
          allOf:
            - $ref: '#/components/schemas/RunInstancesUserData'
            - description: 'The user data script to make available to the instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html">Run commands on your Linux instance at launch</a> and <a href="https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ec2-windows-user-data.html">Run commands on your Windows instance at launch</a>. If you are using a command line tool, base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide base64-encoded text. User data is limited to 16 KB.'
        additionalInfo:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Reserved.
        clientToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>Unique, case-sensitive identifier you provide to ensure the idempotency of the request. If you do not specify a client token, a randomly generated token is used for the request to ensure idempotency.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.</p> <p>Constraints: Maximum 64 ASCII characters</p>'
        disableApiTermination:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: '<p>If you set this parameter to <code>true</code>, you can''t terminate the instance using the Amazon EC2 console, CLI, or API; otherwise, you can. To change this attribute after launch, use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceAttribute.html">ModifyInstanceAttribute</a>. Alternatively, if you set <code>InstanceInitiatedShutdownBehavior</code> to <code>terminate</code>, you can terminate the instance by running the shutdown command from the instance.</p> <p>Default: <code>false</code> </p>'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        ebsOptimized:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: '<p>Indicates whether the instance is optimized for Amazon EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal Amazon EBS I/O performance. This optimization isn''t available with all instance types. Additional usage charges apply when using an EBS-optimized instance.</p> <p>Default: <code>false</code> </p>'
        iamInstanceProfile:
          allOf:
            - $ref: '#/components/schemas/IamInstanceProfileSpecification'
            - description: The name or Amazon Resource Name (ARN) of an IAM instance profile.
        instanceInitiatedShutdownBehavior:
          allOf:
            - $ref: '#/components/schemas/ShutdownBehavior'
            - description: '<p>Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).</p> <p>Default: <code>stop</code> </p>'
        networkInterface:
          allOf:
            - $ref: '#/components/schemas/InstanceNetworkInterfaceSpecificationList'
            - description: 'The network interfaces to associate with the instance. If you specify a network interface, you must specify any security groups and subnets as part of the network interface.'
        privateIpAddress:
          allOf:
            - $ref: '#/components/schemas/ElasticGpuSpecifications'
            - description: 'An elastic GPU to associate with the instance. An Elastic GPU is a GPU resource that you can attach to your Windows instance to accelerate the graphics performance of your applications. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-graphics.html">Amazon EC2 Elastic GPUs</a> in the <i>Amazon EC2 User Guide</i>.'
        ElasticInferenceAccelerator:
          allOf:
            - $ref: '#/components/schemas/ElasticInferenceAccelerators'
            - description: <p>An elastic inference accelerator to associate with the instance. Elastic inference accelerators are a resource you can attach to your Amazon EC2 instances to accelerate your Deep Learning (DL) inference workloads.</p> <p>You cannot specify accelerators from different generations in the same request.</p>
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/HibernationOptionsRequest'
            - description: '<p>Indicates whether an instance is enabled for hibernation. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html">Hibernate your instance</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>You can''t enable hibernation and Amazon Web Services Nitro Enclaves on the same instance.</p>'
        LicenseSpecification:
          allOf:
            - $ref: '#/components/schemas/InstanceMaintenanceOptionsRequest'
            - description: The maintenance and recovery options for the instance.
    RunScheduledInstancesRequest:
      type: object
      required:
        - LaunchSpecification
        - ScheduledInstanceId
      title: RunScheduledInstancesRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/ScheduledInstanceId'
            - description: The Scheduled Instance ID.
      description: Contains the parameters for RunScheduledInstances.
    S3ObjectTagList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/S3ObjectTag'
          - xml:
              name: item
    ScheduledInstanceRecurrence:
      type: object
      properties:
        frequency:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The frequency (<code>Daily</code>, <code>Weekly</code>, or <code>Monthly</code>).'
        interval:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The interval quantity. The interval unit depends on the value of <code>frequency</code>. For example, every 2 weeks or every 2 months.'
        occurrenceDaySet:
          allOf:
            - $ref: '#/components/schemas/OccurrenceDaySet'
            - description: 'The days. For a monthly schedule, this is one or more days of the month (1-31). For a weekly schedule, this is one or more days of the week (1-7, where 1 is Sunday).'
        occurrenceRelativeToEnd:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the occurrence is relative to the end of the specified week or month.
        occurrenceUnit:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The unit for <code>occurrenceDaySet</code> (<code>DayOfWeek</code> or <code>DayOfMonth</code>).
      description: Describes the recurring schedule for a Scheduled Instance.
    ScheduledInstanceAvailability:
      type: object
      properties:
        availabilityZone:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Availability Zone.
        availableInstanceCount:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of available instances.
        firstSlotStartTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The time period for the first schedule to start.
        hourlyPrice:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The hourly price for a single instance.
        instanceType:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The instance type. You can specify one of the C3, C4, M4, or R3 instance types.'
        maxTermDurationInDays:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The maximum term. The only possible value is 365 days.
        minTermDurationInDays:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The minimum term. The only possible value is 365 days.
        networkPlatform:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The network platform (<code>EC2-Classic</code> or <code>EC2-VPC</code>).
        platform:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The platform (<code>Linux/UNIX</code> or <code>Windows</code>).
        purchaseToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The purchase token. This token expires in two hours.
        recurrence:
          allOf:
            - $ref: '#/components/schemas/ScheduledInstanceRecurrence'
            - description: The schedule recurrence.
        slotDurationInHours:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of hours in the schedule.
        totalScheduledInstanceHours:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The total number of hours for a single instance for the entire term.
      description: Describes a schedule that is available for your Scheduled Instances.
    ScheduledInstanceIdRequestSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ScheduledInstanceId'
          - xml:
              name: ScheduledInstanceId
    ScheduledInstancesBlockDeviceMapping:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The virtual device name (<code>ephemeral</code>N). Instance store volumes are numbered starting from 0. An instance type with two available instance store volumes can specify mappings for <code>ephemeral0</code> and <code>ephemeral1</code>. The number of available instance store volumes depends on the instance type. After you connect to the instance, you must mount the volume.</p> <p>Constraints: For M3 instances, you must specify instance store volumes in the block device mapping for the instance. When you launch an M3 instance, we ignore any instance store volumes specified in the block device mapping for the AMI.</p>'
      description: Describes a block device mapping for a Scheduled Instance.
    ScheduledInstancesBlockDeviceMappingSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ScheduledInstancesBlockDeviceMapping'
          - xml:
              name: BlockDeviceMapping
    ScheduledInstancesEbs:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The volume type. <code>gp2</code> for General Purpose SSD, <code>io1</code> or <code> io2</code> for Provisioned IOPS SSD, Throughput Optimized HDD for <code>st1</code>, Cold HDD for <code>sc1</code>, or <code>standard</code> for Magnetic.</p> <p>Default: <code>gp2</code> </p>'
      description: Describes an EBS volume for a Scheduled Instance.
    ScheduledInstancesIamInstanceProfile:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name.
      description: Describes an IAM instance profile for a Scheduled Instance.
    ScheduledInstancesIpv6Address:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Ipv6Address'
            - description: The IPv6 address.
      description: Describes an IPv6 address.
    ScheduledInstancesIpv6AddressList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ScheduledInstancesIpv6Address'
          - xml:
              name: Ipv6Address
    ScheduledInstancesLaunchSpecification:
      type: object
      required:
        - ImageId
      properties:
        BlockDeviceMapping:
          allOf:
            - $ref: '#/components/schemas/ScheduledInstancesMonitoring'
            - description: Enable or disable monitoring for the instances.
        NetworkInterface:
          allOf:
            - $ref: '#/components/schemas/RamdiskId'
            - description: The ID of the RAM disk.
        SecurityGroupId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The base64-encoded MIME user data.
      description: '<p>Describes the launch specification for a Scheduled Instance.</p> <p>If you are launching the Scheduled Instance in EC2-VPC, you must specify the ID of the subnet. You can specify the subnet using either <code>SubnetId</code> or <code>NetworkInterface</code>.</p>'
    ScheduledInstancesNetworkInterface:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The index of the device for the network interface attachment.
        Group:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of IPv6 addresses to assign to the network interface. The IPv6 addresses are automatically selected from the subnet range.
        Ipv6Address:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The IPv4 address of the network interface within the subnet.
        PrivateIpAddressConfig:
          allOf:
            - $ref: '#/components/schemas/SubnetId'
            - description: The ID of the subnet.
      description: Describes a network interface for a Scheduled Instance.
    ScheduledInstancesNetworkInterfaceSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ScheduledInstancesNetworkInterface'
          - xml:
              name: NetworkInterface
    ScheduledInstancesPlacement:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/PlacementGroupName'
            - description: The name of the placement group.
      description: Describes the placement for a Scheduled Instance.
    ScheduledInstancesSecurityGroupIdSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/SecurityGroupId'
          - xml:
              name: SecurityGroupId
    SearchLocalGatewayRoutesRequest:
      type: object
      required:
        - LocalGatewayRouteTableId
      title: SearchLocalGatewayRoutesRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/LocalGatewayRoutetableId'
            - description: The ID of the local gateway route table.
        Filter:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    SearchTransitGatewayMulticastGroupsRequest:
      type: object
      title: SearchTransitGatewayMulticastGroupsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayMulticastDomainId'
            - description: The ID of the transit gateway multicast domain.
        Filter:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    TransitGatewayMulticastGroupList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/TransitGatewayMulticastGroup'
          - xml:
              name: item
    SearchTransitGatewayRoutesRequest:
      type: object
      required:
        - TransitGatewayRouteTableId
        - Filters
      title: SearchTransitGatewayRoutesRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayRouteTableId'
            - description: The ID of the transit gateway route table.
        Filter:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    TransitGatewayRouteList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/TransitGatewayRoute'
          - xml:
              name: item
    SecurityGroup:
      type: object
      properties:
        groupDescription:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A description of the security group.
        groupName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the security group.
        ipPermissions:
          allOf:
            - $ref: '#/components/schemas/IpPermissionList'
            - description: The inbound rules associated with the security group.
        ownerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Web Services account ID of the owner of the security group.
        groupId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the security group.
        ipPermissionsEgress:
          allOf:
            - $ref: '#/components/schemas/IpPermissionList'
            - description: '[VPC only] The outbound rules associated with the security group.'
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: Any tags assigned to the security group.
        vpcId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '[VPC only] The ID of the VPC for the security group.'
      description: Describes a security group.
    SecurityGroupReference:
      type: object
      properties:
        groupId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of your security group.
        referencingVpcId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the VPC with the referencing security group.
        vpcPeeringConnectionId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the VPC peering connection.
      description: Describes a VPC with a security group that references your security group.
    SecurityGroupRuleId:
      type: string
    SecurityGroupRule:
      type: object
      properties:
        securityGroupRuleId:
          allOf:
            - $ref: '#/components/schemas/SecurityGroupRuleId'
            - description: The ID of the security group rule.
        groupId:
          allOf:
            - $ref: '#/components/schemas/SecurityGroupId'
            - description: The ID of the security group.
        groupOwnerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The ID of the Amazon Web Services account that owns the security group. '
        isEgress:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the security group rule is an outbound rule.
        ipProtocol:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The IP protocol name (<code>tcp</code>, <code>udp</code>, <code>icmp</code>, <code>icmpv6</code>) or number (see <a href="http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml">Protocol Numbers</a>). </p> <p>Use <code>-1</code> to specify all protocols.</p>'
        fromPort:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type. A value of -1 indicates all ICMP/ICMPv6 types. If you specify all ICMP/ICMPv6 types, you must specify all codes.'
        toPort:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code. A value of <code>-1</code> indicates all ICMP/ICMPv6 codes. If you specify all ICMP/ICMPv6 types, you must specify all codes. '
        cidrIpv4:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The IPv4 CIDR range.
        cidrIpv6:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The IPv6 CIDR range.
        prefixListId:
          allOf:
            - $ref: '#/components/schemas/PrefixListResourceId'
            - description: The ID of the prefix list.
        referencedGroupInfo:
          allOf:
            - $ref: '#/components/schemas/ReferencedSecurityGroup'
            - description: Describes the security group that is referenced in the rule.
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The security group rule description.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags applied to the security group rule.
      description: Describes a security group rule.
    SecurityGroupRuleDescriptionList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/SecurityGroupRuleDescription'
          - xml:
              name: item
    SecurityGroupRuleRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The description of the security group rule.
      description: '<p>Describes a security group rule.</p> <p>You must specify exactly one of the following parameters, based on the rule type:</p> <ul> <li> <p>CidrIpv4</p> </li> <li> <p>CidrIpv6</p> </li> <li> <p>PrefixListId</p> </li> <li> <p>ReferencedGroupId</p> </li> </ul> <p>When you modify a rule, you cannot change the rule type. For example, if the rule uses an IPv4 address range, you must use <code>CidrIpv4</code> to specify a new IPv4 address range.</p>'
    SecurityGroupRuleUpdateList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/SecurityGroupRuleUpdate'
          - xml:
              name: item
    SelfServicePortal:
      type: string
      enum:
        - enabled
        - disabled
    SendDiagnosticInterruptRequest:
      type: object
      required:
        - InstanceId
      title: SendDiagnosticInterruptRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    ServiceTypeDetailSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ServiceTypeDetail'
          - xml:
              name: item
    ServiceState:
      type: string
      enum:
        - Pending
        - Available
        - Deleting
        - Deleted
        - Failed
    SupportedIpAddressTypes:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ServiceConnectivityType'
          - xml:
              name: item
      minItems: 0
      maxItems: 2
    ServiceConnectivityType:
      type: string
      enum:
        - ipv4
        - ipv6
    ServiceDetail:
      type: object
      properties:
        serviceName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Resource Name (ARN) of the service.
        serviceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the endpoint service.
        serviceType:
          allOf:
            - $ref: '#/components/schemas/ServiceTypeDetailSet'
            - description: The type of service.
        availabilityZoneSet:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: The Availability Zones in which the service is available.
        owner:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Web Services account ID of the service owner.
        baseEndpointDnsNameSet:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: The DNS names for the service.
        privateDnsName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The private DNS name for the service.
        privateDnsNameSet:
          allOf:
            - $ref: '#/components/schemas/PrivateDnsDetailsSet'
            - description: 'The private DNS names assigned to the VPC endpoint service. '
        vpcEndpointPolicySupported:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the service supports endpoint policies.
        acceptanceRequired:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether VPC endpoint connection requests to the service must be accepted by the service owner.
        managesVpcEndpoints:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the service manages its VPC endpoints. Management of the service VPC endpoints using the VPC endpoint API is restricted.
        payerResponsibility:
          allOf:
            - $ref: '#/components/schemas/PayerResponsibility'
            - description: The payer responsibility.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: Any tags assigned to the service.
        privateDnsNameVerificationState:
          allOf:
            - $ref: '#/components/schemas/DnsNameState'
            - description: <p>The verification state of the VPC endpoint service.</p> <p>Consumers of the endpoint service cannot use the private name when the state is not <code>verified</code>.</p>
        supportedIpAddressTypeSet:
          allOf:
            - $ref: '#/components/schemas/SupportedIpAddressTypes'
            - description: The supported IP address types.
      description: Describes a VPC endpoint service.
    ServiceType:
      type: string
      enum:
        - Interface
        - Gateway
        - GatewayLoadBalancer
    ServiceTypeDetail:
      type: object
      properties:
        serviceType:
          allOf:
            - $ref: '#/components/schemas/ServiceType'
            - description: The type of service.
      description: Describes the type of service for a VPC endpoint.
    SlotDateTimeRangeRequest:
      type: object
      required:
        - EarliestTime
        - LatestTime
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: 'The latest date and time, in UTC, for the Scheduled Instance to start. This value must be later than or equal to the earliest date and at most three months in the future.'
      description: Describes the time period for a Scheduled Instance to start its first schedule. The time period must span less than one day.
    StorageTier:
      type: string
      enum:
        - archive
        - standard
    SnapshotAttributeName:
      type: string
      enum:
        - productCodes
        - createVolumePermission
    UserBucketDetails:
      type: object
      properties:
        s3Bucket:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon S3 bucket from which the disk image was created.
        s3Key:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The file name of the disk image.
      description: Describes the Amazon S3 bucket for the disk image.
    SnapshotDetail:
      type: object
      properties:
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A description for the snapshot.
        deviceName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The block device mapping for the snapshot.
        diskImageSize:
          allOf:
            - $ref: '#/components/schemas/Double'
            - description: 'The size of the disk in the snapshot, in GiB.'
        format:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The format of the disk image from which the snapshot is created.
        progress:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The percentage of progress for the task.
        snapshotId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The snapshot ID of the disk being imported.
        status:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A brief status of the snapshot creation.
        statusMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A detailed status message for the snapshot creation.
        url:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The URL used to access the disk image.
        userBucket:
          allOf:
            - $ref: '#/components/schemas/UserBucketDetails'
            - description: The Amazon S3 bucket for the disk image.
      description: Describes the snapshot created from the imported disk.
    SnapshotDiskContainer:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/UserBucket'
            - description: The Amazon S3 bucket for the disk image.
      description: The disk container object for the import snapshot request.
    SnapshotInfo:
      type: object
      properties:
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Description specified by the CreateSnapshotRequest that has been applied to all snapshots.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: Tags associated with this snapshot.
        encrypted:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the snapshot is encrypted.
        volumeId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Source volume from which this snapshot was created.
        state:
          allOf:
            - $ref: '#/components/schemas/SnapshotState'
            - description: Current state of the snapshot.
        volumeSize:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: Size of the volume from which this snapshot was created.
        startTime:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: Time this snapshot was started. This is the same for all snapshots initiated by the same request.
        progress:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Progress this snapshot has made towards completing.
        ownerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Account id used when creating this snapshot.
        snapshotId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Snapshot id that can be used to describe this snapshot.
        outpostArn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The ARN of the Outpost on which the snapshot is stored. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshots-outposts.html">Amazon EBS local snapshots on Outposts</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.'
      description: Information about a snapshot.
    SnapshotRecycleBinInfo:
      type: object
      properties:
        snapshotId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the snapshot.
        recycleBinEnterTime:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: The date and time when the snaphsot entered the Recycle Bin.
        recycleBinExitTime:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: The date and time when the snapshot is to be permanently deleted from the Recycle Bin.
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The description for the snapshot.
        volumeId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the volume from which the snapshot was created.
      description: Information about a snapshot that is currently in the Recycle Bin.
    TieringOperationStatus:
      type: string
      enum:
        - archival-in-progress
        - archival-completed
        - archival-failed
        - temporary-restore-in-progress
        - temporary-restore-completed
        - temporary-restore-failed
        - permanent-restore-in-progress
        - permanent-restore-completed
        - permanent-restore-failed
    SnapshotTierStatus:
      type: object
      properties:
        snapshotId:
          allOf:
            - $ref: '#/components/schemas/SnapshotId'
            - description: The ID of the snapshot.
        volumeId:
          allOf:
            - $ref: '#/components/schemas/VolumeId'
            - description: The ID of the volume from which the snapshot was created.
        status:
          allOf:
            - $ref: '#/components/schemas/SnapshotState'
            - description: The state of the snapshot.
        ownerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Amazon Web Services account that owns the snapshot.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags that are assigned to the snapshot.
        storageTier:
          allOf:
            - $ref: '#/components/schemas/StorageTier'
            - description: The storage tier in which the snapshot is stored. <code>standard</code> indicates that the snapshot is stored in the standard snapshot storage tier and that it is ready for use. <code>archive</code> indicates that the snapshot is currently archived and that it must be restored before it can be used.
        lastTieringStartTime:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: The date and time when the last archive or restore process was started.
        lastTieringProgress:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The progress of the last archive or restore process, as a percentage.'
        lastTieringOperationStatus:
          allOf:
            - $ref: '#/components/schemas/TieringOperationStatus'
            - description: The status of the last archive or restore process.
        lastTieringOperationStatusDetail:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A message describing the status of the last archive or restore process.
        archivalCompleteTime:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: The date and time when the last archive process was completed.
        restoreExpiryTime:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: Only for archived snapshots that are temporarily restored. Indicates the date and time when a temporarily restored snapshot will be automatically re-archived.
      description: Provides information about a snapshot's storage tier.
    SpotAllocationStrategy:
      type: string
      enum:
        - lowest-price
        - diversified
        - capacity-optimized
        - capacity-optimized-prioritized
    SpotCapacityRebalance:
      type: object
      properties:
        replacementStrategy:
          allOf:
            - $ref: '#/components/schemas/ReplacementStrategy'
            - description: '<p>The replacement strategy to use. Only available for fleets of type <code>maintain</code>.</p> <p> <code>launch</code> - Spot Fleet launches a new replacement Spot Instance when a rebalance notification is emitted for an existing Spot Instance in the fleet. Spot Fleet does not terminate the instances that receive a rebalance notification. You can terminate the old instances, or you can leave them running. You are charged for all instances while they are running. </p> <p> <code>launch-before-terminate</code> - Spot Fleet launches a new replacement Spot Instance when a rebalance notification is emitted for an existing Spot Instance in the fleet, and then, after a delay that you specify (in <code>TerminationDelay</code>), terminates the instances that received a rebalance notification.</p>'
        terminationDelay:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: '<p>The amount of time (in seconds) that Amazon EC2 waits before terminating the old Spot Instance after launching a new replacement Spot Instance.</p> <p>Required when <code>ReplacementStrategy</code> is set to <code>launch-before-terminate</code>.</p> <p>Not valid when <code>ReplacementStrategy</code> is set to <code>launch</code>.</p> <p>Valid values: Minimum value of <code>120</code> seconds. Maximum value of <code>7200</code> seconds.</p>'
      description: 'The Spot Instance replacement strategy to use when Amazon EC2 emits a signal that your Spot Instance is at an elevated risk of being interrupted. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-capacity-rebalance.html">Capacity rebalancing</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.'
    SpotInstanceStateFault:
      type: object
      properties:
        code:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The reason code for the Spot Instance state change.
        message:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The message for the Spot Instance state change.
      description: Describes a Spot Instance state change.
    SpotFleetMonitoring:
      type: object
      properties:
        enabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: '<p>Enables monitoring for the instance.</p> <p>Default: <code>false</code> </p>'
      description: Describes whether monitoring is enabled.
    SpotFleetTagSpecificationList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/SpotFleetTagSpecification'
          - xml:
              name: item
    SpotFleetRequestConfig:
      type: object
      properties:
        activityStatus:
          allOf:
            - $ref: '#/components/schemas/ActivityStatus'
            - description: 'The progress of the Spot Fleet request. If there is an error, the status is <code>error</code>. After all requests are placed, the status is <code>pending_fulfillment</code>. If the size of the fleet is equal to or greater than its target capacity, the status is <code>fulfilled</code>. If the size of the fleet is decreased, the status is <code>pending_termination</code> while Spot Instances are terminating.'
        createTime:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: The creation date and time of the request.
        spotFleetRequestConfig:
          allOf:
            - $ref: '#/components/schemas/SpotFleetRequestConfigData'
            - description: The configuration of the Spot Fleet request.
        spotFleetRequestId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Spot Fleet request.
        spotFleetRequestState:
          allOf:
            - $ref: '#/components/schemas/BatchState'
            - description: The state of the Spot Fleet request.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags for a Spot Fleet resource.
      description: Describes a Spot Fleet request.
    SpotFleetTagSpecification:
      type: object
      properties:
        resourceType:
          allOf:
            - $ref: '#/components/schemas/ResourceType'
            - description: 'The type of resource. Currently, the only resource type that is supported is <code>instance</code>. To tag the Spot Fleet request on creation, use the <code>TagSpecifications</code> parameter in <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SpotFleetRequestConfigData.html"> <code>SpotFleetRequestConfigData</code> </a>.'
        tag:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags.
      description: The tags for a Spot Fleet resource.
    SpotInstanceInterruptionBehavior:
      type: string
      enum:
        - hibernate
        - stop
        - terminate
    SpotInstanceState:
      type: string
      enum:
        - open
        - active
        - closed
        - cancelled
        - failed
    SpotInstanceStatus:
      type: object
      properties:
        code:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The status code. For a list of status codes, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-request-status.html#spot-instance-request-status-understand">Spot request status codes</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.'
        message:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The description for the status code.
        updateTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: 'The date and time of the most recent status update, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).'
      description: Describes the status of a Spot Instance request.
    SpotInstanceRequest:
      type: object
      properties:
        actualBlockHourlyPrice:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Deprecated.
        availabilityZoneGroup:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The Availability Zone group. If you specify the same Availability Zone group for all Spot Instance requests, all Spot Instances are launched in the same Availability Zone.'
        blockDurationMinutes:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: Deprecated.
        createTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: 'The date and time when the Spot Instance request was created, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).'
        fault:
          allOf:
            - $ref: '#/components/schemas/SpotInstanceStateFault'
            - description: 'The fault codes for the Spot Instance request, if any.'
        instanceId:
          allOf:
            - $ref: '#/components/schemas/InstanceId'
            - description: 'The instance ID, if an instance has been launched to fulfill the Spot Instance request.'
        launchGroup:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The instance launch group. Launch groups are Spot Instances that launch together and terminate together.
        launchSpecification:
          allOf:
            - $ref: '#/components/schemas/LaunchSpecification'
            - description: Additional information for launching instances.
        launchedAvailabilityZone:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Availability Zone in which the request is launched.
        productDescription:
          allOf:
            - $ref: '#/components/schemas/RIProductDescription'
            - description: The product description associated with the Spot Instance.
        spotInstanceRequestId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Spot Instance request.
        spotPrice:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The maximum price per hour that you are willing to pay for a Spot Instance.
        state:
          allOf:
            - $ref: '#/components/schemas/SpotInstanceState'
            - description: 'The state of the Spot Instance request. Spot request status information helps track your Spot Instance requests. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-request-status.html">Spot request status</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.'
        status:
          allOf:
            - $ref: '#/components/schemas/SpotInstanceStatus'
            - description: The status code and status message describing the Spot Instance request.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: Any tags assigned to the resource.
        type:
          allOf:
            - $ref: '#/components/schemas/SpotInstanceType'
            - description: The Spot Instance request type.
        validFrom:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: 'The start date of the request, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). The request becomes active at this date and time.'
        validUntil:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: '<p>The end date of the request, in UTC format (<i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).</p> <ul> <li> <p>For a persistent request, the request remains active until the <code>validUntil</code> date and time is reached. Otherwise, the request remains active until you cancel it. </p> </li> <li> <p>For a one-time request, the request remains active until all instances launch, the request is canceled, or the <code>validUntil</code> date and time is reached. By default, the request is valid for 7 days from the date the request was created.</p> </li> </ul>'
        instanceInterruptionBehavior:
          allOf:
            - $ref: '#/components/schemas/InstanceInterruptionBehavior'
            - description: The behavior when a Spot Instance is interrupted.
      description: Describes a Spot Instance request.
    SpotOptionsRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The maximum amount per hour for Spot Instances that you're willing to pay.
      description: Describes the configuration of Spot Instances in an EC2 Fleet request.
    SpotPlacementScore:
      type: object
      properties:
        region:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Region.
        availabilityZoneId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Availability Zone.
        score:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The placement score, on a scale from <code>1</code> to <code>10</code>. A score of <code>10</code> indicates that your Spot request is highly likely to succeed in this Region or Availability Zone. A score of <code>1</code> indicates that your Spot request is not likely to succeed. '
      description: The Spot placement score for this Region or Availability Zone. The score is calculated based on the assumption that the <code>capacity-optimized</code> allocation strategy is used and that all of the Availability Zones in the Region can be used.
    SpotPlacementScoresMaxResults:
      type: integer
      minimum: 10
      maximum: 1000
    SpotPlacementScoresTargetCapacity:
      type: integer
      minimum: 1
      maximum: 2000000000
    SpotPrice:
      type: object
      properties:
        availabilityZone:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Availability Zone.
        instanceType:
          allOf:
            - $ref: '#/components/schemas/InstanceType'
            - description: The instance type.
        productDescription:
          allOf:
            - $ref: '#/components/schemas/RIProductDescription'
            - description: A general description of the AMI.
        spotPrice:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The maximum price per hour that you are willing to pay for a Spot Instance.
        timestamp:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: 'The date and time the request was created, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).'
      description: Describes the maximum price per hour that you are willing to pay for a Spot Instance.
    UserIdGroupPairSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/UserIdGroupPair'
          - xml:
              name: item
    StaleIpPermission:
      type: object
      properties:
        fromPort:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The start of the port range for the TCP and UDP protocols, or an ICMP type number. A value of <code>-1</code> indicates all ICMP types. '
        ipProtocol:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The IP protocol name (for <code>tcp</code>, <code>udp</code>, and <code>icmp</code>) or number (see <a href="http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml">Protocol Numbers)</a>.'
        ipRanges:
          allOf:
            - $ref: '#/components/schemas/IpRanges'
            - description: The IP ranges. Not applicable for stale security group rules.
        prefixListIds:
          allOf:
            - $ref: '#/components/schemas/PrefixListIdSet'
            - description: The prefix list IDs. Not applicable for stale security group rules.
        toPort:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The end of the port range for the TCP and UDP protocols, or an ICMP type number. A value of <code>-1</code> indicates all ICMP types. '
        groups:
          allOf:
            - $ref: '#/components/schemas/UserIdGroupPairSet'
            - description: 'The security group pairs. Returns the ID of the referenced security group and VPC, and the ID and status of the VPC peering connection.'
      description: Describes a stale rule in a security group.
    StaleIpPermissionSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/StaleIpPermission'
          - xml:
              name: item
    StaleSecurityGroup:
      type: object
      properties:
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The description of the security group.
        groupId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the security group.
        groupName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the security group.
        staleIpPermissions:
          allOf:
            - $ref: '#/components/schemas/StaleIpPermissionSet'
            - description: Information about the stale inbound rules in the security group.
        staleIpPermissionsEgress:
          allOf:
            - $ref: '#/components/schemas/StaleIpPermissionSet'
            - description: Information about the stale outbound rules in the security group.
        vpcId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the VPC for the security group.
      description: Describes a stale security group (a security group that contains stale rules).
    StartInstancesRequest:
      type: object
      required:
        - InstanceIds
      title: StartInstancesRequest
      properties:
        InstanceId:
          $ref: '#/components/schemas/InstanceIdStringList'
        additionalInfo:
          $ref: '#/components/schemas/String'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    StartNetworkInsightsAccessScopeAnalysisRequest:
      type: object
      required:
        - NetworkInsightsAccessScopeId
        - ClientToken
      title: StartNetworkInsightsAccessScopeAnalysisRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to ensure idempotency</a>.'
    StartNetworkInsightsAnalysisRequest:
      type: object
      required:
        - NetworkInsightsPathId
        - ClientToken
      title: StartNetworkInsightsAnalysisRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/NetworkInsightsPathId'
            - description: The ID of the path.
        FilterInArn:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        TagSpecification:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to ensure idempotency</a>.'
    StartVpcEndpointServicePrivateDnsVerificationRequest:
      type: object
      required:
        - ServiceId
      title: StartVpcEndpointServicePrivateDnsVerificationRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/VpcEndpointServiceId'
            - description: The ID of the endpoint service.
    State:
      type: string
      enum:
        - PendingAcceptance
        - Pending
        - Available
        - Deleting
        - Deleted
        - Rejected
        - Failed
        - Expired
    StaticSourcesSupportValue:
      type: string
      enum:
        - enable
        - disable
    StopInstancesRequest:
      type: object
      required:
        - InstanceIds
      title: StopInstancesRequest
      properties:
        InstanceId:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: '<p>Hibernates the instance if the instance was enabled for hibernation at launch. If the instance cannot hibernate successfully, a normal shutdown occurs. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html">Hibernate your instance</a> in the <i>Amazon EC2 User Guide</i>.</p> <p> Default: <code>false</code> </p>'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
        force:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: '<p>Forces the instances to stop. The instances do not have an opportunity to flush file system caches or file system metadata. If you use this option, you must perform file system check and repair procedures. This option is not recommended for Windows instances.</p> <p>Default: <code>false</code> </p>'
    StorageLocation:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The key.
      description: Describes a storage location in Amazon S3.
    StoreImageTaskResult:
      type: object
      properties:
        amiId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the AMI that is being stored.
        taskStartTime:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: The time the task started.
        bucket:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the Amazon S3 bucket that contains the stored AMI object.
        s3objectKey:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the stored AMI object in the bucket.
        progressPercentage:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The progress of the task as a percentage.
        storeTaskState:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The state of the store task (<code>InProgress</code>, <code>Completed</code>, or <code>Failed</code>).'
        storeTaskFailureReason:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'If the tasks fails, the reason for the failure is returned. If the task succeeds, <code>null</code> is returned.'
      description: 'The information about the AMI store task, including the progress of the task.'
    SubnetState:
      type: string
      enum:
        - pending
        - available
    SubnetIpv6CidrBlockAssociationSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/SubnetIpv6CidrBlockAssociation'
          - xml:
              name: item
    TransitGatewayMulitcastDomainAssociationState:
      type: string
      enum:
        - pendingAcceptance
        - associating
        - associated
        - disassociating
        - disassociated
        - rejected
        - failed
    SubnetAssociation:
      type: object
      properties:
        subnetId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the subnet.
        state:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayMulitcastDomainAssociationState'
            - description: The state of the subnet association.
      description: Describes the subnet association with the transit gateway multicast domain.
    SubnetAssociationList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/SubnetAssociation'
          - xml:
              name: item
    SubnetCidrBlockStateCode:
      type: string
      enum:
        - associating
        - associated
        - disassociating
        - disassociated
        - failing
        - failed
    SubnetCidrBlockState:
      type: object
      properties:
        state:
          allOf:
            - $ref: '#/components/schemas/SubnetCidrBlockStateCode'
            - description: The state of a CIDR block.
        statusMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'A message about the status of the CIDR block, if applicable.'
      description: Describes the state of a CIDR block.
    SubnetCidrReservationId:
      type: string
    SubnetCidrReservationType:
      type: string
      enum:
        - prefix
        - explicit
    SuccessfulInstanceCreditSpecificationItem:
      type: object
      properties:
        instanceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the instance.
      description: Describes the burstable performance instance whose credit option for CPU usage was successfully modified.
    SuccessfulQueuedPurchaseDeletion:
      type: object
      properties:
        reservedInstancesId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Reserved Instance.
      description: Describes a Reserved Instance whose queued purchase was successfully deleted.
    TagDescription:
      type: object
      properties:
        key:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The tag key.
        resourceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the resource.
        resourceType:
          allOf:
            - $ref: '#/components/schemas/ResourceType'
            - description: The resource type.
        value:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The tag value.
      description: Describes a tag.
    TargetCapacitySpecificationRequest:
      type: object
      required:
        - TotalTargetCapacity
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/TargetCapacityUnitType'
            - description: '<p>The unit for the target capacity.</p> <p>Default: <code>units</code> (translates to number of instances)</p>'
      description: '<p>The number of units to request. You can choose to set the target capacity as the number of instances. Or you can set the target capacity to a performance characteristic that is important to your application workload, such as vCPUs, memory, or I/O. If the request type is <code>maintain</code>, you can specify a target capacity of 0 and add capacity later.</p> <p>You can use the On-Demand Instance <code>MaxTotalPrice</code> parameter, the Spot Instance <code>MaxTotalPrice</code> parameter, or both parameters to ensure that your fleet cost does not exceed your budget. If you set a maximum price per hour for the On-Demand Instances and Spot Instances in your request, EC2 Fleet will launch instances until it reaches the maximum amount that you''re willing to pay. When the maximum amount you''re willing to pay is reached, the fleet stops launching instances even if it hasn’t met the target capacity. The <code>MaxTotalPrice</code> parameters are located in <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_OnDemandOptionsRequest">OnDemandOptionsRequest</a> and <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SpotOptionsRequest">SpotOptionsRequest</a>.</p>'
    TargetConfiguration:
      type: object
      properties:
        instanceCount:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of instances the Convertible Reserved Instance offering can be applied to. This parameter is reserved and cannot be specified in a request
        offeringId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Convertible Reserved Instance offering.
      description: Information about the Convertible Reserved Instance offering.
    TargetGroup:
      type: object
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Resource Name (ARN) of the target group.
      description: Describes a load balancer target group.
    TargetGroups:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/TargetGroup'
          - xml:
              name: item
      minItems: 1
      maxItems: 5
    TargetNetwork:
      type: object
      properties:
        associationId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the association.
        vpcId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the VPC in which the target network (subnet) is located.
        targetNetworkId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the subnet specified as the target network.
        clientVpnEndpointId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Client VPN endpoint with which the target network is associated.
        status:
          allOf:
            - $ref: '#/components/schemas/AssociationStatus'
            - description: The current state of the target network association.
        securityGroups:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: The IDs of the security groups applied to the target network association.
      description: Describes a target network associated with a Client VPN endpoint.
    TargetReservationValue:
      type: object
      properties:
        reservationValue:
          allOf:
            - $ref: '#/components/schemas/ReservationValue'
            - description: 'The total value of the Convertible Reserved Instances that make up the exchange. This is the sum of the list value, remaining upfront price, and additional upfront cost of the exchange.'
        targetConfiguration:
          allOf:
            - $ref: '#/components/schemas/TargetConfiguration'
            - description: The configuration of the Convertible Reserved Instances that make up the exchange.
      description: The total value of the new Convertible Reserved Instances.
    TargetStorageTier:
      type: string
      enum:
        - archive
    TelemetryStatus:
      type: string
      enum:
        - UP
        - DOWN
    TerminateClientVpnConnectionsRequest:
      type: object
      required:
        - ClientVpnEndpointId
      title: TerminateClientVpnConnectionsRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    TerminateConnectionStatusSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/TerminateConnectionStatus'
          - xml:
              name: item
    TerminateConnectionStatus:
      type: object
      properties:
        connectionId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the client connection.
        previousStatus:
          allOf:
            - $ref: '#/components/schemas/ClientVpnConnectionStatus'
            - description: The state of the client connection.
        currentStatus:
          allOf:
            - $ref: '#/components/schemas/ClientVpnConnectionStatus'
            - description: 'A message about the status of the client connection, if applicable.'
      description: Information about a terminated Client VPN endpoint client connection.
    TerminateInstancesRequest:
      type: object
      required:
        - InstanceIds
      title: TerminateInstancesRequest
      properties:
        InstanceId:
          allOf:
            - $ref: '#/components/schemas/InstanceIdStringList'
            - description: '<p>The IDs of the instances.</p> <p>Constraints: Up to 1000 instance IDs. We recommend breaking up this request into smaller batches.</p>'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    ThreadsPerCore:
      type: integer
    ThreadsPerCoreList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ThreadsPerCore'
          - xml:
              name: item
    ThroughResourcesStatement:
      type: object
      properties:
        resourceStatement:
          allOf:
            - $ref: '#/components/schemas/ResourceStatement'
            - description: The resource statement.
      description: Describes a through resource statement.
    ThroughResourcesStatementRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/ResourceStatementRequest'
            - description: The resource statement.
      description: Describes a through resource statement.
    TotalLocalStorageGBRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Double'
            - description: 'The maximum amount of total local storage, in GB. To specify no maximum limit, omit this parameter.'
      description: 'The minimum and maximum amount of total local storage, in GB.'
    TrafficDirection:
      type: string
      enum:
        - ingress
        - egress
    TrafficMirrorFilterRuleList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/TrafficMirrorFilterRule'
          - xml:
              name: item
    TrafficMirrorFilterIdList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/TrafficMirrorFilterId'
          - xml:
              name: item
    TrafficMirrorRuleAction:
      type: string
      enum:
        - accept
        - reject
    TrafficMirrorPortRange:
      type: object
      properties:
        fromPort:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The start of the Traffic Mirror port range. This applies to the TCP and UDP protocols.
        toPort:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The end of the Traffic Mirror port range. This applies to the TCP and UDP protocols.
      description: Describes the Traffic Mirror port range.
    TrafficMirrorFilterRuleFieldList:
      type: array
      items:
        $ref: '#/components/schemas/TrafficMirrorFilterRuleField'
    TrafficMirrorFilterRuleId:
      type: string
    TrafficMirrorPortRangeRequest:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The last port in the Traffic Mirror port range. This applies to the TCP and UDP protocols.
      description: Information about the Traffic Mirror filter rule port range.
    TrafficMirrorSessionFieldList:
      type: array
      items:
        $ref: '#/components/schemas/TrafficMirrorSessionField'
    TrafficMirrorSessionIdList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/TrafficMirrorSessionId'
          - xml:
              name: item
    TrafficMirrorTargetType:
      type: string
      enum:
        - network-interface
        - network-load-balancer
        - gateway-load-balancer-endpoint
    TrafficMirrorTargetIdList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/TrafficMirrorTargetId'
          - xml:
              name: item
    TrafficMirroringMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    TransitAssociationGatewayId:
      type: string
    TransitGatewayState:
      type: string
      enum:
        - pending
        - available
        - modifying
        - deleting
        - deleted
    TransitGatewayOptions:
      type: object
      properties:
        amazonSideAsn:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: A private Autonomous System Number (ASN) for the Amazon side of a BGP session. The range is 64512 to 65534 for 16-bit ASNs and 4200000000 to 4294967294 for 32-bit ASNs.
        transitGatewayCidrBlocks:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: The transit gateway CIDR blocks.
        autoAcceptSharedAttachments:
          allOf:
            - $ref: '#/components/schemas/AutoAcceptSharedAttachmentsValue'
            - description: Indicates whether attachment requests are automatically accepted.
        defaultRouteTableAssociation:
          allOf:
            - $ref: '#/components/schemas/DefaultRouteTableAssociationValue'
            - description: Indicates whether resource attachments are automatically associated with the default association route table.
        associationDefaultRouteTableId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the default association route table.
        defaultRouteTablePropagation:
          allOf:
            - $ref: '#/components/schemas/DefaultRouteTablePropagationValue'
            - description: Indicates whether resource attachments automatically propagate routes to the default propagation route table.
        propagationDefaultRouteTableId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the default propagation route table.
        vpnEcmpSupport:
          allOf:
            - $ref: '#/components/schemas/VpnEcmpSupportValue'
            - description: Indicates whether Equal Cost Multipath Protocol support is enabled.
        dnsSupport:
          allOf:
            - $ref: '#/components/schemas/DnsSupportValue'
            - description: Indicates whether DNS support is enabled.
        multicastSupport:
          allOf:
            - $ref: '#/components/schemas/MulticastSupportValue'
            - description: Indicates whether multicast is enabled on the transit gateway
      description: Describes the options for a transit gateway.
    TransitGatewayAttachmentResourceType:
      type: string
      enum:
        - vpc
        - vpn
        - direct-connect-gateway
        - connect
        - peering
        - tgw-peering
    TransitGatewayAssociationState:
      type: string
      enum:
        - associating
        - associated
        - disassociating
        - disassociated
    TransitGatewayAttachmentState:
      type: string
      enum:
        - initiating
        - initiatingRequest
        - pendingAcceptance
        - rollingBack
        - pending
        - available
        - modifying
        - deleting
        - deleted
        - failed
        - rejected
        - rejecting
        - failing
    TransitGatewayAttachmentAssociation:
      type: object
      properties:
        transitGatewayRouteTableId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the route table for the transit gateway.
        state:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayAssociationState'
            - description: The state of the association.
      description: Describes an association.
    TransitGatewayAttachment:
      type: object
      properties:
        transitGatewayAttachmentId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the attachment.
        transitGatewayId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the transit gateway.
        transitGatewayOwnerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Amazon Web Services account that owns the transit gateway.
        resourceOwnerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Amazon Web Services account that owns the resource.
        resourceType:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayAttachmentResourceType'
            - description: The resource type. Note that the <code>tgw-peering</code> resource type has been deprecated.
        resourceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the resource.
        state:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayAttachmentState'
            - description: The attachment state. Note that the <code>initiating</code> state has been deprecated.
        association:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayAttachmentAssociation'
            - description: The association.
        creationTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The creation time.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags for the attachment.
      description: Describes an attachment between a resource and a transit gateway.
    TransitGatewayAttachmentBgpConfiguration:
      type: object
      properties:
        transitGatewayAsn:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: The transit gateway Autonomous System Number (ASN).
        peerAsn:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: The peer Autonomous System Number (ASN).
        transitGatewayAddress:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The interior BGP peer IP address for the transit gateway.
        peerAddress:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The interior BGP peer IP address for the appliance.
        bgpStatus:
          allOf:
            - $ref: '#/components/schemas/BgpStatus'
            - description: The BGP status.
      description: The BGP configuration information.
    TransitGatewayAttachmentBgpConfigurationList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/TransitGatewayAttachmentBgpConfiguration'
          - xml:
              name: item
    TransitGatewayPropagationState:
      type: string
      enum:
        - enabling
        - enabled
        - disabling
        - disabled
    TransitGatewayAttachmentPropagation:
      type: object
      properties:
        transitGatewayRouteTableId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the propagation route table.
        state:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayPropagationState'
            - description: The state of the propagation route table.
      description: Describes a propagation route table.
    TransitGatewayConnectOptions:
      type: object
      properties:
        protocol:
          allOf:
            - $ref: '#/components/schemas/ProtocolValue'
            - description: The tunnel protocol.
      description: Describes the Connect attachment options.
    TransitGatewayConnectPeerState:
      type: string
      enum:
        - pending
        - available
        - deleting
        - deleted
    TransitGatewayConnectPeerConfiguration:
      type: object
      properties:
        transitGatewayAddress:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Connect peer IP address on the transit gateway side of the tunnel.
        peerAddress:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Connect peer IP address on the appliance side of the tunnel.
        insideCidrBlocks:
          allOf:
            - $ref: '#/components/schemas/InsideCidrBlocksStringList'
            - description: The range of interior BGP peer IP addresses.
        protocol:
          allOf:
            - $ref: '#/components/schemas/ProtocolValue'
            - description: The tunnel protocol.
        bgpConfigurations:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayAttachmentBgpConfigurationList'
            - description: The BGP configuration details.
      description: Describes the Connect peer details.
    TransitGatewayConnectRequestBgpOptions:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: The peer Autonomous System Number (ASN).
      description: The BGP options for the Connect attachment.
    TransitGatewayMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    TransitGatewayMulticastDomainOptions:
      type: object
      properties:
        igmpv2Support:
          allOf:
            - $ref: '#/components/schemas/Igmpv2SupportValue'
            - description: Indicates whether Internet Group Management Protocol (IGMP) version 2 is turned on for the transit gateway multicast domain.
        staticSourcesSupport:
          allOf:
            - $ref: '#/components/schemas/StaticSourcesSupportValue'
            - description: Indicates whether support for statically configuring transit gateway multicast group sources is turned on.
        autoAcceptSharedAssociations:
          allOf:
            - $ref: '#/components/schemas/AutoAcceptSharedAssociationsValue'
            - description: Indicates whether to automatically cross-account subnet associations that are associated with the transit gateway multicast domain.
      description: Describes the options for a transit gateway multicast domain.
    TransitGatewayMulticastDomainState:
      type: string
      enum:
        - pending
        - available
        - deleting
        - deleted
    TransitGatewayMulticastDomainAssociation:
      type: object
      properties:
        transitGatewayAttachmentId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the transit gateway attachment.
        resourceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the resource.
        resourceType:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayAttachmentResourceType'
            - description: 'The type of resource, for example a VPC attachment.'
        resourceOwnerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: ' The ID of the Amazon Web Services account that owns the transit gateway multicast domain association resource.'
        subnet:
          allOf:
            - $ref: '#/components/schemas/SubnetAssociation'
            - description: The subnet associated with the transit gateway multicast domain.
      description: Describes the resources associated with the transit gateway multicast domain.
    TransitGatewayMulticastGroup:
      type: object
      properties:
        groupIpAddress:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The IP address assigned to the transit gateway multicast group.
        transitGatewayAttachmentId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the transit gateway attachment.
        subnetId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the subnet.
        resourceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the resource.
        resourceType:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayAttachmentResourceType'
            - description: 'The type of resource, for example a VPC attachment.'
        resourceOwnerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: ' The ID of the Amazon Web Services account that owns the transit gateway multicast domain group resource.'
        networkInterfaceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the transit gateway attachment.
        groupMember:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates that the resource is a transit gateway multicast group member.
        groupSource:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates that the resource is a transit gateway multicast group member.
        memberType:
          allOf:
            - $ref: '#/components/schemas/MembershipType'
            - description: 'The member type (for example, <code>static</code>).'
        sourceType:
          allOf:
            - $ref: '#/components/schemas/MembershipType'
            - description: The source type.
      description: Describes the transit gateway multicast group resources.
    TransitGatewayNetworkInterfaceIdList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/NetworkInterfaceId'
          - xml:
              name: item
    VpnEcmpSupportValue:
      type: string
      enum:
        - enable
        - disable
    TransitGatewayPrefixListAttachment:
      type: object
      properties:
        transitGatewayAttachmentId:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayAttachmentId'
            - description: The ID of the attachment.
        resourceType:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayAttachmentResourceType'
            - description: The resource type. Note that the <code>tgw-peering</code> resource type has been deprecated.
        resourceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the resource.
      description: Describes a transit gateway prefix list attachment.
    TransitGatewayPrefixListReferenceState:
      type: string
      enum:
        - pending
        - available
        - modifying
        - deleting
    TransitGatewayRouteAttachmentList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/TransitGatewayRouteAttachment'
          - xml:
              name: item
    TransitGatewayRouteType:
      type: string
      enum:
        - static
        - propagated
    TransitGatewayRouteState:
      type: string
      enum:
        - pending
        - active
        - blackhole
        - deleting
        - deleted
    TransitGatewayRouteAttachment:
      type: object
      properties:
        resourceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the resource.
        transitGatewayAttachmentId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the attachment.
        resourceType:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayAttachmentResourceType'
            - description: 'The resource type. Note that the <code>tgw-peering</code> resource type has been deprecated. '
      description: Describes a route attachment.
    TransitGatewayRouteTableState:
      type: string
      enum:
        - pending
        - available
        - deleting
        - deleted
    TransitGatewayRouteTableAssociation:
      type: object
      properties:
        transitGatewayAttachmentId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the attachment.
        resourceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the resource.
        resourceType:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayAttachmentResourceType'
            - description: The resource type. Note that the <code>tgw-peering</code> resource type has been deprecated.
        state:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayAssociationState'
            - description: The state of the association.
      description: Describes an association between a route table and a resource attachment.
    TransitGatewayRouteTablePropagation:
      type: object
      properties:
        transitGatewayAttachmentId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the attachment.
        resourceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the resource.
        resourceType:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayAttachmentResourceType'
            - description: The type of resource. Note that the <code>tgw-peering</code> resource type has been deprecated.
        state:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayPropagationState'
            - description: The state of the resource.
      description: Describes a route table propagation.
    TransitGatewaySubnetIdList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/SubnetId'
          - xml:
              name: item
    TransitGatewayVpcAttachmentOptions:
      type: object
      properties:
        dnsSupport:
          allOf:
            - $ref: '#/components/schemas/DnsSupportValue'
            - description: Indicates whether DNS support is enabled.
        ipv6Support:
          allOf:
            - $ref: '#/components/schemas/Ipv6SupportValue'
            - description: Indicates whether IPv6 support is disabled.
        applianceModeSupport:
          allOf:
            - $ref: '#/components/schemas/ApplianceModeSupportValue'
            - description: Indicates whether appliance mode support is enabled.
      description: Describes the VPC attachment options.
    TrunkInterfaceAssociationIdList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/TrunkInterfaceAssociationId'
          - xml:
              name: item
    TunnelInsideIpVersion:
      type: string
      enum:
        - ipv4
        - ipv6
    TunnelOption:
      type: object
      properties:
        outsideIpAddress:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The external IP address of the VPN tunnel.
        tunnelInsideCidr:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The range of inside IPv4 addresses for the tunnel.
        tunnelInsideIpv6Cidr:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The range of inside IPv6 addresses for the tunnel.
        preSharedKey:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The pre-shared key (PSK) to establish initial authentication between the virtual private gateway and the customer gateway.
        phase1LifetimeSeconds:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The lifetime for phase 1 of the IKE negotiation, in seconds.'
        phase2LifetimeSeconds:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The lifetime for phase 2 of the IKE negotiation, in seconds.'
        rekeyMarginTimeSeconds:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The margin time, in seconds, before the phase 2 lifetime expires, during which the Amazon Web Services side of the VPN connection performs an IKE rekey.'
        rekeyFuzzPercentage:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The percentage of the rekey window determined by <code>RekeyMarginTimeSeconds</code> during which the rekey time is randomly selected.
        replayWindowSize:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of packets in an IKE replay window.
        dpdTimeoutSeconds:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of seconds after which a DPD timeout occurs.
        dpdTimeoutAction:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The action to take after a DPD timeout occurs.
        phase1EncryptionAlgorithmSet:
          allOf:
            - $ref: '#/components/schemas/Phase1EncryptionAlgorithmsList'
            - description: The permitted encryption algorithms for the VPN tunnel for phase 1 IKE negotiations.
        phase2EncryptionAlgorithmSet:
          allOf:
            - $ref: '#/components/schemas/Phase2EncryptionAlgorithmsList'
            - description: The permitted encryption algorithms for the VPN tunnel for phase 2 IKE negotiations.
        phase1IntegrityAlgorithmSet:
          allOf:
            - $ref: '#/components/schemas/Phase1IntegrityAlgorithmsList'
            - description: The permitted integrity algorithms for the VPN tunnel for phase 1 IKE negotiations.
        phase2IntegrityAlgorithmSet:
          allOf:
            - $ref: '#/components/schemas/Phase2IntegrityAlgorithmsList'
            - description: The permitted integrity algorithms for the VPN tunnel for phase 2 IKE negotiations.
        phase1DHGroupNumberSet:
          allOf:
            - $ref: '#/components/schemas/Phase1DHGroupNumbersList'
            - description: The permitted Diffie-Hellman group numbers for the VPN tunnel for phase 1 IKE negotiations.
        phase2DHGroupNumberSet:
          allOf:
            - $ref: '#/components/schemas/Phase2DHGroupNumbersList'
            - description: The permitted Diffie-Hellman group numbers for the VPN tunnel for phase 2 IKE negotiations.
        ikeVersionSet:
          allOf:
            - $ref: '#/components/schemas/IKEVersionsList'
            - description: The IKE versions that are permitted for the VPN tunnel.
        startupAction:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The action to take when the establishing the VPN tunnels for a VPN connection.
      description: The VPN tunnel options.
    TunnelOptionsList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/TunnelOption'
          - xml:
              name: item
    UnassignIpv6AddressesRequest:
      type: object
      required:
        - NetworkInterfaceId
      title: UnassignIpv6AddressesRequest
      properties:
        ipv6Addresses:
          allOf:
            - $ref: '#/components/schemas/Ipv6AddressList'
            - description: The IPv6 addresses to unassign from the network interface.
        Ipv6Prefix:
          allOf:
            - $ref: '#/components/schemas/IpPrefixList'
            - description: One or more IPv6 prefixes to unassign from the network interface.
        networkInterfaceId:
          allOf:
            - $ref: '#/components/schemas/NetworkInterfaceId'
            - description: The ID of the network interface.
    UnassignPrivateIpAddressesRequest:
      type: object
      required:
        - NetworkInterfaceId
      title: UnassignPrivateIpAddressesRequest
      properties:
        networkInterfaceId:
          allOf:
            - $ref: '#/components/schemas/NetworkInterfaceId'
            - description: The ID of the network interface.
        privateIpAddress:
          allOf:
            - $ref: '#/components/schemas/PrivateIpAddressStringList'
            - description: The secondary private IP addresses to unassign from the network interface. You can specify this option multiple times to unassign more than one IP address.
        Ipv4Prefix:
          allOf:
            - $ref: '#/components/schemas/IpPrefixList'
            - description: The IPv4 prefixes to unassign from the network interface.
      description: Contains the parameters for UnassignPrivateIpAddresses.
    UnmonitorInstancesRequest:
      type: object
      required:
        - InstanceIds
      title: UnmonitorInstancesRequest
      properties:
        InstanceId:
          allOf:
            - $ref: '#/components/schemas/InstanceIdStringList'
            - description: The IDs of the instances.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    UnsuccessfulInstanceCreditSpecificationErrorCode:
      type: string
      enum:
        - InvalidInstanceID.Malformed
        - InvalidInstanceID.NotFound
        - IncorrectInstanceState
        - InstanceCreditSpecification.NotSupported
    UnsuccessfulInstanceCreditSpecificationItemError:
      type: object
      properties:
        code:
          allOf:
            - $ref: '#/components/schemas/UnsuccessfulInstanceCreditSpecificationErrorCode'
            - description: The error code.
        message:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The applicable error message.
      description: Information about the error for the burstable performance instance whose credit option for CPU usage was not modified.
    UnsuccessfulInstanceCreditSpecificationItem:
      type: object
      properties:
        instanceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the instance.
        error:
          allOf:
            - $ref: '#/components/schemas/UnsuccessfulInstanceCreditSpecificationItemError'
            - description: The applicable error for the burstable performance instance whose credit option for CPU usage was not modified.
      description: Describes the burstable performance instance whose credit option for CPU usage was not modified.
    UnsuccessfulItemError:
      type: object
      properties:
        code:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The error code.
        message:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The error message accompanying the error code.
      description: 'Information about the error that occurred. For more information about errors, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/errors-overview.html">Error codes</a>.'
    UnsuccessfulItem:
      type: object
      properties:
        error:
          allOf:
            - $ref: '#/components/schemas/UnsuccessfulItemError'
            - description: Information about the error.
        resourceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the resource.
      description: Information about items that were not successfully processed in a batch call.
    UpdateSecurityGroupRuleDescriptionsEgressRequest:
      type: object
      title: UpdateSecurityGroupRuleDescriptionsEgressRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/IpPermissionList'
            - description: The IP permissions for the security group rule. You must specify either the IP permissions or the description.
        SecurityGroupRuleDescription:
          allOf:
            - $ref: '#/components/schemas/SecurityGroupRuleDescriptionList'
            - description: The description for the egress security group rules. You must specify either the description or the IP permissions.
    UpdateSecurityGroupRuleDescriptionsIngressRequest:
      type: object
      title: UpdateSecurityGroupRuleDescriptionsIngressRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/IpPermissionList'
            - description: The IP permissions for the security group rule. You must specify either IP permissions or a description.
        SecurityGroupRuleDescription:
          allOf:
            - $ref: '#/components/schemas/SecurityGroupRuleDescriptionList'
            - description: '[VPC only] The description for the ingress security group rules. You must specify either a description or IP permissions.'
    UsageClassType:
      type: string
      enum:
        - spot
        - on-demand
    UserIdGroupPair:
      type: object
      properties:
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>A description for the security group rule that references this user ID group pair.</p> <p>Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*</p>'
        groupId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the security group.
        groupName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The name of the security group. In a request, use this parameter for a security group in EC2-Classic or a default VPC only. For a security group in a nondefault VPC, use the security group ID. </p> <p>For a referenced security group in another VPC, this value is not returned if the referenced security group is deleted.</p>'
        peeringStatus:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The status of a VPC peering connection, if applicable.'
        userId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The ID of an Amazon Web Services account.</p> <p>For a referenced security group in another VPC, the account ID of the referenced security group is returned in the response. If the referenced security group is deleted, this value is not returned.</p> <p>[EC2-Classic] Required when adding or removing rules that reference a security group in another Amazon Web Services account.</p>'
        vpcId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The ID of the VPC for the referenced security group, if applicable.'
        vpcPeeringConnectionId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The ID of the VPC peering connection, if applicable.'
      description: Describes a security group and Amazon Web Services account ID pair.
    VCpuCount:
      type: integer
    VCpuCountRangeRequest:
      type: object
      required:
        - Min
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The maximum number of vCPUs. To specify no maximum limit, omit this parameter.'
      description: The minimum and maximum number of vCPUs.
    VgwTelemetry:
      type: object
      properties:
        acceptedRouteCount:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of accepted routes.
        lastStatusChange:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The date and time of the last change in status.
        outsideIpAddress:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Internet-routable IP address of the virtual private gateway's outside interface.
        status:
          allOf:
            - $ref: '#/components/schemas/TelemetryStatus'
            - description: The status of the VPN tunnel.
        statusMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'If an error occurs, a description of the error.'
        certificateArn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Resource Name (ARN) of the VPN tunnel endpoint certificate.
      description: Describes telemetry for a VPN tunnel.
    VgwTelemetryList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/VgwTelemetry'
          - xml:
              name: item
    VirtualizationTypeSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/VirtualizationType'
          - xml:
              name: item
      minItems: 0
      maxItems: 2
    VolumeAttachmentList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/VolumeAttachment'
          - xml:
              name: item
    VolumeState:
      type: string
      enum:
        - creating
        - available
        - in-use
        - deleting
        - deleted
        - error
    VolumeAttachmentState:
      type: string
      enum:
        - attaching
        - attached
        - detaching
        - detached
        - busy
    VolumeAttributeName:
      type: string
      enum:
        - autoEnableIO
        - productCodes
    VolumeModificationState:
      type: string
      enum:
        - modifying
        - optimizing
        - completed
        - failed
    VolumeStatusAction:
      type: object
      properties:
        code:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The code identifying the operation, for example, <code>enable-volume-io</code>.'
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A description of the operation.
        eventId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the event associated with this operation.
        eventType:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The event type associated with this operation.
      description: Describes a volume status operation code.
    VolumeStatusActionsList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/VolumeStatusAction'
          - xml:
              name: item
    VolumeStatusAttachmentStatus:
      type: object
      properties:
        ioPerformance:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The maximum IOPS supported by the attached instance.
        instanceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the attached instance.
      description: Information about the instances to which the volume is attached.
    VolumeStatusAttachmentStatusList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/VolumeStatusAttachmentStatus'
          - xml:
              name: item
    VolumeStatusName:
      type: string
      enum:
        - io-enabled
        - io-performance
    VolumeStatusDetails:
      type: object
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/VolumeStatusName'
            - description: The name of the volume status.
        status:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The intended status of the volume status.
      description: Describes a volume status.
    VolumeStatusDetailsList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/VolumeStatusDetails'
          - xml:
              name: item
    VolumeStatusEvent:
      type: object
      properties:
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A description of the event.
        eventId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of this event.
        eventType:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The type of this event.
        notAfter:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: The latest end time of the event.
        notBefore:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: The earliest start time of the event.
        instanceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the instance associated with the event.
      description: Describes a volume status event.
    VolumeStatusEventsList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/VolumeStatusEvent'
          - xml:
              name: item
    VolumeStatusInfoStatus:
      type: string
      enum:
        - ok
        - impaired
        - insufficient-data
    VolumeStatusInfo:
      type: object
      properties:
        details:
          allOf:
            - $ref: '#/components/schemas/VolumeStatusDetailsList'
            - description: The details of the volume status.
        status:
          allOf:
            - $ref: '#/components/schemas/VolumeStatusInfoStatus'
            - description: The status of the volume.
      description: Describes the status of a volume.
    VolumeStatusItem:
      type: object
      properties:
        actionsSet:
          allOf:
            - $ref: '#/components/schemas/VolumeStatusActionsList'
            - description: The details of the operation.
        availabilityZone:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Availability Zone of the volume.
        outpostArn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Resource Name (ARN) of the Outpost.
        eventsSet:
          allOf:
            - $ref: '#/components/schemas/VolumeStatusEventsList'
            - description: A list of events associated with the volume.
        volumeId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The volume ID.
        volumeStatus:
          allOf:
            - $ref: '#/components/schemas/VolumeStatusInfo'
            - description: The volume status.
        attachmentStatuses:
          allOf:
            - $ref: '#/components/schemas/VolumeStatusAttachmentStatusList'
            - description: Information about the instances to which the volume is attached.
      description: Describes the volume status.
    VpcState:
      type: string
      enum:
        - pending
        - available
    VpcIpv6CidrBlockAssociationSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/VpcIpv6CidrBlockAssociation'
          - xml:
              name: item
    VpcCidrBlockAssociationSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/VpcCidrBlockAssociation'
          - xml:
              name: item
    VpcAttachmentList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/VpcAttachment'
          - xml:
              name: item
    VpcAttributeName:
      type: string
      enum:
        - enableDnsSupport
        - enableDnsHostnames
    VpcCidrBlockState:
      type: object
      properties:
        state:
          allOf:
            - $ref: '#/components/schemas/VpcCidrBlockStateCode'
            - description: The state of the CIDR block.
        statusMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'A message about the status of the CIDR block, if applicable.'
      description: Describes the state of a CIDR block.
    VpcCidrBlockStateCode:
      type: string
      enum:
        - associating
        - associated
        - disassociating
        - disassociated
        - failing
        - failed
    VpcClassicLink:
      type: object
      properties:
        classicLinkEnabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the VPC is enabled for ClassicLink.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: Any tags assigned to the VPC.
        vpcId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the VPC.
      description: Describes whether a VPC is enabled for ClassicLink.
    VpcEndpointType:
      type: string
      enum:
        - Interface
        - Gateway
        - GatewayLoadBalancer
    VpcEndpointConnection:
      type: object
      properties:
        serviceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the service to which the endpoint is connected.
        vpcEndpointId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the VPC endpoint.
        vpcEndpointOwner:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Amazon Web Services account that owns the VPC endpoint.
        vpcEndpointState:
          allOf:
            - $ref: '#/components/schemas/State'
            - description: The state of the VPC endpoint.
        creationTimestamp:
          allOf:
            - $ref: '#/components/schemas/MillisecondDateTime'
            - description: The date and time that the VPC endpoint was created.
        dnsEntrySet:
          allOf:
            - $ref: '#/components/schemas/DnsEntrySet'
            - description: The DNS entries for the VPC endpoint.
        networkLoadBalancerArnSet:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: The Amazon Resource Names (ARNs) of the network load balancers for the service.
        gatewayLoadBalancerArnSet:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: The Amazon Resource Names (ARNs) of the Gateway Load Balancers for the service.
        ipAddressType:
          allOf:
            - $ref: '#/components/schemas/IpAddressType'
            - description: The IP address type for the endpoint.
      description: Describes a VPC endpoint connection to a service.
    VpcPeeringConnectionVpcInfo:
      type: object
      properties:
        cidrBlock:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The IPv4 CIDR block for the VPC.
        ipv6CidrBlockSet:
          allOf:
            - $ref: '#/components/schemas/Ipv6CidrBlockSet'
            - description: The IPv6 CIDR block for the VPC.
        cidrBlockSet:
          allOf:
            - $ref: '#/components/schemas/CidrBlockSet'
            - description: Information about the IPv4 CIDR blocks for the VPC.
        ownerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Amazon Web Services account that owns the VPC.
        peeringOptions:
          allOf:
            - $ref: '#/components/schemas/VpcPeeringConnectionOptionsDescription'
            - description: Information about the VPC peering connection options for the accepter or requester VPC.
        vpcId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the VPC.
        region:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Region in which the VPC is located.
      description: Describes a VPC in a VPC peering connection.
    VpcPeeringConnectionStateReason:
      type: object
      properties:
        code:
          allOf:
            - $ref: '#/components/schemas/VpcPeeringConnectionStateReasonCode'
            - description: The status of the VPC peering connection.
        message:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'A message that provides more information about the status, if applicable.'
      description: Describes the status of a VPC peering connection.
    VpcPeeringConnectionIdList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/VpcPeeringConnectionId'
          - xml:
              name: item
    VpcPeeringConnectionOptionsDescription:
      type: object
      properties:
        allowDnsResolutionFromRemoteVpc:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether a local VPC can resolve public DNS hostnames to private IP addresses when queried from instances in a peer VPC.
        allowEgressFromLocalClassicLinkToRemoteVpc:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether a local ClassicLink connection can communicate with the peer VPC over the VPC peering connection.
        allowEgressFromLocalVpcToRemoteClassicLink:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether a local VPC can communicate with a ClassicLink connection in the peer VPC over the VPC peering connection.
      description: Describes the VPC peering connection options.
    VpcPeeringConnectionStateReasonCode:
      type: string
      enum:
        - initiating-request
        - pending-acceptance
        - active
        - deleted
        - rejected
        - failed
        - expired
        - provisioning
        - deleting
    VpcTenancy:
      type: string
      enum:
        - default
    VpnState:
      type: string
      enum:
        - pending
        - available
        - deleting
        - deleted
    VpnConnectionOptions:
      type: object
      properties:
        enableAcceleration:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether acceleration is enabled for the VPN connection.
        staticRoutesOnly:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the VPN connection uses static routes only. Static routes must be used for devices that don't support BGP.
        localIpv4NetworkCidr:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The IPv4 CIDR on the customer gateway (on-premises) side of the VPN connection.
        remoteIpv4NetworkCidr:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The IPv4 CIDR on the Amazon Web Services side of the VPN connection.
        localIpv6NetworkCidr:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The IPv6 CIDR on the customer gateway (on-premises) side of the VPN connection.
        remoteIpv6NetworkCidr:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The IPv6 CIDR on the Amazon Web Services side of the VPN connection.
        tunnelInsideIpVersion:
          allOf:
            - $ref: '#/components/schemas/TunnelInsideIpVersion'
            - description: Indicates whether the VPN tunnels process IPv4 or IPv6 traffic.
        tunnelOptionSet:
          allOf:
            - $ref: '#/components/schemas/TunnelOptionsList'
            - description: Indicates the VPN tunnel options.
      description: Describes VPN connection options.
    VpnStaticRouteList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/VpnStaticRoute'
          - xml:
              name: item
    VpnConnectionDeviceType:
      type: object
      properties:
        vpnConnectionDeviceTypeId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Customer gateway device identifier.
        vendor:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Customer gateway device vendor.
        platform:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Customer gateway device platform.
        software:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Customer gateway device software version.
      description: 'List of customer gateway devices that have a sample configuration file available for use. You can also see the list of device types with sample configuration files available under <a href="https://docs.aws.amazon.com/vpn/latest/s2svpn/your-cgw.html">Your customer gateway device</a> in the <i>Amazon Web Services Site-to-Site VPN User Guide</i>.'
    VpnConnectionDeviceTypeId:
      type: string
    VpnStaticRouteSource:
      type: string
      enum:
        - Static
    VpnStaticRoute:
      type: object
      properties:
        destinationCidrBlock:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The CIDR block associated with the local subnet of the customer data center.
        source:
          allOf:
            - $ref: '#/components/schemas/VpnStaticRouteSource'
            - description: Indicates how the routes were provided.
        state:
          allOf:
            - $ref: '#/components/schemas/VpnState'
            - description: The current state of the static route.
      description: Describes a static route for a VPN connection.
    VpnTunnelOptionsSpecification:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The action to take after DPD timeout occurs. Specify <code>restart</code> to restart the IKE initiation. Specify <code>clear</code> to end the IKE session.</p> <p>Valid Values: <code>clear</code> | <code>none</code> | <code>restart</code> </p> <p>Default: <code>clear</code> </p>'
        Phase1EncryptionAlgorithm:
          allOf:
            - $ref: '#/components/schemas/Phase1EncryptionAlgorithmsRequestList'
            - description: '<p>One or more encryption algorithms that are permitted for the VPN tunnel for phase 1 IKE negotiations.</p> <p>Valid values: <code>AES128</code> | <code>AES256</code> | <code>AES128-GCM-16</code> | <code>AES256-GCM-16</code> </p>'
        Phase2EncryptionAlgorithm:
          allOf:
            - $ref: '#/components/schemas/Phase2EncryptionAlgorithmsRequestList'
            - description: '<p>One or more encryption algorithms that are permitted for the VPN tunnel for phase 2 IKE negotiations.</p> <p>Valid values: <code>AES128</code> | <code>AES256</code> | <code>AES128-GCM-16</code> | <code>AES256-GCM-16</code> </p>'
        Phase1IntegrityAlgorithm:
          allOf:
            - $ref: '#/components/schemas/Phase1IntegrityAlgorithmsRequestList'
            - description: '<p>One or more integrity algorithms that are permitted for the VPN tunnel for phase 1 IKE negotiations.</p> <p>Valid values: <code>SHA1</code> | <code>SHA2-256</code> | <code>SHA2-384</code> | <code>SHA2-512</code> </p>'
        Phase2IntegrityAlgorithm:
          allOf:
            - $ref: '#/components/schemas/Phase2IntegrityAlgorithmsRequestList'
            - description: '<p>One or more integrity algorithms that are permitted for the VPN tunnel for phase 2 IKE negotiations.</p> <p>Valid values: <code>SHA1</code> | <code>SHA2-256</code> | <code>SHA2-384</code> | <code>SHA2-512</code> </p>'
        Phase1DHGroupNumber:
          allOf:
            - $ref: '#/components/schemas/Phase1DHGroupNumbersRequestList'
            - description: '<p>One or more Diffie-Hellman group numbers that are permitted for the VPN tunnel for phase 1 IKE negotiations.</p> <p>Valid values: <code>2</code> | <code>14</code> | <code>15</code> | <code>16</code> | <code>17</code> | <code>18</code> | <code>19</code> | <code>20</code> | <code>21</code> | <code>22</code> | <code>23</code> | <code>24</code> </p>'
        Phase2DHGroupNumber:
          allOf:
            - $ref: '#/components/schemas/Phase2DHGroupNumbersRequestList'
            - description: '<p>One or more Diffie-Hellman group numbers that are permitted for the VPN tunnel for phase 2 IKE negotiations.</p> <p>Valid values: <code>2</code> | <code>5</code> | <code>14</code> | <code>15</code> | <code>16</code> | <code>17</code> | <code>18</code> | <code>19</code> | <code>20</code> | <code>21</code> | <code>22</code> | <code>23</code> | <code>24</code> </p>'
        IKEVersion:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The action to take when the establishing the tunnel for the VPN connection. By default, your customer gateway device must initiate the IKE negotiation and bring up the tunnel. Specify <code>start</code> for Amazon Web Services to initiate the IKE negotiation.</p> <p>Valid Values: <code>add</code> | <code>start</code> </p> <p>Default: <code>add</code> </p>'
      description: The tunnel options for a single VPN tunnel.
    VpnTunnelOptionsSpecificationsList:
      type: array
      items:
        $ref: '#/components/schemas/VpnTunnelOptionsSpecification'
    WithdrawByoipCidrRequest:
      type: object
      required:
        - Cidr
      title: WithdrawByoipCidrRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
    ZoneIdStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: ZoneId
security:
  - hmac: []
x-stackQL-config:
  queryParamTranspose:
    algorithm: AWSCanonical
  requestTranslate:
    algorithm: get_query_to_post_form_utf_8
