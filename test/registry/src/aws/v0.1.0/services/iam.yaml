components:
  parameters:
    X-Amz-Algorithm:
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
    X-Amz-Content-Sha256:
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
    X-Amz-Credential:
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
    X-Amz-Date:
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
    X-Amz-Signature:
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
  schemas:
    AccessAdvisorUsageGranularityType:
      enum:
      - SERVICE_LEVEL
      - ACTION_LEVEL
      type: string
    AccessDetail:
      description: <p>An object that contains details about when a principal in the
        reported Organizations entity last attempted to access an Amazon Web Services
        service. A principal can be an IAM user, an IAM role, or the Amazon Web Services
        account root user within the reported Organizations entity.</p> <p>This data
        type is a response element in the <a>GetOrganizationsAccessReport</a> operation.</p>
      properties:
        EntityPath:
          allOf:
          - $ref: '#/components/schemas/organizationsEntityPathType'
          - description: <p>The path of the Organizations entity (root, organizational
              unit, or account) from which an authenticated principal last attempted
              to access the service. Amazon Web Services does not report unauthenticated
              requests.</p> <p>This field is null if no principals (IAM users, IAM
              roles, or root users) in the reported Organizations entity attempted
              to access the service within the <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#service-last-accessed-reporting-period">reporting
              period</a>.</p>
        LastAuthenticatedTime:
          allOf:
          - $ref: '#/components/schemas/dateType'
          - description: "<p>The date and time, in\_<a href=\"http://www.iso.org/iso/iso8601\"\
              >ISO 8601 date-time format</a>, when an authenticated principal most\
              \ recently attempted to access the service. Amazon Web Services does\
              \ not report unauthenticated requests.</p> <p>This field is null if\
              \ no principals in the reported Organizations entity attempted to access\
              \ the service within the <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#service-last-accessed-reporting-period\"\
              >reporting period</a>.</p>"
        Region:
          allOf:
          - $ref: '#/components/schemas/stringType'
          - description: <p>The Region where the last service access attempt occurred.</p>
              <p>This field is null if no principals in the reported Organizations
              entity attempted to access the service within the <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#service-last-accessed-reporting-period">reporting
              period</a>.</p>
        ServiceName:
          allOf:
          - $ref: '#/components/schemas/serviceNameType'
          - description: The name of the service in which access was attempted.
        ServiceNamespace:
          allOf:
          - $ref: '#/components/schemas/serviceNamespaceType'
          - description: "<p>The namespace of the service in which access was attempted.</p>\
              \ <p>To learn the service namespace of a service, see <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/reference_policies_actions-resources-contextkeys.html\"\
              >Actions, resources, and condition keys for Amazon Web Services services</a>\
              \ in the <i>Service Authorization Reference</i>. Choose the name of\
              \ the service to view details for that service. In the first paragraph,\
              \ find the service prefix. For example, <code>(service prefix: a4b)</code>.\
              \ For more information about service namespaces, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#genref-aws-service-namespaces\"\
              >Amazon Web Services service namespaces</a> in the\_<i>Amazon Web Services\
              \ General Reference</i>.</p>"
        TotalAuthenticatedEntities:
          allOf:
          - $ref: '#/components/schemas/integerType'
          - description: The number of accounts with authenticated principals (root
              users, IAM users, and IAM roles) that attempted to access the service
              in the reporting period.
      required:
      - ServiceName
      - ServiceNamespace
      type: object
    AccessDetails:
      items:
        $ref: '#/components/schemas/AccessDetail'
      type: array
    AccessKey:
      description: <p>Contains information about an Amazon Web Services access key.</p>
        <p> This data type is used as a response element in the <a>CreateAccessKey</a>
        and <a>ListAccessKeys</a> operations. </p> <note> <p>The <code>SecretAccessKey</code>
        value is returned only in response to <a>CreateAccessKey</a>. You can get
        a secret access key only when you first create an access key; you cannot recover
        the secret access key later. If you lose a secret access key, you must create
        a new access key.</p> </note>
      properties:
        AccessKeyId:
          allOf:
          - $ref: '#/components/schemas/accessKeyIdType'
          - description: The ID for this access key.
        CreateDate:
          allOf:
          - $ref: '#/components/schemas/dateType'
          - description: The date when the access key was created.
        SecretAccessKey:
          allOf:
          - $ref: '#/components/schemas/accessKeySecretType'
          - description: The secret key used to sign requests.
        Status:
          allOf:
          - $ref: '#/components/schemas/statusType'
          - description: 'The status of the access key. <code>Active</code> means
              that the key is valid for API calls, while <code>Inactive</code> means
              it is not. '
        UserName:
          allOf:
          - $ref: '#/components/schemas/userNameType'
          - description: The name of the IAM user that the access key is associated
              with.
      required:
      - UserName
      - AccessKeyId
      - Status
      - SecretAccessKey
      type: object
    AccessKeyLastUsed:
      description: <p>Contains information about the last time an Amazon Web Services
        access key was used since IAM began tracking this information on April 22,
        2015.</p> <p>This data type is used as a response element in the <a>GetAccessKeyLastUsed</a>
        operation.</p>
      properties:
        LastUsedDate:
          allOf:
          - $ref: '#/components/schemas/dateType'
          - description: <p>The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO
              8601 date-time format</a>, when the access key was most recently used.
              This field is null in the following situations:</p> <ul> <li> <p>The
              user does not have an access key.</p> </li> <li> <p>An access key exists
              but has not been used since IAM began tracking this information.</p>
              </li> <li> <p>There is no sign-in data associated with the user.</p>
              </li> </ul>
        Region:
          allOf:
          - $ref: '#/components/schemas/stringType'
          - description: <p>The Amazon Web Services Region where this access key was
              most recently used. The value for this field is "N/A" in the following
              situations:</p> <ul> <li> <p>The user does not have an access key.</p>
              </li> <li> <p>An access key exists but has not been used since IAM began
              tracking this information.</p> </li> <li> <p>There is no sign-in data
              associated with the user.</p> </li> </ul> <p>For more information about
              Amazon Web Services Regions, see <a href="https://docs.aws.amazon.com/general/latest/gr/rande.html">Regions
              and endpoints</a> in the Amazon Web Services General Reference.</p>
        ServiceName:
          allOf:
          - $ref: '#/components/schemas/stringType'
          - description: <p>The name of the Amazon Web Services service with which
              this access key was most recently used. The value of this field is "N/A"
              in the following situations:</p> <ul> <li> <p>The user does not have
              an access key.</p> </li> <li> <p>An access key exists but has not been
              used since IAM started tracking this information.</p> </li> <li> <p>There
              is no sign-in data associated with the user.</p> </li> </ul>
      required:
      - LastUsedDate
      - ServiceName
      - Region
      type: object
    AccessKeyMetadata:
      description: <p>Contains information about an Amazon Web Services access key,
        without its secret key.</p> <p>This data type is used as a response element
        in the <a>ListAccessKeys</a> operation.</p>
      properties:
        AccessKeyId:
          allOf:
          - $ref: '#/components/schemas/accessKeyIdType'
          - description: The ID for this access key.
        CreateDate:
          allOf:
          - $ref: '#/components/schemas/dateType'
          - description: The date when the access key was created.
        Status:
          allOf:
          - $ref: '#/components/schemas/statusType'
          - description: The status of the access key. <code>Active</code> means that
              the key is valid for API calls; <code>Inactive</code> means it is not.
        UserName:
          allOf:
          - $ref: '#/components/schemas/userNameType'
          - description: The name of the IAM user that the key is associated with.
      type: object
    ActionNameListType:
      items:
        $ref: '#/components/schemas/ActionNameType'
      type: array
    ActionNameType:
      maxLength: 128
      minLength: 3
      type: string
    AddClientIDToOpenIDConnectProviderRequest:
      properties:
        ClientID:
          allOf:
          - $ref: '#/components/schemas/clientIDType'
          - description: The client ID (also known as audience) to add to the IAM
              OpenID Connect provider resource.
        OpenIDConnectProviderArn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: The Amazon Resource Name (ARN) of the IAM OpenID Connect
              (OIDC) provider resource to add the client ID to. You can get a list
              of OIDC provider ARNs by using the <a>ListOpenIDConnectProviders</a>
              operation.
      required:
      - OpenIDConnectProviderArn
      - ClientID
      title: AddClientIDToOpenIDConnectProviderRequest
      type: object
    AddRoleToInstanceProfileRequest:
      properties:
        InstanceProfileName:
          allOf:
          - $ref: '#/components/schemas/instanceProfileNameType'
          - description: '<p>The name of the instance profile to update.</p> <p>This
              parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
        RoleName:
          allOf:
          - $ref: '#/components/schemas/roleNameType'
          - description: '<p>The name of the role to add.</p> <p>This parameter allows
              (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
              a string of characters consisting of upper and lowercase alphanumeric
              characters with no spaces. You can also include any of the following
              characters: _+=,.@-</p>'
      required:
      - InstanceProfileName
      - RoleName
      title: AddRoleToInstanceProfileRequest
      type: object
    AddUserToGroupRequest:
      properties:
        GroupName:
          allOf:
          - $ref: '#/components/schemas/groupNameType'
          - description: '<p>The name of the group to update.</p> <p>This parameter
              allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
        UserName:
          allOf:
          - $ref: '#/components/schemas/existingUserNameType'
          - description: '<p>The name of the user to add.</p> <p>This parameter allows
              (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
              a string of characters consisting of upper and lowercase alphanumeric
              characters with no spaces. You can also include any of the following
              characters: _+=,.@-</p>'
      required:
      - GroupName
      - UserName
      title: AddUserToGroupRequest
      type: object
    ArnListType:
      items:
        $ref: '#/components/schemas/arnType'
      type: array
    AttachGroupPolicyRequest:
      properties:
        GroupName:
          allOf:
          - $ref: '#/components/schemas/groupNameType'
          - description: '<p>The name (friendly name, not ARN) of the group to attach
              the policy to.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
        PolicyArn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: <p>The Amazon Resource Name (ARN) of the IAM policy you want
              to attach.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
              Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
      required:
      - GroupName
      - PolicyArn
      title: AttachGroupPolicyRequest
      type: object
    AttachRolePolicyRequest:
      properties:
        PolicyArn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: <p>The Amazon Resource Name (ARN) of the IAM policy you want
              to attach.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
              Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        RoleName:
          allOf:
          - $ref: '#/components/schemas/roleNameType'
          - description: '<p>The name (friendly name, not ARN) of the role to attach
              the policy to.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      required:
      - RoleName
      - PolicyArn
      title: AttachRolePolicyRequest
      type: object
    AttachUserPolicyRequest:
      properties:
        PolicyArn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: <p>The Amazon Resource Name (ARN) of the IAM policy you want
              to attach.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
              Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        UserName:
          allOf:
          - $ref: '#/components/schemas/userNameType'
          - description: '<p>The name (friendly name, not ARN) of the IAM user to
              attach the policy to.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      required:
      - UserName
      - PolicyArn
      title: AttachUserPolicyRequest
      type: object
    AttachedPermissionsBoundary:
      description: <p>Contains information about an attached permissions boundary.</p>
        <p>An attached permissions boundary is a managed policy that has been attached
        to a user or role to set the permissions boundary.</p> <p>For more information
        about permissions boundaries, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html">Permissions
        boundaries for IAM identities </a> in the <i>IAM User Guide</i>.</p>
      properties:
        PermissionsBoundaryArn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: ' The ARN of the policy used to set the permissions boundary
              for the user or role.'
        PermissionsBoundaryType:
          allOf:
          - $ref: '#/components/schemas/PermissionsBoundaryAttachmentType'
          - description: ' The permissions boundary usage type that indicates what
              type of IAM resource is used as the permissions boundary for an entity.
              This data type can only have a value of <code>Policy</code>.'
      type: object
    AttachedPolicy:
      description: <p>Contains information about an attached policy.</p> <p>An attached
        policy is a managed policy that has been attached to a user, group, or role.
        This data type is used as a response element in the <a>ListAttachedGroupPolicies</a>,
        <a>ListAttachedRolePolicies</a>, <a>ListAttachedUserPolicies</a>, and <a>GetAccountAuthorizationDetails</a>
        operations. </p> <p>For more information about managed policies, refer to
        <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>. </p>
      properties:
        PolicyArn:
          $ref: '#/components/schemas/arnType'
        PolicyName:
          allOf:
          - $ref: '#/components/schemas/policyNameType'
          - description: The friendly name of the attached policy.
      type: object
    BootstrapDatum:
      format: password
      type: string
    ChangePasswordRequest:
      properties:
        NewPassword:
          allOf:
          - $ref: '#/components/schemas/passwordType'
          - description: <p>The new password. The new password must conform to the
              Amazon Web Services account's password policy, if one exists.</p> <p>The
              <a href="http://wikipedia.org/wiki/regex">regex pattern</a> that is
              used to validate this parameter is a string of characters. That string
              can include almost any printable ASCII character from the space (<code>\u0020</code>)
              through the end of the ASCII character range (<code>\u00FF</code>).
              You can also include the tab (<code>\u0009</code>), line feed (<code>\u000A</code>),
              and carriage return (<code>\u000D</code>) characters. Any of these characters
              are valid in a password. However, many tools, such as the Amazon Web
              Services Management Console, might restrict the ability to type certain
              characters because they have special meaning within that tool.</p>
        OldPassword:
          allOf:
          - $ref: '#/components/schemas/passwordType'
          - description: The IAM user's current password.
      required:
      - OldPassword
      - NewPassword
      title: ChangePasswordRequest
      type: object
    ColumnNumber:
      type: integer
    ConcurrentModificationException: {}
    ContextEntry:
      description: <p>Contains information about a condition context key. It includes
        the name of the key and specifies the value (or values, if the context key
        supports multiple values) to use in the simulation. This information is used
        when evaluating the <code>Condition</code> elements of the input policies.</p>
        <p>This data type is used as an input parameter to <a>SimulateCustomPolicy</a>
        and <a>SimulatePrincipalPolicy</a>.</p>
      properties:
        ContextKeyName:
          allOf:
          - $ref: '#/components/schemas/ContextKeyNameType'
          - description: The full name of a condition context key, including the service
              prefix. For example, <code>aws:SourceIp</code> or <code>s3:VersionId</code>.
        ContextKeyType:
          allOf:
          - $ref: '#/components/schemas/ContextKeyTypeEnum'
          - description: The data type of the value (or values) specified in the <code>ContextKeyValues</code>
              parameter.
        ContextKeyValues:
          allOf:
          - $ref: '#/components/schemas/ContextKeyValueListType'
          - description: The value (or values, if the condition context key supports
              multiple values) to provide to the simulation when the key is referenced
              by a <code>Condition</code> element in an input policy.
      type: object
    ContextEntryListType:
      items:
        $ref: '#/components/schemas/ContextEntry'
      type: array
    ContextKeyNameType:
      maxLength: 256
      minLength: 5
      type: string
    ContextKeyNamesResultListType:
      items:
        $ref: '#/components/schemas/ContextKeyNameType'
      type: array
    ContextKeyTypeEnum:
      enum:
      - string
      - stringList
      - numeric
      - numericList
      - boolean
      - booleanList
      - ip
      - ipList
      - binary
      - binaryList
      - date
      - dateList
      type: string
    ContextKeyValueListType:
      items:
        $ref: '#/components/schemas/ContextKeyValueType'
      type: array
    ContextKeyValueType:
      type: string
    CreateAccessKeyRequest:
      properties:
        UserName:
          allOf:
          - $ref: '#/components/schemas/existingUserNameType'
          - description: '<p>The name of the IAM user that the new key will belong
              to.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      title: CreateAccessKeyRequest
      type: object
    CreateAccessKeyResponse:
      description: 'Contains the response to a successful <a>CreateAccessKey</a> request. '
      example:
        AccessKey:
          AccessKeyId: AKIAIOSFODNN7EXAMPLE
          CreateDate: '2015-03-09T18:39:23.411Z'
          SecretAccessKey: wJalrXUtnFEMI/K7MDENG/bPxRfiCYzEXAMPLEKEY
          Status: Active
          UserName: Bob
      properties:
        AccessKey:
          allOf:
          - $ref: '#/components/schemas/AccessKey'
          - description: A structure with details about the access key.
      required:
      - AccessKey
      type: object
    CreateAccountAliasRequest:
      properties:
        AccountAlias:
          allOf:
          - $ref: '#/components/schemas/accountAliasType'
          - description: <p>The account alias to create.</p> <p>This parameter allows
              (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
              a string of characters consisting of lowercase letters, digits, and
              dashes. You cannot start or finish with a dash, nor can you have two
              dashes in a row.</p>
      required:
      - AccountAlias
      title: CreateAccountAliasRequest
      type: object
    CreateGroupRequest:
      properties:
        GroupName:
          allOf:
          - $ref: '#/components/schemas/groupNameType'
          - description: <p>The name of the group to create. Do not include the path
              in this value.</p> <p>IAM user, group, role, and policy names must be
              unique within the account. Names are not distinguished by case. For
              example, you cannot create resources named both "MyResource" and "myresource".</p>
        Path:
          allOf:
          - $ref: '#/components/schemas/pathType'
          - description: <p> The path to the group. For more information about paths,
              see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
              identifiers</a> in the <i>IAM User Guide</i>.</p> <p>This parameter
              is optional. If it is not included, it defaults to a slash (/).</p>
              <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of either a forward slash
              (/) by itself or a string that must begin and end with forward slashes.
              In addition, it can contain any ASCII character from the ! (<code>\u0021</code>)
              through the DEL character (<code>\u007F</code>), including most punctuation
              characters, digits, and upper and lowercased letters.</p>
      required:
      - GroupName
      title: CreateGroupRequest
      type: object
    CreateGroupResponse:
      description: 'Contains the response to a successful <a>CreateGroup</a> request. '
      example:
        Group:
          Arn: arn:aws:iam::123456789012:group/Admins
          CreateDate: '2015-03-09T20:30:24.940Z'
          GroupId: AIDGPMS9RO4H3FEXAMPLE
          GroupName: Admins
          Path: /
      properties:
        Group:
          allOf:
          - $ref: '#/components/schemas/Group'
          - description: A structure containing details about the new group.
      required:
      - Group
      type: object
    CreateInstanceProfileRequest:
      properties:
        InstanceProfileName:
          allOf:
          - $ref: '#/components/schemas/instanceProfileNameType'
          - description: '<p>The name of the instance profile to create.</p> <p>This
              parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
        Path:
          allOf:
          - $ref: '#/components/schemas/pathType'
          - description: <p> The path to the instance profile. For more information
              about paths, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
              Identifiers</a> in the <i>IAM User Guide</i>.</p> <p>This parameter
              is optional. If it is not included, it defaults to a slash (/).</p>
              <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of either a forward slash
              (/) by itself or a string that must begin and end with forward slashes.
              In addition, it can contain any ASCII character from the ! (<code>\u0021</code>)
              through the DEL character (<code>\u007F</code>), including most punctuation
              characters, digits, and upper and lowercased letters.</p>
        Tags:
          allOf:
          - $ref: '#/components/schemas/tagListType'
          - description: <p>A list of tags that you want to attach to the newly created
              IAM instance profile. Each tag consists of a key name and an associated
              value. For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
              IAM resources</a> in the <i>IAM User Guide</i>.</p> <note> <p>If any
              one of the tags is invalid or if you exceed the allowed maximum number
              of tags, then the entire request fails and the resource is not created.</p>
              </note>
      required:
      - InstanceProfileName
      title: CreateInstanceProfileRequest
      type: object
    CreateInstanceProfileResponse:
      description: 'Contains the response to a successful <a>CreateInstanceProfile</a>
        request. '
      example:
        InstanceProfile:
          Arn: arn:aws:iam::123456789012:instance-profile/Webserver
          CreateDate: '2015-03-09T20:33:19.626Z'
          InstanceProfileId: AIPAJMBYC7DLSPEXAMPLE
          InstanceProfileName: Webserver
          Path: /
          Roles: []
      properties:
        InstanceProfile:
          allOf:
          - $ref: '#/components/schemas/InstanceProfile'
          - description: A structure containing details about the new instance profile.
      required:
      - InstanceProfile
      type: object
    CreateLoginProfileRequest:
      properties:
        Password:
          allOf:
          - $ref: '#/components/schemas/passwordType'
          - description: <p>The new password for the user.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a> that is used to validate this parameter is a string of characters.
              That string can include almost any printable ASCII character from the
              space (<code>\u0020</code>) through the end of the ASCII character range
              (<code>\u00FF</code>). You can also include the tab (<code>\u0009</code>),
              line feed (<code>\u000A</code>), and carriage return (<code>\u000D</code>)
              characters. Any of these characters are valid in a password. However,
              many tools, such as the Amazon Web Services Management Console, might
              restrict the ability to type certain characters because they have special
              meaning within that tool.</p>
        PasswordResetRequired:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: Specifies whether the user is required to set a new password
              on next sign-in.
        UserName:
          allOf:
          - $ref: '#/components/schemas/userNameType'
          - description: '<p>The name of the IAM user to create a password for. The
              user must already exist.</p> <p>This parameter allows (through its <a
              href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of
              characters consisting of upper and lowercase alphanumeric characters
              with no spaces. You can also include any of the following characters:
              _+=,.@-</p>'
      required:
      - UserName
      - Password
      title: CreateLoginProfileRequest
      type: object
    CreateLoginProfileResponse:
      description: 'Contains the response to a successful <a>CreateLoginProfile</a>
        request. '
      example:
        LoginProfile:
          CreateDate: '2015-03-10T20:55:40.274Z'
          PasswordResetRequired: true
          UserName: Bob
      properties:
        LoginProfile:
          allOf:
          - $ref: '#/components/schemas/LoginProfile'
          - description: A structure containing the user name and password create
              date.
      required:
      - LoginProfile
      type: object
    CreateOpenIDConnectProviderRequest:
      properties:
        ClientIDList:
          allOf:
          - $ref: '#/components/schemas/clientIDListType'
          - description: <p>Provides a list of client IDs, also known as audiences.
              When a mobile or web app registers with an OpenID Connect provider,
              they establish a value that identifies the application. This is the
              value that's sent as the <code>client_id</code> parameter on OAuth requests.</p>
              <p>You can register multiple client IDs with the same provider. For
              example, you might have multiple applications that use the same OIDC
              provider. You cannot register more than 100 client IDs with a single
              IAM OIDC provider.</p> <p>There is no defined format for a client ID.
              The <code>CreateOpenIDConnectProviderRequest</code> operation accepts
              client IDs up to 255 characters long.</p>
        Tags:
          allOf:
          - $ref: '#/components/schemas/tagListType'
          - description: <p>A list of tags that you want to attach to the new IAM
              OpenID Connect (OIDC) provider. Each tag consists of a key name and
              an associated value. For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
              IAM resources</a> in the <i>IAM User Guide</i>.</p> <note> <p>If any
              one of the tags is invalid or if you exceed the allowed maximum number
              of tags, then the entire request fails and the resource is not created.</p>
              </note>
        ThumbprintList:
          allOf:
          - $ref: '#/components/schemas/thumbprintListType'
          - description: <p>A list of server certificate thumbprints for the OpenID
              Connect (OIDC) identity provider's server certificates. Typically this
              list includes only one entry. However, IAM lets you have up to five
              thumbprints for an OIDC provider. This lets you maintain multiple thumbprints
              if the identity provider is rotating certificates.</p> <p>The server
              certificate thumbprint is the hex-encoded SHA-1 hash value of the X.509
              certificate used by the domain where the OpenID Connect provider makes
              its keys available. It is always a 40-character string.</p> <p>You must
              provide at least one thumbprint when creating an IAM OIDC provider.
              For example, assume that the OIDC provider is <code>server.example.com</code>
              and the provider stores its keys at https://keys.server.example.com/openid-connect.
              In that case, the thumbprint string would be the hex-encoded SHA-1 hash
              value of the certificate used by <code>https://keys.server.example.com.</code>
              </p> <p>For more information about obtaining the OIDC provider thumbprint,
              see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/identity-providers-oidc-obtain-thumbprint.html">Obtaining
              the thumbprint for an OpenID Connect provider</a> in the <i>IAM User
              Guide</i>.</p>
        Url:
          allOf:
          - $ref: '#/components/schemas/OpenIDConnectProviderUrlType'
          - description: <p>The URL of the identity provider. The URL must begin with
              <code>https://</code> and should correspond to the <code>iss</code>
              claim in the provider's OpenID Connect ID tokens. Per the OIDC standard,
              path components are allowed but query parameters are not. Typically
              the URL consists of only a hostname, like <code>https://server.example.org</code>
              or <code>https://example.com</code>. The URL should not contain a port
              number. </p> <p>You cannot register the same provider multiple times
              in a single Amazon Web Services account. If you try to submit a URL
              that has already been used for an OpenID Connect provider in the Amazon
              Web Services account, you will get an error.</p>
      required:
      - Url
      - ThumbprintList
      title: CreateOpenIDConnectProviderRequest
      type: object
    CreateOpenIDConnectProviderResponse:
      description: 'Contains the response to a successful <a>CreateOpenIDConnectProvider</a>
        request. '
      example:
        OpenIDConnectProviderArn: arn:aws:iam::123456789012:oidc-provider/server.example.com
      properties:
        OpenIDConnectProviderArn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: 'The Amazon Resource Name (ARN) of the new IAM OpenID Connect
              provider that is created. For more information, see <a>OpenIDConnectProviderListEntry</a>. '
        Tags:
          allOf:
          - $ref: '#/components/schemas/tagListType'
          - description: A list of tags that are attached to the new IAM OIDC provider.
              The returned list of tags is sorted by tag key. For more information
              about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
              IAM resources</a> in the <i>IAM User Guide</i>.
      type: object
    CreatePolicyRequest:
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/policyDescriptionType'
          - description: <p>A friendly description of the policy.</p> <p>Typically
              used to store information about the permissions defined in the policy.
              For example, "Grants access to production DynamoDB tables."</p> <p>The
              policy description is immutable. After a value is assigned, it cannot
              be changed.</p>
        Path:
          allOf:
          - $ref: '#/components/schemas/policyPathType'
          - description: <p>The path for the policy.</p> <p>For more information about
              paths, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
              identifiers</a> in the <i>IAM User Guide</i>.</p> <p>This parameter
              is optional. If it is not included, it defaults to a slash (/).</p>
              <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of either a forward slash
              (/) by itself or a string that must begin and end with forward slashes.
              In addition, it can contain any ASCII character from the ! (<code>\u0021</code>)
              through the DEL character (<code>\u007F</code>), including most punctuation
              characters, digits, and upper and lowercased letters.</p> <note> <p>You
              cannot use an asterisk (*) in the path name.</p> </note>
        PolicyDocument:
          allOf:
          - $ref: '#/components/schemas/policyDocumentType'
          - description: <p>The JSON policy document that you want to use as the content
              for the new policy.</p> <p>You must provide policies in JSON format
              in IAM. However, for CloudFormation templates formatted in YAML, you
              can provide the policy in JSON or YAML format. CloudFormation always
              converts a YAML policy to JSON format before submitting it to IAM.</p>
              <p>The maximum length of the policy document that you can pass in this
              operation, including whitespace, is listed below. To view the maximum
              character counts of a managed policy with no whitespaces, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html#reference_iam-quotas-entity-length">IAM
              and STS character quotas</a>.</p> <p>To learn more about JSON policy
              grammar, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_grammar.html">Grammar
              of the IAM JSON policy language</a> in the <i>IAM User Guide</i>. </p>
              <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used
              to validate this parameter is a string of characters consisting of the
              following:</p> <ul> <li> <p>Any printable ASCII character ranging from
              the space character (<code>\u0020</code>) through the end of the ASCII
              character range</p> </li> <li> <p>The printable characters in the Basic
              Latin and Latin-1 Supplement character set (through <code>\u00FF</code>)</p>
              </li> <li> <p>The special characters tab (<code>\u0009</code>), line
              feed (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p>
              </li> </ul>
        PolicyName:
          allOf:
          - $ref: '#/components/schemas/policyNameType'
          - description: <p>The friendly name of the policy.</p> <p>IAM user, group,
              role, and policy names must be unique within the account. Names are
              not distinguished by case. For example, you cannot create resources
              named both "MyResource" and "myresource".</p>
        Tags:
          allOf:
          - $ref: '#/components/schemas/tagListType'
          - description: <p>A list of tags that you want to attach to the new IAM
              customer managed policy. Each tag consists of a key name and an associated
              value. For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
              IAM resources</a> in the <i>IAM User Guide</i>.</p> <note> <p>If any
              one of the tags is invalid or if you exceed the allowed maximum number
              of tags, then the entire request fails and the resource is not created.</p>
              </note>
      required:
      - PolicyName
      - PolicyDocument
      title: CreatePolicyRequest
      type: object
    CreatePolicyResponse:
      description: 'Contains the response to a successful <a>CreatePolicy</a> request. '
      properties:
        Policy:
          allOf:
          - $ref: '#/components/schemas/Policy'
          - description: A structure containing details about the new policy.
      type: object
    CreatePolicyVersionRequest:
      properties:
        PolicyArn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: <p>The Amazon Resource Name (ARN) of the IAM policy to which
              you want to add a new version.</p> <p>For more information about ARNs,
              see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
              Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        PolicyDocument:
          allOf:
          - $ref: '#/components/schemas/policyDocumentType'
          - description: <p>The JSON policy document that you want to use as the content
              for this new version of the policy.</p> <p>You must provide policies
              in JSON format in IAM. However, for CloudFormation templates formatted
              in YAML, you can provide the policy in JSON or YAML format. CloudFormation
              always converts a YAML policy to JSON format before submitting it to
              IAM.</p> <p>The maximum length of the policy document that you can pass
              in this operation, including whitespace, is listed below. To view the
              maximum character counts of a managed policy with no whitespaces, see
              <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html#reference_iam-quotas-entity-length">IAM
              and STS character quotas</a>.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a> used to validate this parameter is a string of characters
              consisting of the following:</p> <ul> <li> <p>Any printable ASCII character
              ranging from the space character (<code>\u0020</code>) through the end
              of the ASCII character range</p> </li> <li> <p>The printable characters
              in the Basic Latin and Latin-1 Supplement character set (through <code>\u00FF</code>)</p>
              </li> <li> <p>The special characters tab (<code>\u0009</code>), line
              feed (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p>
              </li> </ul>
        SetAsDefault:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: <p>Specifies whether to set this version as the policy's
              default version.</p> <p>When this parameter is <code>true</code>, the
              new policy version becomes the operative version. That is, it becomes
              the version that is in effect for the IAM users, groups, and roles that
              the policy is attached to.</p> <p>For more information about managed
              policy versions, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning
              for managed policies</a> in the <i>IAM User Guide</i>.</p>
      required:
      - PolicyArn
      - PolicyDocument
      title: CreatePolicyVersionRequest
      type: object
    CreatePolicyVersionResponse:
      description: 'Contains the response to a successful <a>CreatePolicyVersion</a>
        request. '
      properties:
        PolicyVersion:
          allOf:
          - $ref: '#/components/schemas/PolicyVersion'
          - description: A structure containing details about the new policy version.
      type: object
    CreateRoleRequest:
      properties:
        AssumeRolePolicyDocument:
          allOf:
          - $ref: '#/components/schemas/policyDocumentType'
          - description: <p>The trust relationship policy document that grants an
              entity permission to assume the role.</p> <p>In IAM, you must provide
              a JSON policy that has been converted to a string. However, for CloudFormation
              templates formatted in YAML, you can provide the policy in JSON or YAML
              format. CloudFormation always converts a YAML policy to JSON format
              before submitting it to IAM.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a> used to validate this parameter is a string of characters
              consisting of the following:</p> <ul> <li> <p>Any printable ASCII character
              ranging from the space character (<code>\u0020</code>) through the end
              of the ASCII character range</p> </li> <li> <p>The printable characters
              in the Basic Latin and Latin-1 Supplement character set (through <code>\u00FF</code>)</p>
              </li> <li> <p>The special characters tab (<code>\u0009</code>), line
              feed (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p>
              </li> </ul> <p> Upon success, the response includes the same trust policy
              in JSON format.</p>
        Description:
          allOf:
          - $ref: '#/components/schemas/roleDescriptionType'
          - description: A description of the role.
        MaxSessionDuration:
          allOf:
          - $ref: '#/components/schemas/roleMaxSessionDurationType'
          - description: <p>The maximum session duration (in seconds) that you want
              to set for the specified role. If you do not specify a value for this
              setting, the default maximum of one hour is applied. This setting can
              have a value from 1 hour to 12 hours.</p> <p>Anyone who assumes the
              role from the or API can use the <code>DurationSeconds</code> API parameter
              or the <code>duration-seconds</code> CLI parameter to request a longer
              session. The <code>MaxSessionDuration</code> setting determines the
              maximum duration that can be requested using the <code>DurationSeconds</code>
              parameter. If users don't specify a value for the <code>DurationSeconds</code>
              parameter, their security credentials are valid for one hour by default.
              This applies when you use the <code>AssumeRole*</code> API operations
              or the <code>assume-role*</code> CLI operations but does not apply when
              you use those operations to create a console URL. For more information,
              see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html">Using
              IAM roles</a> in the <i>IAM User Guide</i>.</p>
        Path:
          allOf:
          - $ref: '#/components/schemas/pathType'
          - description: <p> The path to the role. For more information about paths,
              see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
              Identifiers</a> in the <i>IAM User Guide</i>.</p> <p>This parameter
              is optional. If it is not included, it defaults to a slash (/).</p>
              <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of either a forward slash
              (/) by itself or a string that must begin and end with forward slashes.
              In addition, it can contain any ASCII character from the ! (<code>\u0021</code>)
              through the DEL character (<code>\u007F</code>), including most punctuation
              characters, digits, and upper and lowercased letters.</p>
        PermissionsBoundary:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: The ARN of the policy that is used to set the permissions
              boundary for the role.
        RoleName:
          allOf:
          - $ref: '#/components/schemas/roleNameType'
          - description: <p>The name of the role to create.</p> <p>IAM user, group,
              role, and policy names must be unique within the account. Names are
              not distinguished by case. For example, you cannot create resources
              named both "MyResource" and "myresource".</p>
        Tags:
          allOf:
          - $ref: '#/components/schemas/tagListType'
          - description: <p>A list of tags that you want to attach to the new role.
              Each tag consists of a key name and an associated value. For more information
              about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
              IAM resources</a> in the <i>IAM User Guide</i>.</p> <note> <p>If any
              one of the tags is invalid or if you exceed the allowed maximum number
              of tags, then the entire request fails and the resource is not created.</p>
              </note>
      required:
      - RoleName
      - AssumeRolePolicyDocument
      title: CreateRoleRequest
      type: object
    CreateRoleResponse:
      description: 'Contains the response to a successful <a>CreateRole</a> request. '
      example:
        Role:
          Arn: arn:aws:iam::123456789012:role/Test-Role
          AssumeRolePolicyDocument: <URL-encoded-JSON>
          CreateDate: '2013-06-07T20:43:32.821Z'
          Path: /
          RoleId: AKIAIOSFODNN7EXAMPLE
          RoleName: Test-Role
      properties:
        Role:
          allOf:
          - $ref: '#/components/schemas/Role'
          - description: A structure containing details about the new role.
      required:
      - Role
      type: object
    CreateSAMLProviderRequest:
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/SAMLProviderNameType'
          - description: '<p>The name of the provider to create.</p> <p>This parameter
              allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
        SAMLMetadataDocument:
          allOf:
          - $ref: '#/components/schemas/SAMLMetadataDocumentType'
          - description: <p>An XML document generated by an identity provider (IdP)
              that supports SAML 2.0. The document includes the issuer's name, expiration
              information, and keys that can be used to validate the SAML authentication
              response (assertions) that are received from the IdP. You must generate
              the metadata document using the identity management software that is
              used as your organization's IdP.</p> <p>For more information, see <a
              href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_saml.html">About
              SAML 2.0-based federation</a> in the <i>IAM User Guide</i> </p>
        Tags:
          allOf:
          - $ref: '#/components/schemas/tagListType'
          - description: <p>A list of tags that you want to attach to the new IAM
              SAML provider. Each tag consists of a key name and an associated value.
              For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
              IAM resources</a> in the <i>IAM User Guide</i>.</p> <note> <p>If any
              one of the tags is invalid or if you exceed the allowed maximum number
              of tags, then the entire request fails and the resource is not created.</p>
              </note>
      required:
      - SAMLMetadataDocument
      - Name
      title: CreateSAMLProviderRequest
      type: object
    CreateSAMLProviderResponse:
      description: 'Contains the response to a successful <a>CreateSAMLProvider</a>
        request. '
      properties:
        SAMLProviderArn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: The Amazon Resource Name (ARN) of the new SAML provider resource
              in IAM.
        Tags:
          allOf:
          - $ref: '#/components/schemas/tagListType'
          - description: A list of tags that are attached to the new IAM SAML provider.
              The returned list of tags is sorted by tag key. For more information
              about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
              IAM resources</a> in the <i>IAM User Guide</i>.
      type: object
    CreateServiceLinkedRoleRequest:
      properties:
        AWSServiceName:
          allOf:
          - $ref: '#/components/schemas/groupNameType'
          - description: '<p>The service principal for the Amazon Web Services service
              to which this role is attached. You use a string similar to a URL but
              without the http:// in front. For example: <code>elasticbeanstalk.amazonaws.com</code>.
              </p> <p>Service principals are unique and case-sensitive. To find the
              exact service principal for your service-linked role, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-services-that-work-with-iam.html">Amazon
              Web Services services that work with IAM</a> in the <i>IAM User Guide</i>.
              Look for the services that have <b>Yes </b>in the <b>Service-Linked
              Role</b> column. Choose the <b>Yes</b> link to view the service-linked
              role documentation for that service.</p>'
        CustomSuffix:
          allOf:
          - $ref: '#/components/schemas/customSuffixType'
          - description: <p/> <p>A string that you provide, which is combined with
              the service-provided prefix to form the complete role name. If you make
              multiple requests for the same service, then you must supply a different
              <code>CustomSuffix</code> for each request. Otherwise the request fails
              with a duplicate role name error. For example, you could add <code>-1</code>
              or <code>-debug</code> to the suffix.</p> <p>Some services do not support
              the <code>CustomSuffix</code> parameter. If you provide an optional
              suffix and the operation fails, try the operation again without the
              suffix.</p>
        Description:
          allOf:
          - $ref: '#/components/schemas/roleDescriptionType'
          - description: The description of the role.
      required:
      - AWSServiceName
      title: CreateServiceLinkedRoleRequest
      type: object
    CreateServiceLinkedRoleResponse:
      properties:
        Role:
          allOf:
          - $ref: '#/components/schemas/Role'
          - description: A <a>Role</a> object that contains details about the newly
              created role.
      type: object
    CreateServiceSpecificCredentialRequest:
      properties:
        ServiceName:
          allOf:
          - $ref: '#/components/schemas/serviceName'
          - description: The name of the Amazon Web Services service that is to be
              associated with the credentials. The service you specify here is the
              only service that can be accessed using these credentials.
        UserName:
          allOf:
          - $ref: '#/components/schemas/userNameType'
          - description: '<p>The name of the IAM user that is to be associated with
              the credentials. The new service-specific credentials have the same
              permissions as the associated user except that they can be used only
              to access the specified service.</p> <p>This parameter allows (through
              its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string
              of characters consisting of upper and lowercase alphanumeric characters
              with no spaces. You can also include any of the following characters:
              _+=,.@-</p>'
      required:
      - UserName
      - ServiceName
      title: CreateServiceSpecificCredentialRequest
      type: object
    CreateServiceSpecificCredentialResponse:
      properties:
        ServiceSpecificCredential:
          allOf:
          - $ref: '#/components/schemas/ServiceSpecificCredential'
          - description: <p>A structure that contains information about the newly
              created service-specific credential.</p> <important> <p>This is the
              only time that the password for this credential set is available. It
              cannot be recovered later. Instead, you must reset the password with
              <a>ResetServiceSpecificCredential</a>.</p> </important>
      type: object
    CreateUserRequest:
      properties:
        Path:
          allOf:
          - $ref: '#/components/schemas/pathType'
          - description: <p> The path for the user name. For more information about
              paths, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
              identifiers</a> in the <i>IAM User Guide</i>.</p> <p>This parameter
              is optional. If it is not included, it defaults to a slash (/).</p>
              <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of either a forward slash
              (/) by itself or a string that must begin and end with forward slashes.
              In addition, it can contain any ASCII character from the ! (<code>\u0021</code>)
              through the DEL character (<code>\u007F</code>), including most punctuation
              characters, digits, and upper and lowercased letters.</p>
        PermissionsBoundary:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: The ARN of the policy that is used to set the permissions
              boundary for the user.
        Tags:
          allOf:
          - $ref: '#/components/schemas/tagListType'
          - description: <p>A list of tags that you want to attach to the new user.
              Each tag consists of a key name and an associated value. For more information
              about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
              IAM resources</a> in the <i>IAM User Guide</i>.</p> <note> <p>If any
              one of the tags is invalid or if you exceed the allowed maximum number
              of tags, then the entire request fails and the resource is not created.</p>
              </note>
        UserName:
          allOf:
          - $ref: '#/components/schemas/userNameType'
          - description: <p>The name of the user to create.</p> <p>IAM user, group,
              role, and policy names must be unique within the account. Names are
              not distinguished by case. For example, you cannot create resources
              named both "MyResource" and "myresource".</p>
      required:
      - UserName
      title: CreateUserRequest
      type: object
    CreateUserResponse:
      description: 'Contains the response to a successful <a>CreateUser</a> request. '
      example:
        User:
          Arn: arn:aws:iam::123456789012:user/Bob
          CreateDate: '2013-06-08T03:20:41.270Z'
          Path: /
          UserId: AKIAIOSFODNN7EXAMPLE
          UserName: Bob
      properties:
        User:
          allOf:
          - $ref: '#/components/schemas/User'
          - description: A structure with details about the new IAM user.
      type: object
    CreateVirtualMFADeviceRequest:
      properties:
        Path:
          allOf:
          - $ref: '#/components/schemas/pathType'
          - description: <p> The path for the virtual MFA device. For more information
              about paths, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
              identifiers</a> in the <i>IAM User Guide</i>.</p> <p>This parameter
              is optional. If it is not included, it defaults to a slash (/).</p>
              <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of either a forward slash
              (/) by itself or a string that must begin and end with forward slashes.
              In addition, it can contain any ASCII character from the ! (<code>\u0021</code>)
              through the DEL character (<code>\u007F</code>), including most punctuation
              characters, digits, and upper and lowercased letters.</p>
        Tags:
          allOf:
          - $ref: '#/components/schemas/tagListType'
          - description: <p>A list of tags that you want to attach to the new IAM
              virtual MFA device. Each tag consists of a key name and an associated
              value. For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
              IAM resources</a> in the <i>IAM User Guide</i>.</p> <note> <p>If any
              one of the tags is invalid or if you exceed the allowed maximum number
              of tags, then the entire request fails and the resource is not created.</p>
              </note>
        VirtualMFADeviceName:
          allOf:
          - $ref: '#/components/schemas/virtualMFADeviceName'
          - description: '<p>The name of the virtual MFA device. Use with path to
              uniquely identify a virtual MFA device.</p> <p>This parameter allows
              (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
              a string of characters consisting of upper and lowercase alphanumeric
              characters with no spaces. You can also include any of the following
              characters: _+=,.@-</p>'
      required:
      - VirtualMFADeviceName
      title: CreateVirtualMFADeviceRequest
      type: object
    CreateVirtualMFADeviceResponse:
      description: 'Contains the response to a successful <a>CreateVirtualMFADevice</a>
        request. '
      properties:
        VirtualMFADevice:
          allOf:
          - $ref: '#/components/schemas/VirtualMFADevice'
          - description: A structure containing details about the new virtual MFA
              device.
      required:
      - VirtualMFADevice
      type: object
    CredentialReportExpiredException: {}
    CredentialReportNotPresentException: {}
    CredentialReportNotReadyException: {}
    DeactivateMFADeviceRequest:
      properties:
        SerialNumber:
          allOf:
          - $ref: '#/components/schemas/serialNumberType'
          - description: '<p>The serial number that uniquely identifies the MFA device.
              For virtual MFA devices, the serial number is the device ARN.</p> <p>This
              parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: =,.@:/-</p>'
        UserName:
          allOf:
          - $ref: '#/components/schemas/existingUserNameType'
          - description: '<p>The name of the user whose MFA device you want to deactivate.</p>
              <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      required:
      - UserName
      - SerialNumber
      title: DeactivateMFADeviceRequest
      type: object
    DeleteAccessKeyRequest:
      properties:
        AccessKeyId:
          allOf:
          - $ref: '#/components/schemas/accessKeyIdType'
          - description: <p>The access key ID for the access key ID and secret access
              key you want to delete.</p> <p>This parameter allows (through its <a
              href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of
              characters that can consist of any upper or lowercased letter or digit.</p>
        UserName:
          allOf:
          - $ref: '#/components/schemas/existingUserNameType'
          - description: '<p>The name of the user whose access key pair you want to
              delete.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      required:
      - AccessKeyId
      title: DeleteAccessKeyRequest
      type: object
    DeleteAccountAliasRequest:
      properties:
        AccountAlias:
          allOf:
          - $ref: '#/components/schemas/accountAliasType'
          - description: <p>The name of the account alias to delete.</p> <p>This parameter
              allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of lowercase letters,
              digits, and dashes. You cannot start or finish with a dash, nor can
              you have two dashes in a row.</p>
      required:
      - AccountAlias
      title: DeleteAccountAliasRequest
      type: object
    DeleteConflictException: {}
    DeleteGroupPolicyRequest:
      properties:
        GroupName:
          allOf:
          - $ref: '#/components/schemas/groupNameType'
          - description: '<p>The name (friendly name, not ARN) identifying the group
              that the policy is embedded in.</p> <p>This parameter allows (through
              its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string
              of characters consisting of upper and lowercase alphanumeric characters
              with no spaces. You can also include any of the following characters:
              _+=,.@-</p>'
        PolicyName:
          allOf:
          - $ref: '#/components/schemas/policyNameType'
          - description: '<p>The name identifying the policy document to delete.</p>
              <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      required:
      - GroupName
      - PolicyName
      title: DeleteGroupPolicyRequest
      type: object
    DeleteGroupRequest:
      properties:
        GroupName:
          allOf:
          - $ref: '#/components/schemas/groupNameType'
          - description: '<p>The name of the IAM group to delete.</p> <p>This parameter
              allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      required:
      - GroupName
      title: DeleteGroupRequest
      type: object
    DeleteInstanceProfileRequest:
      properties:
        InstanceProfileName:
          allOf:
          - $ref: '#/components/schemas/instanceProfileNameType'
          - description: '<p>The name of the instance profile to delete.</p> <p>This
              parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      required:
      - InstanceProfileName
      title: DeleteInstanceProfileRequest
      type: object
    DeleteLoginProfileRequest:
      properties:
        UserName:
          allOf:
          - $ref: '#/components/schemas/userNameType'
          - description: '<p>The name of the user whose password you want to delete.</p>
              <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      required:
      - UserName
      title: DeleteLoginProfileRequest
      type: object
    DeleteOpenIDConnectProviderRequest:
      properties:
        OpenIDConnectProviderArn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: The Amazon Resource Name (ARN) of the IAM OpenID Connect
              provider resource object to delete. You can get a list of OpenID Connect
              provider resource ARNs by using the <a>ListOpenIDConnectProviders</a>
              operation.
      required:
      - OpenIDConnectProviderArn
      title: DeleteOpenIDConnectProviderRequest
      type: object
    DeletePolicyRequest:
      properties:
        PolicyArn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: <p>The Amazon Resource Name (ARN) of the IAM policy you want
              to delete.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
              Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
      required:
      - PolicyArn
      title: DeletePolicyRequest
      type: object
    DeletePolicyVersionRequest:
      properties:
        PolicyArn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: <p>The Amazon Resource Name (ARN) of the IAM policy from
              which you want to delete a version.</p> <p>For more information about
              ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
              Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        VersionId:
          allOf:
          - $ref: '#/components/schemas/policyVersionIdType'
          - description: <p>The policy version to delete.</p> <p>This parameter allows
              (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
              a string of characters that consists of the lowercase letter 'v' followed
              by one or two digits, and optionally followed by a period '.' and a
              string of letters and digits.</p> <p>For more information about managed
              policy versions, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning
              for managed policies</a> in the <i>IAM User Guide</i>.</p>
      required:
      - PolicyArn
      - VersionId
      title: DeletePolicyVersionRequest
      type: object
    DeleteRolePermissionsBoundaryRequest:
      properties:
        RoleName:
          allOf:
          - $ref: '#/components/schemas/roleNameType'
          - description: The name (friendly name, not ARN) of the IAM role from which
              you want to remove the permissions boundary.
      required:
      - RoleName
      title: DeleteRolePermissionsBoundaryRequest
      type: object
    DeleteRolePolicyRequest:
      properties:
        PolicyName:
          allOf:
          - $ref: '#/components/schemas/policyNameType'
          - description: '<p>The name of the inline policy to delete from the specified
              IAM role.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
        RoleName:
          allOf:
          - $ref: '#/components/schemas/roleNameType'
          - description: '<p>The name (friendly name, not ARN) identifying the role
              that the policy is embedded in.</p> <p>This parameter allows (through
              its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string
              of characters consisting of upper and lowercase alphanumeric characters
              with no spaces. You can also include any of the following characters:
              _+=,.@-</p>'
      required:
      - RoleName
      - PolicyName
      title: DeleteRolePolicyRequest
      type: object
    DeleteRoleRequest:
      properties:
        RoleName:
          allOf:
          - $ref: '#/components/schemas/roleNameType'
          - description: '<p>The name of the role to delete.</p> <p>This parameter
              allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      required:
      - RoleName
      title: DeleteRoleRequest
      type: object
    DeleteSAMLProviderRequest:
      properties:
        SAMLProviderArn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: The Amazon Resource Name (ARN) of the SAML provider to delete.
      required:
      - SAMLProviderArn
      title: DeleteSAMLProviderRequest
      type: object
    DeleteSSHPublicKeyRequest:
      properties:
        SSHPublicKeyId:
          allOf:
          - $ref: '#/components/schemas/publicKeyIdType'
          - description: <p>The unique identifier for the SSH public key.</p> <p>This
              parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters that can consist of any upper or
              lowercased letter or digit.</p>
        UserName:
          allOf:
          - $ref: '#/components/schemas/userNameType'
          - description: '<p>The name of the IAM user associated with the SSH public
              key.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      required:
      - UserName
      - SSHPublicKeyId
      title: DeleteSSHPublicKeyRequest
      type: object
    DeleteServerCertificateRequest:
      properties:
        ServerCertificateName:
          allOf:
          - $ref: '#/components/schemas/serverCertificateNameType'
          - description: '<p>The name of the server certificate you want to delete.</p>
              <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      required:
      - ServerCertificateName
      title: DeleteServerCertificateRequest
      type: object
    DeleteServiceLinkedRoleRequest:
      properties:
        RoleName:
          allOf:
          - $ref: '#/components/schemas/roleNameType'
          - description: The name of the service-linked role to be deleted.
      required:
      - RoleName
      title: DeleteServiceLinkedRoleRequest
      type: object
    DeleteServiceLinkedRoleResponse:
      properties:
        DeletionTaskId:
          allOf:
          - $ref: '#/components/schemas/DeletionTaskIdType'
          - description: The deletion task identifier that you can use to check the
              status of the deletion. This identifier is returned in the format <code>task/aws-service-role/&lt;service-principal-name&gt;/&lt;role-name&gt;/&lt;task-uuid&gt;</code>.
      required:
      - DeletionTaskId
      type: object
    DeleteServiceSpecificCredentialRequest:
      properties:
        ServiceSpecificCredentialId:
          allOf:
          - $ref: '#/components/schemas/serviceSpecificCredentialId'
          - description: <p>The unique identifier of the service-specific credential.
              You can get this value by calling <a>ListServiceSpecificCredentials</a>.</p>
              <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters that can consist of any upper or
              lowercased letter or digit.</p>
        UserName:
          allOf:
          - $ref: '#/components/schemas/userNameType'
          - description: '<p>The name of the IAM user associated with the service-specific
              credential. If this value is not specified, then the operation assumes
              the user whose credentials are used to call the operation.</p> <p>This
              parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      required:
      - ServiceSpecificCredentialId
      title: DeleteServiceSpecificCredentialRequest
      type: object
    DeleteSigningCertificateRequest:
      properties:
        CertificateId:
          allOf:
          - $ref: '#/components/schemas/certificateIdType'
          - description: <p>The ID of the signing certificate to delete.</p> <p>The
              format of this parameter, as described by its <a href="http://wikipedia.org/wiki/regex">regex</a>
              pattern, is a string of characters that can be upper- or lower-cased
              letters or digits.</p>
        UserName:
          allOf:
          - $ref: '#/components/schemas/existingUserNameType'
          - description: '<p>The name of the user the signing certificate belongs
              to.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      required:
      - CertificateId
      title: DeleteSigningCertificateRequest
      type: object
    DeleteUserPermissionsBoundaryRequest:
      properties:
        UserName:
          allOf:
          - $ref: '#/components/schemas/userNameType'
          - description: The name (friendly name, not ARN) of the IAM user from which
              you want to remove the permissions boundary.
      required:
      - UserName
      title: DeleteUserPermissionsBoundaryRequest
      type: object
    DeleteUserPolicyRequest:
      properties:
        PolicyName:
          allOf:
          - $ref: '#/components/schemas/policyNameType'
          - description: '<p>The name identifying the policy document to delete.</p>
              <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
        UserName:
          allOf:
          - $ref: '#/components/schemas/existingUserNameType'
          - description: '<p>The name (friendly name, not ARN) identifying the user
              that the policy is embedded in.</p> <p>This parameter allows (through
              its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string
              of characters consisting of upper and lowercase alphanumeric characters
              with no spaces. You can also include any of the following characters:
              _+=,.@-</p>'
      required:
      - UserName
      - PolicyName
      title: DeleteUserPolicyRequest
      type: object
    DeleteUserRequest:
      properties:
        UserName:
          allOf:
          - $ref: '#/components/schemas/existingUserNameType'
          - description: '<p>The name of the user to delete.</p> <p>This parameter
              allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      required:
      - UserName
      title: DeleteUserRequest
      type: object
    DeleteVirtualMFADeviceRequest:
      properties:
        SerialNumber:
          allOf:
          - $ref: '#/components/schemas/serialNumberType'
          - description: '<p>The serial number that uniquely identifies the MFA device.
              For virtual MFA devices, the serial number is the same as the ARN.</p>
              <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: =,.@:/-</p>'
      required:
      - SerialNumber
      title: DeleteVirtualMFADeviceRequest
      type: object
    DeletionTaskFailureReasonType:
      description: <p>The reason that the service-linked role deletion failed.</p>
        <p>This data type is used as a response element in the <a>GetServiceLinkedRoleDeletionStatus</a>
        operation.</p>
      properties:
        Reason:
          allOf:
          - $ref: '#/components/schemas/ReasonType'
          - description: A short description of the reason that the service-linked
              role deletion failed.
        RoleUsageList:
          allOf:
          - $ref: '#/components/schemas/RoleUsageListType'
          - description: A list of objects that contains details about the service-linked
              role deletion failure, if that information is returned by the service.
              If the service-linked role has active sessions or if any resources that
              were used by the role have not been deleted from the linked service,
              the role can't be deleted. This parameter includes a list of the resources
              that are associated with the role and the Region in which the resources
              are being used.
      type: object
    DeletionTaskIdType:
      maxLength: 1000
      minLength: 1
      type: string
    DeletionTaskStatusType:
      enum:
      - SUCCEEDED
      - IN_PROGRESS
      - FAILED
      - NOT_STARTED
      type: string
    DetachGroupPolicyRequest:
      properties:
        GroupName:
          allOf:
          - $ref: '#/components/schemas/groupNameType'
          - description: '<p>The name (friendly name, not ARN) of the IAM group to
              detach the policy from.</p> <p>This parameter allows (through its <a
              href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of
              characters consisting of upper and lowercase alphanumeric characters
              with no spaces. You can also include any of the following characters:
              _+=,.@-</p>'
        PolicyArn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: <p>The Amazon Resource Name (ARN) of the IAM policy you want
              to detach.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
              Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
      required:
      - GroupName
      - PolicyArn
      title: DetachGroupPolicyRequest
      type: object
    DetachRolePolicyRequest:
      properties:
        PolicyArn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: <p>The Amazon Resource Name (ARN) of the IAM policy you want
              to detach.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
              Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        RoleName:
          allOf:
          - $ref: '#/components/schemas/roleNameType'
          - description: '<p>The name (friendly name, not ARN) of the IAM role to
              detach the policy from.</p> <p>This parameter allows (through its <a
              href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of
              characters consisting of upper and lowercase alphanumeric characters
              with no spaces. You can also include any of the following characters:
              _+=,.@-</p>'
      required:
      - RoleName
      - PolicyArn
      title: DetachRolePolicyRequest
      type: object
    DetachUserPolicyRequest:
      properties:
        PolicyArn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: <p>The Amazon Resource Name (ARN) of the IAM policy you want
              to detach.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
              Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        UserName:
          allOf:
          - $ref: '#/components/schemas/userNameType'
          - description: '<p>The name (friendly name, not ARN) of the IAM user to
              detach the policy from.</p> <p>This parameter allows (through its <a
              href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of
              characters consisting of upper and lowercase alphanumeric characters
              with no spaces. You can also include any of the following characters:
              _+=,.@-</p>'
      required:
      - UserName
      - PolicyArn
      title: DetachUserPolicyRequest
      type: object
    DuplicateCertificateException: {}
    DuplicateSSHPublicKeyException: {}
    EnableMFADeviceRequest:
      properties:
        AuthenticationCode1:
          allOf:
          - $ref: '#/components/schemas/authenticationCodeType'
          - description: <p>An authentication code emitted by the device. </p> <p>The
              format for this parameter is a string of six digits.</p> <important>
              <p>Submit your request immediately after generating the authentication
              codes. If you generate the codes and then wait too long to submit the
              request, the MFA device successfully associates with the user but the
              MFA device becomes out of sync. This happens because time-based one-time
              passwords (TOTP) expire after a short period of time. If this happens,
              you can <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_mfa_sync.html">resync
              the device</a>.</p> </important>
        AuthenticationCode2:
          allOf:
          - $ref: '#/components/schemas/authenticationCodeType'
          - description: <p>A subsequent authentication code emitted by the device.</p>
              <p>The format for this parameter is a string of six digits.</p> <important>
              <p>Submit your request immediately after generating the authentication
              codes. If you generate the codes and then wait too long to submit the
              request, the MFA device successfully associates with the user but the
              MFA device becomes out of sync. This happens because time-based one-time
              passwords (TOTP) expire after a short period of time. If this happens,
              you can <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_mfa_sync.html">resync
              the device</a>.</p> </important>
        SerialNumber:
          allOf:
          - $ref: '#/components/schemas/serialNumberType'
          - description: '<p>The serial number that uniquely identifies the MFA device.
              For virtual MFA devices, the serial number is the device ARN.</p> <p>This
              parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: =,.@:/-</p>'
        UserName:
          allOf:
          - $ref: '#/components/schemas/existingUserNameType'
          - description: '<p>The name of the IAM user for whom you want to enable
              the MFA device.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      required:
      - UserName
      - SerialNumber
      - AuthenticationCode1
      - AuthenticationCode2
      title: EnableMFADeviceRequest
      type: object
    EntityAlreadyExistsException: {}
    EntityDetails:
      description: <p>An object that contains details about when the IAM entities
        (users or roles) were last used in an attempt to access the specified Amazon
        Web Services service.</p> <p>This data type is a response element in the <a>GetServiceLastAccessedDetailsWithEntities</a>
        operation.</p>
      properties:
        EntityInfo:
          allOf:
          - $ref: '#/components/schemas/EntityInfo'
          - description: "The\_<code>EntityInfo</code> object that contains details\
              \ about the entity (user or role)."
        LastAuthenticated:
          allOf:
          - $ref: '#/components/schemas/dateType'
          - description: "<p>The date and time, in\_<a href=\"http://www.iso.org/iso/iso8601\"\
              >ISO 8601 date-time format</a>, when the authenticated entity last attempted\
              \ to access Amazon Web Services. Amazon Web Services does not report\
              \ unauthenticated requests.</p> <p>This field is null if no IAM entities\
              \ attempted to access the service within the <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#service-last-accessed-reporting-period\"\
              >reporting period</a>.</p>"
      required:
      - EntityInfo
      type: object
    EntityInfo:
      description: <p>Contains details about the specified entity (user or role).</p>
        <p>This data type is an element of the <a>EntityDetails</a> object.</p>
      properties:
        Arn:
          $ref: '#/components/schemas/arnType'
        Id:
          allOf:
          - $ref: '#/components/schemas/idType'
          - description: The identifier of the entity (user or role).
        Name:
          allOf:
          - $ref: '#/components/schemas/userNameType'
          - description: The name of the entity (user or role).
        Path:
          allOf:
          - $ref: '#/components/schemas/pathType'
          - description: 'The path to the entity (user or role). For more information
              about paths, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
              identifiers</a> in the <i>IAM User Guide</i>. '
        Type:
          allOf:
          - $ref: '#/components/schemas/policyOwnerEntityType'
          - description: The type of entity (user or role).
      required:
      - Arn
      - Name
      - Type
      - Id
      type: object
    EntityTemporarilyUnmodifiableException: {}
    EntityType:
      enum:
      - User
      - Role
      - Group
      - LocalManagedPolicy
      - AWSManagedPolicy
      type: string
    ErrorDetails:
      description: <p>Contains information about the reason that the operation failed.</p>
        <p>This data type is used as a response element in the <a>GetOrganizationsAccessReport</a>,
        <a>GetServiceLastAccessedDetails</a>, and <a>GetServiceLastAccessedDetailsWithEntities</a>
        operations.</p>
      properties:
        Code:
          allOf:
          - $ref: '#/components/schemas/stringType'
          - description: The error code associated with the operation failure.
        Message:
          allOf:
          - $ref: '#/components/schemas/stringType'
          - description: Detailed information about the reason that the operation
              failed.
      required:
      - Message
      - Code
      type: object
    EvalDecisionDetailsType:
      additionalProperties:
        $ref: '#/components/schemas/PolicyEvaluationDecisionType'
      type: object
    EvalDecisionSourceType:
      maxLength: 256
      minLength: 3
      type: string
    EvaluationResult:
      description: <p>Contains the results of a simulation.</p> <p>This data type
        is used by the return parameter of <code> <a>SimulateCustomPolicy</a> </code>
        and <code> <a>SimulatePrincipalPolicy</a> </code>.</p>
      properties:
        EvalActionName:
          allOf:
          - $ref: '#/components/schemas/ActionNameType'
          - description: The name of the API operation tested on the indicated resource.
        EvalDecision:
          allOf:
          - $ref: '#/components/schemas/PolicyEvaluationDecisionType'
          - description: The result of the simulation.
        EvalDecisionDetails:
          allOf:
          - $ref: '#/components/schemas/EvalDecisionDetailsType'
          - description: <p>Additional details about the results of the cross-account
              evaluation decision. This parameter is populated for only cross-account
              simulations. It contains a brief summary of how each policy type contributes
              to the final evaluation decision.</p> <p>If the simulation evaluates
              policies within the same account and includes a resource ARN, then the
              parameter is present but the response is empty. If the simulation evaluates
              policies within the same account and specifies all resources (<code>*</code>),
              then the parameter is not returned.</p> <p>When you make a cross-account
              request, Amazon Web Services evaluates the request in the trusting account
              and the trusted account. The request is allowed only if both evaluations
              return <code>true</code>. For more information about how policies are
              evaluated, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_evaluation-logic.html#policy-eval-basics">Evaluating
              policies within a single account</a>.</p> <p>If an Organizations SCP
              included in the evaluation denies access, the simulation ends. In this
              case, policy evaluation does not proceed any further and this parameter
              is not returned.</p>
        EvalResourceName:
          allOf:
          - $ref: '#/components/schemas/ResourceNameType'
          - description: The ARN of the resource that the indicated API operation
              was tested on.
        MatchedStatements:
          allOf:
          - $ref: '#/components/schemas/StatementListType'
          - description: A list of the statements in the input policies that determine
              the result for this scenario. Remember that even if multiple statements
              allow the operation on the resource, if only one statement denies that
              operation, then the explicit deny overrides any allow. In addition,
              the deny statement is the only entry included in the result.
        MissingContextValues:
          allOf:
          - $ref: '#/components/schemas/ContextKeyNamesResultListType'
          - description: A list of context keys that are required by the included
              input policies but that were not provided by one of the input parameters.
              This list is used when the resource in a simulation is "*", either explicitly,
              or when the <code>ResourceArns</code> parameter blank. If you include
              a list of resources, then any missing context values are instead included
              under the <code>ResourceSpecificResults</code> section. To discover
              the context keys used by a set of policies, you can call <a>GetContextKeysForCustomPolicy</a>
              or <a>GetContextKeysForPrincipalPolicy</a>.
        OrganizationsDecisionDetail:
          allOf:
          - $ref: '#/components/schemas/OrganizationsDecisionDetail'
          - description: A structure that details how Organizations and its service
              control policies affect the results of the simulation. Only applies
              if the simulated user's account is part of an organization.
        PermissionsBoundaryDecisionDetail:
          allOf:
          - $ref: '#/components/schemas/PermissionsBoundaryDecisionDetail'
          - description: Contains information about the effect that a permissions
              boundary has on a policy simulation when the boundary is applied to
              an IAM entity.
        ResourceSpecificResults:
          allOf:
          - $ref: '#/components/schemas/ResourceSpecificResultListType'
          - description: The individual results of the simulation of the API operation
              specified in EvalActionName on each resource.
      required:
      - EvalActionName
      - EvalDecision
      type: object
    EvaluationResultsListType:
      items:
        $ref: '#/components/schemas/EvaluationResult'
      type: array
    GenerateCredentialReportResponse:
      description: 'Contains the response to a successful <a>GenerateCredentialReport</a>
        request. '
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/ReportStateDescriptionType'
          - description: Information about the credential report.
        State:
          allOf:
          - $ref: '#/components/schemas/ReportStateType'
          - description: Information about the state of the credential report.
      type: object
    GenerateOrganizationsAccessReportRequest:
      properties:
        EntityPath:
          allOf:
          - $ref: '#/components/schemas/organizationsEntityPathType'
          - description: The path of the Organizations entity (root, OU, or account).
              You can build an entity path using the known structure of your organization.
              For example, assume that your account ID is <code>123456789012</code>
              and its parent OU ID is <code>ou-rge0-awsabcde</code>. The organization
              root ID is <code>r-f6g7h8i9j0example</code> and your organization ID
              is <code>o-a1b2c3d4e5</code>. Your entity path is <code>o-a1b2c3d4e5/r-f6g7h8i9j0example/ou-rge0-awsabcde/123456789012</code>.
        OrganizationsPolicyId:
          allOf:
          - $ref: '#/components/schemas/organizationsPolicyIdType'
          - description: <p>The identifier of the Organizations service control policy
              (SCP). This parameter is optional.</p> <p>This ID is used to generate
              information about when an account principal that is limited by the SCP
              attempted to access an Amazon Web Services service.</p>
      required:
      - EntityPath
      title: GenerateOrganizationsAccessReportRequest
      type: object
    GenerateOrganizationsAccessReportResponse:
      example:
        JobId: examplea-1234-b567-cde8-90fg123abcd4
      properties:
        JobId:
          allOf:
          - $ref: '#/components/schemas/jobIDType'
          - description: The job identifier that you can use in the <a>GetOrganizationsAccessReport</a>
              operation.
      type: object
    GenerateServiceLastAccessedDetailsRequest:
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: The ARN of the IAM resource (user, group, role, or managed
              policy) used to generate information about when the resource was last
              used in an attempt to access an Amazon Web Services service.
        Granularity:
          allOf:
          - $ref: '#/components/schemas/AccessAdvisorUsageGranularityType'
          - description: The level of detail that you want to generate. You can specify
              whether you want to generate information about the last attempt to access
              services or actions. If you specify service-level granularity, this
              operation generates only service data. If you specify action-level granularity,
              it generates service and action data. If you don't include this optional
              parameter, the operation generates service data.
      required:
      - Arn
      title: GenerateServiceLastAccessedDetailsRequest
      type: object
    GenerateServiceLastAccessedDetailsResponse:
      example:
        JobId: examplef-1305-c245-eba4-71fe298bcda7
      properties:
        JobId:
          allOf:
          - $ref: '#/components/schemas/jobIDType'
          - description: The <code>JobId</code> that you can use in the <a>GetServiceLastAccessedDetails</a>
              or <a>GetServiceLastAccessedDetailsWithEntities</a> operations. The
              <code>JobId</code> returned by <code>GenerateServiceLastAccessedDetail</code>
              must be used by the same role within a session, or by the same user
              when used to call <code>GetServiceLastAccessedDetail</code>.
      type: object
    GetAccessKeyLastUsedRequest:
      properties:
        AccessKeyId:
          allOf:
          - $ref: '#/components/schemas/accessKeyIdType'
          - description: <p>The identifier of an access key.</p> <p>This parameter
              allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters that can consist of any upper or
              lowercased letter or digit.</p>
      required:
      - AccessKeyId
      title: GetAccessKeyLastUsedRequest
      type: object
    GetAccessKeyLastUsedResponse:
      description: Contains the response to a successful <a>GetAccessKeyLastUsed</a>
        request. It is also returned as a member of the <a>AccessKeyMetaData</a> structure
        returned by the <a>ListAccessKeys</a> action.
      properties:
        AccessKeyLastUsed:
          allOf:
          - $ref: '#/components/schemas/AccessKeyLastUsed'
          - description: Contains information about the last time the access key was
              used.
        UserName:
          allOf:
          - $ref: '#/components/schemas/existingUserNameType'
          - description: <p>The name of the IAM user that owns this access key.</p>
              <p/>
      type: object
    GetAccountAuthorizationDetailsRequest:
      properties:
        Filter:
          allOf:
          - $ref: '#/components/schemas/entityListType'
          - description: <p>A list of entity types used to filter the results. Only
              the entities that match the types you specify are included in the output.
              Use the value <code>LocalManagedPolicy</code> to include customer managed
              policies.</p> <p>The format for this parameter is a comma-separated
              (if more than one) list of strings. Each string value in the list must
              be one of the valid values listed below.</p>
        Marker:
          allOf:
          - $ref: '#/components/schemas/markerType'
          - description: Use this parameter only when paginating results and only
              after you receive a response indicating that the results are truncated.
              Set it to the value of the <code>Marker</code> element in the response
              that you received to indicate where the next call should start.
        MaxItems:
          allOf:
          - $ref: '#/components/schemas/maxItemsType'
          - description: <p>Use this only when paginating results to indicate the
              maximum number of items you want in the response. If additional items
              exist beyond the maximum you specify, the <code>IsTruncated</code> response
              element is <code>true</code>.</p> <p>If you do not include this parameter,
              the number of items defaults to 100. Note that IAM might return fewer
              results, even when there are more results available. In that case, the
              <code>IsTruncated</code> response element returns <code>true</code>,
              and <code>Marker</code> contains a value to include in the subsequent
              call that tells the service where to continue from.</p>
      title: GetAccountAuthorizationDetailsRequest
      type: object
    GetAccountAuthorizationDetailsResponse:
      description: 'Contains the response to a successful <a>GetAccountAuthorizationDetails</a>
        request. '
      properties:
        GroupDetailList:
          allOf:
          - $ref: '#/components/schemas/groupDetailListType'
          - description: A list containing information about IAM groups.
        IsTruncated:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: A flag that indicates whether there are more items to return.
              If your results were truncated, you can make a subsequent pagination
              request using the <code>Marker</code> request parameter to retrieve
              more items. Note that IAM might return fewer than the <code>MaxItems</code>
              number of results even when there are more results available. We recommend
              that you check <code>IsTruncated</code> after every call to ensure that
              you receive all your results.
        Marker:
          allOf:
          - $ref: '#/components/schemas/responseMarkerType'
          - description: When <code>IsTruncated</code> is <code>true</code>, this
              element is present and contains the value to use for the <code>Marker</code>
              parameter in a subsequent pagination request.
        Policies:
          allOf:
          - $ref: '#/components/schemas/ManagedPolicyDetailListType'
          - description: A list containing information about managed policies.
        RoleDetailList:
          allOf:
          - $ref: '#/components/schemas/roleDetailListType'
          - description: A list containing information about IAM roles.
        UserDetailList:
          allOf:
          - $ref: '#/components/schemas/userDetailListType'
          - description: A list containing information about IAM users.
      type: object
    GetAccountPasswordPolicyResponse:
      description: 'Contains the response to a successful <a>GetAccountPasswordPolicy</a>
        request. '
      example:
        PasswordPolicy:
          AllowUsersToChangePassword: false
          ExpirePasswords: false
          HardExpiry: false
          MaxPasswordAge: 90
          MinimumPasswordLength: 8
          PasswordReusePrevention: 12
          RequireLowercaseCharacters: false
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercaseCharacters: false
      properties:
        PasswordPolicy:
          allOf:
          - $ref: '#/components/schemas/PasswordPolicy'
          - description: A structure that contains details about the account's password
              policy.
      required:
      - PasswordPolicy
      type: object
    GetAccountSummaryResponse:
      description: 'Contains the response to a successful <a>GetAccountSummary</a>
        request. '
      example:
        SummaryMap:
          AccessKeysPerUserQuota: 2
          AccountAccessKeysPresent: 1
          AccountMFAEnabled: 0
          AccountSigningCertificatesPresent: 0
          AttachedPoliciesPerGroupQuota: 10
          AttachedPoliciesPerRoleQuota: 10
          AttachedPoliciesPerUserQuota: 10
          GlobalEndpointTokenVersion: 2
          GroupPolicySizeQuota: 5120
          Groups: 15
          GroupsPerUserQuota: 10
          GroupsQuota: 100
          MFADevices: 6
          MFADevicesInUse: 3
          Policies: 8
          PoliciesQuota: 1000
          PolicySizeQuota: 5120
          PolicyVersionsInUse: 22
          PolicyVersionsInUseQuota: 10000
          ServerCertificates: 1
          ServerCertificatesQuota: 20
          SigningCertificatesPerUserQuota: 2
          UserPolicySizeQuota: 2048
          Users: 27
          UsersQuota: 5000
          VersionsPerPolicyQuota: 5
      properties:
        SummaryMap:
          allOf:
          - $ref: '#/components/schemas/summaryMapType'
          - description: "A set of key\u2013value pairs containing information about\
              \ IAM entity usage and IAM quotas."
      type: object
    GetContextKeysForCustomPolicyRequest:
      properties:
        PolicyInputList:
          allOf:
          - $ref: '#/components/schemas/SimulationPolicyListType'
          - description: <p>A list of policies for which you want the list of context
              keys referenced in those policies. Each document is specified as a string
              containing the complete, valid JSON text of an IAM policy.</p> <p>The
              <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used to
              validate this parameter is a string of characters consisting of the
              following:</p> <ul> <li> <p>Any printable ASCII character ranging from
              the space character (<code>\u0020</code>) through the end of the ASCII
              character range</p> </li> <li> <p>The printable characters in the Basic
              Latin and Latin-1 Supplement character set (through <code>\u00FF</code>)</p>
              </li> <li> <p>The special characters tab (<code>\u0009</code>), line
              feed (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p>
              </li> </ul>
      required:
      - PolicyInputList
      title: GetContextKeysForCustomPolicyRequest
      type: object
    GetContextKeysForPolicyResponse:
      description: 'Contains the response to a successful <a>GetContextKeysForPrincipalPolicy</a>
        or <a>GetContextKeysForCustomPolicy</a> request. '
      properties:
        ContextKeyNames:
          allOf:
          - $ref: '#/components/schemas/ContextKeyNamesResultListType'
          - description: The list of context keys that are referenced in the input
              policies.
      type: object
    GetContextKeysForPrincipalPolicyRequest:
      properties:
        PolicyInputList:
          allOf:
          - $ref: '#/components/schemas/SimulationPolicyListType'
          - description: <p>An optional list of additional policies for which you
              want the list of context keys that are referenced.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a> used to validate this parameter is a string of characters
              consisting of the following:</p> <ul> <li> <p>Any printable ASCII character
              ranging from the space character (<code>\u0020</code>) through the end
              of the ASCII character range</p> </li> <li> <p>The printable characters
              in the Basic Latin and Latin-1 Supplement character set (through <code>\u00FF</code>)</p>
              </li> <li> <p>The special characters tab (<code>\u0009</code>), line
              feed (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p>
              </li> </ul>
        PolicySourceArn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: <p>The ARN of a user, group, or role whose policies contain
              the context keys that you want listed. If you specify a user, the list
              includes context keys that are found in all policies that are attached
              to the user. The list also includes all groups that the user is a member
              of. If you pick a group or a role, then it includes only those context
              keys that are found in policies attached to that entity. Note that all
              parameters are shown in unencoded form here for clarity, but must be
              URL encoded to be included as a part of a real HTML request.</p> <p>For
              more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
              Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
      required:
      - PolicySourceArn
      title: GetContextKeysForPrincipalPolicyRequest
      type: object
    GetCredentialReportResponse:
      description: 'Contains the response to a successful <a>GetCredentialReport</a>
        request. '
      properties:
        Content:
          allOf:
          - $ref: '#/components/schemas/ReportContentType'
          - description: Contains the credential report. The report is Base64-encoded.
        GeneratedTime:
          allOf:
          - $ref: '#/components/schemas/dateType'
          - description: ' The date and time when the credential report was created,
              in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>.'
        ReportFormat:
          allOf:
          - $ref: '#/components/schemas/ReportFormatType'
          - description: The format (MIME type) of the credential report.
      type: object
    GetGroupPolicyRequest:
      properties:
        GroupName:
          allOf:
          - $ref: '#/components/schemas/groupNameType'
          - description: '<p>The name of the group the policy is associated with.</p>
              <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
        PolicyName:
          allOf:
          - $ref: '#/components/schemas/policyNameType'
          - description: '<p>The name of the policy document to get.</p> <p>This parameter
              allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      required:
      - GroupName
      - PolicyName
      title: GetGroupPolicyRequest
      type: object
    GetGroupPolicyResponse:
      description: 'Contains the response to a successful <a>GetGroupPolicy</a> request. '
      properties:
        GroupName:
          allOf:
          - $ref: '#/components/schemas/groupNameType'
          - description: The group the policy is associated with.
        PolicyDocument:
          allOf:
          - $ref: '#/components/schemas/policyDocumentType'
          - description: <p>The policy document.</p> <p>IAM stores policies in JSON
              format. However, resources that were created using CloudFormation templates
              can be formatted in YAML. CloudFormation always converts a YAML policy
              to JSON format before submitting it to IAM.</p>
        PolicyName:
          allOf:
          - $ref: '#/components/schemas/policyNameType'
          - description: The name of the policy.
      required:
      - GroupName
      - PolicyName
      - PolicyDocument
      type: object
    GetGroupRequest:
      properties:
        GroupName:
          allOf:
          - $ref: '#/components/schemas/groupNameType'
          - description: '<p>The name of the group.</p> <p>This parameter allows (through
              its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string
              of characters consisting of upper and lowercase alphanumeric characters
              with no spaces. You can also include any of the following characters:
              _+=,.@-</p>'
        Marker:
          allOf:
          - $ref: '#/components/schemas/markerType'
          - description: Use this parameter only when paginating results and only
              after you receive a response indicating that the results are truncated.
              Set it to the value of the <code>Marker</code> element in the response
              that you received to indicate where the next call should start.
        MaxItems:
          allOf:
          - $ref: '#/components/schemas/maxItemsType'
          - description: <p>Use this only when paginating results to indicate the
              maximum number of items you want in the response. If additional items
              exist beyond the maximum you specify, the <code>IsTruncated</code> response
              element is <code>true</code>.</p> <p>If you do not include this parameter,
              the number of items defaults to 100. Note that IAM might return fewer
              results, even when there are more results available. In that case, the
              <code>IsTruncated</code> response element returns <code>true</code>,
              and <code>Marker</code> contains a value to include in the subsequent
              call that tells the service where to continue from.</p>
      required:
      - GroupName
      title: GetGroupRequest
      type: object
    GetGroupResponse:
      description: 'Contains the response to a successful <a>GetGroup</a> request. '
      properties:
        Group:
          allOf:
          - $ref: '#/components/schemas/Group'
          - description: A structure that contains details about the group.
        IsTruncated:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: A flag that indicates whether there are more items to return.
              If your results were truncated, you can make a subsequent pagination
              request using the <code>Marker</code> request parameter to retrieve
              more items. Note that IAM might return fewer than the <code>MaxItems</code>
              number of results even when there are more results available. We recommend
              that you check <code>IsTruncated</code> after every call to ensure that
              you receive all your results.
        Marker:
          allOf:
          - $ref: '#/components/schemas/responseMarkerType'
          - description: When <code>IsTruncated</code> is <code>true</code>, this
              element is present and contains the value to use for the <code>Marker</code>
              parameter in a subsequent pagination request.
        Users:
          allOf:
          - $ref: '#/components/schemas/userListType'
          - description: A list of users in the group.
      required:
      - Group
      - Users
      type: object
    GetInstanceProfileRequest:
      properties:
        InstanceProfileName:
          allOf:
          - $ref: '#/components/schemas/instanceProfileNameType'
          - description: '<p>The name of the instance profile to get information about.</p>
              <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      required:
      - InstanceProfileName
      title: GetInstanceProfileRequest
      type: object
    GetInstanceProfileResponse:
      description: 'Contains the response to a successful <a>GetInstanceProfile</a>
        request. '
      example:
        InstanceProfile:
          Arn: arn:aws:iam::336924118301:instance-profile/ExampleInstanceProfile
          CreateDate: '2013-06-12T23:52:02Z'
          InstanceProfileId: AID2MAB8DPLSRHEXAMPLE
          InstanceProfileName: ExampleInstanceProfile
          Path: /
          Roles:
          - Arn: arn:aws:iam::336924118301:role/Test-Role
            AssumeRolePolicyDocument: <URL-encoded-JSON>
            CreateDate: '2013-01-09T06:33:26Z'
            Path: /
            RoleId: AIDGPMS9RO4H3FEXAMPLE
            RoleName: Test-Role
      properties:
        InstanceProfile:
          allOf:
          - $ref: '#/components/schemas/InstanceProfile'
          - description: A structure containing details about the instance profile.
      required:
      - InstanceProfile
      type: object
    GetLoginProfileRequest:
      properties:
        UserName:
          allOf:
          - $ref: '#/components/schemas/userNameType'
          - description: '<p>The name of the user whose login profile you want to
              retrieve.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      required:
      - UserName
      title: GetLoginProfileRequest
      type: object
    GetLoginProfileResponse:
      description: 'Contains the response to a successful <a>GetLoginProfile</a> request. '
      example:
        LoginProfile:
          CreateDate: '2012-09-21T23:03:39Z'
          UserName: Anika
      properties:
        LoginProfile:
          allOf:
          - $ref: '#/components/schemas/LoginProfile'
          - description: A structure containing the user name and the profile creation
              date for the user.
      required:
      - LoginProfile
      type: object
    GetOpenIDConnectProviderRequest:
      properties:
        OpenIDConnectProviderArn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: <p>The Amazon Resource Name (ARN) of the OIDC provider resource
              object in IAM to get information for. You can get a list of OIDC provider
              resource ARNs by using the <a>ListOpenIDConnectProviders</a> operation.</p>
              <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
              Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
      required:
      - OpenIDConnectProviderArn
      title: GetOpenIDConnectProviderRequest
      type: object
    GetOpenIDConnectProviderResponse:
      description: 'Contains the response to a successful <a>GetOpenIDConnectProvider</a>
        request. '
      properties:
        ClientIDList:
          allOf:
          - $ref: '#/components/schemas/clientIDListType'
          - description: A list of client IDs (also known as audiences) that are associated
              with the specified IAM OIDC provider resource object. For more information,
              see <a>CreateOpenIDConnectProvider</a>.
        CreateDate:
          allOf:
          - $ref: '#/components/schemas/dateType'
          - description: The date and time when the IAM OIDC provider resource object
              was created in the Amazon Web Services account.
        Tags:
          allOf:
          - $ref: '#/components/schemas/tagListType'
          - description: A list of tags that are attached to the specified IAM OIDC
              provider. The returned list of tags is sorted by tag key. For more information
              about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
              IAM resources</a> in the <i>IAM User Guide</i>.
        ThumbprintList:
          allOf:
          - $ref: '#/components/schemas/thumbprintListType'
          - description: 'A list of certificate thumbprints that are associated with
              the specified IAM OIDC provider resource object. For more information,
              see <a>CreateOpenIDConnectProvider</a>. '
        Url:
          allOf:
          - $ref: '#/components/schemas/OpenIDConnectProviderUrlType'
          - description: The URL that the IAM OIDC provider resource object is associated
              with. For more information, see <a>CreateOpenIDConnectProvider</a>.
      type: object
    GetOrganizationsAccessReportRequest:
      properties:
        JobId:
          allOf:
          - $ref: '#/components/schemas/jobIDType'
          - description: The identifier of the request generated by the <a>GenerateOrganizationsAccessReport</a>
              operation.
        Marker:
          allOf:
          - $ref: '#/components/schemas/markerType'
          - description: Use this parameter only when paginating results and only
              after you receive a response indicating that the results are truncated.
              Set it to the value of the <code>Marker</code> element in the response
              that you received to indicate where the next call should start.
        MaxItems:
          allOf:
          - $ref: '#/components/schemas/maxItemsType'
          - description: <p>Use this only when paginating results to indicate the
              maximum number of items you want in the response. If additional items
              exist beyond the maximum you specify, the <code>IsTruncated</code> response
              element is <code>true</code>.</p> <p>If you do not include this parameter,
              the number of items defaults to 100. Note that IAM might return fewer
              results, even when there are more results available. In that case, the
              <code>IsTruncated</code> response element returns <code>true</code>,
              and <code>Marker</code> contains a value to include in the subsequent
              call that tells the service where to continue from.</p>
        SortKey:
          allOf:
          - $ref: '#/components/schemas/sortKeyType'
          - description: The key that is used to sort the results. If you choose the
              namespace key, the results are returned in alphabetical order. If you
              choose the time key, the results are sorted numerically by the date
              and time.
      required:
      - JobId
      title: GetOrganizationsAccessReportRequest
      type: object
    GetOrganizationsAccessReportResponse:
      example:
        AccessDetails:
        - EntityPath: o-a1b2c3d4e5/r-f6g7h8i9j0example/ou-1a2b3c-k9l8m7n6o5example/111122223333
          LastAuthenticatedTime: '2019-05-25T16:29:52Z'
          Region: us-east-1
          ServiceName: Amazon DynamoDB
          ServiceNamespace: dynamodb
          TotalAuthenticatedEntities: 2
        - EntityPath: o-a1b2c3d4e5/r-f6g7h8i9j0example/ou-1a2b3c-k9l8m7n6o5example/123456789012
          LastAuthenticatedTime: '2019-06-15T13:12:06Z'
          Region: us-east-1
          ServiceName: AWS Identity and Access Management
          ServiceNamespace: iam
          TotalAuthenticatedEntities: 4
        - ServiceName: Amazon Simple Storage Service
          ServiceNamespace: s3
          TotalAuthenticatedEntities: 0
        IsTruncated: false
        JobCompletionDate: '2019-06-18T19:47:35.241Z'
        JobCreationDate: '2019-06-18T19:47:31.466Z'
        JobStatus: COMPLETED
        NumberOfServicesAccessible: 3
        NumberOfServicesNotAccessed: 1
      properties:
        AccessDetails:
          allOf:
          - $ref: '#/components/schemas/AccessDetails'
          - description: "An\_object that contains details about the most recent attempt\
              \ to access the service."
        ErrorDetails:
          $ref: '#/components/schemas/ErrorDetails'
        IsTruncated:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: A flag that indicates whether there are more items to return.
              If your results were truncated, you can make a subsequent pagination
              request using the <code>Marker</code> request parameter to retrieve
              more items. Note that IAM might return fewer than the <code>MaxItems</code>
              number of results even when there are more results available. We recommend
              that you check <code>IsTruncated</code> after every call to ensure that
              you receive all your results.
        JobCompletionDate:
          allOf:
          - $ref: '#/components/schemas/dateType'
          - description: "<p>The date and time, in\_<a href=\"http://www.iso.org/iso/iso8601\"\
              >ISO 8601 date-time format</a>, when the generated report job was completed\
              \ or failed.</p> <p>This field is null if the job is still in progress,\
              \ as indicated by a job status value of <code>IN_PROGRESS</code>.</p>"
        JobCreationDate:
          allOf:
          - $ref: '#/components/schemas/dateType'
          - description: "The date and time, in\_<a href=\"http://www.iso.org/iso/iso8601\"\
              >ISO 8601 date-time format</a>, when the report job was created."
        JobStatus:
          allOf:
          - $ref: '#/components/schemas/jobStatusType'
          - description: The status of the job.
        Marker:
          allOf:
          - $ref: '#/components/schemas/markerType'
          - description: When <code>IsTruncated</code> is <code>true</code>, this
              element is present and contains the value to use for the <code>Marker</code>
              parameter in a subsequent pagination request.
        NumberOfServicesAccessible:
          allOf:
          - $ref: '#/components/schemas/integerType'
          - description: The number of services that the applicable SCPs allow account
              principals to access.
        NumberOfServicesNotAccessed:
          allOf:
          - $ref: '#/components/schemas/integerType'
          - description: The number of services that account principals are allowed
              but did not attempt to access.
      required:
      - JobStatus
      - JobCreationDate
      type: object
    GetPolicyRequest:
      properties:
        PolicyArn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: <p>The Amazon Resource Name (ARN) of the managed policy that
              you want information about.</p> <p>For more information about ARNs,
              see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
              Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
      required:
      - PolicyArn
      title: GetPolicyRequest
      type: object
    GetPolicyResponse:
      description: 'Contains the response to a successful <a>GetPolicy</a> request. '
      properties:
        Policy:
          allOf:
          - $ref: '#/components/schemas/Policy'
          - description: A structure containing details about the policy.
      type: object
    GetPolicyVersionRequest:
      properties:
        PolicyArn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: <p>The Amazon Resource Name (ARN) of the managed policy that
              you want information about.</p> <p>For more information about ARNs,
              see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
              Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        VersionId:
          allOf:
          - $ref: '#/components/schemas/policyVersionIdType'
          - description: <p>Identifies the policy version to retrieve.</p> <p>This
              parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters that consists of the lowercase letter
              'v' followed by one or two digits, and optionally followed by a period
              '.' and a string of letters and digits.</p>
      required:
      - PolicyArn
      - VersionId
      title: GetPolicyVersionRequest
      type: object
    GetPolicyVersionResponse:
      description: 'Contains the response to a successful <a>GetPolicyVersion</a>
        request. '
      properties:
        PolicyVersion:
          allOf:
          - $ref: '#/components/schemas/PolicyVersion'
          - description: A structure containing details about the policy version.
      type: object
    GetRolePolicyRequest:
      properties:
        PolicyName:
          allOf:
          - $ref: '#/components/schemas/policyNameType'
          - description: '<p>The name of the policy document to get.</p> <p>This parameter
              allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
        RoleName:
          allOf:
          - $ref: '#/components/schemas/roleNameType'
          - description: '<p>The name of the role associated with the policy.</p>
              <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      required:
      - RoleName
      - PolicyName
      title: GetRolePolicyRequest
      type: object
    GetRolePolicyResponse:
      description: 'Contains the response to a successful <a>GetRolePolicy</a> request. '
      properties:
        PolicyDocument:
          allOf:
          - $ref: '#/components/schemas/policyDocumentType'
          - description: <p>The policy document.</p> <p>IAM stores policies in JSON
              format. However, resources that were created using CloudFormation templates
              can be formatted in YAML. CloudFormation always converts a YAML policy
              to JSON format before submitting it to IAM.</p>
        PolicyName:
          allOf:
          - $ref: '#/components/schemas/policyNameType'
          - description: The name of the policy.
        RoleName:
          allOf:
          - $ref: '#/components/schemas/roleNameType'
          - description: The role the policy is associated with.
      required:
      - RoleName
      - PolicyName
      - PolicyDocument
      type: object
    GetRoleRequest:
      properties:
        RoleName:
          allOf:
          - $ref: '#/components/schemas/roleNameType'
          - description: '<p>The name of the IAM role to get information about.</p>
              <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      required:
      - RoleName
      title: GetRoleRequest
      type: object
    GetRoleResponse:
      description: 'Contains the response to a successful <a>GetRole</a> request. '
      example:
        Role:
          Arn: arn:aws:iam::123456789012:role/Test-Role
          AssumeRolePolicyDocument: <URL-encoded-JSON>
          CreateDate: '2013-04-18T05:01:58Z'
          MaxSessionDuration: 3600
          Path: /
          RoleId: AROADBQP57FF2AEXAMPLE
          RoleLastUsed:
            LastUsedDate: '2019-11-18T05:01:58Z'
            Region: us-east-1
          RoleName: Test-Role
      properties:
        Role:
          allOf:
          - $ref: '#/components/schemas/Role'
          - description: A structure containing details about the IAM role.
      required:
      - Role
      type: object
    GetSAMLProviderRequest:
      properties:
        SAMLProviderArn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: <p>The Amazon Resource Name (ARN) of the SAML provider resource
              object in IAM to get information about.</p> <p>For more information
              about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
              Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
      required:
      - SAMLProviderArn
      title: GetSAMLProviderRequest
      type: object
    GetSAMLProviderResponse:
      description: 'Contains the response to a successful <a>GetSAMLProvider</a> request. '
      properties:
        CreateDate:
          allOf:
          - $ref: '#/components/schemas/dateType'
          - description: The date and time when the SAML provider was created.
        SAMLMetadataDocument:
          allOf:
          - $ref: '#/components/schemas/SAMLMetadataDocumentType'
          - description: The XML metadata document that includes information about
              an identity provider.
        Tags:
          allOf:
          - $ref: '#/components/schemas/tagListType'
          - description: A list of tags that are attached to the specified IAM SAML
              provider. The returned list of tags is sorted by tag key. For more information
              about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
              IAM resources</a> in the <i>IAM User Guide</i>.
        ValidUntil:
          allOf:
          - $ref: '#/components/schemas/dateType'
          - description: The expiration date and time for the SAML provider.
      type: object
    GetSSHPublicKeyRequest:
      properties:
        Encoding:
          allOf:
          - $ref: '#/components/schemas/encodingType'
          - description: Specifies the public key encoding format to use in the response.
              To retrieve the public key in ssh-rsa format, use <code>SSH</code>.
              To retrieve the public key in PEM format, use <code>PEM</code>.
        SSHPublicKeyId:
          allOf:
          - $ref: '#/components/schemas/publicKeyIdType'
          - description: <p>The unique identifier for the SSH public key.</p> <p>This
              parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters that can consist of any upper or
              lowercased letter or digit.</p>
        UserName:
          allOf:
          - $ref: '#/components/schemas/userNameType'
          - description: '<p>The name of the IAM user associated with the SSH public
              key.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      required:
      - UserName
      - SSHPublicKeyId
      - Encoding
      title: GetSSHPublicKeyRequest
      type: object
    GetSSHPublicKeyResponse:
      description: Contains the response to a successful <a>GetSSHPublicKey</a> request.
      properties:
        SSHPublicKey:
          allOf:
          - $ref: '#/components/schemas/SSHPublicKey'
          - description: A structure containing details about the SSH public key.
      type: object
    GetServerCertificateRequest:
      properties:
        ServerCertificateName:
          allOf:
          - $ref: '#/components/schemas/serverCertificateNameType'
          - description: '<p>The name of the server certificate you want to retrieve
              information about.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      required:
      - ServerCertificateName
      title: GetServerCertificateRequest
      type: object
    GetServerCertificateResponse:
      description: 'Contains the response to a successful <a>GetServerCertificate</a>
        request. '
      properties:
        ServerCertificate:
          allOf:
          - $ref: '#/components/schemas/ServerCertificate'
          - description: A structure containing details about the server certificate.
      required:
      - ServerCertificate
      type: object
    GetServiceLastAccessedDetailsRequest:
      properties:
        JobId:
          allOf:
          - $ref: '#/components/schemas/jobIDType'
          - description: The ID of the request generated by the <a>GenerateServiceLastAccessedDetails</a>
              operation. The <code>JobId</code> returned by <code>GenerateServiceLastAccessedDetail</code>
              must be used by the same role within a session, or by the same user
              when used to call <code>GetServiceLastAccessedDetail</code>.
        Marker:
          allOf:
          - $ref: '#/components/schemas/markerType'
          - description: Use this parameter only when paginating results and only
              after you receive a response indicating that the results are truncated.
              Set it to the value of the <code>Marker</code> element in the response
              that you received to indicate where the next call should start.
        MaxItems:
          allOf:
          - $ref: '#/components/schemas/maxItemsType'
          - description: <p>Use this only when paginating results to indicate the
              maximum number of items you want in the response. If additional items
              exist beyond the maximum you specify, the <code>IsTruncated</code> response
              element is <code>true</code>.</p> <p>If you do not include this parameter,
              the number of items defaults to 100. Note that IAM might return fewer
              results, even when there are more results available. In that case, the
              <code>IsTruncated</code> response element returns <code>true</code>,
              and <code>Marker</code> contains a value to include in the subsequent
              call that tells the service where to continue from.</p>
      required:
      - JobId
      title: GetServiceLastAccessedDetailsRequest
      type: object
    GetServiceLastAccessedDetailsResponse:
      example:
        IsTruncated: false
        JobCompletionDate: '2018-10-24T19:47:35.241Z'
        JobCreationDate: '2018-10-24T19:47:31.466Z'
        JobStatus: COMPLETED
        ServicesLastAccessed:
        - LastAuthenticated: '2018-10-24T19:11:00Z'
          LastAuthenticatedEntity: arn:aws:iam::123456789012:user/AWSExampleUser01
          ServiceName: AWS Identity and Access Management
          ServiceNamespace: iam
          TotalAuthenticatedEntities: 2
        - ServiceName: Amazon Simple Storage Service
          ServiceNamespace: s3
          TotalAuthenticatedEntities: 0
      properties:
        Error:
          allOf:
          - $ref: '#/components/schemas/ErrorDetails'
          - description: An object that contains details about the reason the operation
              failed.
        IsTruncated:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: A flag that indicates whether there are more items to return.
              If your results were truncated, you can make a subsequent pagination
              request using the <code>Marker</code> request parameter to retrieve
              more items. Note that IAM might return fewer than the <code>MaxItems</code>
              number of results even when there are more results available. We recommend
              that you check <code>IsTruncated</code> after every call to ensure that
              you receive all your results.
        JobCompletionDate:
          allOf:
          - $ref: '#/components/schemas/dateType'
          - description: "<p>The date and time, in\_<a href=\"http://www.iso.org/iso/iso8601\"\
              >ISO 8601 date-time format</a>, when the generated report job was completed\
              \ or failed.</p> <p>This field is null if the job is still in progress,\
              \ as indicated by a job status value of <code>IN_PROGRESS</code>.</p>"
        JobCreationDate:
          allOf:
          - $ref: '#/components/schemas/dateType'
          - description: "The date and time, in\_<a href=\"http://www.iso.org/iso/iso8601\"\
              >ISO 8601 date-time format</a>, when the report job was created."
        JobStatus:
          allOf:
          - $ref: '#/components/schemas/jobStatusType'
          - description: The status of the job.
        JobType:
          allOf:
          - $ref: '#/components/schemas/AccessAdvisorUsageGranularityType'
          - description: The type of job. Service jobs return information about when
              each service was last accessed. Action jobs also include information
              about when tracked actions within the service were last accessed.
        Marker:
          allOf:
          - $ref: '#/components/schemas/responseMarkerType'
          - description: When <code>IsTruncated</code> is <code>true</code>, this
              element is present and contains the value to use for the <code>Marker</code>
              parameter in a subsequent pagination request.
        ServicesLastAccessed:
          allOf:
          - $ref: '#/components/schemas/ServicesLastAccessed'
          - description: " A\_<code>ServiceLastAccessed</code> object that contains\
              \ details about the most recent attempt to access the service."
      required:
      - JobStatus
      - JobCreationDate
      - ServicesLastAccessed
      - JobCompletionDate
      type: object
    GetServiceLastAccessedDetailsWithEntitiesRequest:
      properties:
        JobId:
          allOf:
          - $ref: '#/components/schemas/jobIDType'
          - description: The ID of the request generated by the <code>GenerateServiceLastAccessedDetails</code>
              operation.
        Marker:
          allOf:
          - $ref: '#/components/schemas/markerType'
          - description: Use this parameter only when paginating results and only
              after you receive a response indicating that the results are truncated.
              Set it to the value of the <code>Marker</code> element in the response
              that you received to indicate where the next call should start.
        MaxItems:
          allOf:
          - $ref: '#/components/schemas/maxItemsType'
          - description: <p>Use this only when paginating results to indicate the
              maximum number of items you want in the response. If additional items
              exist beyond the maximum you specify, the <code>IsTruncated</code> response
              element is <code>true</code>.</p> <p>If you do not include this parameter,
              the number of items defaults to 100. Note that IAM might return fewer
              results, even when there are more results available. In that case, the
              <code>IsTruncated</code> response element returns <code>true</code>,
              and <code>Marker</code> contains a value to include in the subsequent
              call that tells the service where to continue from.</p>
        ServiceNamespace:
          allOf:
          - $ref: '#/components/schemas/serviceNamespaceType'
          - description: "<p>The service namespace for an Amazon Web Services service.\
              \ Provide the service namespace to learn when the IAM entity last attempted\
              \ to access the specified service.</p> <p>To learn the service namespace\
              \ for a service, see <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/reference_policies_actions-resources-contextkeys.html\"\
              >Actions, resources, and condition keys for Amazon Web Services services</a>\
              \ in the <i>IAM User Guide</i>. Choose the name of the service to view\
              \ details for that service. In the first paragraph, find the service\
              \ prefix. For example, <code>(service prefix: a4b)</code>. For more\
              \ information about service namespaces, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#genref-aws-service-namespaces\"\
              >Amazon Web Services service namespaces</a> in the\_<i>Amazon Web Services\
              \ General Reference</i>.</p>"
      required:
      - JobId
      - ServiceNamespace
      title: GetServiceLastAccessedDetailsWithEntitiesRequest
      type: object
    GetServiceLastAccessedDetailsWithEntitiesResponse:
      example:
        EntityDetailsList:
        - EntityInfo:
            Arn: arn:aws:iam::123456789012:user/AWSExampleUser01
            Id: AIDAEX2EXAMPLEB6IGCDC
            Name: AWSExampleUser01
            Path: /
            Type: USER
          LastAuthenticated: '2018-10-24T19:10:00Z'
        - EntityInfo:
            Arn: arn:aws:iam::123456789012:role/AWSExampleRole01
            Id: AROAEAEXAMPLEIANXSIU4
            Name: AWSExampleRole01
            Path: /
            Type: ROLE
        IsTruncated: false
        JobCompletionDate: '2018-10-24T19:47:35.241Z'
        JobCreationDate: '2018-10-24T19:47:31.466Z'
        JobStatus: COMPLETED
      properties:
        EntityDetailsList:
          allOf:
          - $ref: '#/components/schemas/entityDetailsListType'
          - description: "An\_<code>EntityDetailsList</code> object that contains\
              \ details about when an IAM entity (user or role) used group or policy\
              \ permissions in an attempt to access the specified Amazon Web Services\
              \ service."
        Error:
          allOf:
          - $ref: '#/components/schemas/ErrorDetails'
          - description: An object that contains details about the reason the operation
              failed.
        IsTruncated:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: A flag that indicates whether there are more items to return.
              If your results were truncated, you can make a subsequent pagination
              request using the <code>Marker</code> request parameter to retrieve
              more items. Note that IAM might return fewer than the <code>MaxItems</code>
              number of results even when there are more results available. We recommend
              that you check <code>IsTruncated</code> after every call to ensure that
              you receive all your results.
        JobCompletionDate:
          allOf:
          - $ref: '#/components/schemas/dateType'
          - description: "<p>The date and time, in\_<a href=\"http://www.iso.org/iso/iso8601\"\
              >ISO 8601 date-time format</a>, when the generated report job was completed\
              \ or failed.</p> <p>This field is null if the job is still in progress,\
              \ as indicated by a job status value of <code>IN_PROGRESS</code>.</p>"
        JobCreationDate:
          allOf:
          - $ref: '#/components/schemas/dateType'
          - description: "The date and time, in\_<a href=\"http://www.iso.org/iso/iso8601\"\
              >ISO 8601 date-time format</a>, when the report job was created."
        JobStatus:
          allOf:
          - $ref: '#/components/schemas/jobStatusType'
          - description: The status of the job.
        Marker:
          allOf:
          - $ref: '#/components/schemas/responseMarkerType'
          - description: When <code>IsTruncated</code> is <code>true</code>, this
              element is present and contains the value to use for the <code>Marker</code>
              parameter in a subsequent pagination request.
      required:
      - JobStatus
      - JobCreationDate
      - JobCompletionDate
      - EntityDetailsList
      type: object
    GetServiceLinkedRoleDeletionStatusRequest:
      properties:
        DeletionTaskId:
          allOf:
          - $ref: '#/components/schemas/DeletionTaskIdType'
          - description: The deletion task identifier. This identifier is returned
              by the <a>DeleteServiceLinkedRole</a> operation in the format <code>task/aws-service-role/&lt;service-principal-name&gt;/&lt;role-name&gt;/&lt;task-uuid&gt;</code>.
      required:
      - DeletionTaskId
      title: GetServiceLinkedRoleDeletionStatusRequest
      type: object
    GetServiceLinkedRoleDeletionStatusResponse:
      properties:
        Reason:
          allOf:
          - $ref: '#/components/schemas/DeletionTaskFailureReasonType'
          - description: An object that contains details about the reason the deletion
              failed.
        Status:
          allOf:
          - $ref: '#/components/schemas/DeletionTaskStatusType'
          - description: The status of the deletion.
      required:
      - Status
      type: object
    GetUserPolicyRequest:
      properties:
        PolicyName:
          allOf:
          - $ref: '#/components/schemas/policyNameType'
          - description: '<p>The name of the policy document to get.</p> <p>This parameter
              allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
        UserName:
          allOf:
          - $ref: '#/components/schemas/existingUserNameType'
          - description: '<p>The name of the user who the policy is associated with.</p>
              <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      required:
      - UserName
      - PolicyName
      title: GetUserPolicyRequest
      type: object
    GetUserPolicyResponse:
      description: 'Contains the response to a successful <a>GetUserPolicy</a> request. '
      properties:
        PolicyDocument:
          allOf:
          - $ref: '#/components/schemas/policyDocumentType'
          - description: <p>The policy document.</p> <p>IAM stores policies in JSON
              format. However, resources that were created using CloudFormation templates
              can be formatted in YAML. CloudFormation always converts a YAML policy
              to JSON format before submitting it to IAM.</p>
        PolicyName:
          allOf:
          - $ref: '#/components/schemas/policyNameType'
          - description: The name of the policy.
        UserName:
          allOf:
          - $ref: '#/components/schemas/existingUserNameType'
          - description: The user the policy is associated with.
      required:
      - UserName
      - PolicyName
      - PolicyDocument
      type: object
    GetUserRequest:
      properties:
        UserName:
          allOf:
          - $ref: '#/components/schemas/existingUserNameType'
          - description: '<p>The name of the user to get information about.</p> <p>This
              parameter is optional. If it is not included, it defaults to the user
              making the request. This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      title: GetUserRequest
      type: object
    GetUserResponse:
      description: 'Contains the response to a successful <a>GetUser</a> request. '
      example:
        User:
          Arn: arn:aws:iam::123456789012:user/Bob
          CreateDate: '2012-09-21T23:03:13Z'
          Path: /
          UserId: AKIAIOSFODNN7EXAMPLE
          UserName: Bob
      properties:
        User:
          allOf:
          - $ref: '#/components/schemas/User'
          - description: <p>A structure containing details about the IAM user.</p>
              <important> <p>Due to a service issue, password last used data does
              not include password use from May 3, 2018 22:50 PDT to May 23, 2018
              14:08 PDT. This affects <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_finding-unused.html">last
              sign-in</a> dates shown in the IAM console and password last used dates
              in the <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_getting-report.html">IAM
              credential report</a>, and returned by this operation. If users signed
              in during the affected time, the password last used date that is returned
              is the date the user last signed in before May 3, 2018. For users that
              signed in after May 23, 2018 14:08 PDT, the returned password last used
              date is accurate.</p> <p>You can use password last used information
              to identify unused credentials for deletion. For example, you might
              delete users who did not sign in to Amazon Web Services in the last
              90 days. In cases like this, we recommend that you adjust your evaluation
              window to include dates after May 23, 2018. Alternatively, if your users
              use access keys to access Amazon Web Services programmatically you can
              refer to access key last used information because it is accurate for
              all dates. </p> </important>
      required:
      - User
      type: object
    Group:
      description: <p>Contains information about an IAM group entity.</p> <p>This
        data type is used as a response element in the following operations:</p> <ul>
        <li> <p> <a>CreateGroup</a> </p> </li> <li> <p> <a>GetGroup</a> </p> </li>
        <li> <p> <a>ListGroups</a> </p> </li> </ul>
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: ' The Amazon Resource Name (ARN) specifying the group. For
              more information about ARNs and how to use them in policies, see <a
              href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
              identifiers</a> in the <i>IAM User Guide</i>. '
        CreateDate:
          allOf:
          - $ref: '#/components/schemas/dateType'
          - description: The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO
              8601 date-time format</a>, when the group was created.
        GroupId:
          allOf:
          - $ref: '#/components/schemas/idType'
          - description: ' The stable and unique string identifying the group. For
              more information about IDs, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
              identifiers</a> in the <i>IAM User Guide</i>. '
        GroupName:
          allOf:
          - $ref: '#/components/schemas/groupNameType'
          - description: The friendly name that identifies the group.
        Path:
          allOf:
          - $ref: '#/components/schemas/pathType'
          - description: 'The path to the group. For more information about paths,
              see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
              identifiers</a> in the <i>IAM User Guide</i>. '
      required:
      - Path
      - GroupName
      - GroupId
      - Arn
      - CreateDate
      type: object
    GroupDetail:
      description: <p>Contains information about an IAM group, including all of the
        group's policies.</p> <p>This data type is used as a response element in the
        <a>GetAccountAuthorizationDetails</a> operation.</p>
      properties:
        Arn:
          $ref: '#/components/schemas/arnType'
        AttachedManagedPolicies:
          allOf:
          - $ref: '#/components/schemas/attachedPoliciesListType'
          - description: A list of the managed policies attached to the group.
        CreateDate:
          allOf:
          - $ref: '#/components/schemas/dateType'
          - description: The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO
              8601 date-time format</a>, when the group was created.
        GroupId:
          allOf:
          - $ref: '#/components/schemas/idType'
          - description: The stable and unique string identifying the group. For more
              information about IDs, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
              identifiers</a> in the <i>IAM User Guide</i>.
        GroupName:
          allOf:
          - $ref: '#/components/schemas/groupNameType'
          - description: The friendly name that identifies the group.
        GroupPolicyList:
          allOf:
          - $ref: '#/components/schemas/policyDetailListType'
          - description: A list of the inline policies embedded in the group.
        Path:
          allOf:
          - $ref: '#/components/schemas/pathType'
          - description: The path to the group. For more information about paths,
              see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
              identifiers</a> in the <i>IAM User Guide</i>.
      type: object
    InstanceProfile:
      description: <p>Contains information about an instance profile.</p> <p>This
        data type is used as a response element in the following operations:</p> <ul>
        <li> <p> <a>CreateInstanceProfile</a> </p> </li> <li> <p> <a>GetInstanceProfile</a>
        </p> </li> <li> <p> <a>ListInstanceProfiles</a> </p> </li> <li> <p> <a>ListInstanceProfilesForRole</a>
        </p> </li> </ul>
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: ' The Amazon Resource Name (ARN) specifying the instance
              profile. For more information about ARNs and how to use them in policies,
              see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
              identifiers</a> in the <i>IAM User Guide</i>. '
        CreateDate:
          allOf:
          - $ref: '#/components/schemas/dateType'
          - description: The date when the instance profile was created.
        InstanceProfileId:
          allOf:
          - $ref: '#/components/schemas/idType'
          - description: ' The stable and unique string identifying the instance profile.
              For more information about IDs, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
              identifiers</a> in the <i>IAM User Guide</i>. '
        InstanceProfileName:
          allOf:
          - $ref: '#/components/schemas/instanceProfileNameType'
          - description: The name identifying the instance profile.
        Path:
          allOf:
          - $ref: '#/components/schemas/pathType'
          - description: ' The path to the instance profile. For more information
              about paths, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
              identifiers</a> in the <i>IAM User Guide</i>. '
        Roles:
          allOf:
          - $ref: '#/components/schemas/roleListType'
          - description: The role associated with the instance profile.
        Tags:
          allOf:
          - $ref: '#/components/schemas/tagListType'
          - description: A list of tags that are attached to the instance profile.
              For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
              IAM resources</a> in the <i>IAM User Guide</i>.
      required:
      - Path
      - InstanceProfileName
      - InstanceProfileId
      - Arn
      - CreateDate
      - Roles
      type: object
    InvalidAuthenticationCodeException: {}
    InvalidCertificateException: {}
    InvalidInputException: {}
    InvalidPublicKeyException: {}
    InvalidUserTypeException: {}
    KeyPairMismatchException: {}
    LimitExceededException: {}
    LineNumber:
      type: integer
    ListAccessKeysRequest:
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/markerType'
          - description: Use this parameter only when paginating results and only
              after you receive a response indicating that the results are truncated.
              Set it to the value of the <code>Marker</code> element in the response
              that you received to indicate where the next call should start.
        MaxItems:
          allOf:
          - $ref: '#/components/schemas/maxItemsType'
          - description: <p>Use this only when paginating results to indicate the
              maximum number of items you want in the response. If additional items
              exist beyond the maximum you specify, the <code>IsTruncated</code> response
              element is <code>true</code>.</p> <p>If you do not include this parameter,
              the number of items defaults to 100. Note that IAM might return fewer
              results, even when there are more results available. In that case, the
              <code>IsTruncated</code> response element returns <code>true</code>,
              and <code>Marker</code> contains a value to include in the subsequent
              call that tells the service where to continue from.</p>
        UserName:
          allOf:
          - $ref: '#/components/schemas/existingUserNameType'
          - description: '<p>The name of the user.</p> <p>This parameter allows (through
              its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string
              of characters consisting of upper and lowercase alphanumeric characters
              with no spaces. You can also include any of the following characters:
              _+=,.@-</p>'
      title: ListAccessKeysRequest
      type: object
    ListAccessKeysResponse:
      description: 'Contains the response to a successful <a>ListAccessKeys</a> request. '
      example:
        AccessKeyMetadata:
        - AccessKeyId: AKIA111111111EXAMPLE
          CreateDate: '2016-12-01T22:19:58Z'
          Status: Active
          UserName: Alice
        - AccessKeyId: AKIA222222222EXAMPLE
          CreateDate: '2016-12-01T22:20:01Z'
          Status: Active
          UserName: Alice
      properties:
        AccessKeyMetadata:
          allOf:
          - $ref: '#/components/schemas/accessKeyMetadataListType'
          - description: A list of objects containing metadata about the access keys.
        IsTruncated:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: A flag that indicates whether there are more items to return.
              If your results were truncated, you can make a subsequent pagination
              request using the <code>Marker</code> request parameter to retrieve
              more items. Note that IAM might return fewer than the <code>MaxItems</code>
              number of results even when there are more results available. We recommend
              that you check <code>IsTruncated</code> after every call to ensure that
              you receive all your results.
        Marker:
          allOf:
          - $ref: '#/components/schemas/responseMarkerType'
          - description: When <code>IsTruncated</code> is <code>true</code>, this
              element is present and contains the value to use for the <code>Marker</code>
              parameter in a subsequent pagination request.
      required:
      - AccessKeyMetadata
      type: object
    ListAccountAliasesRequest:
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/markerType'
          - description: Use this parameter only when paginating results and only
              after you receive a response indicating that the results are truncated.
              Set it to the value of the <code>Marker</code> element in the response
              that you received to indicate where the next call should start.
        MaxItems:
          allOf:
          - $ref: '#/components/schemas/maxItemsType'
          - description: <p>Use this only when paginating results to indicate the
              maximum number of items you want in the response. If additional items
              exist beyond the maximum you specify, the <code>IsTruncated</code> response
              element is <code>true</code>.</p> <p>If you do not include this parameter,
              the number of items defaults to 100. Note that IAM might return fewer
              results, even when there are more results available. In that case, the
              <code>IsTruncated</code> response element returns <code>true</code>,
              and <code>Marker</code> contains a value to include in the subsequent
              call that tells the service where to continue from.</p>
      title: ListAccountAliasesRequest
      type: object
    ListAccountAliasesResponse:
      description: 'Contains the response to a successful <a>ListAccountAliases</a>
        request. '
      example:
        AccountAliases:
        - exmaple-corporation
      properties:
        AccountAliases:
          allOf:
          - $ref: '#/components/schemas/accountAliasListType'
          - description: A list of aliases associated with the account. Amazon Web
              Services supports only one alias per account.
        IsTruncated:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: A flag that indicates whether there are more items to return.
              If your results were truncated, you can make a subsequent pagination
              request using the <code>Marker</code> request parameter to retrieve
              more items. Note that IAM might return fewer than the <code>MaxItems</code>
              number of results even when there are more results available. We recommend
              that you check <code>IsTruncated</code> after every call to ensure that
              you receive all your results.
        Marker:
          allOf:
          - $ref: '#/components/schemas/responseMarkerType'
          - description: When <code>IsTruncated</code> is <code>true</code>, this
              element is present and contains the value to use for the <code>Marker</code>
              parameter in a subsequent pagination request.
      required:
      - AccountAliases
      type: object
    ListAttachedGroupPoliciesRequest:
      properties:
        GroupName:
          allOf:
          - $ref: '#/components/schemas/groupNameType'
          - description: '<p>The name (friendly name, not ARN) of the group to list
              attached policies for.</p> <p>This parameter allows (through its <a
              href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of
              characters consisting of upper and lowercase alphanumeric characters
              with no spaces. You can also include any of the following characters:
              _+=,.@-</p>'
        Marker:
          allOf:
          - $ref: '#/components/schemas/markerType'
          - description: Use this parameter only when paginating results and only
              after you receive a response indicating that the results are truncated.
              Set it to the value of the <code>Marker</code> element in the response
              that you received to indicate where the next call should start.
        MaxItems:
          allOf:
          - $ref: '#/components/schemas/maxItemsType'
          - description: <p>Use this only when paginating results to indicate the
              maximum number of items you want in the response. If additional items
              exist beyond the maximum you specify, the <code>IsTruncated</code> response
              element is <code>true</code>.</p> <p>If you do not include this parameter,
              the number of items defaults to 100. Note that IAM might return fewer
              results, even when there are more results available. In that case, the
              <code>IsTruncated</code> response element returns <code>true</code>,
              and <code>Marker</code> contains a value to include in the subsequent
              call that tells the service where to continue from.</p>
        PathPrefix:
          allOf:
          - $ref: '#/components/schemas/policyPathType'
          - description: <p>The path prefix for filtering the results. This parameter
              is optional. If it is not included, it defaults to a slash (/), listing
              all policies.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of either a forward slash
              (/) by itself or a string that must begin and end with forward slashes.
              In addition, it can contain any ASCII character from the ! (<code>\u0021</code>)
              through the DEL character (<code>\u007F</code>), including most punctuation
              characters, digits, and upper and lowercased letters.</p>
      required:
      - GroupName
      title: ListAttachedGroupPoliciesRequest
      type: object
    ListAttachedGroupPoliciesResponse:
      description: 'Contains the response to a successful <a>ListAttachedGroupPolicies</a>
        request. '
      properties:
        AttachedPolicies:
          allOf:
          - $ref: '#/components/schemas/attachedPoliciesListType'
          - description: A list of the attached policies.
        IsTruncated:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: A flag that indicates whether there are more items to return.
              If your results were truncated, you can make a subsequent pagination
              request using the <code>Marker</code> request parameter to retrieve
              more items. Note that IAM might return fewer than the <code>MaxItems</code>
              number of results even when there are more results available. We recommend
              that you check <code>IsTruncated</code> after every call to ensure that
              you receive all your results.
        Marker:
          allOf:
          - $ref: '#/components/schemas/responseMarkerType'
          - description: When <code>IsTruncated</code> is <code>true</code>, this
              element is present and contains the value to use for the <code>Marker</code>
              parameter in a subsequent pagination request.
      type: object
    ListAttachedRolePoliciesRequest:
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/markerType'
          - description: Use this parameter only when paginating results and only
              after you receive a response indicating that the results are truncated.
              Set it to the value of the <code>Marker</code> element in the response
              that you received to indicate where the next call should start.
        MaxItems:
          allOf:
          - $ref: '#/components/schemas/maxItemsType'
          - description: <p>Use this only when paginating results to indicate the
              maximum number of items you want in the response. If additional items
              exist beyond the maximum you specify, the <code>IsTruncated</code> response
              element is <code>true</code>.</p> <p>If you do not include this parameter,
              the number of items defaults to 100. Note that IAM might return fewer
              results, even when there are more results available. In that case, the
              <code>IsTruncated</code> response element returns <code>true</code>,
              and <code>Marker</code> contains a value to include in the subsequent
              call that tells the service where to continue from.</p>
        PathPrefix:
          allOf:
          - $ref: '#/components/schemas/policyPathType'
          - description: <p>The path prefix for filtering the results. This parameter
              is optional. If it is not included, it defaults to a slash (/), listing
              all policies.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of either a forward slash
              (/) by itself or a string that must begin and end with forward slashes.
              In addition, it can contain any ASCII character from the ! (<code>\u0021</code>)
              through the DEL character (<code>\u007F</code>), including most punctuation
              characters, digits, and upper and lowercased letters.</p>
        RoleName:
          allOf:
          - $ref: '#/components/schemas/roleNameType'
          - description: '<p>The name (friendly name, not ARN) of the role to list
              attached policies for.</p> <p>This parameter allows (through its <a
              href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of
              characters consisting of upper and lowercase alphanumeric characters
              with no spaces. You can also include any of the following characters:
              _+=,.@-</p>'
      required:
      - RoleName
      title: ListAttachedRolePoliciesRequest
      type: object
    ListAttachedRolePoliciesResponse:
      description: 'Contains the response to a successful <a>ListAttachedRolePolicies</a>
        request. '
      properties:
        AttachedPolicies:
          allOf:
          - $ref: '#/components/schemas/attachedPoliciesListType'
          - description: A list of the attached policies.
        IsTruncated:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: A flag that indicates whether there are more items to return.
              If your results were truncated, you can make a subsequent pagination
              request using the <code>Marker</code> request parameter to retrieve
              more items. Note that IAM might return fewer than the <code>MaxItems</code>
              number of results even when there are more results available. We recommend
              that you check <code>IsTruncated</code> after every call to ensure that
              you receive all your results.
        Marker:
          allOf:
          - $ref: '#/components/schemas/responseMarkerType'
          - description: When <code>IsTruncated</code> is <code>true</code>, this
              element is present and contains the value to use for the <code>Marker</code>
              parameter in a subsequent pagination request.
      type: object
    ListAttachedUserPoliciesRequest:
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/markerType'
          - description: Use this parameter only when paginating results and only
              after you receive a response indicating that the results are truncated.
              Set it to the value of the <code>Marker</code> element in the response
              that you received to indicate where the next call should start.
        MaxItems:
          allOf:
          - $ref: '#/components/schemas/maxItemsType'
          - description: <p>Use this only when paginating results to indicate the
              maximum number of items you want in the response. If additional items
              exist beyond the maximum you specify, the <code>IsTruncated</code> response
              element is <code>true</code>.</p> <p>If you do not include this parameter,
              the number of items defaults to 100. Note that IAM might return fewer
              results, even when there are more results available. In that case, the
              <code>IsTruncated</code> response element returns <code>true</code>,
              and <code>Marker</code> contains a value to include in the subsequent
              call that tells the service where to continue from.</p>
        PathPrefix:
          allOf:
          - $ref: '#/components/schemas/policyPathType'
          - description: <p>The path prefix for filtering the results. This parameter
              is optional. If it is not included, it defaults to a slash (/), listing
              all policies.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of either a forward slash
              (/) by itself or a string that must begin and end with forward slashes.
              In addition, it can contain any ASCII character from the ! (<code>\u0021</code>)
              through the DEL character (<code>\u007F</code>), including most punctuation
              characters, digits, and upper and lowercased letters.</p>
        UserName:
          allOf:
          - $ref: '#/components/schemas/userNameType'
          - description: '<p>The name (friendly name, not ARN) of the user to list
              attached policies for.</p> <p>This parameter allows (through its <a
              href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of
              characters consisting of upper and lowercase alphanumeric characters
              with no spaces. You can also include any of the following characters:
              _+=,.@-</p>'
      required:
      - UserName
      title: ListAttachedUserPoliciesRequest
      type: object
    ListAttachedUserPoliciesResponse:
      description: 'Contains the response to a successful <a>ListAttachedUserPolicies</a>
        request. '
      properties:
        AttachedPolicies:
          allOf:
          - $ref: '#/components/schemas/attachedPoliciesListType'
          - description: A list of the attached policies.
        IsTruncated:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: A flag that indicates whether there are more items to return.
              If your results were truncated, you can make a subsequent pagination
              request using the <code>Marker</code> request parameter to retrieve
              more items. Note that IAM might return fewer than the <code>MaxItems</code>
              number of results even when there are more results available. We recommend
              that you check <code>IsTruncated</code> after every call to ensure that
              you receive all your results.
        Marker:
          allOf:
          - $ref: '#/components/schemas/responseMarkerType'
          - description: When <code>IsTruncated</code> is <code>true</code>, this
              element is present and contains the value to use for the <code>Marker</code>
              parameter in a subsequent pagination request.
      type: object
    ListEntitiesForPolicyRequest:
      properties:
        EntityFilter:
          allOf:
          - $ref: '#/components/schemas/EntityType'
          - description: <p>The entity type to use for filtering the results.</p>
              <p>For example, when <code>EntityFilter</code> is <code>Role</code>,
              only the roles that are attached to the specified policy are returned.
              This parameter is optional. If it is not included, all attached entities
              (users, groups, and roles) are returned. The argument for this parameter
              must be one of the valid values listed below.</p>
        Marker:
          allOf:
          - $ref: '#/components/schemas/markerType'
          - description: Use this parameter only when paginating results and only
              after you receive a response indicating that the results are truncated.
              Set it to the value of the <code>Marker</code> element in the response
              that you received to indicate where the next call should start.
        MaxItems:
          allOf:
          - $ref: '#/components/schemas/maxItemsType'
          - description: <p>Use this only when paginating results to indicate the
              maximum number of items you want in the response. If additional items
              exist beyond the maximum you specify, the <code>IsTruncated</code> response
              element is <code>true</code>.</p> <p>If you do not include this parameter,
              the number of items defaults to 100. Note that IAM might return fewer
              results, even when there are more results available. In that case, the
              <code>IsTruncated</code> response element returns <code>true</code>,
              and <code>Marker</code> contains a value to include in the subsequent
              call that tells the service where to continue from.</p>
        PathPrefix:
          allOf:
          - $ref: '#/components/schemas/pathType'
          - description: <p>The path prefix for filtering the results. This parameter
              is optional. If it is not included, it defaults to a slash (/), listing
              all entities.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of either a forward slash
              (/) by itself or a string that must begin and end with forward slashes.
              In addition, it can contain any ASCII character from the ! (<code>\u0021</code>)
              through the DEL character (<code>\u007F</code>), including most punctuation
              characters, digits, and upper and lowercased letters.</p>
        PolicyArn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: <p>The Amazon Resource Name (ARN) of the IAM policy for which
              you want the versions.</p> <p>For more information about ARNs, see <a
              href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
              Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        PolicyUsageFilter:
          allOf:
          - $ref: '#/components/schemas/PolicyUsageType'
          - description: "<p>The policy usage method to use for filtering the results.</p>\
              \ <p>To list only permissions policies, set\_<code>PolicyUsageFilter</code>\_\
              to\_<code>PermissionsPolicy</code>. To list only the policies used to\
              \ set permissions boundaries, set\_the value to\_<code>PermissionsBoundary</code>.</p>\
              \ <p>This parameter is optional. If it is not included, all policies\
              \ are returned. </p>"
      required:
      - PolicyArn
      title: ListEntitiesForPolicyRequest
      type: object
    ListEntitiesForPolicyResponse:
      description: 'Contains the response to a successful <a>ListEntitiesForPolicy</a>
        request. '
      properties:
        IsTruncated:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: A flag that indicates whether there are more items to return.
              If your results were truncated, you can make a subsequent pagination
              request using the <code>Marker</code> request parameter to retrieve
              more items. Note that IAM might return fewer than the <code>MaxItems</code>
              number of results even when there are more results available. We recommend
              that you check <code>IsTruncated</code> after every call to ensure that
              you receive all your results.
        Marker:
          allOf:
          - $ref: '#/components/schemas/responseMarkerType'
          - description: When <code>IsTruncated</code> is <code>true</code>, this
              element is present and contains the value to use for the <code>Marker</code>
              parameter in a subsequent pagination request.
        PolicyGroups:
          allOf:
          - $ref: '#/components/schemas/PolicyGroupListType'
          - description: A list of IAM groups that the policy is attached to.
        PolicyRoles:
          allOf:
          - $ref: '#/components/schemas/PolicyRoleListType'
          - description: A list of IAM roles that the policy is attached to.
        PolicyUsers:
          allOf:
          - $ref: '#/components/schemas/PolicyUserListType'
          - description: A list of IAM users that the policy is attached to.
      type: object
    ListGroupPoliciesRequest:
      properties:
        GroupName:
          allOf:
          - $ref: '#/components/schemas/groupNameType'
          - description: '<p>The name of the group to list policies for.</p> <p>This
              parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
        Marker:
          allOf:
          - $ref: '#/components/schemas/markerType'
          - description: Use this parameter only when paginating results and only
              after you receive a response indicating that the results are truncated.
              Set it to the value of the <code>Marker</code> element in the response
              that you received to indicate where the next call should start.
        MaxItems:
          allOf:
          - $ref: '#/components/schemas/maxItemsType'
          - description: <p>Use this only when paginating results to indicate the
              maximum number of items you want in the response. If additional items
              exist beyond the maximum you specify, the <code>IsTruncated</code> response
              element is <code>true</code>.</p> <p>If you do not include this parameter,
              the number of items defaults to 100. Note that IAM might return fewer
              results, even when there are more results available. In that case, the
              <code>IsTruncated</code> response element returns <code>true</code>,
              and <code>Marker</code> contains a value to include in the subsequent
              call that tells the service where to continue from.</p>
      required:
      - GroupName
      title: ListGroupPoliciesRequest
      type: object
    ListGroupPoliciesResponse:
      description: 'Contains the response to a successful <a>ListGroupPolicies</a>
        request. '
      example:
        PolicyNames:
        - AdminRoot
        - KeyPolicy
      properties:
        IsTruncated:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: A flag that indicates whether there are more items to return.
              If your results were truncated, you can make a subsequent pagination
              request using the <code>Marker</code> request parameter to retrieve
              more items. Note that IAM might return fewer than the <code>MaxItems</code>
              number of results even when there are more results available. We recommend
              that you check <code>IsTruncated</code> after every call to ensure that
              you receive all your results.
        Marker:
          allOf:
          - $ref: '#/components/schemas/responseMarkerType'
          - description: When <code>IsTruncated</code> is <code>true</code>, this
              element is present and contains the value to use for the <code>Marker</code>
              parameter in a subsequent pagination request.
        PolicyNames:
          allOf:
          - $ref: '#/components/schemas/policyNameListType'
          - description: '<p>A list of policy names.</p> <p>This parameter allows
              (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
              a string of characters consisting of upper and lowercase alphanumeric
              characters with no spaces. You can also include any of the following
              characters: _+=,.@-</p>'
      required:
      - PolicyNames
      type: object
    ListGroupsForUserRequest:
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/markerType'
          - description: Use this parameter only when paginating results and only
              after you receive a response indicating that the results are truncated.
              Set it to the value of the <code>Marker</code> element in the response
              that you received to indicate where the next call should start.
        MaxItems:
          allOf:
          - $ref: '#/components/schemas/maxItemsType'
          - description: <p>Use this only when paginating results to indicate the
              maximum number of items you want in the response. If additional items
              exist beyond the maximum you specify, the <code>IsTruncated</code> response
              element is <code>true</code>.</p> <p>If you do not include this parameter,
              the number of items defaults to 100. Note that IAM might return fewer
              results, even when there are more results available. In that case, the
              <code>IsTruncated</code> response element returns <code>true</code>,
              and <code>Marker</code> contains a value to include in the subsequent
              call that tells the service where to continue from.</p>
        UserName:
          allOf:
          - $ref: '#/components/schemas/existingUserNameType'
          - description: '<p>The name of the user to list groups for.</p> <p>This
              parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      required:
      - UserName
      title: ListGroupsForUserRequest
      type: object
    ListGroupsForUserResponse:
      description: 'Contains the response to a successful <a>ListGroupsForUser</a>
        request. '
      example:
        Groups:
        - Arn: arn:aws:iam::123456789012:group/division_abc/subdivision_xyz/product_1234/engineering/Test
          CreateDate: '2016-11-30T14:10:01.156Z'
          GroupId: AGP2111111111EXAMPLE
          GroupName: Test
          Path: /division_abc/subdivision_xyz/product_1234/engineering/
        - Arn: arn:aws:iam::123456789012:group/division_abc/subdivision_xyz/product_1234/Managers
          CreateDate: '2016-06-12T20:14:52.032Z'
          GroupId: AGPI222222222SEXAMPLE
          GroupName: Managers
          Path: /division_abc/subdivision_xyz/product_1234/
      properties:
        Groups:
          allOf:
          - $ref: '#/components/schemas/groupListType'
          - description: A list of groups.
        IsTruncated:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: A flag that indicates whether there are more items to return.
              If your results were truncated, you can make a subsequent pagination
              request using the <code>Marker</code> request parameter to retrieve
              more items. Note that IAM might return fewer than the <code>MaxItems</code>
              number of results even when there are more results available. We recommend
              that you check <code>IsTruncated</code> after every call to ensure that
              you receive all your results.
        Marker:
          allOf:
          - $ref: '#/components/schemas/responseMarkerType'
          - description: When <code>IsTruncated</code> is <code>true</code>, this
              element is present and contains the value to use for the <code>Marker</code>
              parameter in a subsequent pagination request.
      required:
      - Groups
      type: object
    ListGroupsRequest:
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/markerType'
          - description: Use this parameter only when paginating results and only
              after you receive a response indicating that the results are truncated.
              Set it to the value of the <code>Marker</code> element in the response
              that you received to indicate where the next call should start.
        MaxItems:
          allOf:
          - $ref: '#/components/schemas/maxItemsType'
          - description: <p>Use this only when paginating results to indicate the
              maximum number of items you want in the response. If additional items
              exist beyond the maximum you specify, the <code>IsTruncated</code> response
              element is <code>true</code>.</p> <p>If you do not include this parameter,
              the number of items defaults to 100. Note that IAM might return fewer
              results, even when there are more results available. In that case, the
              <code>IsTruncated</code> response element returns <code>true</code>,
              and <code>Marker</code> contains a value to include in the subsequent
              call that tells the service where to continue from.</p>
        PathPrefix:
          allOf:
          - $ref: '#/components/schemas/pathPrefixType'
          - description: <p> The path prefix for filtering the results. For example,
              the prefix <code>/division_abc/subdivision_xyz/</code> gets all groups
              whose path starts with <code>/division_abc/subdivision_xyz/</code>.</p>
              <p>This parameter is optional. If it is not included, it defaults to
              a slash (/), listing all groups. This parameter allows (through its
              <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string
              of characters consisting of either a forward slash (/) by itself or
              a string that must begin and end with forward slashes. In addition,
              it can contain any ASCII character from the ! (<code>\u0021</code>)
              through the DEL character (<code>\u007F</code>), including most punctuation
              characters, digits, and upper and lowercased letters.</p>
      title: ListGroupsRequest
      type: object
    ListGroupsResponse:
      description: 'Contains the response to a successful <a>ListGroups</a> request. '
      example:
        Groups:
        - Arn: arn:aws:iam::123456789012:group/Admins
          CreateDate: '2016-12-15T21:40:08.121Z'
          GroupId: AGPA1111111111EXAMPLE
          GroupName: Admins
          Path: /division_abc/subdivision_xyz/
        - Arn: arn:aws:iam::123456789012:group/division_abc/subdivision_xyz/product_1234/engineering/Test
          CreateDate: '2016-11-30T14:10:01.156Z'
          GroupId: AGP22222222222EXAMPLE
          GroupName: Test
          Path: /division_abc/subdivision_xyz/product_1234/engineering/
        - Arn: arn:aws:iam::123456789012:group/division_abc/subdivision_xyz/product_1234/Managers
          CreateDate: '2016-06-12T20:14:52.032Z'
          GroupId: AGPI3333333333EXAMPLE
          GroupName: Managers
          Path: /division_abc/subdivision_xyz/product_1234/
      properties:
        Groups:
          allOf:
          - $ref: '#/components/schemas/groupListType'
          - description: A list of groups.
        IsTruncated:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: A flag that indicates whether there are more items to return.
              If your results were truncated, you can make a subsequent pagination
              request using the <code>Marker</code> request parameter to retrieve
              more items. Note that IAM might return fewer than the <code>MaxItems</code>
              number of results even when there are more results available. We recommend
              that you check <code>IsTruncated</code> after every call to ensure that
              you receive all your results.
        Marker:
          allOf:
          - $ref: '#/components/schemas/responseMarkerType'
          - description: When <code>IsTruncated</code> is <code>true</code>, this
              element is present and contains the value to use for the <code>Marker</code>
              parameter in a subsequent pagination request.
      required:
      - Groups
      type: object
    ListInstanceProfileTagsRequest:
      properties:
        InstanceProfileName:
          allOf:
          - $ref: '#/components/schemas/instanceProfileNameType'
          - description: '<p>The name of the IAM instance profile whose tags you want
              to see.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
        Marker:
          allOf:
          - $ref: '#/components/schemas/markerType'
          - description: Use this parameter only when paginating results and only
              after you receive a response indicating that the results are truncated.
              Set it to the value of the <code>Marker</code> element in the response
              that you received to indicate where the next call should start.
        MaxItems:
          allOf:
          - $ref: '#/components/schemas/maxItemsType'
          - description: <p>Use this only when paginating results to indicate the
              maximum number of items you want in the response. If additional items
              exist beyond the maximum you specify, the <code>IsTruncated</code> response
              element is <code>true</code>.</p> <p>If you do not include this parameter,
              the number of items defaults to 100. Note that IAM might return fewer
              results, even when there are more results available. In that case, the
              <code>IsTruncated</code> response element returns <code>true</code>,
              and <code>Marker</code> contains a value to include in the subsequent
              call that tells the service where to continue from.</p>
      required:
      - InstanceProfileName
      title: ListInstanceProfileTagsRequest
      type: object
    ListInstanceProfileTagsResponse:
      properties:
        IsTruncated:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: A flag that indicates whether there are more items to return.
              If your results were truncated, you can make a subsequent pagination
              request using the <code>Marker</code> request parameter to retrieve
              more items. Note that IAM might return fewer than the <code>MaxItems</code>
              number of results even when there are more results available. We recommend
              that you check <code>IsTruncated</code> after every call to ensure that
              you receive all your results.
        Marker:
          allOf:
          - $ref: '#/components/schemas/responseMarkerType'
          - description: When <code>IsTruncated</code> is <code>true</code>, this
              element is present and contains the value to use for the <code>Marker</code>
              parameter in a subsequent pagination request.
        Tags:
          allOf:
          - $ref: '#/components/schemas/tagListType'
          - description: The list of tags that are currently attached to the IAM instance
              profile. Each tag consists of a key name and an associated value. If
              no tags are attached to the specified resource, the response contains
              an empty list.
      required:
      - Tags
      type: object
    ListInstanceProfilesForRoleRequest:
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/markerType'
          - description: Use this parameter only when paginating results and only
              after you receive a response indicating that the results are truncated.
              Set it to the value of the <code>Marker</code> element in the response
              that you received to indicate where the next call should start.
        MaxItems:
          allOf:
          - $ref: '#/components/schemas/maxItemsType'
          - description: <p>Use this only when paginating results to indicate the
              maximum number of items you want in the response. If additional items
              exist beyond the maximum you specify, the <code>IsTruncated</code> response
              element is <code>true</code>.</p> <p>If you do not include this parameter,
              the number of items defaults to 100. Note that IAM might return fewer
              results, even when there are more results available. In that case, the
              <code>IsTruncated</code> response element returns <code>true</code>,
              and <code>Marker</code> contains a value to include in the subsequent
              call that tells the service where to continue from.</p>
        RoleName:
          allOf:
          - $ref: '#/components/schemas/roleNameType'
          - description: '<p>The name of the role to list instance profiles for.</p>
              <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      required:
      - RoleName
      title: ListInstanceProfilesForRoleRequest
      type: object
    ListInstanceProfilesForRoleResponse:
      description: 'Contains the response to a successful <a>ListInstanceProfilesForRole</a>
        request. '
      properties:
        InstanceProfiles:
          allOf:
          - $ref: '#/components/schemas/instanceProfileListType'
          - description: A list of instance profiles.
        IsTruncated:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: A flag that indicates whether there are more items to return.
              If your results were truncated, you can make a subsequent pagination
              request using the <code>Marker</code> request parameter to retrieve
              more items. Note that IAM might return fewer than the <code>MaxItems</code>
              number of results even when there are more results available. We recommend
              that you check <code>IsTruncated</code> after every call to ensure that
              you receive all your results.
        Marker:
          allOf:
          - $ref: '#/components/schemas/responseMarkerType'
          - description: When <code>IsTruncated</code> is <code>true</code>, this
              element is present and contains the value to use for the <code>Marker</code>
              parameter in a subsequent pagination request.
      required:
      - InstanceProfiles
      type: object
    ListInstanceProfilesRequest:
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/markerType'
          - description: Use this parameter only when paginating results and only
              after you receive a response indicating that the results are truncated.
              Set it to the value of the <code>Marker</code> element in the response
              that you received to indicate where the next call should start.
        MaxItems:
          allOf:
          - $ref: '#/components/schemas/maxItemsType'
          - description: <p>Use this only when paginating results to indicate the
              maximum number of items you want in the response. If additional items
              exist beyond the maximum you specify, the <code>IsTruncated</code> response
              element is <code>true</code>.</p> <p>If you do not include this parameter,
              the number of items defaults to 100. Note that IAM might return fewer
              results, even when there are more results available. In that case, the
              <code>IsTruncated</code> response element returns <code>true</code>,
              and <code>Marker</code> contains a value to include in the subsequent
              call that tells the service where to continue from.</p>
        PathPrefix:
          allOf:
          - $ref: '#/components/schemas/pathPrefixType'
          - description: <p> The path prefix for filtering the results. For example,
              the prefix <code>/application_abc/component_xyz/</code> gets all instance
              profiles whose path starts with <code>/application_abc/component_xyz/</code>.</p>
              <p>This parameter is optional. If it is not included, it defaults to
              a slash (/), listing all instance profiles. This parameter allows (through
              its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string
              of characters consisting of either a forward slash (/) by itself or
              a string that must begin and end with forward slashes. In addition,
              it can contain any ASCII character from the ! (<code>\u0021</code>)
              through the DEL character (<code>\u007F</code>), including most punctuation
              characters, digits, and upper and lowercased letters.</p>
      title: ListInstanceProfilesRequest
      type: object
    ListInstanceProfilesResponse:
      description: 'Contains the response to a successful <a>ListInstanceProfiles</a>
        request. '
      properties:
        InstanceProfiles:
          allOf:
          - $ref: '#/components/schemas/instanceProfileListType'
          - description: A list of instance profiles.
        IsTruncated:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: A flag that indicates whether there are more items to return.
              If your results were truncated, you can make a subsequent pagination
              request using the <code>Marker</code> request parameter to retrieve
              more items. Note that IAM might return fewer than the <code>MaxItems</code>
              number of results even when there are more results available. We recommend
              that you check <code>IsTruncated</code> after every call to ensure that
              you receive all your results.
        Marker:
          allOf:
          - $ref: '#/components/schemas/responseMarkerType'
          - description: When <code>IsTruncated</code> is <code>true</code>, this
              element is present and contains the value to use for the <code>Marker</code>
              parameter in a subsequent pagination request.
      required:
      - InstanceProfiles
      type: object
    ListMFADeviceTagsRequest:
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/markerType'
          - description: Use this parameter only when paginating results and only
              after you receive a response indicating that the results are truncated.
              Set it to the value of the <code>Marker</code> element in the response
              that you received to indicate where the next call should start.
        MaxItems:
          allOf:
          - $ref: '#/components/schemas/maxItemsType'
          - description: <p>Use this only when paginating results to indicate the
              maximum number of items you want in the response. If additional items
              exist beyond the maximum you specify, the <code>IsTruncated</code> response
              element is <code>true</code>.</p> <p>If you do not include this parameter,
              the number of items defaults to 100. Note that IAM might return fewer
              results, even when there are more results available. In that case, the
              <code>IsTruncated</code> response element returns <code>true</code>,
              and <code>Marker</code> contains a value to include in the subsequent
              call that tells the service where to continue from.</p>
        SerialNumber:
          allOf:
          - $ref: '#/components/schemas/serialNumberType'
          - description: '<p>The unique identifier for the IAM virtual MFA device
              whose tags you want to see. For virtual MFA devices, the serial number
              is the same as the ARN.</p> <p>This parameter allows (through its <a
              href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of
              characters consisting of upper and lowercase alphanumeric characters
              with no spaces. You can also include any of the following characters:
              _+=,.@-</p>'
      required:
      - SerialNumber
      title: ListMFADeviceTagsRequest
      type: object
    ListMFADeviceTagsResponse:
      properties:
        IsTruncated:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: A flag that indicates whether there are more items to return.
              If your results were truncated, you can make a subsequent pagination
              request using the <code>Marker</code> request parameter to retrieve
              more items. Note that IAM might return fewer than the <code>MaxItems</code>
              number of results even when there are more results available. We recommend
              that you check <code>IsTruncated</code> after every call to ensure that
              you receive all your results.
        Marker:
          allOf:
          - $ref: '#/components/schemas/responseMarkerType'
          - description: When <code>IsTruncated</code> is <code>true</code>, this
              element is present and contains the value to use for the <code>Marker</code>
              parameter in a subsequent pagination request.
        Tags:
          allOf:
          - $ref: '#/components/schemas/tagListType'
          - description: The list of tags that are currently attached to the virtual
              MFA device. Each tag consists of a key name and an associated value.
              If no tags are attached to the specified resource, the response contains
              an empty list.
      required:
      - Tags
      type: object
    ListMFADevicesRequest:
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/markerType'
          - description: Use this parameter only when paginating results and only
              after you receive a response indicating that the results are truncated.
              Set it to the value of the <code>Marker</code> element in the response
              that you received to indicate where the next call should start.
        MaxItems:
          allOf:
          - $ref: '#/components/schemas/maxItemsType'
          - description: <p>Use this only when paginating results to indicate the
              maximum number of items you want in the response. If additional items
              exist beyond the maximum you specify, the <code>IsTruncated</code> response
              element is <code>true</code>.</p> <p>If you do not include this parameter,
              the number of items defaults to 100. Note that IAM might return fewer
              results, even when there are more results available. In that case, the
              <code>IsTruncated</code> response element returns <code>true</code>,
              and <code>Marker</code> contains a value to include in the subsequent
              call that tells the service where to continue from.</p>
        UserName:
          allOf:
          - $ref: '#/components/schemas/existingUserNameType'
          - description: '<p>The name of the user whose MFA devices you want to list.</p>
              <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      title: ListMFADevicesRequest
      type: object
    ListMFADevicesResponse:
      description: 'Contains the response to a successful <a>ListMFADevices</a> request. '
      properties:
        IsTruncated:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: A flag that indicates whether there are more items to return.
              If your results were truncated, you can make a subsequent pagination
              request using the <code>Marker</code> request parameter to retrieve
              more items. Note that IAM might return fewer than the <code>MaxItems</code>
              number of results even when there are more results available. We recommend
              that you check <code>IsTruncated</code> after every call to ensure that
              you receive all your results.
        MFADevices:
          allOf:
          - $ref: '#/components/schemas/mfaDeviceListType'
          - description: A list of MFA devices.
        Marker:
          allOf:
          - $ref: '#/components/schemas/responseMarkerType'
          - description: When <code>IsTruncated</code> is <code>true</code>, this
              element is present and contains the value to use for the <code>Marker</code>
              parameter in a subsequent pagination request.
      required:
      - MFADevices
      type: object
    ListOpenIDConnectProviderTagsRequest:
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/markerType'
          - description: Use this parameter only when paginating results and only
              after you receive a response indicating that the results are truncated.
              Set it to the value of the <code>Marker</code> element in the response
              that you received to indicate where the next call should start.
        MaxItems:
          allOf:
          - $ref: '#/components/schemas/maxItemsType'
          - description: <p>Use this only when paginating results to indicate the
              maximum number of items you want in the response. If additional items
              exist beyond the maximum you specify, the <code>IsTruncated</code> response
              element is <code>true</code>.</p> <p>If you do not include this parameter,
              the number of items defaults to 100. Note that IAM might return fewer
              results, even when there are more results available. In that case, the
              <code>IsTruncated</code> response element returns <code>true</code>,
              and <code>Marker</code> contains a value to include in the subsequent
              call that tells the service where to continue from.</p>
        OpenIDConnectProviderArn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: '<p>The ARN of the OpenID Connect (OIDC) identity provider
              whose tags you want to see.</p> <p>This parameter allows (through its
              <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string
              of characters consisting of upper and lowercase alphanumeric characters
              with no spaces. You can also include any of the following characters:
              _+=,.@-</p>'
      required:
      - OpenIDConnectProviderArn
      title: ListOpenIDConnectProviderTagsRequest
      type: object
    ListOpenIDConnectProviderTagsResponse:
      properties:
        IsTruncated:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: A flag that indicates whether there are more items to return.
              If your results were truncated, you can make a subsequent pagination
              request using the <code>Marker</code> request parameter to retrieve
              more items. Note that IAM might return fewer than the <code>MaxItems</code>
              number of results even when there are more results available. We recommend
              that you check <code>IsTruncated</code> after every call to ensure that
              you receive all your results.
        Marker:
          allOf:
          - $ref: '#/components/schemas/responseMarkerType'
          - description: When <code>IsTruncated</code> is <code>true</code>, this
              element is present and contains the value to use for the <code>Marker</code>
              parameter in a subsequent pagination request.
        Tags:
          allOf:
          - $ref: '#/components/schemas/tagListType'
          - description: The list of tags that are currently attached to the OpenID
              Connect (OIDC) identity provider. Each tag consists of a key name and
              an associated value. If no tags are attached to the specified resource,
              the response contains an empty list.
      required:
      - Tags
      type: object
    ListOpenIDConnectProvidersRequest:
      properties: {}
      title: ListOpenIDConnectProvidersRequest
      type: object
    ListOpenIDConnectProvidersResponse:
      description: 'Contains the response to a successful <a>ListOpenIDConnectProviders</a>
        request. '
      properties:
        OpenIDConnectProviderList:
          allOf:
          - $ref: '#/components/schemas/OpenIDConnectProviderListType'
          - description: The list of IAM OIDC provider resource objects defined in
              the Amazon Web Services account.
      type: object
    ListPoliciesGrantingServiceAccessEntry:
      description: <p>Contains details about the permissions policies that are attached
        to the specified identity (user, group, or role).</p> <p>This data type is
        used as a response element in the <a>ListPoliciesGrantingServiceAccess</a>
        operation.</p>
      properties:
        Policies:
          allOf:
          - $ref: '#/components/schemas/policyGrantingServiceAccessListType'
          - description: "The\_<code>PoliciesGrantingServiceAccess</code> object that\
              \ contains details about the policy."
        ServiceNamespace:
          allOf:
          - $ref: '#/components/schemas/serviceNamespaceType'
          - description: "<p>The namespace of the service that was accessed.</p> <p>To\
              \ learn the service namespace of a service, see <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/reference_policies_actions-resources-contextkeys.html\"\
              >Actions, resources, and condition keys for Amazon Web Services services</a>\
              \ in the <i>Service Authorization Reference</i>. Choose the name of\
              \ the service to view details for that service. In the first paragraph,\
              \ find the service prefix. For example, <code>(service prefix: a4b)</code>.\
              \ For more information about service namespaces, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#genref-aws-service-namespaces\"\
              >Amazon Web Services service namespaces</a> in the\_<i>Amazon Web Services\
              \ General Reference</i>.</p>"
      type: object
    ListPoliciesGrantingServiceAccessRequest:
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: The ARN of the IAM identity (user, group, or role) whose
              policies you want to list.
        Marker:
          allOf:
          - $ref: '#/components/schemas/markerType'
          - description: Use this parameter only when paginating results and only
              after you receive a response indicating that the results are truncated.
              Set it to the value of the <code>Marker</code> element in the response
              that you received to indicate where the next call should start.
        ServiceNamespaces:
          allOf:
          - $ref: '#/components/schemas/serviceNamespaceListType'
          - description: "<p>The service namespace for the Amazon Web Services services\
              \ whose policies you want to list.</p> <p>To learn the service namespace\
              \ for a service, see <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/reference_policies_actions-resources-contextkeys.html\"\
              >Actions, resources, and condition keys for Amazon Web Services services</a>\
              \ in the <i>IAM User Guide</i>. Choose the name of the service to view\
              \ details for that service. In the first paragraph, find the service\
              \ prefix. For example, <code>(service prefix: a4b)</code>. For more\
              \ information about service namespaces, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#genref-aws-service-namespaces\"\
              >Amazon Web Services service namespaces</a> in the\_<i>Amazon Web Services\
              \ General Reference</i>.</p>"
      required:
      - Arn
      - ServiceNamespaces
      title: ListPoliciesGrantingServiceAccessRequest
      type: object
    ListPoliciesGrantingServiceAccessResponse:
      example:
        IsTruncated: false
        PoliciesGrantingServiceAccess:
        - Policies:
          - PolicyArn: arn:aws:iam::123456789012:policy/ExampleIamPolicy
            PolicyName: ExampleIamPolicy
            PolicyType: MANAGED
          - EntityName: AWSExampleGroup1
            EntityType: GROUP
            PolicyName: ExampleGroup1Policy
            PolicyType: INLINE
          ServiceNamespace: iam
        - Policies:
          - PolicyArn: arn:aws:iam::123456789012:policy/ExampleEc2Policy
            PolicyName: ExampleEc2Policy
            PolicyType: MANAGED
          ServiceNamespace: ec2
      properties:
        IsTruncated:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: A flag that indicates whether there are more items to return.
              If your results were truncated, you can make a subsequent pagination
              request using the <code>Marker</code> request parameter to retrieve
              more items. We recommend that you check <code>IsTruncated</code> after
              every call to ensure that you receive all your results.
        Marker:
          allOf:
          - $ref: '#/components/schemas/responseMarkerType'
          - description: When <code>IsTruncated</code> is <code>true</code>, this
              element is present and contains the value to use for the <code>Marker</code>
              parameter in a subsequent pagination request.
        PoliciesGrantingServiceAccess:
          allOf:
          - $ref: '#/components/schemas/listPolicyGrantingServiceAccessResponseListType'
          - description: "A\_<code>ListPoliciesGrantingServiceAccess</code> object\
              \ that contains details about the permissions policies attached to the\
              \ specified identity (user, group, or role)."
      required:
      - PoliciesGrantingServiceAccess
      type: object
    ListPoliciesRequest:
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/markerType'
          - description: Use this parameter only when paginating results and only
              after you receive a response indicating that the results are truncated.
              Set it to the value of the <code>Marker</code> element in the response
              that you received to indicate where the next call should start.
        MaxItems:
          allOf:
          - $ref: '#/components/schemas/maxItemsType'
          - description: <p>Use this only when paginating results to indicate the
              maximum number of items you want in the response. If additional items
              exist beyond the maximum you specify, the <code>IsTruncated</code> response
              element is <code>true</code>.</p> <p>If you do not include this parameter,
              the number of items defaults to 100. Note that IAM might return fewer
              results, even when there are more results available. In that case, the
              <code>IsTruncated</code> response element returns <code>true</code>,
              and <code>Marker</code> contains a value to include in the subsequent
              call that tells the service where to continue from.</p>
        OnlyAttached:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: <p>A flag to filter the results to only the attached policies.</p>
              <p>When <code>OnlyAttached</code> is <code>true</code>, the returned
              list contains only the policies that are attached to an IAM user, group,
              or role. When <code>OnlyAttached</code> is <code>false</code>, or when
              the parameter is not included, all policies are returned.</p>
        PathPrefix:
          allOf:
          - $ref: '#/components/schemas/policyPathType'
          - description: The path prefix for filtering the results. This parameter
              is optional. If it is not included, it defaults to a slash (/), listing
              all policies. This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of either a forward slash
              (/) by itself or a string that must begin and end with forward slashes.
              In addition, it can contain any ASCII character from the ! (<code>\u0021</code>)
              through the DEL character (<code>\u007F</code>), including most punctuation
              characters, digits, and upper and lowercased letters.
        PolicyUsageFilter:
          allOf:
          - $ref: '#/components/schemas/PolicyUsageType'
          - description: "<p>The policy usage method to use for filtering the results.</p>\
              \ <p>To list only permissions policies, set\_<code>PolicyUsageFilter</code>\_\
              to\_<code>PermissionsPolicy</code>. To list only the policies used to\
              \ set permissions boundaries, set\_the value to\_<code>PermissionsBoundary</code>.</p>\
              \ <p>This parameter is optional. If it is not included, all policies\
              \ are returned. </p>"
        Scope:
          allOf:
          - $ref: '#/components/schemas/policyScopeType'
          - description: <p>The scope to use for filtering the results.</p> <p>To
              list only Amazon Web Services managed policies, set <code>Scope</code>
              to <code>AWS</code>. To list only the customer managed policies in your
              Amazon Web Services account, set <code>Scope</code> to <code>Local</code>.</p>
              <p>This parameter is optional. If it is not included, or if it is set
              to <code>All</code>, all policies are returned.</p>
      title: ListPoliciesRequest
      type: object
    ListPoliciesResponse:
      description: 'Contains the response to a successful <a>ListPolicies</a> request. '
      properties:
        IsTruncated:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: A flag that indicates whether there are more items to return.
              If your results were truncated, you can make a subsequent pagination
              request using the <code>Marker</code> request parameter to retrieve
              more items. Note that IAM might return fewer than the <code>MaxItems</code>
              number of results even when there are more results available. We recommend
              that you check <code>IsTruncated</code> after every call to ensure that
              you receive all your results.
        Marker:
          allOf:
          - $ref: '#/components/schemas/responseMarkerType'
          - description: When <code>IsTruncated</code> is <code>true</code>, this
              element is present and contains the value to use for the <code>Marker</code>
              parameter in a subsequent pagination request.
        Policies:
          allOf:
          - $ref: '#/components/schemas/policyListType'
          - description: A list of policies.
      type: object
    ListPolicyTagsRequest:
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/markerType'
          - description: Use this parameter only when paginating results and only
              after you receive a response indicating that the results are truncated.
              Set it to the value of the <code>Marker</code> element in the response
              that you received to indicate where the next call should start.
        MaxItems:
          allOf:
          - $ref: '#/components/schemas/maxItemsType'
          - description: <p>Use this only when paginating results to indicate the
              maximum number of items you want in the response. If additional items
              exist beyond the maximum you specify, the <code>IsTruncated</code> response
              element is <code>true</code>.</p> <p>If you do not include this parameter,
              the number of items defaults to 100. Note that IAM might return fewer
              results, even when there are more results available. In that case, the
              <code>IsTruncated</code> response element returns <code>true</code>,
              and <code>Marker</code> contains a value to include in the subsequent
              call that tells the service where to continue from.</p>
        PolicyArn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: '<p>The ARN of the IAM customer managed policy whose tags
              you want to see.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      required:
      - PolicyArn
      title: ListPolicyTagsRequest
      type: object
    ListPolicyTagsResponse:
      properties:
        IsTruncated:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: A flag that indicates whether there are more items to return.
              If your results were truncated, you can make a subsequent pagination
              request using the <code>Marker</code> request parameter to retrieve
              more items. Note that IAM might return fewer than the <code>MaxItems</code>
              number of results even when there are more results available. We recommend
              that you check <code>IsTruncated</code> after every call to ensure that
              you receive all your results.
        Marker:
          allOf:
          - $ref: '#/components/schemas/responseMarkerType'
          - description: When <code>IsTruncated</code> is <code>true</code>, this
              element is present and contains the value to use for the <code>Marker</code>
              parameter in a subsequent pagination request.
        Tags:
          allOf:
          - $ref: '#/components/schemas/tagListType'
          - description: The list of tags that are currently attached to the IAM customer
              managed policy. Each tag consists of a key name and an associated value.
              If no tags are attached to the specified resource, the response contains
              an empty list.
      required:
      - Tags
      type: object
    ListPolicyVersionsRequest:
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/markerType'
          - description: Use this parameter only when paginating results and only
              after you receive a response indicating that the results are truncated.
              Set it to the value of the <code>Marker</code> element in the response
              that you received to indicate where the next call should start.
        MaxItems:
          allOf:
          - $ref: '#/components/schemas/maxItemsType'
          - description: <p>Use this only when paginating results to indicate the
              maximum number of items you want in the response. If additional items
              exist beyond the maximum you specify, the <code>IsTruncated</code> response
              element is <code>true</code>.</p> <p>If you do not include this parameter,
              the number of items defaults to 100. Note that IAM might return fewer
              results, even when there are more results available. In that case, the
              <code>IsTruncated</code> response element returns <code>true</code>,
              and <code>Marker</code> contains a value to include in the subsequent
              call that tells the service where to continue from.</p>
        PolicyArn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: <p>The Amazon Resource Name (ARN) of the IAM policy for which
              you want the versions.</p> <p>For more information about ARNs, see <a
              href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
              Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
      required:
      - PolicyArn
      title: ListPolicyVersionsRequest
      type: object
    ListPolicyVersionsResponse:
      description: 'Contains the response to a successful <a>ListPolicyVersions</a>
        request. '
      properties:
        IsTruncated:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: A flag that indicates whether there are more items to return.
              If your results were truncated, you can make a subsequent pagination
              request using the <code>Marker</code> request parameter to retrieve
              more items. Note that IAM might return fewer than the <code>MaxItems</code>
              number of results even when there are more results available. We recommend
              that you check <code>IsTruncated</code> after every call to ensure that
              you receive all your results.
        Marker:
          allOf:
          - $ref: '#/components/schemas/responseMarkerType'
          - description: When <code>IsTruncated</code> is <code>true</code>, this
              element is present and contains the value to use for the <code>Marker</code>
              parameter in a subsequent pagination request.
        Versions:
          allOf:
          - $ref: '#/components/schemas/policyDocumentVersionListType'
          - description: <p>A list of policy versions.</p> <p>For more information
              about managed policy versions, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning
              for managed policies</a> in the <i>IAM User Guide</i>.</p>
      type: object
    ListRolePoliciesRequest:
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/markerType'
          - description: Use this parameter only when paginating results and only
              after you receive a response indicating that the results are truncated.
              Set it to the value of the <code>Marker</code> element in the response
              that you received to indicate where the next call should start.
        MaxItems:
          allOf:
          - $ref: '#/components/schemas/maxItemsType'
          - description: <p>Use this only when paginating results to indicate the
              maximum number of items you want in the response. If additional items
              exist beyond the maximum you specify, the <code>IsTruncated</code> response
              element is <code>true</code>.</p> <p>If you do not include this parameter,
              the number of items defaults to 100. Note that IAM might return fewer
              results, even when there are more results available. In that case, the
              <code>IsTruncated</code> response element returns <code>true</code>,
              and <code>Marker</code> contains a value to include in the subsequent
              call that tells the service where to continue from.</p>
        RoleName:
          allOf:
          - $ref: '#/components/schemas/roleNameType'
          - description: '<p>The name of the role to list policies for.</p> <p>This
              parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      required:
      - RoleName
      title: ListRolePoliciesRequest
      type: object
    ListRolePoliciesResponse:
      description: 'Contains the response to a successful <a>ListRolePolicies</a>
        request. '
      properties:
        IsTruncated:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: A flag that indicates whether there are more items to return.
              If your results were truncated, you can make a subsequent pagination
              request using the <code>Marker</code> request parameter to retrieve
              more items. Note that IAM might return fewer than the <code>MaxItems</code>
              number of results even when there are more results available. We recommend
              that you check <code>IsTruncated</code> after every call to ensure that
              you receive all your results.
        Marker:
          allOf:
          - $ref: '#/components/schemas/responseMarkerType'
          - description: When <code>IsTruncated</code> is <code>true</code>, this
              element is present and contains the value to use for the <code>Marker</code>
              parameter in a subsequent pagination request.
        PolicyNames:
          allOf:
          - $ref: '#/components/schemas/policyNameListType'
          - description: A list of policy names.
      required:
      - PolicyNames
      type: object
    ListRoleTagsRequest:
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/markerType'
          - description: Use this parameter only when paginating results and only
              after you receive a response indicating that the results are truncated.
              Set it to the value of the <code>Marker</code> element in the response
              that you received to indicate where the next call should start.
        MaxItems:
          allOf:
          - $ref: '#/components/schemas/maxItemsType'
          - description: <p>Use this only when paginating results to indicate the
              maximum number of items you want in the response. If additional items
              exist beyond the maximum you specify, the <code>IsTruncated</code> response
              element is <code>true</code>.</p> <p>If you do not include this parameter,
              the number of items defaults to 100. Note that IAM might return fewer
              results, even when there are more results available. In that case, the
              <code>IsTruncated</code> response element returns <code>true</code>,
              and <code>Marker</code> contains a value to include in the subsequent
              call that tells the service where to continue from.</p>
        RoleName:
          allOf:
          - $ref: '#/components/schemas/roleNameType'
          - description: '<p>The name of the IAM role for which you want to see the
              list of tags.</p> <p>This parameter accepts (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters that consist of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      required:
      - RoleName
      title: ListRoleTagsRequest
      type: object
    ListRoleTagsResponse:
      example:
        IsTruncated: false
        Tags:
        - Key: Dept
          Value: '12345'
        - Key: Team
          Value: Accounting
      properties:
        IsTruncated:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: A flag that indicates whether there are more items to return.
              If your results were truncated, you can make a subsequent pagination
              request using the <code>Marker</code> request parameter to retrieve
              more items. Note that IAM might return fewer than the <code>MaxItems</code>
              number of results even when there are more results available. We recommend
              that you check <code>IsTruncated</code> after every call to ensure that
              you receive all your results.
        Marker:
          allOf:
          - $ref: '#/components/schemas/responseMarkerType'
          - description: When <code>IsTruncated</code> is <code>true</code>, this
              element is present and contains the value to use for the <code>Marker</code>
              parameter in a subsequent pagination request.
        Tags:
          allOf:
          - $ref: '#/components/schemas/tagListType'
          - description: The list of tags that are currently attached to the role.
              Each tag consists of a key name and an associated value. If no tags
              are attached to the specified resource, the response contains an empty
              list.
      required:
      - Tags
      type: object
    ListRolesRequest:
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/markerType'
          - description: Use this parameter only when paginating results and only
              after you receive a response indicating that the results are truncated.
              Set it to the value of the <code>Marker</code> element in the response
              that you received to indicate where the next call should start.
        MaxItems:
          allOf:
          - $ref: '#/components/schemas/maxItemsType'
          - description: <p>Use this only when paginating results to indicate the
              maximum number of items you want in the response. If additional items
              exist beyond the maximum you specify, the <code>IsTruncated</code> response
              element is <code>true</code>.</p> <p>If you do not include this parameter,
              the number of items defaults to 100. Note that IAM might return fewer
              results, even when there are more results available. In that case, the
              <code>IsTruncated</code> response element returns <code>true</code>,
              and <code>Marker</code> contains a value to include in the subsequent
              call that tells the service where to continue from.</p>
        PathPrefix:
          allOf:
          - $ref: '#/components/schemas/pathPrefixType'
          - description: <p> The path prefix for filtering the results. For example,
              the prefix <code>/application_abc/component_xyz/</code> gets all roles
              whose path starts with <code>/application_abc/component_xyz/</code>.</p>
              <p>This parameter is optional. If it is not included, it defaults to
              a slash (/), listing all roles. This parameter allows (through its <a
              href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of
              characters consisting of either a forward slash (/) by itself or a string
              that must begin and end with forward slashes. In addition, it can contain
              any ASCII character from the ! (<code>\u0021</code>) through the DEL
              character (<code>\u007F</code>), including most punctuation characters,
              digits, and upper and lowercased letters.</p>
      title: ListRolesRequest
      type: object
    ListRolesResponse:
      description: 'Contains the response to a successful <a>ListRoles</a> request. '
      properties:
        IsTruncated:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: A flag that indicates whether there are more items to return.
              If your results were truncated, you can make a subsequent pagination
              request using the <code>Marker</code> request parameter to retrieve
              more items. Note that IAM might return fewer than the <code>MaxItems</code>
              number of results even when there are more results available. We recommend
              that you check <code>IsTruncated</code> after every call to ensure that
              you receive all your results.
        Marker:
          allOf:
          - $ref: '#/components/schemas/responseMarkerType'
          - description: When <code>IsTruncated</code> is <code>true</code>, this
              element is present and contains the value to use for the <code>Marker</code>
              parameter in a subsequent pagination request.
        Roles:
          allOf:
          - $ref: '#/components/schemas/roleListType'
          - description: A list of roles.
      required:
      - Roles
      type: object
    ListSAMLProviderTagsRequest:
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/markerType'
          - description: Use this parameter only when paginating results and only
              after you receive a response indicating that the results are truncated.
              Set it to the value of the <code>Marker</code> element in the response
              that you received to indicate where the next call should start.
        MaxItems:
          allOf:
          - $ref: '#/components/schemas/maxItemsType'
          - description: <p>Use this only when paginating results to indicate the
              maximum number of items you want in the response. If additional items
              exist beyond the maximum you specify, the <code>IsTruncated</code> response
              element is <code>true</code>.</p> <p>If you do not include this parameter,
              the number of items defaults to 100. Note that IAM might return fewer
              results, even when there are more results available. In that case, the
              <code>IsTruncated</code> response element returns <code>true</code>,
              and <code>Marker</code> contains a value to include in the subsequent
              call that tells the service where to continue from.</p>
        SAMLProviderArn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: '<p>The ARN of the Security Assertion Markup Language (SAML)
              identity provider whose tags you want to see.</p> <p>This parameter
              allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      required:
      - SAMLProviderArn
      title: ListSAMLProviderTagsRequest
      type: object
    ListSAMLProviderTagsResponse:
      properties:
        IsTruncated:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: A flag that indicates whether there are more items to return.
              If your results were truncated, you can make a subsequent pagination
              request using the <code>Marker</code> request parameter to retrieve
              more items. Note that IAM might return fewer than the <code>MaxItems</code>
              number of results even when there are more results available. We recommend
              that you check <code>IsTruncated</code> after every call to ensure that
              you receive all your results.
        Marker:
          allOf:
          - $ref: '#/components/schemas/responseMarkerType'
          - description: When <code>IsTruncated</code> is <code>true</code>, this
              element is present and contains the value to use for the <code>Marker</code>
              parameter in a subsequent pagination request.
        Tags:
          allOf:
          - $ref: '#/components/schemas/tagListType'
          - description: The list of tags that are currently attached to the Security
              Assertion Markup Language (SAML) identity provider. Each tag consists
              of a key name and an associated value. If no tags are attached to the
              specified resource, the response contains an empty list.
      required:
      - Tags
      type: object
    ListSAMLProvidersRequest:
      properties: {}
      title: ListSAMLProvidersRequest
      type: object
    ListSAMLProvidersResponse:
      description: 'Contains the response to a successful <a>ListSAMLProviders</a>
        request. '
      properties:
        SAMLProviderList:
          allOf:
          - $ref: '#/components/schemas/SAMLProviderListType'
          - description: The list of SAML provider resource objects defined in IAM
              for this Amazon Web Services account.
      type: object
    ListSSHPublicKeysRequest:
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/markerType'
          - description: Use this parameter only when paginating results and only
              after you receive a response indicating that the results are truncated.
              Set it to the value of the <code>Marker</code> element in the response
              that you received to indicate where the next call should start.
        MaxItems:
          allOf:
          - $ref: '#/components/schemas/maxItemsType'
          - description: <p>Use this only when paginating results to indicate the
              maximum number of items you want in the response. If additional items
              exist beyond the maximum you specify, the <code>IsTruncated</code> response
              element is <code>true</code>.</p> <p>If you do not include this parameter,
              the number of items defaults to 100. Note that IAM might return fewer
              results, even when there are more results available. In that case, the
              <code>IsTruncated</code> response element returns <code>true</code>,
              and <code>Marker</code> contains a value to include in the subsequent
              call that tells the service where to continue from.</p>
        UserName:
          allOf:
          - $ref: '#/components/schemas/userNameType'
          - description: '<p>The name of the IAM user to list SSH public keys for.
              If none is specified, the <code>UserName</code> field is determined
              implicitly based on the Amazon Web Services access key used to sign
              the request.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      title: ListSSHPublicKeysRequest
      type: object
    ListSSHPublicKeysResponse:
      description: Contains the response to a successful <a>ListSSHPublicKeys</a>
        request.
      properties:
        IsTruncated:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: A flag that indicates whether there are more items to return.
              If your results were truncated, you can make a subsequent pagination
              request using the <code>Marker</code> request parameter to retrieve
              more items. Note that IAM might return fewer than the <code>MaxItems</code>
              number of results even when there are more results available. We recommend
              that you check <code>IsTruncated</code> after every call to ensure that
              you receive all your results.
        Marker:
          allOf:
          - $ref: '#/components/schemas/responseMarkerType'
          - description: When <code>IsTruncated</code> is <code>true</code>, this
              element is present and contains the value to use for the <code>Marker</code>
              parameter in a subsequent pagination request.
        SSHPublicKeys:
          allOf:
          - $ref: '#/components/schemas/SSHPublicKeyListType'
          - description: A list of the SSH public keys assigned to IAM user.
      type: object
    ListServerCertificateTagsRequest:
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/markerType'
          - description: Use this parameter only when paginating results and only
              after you receive a response indicating that the results are truncated.
              Set it to the value of the <code>Marker</code> element in the response
              that you received to indicate where the next call should start.
        MaxItems:
          allOf:
          - $ref: '#/components/schemas/maxItemsType'
          - description: <p>Use this only when paginating results to indicate the
              maximum number of items you want in the response. If additional items
              exist beyond the maximum you specify, the <code>IsTruncated</code> response
              element is <code>true</code>.</p> <p>If you do not include this parameter,
              the number of items defaults to 100. Note that IAM might return fewer
              results, even when there are more results available. In that case, the
              <code>IsTruncated</code> response element returns <code>true</code>,
              and <code>Marker</code> contains a value to include in the subsequent
              call that tells the service where to continue from.</p>
        ServerCertificateName:
          allOf:
          - $ref: '#/components/schemas/serverCertificateNameType'
          - description: '<p>The name of the IAM server certificate whose tags you
              want to see.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      required:
      - ServerCertificateName
      title: ListServerCertificateTagsRequest
      type: object
    ListServerCertificateTagsResponse:
      properties:
        IsTruncated:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: A flag that indicates whether there are more items to return.
              If your results were truncated, you can make a subsequent pagination
              request using the <code>Marker</code> request parameter to retrieve
              more items. Note that IAM might return fewer than the <code>MaxItems</code>
              number of results even when there are more results available. We recommend
              that you check <code>IsTruncated</code> after every call to ensure that
              you receive all your results.
        Marker:
          allOf:
          - $ref: '#/components/schemas/responseMarkerType'
          - description: When <code>IsTruncated</code> is <code>true</code>, this
              element is present and contains the value to use for the <code>Marker</code>
              parameter in a subsequent pagination request.
        Tags:
          allOf:
          - $ref: '#/components/schemas/tagListType'
          - description: The list of tags that are currently attached to the IAM server
              certificate. Each tag consists of a key name and an associated value.
              If no tags are attached to the specified resource, the response contains
              an empty list.
      required:
      - Tags
      type: object
    ListServerCertificatesRequest:
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/markerType'
          - description: Use this parameter only when paginating results and only
              after you receive a response indicating that the results are truncated.
              Set it to the value of the <code>Marker</code> element in the response
              that you received to indicate where the next call should start.
        MaxItems:
          allOf:
          - $ref: '#/components/schemas/maxItemsType'
          - description: <p>Use this only when paginating results to indicate the
              maximum number of items you want in the response. If additional items
              exist beyond the maximum you specify, the <code>IsTruncated</code> response
              element is <code>true</code>.</p> <p>If you do not include this parameter,
              the number of items defaults to 100. Note that IAM might return fewer
              results, even when there are more results available. In that case, the
              <code>IsTruncated</code> response element returns <code>true</code>,
              and <code>Marker</code> contains a value to include in the subsequent
              call that tells the service where to continue from.</p>
        PathPrefix:
          allOf:
          - $ref: '#/components/schemas/pathPrefixType'
          - description: '<p> The path prefix for filtering the results. For example:
              <code>/company/servercerts</code> would get all server certificates
              for which the path starts with <code>/company/servercerts</code>.</p>
              <p>This parameter is optional. If it is not included, it defaults to
              a slash (/), listing all server certificates. This parameter allows
              (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
              a string of characters consisting of either a forward slash (/) by itself
              or a string that must begin and end with forward slashes. In addition,
              it can contain any ASCII character from the ! (<code>\u0021</code>)
              through the DEL character (<code>\u007F</code>), including most punctuation
              characters, digits, and upper and lowercased letters.</p>'
      title: ListServerCertificatesRequest
      type: object
    ListServerCertificatesResponse:
      description: 'Contains the response to a successful <a>ListServerCertificates</a>
        request. '
      properties:
        IsTruncated:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: A flag that indicates whether there are more items to return.
              If your results were truncated, you can make a subsequent pagination
              request using the <code>Marker</code> request parameter to retrieve
              more items. Note that IAM might return fewer than the <code>MaxItems</code>
              number of results even when there are more results available. We recommend
              that you check <code>IsTruncated</code> after every call to ensure that
              you receive all your results.
        Marker:
          allOf:
          - $ref: '#/components/schemas/responseMarkerType'
          - description: When <code>IsTruncated</code> is <code>true</code>, this
              element is present and contains the value to use for the <code>Marker</code>
              parameter in a subsequent pagination request.
        ServerCertificateMetadataList:
          allOf:
          - $ref: '#/components/schemas/serverCertificateMetadataListType'
          - description: A list of server certificates.
      required:
      - ServerCertificateMetadataList
      type: object
    ListServiceSpecificCredentialsRequest:
      properties:
        ServiceName:
          allOf:
          - $ref: '#/components/schemas/serviceName'
          - description: Filters the returned results to only those for the specified
              Amazon Web Services service. If not specified, then Amazon Web Services
              returns service-specific credentials for all services.
        UserName:
          allOf:
          - $ref: '#/components/schemas/userNameType'
          - description: '<p>The name of the user whose service-specific credentials
              you want information about. If this value is not specified, then the
              operation assumes the user whose credentials are used to call the operation.</p>
              <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      title: ListServiceSpecificCredentialsRequest
      type: object
    ListServiceSpecificCredentialsResponse:
      properties:
        ServiceSpecificCredentials:
          allOf:
          - $ref: '#/components/schemas/ServiceSpecificCredentialsListType'
          - description: A list of structures that each contain details about a service-specific
              credential.
      type: object
    ListSigningCertificatesRequest:
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/markerType'
          - description: Use this parameter only when paginating results and only
              after you receive a response indicating that the results are truncated.
              Set it to the value of the <code>Marker</code> element in the response
              that you received to indicate where the next call should start.
        MaxItems:
          allOf:
          - $ref: '#/components/schemas/maxItemsType'
          - description: <p>Use this only when paginating results to indicate the
              maximum number of items you want in the response. If additional items
              exist beyond the maximum you specify, the <code>IsTruncated</code> response
              element is <code>true</code>.</p> <p>If you do not include this parameter,
              the number of items defaults to 100. Note that IAM might return fewer
              results, even when there are more results available. In that case, the
              <code>IsTruncated</code> response element returns <code>true</code>,
              and <code>Marker</code> contains a value to include in the subsequent
              call that tells the service where to continue from.</p>
        UserName:
          allOf:
          - $ref: '#/components/schemas/existingUserNameType'
          - description: '<p>The name of the IAM user whose signing certificates you
              want to examine.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      title: ListSigningCertificatesRequest
      type: object
    ListSigningCertificatesResponse:
      description: 'Contains the response to a successful <a>ListSigningCertificates</a>
        request. '
      example:
        Certificates:
        - CertificateBody: '-----BEGIN CERTIFICATE-----<certificate-body>-----END
            CERTIFICATE-----'
          CertificateId: TA7SMP42TDN5Z26OBPJE7EXAMPLE
          Status: Active
          UploadDate: '2013-06-06T21:40:08Z'
          UserName: Bob
      properties:
        Certificates:
          allOf:
          - $ref: '#/components/schemas/certificateListType'
          - description: A list of the user's signing certificate information.
        IsTruncated:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: A flag that indicates whether there are more items to return.
              If your results were truncated, you can make a subsequent pagination
              request using the <code>Marker</code> request parameter to retrieve
              more items. Note that IAM might return fewer than the <code>MaxItems</code>
              number of results even when there are more results available. We recommend
              that you check <code>IsTruncated</code> after every call to ensure that
              you receive all your results.
        Marker:
          allOf:
          - $ref: '#/components/schemas/responseMarkerType'
          - description: When <code>IsTruncated</code> is <code>true</code>, this
              element is present and contains the value to use for the <code>Marker</code>
              parameter in a subsequent pagination request.
      required:
      - Certificates
      type: object
    ListUserPoliciesRequest:
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/markerType'
          - description: Use this parameter only when paginating results and only
              after you receive a response indicating that the results are truncated.
              Set it to the value of the <code>Marker</code> element in the response
              that you received to indicate where the next call should start.
        MaxItems:
          allOf:
          - $ref: '#/components/schemas/maxItemsType'
          - description: <p>Use this only when paginating results to indicate the
              maximum number of items you want in the response. If additional items
              exist beyond the maximum you specify, the <code>IsTruncated</code> response
              element is <code>true</code>.</p> <p>If you do not include this parameter,
              the number of items defaults to 100. Note that IAM might return fewer
              results, even when there are more results available. In that case, the
              <code>IsTruncated</code> response element returns <code>true</code>,
              and <code>Marker</code> contains a value to include in the subsequent
              call that tells the service where to continue from.</p>
        UserName:
          allOf:
          - $ref: '#/components/schemas/existingUserNameType'
          - description: '<p>The name of the user to list policies for.</p> <p>This
              parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      required:
      - UserName
      title: ListUserPoliciesRequest
      type: object
    ListUserPoliciesResponse:
      description: 'Contains the response to a successful <a>ListUserPolicies</a>
        request. '
      properties:
        IsTruncated:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: A flag that indicates whether there are more items to return.
              If your results were truncated, you can make a subsequent pagination
              request using the <code>Marker</code> request parameter to retrieve
              more items. Note that IAM might return fewer than the <code>MaxItems</code>
              number of results even when there are more results available. We recommend
              that you check <code>IsTruncated</code> after every call to ensure that
              you receive all your results.
        Marker:
          allOf:
          - $ref: '#/components/schemas/responseMarkerType'
          - description: When <code>IsTruncated</code> is <code>true</code>, this
              element is present and contains the value to use for the <code>Marker</code>
              parameter in a subsequent pagination request.
        PolicyNames:
          allOf:
          - $ref: '#/components/schemas/policyNameListType'
          - description: A list of policy names.
      required:
      - PolicyNames
      type: object
    ListUserTagsRequest:
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/markerType'
          - description: Use this parameter only when paginating results and only
              after you receive a response indicating that the results are truncated.
              Set it to the value of the <code>Marker</code> element in the response
              that you received to indicate where the next call should start.
        MaxItems:
          allOf:
          - $ref: '#/components/schemas/maxItemsType'
          - description: <p>Use this only when paginating results to indicate the
              maximum number of items you want in the response. If additional items
              exist beyond the maximum you specify, the <code>IsTruncated</code> response
              element is <code>true</code>.</p> <p>If you do not include this parameter,
              the number of items defaults to 100. Note that IAM might return fewer
              results, even when there are more results available. In that case, the
              <code>IsTruncated</code> response element returns <code>true</code>,
              and <code>Marker</code> contains a value to include in the subsequent
              call that tells the service where to continue from.</p>
        UserName:
          allOf:
          - $ref: '#/components/schemas/existingUserNameType'
          - description: '<p>The name of the IAM user whose tags you want to see.</p>
              <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      required:
      - UserName
      title: ListUserTagsRequest
      type: object
    ListUserTagsResponse:
      example:
        IsTruncated: false
        Tags:
        - Key: Dept
          Value: '12345'
        - Key: Team
          Value: Accounting
      properties:
        IsTruncated:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: A flag that indicates whether there are more items to return.
              If your results were truncated, you can make a subsequent pagination
              request using the <code>Marker</code> request parameter to retrieve
              more items. Note that IAM might return fewer than the <code>MaxItems</code>
              number of results even when there are more results available. We recommend
              that you check <code>IsTruncated</code> after every call to ensure that
              you receive all your results.
        Marker:
          allOf:
          - $ref: '#/components/schemas/responseMarkerType'
          - description: When <code>IsTruncated</code> is <code>true</code>, this
              element is present and contains the value to use for the <code>Marker</code>
              parameter in a subsequent pagination request.
        Tags:
          allOf:
          - $ref: '#/components/schemas/tagListType'
          - description: The list of tags that are currently attached to the user.
              Each tag consists of a key name and an associated value. If no tags
              are attached to the specified resource, the response contains an empty
              list.
      required:
      - Tags
      type: object
    ListUsersRequest:
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/markerType'
          - description: Use this parameter only when paginating results and only
              after you receive a response indicating that the results are truncated.
              Set it to the value of the <code>Marker</code> element in the response
              that you received to indicate where the next call should start.
        MaxItems:
          allOf:
          - $ref: '#/components/schemas/maxItemsType'
          - description: <p>Use this only when paginating results to indicate the
              maximum number of items you want in the response. If additional items
              exist beyond the maximum you specify, the <code>IsTruncated</code> response
              element is <code>true</code>.</p> <p>If you do not include this parameter,
              the number of items defaults to 100. Note that IAM might return fewer
              results, even when there are more results available. In that case, the
              <code>IsTruncated</code> response element returns <code>true</code>,
              and <code>Marker</code> contains a value to include in the subsequent
              call that tells the service where to continue from.</p>
        PathPrefix:
          allOf:
          - $ref: '#/components/schemas/pathPrefixType'
          - description: '<p> The path prefix for filtering the results. For example:
              <code>/division_abc/subdivision_xyz/</code>, which would get all user
              names whose path starts with <code>/division_abc/subdivision_xyz/</code>.</p>
              <p>This parameter is optional. If it is not included, it defaults to
              a slash (/), listing all user names. This parameter allows (through
              its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string
              of characters consisting of either a forward slash (/) by itself or
              a string that must begin and end with forward slashes. In addition,
              it can contain any ASCII character from the ! (<code>\u0021</code>)
              through the DEL character (<code>\u007F</code>), including most punctuation
              characters, digits, and upper and lowercased letters.</p>'
      title: ListUsersRequest
      type: object
    ListUsersResponse:
      description: 'Contains the response to a successful <a>ListUsers</a> request. '
      example:
        Users:
        - Arn: arn:aws:iam::123456789012:user/division_abc/subdivision_xyz/engineering/Juan
          CreateDate: '2012-09-05T19:38:48Z'
          PasswordLastUsed: '2016-09-08T21:47:36Z'
          Path: /division_abc/subdivision_xyz/engineering/
          UserId: AID2MAB8DPLSRHEXAMPLE
          UserName: Juan
        - Arn: arn:aws:iam::123456789012:user/division_abc/subdivision_xyz/engineering/Anika
          CreateDate: '2014-04-09T15:43:45Z'
          PasswordLastUsed: '2016-09-24T16:18:07Z'
          Path: /division_abc/subdivision_xyz/engineering/
          UserId: AIDIODR4TAW7CSEXAMPLE
          UserName: Anika
      properties:
        IsTruncated:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: A flag that indicates whether there are more items to return.
              If your results were truncated, you can make a subsequent pagination
              request using the <code>Marker</code> request parameter to retrieve
              more items. Note that IAM might return fewer than the <code>MaxItems</code>
              number of results even when there are more results available. We recommend
              that you check <code>IsTruncated</code> after every call to ensure that
              you receive all your results.
        Marker:
          allOf:
          - $ref: '#/components/schemas/responseMarkerType'
          - description: When <code>IsTruncated</code> is <code>true</code>, this
              element is present and contains the value to use for the <code>Marker</code>
              parameter in a subsequent pagination request.
        Users:
          allOf:
          - $ref: '#/components/schemas/userListType'
          - description: A list of users.
      required:
      - Users
      type: object
    ListVirtualMFADevicesRequest:
      properties:
        AssignmentStatus:
          allOf:
          - $ref: '#/components/schemas/assignmentStatusType'
          - description: ' The status (<code>Unassigned</code> or <code>Assigned</code>)
              of the devices to list. If you do not specify an <code>AssignmentStatus</code>,
              the operation defaults to <code>Any</code>, which lists both assigned
              and unassigned virtual MFA devices.,'
        Marker:
          allOf:
          - $ref: '#/components/schemas/markerType'
          - description: Use this parameter only when paginating results and only
              after you receive a response indicating that the results are truncated.
              Set it to the value of the <code>Marker</code> element in the response
              that you received to indicate where the next call should start.
        MaxItems:
          allOf:
          - $ref: '#/components/schemas/maxItemsType'
          - description: <p>Use this only when paginating results to indicate the
              maximum number of items you want in the response. If additional items
              exist beyond the maximum you specify, the <code>IsTruncated</code> response
              element is <code>true</code>.</p> <p>If you do not include this parameter,
              the number of items defaults to 100. Note that IAM might return fewer
              results, even when there are more results available. In that case, the
              <code>IsTruncated</code> response element returns <code>true</code>,
              and <code>Marker</code> contains a value to include in the subsequent
              call that tells the service where to continue from.</p>
      title: ListVirtualMFADevicesRequest
      type: object
    ListVirtualMFADevicesResponse:
      description: 'Contains the response to a successful <a>ListVirtualMFADevices</a>
        request. '
      example:
        VirtualMFADevices:
        - SerialNumber: arn:aws:iam::123456789012:mfa/ExampleMFADevice
        - SerialNumber: arn:aws:iam::123456789012:mfa/Juan
      properties:
        IsTruncated:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: A flag that indicates whether there are more items to return.
              If your results were truncated, you can make a subsequent pagination
              request using the <code>Marker</code> request parameter to retrieve
              more items. Note that IAM might return fewer than the <code>MaxItems</code>
              number of results even when there are more results available. We recommend
              that you check <code>IsTruncated</code> after every call to ensure that
              you receive all your results.
        Marker:
          allOf:
          - $ref: '#/components/schemas/responseMarkerType'
          - description: When <code>IsTruncated</code> is <code>true</code>, this
              element is present and contains the value to use for the <code>Marker</code>
              parameter in a subsequent pagination request.
        VirtualMFADevices:
          allOf:
          - $ref: '#/components/schemas/virtualMFADeviceListType'
          - description: ' The list of virtual MFA devices in the current account
              that match the <code>AssignmentStatus</code> value that was passed in
              the request.'
      required:
      - VirtualMFADevices
      type: object
    LoginProfile:
      description: <p>Contains the user name and password create date for a user.</p>
        <p> This data type is used as a response element in the <a>CreateLoginProfile</a>
        and <a>GetLoginProfile</a> operations. </p>
      properties:
        CreateDate:
          allOf:
          - $ref: '#/components/schemas/dateType'
          - description: The date when the password for the user was created.
        PasswordResetRequired:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: Specifies whether the user is required to set a new password
              on next sign-in.
        UserName:
          allOf:
          - $ref: '#/components/schemas/userNameType'
          - description: The name of the user, which can be used for signing in to
              the Amazon Web Services Management Console.
      required:
      - UserName
      - CreateDate
      type: object
    MFADevice:
      description: <p>Contains information about an MFA device.</p> <p>This data type
        is used as a response element in the <a>ListMFADevices</a> operation.</p>
      properties:
        EnableDate:
          allOf:
          - $ref: '#/components/schemas/dateType'
          - description: The date when the MFA device was enabled for the user.
        SerialNumber:
          allOf:
          - $ref: '#/components/schemas/serialNumberType'
          - description: The serial number that uniquely identifies the MFA device.
              For virtual MFA devices, the serial number is the device ARN.
        UserName:
          allOf:
          - $ref: '#/components/schemas/userNameType'
          - description: The user with whom the MFA device is associated.
      required:
      - UserName
      - SerialNumber
      - EnableDate
      type: object
    MalformedCertificateException: {}
    MalformedPolicyDocumentException: {}
    ManagedPolicyDetail:
      description: <p>Contains information about a managed policy, including the policy's
        ARN, versions, and the number of principal entities (users, groups, and roles)
        that the policy is attached to.</p> <p>This data type is used as a response
        element in the <a>GetAccountAuthorizationDetails</a> operation.</p> <p>For
        more information about managed policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>. </p>
      properties:
        Arn:
          $ref: '#/components/schemas/arnType'
        AttachmentCount:
          allOf:
          - $ref: '#/components/schemas/attachmentCountType'
          - description: The number of principal entities (users, groups, and roles)
              that the policy is attached to.
        CreateDate:
          allOf:
          - $ref: '#/components/schemas/dateType'
          - description: The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO
              8601 date-time format</a>, when the policy was created.
        DefaultVersionId:
          allOf:
          - $ref: '#/components/schemas/policyVersionIdType'
          - description: <p>The identifier for the version of the policy that is set
              as the default (operative) version.</p> <p>For more information about
              policy versions, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning
              for managed policies</a> in the <i>IAM User Guide</i>. </p>
        Description:
          allOf:
          - $ref: '#/components/schemas/policyDescriptionType'
          - description: A friendly description of the policy.
        IsAttachable:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: Specifies whether the policy can be attached to an IAM user,
              group, or role.
        Path:
          allOf:
          - $ref: '#/components/schemas/policyPathType'
          - description: <p>The path to the policy.</p> <p>For more information about
              paths, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
              identifiers</a> in the <i>IAM User Guide</i>.</p>
        PermissionsBoundaryUsageCount:
          allOf:
          - $ref: '#/components/schemas/attachmentCountType'
          - description: <p>The number of entities (users and roles) for which the
              policy is used as the permissions boundary. </p> <p>For more information
              about permissions boundaries, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html">Permissions
              boundaries for IAM identities </a> in the <i>IAM User Guide</i>.</p>
        PolicyId:
          allOf:
          - $ref: '#/components/schemas/idType'
          - description: <p>The stable and unique string identifying the policy.</p>
              <p>For more information about IDs, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
              identifiers</a> in the <i>IAM User Guide</i>.</p>
        PolicyName:
          allOf:
          - $ref: '#/components/schemas/policyNameType'
          - description: The friendly name (not ARN) identifying the policy.
        PolicyVersionList:
          allOf:
          - $ref: '#/components/schemas/policyDocumentVersionListType'
          - description: A list containing information about the versions of the policy.
        UpdateDate:
          allOf:
          - $ref: '#/components/schemas/dateType'
          - description: <p>The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO
              8601 date-time format</a>, when the policy was last updated.</p> <p>When
              a policy has only one version, this field contains the date and time
              when the policy was created. When a policy has more than one version,
              this field contains the date and time when the most recent policy version
              was created.</p>
      type: object
    ManagedPolicyDetailListType:
      items:
        $ref: '#/components/schemas/ManagedPolicyDetail'
      type: array
    NoSuchEntityException: {}
    OpenIDConnectProviderListEntry:
      description: Contains the Amazon Resource Name (ARN) for an IAM OpenID Connect
        provider.
      properties:
        Arn:
          $ref: '#/components/schemas/arnType'
      type: object
    OpenIDConnectProviderListType:
      description: Contains a list of IAM OpenID Connect providers.
      items:
        $ref: '#/components/schemas/OpenIDConnectProviderListEntry'
      type: array
    OpenIDConnectProviderUrlType:
      description: Contains a URL that specifies the endpoint for an OpenID Connect
        provider.
      maxLength: 255
      minLength: 1
      type: string
    OrganizationsDecisionDetail:
      description: Contains information about the effect that Organizations has on
        a policy simulation.
      properties:
        AllowedByOrganizations:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: Specifies whether the simulated operation is allowed by the
              Organizations service control policies that impact the simulated user's
              account.
      type: object
    PasswordPolicy:
      description: <p>Contains information about the account password policy.</p>
        <p> This data type is used as a response element in the <a>GetAccountPasswordPolicy</a>
        operation. </p>
      properties:
        AllowUsersToChangePassword:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: Specifies whether IAM users are allowed to change their own
              password. Gives IAM users permissions to <code>iam:ChangePassword</code>
              for only their user and to the <code>iam:GetAccountPasswordPolicy</code>
              action. This option does not attach a permissions policy to each user,
              rather the permissions are applied at the account-level for all users
              by IAM.
        ExpirePasswords:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: Indicates whether passwords in the account expire. Returns
              true if <code>MaxPasswordAge</code> contains a value greater than 0.
              Returns false if MaxPasswordAge is 0 or not present.
        HardExpiry:
          allOf:
          - $ref: '#/components/schemas/booleanObjectType'
          - description: Specifies whether IAM users are prevented from setting a
              new password via the Amazon Web Services Management Console after their
              password has expired. The IAM user cannot access the console until an
              administrator resets the password. IAM users with <code>iam:ChangePassword</code>
              permission and active access keys can reset their own expired console
              password using the CLI or API.
        MaxPasswordAge:
          allOf:
          - $ref: '#/components/schemas/maxPasswordAgeType'
          - description: The number of days that an IAM user password is valid.
        MinimumPasswordLength:
          allOf:
          - $ref: '#/components/schemas/minimumPasswordLengthType'
          - description: Minimum length to require for IAM user passwords.
        PasswordReusePrevention:
          allOf:
          - $ref: '#/components/schemas/passwordReusePreventionType'
          - description: Specifies the number of previous passwords that IAM users
              are prevented from reusing.
        RequireLowercaseCharacters:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: Specifies whether IAM user passwords must contain at least
              one lowercase character (a to z).
        RequireNumbers:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: Specifies whether IAM user passwords must contain at least
              one numeric character (0 to 9).
        RequireSymbols:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: '<p>Specifies whether IAM user passwords must contain at
              least one of the following symbols:</p> <p>! @ # $ % ^ &amp; * ( ) _
              + - = [ ] { } | ''</p>'
        RequireUppercaseCharacters:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: Specifies whether IAM user passwords must contain at least
              one uppercase character (A to Z).
      type: object
    PasswordPolicyViolationException: {}
    PermissionsBoundaryAttachmentType:
      enum:
      - PermissionsBoundaryPolicy
      type: string
    PermissionsBoundaryDecisionDetail:
      description: Contains information about the effect that a permissions boundary
        has on a policy simulation when the boundary is applied to an IAM entity.
      properties:
        AllowedByPermissionsBoundary:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: Specifies whether an action is allowed by a permissions boundary
              that is applied to an IAM entity (user or role). A value of <code>true</code>
              means that the permissions boundary does not deny the action. This means
              that the policy includes an <code>Allow</code> statement that matches
              the request. In this case, if an identity-based policy also allows the
              action, the request is allowed. A value of <code>false</code> means
              that either the requested action is not allowed (implicitly denied)
              or that the action is explicitly denied by the permissions boundary.
              In both of these cases, the action is not allowed, regardless of the
              identity-based policy.
      type: object
    Policy:
      description: <p>Contains information about a managed policy.</p> <p>This data
        type is used as a response element in the <a>CreatePolicy</a>, <a>GetPolicy</a>,
        and <a>ListPolicies</a> operations. </p> <p>For more information about managed
        policies, refer to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>. </p>
      properties:
        Arn:
          $ref: '#/components/schemas/arnType'
        AttachmentCount:
          allOf:
          - $ref: '#/components/schemas/attachmentCountType'
          - description: The number of entities (users, groups, and roles) that the
              policy is attached to.
        CreateDate:
          allOf:
          - $ref: '#/components/schemas/dateType'
          - description: The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO
              8601 date-time format</a>, when the policy was created.
        DefaultVersionId:
          allOf:
          - $ref: '#/components/schemas/policyVersionIdType'
          - description: The identifier for the version of the policy that is set
              as the default version.
        Description:
          allOf:
          - $ref: '#/components/schemas/policyDescriptionType'
          - description: <p>A friendly description of the policy.</p> <p>This element
              is included in the response to the <a>GetPolicy</a> operation. It is
              not included in the response to the <a>ListPolicies</a> operation. </p>
        IsAttachable:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: Specifies whether the policy can be attached to an IAM user,
              group, or role.
        Path:
          allOf:
          - $ref: '#/components/schemas/policyPathType'
          - description: <p>The path to the policy.</p> <p>For more information about
              paths, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
              identifiers</a> in the <i>IAM User Guide</i>.</p>
        PermissionsBoundaryUsageCount:
          allOf:
          - $ref: '#/components/schemas/attachmentCountType'
          - description: <p>The number of entities (users and roles) for which the
              policy is used to set the permissions boundary. </p> <p>For more information
              about permissions boundaries, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html">Permissions
              boundaries for IAM identities </a> in the <i>IAM User Guide</i>.</p>
        PolicyId:
          allOf:
          - $ref: '#/components/schemas/idType'
          - description: <p>The stable and unique string identifying the policy.</p>
              <p>For more information about IDs, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
              identifiers</a> in the <i>IAM User Guide</i>.</p>
        PolicyName:
          allOf:
          - $ref: '#/components/schemas/policyNameType'
          - description: The friendly name (not ARN) identifying the policy.
        Tags:
          allOf:
          - $ref: '#/components/schemas/tagListType'
          - description: A list of tags that are attached to the instance profile.
              For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
              IAM resources</a> in the <i>IAM User Guide</i>.
        UpdateDate:
          allOf:
          - $ref: '#/components/schemas/dateType'
          - description: <p>The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO
              8601 date-time format</a>, when the policy was last updated.</p> <p>When
              a policy has only one version, this field contains the date and time
              when the policy was created. When a policy has more than one version,
              this field contains the date and time when the most recent policy version
              was created.</p>
      type: object
    PolicyDetail:
      description: <p>Contains information about an IAM policy, including the policy
        document.</p> <p>This data type is used as a response element in the <a>GetAccountAuthorizationDetails</a>
        operation.</p>
      properties:
        PolicyDocument:
          allOf:
          - $ref: '#/components/schemas/policyDocumentType'
          - description: The policy document.
        PolicyName:
          allOf:
          - $ref: '#/components/schemas/policyNameType'
          - description: The name of the policy.
      type: object
    PolicyEvaluationDecisionType:
      enum:
      - allowed
      - explicitDeny
      - implicitDeny
      type: string
    PolicyEvaluationException: {}
    PolicyGrantingServiceAccess:
      description: <p>Contains details about the permissions policies that are attached
        to the specified identity (user, group, or role).</p> <p>This data type is
        an element of the <a>ListPoliciesGrantingServiceAccessEntry</a> object.</p>
      properties:
        EntityName:
          allOf:
          - $ref: '#/components/schemas/entityNameType'
          - description: <p>The name of the entity (user or role) to which the inline
              policy is attached.</p> <p>This field is null for managed policies.
              For more information about these policy types, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_managed-vs-inline.html">Managed
              policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
        EntityType:
          allOf:
          - $ref: '#/components/schemas/policyOwnerEntityType'
          - description: <p>The type of entity (user or role) that used the policy
              to access the service to which the inline policy is attached.</p> <p>This
              field is null for managed policies. For more information about these
              policy types, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_managed-vs-inline.html">Managed
              policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
        PolicyArn:
          $ref: '#/components/schemas/arnType'
        PolicyName:
          allOf:
          - $ref: '#/components/schemas/policyNameType'
          - description: The policy name.
        PolicyType:
          allOf:
          - $ref: '#/components/schemas/policyType'
          - description: The policy type. For more information about these policy
              types, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_managed-vs-inline.html">Managed
              policies and inline policies</a> in the <i>IAM User Guide</i>.
      required:
      - PolicyName
      - PolicyType
      type: object
    PolicyGroup:
      description: <p>Contains information about a group that a managed policy is
        attached to.</p> <p>This data type is used as a response element in the <a>ListEntitiesForPolicy</a>
        operation. </p> <p>For more information about managed policies, refer to <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>. </p>
      properties:
        GroupId:
          allOf:
          - $ref: '#/components/schemas/idType'
          - description: The stable and unique string identifying the group. For more
              information about IDs, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html">IAM
              identifiers</a> in the <i>IAM User Guide</i>.
        GroupName:
          allOf:
          - $ref: '#/components/schemas/groupNameType'
          - description: The name (friendly name, not ARN) identifying the group.
      type: object
    PolicyGroupListType:
      items:
        $ref: '#/components/schemas/PolicyGroup'
      type: array
    PolicyIdentifierType:
      type: string
    PolicyNotAttachableException: {}
    PolicyRole:
      description: <p>Contains information about a role that a managed policy is attached
        to.</p> <p>This data type is used as a response element in the <a>ListEntitiesForPolicy</a>
        operation. </p> <p>For more information about managed policies, refer to <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>. </p>
      properties:
        RoleId:
          allOf:
          - $ref: '#/components/schemas/idType'
          - description: The stable and unique string identifying the role. For more
              information about IDs, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html">IAM
              identifiers</a> in the <i>IAM User Guide</i>.
        RoleName:
          allOf:
          - $ref: '#/components/schemas/roleNameType'
          - description: The name (friendly name, not ARN) identifying the role.
      type: object
    PolicyRoleListType:
      items:
        $ref: '#/components/schemas/PolicyRole'
      type: array
    PolicySourceType:
      enum:
      - user
      - group
      - role
      - aws-managed
      - user-managed
      - resource
      - none
      type: string
    PolicyUsageType:
      description: <p>The policy usage type that indicates whether the policy is used
        as a permissions policy or as the permissions boundary for an entity.</p>
        <p>For more information about permissions boundaries, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html">Permissions
        boundaries for IAM identities </a> in the <i>IAM User Guide</i>.</p>
      enum:
      - PermissionsPolicy
      - PermissionsBoundary
      type: string
    PolicyUser:
      description: <p>Contains information about a user that a managed policy is attached
        to.</p> <p>This data type is used as a response element in the <a>ListEntitiesForPolicy</a>
        operation. </p> <p>For more information about managed policies, refer to <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>. </p>
      properties:
        UserId:
          allOf:
          - $ref: '#/components/schemas/idType'
          - description: The stable and unique string identifying the user. For more
              information about IDs, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html">IAM
              identifiers</a> in the <i>IAM User Guide</i>.
        UserName:
          allOf:
          - $ref: '#/components/schemas/userNameType'
          - description: The name (friendly name, not ARN) identifying the user.
      type: object
    PolicyUserListType:
      items:
        $ref: '#/components/schemas/PolicyUser'
      type: array
    PolicyVersion:
      description: <p>Contains information about a version of a managed policy.</p>
        <p>This data type is used as a response element in the <a>CreatePolicyVersion</a>,
        <a>GetPolicyVersion</a>, <a>ListPolicyVersions</a>, and <a>GetAccountAuthorizationDetails</a>
        operations. </p> <p>For more information about managed policies, refer to
        <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>. </p>
      properties:
        CreateDate:
          allOf:
          - $ref: '#/components/schemas/dateType'
          - description: The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO
              8601 date-time format</a>, when the policy version was created.
        Document:
          allOf:
          - $ref: '#/components/schemas/policyDocumentType'
          - description: <p>The policy document.</p> <p>The policy document is returned
              in the response to the <a>GetPolicyVersion</a> and <a>GetAccountAuthorizationDetails</a>
              operations. It is not returned in the response to the <a>CreatePolicyVersion</a>
              or <a>ListPolicyVersions</a> operations. </p> <p>The policy document
              returned in this structure is URL-encoded compliant with <a href="https://tools.ietf.org/html/rfc3986">RFC
              3986</a>. You can use a URL decoding method to convert the policy back
              to plain JSON text. For example, if you use Java, you can use the <code>decode</code>
              method of the <code>java.net.URLDecoder</code> utility class in the
              Java SDK. Other languages and SDKs provide similar functionality.</p>
        IsDefaultVersion:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: Specifies whether the policy version is set as the policy's
              default version.
        VersionId:
          allOf:
          - $ref: '#/components/schemas/policyVersionIdType'
          - description: <p>The identifier for the policy version.</p> <p>Policy version
              identifiers always begin with <code>v</code> (always lowercase). When
              a policy is created, the first policy version is <code>v1</code>. </p>
      type: object
    Position:
      description: <p>Contains the row and column of a location of a <code>Statement</code>
        element in a policy document.</p> <p>This data type is used as a member of
        the <code> <a>Statement</a> </code> type.</p>
      properties:
        Column:
          allOf:
          - $ref: '#/components/schemas/ColumnNumber'
          - description: The column in the line containing the specified position
              in the document.
        Line:
          allOf:
          - $ref: '#/components/schemas/LineNumber'
          - description: The line containing the specified position in the document.
      type: object
    PutGroupPolicyRequest:
      properties:
        GroupName:
          allOf:
          - $ref: '#/components/schemas/groupNameType'
          - description: '<p>The name of the group to associate the policy with.</p>
              <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-.</p>'
        PolicyDocument:
          allOf:
          - $ref: '#/components/schemas/policyDocumentType'
          - description: <p>The policy document.</p> <p>You must provide policies
              in JSON format in IAM. However, for CloudFormation templates formatted
              in YAML, you can provide the policy in JSON or YAML format. CloudFormation
              always converts a YAML policy to JSON format before submitting it to
              = IAM.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a>
              used to validate this parameter is a string of characters consisting
              of the following:</p> <ul> <li> <p>Any printable ASCII character ranging
              from the space character (<code>\u0020</code>) through the end of the
              ASCII character range</p> </li> <li> <p>The printable characters in
              the Basic Latin and Latin-1 Supplement character set (through <code>\u00FF</code>)</p>
              </li> <li> <p>The special characters tab (<code>\u0009</code>), line
              feed (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p>
              </li> </ul>
        PolicyName:
          allOf:
          - $ref: '#/components/schemas/policyNameType'
          - description: '<p>The name of the policy document.</p> <p>This parameter
              allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      required:
      - GroupName
      - PolicyName
      - PolicyDocument
      title: PutGroupPolicyRequest
      type: object
    PutRolePermissionsBoundaryRequest:
      properties:
        PermissionsBoundary:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: The ARN of the policy that is used to set the permissions
              boundary for the role.
        RoleName:
          allOf:
          - $ref: '#/components/schemas/roleNameType'
          - description: The name (friendly name, not ARN) of the IAM role for which
              you want to set the permissions boundary.
      required:
      - RoleName
      - PermissionsBoundary
      title: PutRolePermissionsBoundaryRequest
      type: object
    PutRolePolicyRequest:
      properties:
        PolicyDocument:
          allOf:
          - $ref: '#/components/schemas/policyDocumentType'
          - description: <p>The policy document.</p> <p>You must provide policies
              in JSON format in IAM. However, for CloudFormation templates formatted
              in YAML, you can provide the policy in JSON or YAML format. CloudFormation
              always converts a YAML policy to JSON format before submitting it to
              IAM.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a>
              used to validate this parameter is a string of characters consisting
              of the following:</p> <ul> <li> <p>Any printable ASCII character ranging
              from the space character (<code>\u0020</code>) through the end of the
              ASCII character range</p> </li> <li> <p>The printable characters in
              the Basic Latin and Latin-1 Supplement character set (through <code>\u00FF</code>)</p>
              </li> <li> <p>The special characters tab (<code>\u0009</code>), line
              feed (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p>
              </li> </ul>
        PolicyName:
          allOf:
          - $ref: '#/components/schemas/policyNameType'
          - description: '<p>The name of the policy document.</p> <p>This parameter
              allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
        RoleName:
          allOf:
          - $ref: '#/components/schemas/roleNameType'
          - description: '<p>The name of the role to associate the policy with.</p>
              <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      required:
      - RoleName
      - PolicyName
      - PolicyDocument
      title: PutRolePolicyRequest
      type: object
    PutUserPermissionsBoundaryRequest:
      properties:
        PermissionsBoundary:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: The ARN of the policy that is used to set the permissions
              boundary for the user.
        UserName:
          allOf:
          - $ref: '#/components/schemas/userNameType'
          - description: The name (friendly name, not ARN) of the IAM user for which
              you want to set the permissions boundary.
      required:
      - UserName
      - PermissionsBoundary
      title: PutUserPermissionsBoundaryRequest
      type: object
    PutUserPolicyRequest:
      properties:
        PolicyDocument:
          allOf:
          - $ref: '#/components/schemas/policyDocumentType'
          - description: <p>The policy document.</p> <p>You must provide policies
              in JSON format in IAM. However, for CloudFormation templates formatted
              in YAML, you can provide the policy in JSON or YAML format. CloudFormation
              always converts a YAML policy to JSON format before submitting it to
              IAM.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a>
              used to validate this parameter is a string of characters consisting
              of the following:</p> <ul> <li> <p>Any printable ASCII character ranging
              from the space character (<code>\u0020</code>) through the end of the
              ASCII character range</p> </li> <li> <p>The printable characters in
              the Basic Latin and Latin-1 Supplement character set (through <code>\u00FF</code>)</p>
              </li> <li> <p>The special characters tab (<code>\u0009</code>), line
              feed (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p>
              </li> </ul>
        PolicyName:
          allOf:
          - $ref: '#/components/schemas/policyNameType'
          - description: '<p>The name of the policy document.</p> <p>This parameter
              allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
        UserName:
          allOf:
          - $ref: '#/components/schemas/existingUserNameType'
          - description: '<p>The name of the user to associate the policy with.</p>
              <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      required:
      - UserName
      - PolicyName
      - PolicyDocument
      title: PutUserPolicyRequest
      type: object
    ReasonType:
      maxLength: 1000
      type: string
    RegionNameType:
      maxLength: 100
      minLength: 1
      type: string
    RemoveClientIDFromOpenIDConnectProviderRequest:
      properties:
        ClientID:
          allOf:
          - $ref: '#/components/schemas/clientIDType'
          - description: The client ID (also known as audience) to remove from the
              IAM OIDC provider resource. For more information about client IDs, see
              <a>CreateOpenIDConnectProvider</a>.
        OpenIDConnectProviderArn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: <p>The Amazon Resource Name (ARN) of the IAM OIDC provider
              resource to remove the client ID from. You can get a list of OIDC provider
              ARNs by using the <a>ListOpenIDConnectProviders</a> operation.</p> <p>For
              more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
              Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
      required:
      - OpenIDConnectProviderArn
      - ClientID
      title: RemoveClientIDFromOpenIDConnectProviderRequest
      type: object
    RemoveRoleFromInstanceProfileRequest:
      properties:
        InstanceProfileName:
          allOf:
          - $ref: '#/components/schemas/instanceProfileNameType'
          - description: '<p>The name of the instance profile to update.</p> <p>This
              parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
        RoleName:
          allOf:
          - $ref: '#/components/schemas/roleNameType'
          - description: '<p>The name of the role to remove.</p> <p>This parameter
              allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      required:
      - InstanceProfileName
      - RoleName
      title: RemoveRoleFromInstanceProfileRequest
      type: object
    RemoveUserFromGroupRequest:
      properties:
        GroupName:
          allOf:
          - $ref: '#/components/schemas/groupNameType'
          - description: '<p>The name of the group to update.</p> <p>This parameter
              allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
        UserName:
          allOf:
          - $ref: '#/components/schemas/existingUserNameType'
          - description: '<p>The name of the user to remove.</p> <p>This parameter
              allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      required:
      - GroupName
      - UserName
      title: RemoveUserFromGroupRequest
      type: object
    ReportContentType:
      type: string
    ReportFormatType:
      enum:
      - text/csv
      type: string
    ReportGenerationLimitExceededException: {}
    ReportStateDescriptionType:
      type: string
    ReportStateType:
      enum:
      - STARTED
      - INPROGRESS
      - COMPLETE
      type: string
    ResetServiceSpecificCredentialRequest:
      properties:
        ServiceSpecificCredentialId:
          allOf:
          - $ref: '#/components/schemas/serviceSpecificCredentialId'
          - description: <p>The unique identifier of the service-specific credential.</p>
              <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters that can consist of any upper or
              lowercased letter or digit.</p>
        UserName:
          allOf:
          - $ref: '#/components/schemas/userNameType'
          - description: '<p>The name of the IAM user associated with the service-specific
              credential. If this value is not specified, then the operation assumes
              the user whose credentials are used to call the operation.</p> <p>This
              parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      required:
      - ServiceSpecificCredentialId
      title: ResetServiceSpecificCredentialRequest
      type: object
    ResetServiceSpecificCredentialResponse:
      properties:
        ServiceSpecificCredential:
          allOf:
          - $ref: '#/components/schemas/ServiceSpecificCredential'
          - description: <p>A structure with details about the updated service-specific
              credential, including the new password.</p> <important> <p>This is the
              <b>only</b> time that you can access the password. You cannot recover
              the password later, but you can reset it again.</p> </important>
      type: object
    ResourceHandlingOptionType:
      maxLength: 64
      minLength: 1
      type: string
    ResourceNameListType:
      items:
        $ref: '#/components/schemas/ResourceNameType'
      type: array
    ResourceNameType:
      maxLength: 2048
      minLength: 1
      type: string
    ResourceSpecificResult:
      description: <p>Contains the result of the simulation of a single API operation
        call on a single resource.</p> <p>This data type is used by a member of the
        <a>EvaluationResult</a> data type.</p>
      properties:
        EvalDecisionDetails:
          allOf:
          - $ref: '#/components/schemas/EvalDecisionDetailsType'
          - description: Additional details about the results of the evaluation decision
              on a single resource. This parameter is returned only for cross-account
              simulations. This parameter explains how each policy type contributes
              to the resource-specific evaluation decision.
        EvalResourceDecision:
          allOf:
          - $ref: '#/components/schemas/PolicyEvaluationDecisionType'
          - description: The result of the simulation of the simulated API operation
              on the resource specified in <code>EvalResourceName</code>.
        EvalResourceName:
          allOf:
          - $ref: '#/components/schemas/ResourceNameType'
          - description: The name of the simulated resource, in Amazon Resource Name
              (ARN) format.
        MatchedStatements:
          allOf:
          - $ref: '#/components/schemas/StatementListType'
          - description: A list of the statements in the input policies that determine
              the result for this part of the simulation. Remember that even if multiple
              statements allow the operation on the resource, if <i>any</i> statement
              denies that operation, then the explicit deny overrides any allow. In
              addition, the deny statement is the only entry included in the result.
        MissingContextValues:
          allOf:
          - $ref: '#/components/schemas/ContextKeyNamesResultListType'
          - description: A list of context keys that are required by the included
              input policies but that were not provided by one of the input parameters.
              This list is used when a list of ARNs is included in the <code>ResourceArns</code>
              parameter instead of "*". If you do not specify individual resources,
              by setting <code>ResourceArns</code> to "*" or by not including the
              <code>ResourceArns</code> parameter, then any missing context values
              are instead included under the <code>EvaluationResults</code> section.
              To discover the context keys used by a set of policies, you can call
              <a>GetContextKeysForCustomPolicy</a> or <a>GetContextKeysForPrincipalPolicy</a>.
        PermissionsBoundaryDecisionDetail:
          allOf:
          - $ref: '#/components/schemas/PermissionsBoundaryDecisionDetail'
          - description: Contains information about the effect that a permissions
              boundary has on a policy simulation when that boundary is applied to
              an IAM entity.
      required:
      - EvalResourceName
      - EvalResourceDecision
      type: object
    ResourceSpecificResultListType:
      items:
        $ref: '#/components/schemas/ResourceSpecificResult'
      type: array
    ResyncMFADeviceRequest:
      properties:
        AuthenticationCode1:
          allOf:
          - $ref: '#/components/schemas/authenticationCodeType'
          - description: <p>An authentication code emitted by the device.</p> <p>The
              format for this parameter is a sequence of six digits.</p>
        AuthenticationCode2:
          allOf:
          - $ref: '#/components/schemas/authenticationCodeType'
          - description: <p>A subsequent authentication code emitted by the device.</p>
              <p>The format for this parameter is a sequence of six digits.</p>
        SerialNumber:
          allOf:
          - $ref: '#/components/schemas/serialNumberType'
          - description: '<p>Serial number that uniquely identifies the MFA device.</p>
              <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
        UserName:
          allOf:
          - $ref: '#/components/schemas/existingUserNameType'
          - description: '<p>The name of the user whose MFA device you want to resynchronize.</p>
              <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      required:
      - UserName
      - SerialNumber
      - AuthenticationCode1
      - AuthenticationCode2
      title: ResyncMFADeviceRequest
      type: object
    Role:
      description: Contains information about an IAM role. This structure is returned
        as a response element in several API operations that interact with roles.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: ' The Amazon Resource Name (ARN) specifying the role. For
              more information about ARNs and how to use them in policies, see <a
              href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
              identifiers</a> in the <i>IAM User Guide</i> guide. '
        AssumeRolePolicyDocument:
          allOf:
          - $ref: '#/components/schemas/policyDocumentType'
          - description: The policy that grants an entity permission to assume the
              role.
        CreateDate:
          allOf:
          - $ref: '#/components/schemas/dateType'
          - description: The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO
              8601 date-time format</a>, when the role was created.
        Description:
          allOf:
          - $ref: '#/components/schemas/roleDescriptionType'
          - description: A description of the role that you provide.
        MaxSessionDuration:
          allOf:
          - $ref: '#/components/schemas/roleMaxSessionDurationType'
          - description: The maximum session duration (in seconds) for the specified
              role. Anyone who uses the CLI, or API to assume the role can specify
              the duration using the optional <code>DurationSeconds</code> API parameter
              or <code>duration-seconds</code> CLI parameter.
        Path:
          allOf:
          - $ref: '#/components/schemas/pathType'
          - description: ' The path to the role. For more information about paths,
              see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
              identifiers</a> in the <i>IAM User Guide</i>. '
        PermissionsBoundary:
          allOf:
          - $ref: '#/components/schemas/AttachedPermissionsBoundary'
          - description: <p>The ARN of the policy used to set the permissions boundary
              for the role.</p> <p>For more information about permissions boundaries,
              see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html">Permissions
              boundaries for IAM identities </a> in the <i>IAM User Guide</i>.</p>
        RoleId:
          allOf:
          - $ref: '#/components/schemas/idType'
          - description: ' The stable and unique string identifying the role. For
              more information about IDs, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
              identifiers</a> in the <i>IAM User Guide</i>. '
        RoleLastUsed:
          allOf:
          - $ref: '#/components/schemas/RoleLastUsed'
          - description: Contains information about the last time that an IAM role
              was used. This includes the date and time and the Region in which the
              role was last used. Activity is only reported for the trailing 400 days.
              This period can be shorter if your Region began supporting these features
              within the last year. The role might have been used more than 400 days
              ago. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#access-advisor_tracking-period">Regions
              where data is tracked</a> in the <i>IAM User Guide</i>.
        RoleName:
          allOf:
          - $ref: '#/components/schemas/roleNameType'
          - description: The friendly name that identifies the role.
        Tags:
          allOf:
          - $ref: '#/components/schemas/tagListType'
          - description: A list of tags that are attached to the role. For more information
              about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
              IAM resources</a> in the <i>IAM User Guide</i>.
      required:
      - Path
      - RoleName
      - RoleId
      - Arn
      - CreateDate
      type: object
    RoleDetail:
      description: <p>Contains information about an IAM role, including all of the
        role's policies.</p> <p>This data type is used as a response element in the
        <a>GetAccountAuthorizationDetails</a> operation.</p>
      properties:
        Arn:
          $ref: '#/components/schemas/arnType'
        AssumeRolePolicyDocument:
          allOf:
          - $ref: '#/components/schemas/policyDocumentType'
          - description: The trust policy that grants permission to assume the role.
        AttachedManagedPolicies:
          allOf:
          - $ref: '#/components/schemas/attachedPoliciesListType'
          - description: A list of managed policies attached to the role. These policies
              are the role's access (permissions) policies.
        CreateDate:
          allOf:
          - $ref: '#/components/schemas/dateType'
          - description: The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO
              8601 date-time format</a>, when the role was created.
        InstanceProfileList:
          allOf:
          - $ref: '#/components/schemas/instanceProfileListType'
          - description: A list of instance profiles that contain this role.
        Path:
          allOf:
          - $ref: '#/components/schemas/pathType'
          - description: The path to the role. For more information about paths, see
              <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
              identifiers</a> in the <i>IAM User Guide</i>.
        PermissionsBoundary:
          allOf:
          - $ref: '#/components/schemas/AttachedPermissionsBoundary'
          - description: <p>The ARN of the policy used to set the permissions boundary
              for the role.</p> <p>For more information about permissions boundaries,
              see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html">Permissions
              boundaries for IAM identities </a> in the <i>IAM User Guide</i>.</p>
        RoleId:
          allOf:
          - $ref: '#/components/schemas/idType'
          - description: The stable and unique string identifying the role. For more
              information about IDs, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
              identifiers</a> in the <i>IAM User Guide</i>.
        RoleLastUsed:
          allOf:
          - $ref: '#/components/schemas/RoleLastUsed'
          - description: Contains information about the last time that an IAM role
              was used. This includes the date and time and the Region in which the
              role was last used. Activity is only reported for the trailing 400 days.
              This period can be shorter if your Region began supporting these features
              within the last year. The role might have been used more than 400 days
              ago. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#access-advisor_tracking-period">Regions
              where data is tracked</a> in the <i>IAM User Guide</i>.
        RoleName:
          allOf:
          - $ref: '#/components/schemas/roleNameType'
          - description: The friendly name that identifies the role.
        RolePolicyList:
          allOf:
          - $ref: '#/components/schemas/policyDetailListType'
          - description: A list of inline policies embedded in the role. These policies
              are the role's access (permissions) policies.
        Tags:
          allOf:
          - $ref: '#/components/schemas/tagListType'
          - description: A list of tags that are attached to the role. For more information
              about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
              IAM resources</a> in the <i>IAM User Guide</i>.
      type: object
    RoleLastUsed:
      description: <p>Contains information about the last time that an IAM role was
        used. This includes the date and time and the Region in which the role was
        last used. Activity is only reported for the trailing 400 days. This period
        can be shorter if your Region began supporting these features within the last
        year. The role might have been used more than 400 days ago. For more information,
        see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#access-advisor_tracking-period">Regions
        where data is tracked</a> in the <i>IAM User Guide</i>.</p> <p>This data type
        is returned as a response element in the <a>GetRole</a> and <a>GetAccountAuthorizationDetails</a>
        operations.</p>
      properties:
        LastUsedDate:
          allOf:
          - $ref: '#/components/schemas/dateType'
          - description: "<p>The date and time, in\_<a href=\"http://www.iso.org/iso/iso8601\"\
              >ISO 8601 date-time format</a> that the role was last used.</p> <p>This\
              \ field is null if the role has not been used within the IAM tracking\
              \ period. For more information about the tracking period, see <a href=\"\
              https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#access-advisor_tracking-period\"\
              >Regions where data is tracked</a> in the <i>IAM User Guide</i>. </p>"
        Region:
          allOf:
          - $ref: '#/components/schemas/stringType'
          - description: The name of the Amazon Web Services Region in which the role
              was last used.
      type: object
    RoleUsageListType:
      items:
        $ref: '#/components/schemas/RoleUsageType'
      type: array
    RoleUsageType:
      description: <p>An object that contains details about how a service-linked role
        is used, if that information is returned by the service.</p> <p>This data
        type is used as a response element in the <a>GetServiceLinkedRoleDeletionStatus</a>
        operation.</p>
      properties:
        Region:
          allOf:
          - $ref: '#/components/schemas/RegionNameType'
          - description: The name of the Region where the service-linked role is being
              used.
        Resources:
          allOf:
          - $ref: '#/components/schemas/ArnListType'
          - description: The name of the resource that is using the service-linked
              role.
      type: object
    SAMLMetadataDocumentType:
      maxLength: 10000000
      minLength: 1000
      type: string
    SAMLProviderListEntry:
      description: Contains the list of SAML providers for this account.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: The Amazon Resource Name (ARN) of the SAML provider.
        CreateDate:
          allOf:
          - $ref: '#/components/schemas/dateType'
          - description: The date and time when the SAML provider was created.
        ValidUntil:
          allOf:
          - $ref: '#/components/schemas/dateType'
          - description: The expiration date and time for the SAML provider.
      type: object
    SAMLProviderListType:
      items:
        $ref: '#/components/schemas/SAMLProviderListEntry'
      type: array
    SAMLProviderNameType:
      maxLength: 128
      minLength: 1
      pattern: '[\w._-]+'
      type: string
    SSHPublicKey:
      description: <p>Contains information about an SSH public key.</p> <p>This data
        type is used as a response element in the <a>GetSSHPublicKey</a> and <a>UploadSSHPublicKey</a>
        operations. </p>
      properties:
        Fingerprint:
          allOf:
          - $ref: '#/components/schemas/publicKeyFingerprintType'
          - description: The MD5 message digest of the SSH public key.
        SSHPublicKeyBody:
          allOf:
          - $ref: '#/components/schemas/publicKeyMaterialType'
          - description: The SSH public key.
        SSHPublicKeyId:
          allOf:
          - $ref: '#/components/schemas/publicKeyIdType'
          - description: The unique identifier for the SSH public key.
        Status:
          allOf:
          - $ref: '#/components/schemas/statusType'
          - description: The status of the SSH public key. <code>Active</code> means
              that the key can be used for authentication with an CodeCommit repository.
              <code>Inactive</code> means that the key cannot be used.
        UploadDate:
          allOf:
          - $ref: '#/components/schemas/dateType'
          - description: The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO
              8601 date-time format</a>, when the SSH public key was uploaded.
        UserName:
          allOf:
          - $ref: '#/components/schemas/userNameType'
          - description: The name of the IAM user associated with the SSH public key.
      required:
      - UserName
      - SSHPublicKeyId
      - Fingerprint
      - SSHPublicKeyBody
      - Status
      type: object
    SSHPublicKeyListType:
      items:
        $ref: '#/components/schemas/SSHPublicKeyMetadata'
      type: array
    SSHPublicKeyMetadata:
      description: <p>Contains information about an SSH public key, without the key's
        body or fingerprint.</p> <p>This data type is used as a response element in
        the <a>ListSSHPublicKeys</a> operation.</p>
      properties:
        SSHPublicKeyId:
          allOf:
          - $ref: '#/components/schemas/publicKeyIdType'
          - description: The unique identifier for the SSH public key.
        Status:
          allOf:
          - $ref: '#/components/schemas/statusType'
          - description: The status of the SSH public key. <code>Active</code> means
              that the key can be used for authentication with an CodeCommit repository.
              <code>Inactive</code> means that the key cannot be used.
        UploadDate:
          allOf:
          - $ref: '#/components/schemas/dateType'
          - description: The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO
              8601 date-time format</a>, when the SSH public key was uploaded.
        UserName:
          allOf:
          - $ref: '#/components/schemas/userNameType'
          - description: The name of the IAM user associated with the SSH public key.
      required:
      - UserName
      - SSHPublicKeyId
      - Status
      - UploadDate
      type: object
    ServerCertificate:
      description: <p>Contains information about a server certificate.</p> <p> This
        data type is used as a response element in the <a>GetServerCertificate</a>
        operation. </p>
      properties:
        CertificateBody:
          allOf:
          - $ref: '#/components/schemas/certificateBodyType'
          - description: The contents of the public key certificate.
        CertificateChain:
          allOf:
          - $ref: '#/components/schemas/certificateChainType'
          - description: The contents of the public key certificate chain.
        ServerCertificateMetadata:
          allOf:
          - $ref: '#/components/schemas/ServerCertificateMetadata'
          - description: The meta information of the server certificate, such as its
              name, path, ID, and ARN.
        Tags:
          allOf:
          - $ref: '#/components/schemas/tagListType'
          - description: A list of tags that are attached to the server certificate.
              For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
              IAM resources</a> in the <i>IAM User Guide</i>.
      required:
      - ServerCertificateMetadata
      - CertificateBody
      type: object
    ServerCertificateMetadata:
      description: <p>Contains information about a server certificate without its
        certificate body, certificate chain, and private key.</p> <p> This data type
        is used as a response element in the <a>UploadServerCertificate</a> and <a>ListServerCertificates</a>
        operations. </p>
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: ' The Amazon Resource Name (ARN) specifying the server certificate.
              For more information about ARNs and how to use them in policies, see
              <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
              identifiers</a> in the <i>IAM User Guide</i>. '
        Expiration:
          allOf:
          - $ref: '#/components/schemas/dateType'
          - description: The date on which the certificate is set to expire.
        Path:
          allOf:
          - $ref: '#/components/schemas/pathType'
          - description: ' The path to the server certificate. For more information
              about paths, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
              identifiers</a> in the <i>IAM User Guide</i>. '
        ServerCertificateId:
          allOf:
          - $ref: '#/components/schemas/idType'
          - description: ' The stable and unique string identifying the server certificate.
              For more information about IDs, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
              identifiers</a> in the <i>IAM User Guide</i>. '
        ServerCertificateName:
          allOf:
          - $ref: '#/components/schemas/serverCertificateNameType'
          - description: The name that identifies the server certificate.
        UploadDate:
          allOf:
          - $ref: '#/components/schemas/dateType'
          - description: The date when the server certificate was uploaded.
      required:
      - Path
      - ServerCertificateName
      - ServerCertificateId
      - Arn
      type: object
    ServiceFailureException: {}
    ServiceLastAccessed:
      description: <p>Contains details about the most recent attempt to access the
        service.</p> <p>This data type is used as a response element in the <a>GetServiceLastAccessedDetails</a>
        operation.</p>
      properties:
        LastAuthenticated:
          allOf:
          - $ref: '#/components/schemas/dateType'
          - description: "<p>The date and time, in\_<a href=\"http://www.iso.org/iso/iso8601\"\
              >ISO 8601 date-time format</a>, when an authenticated entity most recently\
              \ attempted to access the service. Amazon Web Services does not report\
              \ unauthenticated requests.</p> <p>This field is null if no IAM entities\
              \ attempted to access the service within the <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#service-last-accessed-reporting-period\"\
              >reporting period</a>.</p>"
        LastAuthenticatedEntity:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: <p>The ARN of the authenticated entity (user or role) that
              last attempted to access the service. Amazon Web Services does not report
              unauthenticated requests.</p> <p>This field is null if no IAM entities
              attempted to access the service within the <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#service-last-accessed-reporting-period">reporting
              period</a>.</p>
        LastAuthenticatedRegion:
          allOf:
          - $ref: '#/components/schemas/stringType'
          - description: <p>The Region from which the authenticated entity (user or
              role) last attempted to access the service. Amazon Web Services does
              not report unauthenticated requests.</p> <p>This field is null if no
              IAM entities attempted to access the service within the <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#service-last-accessed-reporting-period">reporting
              period</a>.</p>
        ServiceName:
          allOf:
          - $ref: '#/components/schemas/serviceNameType'
          - description: The name of the service in which access was attempted.
        ServiceNamespace:
          allOf:
          - $ref: '#/components/schemas/serviceNamespaceType'
          - description: "<p>The namespace of the service in which access was attempted.</p>\
              \ <p>To learn the service namespace of a service, see <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/reference_policies_actions-resources-contextkeys.html\"\
              >Actions, resources, and condition keys for Amazon Web Services services</a>\
              \ in the <i>Service Authorization Reference</i>. Choose the name of\
              \ the service to view details for that service. In the first paragraph,\
              \ find the service prefix. For example, <code>(service prefix: a4b)</code>.\
              \ For more information about service namespaces, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#genref-aws-service-namespaces\"\
              >Amazon Web Services Service Namespaces</a> in the\_<i>Amazon Web Services\
              \ General Reference</i>.</p>"
        TotalAuthenticatedEntities:
          allOf:
          - $ref: '#/components/schemas/integerType'
          - description: <p>The total number of authenticated principals (root user,
              IAM users, or IAM roles) that have attempted to access the service.</p>
              <p>This field is null if no principals attempted to access the service
              within the <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#service-last-accessed-reporting-period">reporting
              period</a>.</p>
        TrackedActionsLastAccessed:
          allOf:
          - $ref: '#/components/schemas/TrackedActionsLastAccessed'
          - description: <p>An object that contains details about the most recent
              attempt to access a tracked action within the service.</p> <p>This field
              is null if there no tracked actions or if the principal did not use
              the tracked actions within the <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#service-last-accessed-reporting-period">reporting
              period</a>. This field is also null if the report was generated at the
              service level and not the action level. For more information, see the
              <code>Granularity</code> field in <a>GenerateServiceLastAccessedDetails</a>.</p>
      required:
      - ServiceName
      - ServiceNamespace
      type: object
    ServiceNotSupportedException: {}
    ServiceSpecificCredential:
      description: Contains the details of a service-specific credential.
      properties:
        CreateDate:
          allOf:
          - $ref: '#/components/schemas/dateType'
          - description: The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO
              8601 date-time format</a>, when the service-specific credential were
              created.
        ServiceName:
          allOf:
          - $ref: '#/components/schemas/serviceName'
          - description: The name of the service associated with the service-specific
              credential.
        ServicePassword:
          allOf:
          - $ref: '#/components/schemas/servicePassword'
          - description: The generated password for the service-specific credential.
        ServiceSpecificCredentialId:
          allOf:
          - $ref: '#/components/schemas/serviceSpecificCredentialId'
          - description: The unique identifier for the service-specific credential.
        ServiceUserName:
          allOf:
          - $ref: '#/components/schemas/serviceUserName'
          - description: The generated user name for the service-specific credential.
              This value is generated by combining the IAM user's name combined with
              the ID number of the Amazon Web Services account, as in <code>jane-at-123456789012</code>,
              for example. This value cannot be configured by the user.
        Status:
          allOf:
          - $ref: '#/components/schemas/statusType'
          - description: The status of the service-specific credential. <code>Active</code>
              means that the key is valid for API calls, while <code>Inactive</code>
              means it is not.
        UserName:
          allOf:
          - $ref: '#/components/schemas/userNameType'
          - description: The name of the IAM user associated with the service-specific
              credential.
      required:
      - CreateDate
      - ServiceName
      - ServiceUserName
      - ServicePassword
      - ServiceSpecificCredentialId
      - UserName
      - Status
      type: object
    ServiceSpecificCredentialMetadata:
      description: Contains additional details about a service-specific credential.
      properties:
        CreateDate:
          allOf:
          - $ref: '#/components/schemas/dateType'
          - description: The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO
              8601 date-time format</a>, when the service-specific credential were
              created.
        ServiceName:
          allOf:
          - $ref: '#/components/schemas/serviceName'
          - description: The name of the service associated with the service-specific
              credential.
        ServiceSpecificCredentialId:
          allOf:
          - $ref: '#/components/schemas/serviceSpecificCredentialId'
          - description: The unique identifier for the service-specific credential.
        ServiceUserName:
          allOf:
          - $ref: '#/components/schemas/serviceUserName'
          - description: The generated user name for the service-specific credential.
        Status:
          allOf:
          - $ref: '#/components/schemas/statusType'
          - description: The status of the service-specific credential. <code>Active</code>
              means that the key is valid for API calls, while <code>Inactive</code>
              means it is not.
        UserName:
          allOf:
          - $ref: '#/components/schemas/userNameType'
          - description: The name of the IAM user associated with the service-specific
              credential.
      required:
      - UserName
      - Status
      - ServiceUserName
      - CreateDate
      - ServiceSpecificCredentialId
      - ServiceName
      type: object
    ServiceSpecificCredentialsListType:
      items:
        $ref: '#/components/schemas/ServiceSpecificCredentialMetadata'
      type: array
    ServicesLastAccessed:
      items:
        $ref: '#/components/schemas/ServiceLastAccessed'
      type: array
    SetDefaultPolicyVersionRequest:
      properties:
        PolicyArn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: <p>The Amazon Resource Name (ARN) of the IAM policy whose
              default version you want to set.</p> <p>For more information about ARNs,
              see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
              Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        VersionId:
          allOf:
          - $ref: '#/components/schemas/policyVersionIdType'
          - description: <p>The version of the policy to set as the default (operative)
              version.</p> <p>For more information about managed policy versions,
              see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning
              for managed policies</a> in the <i>IAM User Guide</i>.</p>
      required:
      - PolicyArn
      - VersionId
      title: SetDefaultPolicyVersionRequest
      type: object
    SetSecurityTokenServicePreferencesRequest:
      properties:
        GlobalEndpointTokenVersion:
          allOf:
          - $ref: '#/components/schemas/globalEndpointTokenVersion'
          - description: <p>The version of the global endpoint token. Version 1 tokens
              are valid only in Amazon Web Services Regions that are available by
              default. These tokens do not work in manually enabled Regions, such
              as Asia Pacific (Hong Kong). Version 2 tokens are valid in all Regions.
              However, version 2 tokens are longer and might affect systems where
              you temporarily store tokens.</p> <p>For information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_enable-regions.html">Activating
              and deactivating STS in an Amazon Web Services Region</a> in the <i>IAM
              User Guide</i>.</p>
      required:
      - GlobalEndpointTokenVersion
      title: SetSecurityTokenServicePreferencesRequest
      type: object
    SigningCertificate:
      description: <p>Contains information about an X.509 signing certificate.</p>
        <p>This data type is used as a response element in the <a>UploadSigningCertificate</a>
        and <a>ListSigningCertificates</a> operations. </p>
      properties:
        CertificateBody:
          allOf:
          - $ref: '#/components/schemas/certificateBodyType'
          - description: The contents of the signing certificate.
        CertificateId:
          allOf:
          - $ref: '#/components/schemas/certificateIdType'
          - description: The ID for the signing certificate.
        Status:
          allOf:
          - $ref: '#/components/schemas/statusType'
          - description: The status of the signing certificate. <code>Active</code>
              means that the key is valid for API calls, while <code>Inactive</code>
              means it is not.
        UploadDate:
          allOf:
          - $ref: '#/components/schemas/dateType'
          - description: The date when the signing certificate was uploaded.
        UserName:
          allOf:
          - $ref: '#/components/schemas/userNameType'
          - description: The name of the user the signing certificate is associated
              with.
      required:
      - UserName
      - CertificateId
      - CertificateBody
      - Status
      type: object
    SimulateCustomPolicyRequest:
      properties:
        ActionNames:
          allOf:
          - $ref: '#/components/schemas/ActionNameListType'
          - description: A list of names of API operations to evaluate in the simulation.
              Each operation is evaluated against each resource. Each operation must
              include the service identifier, such as <code>iam:CreateUser</code>.
              This operation does not support using wildcards (*) in an action name.
        CallerArn:
          allOf:
          - $ref: '#/components/schemas/ResourceNameType'
          - description: <p>The ARN of the IAM user that you want to use as the simulated
              caller of the API operations. <code>CallerArn</code> is required if
              you include a <code>ResourcePolicy</code> so that the policy's <code>Principal</code>
              element has a value to use in evaluating the policy.</p> <p>You can
              specify only the ARN of an IAM user. You cannot specify the ARN of an
              assumed role, federated user, or a service principal.</p>
        ContextEntries:
          allOf:
          - $ref: '#/components/schemas/ContextEntryListType'
          - description: A list of context keys and corresponding values for the simulation
              to use. Whenever a context key is evaluated in one of the simulated
              IAM permissions policies, the corresponding value is supplied.
        Marker:
          allOf:
          - $ref: '#/components/schemas/markerType'
          - description: Use this parameter only when paginating results and only
              after you receive a response indicating that the results are truncated.
              Set it to the value of the <code>Marker</code> element in the response
              that you received to indicate where the next call should start.
        MaxItems:
          allOf:
          - $ref: '#/components/schemas/maxItemsType'
          - description: <p>Use this only when paginating results to indicate the
              maximum number of items you want in the response. If additional items
              exist beyond the maximum you specify, the <code>IsTruncated</code> response
              element is <code>true</code>.</p> <p>If you do not include this parameter,
              the number of items defaults to 100. Note that IAM might return fewer
              results, even when there are more results available. In that case, the
              <code>IsTruncated</code> response element returns <code>true</code>,
              and <code>Marker</code> contains a value to include in the subsequent
              call that tells the service where to continue from.</p>
        PermissionsBoundaryPolicyInputList:
          allOf:
          - $ref: '#/components/schemas/SimulationPolicyListType'
          - description: <p>The IAM permissions boundary policy to simulate. The permissions
              boundary sets the maximum permissions that an IAM entity can have. You
              can input only one permissions boundary when you pass a policy to this
              operation. For more information about permissions boundaries, see <a
              href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html">Permissions
              boundaries for IAM entities</a> in the <i>IAM User Guide</i>. The policy
              input is specified as a string that contains the complete, valid JSON
              text of a permissions boundary policy.</p> <p>The maximum length of
              the policy document that you can pass in this operation, including whitespace,
              is listed below. To view the maximum character counts of a managed policy
              with no whitespaces, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html#reference_iam-quotas-entity-length">IAM
              and STS character quotas</a>.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a> used to validate this parameter is a string of characters
              consisting of the following:</p> <ul> <li> <p>Any printable ASCII character
              ranging from the space character (<code>\u0020</code>) through the end
              of the ASCII character range</p> </li> <li> <p>The printable characters
              in the Basic Latin and Latin-1 Supplement character set (through <code>\u00FF</code>)</p>
              </li> <li> <p>The special characters tab (<code>\u0009</code>), line
              feed (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p>
              </li> </ul>
        PolicyInputList:
          allOf:
          - $ref: '#/components/schemas/SimulationPolicyListType'
          - description: <p>A list of policy documents to include in the simulation.
              Each document is specified as a string containing the complete, valid
              JSON text of an IAM policy. Do not include any resource-based policies
              in this parameter. Any resource-based policy must be submitted with
              the <code>ResourcePolicy</code> parameter. The policies cannot be "scope-down"
              policies, such as you could include in a call to <a href="https://docs.aws.amazon.com/IAM/latest/APIReference/API_GetFederationToken.html">GetFederationToken</a>
              or one of the <a href="https://docs.aws.amazon.com/IAM/latest/APIReference/API_AssumeRole.html">AssumeRole</a>
              API operations. In other words, do not use policies designed to restrict
              what a user can do while using the temporary credentials.</p> <p>The
              maximum length of the policy document that you can pass in this operation,
              including whitespace, is listed below. To view the maximum character
              counts of a managed policy with no whitespaces, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html#reference_iam-quotas-entity-length">IAM
              and STS character quotas</a>.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a> used to validate this parameter is a string of characters
              consisting of the following:</p> <ul> <li> <p>Any printable ASCII character
              ranging from the space character (<code>\u0020</code>) through the end
              of the ASCII character range</p> </li> <li> <p>The printable characters
              in the Basic Latin and Latin-1 Supplement character set (through <code>\u00FF</code>)</p>
              </li> <li> <p>The special characters tab (<code>\u0009</code>), line
              feed (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p>
              </li> </ul>
        ResourceArns:
          allOf:
          - $ref: '#/components/schemas/ResourceNameListType'
          - description: <p>A list of ARNs of Amazon Web Services resources to include
              in the simulation. If this parameter is not provided, then the value
              defaults to <code>*</code> (all resources). Each API in the <code>ActionNames</code>
              parameter is evaluated for each resource in this list. The simulation
              determines the access result (allowed or denied) of each combination
              and reports it in the response. You can simulate resources that don't
              exist in your account.</p> <p>The simulation does not automatically
              retrieve policies for the specified resources. If you want to include
              a resource policy in the simulation, then you must include the policy
              as a string in the <code>ResourcePolicy</code> parameter.</p> <p>If
              you include a <code>ResourcePolicy</code>, then it must be applicable
              to all of the resources included in the simulation or you receive an
              invalid input error.</p> <p>For more information about ARNs, see <a
              href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
              Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        ResourceHandlingOption:
          allOf:
          - $ref: '#/components/schemas/ResourceHandlingOptionType'
          - description: <p>Specifies the type of simulation to run. Different API
              operations that support resource-based policies require different combinations
              of resources. By specifying the type of simulation to run, you enable
              the policy simulator to enforce the presence of the required resources
              to ensure reliable simulation results. If your simulation does not match
              one of the following scenarios, then you can omit this parameter. The
              following list shows each of the supported scenario values and the resources
              that you must define to run the simulation.</p> <p>Each of the EC2 scenarios
              requires that you specify instance, image, and security-group resources.
              If your scenario includes an EBS volume, then you must specify that
              volume as a resource. If the EC2 scenario includes VPC, then you must
              supply the network-interface resource. If it includes an IP subnet,
              then you must specify the subnet resource. For more information on the
              EC2 scenario options, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-supported-platforms.html">Supported
              platforms</a> in the <i>Amazon EC2 User Guide</i>.</p> <ul> <li> <p>
              <b>EC2-Classic-InstanceStore</b> </p> <p>instance, image, security-group</p>
              </li> <li> <p> <b>EC2-Classic-EBS</b> </p> <p>instance, image, security-group,
              volume</p> </li> <li> <p> <b>EC2-VPC-InstanceStore</b> </p> <p>instance,
              image, security-group, network-interface</p> </li> <li> <p> <b>EC2-VPC-InstanceStore-Subnet</b>
              </p> <p>instance, image, security-group, network-interface, subnet</p>
              </li> <li> <p> <b>EC2-VPC-EBS</b> </p> <p>instance, image, security-group,
              network-interface, volume</p> </li> <li> <p> <b>EC2-VPC-EBS-Subnet</b>
              </p> <p>instance, image, security-group, network-interface, subnet,
              volume</p> </li> </ul>
        ResourceOwner:
          allOf:
          - $ref: '#/components/schemas/ResourceNameType'
          - description: '<p>An ARN representing the Amazon Web Services account ID
              that specifies the owner of any simulated resource that does not identify
              its owner in the resource ARN. Examples of resource ARNs include an
              S3 bucket or object. If <code>ResourceOwner</code> is specified, it
              is also used as the account owner of any <code>ResourcePolicy</code>
              included in the simulation. If the <code>ResourceOwner</code> parameter
              is not specified, then the owner of the resources and the resource policy
              defaults to the account of the identity provided in <code>CallerArn</code>.
              This parameter is required only if you specify a resource-based policy
              and account that owns the resource is different from the account that
              owns the simulated calling user <code>CallerArn</code>.</p> <p>The ARN
              for an account uses the following syntax: <code>arn:aws:iam::<i>AWS-account-ID</i>:root</code>.
              For example, to represent the account with the 112233445566 ID, use
              the following ARN: <code>arn:aws:iam::112233445566-ID:root</code>. </p>'
        ResourcePolicy:
          allOf:
          - $ref: '#/components/schemas/policyDocumentType'
          - description: <p>A resource-based policy to include in the simulation provided
              as a string. Each resource in the simulation is treated as if it had
              this policy attached. You can include only one resource-based policy
              in a simulation.</p> <p>The maximum length of the policy document that
              you can pass in this operation, including whitespace, is listed below.
              To view the maximum character counts of a managed policy with no whitespaces,
              see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html#reference_iam-quotas-entity-length">IAM
              and STS character quotas</a>.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a> used to validate this parameter is a string of characters
              consisting of the following:</p> <ul> <li> <p>Any printable ASCII character
              ranging from the space character (<code>\u0020</code>) through the end
              of the ASCII character range</p> </li> <li> <p>The printable characters
              in the Basic Latin and Latin-1 Supplement character set (through <code>\u00FF</code>)</p>
              </li> <li> <p>The special characters tab (<code>\u0009</code>), line
              feed (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p>
              </li> </ul>
      required:
      - PolicyInputList
      - ActionNames
      title: SimulateCustomPolicyRequest
      type: object
    SimulatePolicyResponse:
      description: Contains the response to a successful <a>SimulatePrincipalPolicy</a>
        or <a>SimulateCustomPolicy</a> request.
      properties:
        EvaluationResults:
          allOf:
          - $ref: '#/components/schemas/EvaluationResultsListType'
          - description: The results of the simulation.
        IsTruncated:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: A flag that indicates whether there are more items to return.
              If your results were truncated, you can make a subsequent pagination
              request using the <code>Marker</code> request parameter to retrieve
              more items. Note that IAM might return fewer than the <code>MaxItems</code>
              number of results even when there are more results available. We recommend
              that you check <code>IsTruncated</code> after every call to ensure that
              you receive all your results.
        Marker:
          allOf:
          - $ref: '#/components/schemas/responseMarkerType'
          - description: When <code>IsTruncated</code> is <code>true</code>, this
              element is present and contains the value to use for the <code>Marker</code>
              parameter in a subsequent pagination request.
      type: object
    SimulatePrincipalPolicyRequest:
      properties:
        ActionNames:
          allOf:
          - $ref: '#/components/schemas/ActionNameListType'
          - description: A list of names of API operations to evaluate in the simulation.
              Each operation is evaluated for each resource. Each operation must include
              the service identifier, such as <code>iam:CreateUser</code>.
        CallerArn:
          allOf:
          - $ref: '#/components/schemas/ResourceNameType'
          - description: <p>The ARN of the IAM user that you want to specify as the
              simulated caller of the API operations. If you do not specify a <code>CallerArn</code>,
              it defaults to the ARN of the user that you specify in <code>PolicySourceArn</code>,
              if you specified a user. If you include both a <code>PolicySourceArn</code>
              (for example, <code>arn:aws:iam::123456789012:user/David</code>) and
              a <code>CallerArn</code> (for example, <code>arn:aws:iam::123456789012:user/Bob</code>),
              the result is that you simulate calling the API operations as Bob, as
              if Bob had David's policies.</p> <p>You can specify only the ARN of
              an IAM user. You cannot specify the ARN of an assumed role, federated
              user, or a service principal.</p> <p> <code>CallerArn</code> is required
              if you include a <code>ResourcePolicy</code> and the <code>PolicySourceArn</code>
              is not the ARN for an IAM user. This is required so that the resource-based
              policy's <code>Principal</code> element has a value to use in evaluating
              the policy.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
              Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        ContextEntries:
          allOf:
          - $ref: '#/components/schemas/ContextEntryListType'
          - description: A list of context keys and corresponding values for the simulation
              to use. Whenever a context key is evaluated in one of the simulated
              IAM permissions policies, the corresponding value is supplied.
        Marker:
          allOf:
          - $ref: '#/components/schemas/markerType'
          - description: Use this parameter only when paginating results and only
              after you receive a response indicating that the results are truncated.
              Set it to the value of the <code>Marker</code> element in the response
              that you received to indicate where the next call should start.
        MaxItems:
          allOf:
          - $ref: '#/components/schemas/maxItemsType'
          - description: <p>Use this only when paginating results to indicate the
              maximum number of items you want in the response. If additional items
              exist beyond the maximum you specify, the <code>IsTruncated</code> response
              element is <code>true</code>.</p> <p>If you do not include this parameter,
              the number of items defaults to 100. Note that IAM might return fewer
              results, even when there are more results available. In that case, the
              <code>IsTruncated</code> response element returns <code>true</code>,
              and <code>Marker</code> contains a value to include in the subsequent
              call that tells the service where to continue from.</p>
        PermissionsBoundaryPolicyInputList:
          allOf:
          - $ref: '#/components/schemas/SimulationPolicyListType'
          - description: <p>The IAM permissions boundary policy to simulate. The permissions
              boundary sets the maximum permissions that the entity can have. You
              can input only one permissions boundary when you pass a policy to this
              operation. An IAM entity can only have one permissions boundary in effect
              at a time. For example, if a permissions boundary is attached to an
              entity and you pass in a different permissions boundary policy using
              this parameter, then the new permissions boundary policy is used for
              the simulation. For more information about permissions boundaries, see
              <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html">Permissions
              boundaries for IAM entities</a> in the <i>IAM User Guide</i>. The policy
              input is specified as a string containing the complete, valid JSON text
              of a permissions boundary policy.</p> <p>The maximum length of the policy
              document that you can pass in this operation, including whitespace,
              is listed below. To view the maximum character counts of a managed policy
              with no whitespaces, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html#reference_iam-quotas-entity-length">IAM
              and STS character quotas</a>.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a> used to validate this parameter is a string of characters
              consisting of the following:</p> <ul> <li> <p>Any printable ASCII character
              ranging from the space character (<code>\u0020</code>) through the end
              of the ASCII character range</p> </li> <li> <p>The printable characters
              in the Basic Latin and Latin-1 Supplement character set (through <code>\u00FF</code>)</p>
              </li> <li> <p>The special characters tab (<code>\u0009</code>), line
              feed (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p>
              </li> </ul>
        PolicyInputList:
          allOf:
          - $ref: '#/components/schemas/SimulationPolicyListType'
          - description: <p>An optional list of additional policy documents to include
              in the simulation. Each document is specified as a string containing
              the complete, valid JSON text of an IAM policy.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a> used to validate this parameter is a string of characters
              consisting of the following:</p> <ul> <li> <p>Any printable ASCII character
              ranging from the space character (<code>\u0020</code>) through the end
              of the ASCII character range</p> </li> <li> <p>The printable characters
              in the Basic Latin and Latin-1 Supplement character set (through <code>\u00FF</code>)</p>
              </li> <li> <p>The special characters tab (<code>\u0009</code>), line
              feed (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p>
              </li> </ul>
        PolicySourceArn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: <p>The Amazon Resource Name (ARN) of a user, group, or role
              whose policies you want to include in the simulation. If you specify
              a user, group, or role, the simulation includes all policies that are
              associated with that entity. If you specify a user, the simulation also
              includes all policies that are attached to any groups the user belongs
              to.</p> <p>The maximum length of the policy document that you can pass
              in this operation, including whitespace, is listed below. To view the
              maximum character counts of a managed policy with no whitespaces, see
              <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html#reference_iam-quotas-entity-length">IAM
              and STS character quotas</a>.</p> <p>For more information about ARNs,
              see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
              Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        ResourceArns:
          allOf:
          - $ref: '#/components/schemas/ResourceNameListType'
          - description: <p>A list of ARNs of Amazon Web Services resources to include
              in the simulation. If this parameter is not provided, then the value
              defaults to <code>*</code> (all resources). Each API in the <code>ActionNames</code>
              parameter is evaluated for each resource in this list. The simulation
              determines the access result (allowed or denied) of each combination
              and reports it in the response. You can simulate resources that don't
              exist in your account.</p> <p>The simulation does not automatically
              retrieve policies for the specified resources. If you want to include
              a resource policy in the simulation, then you must include the policy
              as a string in the <code>ResourcePolicy</code> parameter.</p> <p>For
              more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
              Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        ResourceHandlingOption:
          allOf:
          - $ref: '#/components/schemas/ResourceHandlingOptionType'
          - description: <p>Specifies the type of simulation to run. Different API
              operations that support resource-based policies require different combinations
              of resources. By specifying the type of simulation to run, you enable
              the policy simulator to enforce the presence of the required resources
              to ensure reliable simulation results. If your simulation does not match
              one of the following scenarios, then you can omit this parameter. The
              following list shows each of the supported scenario values and the resources
              that you must define to run the simulation.</p> <p>Each of the EC2 scenarios
              requires that you specify instance, image, and security group resources.
              If your scenario includes an EBS volume, then you must specify that
              volume as a resource. If the EC2 scenario includes VPC, then you must
              supply the network interface resource. If it includes an IP subnet,
              then you must specify the subnet resource. For more information on the
              EC2 scenario options, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-supported-platforms.html">Supported
              platforms</a> in the <i>Amazon EC2 User Guide</i>.</p> <ul> <li> <p>
              <b>EC2-Classic-InstanceStore</b> </p> <p>instance, image, security group</p>
              </li> <li> <p> <b>EC2-Classic-EBS</b> </p> <p>instance, image, security
              group, volume</p> </li> <li> <p> <b>EC2-VPC-InstanceStore</b> </p> <p>instance,
              image, security group, network interface</p> </li> <li> <p> <b>EC2-VPC-InstanceStore-Subnet</b>
              </p> <p>instance, image, security group, network interface, subnet</p>
              </li> <li> <p> <b>EC2-VPC-EBS</b> </p> <p>instance, image, security
              group, network interface, volume</p> </li> <li> <p> <b>EC2-VPC-EBS-Subnet</b>
              </p> <p>instance, image, security group, network interface, subnet,
              volume</p> </li> </ul>
        ResourceOwner:
          allOf:
          - $ref: '#/components/schemas/ResourceNameType'
          - description: An Amazon Web Services account ID that specifies the owner
              of any simulated resource that does not identify its owner in the resource
              ARN. Examples of resource ARNs include an S3 bucket or object. If <code>ResourceOwner</code>
              is specified, it is also used as the account owner of any <code>ResourcePolicy</code>
              included in the simulation. If the <code>ResourceOwner</code> parameter
              is not specified, then the owner of the resources and the resource policy
              defaults to the account of the identity provided in <code>CallerArn</code>.
              This parameter is required only if you specify a resource-based policy
              and account that owns the resource is different from the account that
              owns the simulated calling user <code>CallerArn</code>.
        ResourcePolicy:
          allOf:
          - $ref: '#/components/schemas/policyDocumentType'
          - description: <p>A resource-based policy to include in the simulation provided
              as a string. Each resource in the simulation is treated as if it had
              this policy attached. You can include only one resource-based policy
              in a simulation.</p> <p>The maximum length of the policy document that
              you can pass in this operation, including whitespace, is listed below.
              To view the maximum character counts of a managed policy with no whitespaces,
              see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html#reference_iam-quotas-entity-length">IAM
              and STS character quotas</a>.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a> used to validate this parameter is a string of characters
              consisting of the following:</p> <ul> <li> <p>Any printable ASCII character
              ranging from the space character (<code>\u0020</code>) through the end
              of the ASCII character range</p> </li> <li> <p>The printable characters
              in the Basic Latin and Latin-1 Supplement character set (through <code>\u00FF</code>)</p>
              </li> <li> <p>The special characters tab (<code>\u0009</code>), line
              feed (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p>
              </li> </ul>
      required:
      - PolicySourceArn
      - ActionNames
      title: SimulatePrincipalPolicyRequest
      type: object
    SimulationPolicyListType:
      items:
        $ref: '#/components/schemas/policyDocumentType'
      type: array
    Statement:
      description: <p>Contains a reference to a <code>Statement</code> element in
        a policy document that determines the result of the simulation.</p> <p>This
        data type is used by the <code>MatchedStatements</code> member of the <code>
        <a>EvaluationResult</a> </code> type.</p>
      properties:
        EndPosition:
          allOf:
          - $ref: '#/components/schemas/Position'
          - description: The row and column of the end of a <code>Statement</code>
              in an IAM policy.
        SourcePolicyId:
          allOf:
          - $ref: '#/components/schemas/PolicyIdentifierType'
          - description: The identifier of the policy that was provided as an input.
        SourcePolicyType:
          allOf:
          - $ref: '#/components/schemas/PolicySourceType'
          - description: The type of the policy.
        StartPosition:
          allOf:
          - $ref: '#/components/schemas/Position'
          - description: The row and column of the beginning of the <code>Statement</code>
              in an IAM policy.
      type: object
    StatementListType:
      items:
        $ref: '#/components/schemas/Statement'
      type: array
    Tag:
      description: A structure that represents user-provided metadata that can be
        associated with an IAM resource. For more information about tagging, see <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/tagKeyType'
          - description: The key name that can be used to look up or retrieve the
              associated value. For example, <code>Department</code> or <code>Cost
              Center</code> are common choices.
        Value:
          allOf:
          - $ref: '#/components/schemas/tagValueType'
          - description: <p>The value associated with this tag. For example, tags
              with a key name of <code>Department</code> could have values such as
              <code>Human Resources</code>, <code>Accounting</code>, and <code>Support</code>.
              Tags with a key name of <code>Cost Center</code> might have values that
              consist of the number associated with the different cost centers in
              your company. Typically, many resources have tags with the same key
              name but with different values.</p> <note> <p>Amazon Web Services always
              interprets the tag <code>Value</code> as a single string. If you need
              to store an array, you can store comma-separated values in the string.
              However, you must interpret the value in your code.</p> </note>
      required:
      - Key
      - Value
      type: object
    TagInstanceProfileRequest:
      properties:
        InstanceProfileName:
          allOf:
          - $ref: '#/components/schemas/instanceProfileNameType'
          - description: '<p>The name of the IAM instance profile to which you want
              to add tags.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
        Tags:
          allOf:
          - $ref: '#/components/schemas/tagListType'
          - description: The list of tags that you want to attach to the IAM instance
              profile. Each tag consists of a key name and an associated value.
      required:
      - InstanceProfileName
      - Tags
      title: TagInstanceProfileRequest
      type: object
    TagMFADeviceRequest:
      properties:
        SerialNumber:
          allOf:
          - $ref: '#/components/schemas/serialNumberType'
          - description: '<p>The unique identifier for the IAM virtual MFA device
              to which you want to add tags. For virtual MFA devices, the serial number
              is the same as the ARN.</p> <p>This parameter allows (through its <a
              href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of
              characters consisting of upper and lowercase alphanumeric characters
              with no spaces. You can also include any of the following characters:
              _+=,.@-</p>'
        Tags:
          allOf:
          - $ref: '#/components/schemas/tagListType'
          - description: The list of tags that you want to attach to the IAM virtual
              MFA device. Each tag consists of a key name and an associated value.
      required:
      - SerialNumber
      - Tags
      title: TagMFADeviceRequest
      type: object
    TagOpenIDConnectProviderRequest:
      properties:
        OpenIDConnectProviderArn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: '<p>The ARN of the OIDC identity provider in IAM to which
              you want to add tags.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
        Tags:
          allOf:
          - $ref: '#/components/schemas/tagListType'
          - description: The list of tags that you want to attach to the OIDC identity
              provider in IAM. Each tag consists of a key name and an associated value.
      required:
      - OpenIDConnectProviderArn
      - Tags
      title: TagOpenIDConnectProviderRequest
      type: object
    TagPolicyRequest:
      properties:
        PolicyArn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: '<p>The ARN of the IAM customer managed policy to which you
              want to add tags.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
        Tags:
          allOf:
          - $ref: '#/components/schemas/tagListType'
          - description: The list of tags that you want to attach to the IAM customer
              managed policy. Each tag consists of a key name and an associated value.
      required:
      - PolicyArn
      - Tags
      title: TagPolicyRequest
      type: object
    TagRoleRequest:
      properties:
        RoleName:
          allOf:
          - $ref: '#/components/schemas/roleNameType'
          - description: '<p>The name of the IAM role to which you want to add tags.</p>
              <p>This parameter accepts (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters that consist of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
        Tags:
          allOf:
          - $ref: '#/components/schemas/tagListType'
          - description: The list of tags that you want to attach to the IAM role.
              Each tag consists of a key name and an associated value.
      required:
      - RoleName
      - Tags
      title: TagRoleRequest
      type: object
    TagSAMLProviderRequest:
      properties:
        SAMLProviderArn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: '<p>The ARN of the SAML identity provider in IAM to which
              you want to add tags.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
        Tags:
          allOf:
          - $ref: '#/components/schemas/tagListType'
          - description: The list of tags that you want to attach to the SAML identity
              provider in IAM. Each tag consists of a key name and an associated value.
      required:
      - SAMLProviderArn
      - Tags
      title: TagSAMLProviderRequest
      type: object
    TagServerCertificateRequest:
      properties:
        ServerCertificateName:
          allOf:
          - $ref: '#/components/schemas/serverCertificateNameType'
          - description: '<p>The name of the IAM server certificate to which you want
              to add tags.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
        Tags:
          allOf:
          - $ref: '#/components/schemas/tagListType'
          - description: The list of tags that you want to attach to the IAM server
              certificate. Each tag consists of a key name and an associated value.
      required:
      - ServerCertificateName
      - Tags
      title: TagServerCertificateRequest
      type: object
    TagUserRequest:
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/tagListType'
          - description: The list of tags that you want to attach to the IAM user.
              Each tag consists of a key name and an associated value.
        UserName:
          allOf:
          - $ref: '#/components/schemas/existingUserNameType'
          - description: '<p>The name of the IAM user to which you want to add tags.</p>
              <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      required:
      - UserName
      - Tags
      title: TagUserRequest
      type: object
    TrackedActionLastAccessed:
      description: <p>Contains details about the most recent attempt to access an
        action within the service.</p> <p>This data type is used as a response element
        in the <a>GetServiceLastAccessedDetails</a> operation.</p>
      properties:
        ActionName:
          allOf:
          - $ref: '#/components/schemas/stringType'
          - description: The name of the tracked action to which access was attempted.
              Tracked actions are actions that report activity to IAM.
        LastAccessedEntity:
          $ref: '#/components/schemas/arnType'
        LastAccessedRegion:
          allOf:
          - $ref: '#/components/schemas/stringType'
          - description: <p>The Region from which the authenticated entity (user or
              role) last attempted to access the tracked action. Amazon Web Services
              does not report unauthenticated requests.</p> <p>This field is null
              if no IAM entities attempted to access the service within the <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#service-last-accessed-reporting-period">reporting
              period</a>.</p>
        LastAccessedTime:
          allOf:
          - $ref: '#/components/schemas/dateType'
          - description: "<p>The date and time, in\_<a href=\"http://www.iso.org/iso/iso8601\"\
              >ISO 8601 date-time format</a>, when an authenticated entity most recently\
              \ attempted to access the tracked service. Amazon Web Services does\
              \ not report unauthenticated requests.</p> <p>This field is null if\
              \ no IAM entities attempted to access the service within the <a href=\"\
              https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#service-last-accessed-reporting-period\"\
              >reporting period</a>.</p>"
      type: object
    TrackedActionsLastAccessed:
      items:
        $ref: '#/components/schemas/TrackedActionLastAccessed'
      type: array
    UnmodifiableEntityException: {}
    UnrecognizedPublicKeyEncodingException: {}
    UntagInstanceProfileRequest:
      properties:
        InstanceProfileName:
          allOf:
          - $ref: '#/components/schemas/instanceProfileNameType'
          - description: '<p>The name of the IAM instance profile from which you want
              to remove tags.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/tagKeyListType'
          - description: A list of key names as a simple array of strings. The tags
              with matching keys are removed from the specified instance profile.
      required:
      - InstanceProfileName
      - TagKeys
      title: UntagInstanceProfileRequest
      type: object
    UntagMFADeviceRequest:
      properties:
        SerialNumber:
          allOf:
          - $ref: '#/components/schemas/serialNumberType'
          - description: '<p>The unique identifier for the IAM virtual MFA device
              from which you want to remove tags. For virtual MFA devices, the serial
              number is the same as the ARN.</p> <p>This parameter allows (through
              its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string
              of characters consisting of upper and lowercase alphanumeric characters
              with no spaces. You can also include any of the following characters:
              _+=,.@-</p>'
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/tagKeyListType'
          - description: A list of key names as a simple array of strings. The tags
              with matching keys are removed from the specified instance profile.
      required:
      - SerialNumber
      - TagKeys
      title: UntagMFADeviceRequest
      type: object
    UntagOpenIDConnectProviderRequest:
      properties:
        OpenIDConnectProviderArn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: '<p>The ARN of the OIDC provider in IAM from which you want
              to remove tags.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/tagKeyListType'
          - description: A list of key names as a simple array of strings. The tags
              with matching keys are removed from the specified OIDC provider.
      required:
      - OpenIDConnectProviderArn
      - TagKeys
      title: UntagOpenIDConnectProviderRequest
      type: object
    UntagPolicyRequest:
      properties:
        PolicyArn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: '<p>The ARN of the IAM customer managed policy from which
              you want to remove tags.</p> <p>This parameter allows (through its <a
              href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of
              characters consisting of upper and lowercase alphanumeric characters
              with no spaces. You can also include any of the following characters:
              _+=,.@-</p>'
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/tagKeyListType'
          - description: A list of key names as a simple array of strings. The tags
              with matching keys are removed from the specified policy.
      required:
      - PolicyArn
      - TagKeys
      title: UntagPolicyRequest
      type: object
    UntagRoleRequest:
      properties:
        RoleName:
          allOf:
          - $ref: '#/components/schemas/roleNameType'
          - description: '<p>The name of the IAM role from which you want to remove
              tags.</p> <p>This parameter accepts (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters that consist of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/tagKeyListType'
          - description: A list of key names as a simple array of strings. The tags
              with matching keys are removed from the specified role.
      required:
      - RoleName
      - TagKeys
      title: UntagRoleRequest
      type: object
    UntagSAMLProviderRequest:
      properties:
        SAMLProviderArn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: '<p>The ARN of the SAML identity provider in IAM from which
              you want to remove tags.</p> <p>This parameter allows (through its <a
              href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of
              characters consisting of upper and lowercase alphanumeric characters
              with no spaces. You can also include any of the following characters:
              _+=,.@-</p>'
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/tagKeyListType'
          - description: A list of key names as a simple array of strings. The tags
              with matching keys are removed from the specified SAML identity provider.
      required:
      - SAMLProviderArn
      - TagKeys
      title: UntagSAMLProviderRequest
      type: object
    UntagServerCertificateRequest:
      properties:
        ServerCertificateName:
          allOf:
          - $ref: '#/components/schemas/serverCertificateNameType'
          - description: '<p>The name of the IAM server certificate from which you
              want to remove tags.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/tagKeyListType'
          - description: A list of key names as a simple array of strings. The tags
              with matching keys are removed from the specified IAM server certificate.
      required:
      - ServerCertificateName
      - TagKeys
      title: UntagServerCertificateRequest
      type: object
    UntagUserRequest:
      properties:
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/tagKeyListType'
          - description: A list of key names as a simple array of strings. The tags
              with matching keys are removed from the specified user.
        UserName:
          allOf:
          - $ref: '#/components/schemas/existingUserNameType'
          - description: '<p>The name of the IAM user from which you want to remove
              tags.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      required:
      - UserName
      - TagKeys
      title: UntagUserRequest
      type: object
    UpdateAccessKeyRequest:
      properties:
        AccessKeyId:
          allOf:
          - $ref: '#/components/schemas/accessKeyIdType'
          - description: <p>The access key ID of the secret access key you want to
              update.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters that can consist of any upper or
              lowercased letter or digit.</p>
        Status:
          allOf:
          - $ref: '#/components/schemas/statusType'
          - description: ' The status you want to assign to the secret access key.
              <code>Active</code> means that the key can be used for programmatic
              calls to Amazon Web Services, while <code>Inactive</code> means that
              the key cannot be used.'
        UserName:
          allOf:
          - $ref: '#/components/schemas/existingUserNameType'
          - description: '<p>The name of the user whose key you want to update.</p>
              <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      required:
      - AccessKeyId
      - Status
      title: UpdateAccessKeyRequest
      type: object
    UpdateAccountPasswordPolicyRequest:
      properties:
        AllowUsersToChangePassword:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: <p> Allows all IAM users in your account to use the Amazon
              Web Services Management Console to change their own passwords. For more
              information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_enable-user-change.html">Permitting
              IAM users to change their own passwords</a> in the <i>IAM User Guide</i>.</p>
              <p>If you do not specify a value for this parameter, then the operation
              uses the default value of <code>false</code>. The result is that IAM
              users in the account do not automatically have permissions to change
              their own password.</p>
        HardExpiry:
          allOf:
          - $ref: '#/components/schemas/booleanObjectType'
          - description: <p> Prevents IAM users who are accessing the account via
              the Amazon Web Services Management Console from setting a new console
              password after their password has expired. The IAM user cannot access
              the console until an administrator resets the password.</p> <p>If you
              do not specify a value for this parameter, then the operation uses the
              default value of <code>false</code>. The result is that IAM users can
              change their passwords after they expire and continue to sign in as
              the user.</p> <note> <p> In the Amazon Web Services Management Console,
              the custom password policy option <b>Allow users to change their own
              password</b> gives IAM users permissions to <code>iam:ChangePassword</code>
              for only their user and to the <code>iam:GetAccountPasswordPolicy</code>
              action. This option does not attach a permissions policy to each user,
              rather the permissions are applied at the account-level for all users
              by IAM. IAM users with <code>iam:ChangePassword</code> permission and
              active access keys can reset their own expired console password using
              the CLI or API.</p> </note>
        MaxPasswordAge:
          allOf:
          - $ref: '#/components/schemas/maxPasswordAgeType'
          - description: <p>The number of days that an IAM user password is valid.</p>
              <p>If you do not specify a value for this parameter, then the operation
              uses the default value of <code>0</code>. The result is that IAM user
              passwords never expire.</p>
        MinimumPasswordLength:
          allOf:
          - $ref: '#/components/schemas/minimumPasswordLengthType'
          - description: <p>The minimum number of characters allowed in an IAM user
              password.</p> <p>If you do not specify a value for this parameter, then
              the operation uses the default value of <code>6</code>.</p>
        PasswordReusePrevention:
          allOf:
          - $ref: '#/components/schemas/passwordReusePreventionType'
          - description: <p>Specifies the number of previous passwords that IAM users
              are prevented from reusing.</p> <p>If you do not specify a value for
              this parameter, then the operation uses the default value of <code>0</code>.
              The result is that IAM users are not prevented from reusing previous
              passwords.</p>
        RequireLowercaseCharacters:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: <p>Specifies whether IAM user passwords must contain at least
              one lowercase character from the ISO basic Latin alphabet (a to z).</p>
              <p>If you do not specify a value for this parameter, then the operation
              uses the default value of <code>false</code>. The result is that passwords
              do not require at least one lowercase character.</p>
        RequireNumbers:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: <p>Specifies whether IAM user passwords must contain at least
              one numeric character (0 to 9).</p> <p>If you do not specify a value
              for this parameter, then the operation uses the default value of <code>false</code>.
              The result is that passwords do not require at least one numeric character.</p>
        RequireSymbols:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: '<p>Specifies whether IAM user passwords must contain at
              least one of the following non-alphanumeric characters:</p> <p>! @ #
              $ % ^ &amp; * ( ) _ + - = [ ] { } | ''</p> <p>If you do not specify
              a value for this parameter, then the operation uses the default value
              of <code>false</code>. The result is that passwords do not require at
              least one symbol character.</p>'
        RequireUppercaseCharacters:
          allOf:
          - $ref: '#/components/schemas/booleanType'
          - description: <p>Specifies whether IAM user passwords must contain at least
              one uppercase character from the ISO basic Latin alphabet (A to Z).</p>
              <p>If you do not specify a value for this parameter, then the operation
              uses the default value of <code>false</code>. The result is that passwords
              do not require at least one uppercase character.</p>
      title: UpdateAccountPasswordPolicyRequest
      type: object
    UpdateAssumeRolePolicyRequest:
      properties:
        PolicyDocument:
          allOf:
          - $ref: '#/components/schemas/policyDocumentType'
          - description: <p>The policy that grants an entity permission to assume
              the role.</p> <p>You must provide policies in JSON format in IAM. However,
              for CloudFormation templates formatted in YAML, you can provide the
              policy in JSON or YAML format. CloudFormation always converts a YAML
              policy to JSON format before submitting it to IAM.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a> used to validate this parameter is a string of characters
              consisting of the following:</p> <ul> <li> <p>Any printable ASCII character
              ranging from the space character (<code>\u0020</code>) through the end
              of the ASCII character range</p> </li> <li> <p>The printable characters
              in the Basic Latin and Latin-1 Supplement character set (through <code>\u00FF</code>)</p>
              </li> <li> <p>The special characters tab (<code>\u0009</code>), line
              feed (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p>
              </li> </ul>
        RoleName:
          allOf:
          - $ref: '#/components/schemas/roleNameType'
          - description: '<p>The name of the role to update with the new policy.</p>
              <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      required:
      - RoleName
      - PolicyDocument
      title: UpdateAssumeRolePolicyRequest
      type: object
    UpdateGroupRequest:
      properties:
        GroupName:
          allOf:
          - $ref: '#/components/schemas/groupNameType'
          - description: '<p>Name of the IAM group to update. If you''re changing
              the name of the group, this is the original name.</p> <p>This parameter
              allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
        NewGroupName:
          allOf:
          - $ref: '#/components/schemas/groupNameType'
          - description: <p>New name for the IAM group. Only include this if changing
              the group's name.</p> <p>IAM user, group, role, and policy names must
              be unique within the account. Names are not distinguished by case. For
              example, you cannot create resources named both "MyResource" and "myresource".</p>
        NewPath:
          allOf:
          - $ref: '#/components/schemas/pathType'
          - description: <p>New path for the IAM group. Only include this if changing
              the group's path.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of either a forward slash
              (/) by itself or a string that must begin and end with forward slashes.
              In addition, it can contain any ASCII character from the ! (<code>\u0021</code>)
              through the DEL character (<code>\u007F</code>), including most punctuation
              characters, digits, and upper and lowercased letters.</p>
      required:
      - GroupName
      title: UpdateGroupRequest
      type: object
    UpdateLoginProfileRequest:
      properties:
        Password:
          allOf:
          - $ref: '#/components/schemas/passwordType'
          - description: <p>The new password for the specified IAM user.</p> <p>The
              <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used to
              validate this parameter is a string of characters consisting of the
              following:</p> <ul> <li> <p>Any printable ASCII character ranging from
              the space character (<code>\u0020</code>) through the end of the ASCII
              character range</p> </li> <li> <p>The printable characters in the Basic
              Latin and Latin-1 Supplement character set (through <code>\u00FF</code>)</p>
              </li> <li> <p>The special characters tab (<code>\u0009</code>), line
              feed (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p>
              </li> </ul> <p>However, the format can be further restricted by the
              account administrator by setting a password policy on the Amazon Web
              Services account. For more information, see <a>UpdateAccountPasswordPolicy</a>.</p>
        PasswordResetRequired:
          allOf:
          - $ref: '#/components/schemas/booleanObjectType'
          - description: Allows this new password to be used only once by requiring
              the specified IAM user to set a new password on next sign-in.
        UserName:
          allOf:
          - $ref: '#/components/schemas/userNameType'
          - description: '<p>The name of the user whose password you want to update.</p>
              <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      required:
      - UserName
      title: UpdateLoginProfileRequest
      type: object
    UpdateOpenIDConnectProviderThumbprintRequest:
      properties:
        OpenIDConnectProviderArn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: <p>The Amazon Resource Name (ARN) of the IAM OIDC provider
              resource object for which you want to update the thumbprint. You can
              get a list of OIDC provider ARNs by using the <a>ListOpenIDConnectProviders</a>
              operation.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
              Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        ThumbprintList:
          allOf:
          - $ref: '#/components/schemas/thumbprintListType'
          - description: 'A list of certificate thumbprints that are associated with
              the specified IAM OpenID Connect provider. For more information, see
              <a>CreateOpenIDConnectProvider</a>. '
      required:
      - OpenIDConnectProviderArn
      - ThumbprintList
      title: UpdateOpenIDConnectProviderThumbprintRequest
      type: object
    UpdateRoleDescriptionRequest:
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/roleDescriptionType'
          - description: The new description that you want to apply to the specified
              role.
        RoleName:
          allOf:
          - $ref: '#/components/schemas/roleNameType'
          - description: The name of the role that you want to modify.
      required:
      - RoleName
      - Description
      title: UpdateRoleDescriptionRequest
      type: object
    UpdateRoleDescriptionResponse:
      properties:
        Role:
          allOf:
          - $ref: '#/components/schemas/Role'
          - description: A structure that contains details about the modified role.
      type: object
    UpdateRoleRequest:
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/roleDescriptionType'
          - description: The new description that you want to apply to the specified
              role.
        MaxSessionDuration:
          allOf:
          - $ref: '#/components/schemas/roleMaxSessionDurationType'
          - description: <p>The maximum session duration (in seconds) that you want
              to set for the specified role. If you do not specify a value for this
              setting, the default maximum of one hour is applied. This setting can
              have a value from 1 hour to 12 hours.</p> <p>Anyone who assumes the
              role from the CLI or API can use the <code>DurationSeconds</code> API
              parameter or the <code>duration-seconds</code> CLI parameter to request
              a longer session. The <code>MaxSessionDuration</code> setting determines
              the maximum duration that can be requested using the <code>DurationSeconds</code>
              parameter. If users don't specify a value for the <code>DurationSeconds</code>
              parameter, their security credentials are valid for one hour by default.
              This applies when you use the <code>AssumeRole*</code> API operations
              or the <code>assume-role*</code> CLI operations but does not apply when
              you use those operations to create a console URL. For more information,
              see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html">Using
              IAM roles</a> in the <i>IAM User Guide</i>.</p>
        RoleName:
          allOf:
          - $ref: '#/components/schemas/roleNameType'
          - description: The name of the role that you want to modify.
      required:
      - RoleName
      title: UpdateRoleRequest
      type: object
    UpdateRoleResponse:
      properties: {}
      type: object
    UpdateSAMLProviderRequest:
      properties:
        SAMLMetadataDocument:
          allOf:
          - $ref: '#/components/schemas/SAMLMetadataDocumentType'
          - description: An XML document generated by an identity provider (IdP) that
              supports SAML 2.0. The document includes the issuer's name, expiration
              information, and keys that can be used to validate the SAML authentication
              response (assertions) that are received from the IdP. You must generate
              the metadata document using the identity management software that is
              used as your organization's IdP.
        SAMLProviderArn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: <p>The Amazon Resource Name (ARN) of the SAML provider to
              update.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
              Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
      required:
      - SAMLMetadataDocument
      - SAMLProviderArn
      title: UpdateSAMLProviderRequest
      type: object
    UpdateSAMLProviderResponse:
      description: 'Contains the response to a successful <a>UpdateSAMLProvider</a>
        request. '
      properties:
        SAMLProviderArn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: The Amazon Resource Name (ARN) of the SAML provider that
              was updated.
      type: object
    UpdateSSHPublicKeyRequest:
      properties:
        SSHPublicKeyId:
          allOf:
          - $ref: '#/components/schemas/publicKeyIdType'
          - description: <p>The unique identifier for the SSH public key.</p> <p>This
              parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters that can consist of any upper or
              lowercased letter or digit.</p>
        Status:
          allOf:
          - $ref: '#/components/schemas/statusType'
          - description: The status to assign to the SSH public key. <code>Active</code>
              means that the key can be used for authentication with an CodeCommit
              repository. <code>Inactive</code> means that the key cannot be used.
        UserName:
          allOf:
          - $ref: '#/components/schemas/userNameType'
          - description: '<p>The name of the IAM user associated with the SSH public
              key.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      required:
      - UserName
      - SSHPublicKeyId
      - Status
      title: UpdateSSHPublicKeyRequest
      type: object
    UpdateServerCertificateRequest:
      properties:
        NewPath:
          allOf:
          - $ref: '#/components/schemas/pathType'
          - description: <p>The new path for the server certificate. Include this
              only if you are updating the server certificate's path.</p> <p>This
              parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of either a forward slash
              (/) by itself or a string that must begin and end with forward slashes.
              In addition, it can contain any ASCII character from the ! (<code>\u0021</code>)
              through the DEL character (<code>\u007F</code>), including most punctuation
              characters, digits, and upper and lowercased letters.</p>
        NewServerCertificateName:
          allOf:
          - $ref: '#/components/schemas/serverCertificateNameType'
          - description: '<p>The new name for the server certificate. Include this
              only if you are updating the server certificate''s name. The name of
              the certificate cannot contain any spaces.</p> <p>This parameter allows
              (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
              a string of characters consisting of upper and lowercase alphanumeric
              characters with no spaces. You can also include any of the following
              characters: _+=,.@-</p>'
        ServerCertificateName:
          allOf:
          - $ref: '#/components/schemas/serverCertificateNameType'
          - description: '<p>The name of the server certificate that you want to update.</p>
              <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      required:
      - ServerCertificateName
      title: UpdateServerCertificateRequest
      type: object
    UpdateServiceSpecificCredentialRequest:
      properties:
        ServiceSpecificCredentialId:
          allOf:
          - $ref: '#/components/schemas/serviceSpecificCredentialId'
          - description: <p>The unique identifier of the service-specific credential.</p>
              <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters that can consist of any upper or
              lowercased letter or digit.</p>
        Status:
          allOf:
          - $ref: '#/components/schemas/statusType'
          - description: The status to be assigned to the service-specific credential.
        UserName:
          allOf:
          - $ref: '#/components/schemas/userNameType'
          - description: '<p>The name of the IAM user associated with the service-specific
              credential. If you do not specify this value, then the operation assumes
              the user whose credentials are used to call the operation.</p> <p>This
              parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      required:
      - ServiceSpecificCredentialId
      - Status
      title: UpdateServiceSpecificCredentialRequest
      type: object
    UpdateSigningCertificateRequest:
      properties:
        CertificateId:
          allOf:
          - $ref: '#/components/schemas/certificateIdType'
          - description: <p>The ID of the signing certificate you want to update.</p>
              <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters that can consist of any upper or
              lowercased letter or digit.</p>
        Status:
          allOf:
          - $ref: '#/components/schemas/statusType'
          - description: ' The status you want to assign to the certificate. <code>Active</code>
              means that the certificate can be used for programmatic calls to Amazon
              Web Services <code>Inactive</code> means that the certificate cannot
              be used.'
        UserName:
          allOf:
          - $ref: '#/components/schemas/existingUserNameType'
          - description: '<p>The name of the IAM user the signing certificate belongs
              to.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      required:
      - CertificateId
      - Status
      title: UpdateSigningCertificateRequest
      type: object
    UpdateUserRequest:
      properties:
        NewPath:
          allOf:
          - $ref: '#/components/schemas/pathType'
          - description: <p>New path for the IAM user. Include this parameter only
              if you're changing the user's path.</p> <p>This parameter allows (through
              its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string
              of characters consisting of either a forward slash (/) by itself or
              a string that must begin and end with forward slashes. In addition,
              it can contain any ASCII character from the ! (<code>\u0021</code>)
              through the DEL character (<code>\u007F</code>), including most punctuation
              characters, digits, and upper and lowercased letters.</p>
        NewUserName:
          allOf:
          - $ref: '#/components/schemas/userNameType'
          - description: <p>New name for the user. Include this parameter only if
              you're changing the user's name.</p> <p>IAM user, group, role, and policy
              names must be unique within the account. Names are not distinguished
              by case. For example, you cannot create resources named both "MyResource"
              and "myresource".</p>
        UserName:
          allOf:
          - $ref: '#/components/schemas/existingUserNameType'
          - description: '<p>Name of the user to update. If you''re changing the name
              of the user, this is the original user name.</p> <p>This parameter allows
              (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
              a string of characters consisting of upper and lowercase alphanumeric
              characters with no spaces. You can also include any of the following
              characters: _+=,.@-</p>'
      required:
      - UserName
      title: UpdateUserRequest
      type: object
    UploadSSHPublicKeyRequest:
      properties:
        SSHPublicKeyBody:
          allOf:
          - $ref: '#/components/schemas/publicKeyMaterialType'
          - description: <p>The SSH public key. The public key must be encoded in
              ssh-rsa format or PEM format. The minimum bit-length of the public key
              is 2048 bits. For example, you can generate a 2048-bit key, and the
              resulting PEM file is 1679 bytes long.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a> used to validate this parameter is a string of characters
              consisting of the following:</p> <ul> <li> <p>Any printable ASCII character
              ranging from the space character (<code>\u0020</code>) through the end
              of the ASCII character range</p> </li> <li> <p>The printable characters
              in the Basic Latin and Latin-1 Supplement character set (through <code>\u00FF</code>)</p>
              </li> <li> <p>The special characters tab (<code>\u0009</code>), line
              feed (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p>
              </li> </ul>
        UserName:
          allOf:
          - $ref: '#/components/schemas/userNameType'
          - description: '<p>The name of the IAM user to associate the SSH public
              key with.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      required:
      - UserName
      - SSHPublicKeyBody
      title: UploadSSHPublicKeyRequest
      type: object
    UploadSSHPublicKeyResponse:
      description: Contains the response to a successful <a>UploadSSHPublicKey</a>
        request.
      properties:
        SSHPublicKey:
          allOf:
          - $ref: '#/components/schemas/SSHPublicKey'
          - description: Contains information about the SSH public key.
      type: object
    UploadServerCertificateRequest:
      properties:
        CertificateBody:
          allOf:
          - $ref: '#/components/schemas/certificateBodyType'
          - description: <p>The contents of the public key certificate in PEM-encoded
              format.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a>
              used to validate this parameter is a string of characters consisting
              of the following:</p> <ul> <li> <p>Any printable ASCII character ranging
              from the space character (<code>\u0020</code>) through the end of the
              ASCII character range</p> </li> <li> <p>The printable characters in
              the Basic Latin and Latin-1 Supplement character set (through <code>\u00FF</code>)</p>
              </li> <li> <p>The special characters tab (<code>\u0009</code>), line
              feed (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p>
              </li> </ul>
        CertificateChain:
          allOf:
          - $ref: '#/components/schemas/certificateChainType'
          - description: <p>The contents of the certificate chain. This is typically
              a concatenation of the PEM-encoded public key certificates of the chain.</p>
              <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used
              to validate this parameter is a string of characters consisting of the
              following:</p> <ul> <li> <p>Any printable ASCII character ranging from
              the space character (<code>\u0020</code>) through the end of the ASCII
              character range</p> </li> <li> <p>The printable characters in the Basic
              Latin and Latin-1 Supplement character set (through <code>\u00FF</code>)</p>
              </li> <li> <p>The special characters tab (<code>\u0009</code>), line
              feed (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p>
              </li> </ul>
        Path:
          allOf:
          - $ref: '#/components/schemas/pathType'
          - description: <p>The path for the server certificate. For more information
              about paths, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
              identifiers</a> in the <i>IAM User Guide</i>.</p> <p>This parameter
              is optional. If it is not included, it defaults to a slash (/). This
              parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of either a forward slash
              (/) by itself or a string that must begin and end with forward slashes.
              In addition, it can contain any ASCII character from the ! (<code>\u0021</code>)
              through the DEL character (<code>\u007F</code>), including most punctuation
              characters, digits, and upper and lowercased letters.</p> <note> <p>
              If you are uploading a server certificate specifically for use with
              Amazon CloudFront distributions, you must specify a path using the <code>path</code>
              parameter. The path must begin with <code>/cloudfront</code> and must
              include a trailing slash (for example, <code>/cloudfront/test/</code>).</p>
              </note>
        PrivateKey:
          allOf:
          - $ref: '#/components/schemas/privateKeyType'
          - description: <p>The contents of the private key in PEM-encoded format.</p>
              <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used
              to validate this parameter is a string of characters consisting of the
              following:</p> <ul> <li> <p>Any printable ASCII character ranging from
              the space character (<code>\u0020</code>) through the end of the ASCII
              character range</p> </li> <li> <p>The printable characters in the Basic
              Latin and Latin-1 Supplement character set (through <code>\u00FF</code>)</p>
              </li> <li> <p>The special characters tab (<code>\u0009</code>), line
              feed (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p>
              </li> </ul>
        ServerCertificateName:
          allOf:
          - $ref: '#/components/schemas/serverCertificateNameType'
          - description: '<p>The name for the server certificate. Do not include the
              path in this value. The name of the certificate cannot contain any spaces.</p>
              <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
        Tags:
          allOf:
          - $ref: '#/components/schemas/tagListType'
          - description: <p>A list of tags that you want to attach to the new IAM
              server certificate resource. Each tag consists of a key name and an
              associated value. For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
              IAM resources</a> in the <i>IAM User Guide</i>.</p> <note> <p>If any
              one of the tags is invalid or if you exceed the allowed maximum number
              of tags, then the entire request fails and the resource is not created.</p>
              </note>
      required:
      - ServerCertificateName
      - CertificateBody
      - PrivateKey
      title: UploadServerCertificateRequest
      type: object
    UploadServerCertificateResponse:
      description: 'Contains the response to a successful <a>UploadServerCertificate</a>
        request. '
      example:
        ServerCertificateMetadata:
          Arn: arn:aws:iam::123456789012:server-certificate/company/servercerts/ProdServerCert
          Expiration: '2012-05-08T01:02:03.004Z'
          Path: /company/servercerts/
          ServerCertificateId: ASCA1111111111EXAMPLE
          ServerCertificateName: ProdServerCert
          UploadDate: '2010-05-08T01:02:03.004Z'
      properties:
        ServerCertificateMetadata:
          allOf:
          - $ref: '#/components/schemas/ServerCertificateMetadata'
          - description: The meta information of the uploaded server certificate without
              its certificate body, certificate chain, and private key.
        Tags:
          allOf:
          - $ref: '#/components/schemas/tagListType'
          - description: A list of tags that are attached to the new IAM server certificate.
              The returned list of tags is sorted by tag key. For more information
              about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
              IAM resources</a> in the <i>IAM User Guide</i>.
      type: object
    UploadSigningCertificateRequest:
      properties:
        CertificateBody:
          allOf:
          - $ref: '#/components/schemas/certificateBodyType'
          - description: <p>The contents of the signing certificate.</p> <p>The <a
              href="http://wikipedia.org/wiki/regex">regex pattern</a> used to validate
              this parameter is a string of characters consisting of the following:</p>
              <ul> <li> <p>Any printable ASCII character ranging from the space character
              (<code>\u0020</code>) through the end of the ASCII character range</p>
              </li> <li> <p>The printable characters in the Basic Latin and Latin-1
              Supplement character set (through <code>\u00FF</code>)</p> </li> <li>
              <p>The special characters tab (<code>\u0009</code>), line feed (<code>\u000A</code>),
              and carriage return (<code>\u000D</code>)</p> </li> </ul>
        UserName:
          allOf:
          - $ref: '#/components/schemas/existingUserNameType'
          - description: '<p>The name of the user the signing certificate is for.</p>
              <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
              pattern</a>) a string of characters consisting of upper and lowercase
              alphanumeric characters with no spaces. You can also include any of
              the following characters: _+=,.@-</p>'
      required:
      - CertificateBody
      title: UploadSigningCertificateRequest
      type: object
    UploadSigningCertificateResponse:
      description: 'Contains the response to a successful <a>UploadSigningCertificate</a>
        request. '
      example:
        Certificate:
          CertificateBody: '-----BEGIN CERTIFICATE-----<certificate-body>-----END
            CERTIFICATE-----'
          CertificateId: ID123456789012345EXAMPLE
          Status: Active
          UploadDate: '2015-06-06T21:40:08.121Z'
          UserName: Bob
      properties:
        Certificate:
          allOf:
          - $ref: '#/components/schemas/SigningCertificate'
          - description: Information about the certificate.
      required:
      - Certificate
      type: object
    User:
      description: <p>Contains information about an IAM user entity.</p> <p>This data
        type is used as a response element in the following operations:</p> <ul> <li>
        <p> <a>CreateUser</a> </p> </li> <li> <p> <a>GetUser</a> </p> </li> <li> <p>
        <a>ListUsers</a> </p> </li> </ul>
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: 'The Amazon Resource Name (ARN) that identifies the user.
              For more information about ARNs and how to use ARNs in policies, see
              <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
              Identifiers</a> in the <i>IAM User Guide</i>. '
        CreateDate:
          allOf:
          - $ref: '#/components/schemas/dateType'
          - description: The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO
              8601 date-time format</a>, when the user was created.
        PasswordLastUsed:
          allOf:
          - $ref: '#/components/schemas/dateType'
          - description: <p>The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO
              8601 date-time format</a>, when the user's password was last used to
              sign in to an Amazon Web Services website. For a list of Amazon Web
              Services websites that capture a user's last sign-in time, see the <a
              href="https://docs.aws.amazon.com/IAM/latest/UserGuide/credential-reports.html">Credential
              reports</a> topic in the <i>IAM User Guide</i>. If a password is used
              more than once in a five-minute span, only the first use is returned
              in this field. If the field is null (no value), then it indicates that
              they never signed in with a password. This can be because:</p> <ul>
              <li> <p>The user never had a password.</p> </li> <li> <p>A password
              exists but has not been used since IAM started tracking this information
              on October 20, 2014.</p> </li> </ul> <p>A null value does not mean that
              the user <i>never</i> had a password. Also, if the user does not currently
              have a password but had one in the past, then this field contains the
              date and time the most recent password was used.</p> <p>This value is
              returned only in the <a>GetUser</a> and <a>ListUsers</a> operations.
              </p>
        Path:
          allOf:
          - $ref: '#/components/schemas/pathType'
          - description: <p>The path to the user. For more information about paths,
              see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
              identifiers</a> in the <i>IAM User Guide</i>.</p> <p>The ARN of the
              policy used to set the permissions boundary for the user.</p>
        PermissionsBoundary:
          allOf:
          - $ref: '#/components/schemas/AttachedPermissionsBoundary'
          - description: For more information about permissions boundaries, see <a
              href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html">Permissions
              boundaries for IAM identities </a> in the <i>IAM User Guide</i>.
        Tags:
          allOf:
          - $ref: '#/components/schemas/tagListType'
          - description: A list of tags that are associated with the user. For more
              information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
              IAM resources</a> in the <i>IAM User Guide</i>.
        UserId:
          allOf:
          - $ref: '#/components/schemas/idType'
          - description: The stable and unique string identifying the user. For more
              information about IDs, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
              identifiers</a> in the <i>IAM User Guide</i>.
        UserName:
          allOf:
          - $ref: '#/components/schemas/userNameType'
          - description: The friendly name identifying the user.
      required:
      - Path
      - UserName
      - UserId
      - Arn
      - CreateDate
      type: object
    UserDetail:
      description: <p>Contains information about an IAM user, including all the user's
        policies and all the IAM groups the user is in.</p> <p>This data type is used
        as a response element in the <a>GetAccountAuthorizationDetails</a> operation.</p>
      properties:
        Arn:
          $ref: '#/components/schemas/arnType'
        AttachedManagedPolicies:
          allOf:
          - $ref: '#/components/schemas/attachedPoliciesListType'
          - description: A list of the managed policies attached to the user.
        CreateDate:
          allOf:
          - $ref: '#/components/schemas/dateType'
          - description: The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO
              8601 date-time format</a>, when the user was created.
        GroupList:
          allOf:
          - $ref: '#/components/schemas/groupNameListType'
          - description: A list of IAM groups that the user is in.
        Path:
          allOf:
          - $ref: '#/components/schemas/pathType'
          - description: The path to the user. For more information about paths, see
              <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
              identifiers</a> in the <i>IAM User Guide</i>.
        PermissionsBoundary:
          allOf:
          - $ref: '#/components/schemas/AttachedPermissionsBoundary'
          - description: <p>The ARN of the policy used to set the permissions boundary
              for the user.</p> <p>For more information about permissions boundaries,
              see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html">Permissions
              boundaries for IAM identities </a> in the <i>IAM User Guide</i>.</p>
        Tags:
          allOf:
          - $ref: '#/components/schemas/tagListType'
          - description: A list of tags that are associated with the user. For more
              information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
              IAM resources</a> in the <i>IAM User Guide</i>.
        UserId:
          allOf:
          - $ref: '#/components/schemas/idType'
          - description: The stable and unique string identifying the user. For more
              information about IDs, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
              identifiers</a> in the <i>IAM User Guide</i>.
        UserName:
          allOf:
          - $ref: '#/components/schemas/userNameType'
          - description: The friendly name identifying the user.
        UserPolicyList:
          allOf:
          - $ref: '#/components/schemas/policyDetailListType'
          - description: A list of the inline policies embedded in the user.
      type: object
    VirtualMFADevice:
      description: Contains information about a virtual MFA device.
      properties:
        Base32StringSeed:
          allOf:
          - $ref: '#/components/schemas/BootstrapDatum'
          - description: ' The base32 seed defined as specified in <a href="https://tools.ietf.org/html/rfc3548.txt">RFC3548</a>.
              The <code>Base32StringSeed</code> is base64-encoded. '
        EnableDate:
          allOf:
          - $ref: '#/components/schemas/dateType'
          - description: The date and time on which the virtual MFA device was enabled.
        QRCodePNG:
          allOf:
          - $ref: '#/components/schemas/BootstrapDatum'
          - description: ' A QR code PNG image that encodes <code>otpauth://totp/$virtualMFADeviceName@$AccountName?secret=$Base32String</code>
              where <code>$virtualMFADeviceName</code> is one of the create call arguments.
              <code>AccountName</code> is the user name if set (otherwise, the account
              ID otherwise), and <code>Base32String</code> is the seed in base32 format.
              The <code>Base32String</code> value is base64-encoded. '
        SerialNumber:
          allOf:
          - $ref: '#/components/schemas/serialNumberType'
          - description: The serial number associated with <code>VirtualMFADevice</code>.
        Tags:
          allOf:
          - $ref: '#/components/schemas/tagListType'
          - description: A list of tags that are attached to the virtual MFA device.
              For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
              IAM resources</a> in the <i>IAM User Guide</i>.
        User:
          allOf:
          - $ref: '#/components/schemas/User'
          - description: The IAM user associated with this virtual MFA device.
      required:
      - SerialNumber
      type: object
    accessKeyIdType:
      maxLength: 128
      minLength: 16
      pattern: '[\w]+'
      type: string
    accessKeyMetadataListType:
      description: <p>Contains a list of access key metadata.</p> <p>This data type
        is used as a response element in the <a>ListAccessKeys</a> operation.</p>
      items:
        $ref: '#/components/schemas/AccessKeyMetadata'
      type: array
    accessKeySecretType:
      format: password
      type: string
    accountAliasListType:
      items:
        $ref: '#/components/schemas/accountAliasType'
      type: array
    accountAliasType:
      maxLength: 63
      minLength: 3
      pattern: ^[a-z0-9](([a-z0-9]|-(?!-))*[a-z0-9])?$
      type: string
    arnType:
      description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers
        for Amazon Web Services resources.</p> <p>For more information about ARNs,
        go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
        Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
        </p>
      maxLength: 2048
      minLength: 20
      type: string
    assignmentStatusType:
      enum:
      - Assigned
      - Unassigned
      - Any
      type: string
    attachedPoliciesListType:
      items:
        $ref: '#/components/schemas/AttachedPolicy'
      type: array
    attachmentCountType:
      type: integer
    authenticationCodeType:
      maxLength: 6
      minLength: 6
      pattern: '[\d]+'
      type: string
    booleanObjectType:
      type: boolean
    booleanType:
      type: boolean
    certificateBodyType:
      maxLength: 16384
      minLength: 1
      pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
      type: string
    certificateChainType:
      maxLength: 2097152
      minLength: 1
      pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
      type: string
    certificateIdType:
      maxLength: 128
      minLength: 24
      pattern: '[\w]+'
      type: string
    certificateListType:
      description: <p>Contains a list of signing certificates.</p> <p>This data type
        is used as a response element in the <a>ListSigningCertificates</a> operation.</p>
      items:
        $ref: '#/components/schemas/SigningCertificate'
      type: array
    clientIDListType:
      items:
        $ref: '#/components/schemas/clientIDType'
      type: array
    clientIDType:
      maxLength: 255
      minLength: 1
      type: string
    customSuffixType:
      maxLength: 64
      minLength: 1
      pattern: '[\w+=,.@-]+'
      type: string
    dateType:
      format: date-time
      type: string
    encodingType:
      enum:
      - SSH
      - PEM
      type: string
    entityDetailsListType:
      items:
        $ref: '#/components/schemas/EntityDetails'
      type: array
    entityListType:
      items:
        $ref: '#/components/schemas/EntityType'
      type: array
    entityNameType:
      maxLength: 128
      minLength: 1
      pattern: '[\w+=,.@-]+'
      type: string
    existingUserNameType:
      maxLength: 128
      minLength: 1
      pattern: '[\w+=,.@-]+'
      type: string
    globalEndpointTokenVersion:
      enum:
      - v1Token
      - v2Token
      type: string
    groupDetailListType:
      items:
        $ref: '#/components/schemas/GroupDetail'
      type: array
    groupListType:
      description: <p>Contains a list of IAM groups.</p> <p>This data type is used
        as a response element in the <a>ListGroups</a> operation.</p>
      items:
        $ref: '#/components/schemas/Group'
      type: array
    groupNameListType:
      items:
        $ref: '#/components/schemas/groupNameType'
      type: array
    groupNameType:
      maxLength: 128
      minLength: 1
      pattern: '[\w+=,.@-]+'
      type: string
    idType:
      maxLength: 128
      minLength: 16
      pattern: '[\w]+'
      type: string
    instanceProfileListType:
      description: Contains a list of instance profiles.
      items:
        $ref: '#/components/schemas/InstanceProfile'
      type: array
    instanceProfileNameType:
      maxLength: 128
      minLength: 1
      pattern: '[\w+=,.@-]+'
      type: string
    integerType:
      type: integer
    jobIDType:
      maxLength: 36
      minLength: 36
      type: string
    jobStatusType:
      enum:
      - IN_PROGRESS
      - COMPLETED
      - FAILED
      type: string
    listPolicyGrantingServiceAccessResponseListType:
      items:
        $ref: '#/components/schemas/ListPoliciesGrantingServiceAccessEntry'
      type: array
    markerType:
      maxLength: 320
      minLength: 1
      pattern: '[\u0020-\u00FF]+'
      type: string
    maxItemsType:
      maximum: 1000
      minimum: 1
      type: integer
    maxPasswordAgeType:
      maximum: 1095
      minimum: 1
      type: integer
    mfaDeviceListType:
      description: <p>Contains a list of MFA devices.</p> <p>This data type is used
        as a response element in the <a>ListMFADevices</a> and <a>ListVirtualMFADevices</a>
        operations. </p>
      items:
        $ref: '#/components/schemas/MFADevice'
      type: array
    minimumPasswordLengthType:
      maximum: 128
      minimum: 6
      type: integer
    organizationsEntityPathType:
      maxLength: 427
      minLength: 19
      pattern: ^o-[0-9a-z]{10,32}\/r-[0-9a-z]{4,32}[0-9a-z-\/]*
      type: string
    organizationsPolicyIdType:
      pattern: ^p-[0-9a-zA-Z_]{8,128}$
      type: string
    passwordReusePreventionType:
      maximum: 24
      minimum: 1
      type: integer
    passwordType:
      format: password
      maxLength: 128
      minLength: 1
      pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
      type: string
    pathPrefixType:
      maxLength: 512
      minLength: 1
      pattern: \u002F[\u0021-\u007F]*
      type: string
    pathType:
      maxLength: 512
      minLength: 1
      pattern: (\u002F)|(\u002F[\u0021-\u007F]+\u002F)
      type: string
    policyDescriptionType:
      maxLength: 1000
      type: string
    policyDetailListType:
      items:
        $ref: '#/components/schemas/PolicyDetail'
      type: array
    policyDocumentType:
      maxLength: 131072
      minLength: 1
      pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
      type: string
    policyDocumentVersionListType:
      items:
        $ref: '#/components/schemas/PolicyVersion'
      type: array
    policyGrantingServiceAccessListType:
      items:
        $ref: '#/components/schemas/PolicyGrantingServiceAccess'
      type: array
    policyListType:
      items:
        $ref: '#/components/schemas/Policy'
      type: array
    policyNameListType:
      description: <p>Contains a list of policy names.</p> <p>This data type is used
        as a response element in the <a>ListPolicies</a> operation.</p>
      items:
        $ref: '#/components/schemas/policyNameType'
      type: array
    policyNameType:
      maxLength: 128
      minLength: 1
      pattern: '[\w+=,.@-]+'
      type: string
    policyOwnerEntityType:
      enum:
      - USER
      - ROLE
      - GROUP
      type: string
    policyPathType:
      maxLength: 512
      minLength: 1
      pattern: ((/[A-Za-z0-9\.,\+@=_-]+)*)/
      type: string
    policyScopeType:
      enum:
      - All
      - AWS
      - Local
      type: string
    policyType:
      enum:
      - INLINE
      - MANAGED
      type: string
    policyVersionIdType:
      pattern: v[1-9][0-9]*(\.[A-Za-z0-9-]*)?
      type: string
    privateKeyType:
      format: password
      maxLength: 16384
      minLength: 1
      pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
      type: string
    publicKeyFingerprintType:
      maxLength: 48
      minLength: 48
      pattern: '[:\w]+'
      type: string
    publicKeyIdType:
      maxLength: 128
      minLength: 20
      pattern: '[\w]+'
      type: string
    publicKeyMaterialType:
      maxLength: 16384
      minLength: 1
      pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
      type: string
    responseMarkerType:
      type: string
    roleDescriptionType:
      maxLength: 1000
      pattern: '[\p{L}\p{M}\p{Z}\p{S}\p{N}\p{P}]*'
      type: string
    roleDetailListType:
      items:
        $ref: '#/components/schemas/RoleDetail'
      type: array
    roleListType:
      description: <p>Contains a list of IAM roles.</p> <p>This data type is used
        as a response element in the <a>ListRoles</a> operation.</p>
      items:
        $ref: '#/components/schemas/Role'
      type: array
    roleMaxSessionDurationType:
      maximum: 43200
      minimum: 3600
      type: integer
    roleNameType:
      maxLength: 64
      minLength: 1
      pattern: '[\w+=,.@-]+'
      type: string
    serialNumberType:
      maxLength: 256
      minLength: 9
      pattern: '[\w+=/:,.@-]+'
      type: string
    serverCertificateMetadataListType:
      items:
        $ref: '#/components/schemas/ServerCertificateMetadata'
      type: array
    serverCertificateNameType:
      maxLength: 128
      minLength: 1
      pattern: '[\w+=,.@-]+'
      type: string
    serviceName:
      type: string
    serviceNameType:
      type: string
    serviceNamespaceListType:
      items:
        $ref: '#/components/schemas/serviceNamespaceType'
      maxItems: 200
      minItems: 1
      type: array
    serviceNamespaceType:
      maxLength: 64
      minLength: 1
      pattern: '[\w-]*'
      type: string
    servicePassword:
      format: password
      type: string
    serviceSpecificCredentialId:
      maxLength: 128
      minLength: 20
      pattern: '[\w]+'
      type: string
    serviceUserName:
      maxLength: 200
      minLength: 17
      pattern: '[\w+=,.@-]+'
      type: string
    sortKeyType:
      enum:
      - SERVICE_NAMESPACE_ASCENDING
      - SERVICE_NAMESPACE_DESCENDING
      - LAST_AUTHENTICATED_TIME_ASCENDING
      - LAST_AUTHENTICATED_TIME_DESCENDING
      type: string
    statusType:
      enum:
      - Active
      - Inactive
      type: string
    stringType:
      type: string
    summaryKeyType:
      enum:
      - Users
      - UsersQuota
      - Groups
      - GroupsQuota
      - ServerCertificates
      - ServerCertificatesQuota
      - UserPolicySizeQuota
      - GroupPolicySizeQuota
      - GroupsPerUserQuota
      - SigningCertificatesPerUserQuota
      - AccessKeysPerUserQuota
      - MFADevices
      - MFADevicesInUse
      - AccountMFAEnabled
      - AccountAccessKeysPresent
      - AccountSigningCertificatesPresent
      - AttachedPoliciesPerGroupQuota
      - AttachedPoliciesPerRoleQuota
      - AttachedPoliciesPerUserQuota
      - Policies
      - PoliciesQuota
      - PolicySizeQuota
      - PolicyVersionsInUse
      - PolicyVersionsInUseQuota
      - VersionsPerPolicyQuota
      - GlobalEndpointTokenVersion
      type: string
    summaryMapType:
      additionalProperties:
        $ref: '#/components/schemas/summaryValueType'
      type: object
    summaryValueType:
      type: integer
    tagKeyListType:
      items:
        $ref: '#/components/schemas/tagKeyType'
      maxItems: 50
      type: array
    tagKeyType:
      maxLength: 128
      minLength: 1
      pattern: '[\p{L}\p{Z}\p{N}_.:/=+\-@]+'
      type: string
    tagListType:
      items:
        $ref: '#/components/schemas/Tag'
      maxItems: 50
      type: array
    tagValueType:
      maxLength: 256
      minLength: 0
      pattern: '[\p{L}\p{Z}\p{N}_.:/=+\-@]*'
      type: string
    thumbprintListType:
      description: Contains a list of thumbprints of identity provider server certificates.
      items:
        $ref: '#/components/schemas/thumbprintType'
      type: array
    thumbprintType:
      description: <p>Contains a thumbprint for an identity provider's server certificate.</p>
        <p>The identity provider's server certificate thumbprint is the hex-encoded
        SHA-1 hash value of the self-signed X.509 certificate. This thumbprint is
        used by the domain where the OpenID Connect provider makes its keys available.
        The thumbprint is always a 40-character string.</p>
      maxLength: 40
      minLength: 40
      type: string
    userDetailListType:
      items:
        $ref: '#/components/schemas/UserDetail'
      type: array
    userListType:
      description: <p>Contains a list of users.</p> <p>This data type is used as a
        response element in the <a>GetGroup</a> and <a>ListUsers</a> operations. </p>
      items:
        allOf:
          - $ref: '#/components/schemas/User'
          - xml:
              name: member
      type: array
    userNameType:
      maxLength: 64
      minLength: 1
      pattern: '[\w+=,.@-]+'
      type: string
    virtualMFADeviceListType:
      items:
        $ref: '#/components/schemas/VirtualMFADevice'
      type: array
    virtualMFADeviceName:
      minLength: 1
      pattern: '[\w+=,.@-]+'
      type: string
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    access_key_last_useds:
      id: aws.iam.access_key_last_useds
      methods:
        access_key_last_useds_Get:
          operation:
            $ref: '#/paths/~1?Action=GetAccessKeyLastUsed&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
      name: access_key_last_useds
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/access_key_last_useds/methods/access_key_last_useds_Get'
        update: []
      title: access_key_last_useds
    access_keys:
      id: aws.iam.access_keys
      methods:
        access_keys_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateAccessKey&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        access_keys_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteAccessKey&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
        access_keys_List:
          operation:
            $ref: '#/paths/~1?Action=ListAccessKeys&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
        access_keys_Update:
          operation:
            $ref: '#/paths/~1?Action=UpdateAccessKey&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
      name: access_keys
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/access_keys/methods/access_keys_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/access_keys/methods/access_keys_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/access_keys/methods/access_keys_List'
        update: []
      title: access_keys
    account_alias:
      id: aws.iam.account_alias
      methods:
        account_alias_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateAccountAlias&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
        account_alias_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteAccountAlias&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
      name: account_alias
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/account_alias/methods/account_alias_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/account_alias/methods/account_alias_Create'
        select: []
        update: []
      title: account_alias
    account_aliases:
      id: aws.iam.account_aliases
      methods:
        account_aliases_List:
          operation:
            $ref: '#/paths/~1?Action=ListAccountAliases&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
      name: account_aliases
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/account_aliases/methods/account_aliases_List'
        update: []
      title: account_aliases
    account_authorization_details:
      id: aws.iam.account_authorization_details
      methods:
        account_authorization_details_Get:
          operation:
            $ref: '#/paths/~1?Action=GetAccountAuthorizationDetails&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
      name: account_authorization_details
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/account_authorization_details/methods/account_authorization_details_Get'
        update: []
      title: account_authorization_details
    account_password_policys:
      id: aws.iam.account_password_policys
      methods:
        account_password_policys_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteAccountPasswordPolicy&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
        account_password_policys_Get:
          operation:
            $ref: '#/paths/~1?Action=GetAccountPasswordPolicy&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
        account_password_policys_Update:
          operation:
            $ref: '#/paths/~1?Action=UpdateAccountPasswordPolicy&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
      name: account_password_policys
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/account_password_policys/methods/account_password_policys_Delete'
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/account_password_policys/methods/account_password_policys_Get'
        update: []
      title: account_password_policys
    account_summarys:
      id: aws.iam.account_summarys
      methods:
        account_summarys_Get:
          operation:
            $ref: '#/paths/~1?Action=GetAccountSummary&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
      name: account_summarys
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/account_summarys/methods/account_summarys_Get'
        update: []
      title: account_summarys
    assume_role_policys:
      id: aws.iam.assume_role_policys
      methods:
        assume_role_policys_Update:
          operation:
            $ref: '#/paths/~1?Action=UpdateAssumeRolePolicy&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
      name: assume_role_policys
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: assume_role_policys
    attached_group_policies:
      id: aws.iam.attached_group_policies
      methods:
        attached_group_policies_List:
          operation:
            $ref: '#/paths/~1?Action=ListAttachedGroupPolicies&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
      name: attached_group_policies
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/attached_group_policies/methods/attached_group_policies_List'
        update: []
      title: attached_group_policies
    attached_role_policies:
      id: aws.iam.attached_role_policies
      methods:
        attached_role_policies_List:
          operation:
            $ref: '#/paths/~1?Action=ListAttachedRolePolicies&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
      name: attached_role_policies
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/attached_role_policies/methods/attached_role_policies_List'
        update: []
      title: attached_role_policies
    attached_user_policies:
      id: aws.iam.attached_user_policies
      methods:
        attached_user_policies_List:
          operation:
            $ref: '#/paths/~1?Action=ListAttachedUserPolicies&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
      name: attached_user_policies
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/attached_user_policies/methods/attached_user_policies_List'
        update: []
      title: attached_user_policies
    client_i_d_from_open_i_d_connect_providers:
      id: aws.iam.client_i_d_from_open_i_d_connect_providers
      methods:
        client_i_d_from_open_i_d_connect_providers_Remove:
          operation:
            $ref: '#/paths/~1?Action=RemoveClientIDFromOpenIDConnectProvider&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
      name: client_i_d_from_open_i_d_connect_providers
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: client_i_d_from_open_i_d_connect_providers
    client_i_d_to_open_i_d_connect_providers:
      id: aws.iam.client_i_d_to_open_i_d_connect_providers
      methods: {}
      name: client_i_d_to_open_i_d_connect_providers
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: client_i_d_to_open_i_d_connect_providers
    context_keys_for_custom_policys:
      id: aws.iam.context_keys_for_custom_policys
      methods:
        context_keys_for_custom_policys_Get:
          operation:
            $ref: '#/paths/~1?Action=GetContextKeysForCustomPolicy&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
      name: context_keys_for_custom_policys
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/context_keys_for_custom_policys/methods/context_keys_for_custom_policys_Get'
        update: []
      title: context_keys_for_custom_policys
    context_keys_for_principal_policys:
      id: aws.iam.context_keys_for_principal_policys
      methods:
        context_keys_for_principal_policys_Get:
          operation:
            $ref: '#/paths/~1?Action=GetContextKeysForPrincipalPolicy&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
      name: context_keys_for_principal_policys
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/context_keys_for_principal_policys/methods/context_keys_for_principal_policys_Get'
        update: []
      title: context_keys_for_principal_policys
    credential_reports:
      id: aws.iam.credential_reports
      methods:
        credential_reports_Generate:
          operation:
            $ref: '#/paths/~1?Action=GenerateCredentialReport&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        credential_reports_Get:
          operation:
            $ref: '#/paths/~1?Action=GetCredentialReport&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
      name: credential_reports
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/credential_reports/methods/credential_reports_Get'
        update: []
      title: credential_reports
    custom_policys:
      id: aws.iam.custom_policys
      methods:
        custom_policys_Simulate:
          operation:
            $ref: '#/paths/~1?Action=SimulateCustomPolicy&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      name: custom_policys
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: custom_policys
    default_policy_versions:
      id: aws.iam.default_policy_versions
      methods:
        default_policy_versions_Set:
          operation:
            $ref: '#/paths/~1?Action=SetDefaultPolicyVersion&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
      name: default_policy_versions
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: default_policy_versions
    entities_for_policys:
      id: aws.iam.entities_for_policys
      methods:
        entities_for_policys_List:
          operation:
            $ref: '#/paths/~1?Action=ListEntitiesForPolicy&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
      name: entities_for_policys
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/entities_for_policys/methods/entities_for_policys_List'
        update: []
      title: entities_for_policys
    group_policies:
      id: aws.iam.group_policies
      methods:
        group_policies_List:
          operation:
            $ref: '#/paths/~1?Action=ListGroupPolicies&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
      name: group_policies
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/group_policies/methods/group_policies_List'
        update: []
      title: group_policies
    group_policys:
      id: aws.iam.group_policys
      methods:
        group_policys_Attach:
          operation:
            $ref: '#/paths/~1?Action=AttachGroupPolicy&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
        group_policys_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteGroupPolicy&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
        group_policys_Detach:
          operation:
            $ref: '#/paths/~1?Action=DetachGroupPolicy&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
        group_policys_Get:
          operation:
            $ref: '#/paths/~1?Action=GetGroupPolicy&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
        group_policys_Put:
          operation:
            $ref: '#/paths/~1?Action=PutGroupPolicy&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
      name: group_policys
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/group_policys/methods/group_policys_Delete'
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/group_policys/methods/group_policys_Get'
        update: []
      title: group_policys
    groups:
      id: aws.iam.groups
      methods:
        groups_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateGroup&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        groups_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteGroup&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
        groups_Get:
          operation:
            $ref: '#/paths/~1?Action=GetGroup&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
        groups_List:
          operation:
            $ref: '#/paths/~1?Action=ListGroups&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
        groups_Update:
          operation:
            $ref: '#/paths/~1?Action=UpdateGroup&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
      name: groups
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/groups/methods/groups_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/groups/methods/groups_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/groups/methods/groups_Get'
        - $ref: '#/components/x-stackQL-resources/groups/methods/groups_List'
        update: []
      title: groups
    groups_for_users:
      id: aws.iam.groups_for_users
      methods:
        groups_for_users_List:
          operation:
            $ref: '#/paths/~1?Action=ListGroupsForUser&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
      name: groups_for_users
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/groups_for_users/methods/groups_for_users_List'
        update: []
      title: groups_for_users
    instance_profile_tags:
      id: aws.iam.instance_profile_tags
      methods:
        instance_profile_tags_List:
          operation:
            $ref: '#/paths/~1?Action=ListInstanceProfileTags&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
      name: instance_profile_tags
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/instance_profile_tags/methods/instance_profile_tags_List'
        update: []
      title: instance_profile_tags
    instance_profiles:
      id: aws.iam.instance_profiles
      methods:
        instance_profiles_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateInstanceProfile&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        instance_profiles_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteInstanceProfile&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
        instance_profiles_Get:
          operation:
            $ref: '#/paths/~1?Action=GetInstanceProfile&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
        instance_profiles_List:
          operation:
            $ref: '#/paths/~1?Action=ListInstanceProfiles&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
        instance_profiles_Tag:
          operation:
            $ref: '#/paths/~1?Action=TagInstanceProfile&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
        instance_profiles_Untag:
          operation:
            $ref: '#/paths/~1?Action=UntagInstanceProfile&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
      name: instance_profiles
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/instance_profiles/methods/instance_profiles_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/instance_profiles/methods/instance_profiles_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/instance_profiles/methods/instance_profiles_Get'
        - $ref: '#/components/x-stackQL-resources/instance_profiles/methods/instance_profiles_List'
        update: []
      title: instance_profiles
    instance_profiles_for_roles:
      id: aws.iam.instance_profiles_for_roles
      methods:
        instance_profiles_for_roles_List:
          operation:
            $ref: '#/paths/~1?Action=ListInstanceProfilesForRole&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
      name: instance_profiles_for_roles
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/instance_profiles_for_roles/methods/instance_profiles_for_roles_List'
        update: []
      title: instance_profiles_for_roles
    login_profiles:
      id: aws.iam.login_profiles
      methods:
        login_profiles_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateLoginProfile&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        login_profiles_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteLoginProfile&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
        login_profiles_Get:
          operation:
            $ref: '#/paths/~1?Action=GetLoginProfile&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
        login_profiles_Update:
          operation:
            $ref: '#/paths/~1?Action=UpdateLoginProfile&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
      name: login_profiles
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/login_profiles/methods/login_profiles_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/login_profiles/methods/login_profiles_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/login_profiles/methods/login_profiles_Get'
        update: []
      title: login_profiles
    m_f_a_device_tags:
      id: aws.iam.m_f_a_device_tags
      methods:
        m_f_a_device_tags_List:
          operation:
            $ref: '#/paths/~1?Action=ListMFADeviceTags&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
      name: m_f_a_device_tags
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/m_f_a_device_tags/methods/m_f_a_device_tags_List'
        update: []
      title: m_f_a_device_tags
    m_f_a_devices:
      id: aws.iam.m_f_a_devices
      methods:
        m_f_a_devices_Deactivate:
          operation:
            $ref: '#/paths/~1?Action=DeactivateMFADevice&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
        m_f_a_devices_Enable:
          operation:
            $ref: '#/paths/~1?Action=EnableMFADevice&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
        m_f_a_devices_List:
          operation:
            $ref: '#/paths/~1?Action=ListMFADevices&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
        m_f_a_devices_Resync:
          operation:
            $ref: '#/paths/~1?Action=ResyncMFADevice&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
        m_f_a_devices_Tag:
          operation:
            $ref: '#/paths/~1?Action=TagMFADevice&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
        m_f_a_devices_Untag:
          operation:
            $ref: '#/paths/~1?Action=UntagMFADevice&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
      name: m_f_a_devices
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/m_f_a_devices/methods/m_f_a_devices_List'
        update: []
      title: m_f_a_devices
    open_i_d_connect_provider_tags:
      id: aws.iam.open_i_d_connect_provider_tags
      methods:
        open_i_d_connect_provider_tags_List:
          operation:
            $ref: '#/paths/~1?Action=ListOpenIDConnectProviderTags&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
      name: open_i_d_connect_provider_tags
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/open_i_d_connect_provider_tags/methods/open_i_d_connect_provider_tags_List'
        update: []
      title: open_i_d_connect_provider_tags
    open_i_d_connect_provider_thumbprints:
      id: aws.iam.open_i_d_connect_provider_thumbprints
      methods:
        open_i_d_connect_provider_thumbprints_Update:
          operation:
            $ref: '#/paths/~1?Action=UpdateOpenIDConnectProviderThumbprint&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
      name: open_i_d_connect_provider_thumbprints
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: open_i_d_connect_provider_thumbprints
    open_i_d_connect_providers:
      id: aws.iam.open_i_d_connect_providers
      methods:
        open_i_d_connect_providers_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateOpenIDConnectProvider&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        open_i_d_connect_providers_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteOpenIDConnectProvider&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
        open_i_d_connect_providers_Get:
          operation:
            $ref: '#/paths/~1?Action=GetOpenIDConnectProvider&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
        open_i_d_connect_providers_List:
          operation:
            $ref: '#/paths/~1?Action=ListOpenIDConnectProviders&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
        open_i_d_connect_providers_Tag:
          operation:
            $ref: '#/paths/~1?Action=TagOpenIDConnectProvider&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
        open_i_d_connect_providers_Untag:
          operation:
            $ref: '#/paths/~1?Action=UntagOpenIDConnectProvider&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
      name: open_i_d_connect_providers
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/open_i_d_connect_providers/methods/open_i_d_connect_providers_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/open_i_d_connect_providers/methods/open_i_d_connect_providers_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/open_i_d_connect_providers/methods/open_i_d_connect_providers_Get'
        - $ref: '#/components/x-stackQL-resources/open_i_d_connect_providers/methods/open_i_d_connect_providers_List'
        update: []
      title: open_i_d_connect_providers
    organizations_access_reports:
      id: aws.iam.organizations_access_reports
      methods:
        organizations_access_reports_Generate:
          operation:
            $ref: '#/paths/~1?Action=GenerateOrganizationsAccessReport&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        organizations_access_reports_Get:
          operation:
            $ref: '#/paths/~1?Action=GetOrganizationsAccessReport&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
      name: organizations_access_reports
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/organizations_access_reports/methods/organizations_access_reports_Get'
        update: []
      title: organizations_access_reports
    passwords:
      id: aws.iam.passwords
      methods:
        passwords_Change:
          operation:
            $ref: '#/paths/~1?Action=ChangePassword&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
      name: passwords
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: passwords
    policies:
      id: aws.iam.policies
      methods:
        policies_List:
          operation:
            $ref: '#/paths/~1?Action=ListPolicies&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
      name: policies
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/policies/methods/policies_List'
        update: []
      title: policies
    policy_tags:
      id: aws.iam.policy_tags
      methods:
        policy_tags_List:
          operation:
            $ref: '#/paths/~1?Action=ListPolicyTags&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
      name: policy_tags
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/policy_tags/methods/policy_tags_List'
        update: []
      title: policy_tags
    policy_versions:
      id: aws.iam.policy_versions
      methods:
        policy_versions_Create:
          operation:
            $ref: '#/paths/~1?Action=CreatePolicyVersion&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        policy_versions_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeletePolicyVersion&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
        policy_versions_Get:
          operation:
            $ref: '#/paths/~1?Action=GetPolicyVersion&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
        policy_versions_List:
          operation:
            $ref: '#/paths/~1?Action=ListPolicyVersions&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
      name: policy_versions
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/policy_versions/methods/policy_versions_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/policy_versions/methods/policy_versions_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/policy_versions/methods/policy_versions_Get'
        - $ref: '#/components/x-stackQL-resources/policy_versions/methods/policy_versions_List'
        update: []
      title: policy_versions
    policys:
      id: aws.iam.policys
      methods:
        policys_Create:
          operation:
            $ref: '#/paths/~1?Action=CreatePolicy&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        policys_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeletePolicy&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
        policys_Get:
          operation:
            $ref: '#/paths/~1?Action=GetPolicy&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
        policys_Tag:
          operation:
            $ref: '#/paths/~1?Action=TagPolicy&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
        policys_Untag:
          operation:
            $ref: '#/paths/~1?Action=UntagPolicy&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
      name: policys
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/policys/methods/policys_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/policys/methods/policys_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/policys/methods/policys_Get'
        update: []
      title: policys
    principal_policys:
      id: aws.iam.principal_policys
      methods:
        principal_policys_Simulate:
          operation:
            $ref: '#/paths/~1?Action=SimulatePrincipalPolicy&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      name: principal_policys
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: principal_policys
    role_descriptions:
      id: aws.iam.role_descriptions
      methods:
        role_descriptions_Update:
          operation:
            $ref: '#/paths/~1?Action=UpdateRoleDescription&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      name: role_descriptions
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: role_descriptions
    role_from_instance_profiles:
      id: aws.iam.role_from_instance_profiles
      methods:
        role_from_instance_profiles_Remove:
          operation:
            $ref: '#/paths/~1?Action=RemoveRoleFromInstanceProfile&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
      name: role_from_instance_profiles
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: role_from_instance_profiles
    role_permissions_boundarys:
      id: aws.iam.role_permissions_boundarys
      methods:
        role_permissions_boundarys_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteRolePermissionsBoundary&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
        role_permissions_boundarys_Put:
          operation:
            $ref: '#/paths/~1?Action=PutRolePermissionsBoundary&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
      name: role_permissions_boundarys
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/role_permissions_boundarys/methods/role_permissions_boundarys_Delete'
        insert: []
        select: []
        update: []
      title: role_permissions_boundarys
    role_policies:
      id: aws.iam.role_policies
      methods:
        role_policies_List:
          operation:
            $ref: '#/paths/~1?Action=ListRolePolicies&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
      name: role_policies
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/role_policies/methods/role_policies_List'
        update: []
      title: role_policies
    role_policys:
      id: aws.iam.role_policys
      methods:
        role_policys_Attach:
          operation:
            $ref: '#/paths/~1?Action=AttachRolePolicy&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
        role_policys_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteRolePolicy&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
        role_policys_Detach:
          operation:
            $ref: '#/paths/~1?Action=DetachRolePolicy&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
        role_policys_Get:
          operation:
            $ref: '#/paths/~1?Action=GetRolePolicy&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
        role_policys_Put:
          operation:
            $ref: '#/paths/~1?Action=PutRolePolicy&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
      name: role_policys
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/role_policys/methods/role_policys_Delete'
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/role_policys/methods/role_policys_Get'
        update: []
      title: role_policys
    role_tags:
      id: aws.iam.role_tags
      methods:
        role_tags_List:
          operation:
            $ref: '#/paths/~1?Action=ListRoleTags&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
      name: role_tags
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/role_tags/methods/role_tags_List'
        update: []
      title: role_tags
    role_to_instance_profiles:
      id: aws.iam.role_to_instance_profiles
      methods:
        role_to_instance_profiles_Add:
          operation:
            $ref: '#/paths/~1?Action=AddRoleToInstanceProfile&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
      name: role_to_instance_profiles
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: role_to_instance_profiles
    roles:
      id: aws.iam.roles
      methods:
        roles_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateRole&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        roles_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteRole&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
        roles_Get:
          operation:
            $ref: '#/paths/~1?Action=GetRole&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
        roles_List:
          operation:
            $ref: '#/paths/~1?Action=ListRoles&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
        roles_Tag:
          operation:
            $ref: '#/paths/~1?Action=TagRole&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
        roles_Untag:
          operation:
            $ref: '#/paths/~1?Action=UntagRole&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
        roles_Update:
          operation:
            $ref: '#/paths/~1?Action=UpdateRole&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      name: roles
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/roles/methods/roles_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/roles/methods/roles_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/roles/methods/roles_Get'
        - $ref: '#/components/x-stackQL-resources/roles/methods/roles_List'
        update: []
      title: roles
    s_a_m_l_provider_tags:
      id: aws.iam.s_a_m_l_provider_tags
      methods:
        s_a_m_l_provider_tags_List:
          operation:
            $ref: '#/paths/~1?Action=ListSAMLProviderTags&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
      name: s_a_m_l_provider_tags
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/s_a_m_l_provider_tags/methods/s_a_m_l_provider_tags_List'
        update: []
      title: s_a_m_l_provider_tags
    s_a_m_l_providers:
      id: aws.iam.s_a_m_l_providers
      methods:
        s_a_m_l_providers_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateSAMLProvider&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        s_a_m_l_providers_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteSAMLProvider&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
        s_a_m_l_providers_Get:
          operation:
            $ref: '#/paths/~1?Action=GetSAMLProvider&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
        s_a_m_l_providers_List:
          operation:
            $ref: '#/paths/~1?Action=ListSAMLProviders&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
        s_a_m_l_providers_Tag:
          operation:
            $ref: '#/paths/~1?Action=TagSAMLProvider&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
        s_a_m_l_providers_Untag:
          operation:
            $ref: '#/paths/~1?Action=UntagSAMLProvider&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
        s_a_m_l_providers_Update:
          operation:
            $ref: '#/paths/~1?Action=UpdateSAMLProvider&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      name: s_a_m_l_providers
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/s_a_m_l_providers/methods/s_a_m_l_providers_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/s_a_m_l_providers/methods/s_a_m_l_providers_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/s_a_m_l_providers/methods/s_a_m_l_providers_Get'
        - $ref: '#/components/x-stackQL-resources/s_a_m_l_providers/methods/s_a_m_l_providers_List'
        update: []
      title: s_a_m_l_providers
    s_s_h_public_keys:
      id: aws.iam.s_s_h_public_keys
      methods:
        s_s_h_public_keys_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteSSHPublicKey&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
        s_s_h_public_keys_Get:
          operation:
            $ref: '#/paths/~1?Action=GetSSHPublicKey&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
        s_s_h_public_keys_List:
          operation:
            $ref: '#/paths/~1?Action=ListSSHPublicKeys&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
        s_s_h_public_keys_Update:
          operation:
            $ref: '#/paths/~1?Action=UpdateSSHPublicKey&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
        s_s_h_public_keys_Upload:
          operation:
            $ref: '#/paths/~1?Action=UploadSSHPublicKey&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      name: s_s_h_public_keys
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/s_s_h_public_keys/methods/s_s_h_public_keys_Delete'
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/s_s_h_public_keys/methods/s_s_h_public_keys_Get'
        - $ref: '#/components/x-stackQL-resources/s_s_h_public_keys/methods/s_s_h_public_keys_List'
        update: []
      title: s_s_h_public_keys
    security_token_service_preferences:
      id: aws.iam.security_token_service_preferences
      methods:
        security_token_service_preferences_Set:
          operation:
            $ref: '#/paths/~1?Action=SetSecurityTokenServicePreferences&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
      name: security_token_service_preferences
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: security_token_service_preferences
    server_certificate_tags:
      id: aws.iam.server_certificate_tags
      methods:
        server_certificate_tags_List:
          operation:
            $ref: '#/paths/~1?Action=ListServerCertificateTags&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
      name: server_certificate_tags
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/server_certificate_tags/methods/server_certificate_tags_List'
        update: []
      title: server_certificate_tags
    server_certificates:
      id: aws.iam.server_certificates
      methods:
        server_certificates_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteServerCertificate&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
        server_certificates_Get:
          operation:
            $ref: '#/paths/~1?Action=GetServerCertificate&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
        server_certificates_List:
          operation:
            $ref: '#/paths/~1?Action=ListServerCertificates&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
        server_certificates_Tag:
          operation:
            $ref: '#/paths/~1?Action=TagServerCertificate&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
        server_certificates_Untag:
          operation:
            $ref: '#/paths/~1?Action=UntagServerCertificate&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
        server_certificates_Update:
          operation:
            $ref: '#/paths/~1?Action=UpdateServerCertificate&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
        server_certificates_Upload:
          operation:
            $ref: '#/paths/~1?Action=UploadServerCertificate&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      name: server_certificates
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/server_certificates/methods/server_certificates_Delete'
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/server_certificates/methods/server_certificates_Get'
        - $ref: '#/components/x-stackQL-resources/server_certificates/methods/server_certificates_List'
        update: []
      title: server_certificates
    service_last_accessed_details:
      id: aws.iam.service_last_accessed_details
      methods:
        service_last_accessed_details_Generate:
          operation:
            $ref: '#/paths/~1?Action=GenerateServiceLastAccessedDetails&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        service_last_accessed_details_Get:
          operation:
            $ref: '#/paths/~1?Action=GetServiceLastAccessedDetails&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
      name: service_last_accessed_details
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/service_last_accessed_details/methods/service_last_accessed_details_Get'
        update: []
      title: service_last_accessed_details
    service_last_accessed_details_with_entities:
      id: aws.iam.service_last_accessed_details_with_entities
      methods:
        service_last_accessed_details_with_entities_Get:
          operation:
            $ref: '#/paths/~1?Action=GetServiceLastAccessedDetailsWithEntities&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
      name: service_last_accessed_details_with_entities
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/service_last_accessed_details_with_entities/methods/service_last_accessed_details_with_entities_Get'
        update: []
      title: service_last_accessed_details_with_entities
    service_linked_role_deletion_status:
      id: aws.iam.service_linked_role_deletion_status
      methods:
        service_linked_role_deletion_status_Get:
          operation:
            $ref: '#/paths/~1?Action=GetServiceLinkedRoleDeletionStatus&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
      name: service_linked_role_deletion_status
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/service_linked_role_deletion_status/methods/service_linked_role_deletion_status_Get'
        update: []
      title: service_linked_role_deletion_status
    service_linked_roles:
      id: aws.iam.service_linked_roles
      methods:
        service_linked_roles_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateServiceLinkedRole&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        service_linked_roles_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteServiceLinkedRole&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      name: service_linked_roles
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/service_linked_roles/methods/service_linked_roles_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/service_linked_roles/methods/service_linked_roles_Create'
        select: []
        update: []
      title: service_linked_roles
    service_specific_credentials:
      id: aws.iam.service_specific_credentials
      methods:
        service_specific_credentials_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateServiceSpecificCredential&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        service_specific_credentials_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteServiceSpecificCredential&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
        service_specific_credentials_List:
          operation:
            $ref: '#/paths/~1?Action=ListServiceSpecificCredentials&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
        service_specific_credentials_Reset:
          operation:
            $ref: '#/paths/~1?Action=ResetServiceSpecificCredential&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        service_specific_credentials_Update:
          operation:
            $ref: '#/paths/~1?Action=UpdateServiceSpecificCredential&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
      name: service_specific_credentials
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/service_specific_credentials/methods/service_specific_credentials_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/service_specific_credentials/methods/service_specific_credentials_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/service_specific_credentials/methods/service_specific_credentials_List'
        update: []
      title: service_specific_credentials
    signing_certificates:
      id: aws.iam.signing_certificates
      methods:
        signing_certificates_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteSigningCertificate&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
        signing_certificates_List:
          operation:
            $ref: '#/paths/~1?Action=ListSigningCertificates&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
        signing_certificates_Update:
          operation:
            $ref: '#/paths/~1?Action=UpdateSigningCertificate&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
        signing_certificates_Upload:
          operation:
            $ref: '#/paths/~1?Action=UploadSigningCertificate&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      name: signing_certificates
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/signing_certificates/methods/signing_certificates_Delete'
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/signing_certificates/methods/signing_certificates_List'
        update: []
      title: signing_certificates
    user_from_groups:
      id: aws.iam.user_from_groups
      methods:
        user_from_groups_Remove:
          operation:
            $ref: '#/paths/~1?Action=RemoveUserFromGroup&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
      name: user_from_groups
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: user_from_groups
    user_permissions_boundarys:
      id: aws.iam.user_permissions_boundarys
      methods:
        user_permissions_boundarys_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteUserPermissionsBoundary&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
        user_permissions_boundarys_Put:
          operation:
            $ref: '#/paths/~1?Action=PutUserPermissionsBoundary&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
      name: user_permissions_boundarys
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/user_permissions_boundarys/methods/user_permissions_boundarys_Delete'
        insert: []
        select: []
        update: []
      title: user_permissions_boundarys
    user_policies:
      id: aws.iam.user_policies
      methods:
        user_policies_List:
          operation:
            $ref: '#/paths/~1?Action=ListUserPolicies&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
      name: user_policies
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/user_policies/methods/user_policies_List'
        update: []
      title: user_policies
    user_policys:
      id: aws.iam.user_policys
      methods:
        user_policys_Attach:
          operation:
            $ref: '#/paths/~1?Action=AttachUserPolicy&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
        user_policys_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteUserPolicy&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
        user_policys_Detach:
          operation:
            $ref: '#/paths/~1?Action=DetachUserPolicy&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
        user_policys_Get:
          operation:
            $ref: '#/paths/~1?Action=GetUserPolicy&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
        user_policys_Put:
          operation:
            $ref: '#/paths/~1?Action=PutUserPolicy&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
      name: user_policys
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/user_policys/methods/user_policys_Delete'
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/user_policys/methods/user_policys_Get'
        update: []
      title: user_policys
    user_tags:
      id: aws.iam.user_tags
      methods:
        user_tags_List:
          operation:
            $ref: '#/paths/~1?Action=ListUserTags&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
      name: user_tags
      sqlVerbs:
        delete: []
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/user_tags/methods/user_tags_List'
        update: []
      title: user_tags
    user_to_groups:
      id: aws.iam.user_to_groups
      methods:
        user_to_groups_Add:
          operation:
            $ref: '#/paths/~1?Action=AddUserToGroup&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
      name: user_to_groups
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: user_to_groups
    users:
      id: aws.iam.users
      methods:
        users_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateUser&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        users_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteUser&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
        users_Get:
          operation:
            $ref: '#/paths/~1?Action=GetUser&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
        users_List:
          operation:
            $ref: '#/paths/~1?Action=ListUsers&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/ListUsersResult/Users/member
            openAPIDocKey: '200'
        users_Tag:
          operation:
            $ref: '#/paths/~1?Action=TagUser&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
        users_Untag:
          operation:
            $ref: '#/paths/~1?Action=UntagUser&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
        users_Update:
          operation:
            $ref: '#/paths/~1?Action=UpdateUser&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
      name: users
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/users/methods/users_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/users/methods/users_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/users/methods/users_List'
        update: []
      title: users
    virtual_m_f_a_devices:
      id: aws.iam.virtual_m_f_a_devices
      methods:
        virtual_m_f_a_devices_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateVirtualMFADevice&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        virtual_m_f_a_devices_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteVirtualMFADevice&Version=2010-05-08/get'
          response:
            openAPIDocKey: '200'
        virtual_m_f_a_devices_List:
          operation:
            $ref: '#/paths/~1?Action=ListVirtualMFADevices&Version=2010-05-08/get'
          response:
            mediaType: text/xml
            objectKey: /*/*/item
            openAPIDocKey: '200'
      name: virtual_m_f_a_devices
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/virtual_m_f_a_devices/methods/virtual_m_f_a_devices_Delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/virtual_m_f_a_devices/methods/virtual_m_f_a_devices_Create'
        select:
        - $ref: '#/components/x-stackQL-resources/virtual_m_f_a_devices/methods/virtual_m_f_a_devices_List'
        update: []
      title: virtual_m_f_a_devices
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/iam/
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: <fullname>Identity and Access Management</fullname> <p>Identity and
    Access Management (IAM) is a web service for securely controlling access to Amazon
    Web Services services. With IAM, you can centrally manage users, security credentials
    such as access keys, and permissions that control which Amazon Web Services resources
    users and applications can access. For more information about IAM, see <a href="http://aws.amazon.com/iam/">Identity
    and Access Management (IAM)</a> and the <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/">Identity
    and Access Management User Guide</a>.</p>
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS Identity and Access Management
  version: '2010-05-08'
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-logo:
    backgroundColor: '#FFFFFF'
    url: https://twitter.com/awscloud/profile_image?size=original
  x-origin:
  - contentType: application/json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/iam-2010-05-08.normal.json
    x-apisguru-driver: external
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: iam
openapi: 3.0.0
paths:
  /?Action=AddClientIDToOpenIDConnectProvider&Version=2010-05-08:
    get:
      description: <p>Adds a new client ID (also known as audience) to the list of
        client IDs already registered for the specified IAM OpenID Connect (OIDC)
        provider resource.</p> <p>This operation is idempotent; it does not fail or
        return an error if you add an existing client ID to the provider.</p>
      operationId: GET_AddClientIDToOpenIDConnectProvider
      parameters:
      - description: The Amazon Resource Name (ARN) of the IAM OpenID Connect (OIDC)
          provider resource to add the client ID to. You can get a list of OIDC provider
          ARNs by using the <a>ListOpenIDConnectProviders</a> operation.
        in: query
        name: OpenIDConnectProviderArn
        required: true
        schema:
          description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers
            for Amazon Web Services resources.</p> <p>For more information about ARNs,
            go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
            </p>
          maxLength: 2048
          minLength: 20
          type: string
      - description: The client ID (also known as audience) to add to the IAM OpenID
          Connect provider resource.
        in: query
        name: ClientID
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: AddClientIDToOpenIDConnectProvider
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Adds a new client ID (also known as audience) to the list of
        client IDs already registered for the specified IAM OpenID Connect (OIDC)
        provider resource.</p> <p>This operation is idempotent; it does not fail or
        return an error if you add an existing client ID to the provider.</p>
      operationId: POST_AddClientIDToOpenIDConnectProvider
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AddClientIDToOpenIDConnectProviderRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: AddClientIDToOpenIDConnectProvider
  /?Action=AddRoleToInstanceProfile&Version=2010-05-08:
    get:
      description: <p>Adds the specified IAM role to the specified instance profile.
        An instance profile can contain only one role, and this quota cannot be increased.
        You can remove the existing role and then add a different role to an instance
        profile. You must then wait for the change to appear across all of Amazon
        Web Services because of <a href="https://en.wikipedia.org/wiki/Eventual_consistency">eventual
        consistency</a>. To force the change, you must <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateIamInstanceProfile.html">disassociate
        the instance profile</a> and then <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateIamInstanceProfile.html">associate
        the instance profile</a>, or you can stop your instance and then restart it.</p>
        <note> <p>The caller of this operation must be granted the <code>PassRole</code>
        permission on the IAM role by a permissions policy.</p> </note> <p>For more
        information about roles, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html">Working
        with roles</a>. For more information about instance profiles, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html">About
        instance profiles</a>.</p>
      operationId: GET_AddRoleToInstanceProfile
      parameters:
      - description: '<p>The name of the instance profile to update.</p> <p>This parameter
          allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters consisting of upper and lowercase alphanumeric characters
          with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        in: query
        name: InstanceProfileName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: '<p>The name of the role to add.</p> <p>This parameter allows
          (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters consisting of upper and lowercase alphanumeric characters
          with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        in: query
        name: RoleName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
          description: EntityAlreadyExistsException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnmodifiableEntityException'
          description: UnmodifiableEntityException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: AddRoleToInstanceProfile
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Adds the specified IAM role to the specified instance profile.
        An instance profile can contain only one role, and this quota cannot be increased.
        You can remove the existing role and then add a different role to an instance
        profile. You must then wait for the change to appear across all of Amazon
        Web Services because of <a href="https://en.wikipedia.org/wiki/Eventual_consistency">eventual
        consistency</a>. To force the change, you must <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateIamInstanceProfile.html">disassociate
        the instance profile</a> and then <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateIamInstanceProfile.html">associate
        the instance profile</a>, or you can stop your instance and then restart it.</p>
        <note> <p>The caller of this operation must be granted the <code>PassRole</code>
        permission on the IAM role by a permissions policy.</p> </note> <p>For more
        information about roles, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html">Working
        with roles</a>. For more information about instance profiles, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html">About
        instance profiles</a>.</p>
      operationId: POST_AddRoleToInstanceProfile
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AddRoleToInstanceProfileRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
          description: EntityAlreadyExistsException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnmodifiableEntityException'
          description: UnmodifiableEntityException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: AddRoleToInstanceProfile
  /?Action=AddUserToGroup&Version=2010-05-08:
    get:
      description: Adds the specified user to the specified group.
      operationId: GET_AddUserToGroup
      parameters:
      - description: '<p>The name of the group to update.</p> <p>This parameter allows
          (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters consisting of upper and lowercase alphanumeric characters
          with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        in: query
        name: GroupName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: '<p>The name of the user to add.</p> <p>This parameter allows
          (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters consisting of upper and lowercase alphanumeric characters
          with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        in: query
        name: UserName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: AddUserToGroup
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: Adds the specified user to the specified group.
      operationId: POST_AddUserToGroup
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AddUserToGroupRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: AddUserToGroup
  /?Action=AttachGroupPolicy&Version=2010-05-08:
    get:
      description: <p>Attaches the specified managed policy to the specified IAM group.</p>
        <p>You use this operation to attach a managed policy to a group. To embed
        an inline policy in a group, use <a>PutGroupPolicy</a>.</p> <p>As a best practice,
        you can validate your IAM policies. To learn more, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_policy-validator.html">Validating
        IAM policies</a> in the <i>IAM User Guide</i>.</p> <p>For more information
        about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_AttachGroupPolicy
      parameters:
      - description: '<p>The name (friendly name, not ARN) of the group to attach
          the policy to.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: GroupName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: <p>The Amazon Resource Name (ARN) of the IAM policy you want
          to attach.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
          Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        in: query
        name: PolicyArn
        required: true
        schema:
          description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers
            for Amazon Web Services resources.</p> <p>For more information about ARNs,
            go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
            </p>
          maxLength: 2048
          minLength: 20
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PolicyNotAttachableException'
          description: PolicyNotAttachableException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: AttachGroupPolicy
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Attaches the specified managed policy to the specified IAM group.</p>
        <p>You use this operation to attach a managed policy to a group. To embed
        an inline policy in a group, use <a>PutGroupPolicy</a>.</p> <p>As a best practice,
        you can validate your IAM policies. To learn more, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_policy-validator.html">Validating
        IAM policies</a> in the <i>IAM User Guide</i>.</p> <p>For more information
        about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_AttachGroupPolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AttachGroupPolicyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PolicyNotAttachableException'
          description: PolicyNotAttachableException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: AttachGroupPolicy
  /?Action=AttachRolePolicy&Version=2010-05-08:
    get:
      description: <p>Attaches the specified managed policy to the specified IAM role.
        When you attach a managed policy to a role, the managed policy becomes part
        of the role's permission (access) policy.</p> <note> <p>You cannot use a managed
        policy as the role's trust policy. The role's trust policy is created at the
        same time as the role, using <a>CreateRole</a>. You can update a role's trust
        policy using <a>UpdateAssumeRolePolicy</a>.</p> </note> <p>Use this operation
        to attach a <i>managed</i> policy to a role. To embed an inline policy in
        a role, use <a>PutRolePolicy</a>. For more information about policies, see
        <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>As a
        best practice, you can validate your IAM policies. To learn more, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_policy-validator.html">Validating
        IAM policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_AttachRolePolicy
      parameters:
      - description: '<p>The name (friendly name, not ARN) of the role to attach the
          policy to.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: RoleName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: <p>The Amazon Resource Name (ARN) of the IAM policy you want
          to attach.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
          Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        in: query
        name: PolicyArn
        required: true
        schema:
          description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers
            for Amazon Web Services resources.</p> <p>For more information about ARNs,
            go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
            </p>
          maxLength: 2048
          minLength: 20
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnmodifiableEntityException'
          description: UnmodifiableEntityException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PolicyNotAttachableException'
          description: PolicyNotAttachableException
        '485':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: AttachRolePolicy
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Attaches the specified managed policy to the specified IAM role.
        When you attach a managed policy to a role, the managed policy becomes part
        of the role's permission (access) policy.</p> <note> <p>You cannot use a managed
        policy as the role's trust policy. The role's trust policy is created at the
        same time as the role, using <a>CreateRole</a>. You can update a role's trust
        policy using <a>UpdateAssumeRolePolicy</a>.</p> </note> <p>Use this operation
        to attach a <i>managed</i> policy to a role. To embed an inline policy in
        a role, use <a>PutRolePolicy</a>. For more information about policies, see
        <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>As a
        best practice, you can validate your IAM policies. To learn more, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_policy-validator.html">Validating
        IAM policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_AttachRolePolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AttachRolePolicyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnmodifiableEntityException'
          description: UnmodifiableEntityException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PolicyNotAttachableException'
          description: PolicyNotAttachableException
        '485':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: AttachRolePolicy
  /?Action=AttachUserPolicy&Version=2010-05-08:
    get:
      description: <p>Attaches the specified managed policy to the specified user.</p>
        <p>You use this operation to attach a <i>managed</i> policy to a user. To
        embed an inline policy in a user, use <a>PutUserPolicy</a>.</p> <p>As a best
        practice, you can validate your IAM policies. To learn more, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_policy-validator.html">Validating
        IAM policies</a> in the <i>IAM User Guide</i>.</p> <p>For more information
        about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_AttachUserPolicy
      parameters:
      - description: '<p>The name (friendly name, not ARN) of the IAM user to attach
          the policy to.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: UserName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: <p>The Amazon Resource Name (ARN) of the IAM policy you want
          to attach.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
          Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        in: query
        name: PolicyArn
        required: true
        schema:
          description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers
            for Amazon Web Services resources.</p> <p>For more information about ARNs,
            go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
            </p>
          maxLength: 2048
          minLength: 20
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PolicyNotAttachableException'
          description: PolicyNotAttachableException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: AttachUserPolicy
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Attaches the specified managed policy to the specified user.</p>
        <p>You use this operation to attach a <i>managed</i> policy to a user. To
        embed an inline policy in a user, use <a>PutUserPolicy</a>.</p> <p>As a best
        practice, you can validate your IAM policies. To learn more, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_policy-validator.html">Validating
        IAM policies</a> in the <i>IAM User Guide</i>.</p> <p>For more information
        about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_AttachUserPolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AttachUserPolicyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PolicyNotAttachableException'
          description: PolicyNotAttachableException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: AttachUserPolicy
  /?Action=ChangePassword&Version=2010-05-08:
    get:
      description: <p>Changes the password of the IAM user who is calling this operation.
        This operation can be performed using the CLI, the Amazon Web Services API,
        or the <b>My Security Credentials</b> page in the Amazon Web Services Management
        Console. The Amazon Web Services account root user password is not affected
        by this operation.</p> <p>Use <a>UpdateLoginProfile</a> to use the CLI, the
        Amazon Web Services API, or the <b>Users</b> page in the IAM console to change
        the password for any IAM user. For more information about modifying passwords,
        see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingLogins.html">Managing
        passwords</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_ChangePassword
      parameters:
      - description: The IAM user's current password.
        in: query
        name: OldPassword
        required: true
        schema:
          format: password
          maxLength: 128
          minLength: 1
          pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
          type: string
      - description: <p>The new password. The new password must conform to the Amazon
          Web Services account's password policy, if one exists.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> that is used to validate this parameter is a string of characters.
          That string can include almost any printable ASCII character from the space
          (<code>\u0020</code>) through the end of the ASCII character range (<code>\u00FF</code>).
          You can also include the tab (<code>\u0009</code>), line feed (<code>\u000A</code>),
          and carriage return (<code>\u000D</code>) characters. Any of these characters
          are valid in a password. However, many tools, such as the Amazon Web Services
          Management Console, might restrict the ability to type certain characters
          because they have special meaning within that tool.</p>
        in: query
        name: NewPassword
        required: true
        schema:
          format: password
          maxLength: 128
          minLength: 1
          pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidUserTypeException'
          description: InvalidUserTypeException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityTemporarilyUnmodifiableException'
          description: EntityTemporarilyUnmodifiableException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PasswordPolicyViolationException'
          description: PasswordPolicyViolationException
        '485':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ChangePassword
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Changes the password of the IAM user who is calling this operation.
        This operation can be performed using the CLI, the Amazon Web Services API,
        or the <b>My Security Credentials</b> page in the Amazon Web Services Management
        Console. The Amazon Web Services account root user password is not affected
        by this operation.</p> <p>Use <a>UpdateLoginProfile</a> to use the CLI, the
        Amazon Web Services API, or the <b>Users</b> page in the IAM console to change
        the password for any IAM user. For more information about modifying passwords,
        see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingLogins.html">Managing
        passwords</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_ChangePassword
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidUserTypeException'
          description: InvalidUserTypeException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityTemporarilyUnmodifiableException'
          description: EntityTemporarilyUnmodifiableException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PasswordPolicyViolationException'
          description: PasswordPolicyViolationException
        '485':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ChangePassword
  /?Action=CreateAccessKey&Version=2010-05-08:
    get:
      description: <p> Creates a new Amazon Web Services secret access key and corresponding
        Amazon Web Services access key ID for the specified user. The default status
        for new keys is <code>Active</code>.</p> <p>If you do not specify a user name,
        IAM determines the user name implicitly based on the Amazon Web Services access
        key ID signing the request. This operation works for access keys under the
        Amazon Web Services account. Consequently, you can use this operation to manage
        Amazon Web Services account root user credentials. This is true even if the
        Amazon Web Services account has no associated users.</p> <p> For information
        about quotas on the number of keys you can create, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html">IAM
        and STS quotas</a> in the <i>IAM User Guide</i>.</p> <important> <p>To ensure
        the security of your Amazon Web Services account, the secret access key is
        accessible only during key and user creation. You must save the key (for example,
        in a text file) if you want to be able to access it again. If a secret key
        is lost, you can delete the access keys for the associated user and then create
        new keys.</p> </important>
      operationId: GET_CreateAccessKey
      parameters:
      - description: '<p>The name of the IAM user that the new key will belong to.</p>
          <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: UserName
        required: false
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateAccessKeyResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: CreateAccessKey
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p> Creates a new Amazon Web Services secret access key and corresponding
        Amazon Web Services access key ID for the specified user. The default status
        for new keys is <code>Active</code>.</p> <p>If you do not specify a user name,
        IAM determines the user name implicitly based on the Amazon Web Services access
        key ID signing the request. This operation works for access keys under the
        Amazon Web Services account. Consequently, you can use this operation to manage
        Amazon Web Services account root user credentials. This is true even if the
        Amazon Web Services account has no associated users.</p> <p> For information
        about quotas on the number of keys you can create, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html">IAM
        and STS quotas</a> in the <i>IAM User Guide</i>.</p> <important> <p>To ensure
        the security of your Amazon Web Services account, the secret access key is
        accessible only during key and user creation. You must save the key (for example,
        in a text file) if you want to be able to access it again. If a secret key
        is lost, you can delete the access keys for the associated user and then create
        new keys.</p> </important>
      operationId: POST_CreateAccessKey
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateAccessKeyRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateAccessKeyResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: CreateAccessKey
  /?Action=CreateAccountAlias&Version=2010-05-08:
    get:
      description: Creates an alias for your Amazon Web Services account. For information
        about using an Amazon Web Services account alias, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/AccountAlias.html">Using
        an alias for your Amazon Web Services account ID</a> in the <i>IAM User Guide</i>.
      operationId: GET_CreateAccountAlias
      parameters:
      - description: <p>The account alias to create.</p> <p>This parameter allows
          (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters consisting of lowercase letters, digits, and dashes.
          You cannot start or finish with a dash, nor can you have two dashes in a
          row.</p>
        in: query
        name: AccountAlias
        required: true
        schema:
          maxLength: 63
          minLength: 3
          pattern: ^[a-z0-9](([a-z0-9]|-(?!-))*[a-z0-9])?$
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
          description: EntityAlreadyExistsException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: CreateAccountAlias
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: Creates an alias for your Amazon Web Services account. For information
        about using an Amazon Web Services account alias, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/AccountAlias.html">Using
        an alias for your Amazon Web Services account ID</a> in the <i>IAM User Guide</i>.
      operationId: POST_CreateAccountAlias
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateAccountAliasRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
          description: EntityAlreadyExistsException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: CreateAccountAlias
  /?Action=CreateGroup&Version=2010-05-08:
    get:
      description: <p>Creates a new group.</p> <p> For information about the number
        of groups you can create, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html">IAM
        and STS quotas</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_CreateGroup
      parameters:
      - description: <p> The path to the group. For more information about paths,
          see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
          identifiers</a> in the <i>IAM User Guide</i>.</p> <p>This parameter is optional.
          If it is not included, it defaults to a slash (/).</p> <p>This parameter
          allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters consisting of either a forward slash (/) by itself
          or a string that must begin and end with forward slashes. In addition, it
          can contain any ASCII character from the ! (<code>\u0021</code>) through
          the DEL character (<code>\u007F</code>), including most punctuation characters,
          digits, and upper and lowercased letters.</p>
        in: query
        name: Path
        required: false
        schema:
          maxLength: 512
          minLength: 1
          pattern: (\u002F)|(\u002F[\u0021-\u007F]+\u002F)
          type: string
      - description: <p>The name of the group to create. Do not include the path in
          this value.</p> <p>IAM user, group, role, and policy names must be unique
          within the account. Names are not distinguished by case. For example, you
          cannot create resources named both "MyResource" and "myresource".</p>
        in: query
        name: GroupName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateGroupResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
          description: EntityAlreadyExistsException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: CreateGroup
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Creates a new group.</p> <p> For information about the number
        of groups you can create, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html">IAM
        and STS quotas</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_CreateGroup
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateGroupRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateGroupResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
          description: EntityAlreadyExistsException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: CreateGroup
  /?Action=CreateInstanceProfile&Version=2010-05-08:
    get:
      description: <p> Creates a new instance profile. For information about instance
        profiles, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2.html">Using
        roles for applications on Amazon EC2</a> in the <i>IAM User Guide</i>, and
        <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html#ec2-instance-profile">Instance
        profiles</a> in the <i>Amazon EC2 User Guide</i>.</p> <p> For information
        about the number of instance profiles you can create, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html">IAM
        object quotas</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_CreateInstanceProfile
      parameters:
      - description: '<p>The name of the instance profile to create.</p> <p>This parameter
          allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters consisting of upper and lowercase alphanumeric characters
          with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        in: query
        name: InstanceProfileName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: <p> The path to the instance profile. For more information about
          paths, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
          Identifiers</a> in the <i>IAM User Guide</i>.</p> <p>This parameter is optional.
          If it is not included, it defaults to a slash (/).</p> <p>This parameter
          allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters consisting of either a forward slash (/) by itself
          or a string that must begin and end with forward slashes. In addition, it
          can contain any ASCII character from the ! (<code>\u0021</code>) through
          the DEL character (<code>\u007F</code>), including most punctuation characters,
          digits, and upper and lowercased letters.</p>
        in: query
        name: Path
        required: false
        schema:
          maxLength: 512
          minLength: 1
          pattern: (\u002F)|(\u002F[\u0021-\u007F]+\u002F)
          type: string
      - description: <p>A list of tags that you want to attach to the newly created
          IAM instance profile. Each tag consists of a key name and an associated
          value. For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
          IAM resources</a> in the <i>IAM User Guide</i>.</p> <note> <p>If any one
          of the tags is invalid or if you exceed the allowed maximum number of tags,
          then the entire request fails and the resource is not created.</p> </note>
        in: query
        name: Tags
        required: false
        schema:
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 50
          type: array
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateInstanceProfileResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
          description: EntityAlreadyExistsException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: CreateInstanceProfile
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p> Creates a new instance profile. For information about instance
        profiles, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2.html">Using
        roles for applications on Amazon EC2</a> in the <i>IAM User Guide</i>, and
        <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html#ec2-instance-profile">Instance
        profiles</a> in the <i>Amazon EC2 User Guide</i>.</p> <p> For information
        about the number of instance profiles you can create, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html">IAM
        object quotas</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_CreateInstanceProfile
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateInstanceProfileRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateInstanceProfileResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
          description: EntityAlreadyExistsException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: CreateInstanceProfile
  /?Action=CreateLoginProfile&Version=2010-05-08:
    get:
      description: <p>Creates a password for the specified IAM user. A password allows
        an IAM user to access Amazon Web Services services through the Amazon Web
        Services Management Console.</p> <p>You can use the CLI, the Amazon Web Services
        API, or the <b>Users</b> page in the IAM console to create a password for
        any IAM user. Use <a>ChangePassword</a> to update your own existing password
        in the <b>My Security Credentials</b> page in the Amazon Web Services Management
        Console.</p> <p>For more information about managing passwords, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingLogins.html">Managing
        passwords</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_CreateLoginProfile
      parameters:
      - description: '<p>The name of the IAM user to create a password for. The user
          must already exist.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: UserName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: <p>The new password for the user.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> that is used to validate this parameter is a string of characters.
          That string can include almost any printable ASCII character from the space
          (<code>\u0020</code>) through the end of the ASCII character range (<code>\u00FF</code>).
          You can also include the tab (<code>\u0009</code>), line feed (<code>\u000A</code>),
          and carriage return (<code>\u000D</code>) characters. Any of these characters
          are valid in a password. However, many tools, such as the Amazon Web Services
          Management Console, might restrict the ability to type certain characters
          because they have special meaning within that tool.</p>
        in: query
        name: Password
        required: true
        schema:
          format: password
          maxLength: 128
          minLength: 1
          pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
          type: string
      - description: Specifies whether the user is required to set a new password
          on next sign-in.
        in: query
        name: PasswordResetRequired
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateLoginProfileResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
          description: EntityAlreadyExistsException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PasswordPolicyViolationException'
          description: PasswordPolicyViolationException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: CreateLoginProfile
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Creates a password for the specified IAM user. A password allows
        an IAM user to access Amazon Web Services services through the Amazon Web
        Services Management Console.</p> <p>You can use the CLI, the Amazon Web Services
        API, or the <b>Users</b> page in the IAM console to create a password for
        any IAM user. Use <a>ChangePassword</a> to update your own existing password
        in the <b>My Security Credentials</b> page in the Amazon Web Services Management
        Console.</p> <p>For more information about managing passwords, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingLogins.html">Managing
        passwords</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_CreateLoginProfile
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateLoginProfileRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateLoginProfileResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
          description: EntityAlreadyExistsException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PasswordPolicyViolationException'
          description: PasswordPolicyViolationException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: CreateLoginProfile
  /?Action=CreateOpenIDConnectProvider&Version=2010-05-08:
    get:
      description: <p>Creates an IAM entity to describe an identity provider (IdP)
        that supports <a href="http://openid.net/connect/">OpenID Connect (OIDC)</a>.</p>
        <p>The OIDC provider that you create with this operation can be used as a
        principal in a role's trust policy. Such a policy establishes a trust relationship
        between Amazon Web Services and the OIDC provider.</p> <p>If you are using
        an OIDC identity provider from Google, Facebook, or Amazon Cognito, you don't
        need to create a separate IAM identity provider. These OIDC identity providers
        are already built-in to Amazon Web Services and are available for your use.
        Instead, you can move directly to creating new roles using your identity provider.
        To learn more, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-idp_oidc.html">Creating
        a role for web identity or OpenID connect federation</a> in the <i>IAM User
        Guide</i>.</p> <p>When you create the IAM OIDC provider, you specify the following:</p>
        <ul> <li> <p>The URL of the OIDC identity provider (IdP) to trust</p> </li>
        <li> <p>A list of client IDs (also known as audiences) that identify the application
        or applications allowed to authenticate using the OIDC provider</p> </li>
        <li> <p>A list of thumbprints of one or more server certificates that the
        IdP uses</p> </li> </ul> <p>You get all of this information from the OIDC
        IdP you want to use to access Amazon Web Services.</p> <note> <p>Amazon Web
        Services secures communication with some OIDC identity providers (IdPs) through
        our library of trusted certificate authorities (CAs) instead of using a certificate
        thumbprint to verify your IdP server certificate. These OIDC IdPs include
        Google, and those that use an Amazon S3 bucket to host a JSON Web Key Set
        (JWKS) endpoint. In these cases, your legacy thumbprint remains in your configuration,
        but is no longer used for validation.</p> </note> <note> <p>The trust for
        the OIDC provider is derived from the IAM provider that this operation creates.
        Therefore, it is best to limit access to the <a>CreateOpenIDConnectProvider</a>
        operation to highly privileged users.</p> </note>
      operationId: GET_CreateOpenIDConnectProvider
      parameters:
      - description: <p>The URL of the identity provider. The URL must begin with
          <code>https://</code> and should correspond to the <code>iss</code> claim
          in the provider's OpenID Connect ID tokens. Per the OIDC standard, path
          components are allowed but query parameters are not. Typically the URL consists
          of only a hostname, like <code>https://server.example.org</code> or <code>https://example.com</code>.
          The URL should not contain a port number. </p> <p>You cannot register the
          same provider multiple times in a single Amazon Web Services account. If
          you try to submit a URL that has already been used for an OpenID Connect
          provider in the Amazon Web Services account, you will get an error.</p>
        in: query
        name: Url
        required: true
        schema:
          description: Contains a URL that specifies the endpoint for an OpenID Connect
            provider.
          maxLength: 255
          minLength: 1
          type: string
      - description: <p>Provides a list of client IDs, also known as audiences. When
          a mobile or web app registers with an OpenID Connect provider, they establish
          a value that identifies the application. This is the value that's sent as
          the <code>client_id</code> parameter on OAuth requests.</p> <p>You can register
          multiple client IDs with the same provider. For example, you might have
          multiple applications that use the same OIDC provider. You cannot register
          more than 100 client IDs with a single IAM OIDC provider.</p> <p>There is
          no defined format for a client ID. The <code>CreateOpenIDConnectProviderRequest</code>
          operation accepts client IDs up to 255 characters long.</p>
        in: query
        name: ClientIDList
        required: false
        schema:
          items:
            $ref: '#/components/schemas/clientIDType'
          type: array
      - description: <p>A list of server certificate thumbprints for the OpenID Connect
          (OIDC) identity provider's server certificates. Typically this list includes
          only one entry. However, IAM lets you have up to five thumbprints for an
          OIDC provider. This lets you maintain multiple thumbprints if the identity
          provider is rotating certificates.</p> <p>The server certificate thumbprint
          is the hex-encoded SHA-1 hash value of the X.509 certificate used by the
          domain where the OpenID Connect provider makes its keys available. It is
          always a 40-character string.</p> <p>You must provide at least one thumbprint
          when creating an IAM OIDC provider. For example, assume that the OIDC provider
          is <code>server.example.com</code> and the provider stores its keys at https://keys.server.example.com/openid-connect.
          In that case, the thumbprint string would be the hex-encoded SHA-1 hash
          value of the certificate used by <code>https://keys.server.example.com.</code>
          </p> <p>For more information about obtaining the OIDC provider thumbprint,
          see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/identity-providers-oidc-obtain-thumbprint.html">Obtaining
          the thumbprint for an OpenID Connect provider</a> in the <i>IAM User Guide</i>.</p>
        in: query
        name: ThumbprintList
        required: true
        schema:
          description: Contains a list of thumbprints of identity provider server
            certificates.
          items:
            $ref: '#/components/schemas/thumbprintType'
          type: array
      - description: <p>A list of tags that you want to attach to the new IAM OpenID
          Connect (OIDC) provider. Each tag consists of a key name and an associated
          value. For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
          IAM resources</a> in the <i>IAM User Guide</i>.</p> <note> <p>If any one
          of the tags is invalid or if you exceed the allowed maximum number of tags,
          then the entire request fails and the resource is not created.</p> </note>
        in: query
        name: Tags
        required: false
        schema:
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 50
          type: array
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateOpenIDConnectProviderResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
          description: EntityAlreadyExistsException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: CreateOpenIDConnectProvider
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Creates an IAM entity to describe an identity provider (IdP)
        that supports <a href="http://openid.net/connect/">OpenID Connect (OIDC)</a>.</p>
        <p>The OIDC provider that you create with this operation can be used as a
        principal in a role's trust policy. Such a policy establishes a trust relationship
        between Amazon Web Services and the OIDC provider.</p> <p>If you are using
        an OIDC identity provider from Google, Facebook, or Amazon Cognito, you don't
        need to create a separate IAM identity provider. These OIDC identity providers
        are already built-in to Amazon Web Services and are available for your use.
        Instead, you can move directly to creating new roles using your identity provider.
        To learn more, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-idp_oidc.html">Creating
        a role for web identity or OpenID connect federation</a> in the <i>IAM User
        Guide</i>.</p> <p>When you create the IAM OIDC provider, you specify the following:</p>
        <ul> <li> <p>The URL of the OIDC identity provider (IdP) to trust</p> </li>
        <li> <p>A list of client IDs (also known as audiences) that identify the application
        or applications allowed to authenticate using the OIDC provider</p> </li>
        <li> <p>A list of thumbprints of one or more server certificates that the
        IdP uses</p> </li> </ul> <p>You get all of this information from the OIDC
        IdP you want to use to access Amazon Web Services.</p> <note> <p>Amazon Web
        Services secures communication with some OIDC identity providers (IdPs) through
        our library of trusted certificate authorities (CAs) instead of using a certificate
        thumbprint to verify your IdP server certificate. These OIDC IdPs include
        Google, and those that use an Amazon S3 bucket to host a JSON Web Key Set
        (JWKS) endpoint. In these cases, your legacy thumbprint remains in your configuration,
        but is no longer used for validation.</p> </note> <note> <p>The trust for
        the OIDC provider is derived from the IAM provider that this operation creates.
        Therefore, it is best to limit access to the <a>CreateOpenIDConnectProvider</a>
        operation to highly privileged users.</p> </note>
      operationId: POST_CreateOpenIDConnectProvider
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateOpenIDConnectProviderRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateOpenIDConnectProviderResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
          description: EntityAlreadyExistsException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: CreateOpenIDConnectProvider
  /?Action=CreatePolicy&Version=2010-05-08:
    get:
      description: <p>Creates a new managed policy for your Amazon Web Services account.</p>
        <p>This operation creates a policy version with a version identifier of <code>v1</code>
        and sets v1 as the policy's default version. For more information about policy
        versions, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning
        for managed policies</a> in the <i>IAM User Guide</i>.</p> <p>As a best practice,
        you can validate your IAM policies. To learn more, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_policy-validator.html">Validating
        IAM policies</a> in the <i>IAM User Guide</i>.</p> <p>For more information
        about managed policies in general, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_CreatePolicy
      parameters:
      - description: <p>The friendly name of the policy.</p> <p>IAM user, group, role,
          and policy names must be unique within the account. Names are not distinguished
          by case. For example, you cannot create resources named both "MyResource"
          and "myresource".</p>
        in: query
        name: PolicyName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: <p>The path for the policy.</p> <p>For more information about
          paths, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
          identifiers</a> in the <i>IAM User Guide</i>.</p> <p>This parameter is optional.
          If it is not included, it defaults to a slash (/).</p> <p>This parameter
          allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters consisting of either a forward slash (/) by itself
          or a string that must begin and end with forward slashes. In addition, it
          can contain any ASCII character from the ! (<code>\u0021</code>) through
          the DEL character (<code>\u007F</code>), including most punctuation characters,
          digits, and upper and lowercased letters.</p> <note> <p>You cannot use an
          asterisk (*) in the path name.</p> </note>
        in: query
        name: Path
        required: false
        schema:
          maxLength: 512
          minLength: 1
          pattern: ((/[A-Za-z0-9\.,\+@=_-]+)*)/
          type: string
      - description: <p>The JSON policy document that you want to use as the content
          for the new policy.</p> <p>You must provide policies in JSON format in IAM.
          However, for CloudFormation templates formatted in YAML, you can provide
          the policy in JSON or YAML format. CloudFormation always converts a YAML
          policy to JSON format before submitting it to IAM.</p> <p>The maximum length
          of the policy document that you can pass in this operation, including whitespace,
          is listed below. To view the maximum character counts of a managed policy
          with no whitespaces, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html#reference_iam-quotas-entity-length">IAM
          and STS character quotas</a>.</p> <p>To learn more about JSON policy grammar,
          see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_grammar.html">Grammar
          of the IAM JSON policy language</a> in the <i>IAM User Guide</i>. </p> <p>The
          <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used to validate
          this parameter is a string of characters consisting of the following:</p>
          <ul> <li> <p>Any printable ASCII character ranging from the space character
          (<code>\u0020</code>) through the end of the ASCII character range</p> </li>
          <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement
          character set (through <code>\u00FF</code>)</p> </li> <li> <p>The special
          characters tab (<code>\u0009</code>), line feed (<code>\u000A</code>), and
          carriage return (<code>\u000D</code>)</p> </li> </ul>
        in: query
        name: PolicyDocument
        required: true
        schema:
          maxLength: 131072
          minLength: 1
          pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
          type: string
      - description: <p>A friendly description of the policy.</p> <p>Typically used
          to store information about the permissions defined in the policy. For example,
          "Grants access to production DynamoDB tables."</p> <p>The policy description
          is immutable. After a value is assigned, it cannot be changed.</p>
        in: query
        name: Description
        required: false
        schema:
          maxLength: 1000
          type: string
      - description: <p>A list of tags that you want to attach to the new IAM customer
          managed policy. Each tag consists of a key name and an associated value.
          For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
          IAM resources</a> in the <i>IAM User Guide</i>.</p> <note> <p>If any one
          of the tags is invalid or if you exceed the allowed maximum number of tags,
          then the entire request fails and the resource is not created.</p> </note>
        in: query
        name: Tags
        required: false
        schema:
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 50
          type: array
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreatePolicyResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
          description: EntityAlreadyExistsException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MalformedPolicyDocumentException'
          description: MalformedPolicyDocumentException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '485':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: CreatePolicy
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Creates a new managed policy for your Amazon Web Services account.</p>
        <p>This operation creates a policy version with a version identifier of <code>v1</code>
        and sets v1 as the policy's default version. For more information about policy
        versions, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning
        for managed policies</a> in the <i>IAM User Guide</i>.</p> <p>As a best practice,
        you can validate your IAM policies. To learn more, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_policy-validator.html">Validating
        IAM policies</a> in the <i>IAM User Guide</i>.</p> <p>For more information
        about managed policies in general, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_CreatePolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreatePolicyRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreatePolicyResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
          description: EntityAlreadyExistsException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MalformedPolicyDocumentException'
          description: MalformedPolicyDocumentException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '485':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: CreatePolicy
  /?Action=CreatePolicyVersion&Version=2010-05-08:
    get:
      description: <p>Creates a new version of the specified managed policy. To update
        a managed policy, you create a new policy version. A managed policy can have
        up to five versions. If the policy has five versions, you must delete an existing
        version using <a>DeletePolicyVersion</a> before you create a new version.</p>
        <p>Optionally, you can set the new version as the policy's default version.
        The default version is the version that is in effect for the IAM users, groups,
        and roles to which the policy is attached.</p> <p>For more information about
        managed policy versions, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning
        for managed policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_CreatePolicyVersion
      parameters:
      - description: <p>The Amazon Resource Name (ARN) of the IAM policy to which
          you want to add a new version.</p> <p>For more information about ARNs, see
          <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
          Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        in: query
        name: PolicyArn
        required: true
        schema:
          description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers
            for Amazon Web Services resources.</p> <p>For more information about ARNs,
            go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
            </p>
          maxLength: 2048
          minLength: 20
          type: string
      - description: <p>The JSON policy document that you want to use as the content
          for this new version of the policy.</p> <p>You must provide policies in
          JSON format in IAM. However, for CloudFormation templates formatted in YAML,
          you can provide the policy in JSON or YAML format. CloudFormation always
          converts a YAML policy to JSON format before submitting it to IAM.</p> <p>The
          maximum length of the policy document that you can pass in this operation,
          including whitespace, is listed below. To view the maximum character counts
          of a managed policy with no whitespaces, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html#reference_iam-quotas-entity-length">IAM
          and STS character quotas</a>.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> used to validate this parameter is a string of characters consisting
          of the following:</p> <ul> <li> <p>Any printable ASCII character ranging
          from the space character (<code>\u0020</code>) through the end of the ASCII
          character range</p> </li> <li> <p>The printable characters in the Basic
          Latin and Latin-1 Supplement character set (through <code>\u00FF</code>)</p>
          </li> <li> <p>The special characters tab (<code>\u0009</code>), line feed
          (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p> </li>
          </ul>
        in: query
        name: PolicyDocument
        required: true
        schema:
          maxLength: 131072
          minLength: 1
          pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
          type: string
      - description: <p>Specifies whether to set this version as the policy's default
          version.</p> <p>When this parameter is <code>true</code>, the new policy
          version becomes the operative version. That is, it becomes the version that
          is in effect for the IAM users, groups, and roles that the policy is attached
          to.</p> <p>For more information about managed policy versions, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning
          for managed policies</a> in the <i>IAM User Guide</i>.</p>
        in: query
        name: SetAsDefault
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreatePolicyVersionResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MalformedPolicyDocumentException'
          description: MalformedPolicyDocumentException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: CreatePolicyVersion
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Creates a new version of the specified managed policy. To update
        a managed policy, you create a new policy version. A managed policy can have
        up to five versions. If the policy has five versions, you must delete an existing
        version using <a>DeletePolicyVersion</a> before you create a new version.</p>
        <p>Optionally, you can set the new version as the policy's default version.
        The default version is the version that is in effect for the IAM users, groups,
        and roles to which the policy is attached.</p> <p>For more information about
        managed policy versions, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning
        for managed policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_CreatePolicyVersion
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreatePolicyVersionRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreatePolicyVersionResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MalformedPolicyDocumentException'
          description: MalformedPolicyDocumentException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: CreatePolicyVersion
  /?Action=CreateRole&Version=2010-05-08:
    get:
      description: Creates a new role for your Amazon Web Services account. For more
        information about roles, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html">IAM
        roles</a>. For information about quotas for role names and the number of roles
        you can create, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html">IAM
        and STS quotas</a> in the <i>IAM User Guide</i>.
      operationId: GET_CreateRole
      parameters:
      - description: <p> The path to the role. For more information about paths, see
          <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
          Identifiers</a> in the <i>IAM User Guide</i>.</p> <p>This parameter is optional.
          If it is not included, it defaults to a slash (/).</p> <p>This parameter
          allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters consisting of either a forward slash (/) by itself
          or a string that must begin and end with forward slashes. In addition, it
          can contain any ASCII character from the ! (<code>\u0021</code>) through
          the DEL character (<code>\u007F</code>), including most punctuation characters,
          digits, and upper and lowercased letters.</p>
        in: query
        name: Path
        required: false
        schema:
          maxLength: 512
          minLength: 1
          pattern: (\u002F)|(\u002F[\u0021-\u007F]+\u002F)
          type: string
      - description: <p>The name of the role to create.</p> <p>IAM user, group, role,
          and policy names must be unique within the account. Names are not distinguished
          by case. For example, you cannot create resources named both "MyResource"
          and "myresource".</p>
        in: query
        name: RoleName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: <p>The trust relationship policy document that grants an entity
          permission to assume the role.</p> <p>In IAM, you must provide a JSON policy
          that has been converted to a string. However, for CloudFormation templates
          formatted in YAML, you can provide the policy in JSON or YAML format. CloudFormation
          always converts a YAML policy to JSON format before submitting it to IAM.</p>
          <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used
          to validate this parameter is a string of characters consisting of the following:</p>
          <ul> <li> <p>Any printable ASCII character ranging from the space character
          (<code>\u0020</code>) through the end of the ASCII character range</p> </li>
          <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement
          character set (through <code>\u00FF</code>)</p> </li> <li> <p>The special
          characters tab (<code>\u0009</code>), line feed (<code>\u000A</code>), and
          carriage return (<code>\u000D</code>)</p> </li> </ul> <p> Upon success,
          the response includes the same trust policy in JSON format.</p>
        in: query
        name: AssumeRolePolicyDocument
        required: true
        schema:
          maxLength: 131072
          minLength: 1
          pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
          type: string
      - description: A description of the role.
        in: query
        name: Description
        required: false
        schema:
          maxLength: 1000
          pattern: '[\p{L}\p{M}\p{Z}\p{S}\p{N}\p{P}]*'
          type: string
      - description: <p>The maximum session duration (in seconds) that you want to
          set for the specified role. If you do not specify a value for this setting,
          the default maximum of one hour is applied. This setting can have a value
          from 1 hour to 12 hours.</p> <p>Anyone who assumes the role from the or
          API can use the <code>DurationSeconds</code> API parameter or the <code>duration-seconds</code>
          CLI parameter to request a longer session. The <code>MaxSessionDuration</code>
          setting determines the maximum duration that can be requested using the
          <code>DurationSeconds</code> parameter. If users don't specify a value for
          the <code>DurationSeconds</code> parameter, their security credentials are
          valid for one hour by default. This applies when you use the <code>AssumeRole*</code>
          API operations or the <code>assume-role*</code> CLI operations but does
          not apply when you use those operations to create a console URL. For more
          information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html">Using
          IAM roles</a> in the <i>IAM User Guide</i>.</p>
        in: query
        name: MaxSessionDuration
        required: false
        schema:
          maximum: 43200
          minimum: 3600
          type: integer
      - description: The ARN of the policy that is used to set the permissions boundary
          for the role.
        in: query
        name: PermissionsBoundary
        required: false
        schema:
          description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers
            for Amazon Web Services resources.</p> <p>For more information about ARNs,
            go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
            </p>
          maxLength: 2048
          minLength: 20
          type: string
      - description: <p>A list of tags that you want to attach to the new role. Each
          tag consists of a key name and an associated value. For more information
          about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
          IAM resources</a> in the <i>IAM User Guide</i>.</p> <note> <p>If any one
          of the tags is invalid or if you exceed the allowed maximum number of tags,
          then the entire request fails and the resource is not created.</p> </note>
        in: query
        name: Tags
        required: false
        schema:
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 50
          type: array
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateRoleResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
          description: EntityAlreadyExistsException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MalformedPolicyDocumentException'
          description: MalformedPolicyDocumentException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '485':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: CreateRole
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: Creates a new role for your Amazon Web Services account. For more
        information about roles, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html">IAM
        roles</a>. For information about quotas for role names and the number of roles
        you can create, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html">IAM
        and STS quotas</a> in the <i>IAM User Guide</i>.
      operationId: POST_CreateRole
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateRoleRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateRoleResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
          description: EntityAlreadyExistsException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MalformedPolicyDocumentException'
          description: MalformedPolicyDocumentException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '485':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: CreateRole
  /?Action=CreateSAMLProvider&Version=2010-05-08:
    get:
      description: <p>Creates an IAM resource that describes an identity provider
        (IdP) that supports SAML 2.0.</p> <p>The SAML provider resource that you create
        with this operation can be used as a principal in an IAM role's trust policy.
        Such a policy can enable federated users who sign in using the SAML IdP to
        assume the role. You can create an IAM role that supports Web-based single
        sign-on (SSO) to the Amazon Web Services Management Console or one that supports
        API access to Amazon Web Services.</p> <p>When you create the SAML provider
        resource, you upload a SAML metadata document that you get from your IdP.
        That document includes the issuer's name, expiration information, and keys
        that can be used to validate the SAML authentication response (assertions)
        that the IdP sends. You must generate the metadata document using the identity
        management software that is used as your organization's IdP.</p> <note> <p>
        This operation requires <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature
        Version 4</a>.</p> </note> <p> For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_enable-console-saml.html">Enabling
        SAML 2.0 federated users to access the Amazon Web Services Management Console</a>
        and <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_saml.html">About
        SAML 2.0-based federation</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_CreateSAMLProvider
      parameters:
      - description: <p>An XML document generated by an identity provider (IdP) that
          supports SAML 2.0. The document includes the issuer's name, expiration information,
          and keys that can be used to validate the SAML authentication response (assertions)
          that are received from the IdP. You must generate the metadata document
          using the identity management software that is used as your organization's
          IdP.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_saml.html">About
          SAML 2.0-based federation</a> in the <i>IAM User Guide</i> </p>
        in: query
        name: SAMLMetadataDocument
        required: true
        schema:
          maxLength: 10000000
          minLength: 1000
          type: string
      - description: '<p>The name of the provider to create.</p> <p>This parameter
          allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters consisting of upper and lowercase alphanumeric characters
          with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        in: query
        name: Name
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w._-]+'
          type: string
      - description: <p>A list of tags that you want to attach to the new IAM SAML
          provider. Each tag consists of a key name and an associated value. For more
          information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
          IAM resources</a> in the <i>IAM User Guide</i>.</p> <note> <p>If any one
          of the tags is invalid or if you exceed the allowed maximum number of tags,
          then the entire request fails and the resource is not created.</p> </note>
        in: query
        name: Tags
        required: false
        schema:
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 50
          type: array
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateSAMLProviderResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
          description: EntityAlreadyExistsException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: CreateSAMLProvider
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Creates an IAM resource that describes an identity provider
        (IdP) that supports SAML 2.0.</p> <p>The SAML provider resource that you create
        with this operation can be used as a principal in an IAM role's trust policy.
        Such a policy can enable federated users who sign in using the SAML IdP to
        assume the role. You can create an IAM role that supports Web-based single
        sign-on (SSO) to the Amazon Web Services Management Console or one that supports
        API access to Amazon Web Services.</p> <p>When you create the SAML provider
        resource, you upload a SAML metadata document that you get from your IdP.
        That document includes the issuer's name, expiration information, and keys
        that can be used to validate the SAML authentication response (assertions)
        that the IdP sends. You must generate the metadata document using the identity
        management software that is used as your organization's IdP.</p> <note> <p>
        This operation requires <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature
        Version 4</a>.</p> </note> <p> For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_enable-console-saml.html">Enabling
        SAML 2.0 federated users to access the Amazon Web Services Management Console</a>
        and <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_saml.html">About
        SAML 2.0-based federation</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_CreateSAMLProvider
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateSAMLProviderRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateSAMLProviderResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
          description: EntityAlreadyExistsException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: CreateSAMLProvider
  /?Action=CreateServiceLinkedRole&Version=2010-05-08:
    get:
      description: <p>Creates an IAM role that is linked to a specific Amazon Web
        Services service. The service controls the attached policies and when the
        role can be deleted. This helps ensure that the service is not broken by an
        unexpectedly changed or deleted role, which could put your Amazon Web Services
        resources into an unknown state. Allowing the service to control the role
        helps improve service stability and proper cleanup when a service and its
        role are no longer needed. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/using-service-linked-roles.html">Using
        service-linked roles</a> in the <i>IAM User Guide</i>. </p> <p>To attach a
        policy to this service-linked role, you must make the request using the Amazon
        Web Services service that depends on this role.</p>
      operationId: GET_CreateServiceLinkedRole
      parameters:
      - description: '<p>The service principal for the Amazon Web Services service
          to which this role is attached. You use a string similar to a URL but without
          the http:// in front. For example: <code>elasticbeanstalk.amazonaws.com</code>.
          </p> <p>Service principals are unique and case-sensitive. To find the exact
          service principal for your service-linked role, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-services-that-work-with-iam.html">Amazon
          Web Services services that work with IAM</a> in the <i>IAM User Guide</i>.
          Look for the services that have <b>Yes </b>in the <b>Service-Linked Role</b>
          column. Choose the <b>Yes</b> link to view the service-linked role documentation
          for that service.</p>'
        in: query
        name: AWSServiceName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: The description of the role.
        in: query
        name: Description
        required: false
        schema:
          maxLength: 1000
          pattern: '[\p{L}\p{M}\p{Z}\p{S}\p{N}\p{P}]*'
          type: string
      - description: <p/> <p>A string that you provide, which is combined with the
          service-provided prefix to form the complete role name. If you make multiple
          requests for the same service, then you must supply a different <code>CustomSuffix</code>
          for each request. Otherwise the request fails with a duplicate role name
          error. For example, you could add <code>-1</code> or <code>-debug</code>
          to the suffix.</p> <p>Some services do not support the <code>CustomSuffix</code>
          parameter. If you provide an optional suffix and the operation fails, try
          the operation again without the suffix.</p>
        in: query
        name: CustomSuffix
        required: false
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateServiceLinkedRoleResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: CreateServiceLinkedRole
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Creates an IAM role that is linked to a specific Amazon Web
        Services service. The service controls the attached policies and when the
        role can be deleted. This helps ensure that the service is not broken by an
        unexpectedly changed or deleted role, which could put your Amazon Web Services
        resources into an unknown state. Allowing the service to control the role
        helps improve service stability and proper cleanup when a service and its
        role are no longer needed. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/using-service-linked-roles.html">Using
        service-linked roles</a> in the <i>IAM User Guide</i>. </p> <p>To attach a
        policy to this service-linked role, you must make the request using the Amazon
        Web Services service that depends on this role.</p>
      operationId: POST_CreateServiceLinkedRole
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateServiceLinkedRoleRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateServiceLinkedRoleResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: CreateServiceLinkedRole
  /?Action=CreateServiceSpecificCredential&Version=2010-05-08:
    get:
      description: '<p>Generates a set of credentials consisting of a user name and
        password that can be used to access the service specified in the request.
        These credentials are generated by IAM, and can be used only for the specified
        service. </p> <p>You can have a maximum of two sets of service-specific credentials
        for each supported service per user.</p> <p>You can create service-specific
        credentials for CodeCommit and Amazon Keyspaces (for Apache Cassandra).</p>
        <p>You can reset the password to a new service-generated value by calling
        <a>ResetServiceSpecificCredential</a>.</p> <p>For more information about service-specific
        credentials, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_ssh-keys.html">Using
        IAM with CodeCommit: Git credentials, SSH keys, and Amazon Web Services access
        keys</a> in the <i>IAM User Guide</i>.</p>'
      operationId: GET_CreateServiceSpecificCredential
      parameters:
      - description: '<p>The name of the IAM user that is to be associated with the
          credentials. The new service-specific credentials have the same permissions
          as the associated user except that they can be used only to access the specified
          service.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: UserName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: The name of the Amazon Web Services service that is to be associated
          with the credentials. The service you specify here is the only service that
          can be accessed using these credentials.
        in: query
        name: ServiceName
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateServiceSpecificCredentialResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceNotSupportedException'
          description: ServiceNotSupportedException
      x-aws-operation-name: CreateServiceSpecificCredential
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Generates a set of credentials consisting of a user name and
        password that can be used to access the service specified in the request.
        These credentials are generated by IAM, and can be used only for the specified
        service. </p> <p>You can have a maximum of two sets of service-specific credentials
        for each supported service per user.</p> <p>You can create service-specific
        credentials for CodeCommit and Amazon Keyspaces (for Apache Cassandra).</p>
        <p>You can reset the password to a new service-generated value by calling
        <a>ResetServiceSpecificCredential</a>.</p> <p>For more information about service-specific
        credentials, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_ssh-keys.html">Using
        IAM with CodeCommit: Git credentials, SSH keys, and Amazon Web Services access
        keys</a> in the <i>IAM User Guide</i>.</p>'
      operationId: POST_CreateServiceSpecificCredential
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateServiceSpecificCredentialRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateServiceSpecificCredentialResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceNotSupportedException'
          description: ServiceNotSupportedException
      x-aws-operation-name: CreateServiceSpecificCredential
  /?Action=CreateUser&Version=2010-05-08:
    get:
      description: <p>Creates a new IAM user for your Amazon Web Services account.</p>
        <p> For information about quotas for the number of IAM users you can create,
        see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html">IAM
        and STS quotas</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_CreateUser
      parameters:
      - description: <p> The path for the user name. For more information about paths,
          see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
          identifiers</a> in the <i>IAM User Guide</i>.</p> <p>This parameter is optional.
          If it is not included, it defaults to a slash (/).</p> <p>This parameter
          allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters consisting of either a forward slash (/) by itself
          or a string that must begin and end with forward slashes. In addition, it
          can contain any ASCII character from the ! (<code>\u0021</code>) through
          the DEL character (<code>\u007F</code>), including most punctuation characters,
          digits, and upper and lowercased letters.</p>
        in: query
        name: Path
        required: false
        schema:
          maxLength: 512
          minLength: 1
          pattern: (\u002F)|(\u002F[\u0021-\u007F]+\u002F)
          type: string
      - description: <p>The name of the user to create.</p> <p>IAM user, group, role,
          and policy names must be unique within the account. Names are not distinguished
          by case. For example, you cannot create resources named both "MyResource"
          and "myresource".</p>
        in: query
        name: UserName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: The ARN of the policy that is used to set the permissions boundary
          for the user.
        in: query
        name: PermissionsBoundary
        required: false
        schema:
          description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers
            for Amazon Web Services resources.</p> <p>For more information about ARNs,
            go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
            </p>
          maxLength: 2048
          minLength: 20
          type: string
      - description: <p>A list of tags that you want to attach to the new user. Each
          tag consists of a key name and an associated value. For more information
          about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
          IAM resources</a> in the <i>IAM User Guide</i>.</p> <note> <p>If any one
          of the tags is invalid or if you exceed the allowed maximum number of tags,
          then the entire request fails and the resource is not created.</p> </note>
        in: query
        name: Tags
        required: false
        schema:
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 50
          type: array
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateUserResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
          description: EntityAlreadyExistsException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '485':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: CreateUser
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Creates a new IAM user for your Amazon Web Services account.</p>
        <p> For information about quotas for the number of IAM users you can create,
        see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html">IAM
        and STS quotas</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_CreateUser
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateUserResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
          description: EntityAlreadyExistsException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '485':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: CreateUser
  /?Action=CreateVirtualMFADevice&Version=2010-05-08:
    get:
      description: <p>Creates a new virtual MFA device for the Amazon Web Services
        account. After creating the virtual MFA, use <a>EnableMFADevice</a> to attach
        the MFA device to an IAM user. For more information about creating and working
        with virtual MFA devices, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_VirtualMFA.html">Using
        a virtual MFA device</a> in the <i>IAM User Guide</i>.</p> <p>For information
        about the maximum number of MFA devices you can create, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html">IAM
        and STS quotas</a> in the <i>IAM User Guide</i>.</p> <important> <p>The seed
        information contained in the QR code and the Base32 string should be treated
        like any other secret access information. In other words, protect the seed
        information as you would your Amazon Web Services access keys or your passwords.
        After you provision your virtual device, you should ensure that the information
        is destroyed following secure procedures.</p> </important>
      operationId: GET_CreateVirtualMFADevice
      parameters:
      - description: <p> The path for the virtual MFA device. For more information
          about paths, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
          identifiers</a> in the <i>IAM User Guide</i>.</p> <p>This parameter is optional.
          If it is not included, it defaults to a slash (/).</p> <p>This parameter
          allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters consisting of either a forward slash (/) by itself
          or a string that must begin and end with forward slashes. In addition, it
          can contain any ASCII character from the ! (<code>\u0021</code>) through
          the DEL character (<code>\u007F</code>), including most punctuation characters,
          digits, and upper and lowercased letters.</p>
        in: query
        name: Path
        required: false
        schema:
          maxLength: 512
          minLength: 1
          pattern: (\u002F)|(\u002F[\u0021-\u007F]+\u002F)
          type: string
      - description: '<p>The name of the virtual MFA device. Use with path to uniquely
          identify a virtual MFA device.</p> <p>This parameter allows (through its
          <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of
          characters consisting of upper and lowercase alphanumeric characters with
          no spaces. You can also include any of the following characters: _+=,.@-</p>'
        in: query
        name: VirtualMFADeviceName
        required: true
        schema:
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: <p>A list of tags that you want to attach to the new IAM virtual
          MFA device. Each tag consists of a key name and an associated value. For
          more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
          IAM resources</a> in the <i>IAM User Guide</i>.</p> <note> <p>If any one
          of the tags is invalid or if you exceed the allowed maximum number of tags,
          then the entire request fails and the resource is not created.</p> </note>
        in: query
        name: Tags
        required: false
        schema:
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 50
          type: array
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateVirtualMFADeviceResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
          description: EntityAlreadyExistsException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: CreateVirtualMFADevice
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Creates a new virtual MFA device for the Amazon Web Services
        account. After creating the virtual MFA, use <a>EnableMFADevice</a> to attach
        the MFA device to an IAM user. For more information about creating and working
        with virtual MFA devices, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_VirtualMFA.html">Using
        a virtual MFA device</a> in the <i>IAM User Guide</i>.</p> <p>For information
        about the maximum number of MFA devices you can create, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html">IAM
        and STS quotas</a> in the <i>IAM User Guide</i>.</p> <important> <p>The seed
        information contained in the QR code and the Base32 string should be treated
        like any other secret access information. In other words, protect the seed
        information as you would your Amazon Web Services access keys or your passwords.
        After you provision your virtual device, you should ensure that the information
        is destroyed following secure procedures.</p> </important>
      operationId: POST_CreateVirtualMFADevice
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateVirtualMFADeviceRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateVirtualMFADeviceResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
          description: EntityAlreadyExistsException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: CreateVirtualMFADevice
  /?Action=DeactivateMFADevice&Version=2010-05-08:
    get:
      description: <p>Deactivates the specified MFA device and removes it from association
        with the user name for which it was originally enabled.</p> <p>For more information
        about creating and working with virtual MFA devices, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_VirtualMFA.html">Enabling
        a virtual multi-factor authentication (MFA) device</a> in the <i>IAM User
        Guide</i>.</p>
      operationId: GET_DeactivateMFADevice
      parameters:
      - description: '<p>The name of the user whose MFA device you want to deactivate.</p>
          <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: UserName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: '<p>The serial number that uniquely identifies the MFA device.
          For virtual MFA devices, the serial number is the device ARN.</p> <p>This
          parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          =,.@:/-</p>'
        in: query
        name: SerialNumber
        required: true
        schema:
          maxLength: 256
          minLength: 9
          pattern: '[\w+=/:,.@-]+'
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityTemporarilyUnmodifiableException'
          description: EntityTemporarilyUnmodifiableException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeactivateMFADevice
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Deactivates the specified MFA device and removes it from association
        with the user name for which it was originally enabled.</p> <p>For more information
        about creating and working with virtual MFA devices, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_VirtualMFA.html">Enabling
        a virtual multi-factor authentication (MFA) device</a> in the <i>IAM User
        Guide</i>.</p>
      operationId: POST_DeactivateMFADevice
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeactivateMFADeviceRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityTemporarilyUnmodifiableException'
          description: EntityTemporarilyUnmodifiableException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeactivateMFADevice
  /?Action=DeleteAccessKey&Version=2010-05-08:
    get:
      description: <p>Deletes the access key pair associated with the specified IAM
        user.</p> <p>If you do not specify a user name, IAM determines the user name
        implicitly based on the Amazon Web Services access key ID signing the request.
        This operation works for access keys under the Amazon Web Services account.
        Consequently, you can use this operation to manage Amazon Web Services account
        root user credentials even if the Amazon Web Services account has no associated
        users.</p>
      operationId: GET_DeleteAccessKey
      parameters:
      - description: '<p>The name of the user whose access key pair you want to delete.</p>
          <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: UserName
        required: false
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: <p>The access key ID for the access key ID and secret access
          key you want to delete.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters that can consist of any upper or lowercased
          letter or digit.</p>
        in: query
        name: AccessKeyId
        required: true
        schema:
          maxLength: 128
          minLength: 16
          pattern: '[\w]+'
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteAccessKey
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Deletes the access key pair associated with the specified IAM
        user.</p> <p>If you do not specify a user name, IAM determines the user name
        implicitly based on the Amazon Web Services access key ID signing the request.
        This operation works for access keys under the Amazon Web Services account.
        Consequently, you can use this operation to manage Amazon Web Services account
        root user credentials even if the Amazon Web Services account has no associated
        users.</p>
      operationId: POST_DeleteAccessKey
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteAccessKeyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteAccessKey
  /?Action=DeleteAccountAlias&Version=2010-05-08:
    get:
      description: ' Deletes the specified Amazon Web Services account alias. For
        information about using an Amazon Web Services account alias, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/AccountAlias.html">Using
        an alias for your Amazon Web Services account ID</a> in the <i>IAM User Guide</i>.'
      operationId: GET_DeleteAccountAlias
      parameters:
      - description: <p>The name of the account alias to delete.</p> <p>This parameter
          allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters consisting of lowercase letters, digits, and dashes.
          You cannot start or finish with a dash, nor can you have two dashes in a
          row.</p>
        in: query
        name: AccountAlias
        required: true
        schema:
          maxLength: 63
          minLength: 3
          pattern: ^[a-z0-9](([a-z0-9]|-(?!-))*[a-z0-9])?$
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteAccountAlias
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: ' Deletes the specified Amazon Web Services account alias. For
        information about using an Amazon Web Services account alias, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/AccountAlias.html">Using
        an alias for your Amazon Web Services account ID</a> in the <i>IAM User Guide</i>.'
      operationId: POST_DeleteAccountAlias
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteAccountAliasRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteAccountAlias
  /?Action=DeleteAccountPasswordPolicy&Version=2010-05-08:
    get:
      description: Deletes the password policy for the Amazon Web Services account.
        There are no parameters.
      operationId: GET_DeleteAccountPasswordPolicy
      parameters: []
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteAccountPasswordPolicy
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: Deletes the password policy for the Amazon Web Services account.
        There are no parameters.
      operationId: POST_DeleteAccountPasswordPolicy
      parameters: []
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteAccountPasswordPolicy
  /?Action=DeleteGroup&Version=2010-05-08:
    get:
      description: Deletes the specified IAM group. The group must not contain any
        users or have any attached policies.
      operationId: GET_DeleteGroup
      parameters:
      - description: '<p>The name of the IAM group to delete.</p> <p>This parameter
          allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters consisting of upper and lowercase alphanumeric characters
          with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        in: query
        name: GroupName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteConflictException'
          description: DeleteConflictException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteGroup
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: Deletes the specified IAM group. The group must not contain any
        users or have any attached policies.
      operationId: POST_DeleteGroup
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteGroupRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteConflictException'
          description: DeleteConflictException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteGroup
  /?Action=DeleteGroupPolicy&Version=2010-05-08:
    get:
      description: <p>Deletes the specified inline policy that is embedded in the
        specified IAM group.</p> <p>A group can also have managed policies attached
        to it. To detach a managed policy from a group, use <a>DetachGroupPolicy</a>.
        For more information about policies, refer to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_DeleteGroupPolicy
      parameters:
      - description: '<p>The name (friendly name, not ARN) identifying the group that
          the policy is embedded in.</p> <p>This parameter allows (through its <a
          href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters
          consisting of upper and lowercase alphanumeric characters with no spaces.
          You can also include any of the following characters: _+=,.@-</p>'
        in: query
        name: GroupName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: '<p>The name identifying the policy document to delete.</p> <p>This
          parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: PolicyName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteGroupPolicy
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Deletes the specified inline policy that is embedded in the
        specified IAM group.</p> <p>A group can also have managed policies attached
        to it. To detach a managed policy from a group, use <a>DetachGroupPolicy</a>.
        For more information about policies, refer to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_DeleteGroupPolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteGroupPolicyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteGroupPolicy
  /?Action=DeleteInstanceProfile&Version=2010-05-08:
    get:
      description: <p>Deletes the specified instance profile. The instance profile
        must not have an associated role.</p> <important> <p>Make sure that you do
        not have any Amazon EC2 instances running with the instance profile you are
        about to delete. Deleting a role or instance profile that is associated with
        a running instance will break any applications running on the instance.</p>
        </important> <p>For more information about instance profiles, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html">About
        instance profiles</a>.</p>
      operationId: GET_DeleteInstanceProfile
      parameters:
      - description: '<p>The name of the instance profile to delete.</p> <p>This parameter
          allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters consisting of upper and lowercase alphanumeric characters
          with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        in: query
        name: InstanceProfileName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteConflictException'
          description: DeleteConflictException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteInstanceProfile
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Deletes the specified instance profile. The instance profile
        must not have an associated role.</p> <important> <p>Make sure that you do
        not have any Amazon EC2 instances running with the instance profile you are
        about to delete. Deleting a role or instance profile that is associated with
        a running instance will break any applications running on the instance.</p>
        </important> <p>For more information about instance profiles, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html">About
        instance profiles</a>.</p>
      operationId: POST_DeleteInstanceProfile
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteInstanceProfileRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteConflictException'
          description: DeleteConflictException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteInstanceProfile
  /?Action=DeleteLoginProfile&Version=2010-05-08:
    get:
      description: <p>Deletes the password for the specified IAM user, which terminates
        the user's ability to access Amazon Web Services services through the Amazon
        Web Services Management Console.</p> <p>You can use the CLI, the Amazon Web
        Services API, or the <b>Users</b> page in the IAM console to delete a password
        for any IAM user. You can use <a>ChangePassword</a> to update, but not delete,
        your own password in the <b>My Security Credentials</b> page in the Amazon
        Web Services Management Console.</p> <important> <p> Deleting a user's password
        does not prevent a user from accessing Amazon Web Services through the command
        line interface or the API. To prevent all user access, you must also either
        make any access keys inactive or delete them. For more information about making
        keys inactive or deleting them, see <a>UpdateAccessKey</a> and <a>DeleteAccessKey</a>.
        </p> </important>
      operationId: GET_DeleteLoginProfile
      parameters:
      - description: '<p>The name of the user whose password you want to delete.</p>
          <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: UserName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityTemporarilyUnmodifiableException'
          description: EntityTemporarilyUnmodifiableException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteLoginProfile
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Deletes the password for the specified IAM user, which terminates
        the user's ability to access Amazon Web Services services through the Amazon
        Web Services Management Console.</p> <p>You can use the CLI, the Amazon Web
        Services API, or the <b>Users</b> page in the IAM console to delete a password
        for any IAM user. You can use <a>ChangePassword</a> to update, but not delete,
        your own password in the <b>My Security Credentials</b> page in the Amazon
        Web Services Management Console.</p> <important> <p> Deleting a user's password
        does not prevent a user from accessing Amazon Web Services through the command
        line interface or the API. To prevent all user access, you must also either
        make any access keys inactive or delete them. For more information about making
        keys inactive or deleting them, see <a>UpdateAccessKey</a> and <a>DeleteAccessKey</a>.
        </p> </important>
      operationId: POST_DeleteLoginProfile
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteLoginProfileRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityTemporarilyUnmodifiableException'
          description: EntityTemporarilyUnmodifiableException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteLoginProfile
  /?Action=DeleteOpenIDConnectProvider&Version=2010-05-08:
    get:
      description: <p>Deletes an OpenID Connect identity provider (IdP) resource object
        in IAM.</p> <p>Deleting an IAM OIDC provider resource does not update any
        roles that reference the provider as a principal in their trust policies.
        Any attempt to assume a role that references a deleted provider fails.</p>
        <p>This operation is idempotent; it does not fail or return an error if you
        call the operation for a provider that does not exist.</p>
      operationId: GET_DeleteOpenIDConnectProvider
      parameters:
      - description: The Amazon Resource Name (ARN) of the IAM OpenID Connect provider
          resource object to delete. You can get a list of OpenID Connect provider
          resource ARNs by using the <a>ListOpenIDConnectProviders</a> operation.
        in: query
        name: OpenIDConnectProviderArn
        required: true
        schema:
          description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers
            for Amazon Web Services resources.</p> <p>For more information about ARNs,
            go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
            </p>
          maxLength: 2048
          minLength: 20
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteOpenIDConnectProvider
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Deletes an OpenID Connect identity provider (IdP) resource object
        in IAM.</p> <p>Deleting an IAM OIDC provider resource does not update any
        roles that reference the provider as a principal in their trust policies.
        Any attempt to assume a role that references a deleted provider fails.</p>
        <p>This operation is idempotent; it does not fail or return an error if you
        call the operation for a provider that does not exist.</p>
      operationId: POST_DeleteOpenIDConnectProvider
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteOpenIDConnectProviderRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteOpenIDConnectProvider
  /?Action=DeletePolicy&Version=2010-05-08:
    get:
      description: <p>Deletes the specified managed policy.</p> <p>Before you can
        delete a managed policy, you must first detach the policy from all users,
        groups, and roles that it is attached to. In addition, you must delete all
        the policy's versions. The following steps describe the process for deleting
        a managed policy:</p> <ul> <li> <p>Detach the policy from all users, groups,
        and roles that the policy is attached to, using <a>DetachUserPolicy</a>, <a>DetachGroupPolicy</a>,
        or <a>DetachRolePolicy</a>. To list all the users, groups, and roles that
        a policy is attached to, use <a>ListEntitiesForPolicy</a>.</p> </li> <li>
        <p>Delete all versions of the policy using <a>DeletePolicyVersion</a>. To
        list the policy's versions, use <a>ListPolicyVersions</a>. You cannot use
        <a>DeletePolicyVersion</a> to delete the version that is marked as the default
        version. You delete the policy's default version in the next step of the process.</p>
        </li> <li> <p>Delete the policy (this automatically deletes the policy's default
        version) using this operation.</p> </li> </ul> <p>For information about managed
        policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_DeletePolicy
      parameters:
      - description: <p>The Amazon Resource Name (ARN) of the IAM policy you want
          to delete.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
          Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        in: query
        name: PolicyArn
        required: true
        schema:
          description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers
            for Amazon Web Services resources.</p> <p>For more information about ARNs,
            go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
            </p>
          maxLength: 2048
          minLength: 20
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteConflictException'
          description: DeleteConflictException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeletePolicy
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Deletes the specified managed policy.</p> <p>Before you can
        delete a managed policy, you must first detach the policy from all users,
        groups, and roles that it is attached to. In addition, you must delete all
        the policy's versions. The following steps describe the process for deleting
        a managed policy:</p> <ul> <li> <p>Detach the policy from all users, groups,
        and roles that the policy is attached to, using <a>DetachUserPolicy</a>, <a>DetachGroupPolicy</a>,
        or <a>DetachRolePolicy</a>. To list all the users, groups, and roles that
        a policy is attached to, use <a>ListEntitiesForPolicy</a>.</p> </li> <li>
        <p>Delete all versions of the policy using <a>DeletePolicyVersion</a>. To
        list the policy's versions, use <a>ListPolicyVersions</a>. You cannot use
        <a>DeletePolicyVersion</a> to delete the version that is marked as the default
        version. You delete the policy's default version in the next step of the process.</p>
        </li> <li> <p>Delete the policy (this automatically deletes the policy's default
        version) using this operation.</p> </li> </ul> <p>For information about managed
        policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_DeletePolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeletePolicyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteConflictException'
          description: DeleteConflictException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeletePolicy
  /?Action=DeletePolicyVersion&Version=2010-05-08:
    get:
      description: <p>Deletes the specified version from the specified managed policy.</p>
        <p>You cannot delete the default version from a policy using this operation.
        To delete the default version from a policy, use <a>DeletePolicy</a>. To find
        out which version of a policy is marked as the default version, use <a>ListPolicyVersions</a>.</p>
        <p>For information about versions for managed policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning
        for managed policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_DeletePolicyVersion
      parameters:
      - description: <p>The Amazon Resource Name (ARN) of the IAM policy from which
          you want to delete a version.</p> <p>For more information about ARNs, see
          <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
          Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        in: query
        name: PolicyArn
        required: true
        schema:
          description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers
            for Amazon Web Services resources.</p> <p>For more information about ARNs,
            go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
            </p>
          maxLength: 2048
          minLength: 20
          type: string
      - description: <p>The policy version to delete.</p> <p>This parameter allows
          (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters that consists of the lowercase letter 'v' followed
          by one or two digits, and optionally followed by a period '.' and a string
          of letters and digits.</p> <p>For more information about managed policy
          versions, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning
          for managed policies</a> in the <i>IAM User Guide</i>.</p>
        in: query
        name: VersionId
        required: true
        schema:
          pattern: v[1-9][0-9]*(\.[A-Za-z0-9-]*)?
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteConflictException'
          description: DeleteConflictException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeletePolicyVersion
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Deletes the specified version from the specified managed policy.</p>
        <p>You cannot delete the default version from a policy using this operation.
        To delete the default version from a policy, use <a>DeletePolicy</a>. To find
        out which version of a policy is marked as the default version, use <a>ListPolicyVersions</a>.</p>
        <p>For information about versions for managed policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning
        for managed policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_DeletePolicyVersion
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeletePolicyVersionRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteConflictException'
          description: DeleteConflictException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeletePolicyVersion
  /?Action=DeleteRole&Version=2010-05-08:
    get:
      description: <p>Deletes the specified role. The role must not have any policies
        attached. For more information about roles, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html">Working
        with roles</a>.</p> <important> <p>Make sure that you do not have any Amazon
        EC2 instances running with the role you are about to delete. Deleting a role
        or instance profile that is associated with a running instance will break
        any applications running on the instance.</p> </important>
      operationId: GET_DeleteRole
      parameters:
      - description: '<p>The name of the role to delete.</p> <p>This parameter allows
          (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters consisting of upper and lowercase alphanumeric characters
          with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        in: query
        name: RoleName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteConflictException'
          description: DeleteConflictException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnmodifiableEntityException'
          description: UnmodifiableEntityException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '485':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteRole
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Deletes the specified role. The role must not have any policies
        attached. For more information about roles, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html">Working
        with roles</a>.</p> <important> <p>Make sure that you do not have any Amazon
        EC2 instances running with the role you are about to delete. Deleting a role
        or instance profile that is associated with a running instance will break
        any applications running on the instance.</p> </important>
      operationId: POST_DeleteRole
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteRoleRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteConflictException'
          description: DeleteConflictException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnmodifiableEntityException'
          description: UnmodifiableEntityException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '485':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteRole
  /?Action=DeleteRolePermissionsBoundary&Version=2010-05-08:
    get:
      description: <p>Deletes the permissions boundary for the specified IAM role.
        </p> <important> <p>Deleting the permissions boundary for a role might increase
        its permissions. For example, it might allow anyone who assumes the role to
        perform all the actions granted in its permissions policies. </p> </important>
      operationId: GET_DeleteRolePermissionsBoundary
      parameters:
      - description: The name (friendly name, not ARN) of the IAM role from which
          you want to remove the permissions boundary.
        in: query
        name: RoleName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnmodifiableEntityException'
          description: UnmodifiableEntityException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteRolePermissionsBoundary
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Deletes the permissions boundary for the specified IAM role.
        </p> <important> <p>Deleting the permissions boundary for a role might increase
        its permissions. For example, it might allow anyone who assumes the role to
        perform all the actions granted in its permissions policies. </p> </important>
      operationId: POST_DeleteRolePermissionsBoundary
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteRolePermissionsBoundaryRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnmodifiableEntityException'
          description: UnmodifiableEntityException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteRolePermissionsBoundary
  /?Action=DeleteRolePolicy&Version=2010-05-08:
    get:
      description: <p>Deletes the specified inline policy that is embedded in the
        specified IAM role.</p> <p>A role can also have managed policies attached
        to it. To detach a managed policy from a role, use <a>DetachRolePolicy</a>.
        For more information about policies, refer to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_DeleteRolePolicy
      parameters:
      - description: '<p>The name (friendly name, not ARN) identifying the role that
          the policy is embedded in.</p> <p>This parameter allows (through its <a
          href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters
          consisting of upper and lowercase alphanumeric characters with no spaces.
          You can also include any of the following characters: _+=,.@-</p>'
        in: query
        name: RoleName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: '<p>The name of the inline policy to delete from the specified
          IAM role.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: PolicyName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnmodifiableEntityException'
          description: UnmodifiableEntityException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteRolePolicy
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Deletes the specified inline policy that is embedded in the
        specified IAM role.</p> <p>A role can also have managed policies attached
        to it. To detach a managed policy from a role, use <a>DetachRolePolicy</a>.
        For more information about policies, refer to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_DeleteRolePolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteRolePolicyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnmodifiableEntityException'
          description: UnmodifiableEntityException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteRolePolicy
  /?Action=DeleteSAMLProvider&Version=2010-05-08:
    get:
      description: <p>Deletes a SAML provider resource in IAM.</p> <p>Deleting the
        provider resource from IAM does not update any roles that reference the SAML
        provider resource's ARN as a principal in their trust policies. Any attempt
        to assume a role that references a non-existent provider resource ARN fails.</p>
        <note> <p> This operation requires <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature
        Version 4</a>.</p> </note>
      operationId: GET_DeleteSAMLProvider
      parameters:
      - description: The Amazon Resource Name (ARN) of the SAML provider to delete.
        in: query
        name: SAMLProviderArn
        required: true
        schema:
          description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers
            for Amazon Web Services resources.</p> <p>For more information about ARNs,
            go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
            </p>
          maxLength: 2048
          minLength: 20
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteSAMLProvider
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Deletes a SAML provider resource in IAM.</p> <p>Deleting the
        provider resource from IAM does not update any roles that reference the SAML
        provider resource's ARN as a principal in their trust policies. Any attempt
        to assume a role that references a non-existent provider resource ARN fails.</p>
        <note> <p> This operation requires <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature
        Version 4</a>.</p> </note>
      operationId: POST_DeleteSAMLProvider
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteSAMLProviderRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteSAMLProvider
  /?Action=DeleteSSHPublicKey&Version=2010-05-08:
    get:
      description: <p>Deletes the specified SSH public key.</p> <p>The SSH public
        key deleted by this operation is used only for authenticating the associated
        IAM user to an CodeCommit repository. For more information about using SSH
        keys to authenticate to an CodeCommit repository, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-credentials-ssh.html">Set
        up CodeCommit for SSH connections</a> in the <i>CodeCommit User Guide</i>.</p>
      operationId: GET_DeleteSSHPublicKey
      parameters:
      - description: '<p>The name of the IAM user associated with the SSH public key.</p>
          <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: UserName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: <p>The unique identifier for the SSH public key.</p> <p>This
          parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters that can consist of any upper or lowercased
          letter or digit.</p>
        in: query
        name: SSHPublicKeyId
        required: true
        schema:
          maxLength: 128
          minLength: 20
          pattern: '[\w]+'
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
      x-aws-operation-name: DeleteSSHPublicKey
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Deletes the specified SSH public key.</p> <p>The SSH public
        key deleted by this operation is used only for authenticating the associated
        IAM user to an CodeCommit repository. For more information about using SSH
        keys to authenticate to an CodeCommit repository, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-credentials-ssh.html">Set
        up CodeCommit for SSH connections</a> in the <i>CodeCommit User Guide</i>.</p>
      operationId: POST_DeleteSSHPublicKey
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteSSHPublicKeyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
      x-aws-operation-name: DeleteSSHPublicKey
  /?Action=DeleteServerCertificate&Version=2010-05-08:
    get:
      description: <p>Deletes the specified server certificate.</p> <p>For more information
        about working with server certificates, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html">Working
        with server certificates</a> in the <i>IAM User Guide</i>. This topic also
        includes a list of Amazon Web Services services that can use the server certificates
        that you manage with IAM.</p> <important> <p> If you are using a server certificate
        with Elastic Load Balancing, deleting the certificate could have implications
        for your application. If Elastic Load Balancing doesn't detect the deletion
        of bound certificates, it may continue to use the certificates. This could
        cause Elastic Load Balancing to stop accepting traffic. We recommend that
        you remove the reference to the certificate from Elastic Load Balancing before
        using this command to delete the certificate. For more information, see <a
        href="https://docs.aws.amazon.com/ElasticLoadBalancing/latest/APIReference/API_DeleteLoadBalancerListeners.html">DeleteLoadBalancerListeners</a>
        in the <i>Elastic Load Balancing API Reference</i>.</p> </important>
      operationId: GET_DeleteServerCertificate
      parameters:
      - description: '<p>The name of the server certificate you want to delete.</p>
          <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: ServerCertificateName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteConflictException'
          description: DeleteConflictException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteServerCertificate
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Deletes the specified server certificate.</p> <p>For more information
        about working with server certificates, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html">Working
        with server certificates</a> in the <i>IAM User Guide</i>. This topic also
        includes a list of Amazon Web Services services that can use the server certificates
        that you manage with IAM.</p> <important> <p> If you are using a server certificate
        with Elastic Load Balancing, deleting the certificate could have implications
        for your application. If Elastic Load Balancing doesn't detect the deletion
        of bound certificates, it may continue to use the certificates. This could
        cause Elastic Load Balancing to stop accepting traffic. We recommend that
        you remove the reference to the certificate from Elastic Load Balancing before
        using this command to delete the certificate. For more information, see <a
        href="https://docs.aws.amazon.com/ElasticLoadBalancing/latest/APIReference/API_DeleteLoadBalancerListeners.html">DeleteLoadBalancerListeners</a>
        in the <i>Elastic Load Balancing API Reference</i>.</p> </important>
      operationId: POST_DeleteServerCertificate
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteServerCertificateRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteConflictException'
          description: DeleteConflictException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteServerCertificate
  /?Action=DeleteServiceLinkedRole&Version=2010-05-08:
    get:
      description: '<p>Submits a service-linked role deletion request and returns
        a <code>DeletionTaskId</code>, which you can use to check the status of the
        deletion. Before you call this operation, confirm that the role has no active
        sessions and that any resources used by the role in the linked service are
        deleted. If you call this operation more than once for the same service-linked
        role and an earlier deletion task is not complete, then the <code>DeletionTaskId</code>
        of the earlier request is returned.</p> <p>If you submit a deletion request
        for a service-linked role whose linked service is still accessing a resource,
        then the deletion task fails. If it fails, the <a>GetServiceLinkedRoleDeletionStatus</a>
        operation returns the reason for the failure, usually including the resources
        that must be deleted. To delete the service-linked role, you must first remove
        those resources from the linked service and then submit the deletion request
        again. Resources are specific to the service that is linked to the role. For
        more information about removing resources from a service, see the <a href="http://docs.aws.amazon.com/">Amazon
        Web Services documentation</a> for your service.</p> <p>For more information
        about service-linked roles, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts.html#iam-term-service-linked-role">Roles
        terms and concepts: Amazon Web Services service-linked role</a> in the <i>IAM
        User Guide</i>.</p>'
      operationId: GET_DeleteServiceLinkedRole
      parameters:
      - description: The name of the service-linked role to be deleted.
        in: query
        name: RoleName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteServiceLinkedRoleResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteServiceLinkedRole
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Submits a service-linked role deletion request and returns
        a <code>DeletionTaskId</code>, which you can use to check the status of the
        deletion. Before you call this operation, confirm that the role has no active
        sessions and that any resources used by the role in the linked service are
        deleted. If you call this operation more than once for the same service-linked
        role and an earlier deletion task is not complete, then the <code>DeletionTaskId</code>
        of the earlier request is returned.</p> <p>If you submit a deletion request
        for a service-linked role whose linked service is still accessing a resource,
        then the deletion task fails. If it fails, the <a>GetServiceLinkedRoleDeletionStatus</a>
        operation returns the reason for the failure, usually including the resources
        that must be deleted. To delete the service-linked role, you must first remove
        those resources from the linked service and then submit the deletion request
        again. Resources are specific to the service that is linked to the role. For
        more information about removing resources from a service, see the <a href="http://docs.aws.amazon.com/">Amazon
        Web Services documentation</a> for your service.</p> <p>For more information
        about service-linked roles, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts.html#iam-term-service-linked-role">Roles
        terms and concepts: Amazon Web Services service-linked role</a> in the <i>IAM
        User Guide</i>.</p>'
      operationId: POST_DeleteServiceLinkedRole
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteServiceLinkedRoleRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteServiceLinkedRoleResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteServiceLinkedRole
  /?Action=DeleteServiceSpecificCredential&Version=2010-05-08:
    get:
      description: Deletes the specified service-specific credential.
      operationId: GET_DeleteServiceSpecificCredential
      parameters:
      - description: '<p>The name of the IAM user associated with the service-specific
          credential. If this value is not specified, then the operation assumes the
          user whose credentials are used to call the operation.</p> <p>This parameter
          allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters consisting of upper and lowercase alphanumeric characters
          with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        in: query
        name: UserName
        required: false
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: <p>The unique identifier of the service-specific credential.
          You can get this value by calling <a>ListServiceSpecificCredentials</a>.</p>
          <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters that can consist of any upper or lowercased
          letter or digit.</p>
        in: query
        name: ServiceSpecificCredentialId
        required: true
        schema:
          maxLength: 128
          minLength: 20
          pattern: '[\w]+'
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
      x-aws-operation-name: DeleteServiceSpecificCredential
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: Deletes the specified service-specific credential.
      operationId: POST_DeleteServiceSpecificCredential
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteServiceSpecificCredentialRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
      x-aws-operation-name: DeleteServiceSpecificCredential
  /?Action=DeleteSigningCertificate&Version=2010-05-08:
    get:
      description: <p>Deletes a signing certificate associated with the specified
        IAM user.</p> <p>If you do not specify a user name, IAM determines the user
        name implicitly based on the Amazon Web Services access key ID signing the
        request. This operation works for access keys under the Amazon Web Services
        account. Consequently, you can use this operation to manage Amazon Web Services
        account root user credentials even if the Amazon Web Services account has
        no associated IAM users.</p>
      operationId: GET_DeleteSigningCertificate
      parameters:
      - description: '<p>The name of the user the signing certificate belongs to.</p>
          <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: UserName
        required: false
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: <p>The ID of the signing certificate to delete.</p> <p>The format
          of this parameter, as described by its <a href="http://wikipedia.org/wiki/regex">regex</a>
          pattern, is a string of characters that can be upper- or lower-cased letters
          or digits.</p>
        in: query
        name: CertificateId
        required: true
        schema:
          maxLength: 128
          minLength: 24
          pattern: '[\w]+'
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteSigningCertificate
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Deletes a signing certificate associated with the specified
        IAM user.</p> <p>If you do not specify a user name, IAM determines the user
        name implicitly based on the Amazon Web Services access key ID signing the
        request. This operation works for access keys under the Amazon Web Services
        account. Consequently, you can use this operation to manage Amazon Web Services
        account root user credentials even if the Amazon Web Services account has
        no associated IAM users.</p>
      operationId: POST_DeleteSigningCertificate
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteSigningCertificateRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteSigningCertificate
  /?Action=DeleteUser&Version=2010-05-08:
    get:
      description: <p>Deletes the specified IAM user. Unlike the Amazon Web Services
        Management Console, when you delete a user programmatically, you must delete
        the items attached to the user manually, or the deletion fails. For more information,
        see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users_manage.html#id_users_deleting_cli">Deleting
        an IAM user</a>. Before attempting to delete a user, remove the following
        items:</p> <ul> <li> <p>Password (<a>DeleteLoginProfile</a>)</p> </li> <li>
        <p>Access keys (<a>DeleteAccessKey</a>)</p> </li> <li> <p>Signing certificate
        (<a>DeleteSigningCertificate</a>)</p> </li> <li> <p>SSH public key (<a>DeleteSSHPublicKey</a>)</p>
        </li> <li> <p>Git credentials (<a>DeleteServiceSpecificCredential</a>)</p>
        </li> <li> <p>Multi-factor authentication (MFA) device (<a>DeactivateMFADevice</a>,
        <a>DeleteVirtualMFADevice</a>)</p> </li> <li> <p>Inline policies (<a>DeleteUserPolicy</a>)</p>
        </li> <li> <p>Attached managed policies (<a>DetachUserPolicy</a>)</p> </li>
        <li> <p>Group memberships (<a>RemoveUserFromGroup</a>)</p> </li> </ul>
      operationId: GET_DeleteUser
      parameters:
      - description: '<p>The name of the user to delete.</p> <p>This parameter allows
          (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters consisting of upper and lowercase alphanumeric characters
          with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        in: query
        name: UserName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteConflictException'
          description: DeleteConflictException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteUser
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Deletes the specified IAM user. Unlike the Amazon Web Services
        Management Console, when you delete a user programmatically, you must delete
        the items attached to the user manually, or the deletion fails. For more information,
        see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users_manage.html#id_users_deleting_cli">Deleting
        an IAM user</a>. Before attempting to delete a user, remove the following
        items:</p> <ul> <li> <p>Password (<a>DeleteLoginProfile</a>)</p> </li> <li>
        <p>Access keys (<a>DeleteAccessKey</a>)</p> </li> <li> <p>Signing certificate
        (<a>DeleteSigningCertificate</a>)</p> </li> <li> <p>SSH public key (<a>DeleteSSHPublicKey</a>)</p>
        </li> <li> <p>Git credentials (<a>DeleteServiceSpecificCredential</a>)</p>
        </li> <li> <p>Multi-factor authentication (MFA) device (<a>DeactivateMFADevice</a>,
        <a>DeleteVirtualMFADevice</a>)</p> </li> <li> <p>Inline policies (<a>DeleteUserPolicy</a>)</p>
        </li> <li> <p>Attached managed policies (<a>DetachUserPolicy</a>)</p> </li>
        <li> <p>Group memberships (<a>RemoveUserFromGroup</a>)</p> </li> </ul>
      operationId: POST_DeleteUser
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteUserRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteConflictException'
          description: DeleteConflictException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteUser
  /?Action=DeleteUserPermissionsBoundary&Version=2010-05-08:
    get:
      description: <p>Deletes the permissions boundary for the specified IAM user.</p>
        <important> <p>Deleting the permissions boundary for a user might increase
        its permissions by allowing the user to perform all the actions granted in
        its permissions policies. </p> </important>
      operationId: GET_DeleteUserPermissionsBoundary
      parameters:
      - description: The name (friendly name, not ARN) of the IAM user from which
          you want to remove the permissions boundary.
        in: query
        name: UserName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteUserPermissionsBoundary
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Deletes the permissions boundary for the specified IAM user.</p>
        <important> <p>Deleting the permissions boundary for a user might increase
        its permissions by allowing the user to perform all the actions granted in
        its permissions policies. </p> </important>
      operationId: POST_DeleteUserPermissionsBoundary
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteUserPermissionsBoundaryRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteUserPermissionsBoundary
  /?Action=DeleteUserPolicy&Version=2010-05-08:
    get:
      description: <p>Deletes the specified inline policy that is embedded in the
        specified IAM user.</p> <p>A user can also have managed policies attached
        to it. To detach a managed policy from a user, use <a>DetachUserPolicy</a>.
        For more information about policies, refer to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_DeleteUserPolicy
      parameters:
      - description: '<p>The name (friendly name, not ARN) identifying the user that
          the policy is embedded in.</p> <p>This parameter allows (through its <a
          href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters
          consisting of upper and lowercase alphanumeric characters with no spaces.
          You can also include any of the following characters: _+=,.@-</p>'
        in: query
        name: UserName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: '<p>The name identifying the policy document to delete.</p> <p>This
          parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: PolicyName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteUserPolicy
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Deletes the specified inline policy that is embedded in the
        specified IAM user.</p> <p>A user can also have managed policies attached
        to it. To detach a managed policy from a user, use <a>DetachUserPolicy</a>.
        For more information about policies, refer to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_DeleteUserPolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteUserPolicyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteUserPolicy
  /?Action=DeleteVirtualMFADevice&Version=2010-05-08:
    get:
      description: <p>Deletes a virtual MFA device.</p> <note> <p> You must deactivate
        a user's virtual MFA device before you can delete it. For information about
        deactivating MFA devices, see <a>DeactivateMFADevice</a>. </p> </note>
      operationId: GET_DeleteVirtualMFADevice
      parameters:
      - description: '<p>The serial number that uniquely identifies the MFA device.
          For virtual MFA devices, the serial number is the same as the ARN.</p> <p>This
          parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          =,.@:/-</p>'
        in: query
        name: SerialNumber
        required: true
        schema:
          maxLength: 256
          minLength: 9
          pattern: '[\w+=/:,.@-]+'
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteConflictException'
          description: DeleteConflictException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteVirtualMFADevice
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Deletes a virtual MFA device.</p> <note> <p> You must deactivate
        a user's virtual MFA device before you can delete it. For information about
        deactivating MFA devices, see <a>DeactivateMFADevice</a>. </p> </note>
      operationId: POST_DeleteVirtualMFADevice
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteVirtualMFADeviceRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteConflictException'
          description: DeleteConflictException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteVirtualMFADevice
  /?Action=DetachGroupPolicy&Version=2010-05-08:
    get:
      description: <p>Removes the specified managed policy from the specified IAM
        group.</p> <p>A group can also have inline policies embedded with it. To delete
        an inline policy, use <a>DeleteGroupPolicy</a>. For information about policies,
        see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_DetachGroupPolicy
      parameters:
      - description: '<p>The name (friendly name, not ARN) of the IAM group to detach
          the policy from.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: GroupName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: <p>The Amazon Resource Name (ARN) of the IAM policy you want
          to detach.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
          Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        in: query
        name: PolicyArn
        required: true
        schema:
          description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers
            for Amazon Web Services resources.</p> <p>For more information about ARNs,
            go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
            </p>
          maxLength: 2048
          minLength: 20
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DetachGroupPolicy
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Removes the specified managed policy from the specified IAM
        group.</p> <p>A group can also have inline policies embedded with it. To delete
        an inline policy, use <a>DeleteGroupPolicy</a>. For information about policies,
        see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_DetachGroupPolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DetachGroupPolicyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DetachGroupPolicy
  /?Action=DetachRolePolicy&Version=2010-05-08:
    get:
      description: <p>Removes the specified managed policy from the specified role.</p>
        <p>A role can also have inline policies embedded with it. To delete an inline
        policy, use <a>DeleteRolePolicy</a>. For information about policies, see <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_DetachRolePolicy
      parameters:
      - description: '<p>The name (friendly name, not ARN) of the IAM role to detach
          the policy from.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: RoleName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: <p>The Amazon Resource Name (ARN) of the IAM policy you want
          to detach.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
          Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        in: query
        name: PolicyArn
        required: true
        schema:
          description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers
            for Amazon Web Services resources.</p> <p>For more information about ARNs,
            go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
            </p>
          maxLength: 2048
          minLength: 20
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnmodifiableEntityException'
          description: UnmodifiableEntityException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DetachRolePolicy
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Removes the specified managed policy from the specified role.</p>
        <p>A role can also have inline policies embedded with it. To delete an inline
        policy, use <a>DeleteRolePolicy</a>. For information about policies, see <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_DetachRolePolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DetachRolePolicyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnmodifiableEntityException'
          description: UnmodifiableEntityException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DetachRolePolicy
  /?Action=DetachUserPolicy&Version=2010-05-08:
    get:
      description: <p>Removes the specified managed policy from the specified user.</p>
        <p>A user can also have inline policies embedded with it. To delete an inline
        policy, use <a>DeleteUserPolicy</a>. For information about policies, see <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_DetachUserPolicy
      parameters:
      - description: '<p>The name (friendly name, not ARN) of the IAM user to detach
          the policy from.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: UserName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: <p>The Amazon Resource Name (ARN) of the IAM policy you want
          to detach.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
          Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        in: query
        name: PolicyArn
        required: true
        schema:
          description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers
            for Amazon Web Services resources.</p> <p>For more information about ARNs,
            go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
            </p>
          maxLength: 2048
          minLength: 20
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DetachUserPolicy
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Removes the specified managed policy from the specified user.</p>
        <p>A user can also have inline policies embedded with it. To delete an inline
        policy, use <a>DeleteUserPolicy</a>. For information about policies, see <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_DetachUserPolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DetachUserPolicyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DetachUserPolicy
  /?Action=EnableMFADevice&Version=2010-05-08:
    get:
      description: Enables the specified MFA device and associates it with the specified
        IAM user. When enabled, the MFA device is required for every subsequent login
        by the IAM user associated with the device.
      operationId: GET_EnableMFADevice
      parameters:
      - description: '<p>The name of the IAM user for whom you want to enable the
          MFA device.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: UserName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: '<p>The serial number that uniquely identifies the MFA device.
          For virtual MFA devices, the serial number is the device ARN.</p> <p>This
          parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          =,.@:/-</p>'
        in: query
        name: SerialNumber
        required: true
        schema:
          maxLength: 256
          minLength: 9
          pattern: '[\w+=/:,.@-]+'
          type: string
      - description: <p>An authentication code emitted by the device. </p> <p>The
          format for this parameter is a string of six digits.</p> <important> <p>Submit
          your request immediately after generating the authentication codes. If you
          generate the codes and then wait too long to submit the request, the MFA
          device successfully associates with the user but the MFA device becomes
          out of sync. This happens because time-based one-time passwords (TOTP) expire
          after a short period of time. If this happens, you can <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_mfa_sync.html">resync
          the device</a>.</p> </important>
        in: query
        name: AuthenticationCode1
        required: true
        schema:
          maxLength: 6
          minLength: 6
          pattern: '[\d]+'
          type: string
      - description: <p>A subsequent authentication code emitted by the device.</p>
          <p>The format for this parameter is a string of six digits.</p> <important>
          <p>Submit your request immediately after generating the authentication codes.
          If you generate the codes and then wait too long to submit the request,
          the MFA device successfully associates with the user but the MFA device
          becomes out of sync. This happens because time-based one-time passwords
          (TOTP) expire after a short period of time. If this happens, you can <a
          href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_mfa_sync.html">resync
          the device</a>.</p> </important>
        in: query
        name: AuthenticationCode2
        required: true
        schema:
          maxLength: 6
          minLength: 6
          pattern: '[\d]+'
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
          description: EntityAlreadyExistsException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityTemporarilyUnmodifiableException'
          description: EntityTemporarilyUnmodifiableException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidAuthenticationCodeException'
          description: InvalidAuthenticationCodeException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '485':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: EnableMFADevice
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: Enables the specified MFA device and associates it with the specified
        IAM user. When enabled, the MFA device is required for every subsequent login
        by the IAM user associated with the device.
      operationId: POST_EnableMFADevice
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/EnableMFADeviceRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
          description: EntityAlreadyExistsException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityTemporarilyUnmodifiableException'
          description: EntityTemporarilyUnmodifiableException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidAuthenticationCodeException'
          description: InvalidAuthenticationCodeException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '485':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: EnableMFADevice
  /?Action=GenerateCredentialReport&Version=2010-05-08:
    get:
      description: ' Generates a credential report for the Amazon Web Services account.
        For more information about the credential report, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/credential-reports.html">Getting
        credential reports</a> in the <i>IAM User Guide</i>.'
      operationId: GET_GenerateCredentialReport
      parameters: []
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GenerateCredentialReportResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GenerateCredentialReport
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: ' Generates a credential report for the Amazon Web Services account.
        For more information about the credential report, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/credential-reports.html">Getting
        credential reports</a> in the <i>IAM User Guide</i>.'
      operationId: POST_GenerateCredentialReport
      parameters: []
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GenerateCredentialReportResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GenerateCredentialReport
  /?Action=GenerateOrganizationsAccessReport&Version=2010-05-08:
    get:
      description: "<p>Generates a report for service last accessed data for Organizations.\
        \ You can generate a report for any entities (organization root, organizational\
        \ unit, or account) or policies in your organization.</p> <p>To call this\
        \ operation, you must be signed in using your Organizations management account\
        \ credentials. You can use your long-term IAM user or root user credentials,\
        \ or temporary credentials from assuming an IAM role. SCPs must be enabled\
        \ for your organization root. You must have the required IAM and Organizations\
        \ permissions. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html\"\
        >Refining permissions using service last accessed data</a> in the <i>IAM User\
        \ Guide</i>.</p> <p>You can generate a service last accessed data report for\
        \ entities by specifying only the entity's path. This data includes a list\
        \ of services that are allowed by any service control policies (SCPs) that\
        \ apply to the entity.</p> <p>You can generate a service last accessed data\
        \ report for a policy by specifying an entity's path and an optional Organizations\
        \ policy ID. This data includes a list of services that are allowed by the\
        \ specified SCP.</p> <p>For each service in both report types, the data includes\
        \ the most recent account activity that the policy allows to account principals\
        \ in the entity or the entity's children. For important information about\
        \ the data, reporting period, permissions required, troubleshooting, and supported\
        \ Regions see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html\"\
        >Reducing permissions using service last accessed data</a> in the <i>IAM User\
        \ Guide</i>.</p> <important> <p>The data includes\_all\_attempts to access\
        \ Amazon Web Services, not just the successful ones. This includes all attempts\
        \ that were made using the Amazon Web Services Management Console, the Amazon\
        \ Web Services API through any of the SDKs, or any of the command line tools.\
        \ An unexpected entry in the service last accessed data does not mean that\
        \ an account has been compromised, because the request might have been denied.\
        \ Refer to your CloudTrail logs as the authoritative source for information\
        \ about all API calls and whether they were successful or denied access. For\
        \ more information, see\_<a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/cloudtrail-integration.html\"\
        >Logging IAM events with CloudTrail</a> in the <i>IAM User Guide</i>.</p>\
        \ </important> <p>This operation returns a <code>JobId</code>. Use this parameter\
        \ in the <code> <a>GetOrganizationsAccessReport</a> </code> operation to check\
        \ the status of the report generation. To check the status of this request,\
        \ use the <code>JobId</code> parameter in the <code> <a>GetOrganizationsAccessReport</a>\
        \ </code> operation and test the <code>JobStatus</code> response parameter.\
        \ When the job is complete, you can retrieve the report.</p> <p>To generate\
        \ a service last accessed data report for entities, specify an entity path\
        \ without specifying the optional Organizations policy ID. The type of entity\
        \ that you specify determines the data returned in the report.</p> <ul> <li>\
        \ <p> <b>Root</b> \u2013 When you specify the organizations root as the entity,\
        \ the resulting report lists all of the services allowed by SCPs that are\
        \ attached to your root. For each service, the report includes data for all\
        \ accounts in your organization except the management account, because the\
        \ management account is not limited by SCPs.</p> </li> <li> <p> <b>OU</b>\
        \ \u2013 When you specify an organizational unit (OU) as the entity, the resulting\
        \ report lists all of the services allowed by SCPs that are attached to the\
        \ OU and its parents. For each service, the report includes data for all accounts\
        \ in the OU or its children. This data excludes the management account, because\
        \ the management account is not limited by SCPs.</p> </li> <li> <p> <b>management\
        \ account</b> \u2013 When you specify the management account, the resulting\
        \ report lists all Amazon Web Services services, because the management account\
        \ is not limited by SCPs. For each service, the report includes data for only\
        \ the management account.</p> </li> <li> <p> <b>Account</b> \u2013 When you\
        \ specify another account as the entity, the resulting report lists all of\
        \ the services allowed by SCPs that are attached to the account and its parents.\
        \ For each service, the report includes data for only the specified account.</p>\
        \ </li> </ul> <p>To generate a service last accessed data report for policies,\
        \ specify an entity path and the optional Organizations policy ID. The type\
        \ of entity that you specify determines the data returned for each service.</p>\
        \ <ul> <li> <p> <b>Root</b> \u2013 When you specify the root entity and a\
        \ policy ID, the resulting report lists all of the services that are allowed\
        \ by the specified SCP. For each service, the report includes data for all\
        \ accounts in your organization to which the SCP applies. This data excludes\
        \ the management account, because the management account is not limited by\
        \ SCPs. If the SCP is not attached to any entities in the organization, then\
        \ the report will return a list of services with no data.</p> </li> <li> <p>\
        \ <b>OU</b> \u2013 When you specify an OU entity and a policy ID, the resulting\
        \ report lists all of the services that are allowed by the specified SCP.\
        \ For each service, the report includes data for all accounts in the OU or\
        \ its children to which the SCP applies. This means that other accounts outside\
        \ the OU that are affected by the SCP might not be included in the data. This\
        \ data excludes the management account, because the management account is\
        \ not limited by SCPs. If the SCP is not attached to the OU or one of its\
        \ children, the report will return a list of services with no data.</p> </li>\
        \ <li> <p> <b>management account</b> \u2013 When you specify the management\
        \ account, the resulting report lists all Amazon Web Services services, because\
        \ the management account is not limited by SCPs. If you specify a policy ID\
        \ in the CLI or API, the policy is ignored. For each service, the report includes\
        \ data for only the management account.</p> </li> <li> <p> <b>Account</b>\
        \ \u2013 When you specify another account entity and a policy ID, the resulting\
        \ report lists all of the services that are allowed by the specified SCP.\
        \ For each service, the report includes data for only the specified account.\
        \ This means that other accounts in the organization that are affected by\
        \ the SCP might not be included in the data. If the SCP is not attached to\
        \ the account, the report will return a list of services with no data.</p>\
        \ </li> </ul> <note> <p>Service last accessed data does not use other policy\
        \ types when determining whether a principal could access a service. These\
        \ other policy types include identity-based policies, resource-based policies,\
        \ access control lists, IAM permissions boundaries, and STS assume role policies.\
        \ It only applies SCP logic. For more about the evaluation of policy types,\
        \ see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_evaluation-logic.html#policy-eval-basics\"\
        >Evaluating policies</a> in the <i>IAM User Guide</i>.</p> </note> <p>For\
        \ more information about service last accessed data, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html\"\
        >Reducing policy scope by viewing user activity</a> in the <i>IAM User Guide</i>.</p>"
      operationId: GET_GenerateOrganizationsAccessReport
      parameters:
      - description: The path of the Organizations entity (root, OU, or account).
          You can build an entity path using the known structure of your organization.
          For example, assume that your account ID is <code>123456789012</code> and
          its parent OU ID is <code>ou-rge0-awsabcde</code>. The organization root
          ID is <code>r-f6g7h8i9j0example</code> and your organization ID is <code>o-a1b2c3d4e5</code>.
          Your entity path is <code>o-a1b2c3d4e5/r-f6g7h8i9j0example/ou-rge0-awsabcde/123456789012</code>.
        in: query
        name: EntityPath
        required: true
        schema:
          maxLength: 427
          minLength: 19
          pattern: ^o-[0-9a-z]{10,32}\/r-[0-9a-z]{4,32}[0-9a-z-\/]*
          type: string
      - description: <p>The identifier of the Organizations service control policy
          (SCP). This parameter is optional.</p> <p>This ID is used to generate information
          about when an account principal that is limited by the SCP attempted to
          access an Amazon Web Services service.</p>
        in: query
        name: OrganizationsPolicyId
        required: false
        schema:
          pattern: ^p-[0-9a-zA-Z_]{8,128}$
          type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GenerateOrganizationsAccessReportResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReportGenerationLimitExceededException'
          description: ReportGenerationLimitExceededException
      x-aws-operation-name: GenerateOrganizationsAccessReport
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: "<p>Generates a report for service last accessed data for Organizations.\
        \ You can generate a report for any entities (organization root, organizational\
        \ unit, or account) or policies in your organization.</p> <p>To call this\
        \ operation, you must be signed in using your Organizations management account\
        \ credentials. You can use your long-term IAM user or root user credentials,\
        \ or temporary credentials from assuming an IAM role. SCPs must be enabled\
        \ for your organization root. You must have the required IAM and Organizations\
        \ permissions. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html\"\
        >Refining permissions using service last accessed data</a> in the <i>IAM User\
        \ Guide</i>.</p> <p>You can generate a service last accessed data report for\
        \ entities by specifying only the entity's path. This data includes a list\
        \ of services that are allowed by any service control policies (SCPs) that\
        \ apply to the entity.</p> <p>You can generate a service last accessed data\
        \ report for a policy by specifying an entity's path and an optional Organizations\
        \ policy ID. This data includes a list of services that are allowed by the\
        \ specified SCP.</p> <p>For each service in both report types, the data includes\
        \ the most recent account activity that the policy allows to account principals\
        \ in the entity or the entity's children. For important information about\
        \ the data, reporting period, permissions required, troubleshooting, and supported\
        \ Regions see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html\"\
        >Reducing permissions using service last accessed data</a> in the <i>IAM User\
        \ Guide</i>.</p> <important> <p>The data includes\_all\_attempts to access\
        \ Amazon Web Services, not just the successful ones. This includes all attempts\
        \ that were made using the Amazon Web Services Management Console, the Amazon\
        \ Web Services API through any of the SDKs, or any of the command line tools.\
        \ An unexpected entry in the service last accessed data does not mean that\
        \ an account has been compromised, because the request might have been denied.\
        \ Refer to your CloudTrail logs as the authoritative source for information\
        \ about all API calls and whether they were successful or denied access. For\
        \ more information, see\_<a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/cloudtrail-integration.html\"\
        >Logging IAM events with CloudTrail</a> in the <i>IAM User Guide</i>.</p>\
        \ </important> <p>This operation returns a <code>JobId</code>. Use this parameter\
        \ in the <code> <a>GetOrganizationsAccessReport</a> </code> operation to check\
        \ the status of the report generation. To check the status of this request,\
        \ use the <code>JobId</code> parameter in the <code> <a>GetOrganizationsAccessReport</a>\
        \ </code> operation and test the <code>JobStatus</code> response parameter.\
        \ When the job is complete, you can retrieve the report.</p> <p>To generate\
        \ a service last accessed data report for entities, specify an entity path\
        \ without specifying the optional Organizations policy ID. The type of entity\
        \ that you specify determines the data returned in the report.</p> <ul> <li>\
        \ <p> <b>Root</b> \u2013 When you specify the organizations root as the entity,\
        \ the resulting report lists all of the services allowed by SCPs that are\
        \ attached to your root. For each service, the report includes data for all\
        \ accounts in your organization except the management account, because the\
        \ management account is not limited by SCPs.</p> </li> <li> <p> <b>OU</b>\
        \ \u2013 When you specify an organizational unit (OU) as the entity, the resulting\
        \ report lists all of the services allowed by SCPs that are attached to the\
        \ OU and its parents. For each service, the report includes data for all accounts\
        \ in the OU or its children. This data excludes the management account, because\
        \ the management account is not limited by SCPs.</p> </li> <li> <p> <b>management\
        \ account</b> \u2013 When you specify the management account, the resulting\
        \ report lists all Amazon Web Services services, because the management account\
        \ is not limited by SCPs. For each service, the report includes data for only\
        \ the management account.</p> </li> <li> <p> <b>Account</b> \u2013 When you\
        \ specify another account as the entity, the resulting report lists all of\
        \ the services allowed by SCPs that are attached to the account and its parents.\
        \ For each service, the report includes data for only the specified account.</p>\
        \ </li> </ul> <p>To generate a service last accessed data report for policies,\
        \ specify an entity path and the optional Organizations policy ID. The type\
        \ of entity that you specify determines the data returned for each service.</p>\
        \ <ul> <li> <p> <b>Root</b> \u2013 When you specify the root entity and a\
        \ policy ID, the resulting report lists all of the services that are allowed\
        \ by the specified SCP. For each service, the report includes data for all\
        \ accounts in your organization to which the SCP applies. This data excludes\
        \ the management account, because the management account is not limited by\
        \ SCPs. If the SCP is not attached to any entities in the organization, then\
        \ the report will return a list of services with no data.</p> </li> <li> <p>\
        \ <b>OU</b> \u2013 When you specify an OU entity and a policy ID, the resulting\
        \ report lists all of the services that are allowed by the specified SCP.\
        \ For each service, the report includes data for all accounts in the OU or\
        \ its children to which the SCP applies. This means that other accounts outside\
        \ the OU that are affected by the SCP might not be included in the data. This\
        \ data excludes the management account, because the management account is\
        \ not limited by SCPs. If the SCP is not attached to the OU or one of its\
        \ children, the report will return a list of services with no data.</p> </li>\
        \ <li> <p> <b>management account</b> \u2013 When you specify the management\
        \ account, the resulting report lists all Amazon Web Services services, because\
        \ the management account is not limited by SCPs. If you specify a policy ID\
        \ in the CLI or API, the policy is ignored. For each service, the report includes\
        \ data for only the management account.</p> </li> <li> <p> <b>Account</b>\
        \ \u2013 When you specify another account entity and a policy ID, the resulting\
        \ report lists all of the services that are allowed by the specified SCP.\
        \ For each service, the report includes data for only the specified account.\
        \ This means that other accounts in the organization that are affected by\
        \ the SCP might not be included in the data. If the SCP is not attached to\
        \ the account, the report will return a list of services with no data.</p>\
        \ </li> </ul> <note> <p>Service last accessed data does not use other policy\
        \ types when determining whether a principal could access a service. These\
        \ other policy types include identity-based policies, resource-based policies,\
        \ access control lists, IAM permissions boundaries, and STS assume role policies.\
        \ It only applies SCP logic. For more about the evaluation of policy types,\
        \ see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_evaluation-logic.html#policy-eval-basics\"\
        >Evaluating policies</a> in the <i>IAM User Guide</i>.</p> </note> <p>For\
        \ more information about service last accessed data, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html\"\
        >Reducing policy scope by viewing user activity</a> in the <i>IAM User Guide</i>.</p>"
      operationId: POST_GenerateOrganizationsAccessReport
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GenerateOrganizationsAccessReportRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GenerateOrganizationsAccessReportResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReportGenerationLimitExceededException'
          description: ReportGenerationLimitExceededException
      x-aws-operation-name: GenerateOrganizationsAccessReport
  /?Action=GenerateServiceLastAccessedDetails&Version=2010-05-08:
    get:
      description: "<p>Generates a report that includes details about when an IAM\
        \ resource (user, group, role, or policy) was last used in an attempt to access\
        \ Amazon Web Services services. Recent activity usually appears within four\
        \ hours. IAM reports activity for at least the last 400 days, or less if your\
        \ Region began supporting this feature within the last year. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#access-advisor_tracking-period\"\
        >Regions where data is tracked</a>.</p> <important> <p>The service last accessed\
        \ data includes\_all\_attempts to access an Amazon Web Services API, not just\
        \ the successful ones. This includes all attempts that were made using the\
        \ Amazon Web Services Management Console, the Amazon Web Services API through\
        \ any of the SDKs, or any of the command line tools. An unexpected entry in\
        \ the service last accessed data does not mean that your account has been\
        \ compromised, because the request might have been denied. Refer to your CloudTrail\
        \ logs as the authoritative source for information about all API calls and\
        \ whether they were successful or denied access. For more information, see\_\
        <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/cloudtrail-integration.html\"\
        >Logging IAM events with CloudTrail</a> in the <i>IAM User Guide</i>.</p>\
        \ </important> <p>The <code>GenerateServiceLastAccessedDetails</code> operation\
        \ returns a <code>JobId</code>. Use this parameter in the following operations\
        \ to retrieve the following details from your report: </p> <ul> <li> <p> <a>GetServiceLastAccessedDetails</a>\
        \ \u2013 Use this operation for users, groups, roles, or policies to list\
        \ every Amazon Web Services service that the resource could access using permissions\
        \ policies. For each service, the response includes information about the\
        \ most recent access attempt.</p> <p>The <code>JobId</code> returned by <code>GenerateServiceLastAccessedDetail</code>\
        \ must be used by the same role within a session, or by the same user when\
        \ used to call <code>GetServiceLastAccessedDetail</code>.</p> </li> <li> <p>\
        \ <a>GetServiceLastAccessedDetailsWithEntities</a> \u2013 Use this operation\
        \ for groups and policies to list information about the associated entities\
        \ (users or roles) that attempted to access a specific Amazon Web Services\
        \ service. </p> </li> </ul> <p>To check the status of the <code>GenerateServiceLastAccessedDetails</code>\
        \ request, use the <code>JobId</code> parameter in the same operations and\
        \ test the <code>JobStatus</code> response parameter.</p> <p>For additional\
        \ information about the permissions policies that allow an identity (user,\
        \ group, or role) to access specific services, use the <a>ListPoliciesGrantingServiceAccess</a>\
        \ operation.</p> <note> <p>Service last accessed data does not use other policy\
        \ types when determining whether a resource could access a service. These\
        \ other policy types include resource-based policies, access control lists,\
        \ Organizations policies, IAM permissions boundaries, and STS assume role\
        \ policies. It only applies permissions policy logic. For more about the evaluation\
        \ of policy types, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_evaluation-logic.html#policy-eval-basics\"\
        >Evaluating policies</a> in the <i>IAM User Guide</i>.</p> </note> <p>For\
        \ more information about service and action last accessed data, see <a href=\"\
        https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html\"\
        >Reducing permissions using service last accessed data</a> in the <i>IAM User\
        \ Guide</i>.</p>"
      operationId: GET_GenerateServiceLastAccessedDetails
      parameters:
      - description: The ARN of the IAM resource (user, group, role, or managed policy)
          used to generate information about when the resource was last used in an
          attempt to access an Amazon Web Services service.
        in: query
        name: Arn
        required: true
        schema:
          description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers
            for Amazon Web Services resources.</p> <p>For more information about ARNs,
            go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
            </p>
          maxLength: 2048
          minLength: 20
          type: string
      - description: The level of detail that you want to generate. You can specify
          whether you want to generate information about the last attempt to access
          services or actions. If you specify service-level granularity, this operation
          generates only service data. If you specify action-level granularity, it
          generates service and action data. If you don't include this optional parameter,
          the operation generates service data.
        in: query
        name: Granularity
        required: false
        schema:
          enum:
          - SERVICE_LEVEL
          - ACTION_LEVEL
          type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GenerateServiceLastAccessedDetailsResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-aws-operation-name: GenerateServiceLastAccessedDetails
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: "<p>Generates a report that includes details about when an IAM\
        \ resource (user, group, role, or policy) was last used in an attempt to access\
        \ Amazon Web Services services. Recent activity usually appears within four\
        \ hours. IAM reports activity for at least the last 400 days, or less if your\
        \ Region began supporting this feature within the last year. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#access-advisor_tracking-period\"\
        >Regions where data is tracked</a>.</p> <important> <p>The service last accessed\
        \ data includes\_all\_attempts to access an Amazon Web Services API, not just\
        \ the successful ones. This includes all attempts that were made using the\
        \ Amazon Web Services Management Console, the Amazon Web Services API through\
        \ any of the SDKs, or any of the command line tools. An unexpected entry in\
        \ the service last accessed data does not mean that your account has been\
        \ compromised, because the request might have been denied. Refer to your CloudTrail\
        \ logs as the authoritative source for information about all API calls and\
        \ whether they were successful or denied access. For more information, see\_\
        <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/cloudtrail-integration.html\"\
        >Logging IAM events with CloudTrail</a> in the <i>IAM User Guide</i>.</p>\
        \ </important> <p>The <code>GenerateServiceLastAccessedDetails</code> operation\
        \ returns a <code>JobId</code>. Use this parameter in the following operations\
        \ to retrieve the following details from your report: </p> <ul> <li> <p> <a>GetServiceLastAccessedDetails</a>\
        \ \u2013 Use this operation for users, groups, roles, or policies to list\
        \ every Amazon Web Services service that the resource could access using permissions\
        \ policies. For each service, the response includes information about the\
        \ most recent access attempt.</p> <p>The <code>JobId</code> returned by <code>GenerateServiceLastAccessedDetail</code>\
        \ must be used by the same role within a session, or by the same user when\
        \ used to call <code>GetServiceLastAccessedDetail</code>.</p> </li> <li> <p>\
        \ <a>GetServiceLastAccessedDetailsWithEntities</a> \u2013 Use this operation\
        \ for groups and policies to list information about the associated entities\
        \ (users or roles) that attempted to access a specific Amazon Web Services\
        \ service. </p> </li> </ul> <p>To check the status of the <code>GenerateServiceLastAccessedDetails</code>\
        \ request, use the <code>JobId</code> parameter in the same operations and\
        \ test the <code>JobStatus</code> response parameter.</p> <p>For additional\
        \ information about the permissions policies that allow an identity (user,\
        \ group, or role) to access specific services, use the <a>ListPoliciesGrantingServiceAccess</a>\
        \ operation.</p> <note> <p>Service last accessed data does not use other policy\
        \ types when determining whether a resource could access a service. These\
        \ other policy types include resource-based policies, access control lists,\
        \ Organizations policies, IAM permissions boundaries, and STS assume role\
        \ policies. It only applies permissions policy logic. For more about the evaluation\
        \ of policy types, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_evaluation-logic.html#policy-eval-basics\"\
        >Evaluating policies</a> in the <i>IAM User Guide</i>.</p> </note> <p>For\
        \ more information about service and action last accessed data, see <a href=\"\
        https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html\"\
        >Reducing permissions using service last accessed data</a> in the <i>IAM User\
        \ Guide</i>.</p>"
      operationId: POST_GenerateServiceLastAccessedDetails
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GenerateServiceLastAccessedDetailsRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GenerateServiceLastAccessedDetailsResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-aws-operation-name: GenerateServiceLastAccessedDetails
  /?Action=GetAccessKeyLastUsed&Version=2010-05-08:
    get:
      description: Retrieves information about when the specified access key was last
        used. The information includes the date and time of last use, along with the
        Amazon Web Services service and Region that were specified in the last request
        made with that key.
      operationId: GET_GetAccessKeyLastUsed
      parameters:
      - description: <p>The identifier of an access key.</p> <p>This parameter allows
          (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters that can consist of any upper or lowercased letter
          or digit.</p>
        in: query
        name: AccessKeyId
        required: true
        schema:
          maxLength: 128
          minLength: 16
          pattern: '[\w]+'
          type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetAccessKeyLastUsedResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
      x-aws-operation-name: GetAccessKeyLastUsed
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves information about when the specified access key was last
        used. The information includes the date and time of last use, along with the
        Amazon Web Services service and Region that were specified in the last request
        made with that key.
      operationId: POST_GetAccessKeyLastUsed
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetAccessKeyLastUsedRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetAccessKeyLastUsedResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
      x-aws-operation-name: GetAccessKeyLastUsed
  /?Action=GetAccountAuthorizationDetails&Version=2010-05-08:
    get:
      description: <p>Retrieves information about all IAM users, groups, roles, and
        policies in your Amazon Web Services account, including their relationships
        to one another. Use this operation to obtain a snapshot of the configuration
        of IAM permissions (users, groups, roles, and policies) in your account.</p>
        <note> <p>Policies returned by this operation are URL-encoded compliant with
        <a href="https://tools.ietf.org/html/rfc3986">RFC 3986</a>. You can use a
        URL decoding method to convert the policy back to plain JSON text. For example,
        if you use Java, you can use the <code>decode</code> method of the <code>java.net.URLDecoder</code>
        utility class in the Java SDK. Other languages and SDKs provide similar functionality.</p>
        </note> <p>You can optionally filter the results using the <code>Filter</code>
        parameter. You can paginate the results using the <code>MaxItems</code> and
        <code>Marker</code> parameters.</p>
      operationId: GET_GetAccountAuthorizationDetails
      parameters:
      - description: <p>A list of entity types used to filter the results. Only the
          entities that match the types you specify are included in the output. Use
          the value <code>LocalManagedPolicy</code> to include customer managed policies.</p>
          <p>The format for this parameter is a comma-separated (if more than one)
          list of strings. Each string value in the list must be one of the valid
          values listed below.</p>
        in: query
        name: Filter
        required: false
        schema:
          items:
            $ref: '#/components/schemas/EntityType'
          type: array
      - description: <p>Use this only when paginating results to indicate the maximum
          number of items you want in the response. If additional items exist beyond
          the maximum you specify, the <code>IsTruncated</code> response element is
          <code>true</code>.</p> <p>If you do not include this parameter, the number
          of items defaults to 100. Note that IAM might return fewer results, even
          when there are more results available. In that case, the <code>IsTruncated</code>
          response element returns <code>true</code>, and <code>Marker</code> contains
          a value to include in the subsequent call that tells the service where to
          continue from.</p>
        in: query
        name: MaxItems
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      - description: Use this parameter only when paginating results and only after
          you receive a response indicating that the results are truncated. Set it
          to the value of the <code>Marker</code> element in the response that you
          received to indicate where the next call should start.
        in: query
        name: Marker
        required: false
        schema:
          maxLength: 320
          minLength: 1
          pattern: '[\u0020-\u00FF]+'
          type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetAccountAuthorizationDetailsResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetAccountAuthorizationDetails
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Retrieves information about all IAM users, groups, roles, and
        policies in your Amazon Web Services account, including their relationships
        to one another. Use this operation to obtain a snapshot of the configuration
        of IAM permissions (users, groups, roles, and policies) in your account.</p>
        <note> <p>Policies returned by this operation are URL-encoded compliant with
        <a href="https://tools.ietf.org/html/rfc3986">RFC 3986</a>. You can use a
        URL decoding method to convert the policy back to plain JSON text. For example,
        if you use Java, you can use the <code>decode</code> method of the <code>java.net.URLDecoder</code>
        utility class in the Java SDK. Other languages and SDKs provide similar functionality.</p>
        </note> <p>You can optionally filter the results using the <code>Filter</code>
        parameter. You can paginate the results using the <code>MaxItems</code> and
        <code>Marker</code> parameters.</p>
      operationId: POST_GetAccountAuthorizationDetails
      parameters:
      - description: Pagination limit
        in: query
        name: MaxItems
        required: false
        schema:
          type: string
      - description: Pagination token
        in: query
        name: Marker
        required: false
        schema:
          type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetAccountAuthorizationDetailsRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetAccountAuthorizationDetailsResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetAccountAuthorizationDetails
  /?Action=GetAccountPasswordPolicy&Version=2010-05-08:
    get:
      description: Retrieves the password policy for the Amazon Web Services account.
        This tells you the complexity requirements and mandatory rotation periods
        for the IAM user passwords in your account. For more information about using
        a password policy, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingPasswordPolicies.html">Managing
        an IAM password policy</a>.
      operationId: GET_GetAccountPasswordPolicy
      parameters: []
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetAccountPasswordPolicyResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetAccountPasswordPolicy
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves the password policy for the Amazon Web Services account.
        This tells you the complexity requirements and mandatory rotation periods
        for the IAM user passwords in your account. For more information about using
        a password policy, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingPasswordPolicies.html">Managing
        an IAM password policy</a>.
      operationId: POST_GetAccountPasswordPolicy
      parameters: []
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetAccountPasswordPolicyResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetAccountPasswordPolicy
  /?Action=GetAccountSummary&Version=2010-05-08:
    get:
      description: <p>Retrieves information about IAM entity usage and IAM quotas
        in the Amazon Web Services account.</p> <p> For information about IAM quotas,
        see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html">IAM
        and STS quotas</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_GetAccountSummary
      parameters: []
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetAccountSummaryResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetAccountSummary
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Retrieves information about IAM entity usage and IAM quotas
        in the Amazon Web Services account.</p> <p> For information about IAM quotas,
        see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html">IAM
        and STS quotas</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_GetAccountSummary
      parameters: []
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetAccountSummaryResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetAccountSummary
  /?Action=GetContextKeysForCustomPolicy&Version=2010-05-08:
    get:
      description: <p>Gets a list of all of the context keys referenced in the input
        policies. The policies are supplied as a list of one or more strings. To get
        the context keys from policies associated with an IAM user, group, or role,
        use <a>GetContextKeysForPrincipalPolicy</a>.</p> <p>Context keys are variables
        maintained by Amazon Web Services and its services that provide details about
        the context of an API query request. Context keys can be evaluated by testing
        against a value specified in an IAM policy. Use <code>GetContextKeysForCustomPolicy</code>
        to understand what key names and values you must supply when you call <a>SimulateCustomPolicy</a>.
        Note that all parameters are shown in unencoded form here for clarity but
        must be URL encoded to be included as a part of a real HTML request.</p>
      operationId: GET_GetContextKeysForCustomPolicy
      parameters:
      - description: <p>A list of policies for which you want the list of context
          keys referenced in those policies. Each document is specified as a string
          containing the complete, valid JSON text of an IAM policy.</p> <p>The <a
          href="http://wikipedia.org/wiki/regex">regex pattern</a> used to validate
          this parameter is a string of characters consisting of the following:</p>
          <ul> <li> <p>Any printable ASCII character ranging from the space character
          (<code>\u0020</code>) through the end of the ASCII character range</p> </li>
          <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement
          character set (through <code>\u00FF</code>)</p> </li> <li> <p>The special
          characters tab (<code>\u0009</code>), line feed (<code>\u000A</code>), and
          carriage return (<code>\u000D</code>)</p> </li> </ul>
        in: query
        name: PolicyInputList
        required: true
        schema:
          items:
            $ref: '#/components/schemas/policyDocumentType'
          type: array
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetContextKeysForPolicyResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-aws-operation-name: GetContextKeysForCustomPolicy
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Gets a list of all of the context keys referenced in the input
        policies. The policies are supplied as a list of one or more strings. To get
        the context keys from policies associated with an IAM user, group, or role,
        use <a>GetContextKeysForPrincipalPolicy</a>.</p> <p>Context keys are variables
        maintained by Amazon Web Services and its services that provide details about
        the context of an API query request. Context keys can be evaluated by testing
        against a value specified in an IAM policy. Use <code>GetContextKeysForCustomPolicy</code>
        to understand what key names and values you must supply when you call <a>SimulateCustomPolicy</a>.
        Note that all parameters are shown in unencoded form here for clarity but
        must be URL encoded to be included as a part of a real HTML request.</p>
      operationId: POST_GetContextKeysForCustomPolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetContextKeysForCustomPolicyRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetContextKeysForPolicyResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-aws-operation-name: GetContextKeysForCustomPolicy
  /?Action=GetContextKeysForPrincipalPolicy&Version=2010-05-08:
    get:
      description: <p>Gets a list of all of the context keys referenced in all the
        IAM policies that are attached to the specified IAM entity. The entity can
        be an IAM user, group, or role. If you specify a user, then the request also
        includes all of the policies attached to groups that the user is a member
        of.</p> <p>You can optionally include a list of one or more additional policies,
        specified as strings. If you want to include <i>only</i> a list of policies
        by string, use <a>GetContextKeysForCustomPolicy</a> instead.</p> <p> <b>Note:</b>
        This operation discloses information about the permissions granted to other
        users. If you do not want users to see other user's permissions, then consider
        allowing them to use <a>GetContextKeysForCustomPolicy</a> instead.</p> <p>Context
        keys are variables maintained by Amazon Web Services and its services that
        provide details about the context of an API query request. Context keys can
        be evaluated by testing against a value in an IAM policy. Use <a>GetContextKeysForPrincipalPolicy</a>
        to understand what key names and values you must supply when you call <a>SimulatePrincipalPolicy</a>.</p>
      operationId: GET_GetContextKeysForPrincipalPolicy
      parameters:
      - description: <p>The ARN of a user, group, or role whose policies contain the
          context keys that you want listed. If you specify a user, the list includes
          context keys that are found in all policies that are attached to the user.
          The list also includes all groups that the user is a member of. If you pick
          a group or a role, then it includes only those context keys that are found
          in policies attached to that entity. Note that all parameters are shown
          in unencoded form here for clarity, but must be URL encoded to be included
          as a part of a real HTML request.</p> <p>For more information about ARNs,
          see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
          Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        in: query
        name: PolicySourceArn
        required: true
        schema:
          description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers
            for Amazon Web Services resources.</p> <p>For more information about ARNs,
            go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
            </p>
          maxLength: 2048
          minLength: 20
          type: string
      - description: <p>An optional list of additional policies for which you want
          the list of context keys that are referenced.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> used to validate this parameter is a string of characters consisting
          of the following:</p> <ul> <li> <p>Any printable ASCII character ranging
          from the space character (<code>\u0020</code>) through the end of the ASCII
          character range</p> </li> <li> <p>The printable characters in the Basic
          Latin and Latin-1 Supplement character set (through <code>\u00FF</code>)</p>
          </li> <li> <p>The special characters tab (<code>\u0009</code>), line feed
          (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p> </li>
          </ul>
        in: query
        name: PolicyInputList
        required: false
        schema:
          items:
            $ref: '#/components/schemas/policyDocumentType'
          type: array
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetContextKeysForPolicyResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-aws-operation-name: GetContextKeysForPrincipalPolicy
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Gets a list of all of the context keys referenced in all the
        IAM policies that are attached to the specified IAM entity. The entity can
        be an IAM user, group, or role. If you specify a user, then the request also
        includes all of the policies attached to groups that the user is a member
        of.</p> <p>You can optionally include a list of one or more additional policies,
        specified as strings. If you want to include <i>only</i> a list of policies
        by string, use <a>GetContextKeysForCustomPolicy</a> instead.</p> <p> <b>Note:</b>
        This operation discloses information about the permissions granted to other
        users. If you do not want users to see other user's permissions, then consider
        allowing them to use <a>GetContextKeysForCustomPolicy</a> instead.</p> <p>Context
        keys are variables maintained by Amazon Web Services and its services that
        provide details about the context of an API query request. Context keys can
        be evaluated by testing against a value in an IAM policy. Use <a>GetContextKeysForPrincipalPolicy</a>
        to understand what key names and values you must supply when you call <a>SimulatePrincipalPolicy</a>.</p>
      operationId: POST_GetContextKeysForPrincipalPolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetContextKeysForPrincipalPolicyRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetContextKeysForPolicyResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-aws-operation-name: GetContextKeysForPrincipalPolicy
  /?Action=GetCredentialReport&Version=2010-05-08:
    get:
      description: ' Retrieves a credential report for the Amazon Web Services account.
        For more information about the credential report, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/credential-reports.html">Getting
        credential reports</a> in the <i>IAM User Guide</i>.'
      operationId: GET_GetCredentialReport
      parameters: []
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetCredentialReportResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CredentialReportNotPresentException'
          description: CredentialReportNotPresentException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CredentialReportExpiredException'
          description: CredentialReportExpiredException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CredentialReportNotReadyException'
          description: CredentialReportNotReadyException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetCredentialReport
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: ' Retrieves a credential report for the Amazon Web Services account.
        For more information about the credential report, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/credential-reports.html">Getting
        credential reports</a> in the <i>IAM User Guide</i>.'
      operationId: POST_GetCredentialReport
      parameters: []
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetCredentialReportResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CredentialReportNotPresentException'
          description: CredentialReportNotPresentException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CredentialReportExpiredException'
          description: CredentialReportExpiredException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CredentialReportNotReadyException'
          description: CredentialReportNotReadyException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetCredentialReport
  /?Action=GetGroup&Version=2010-05-08:
    get:
      description: ' Returns a list of IAM users that are in the specified IAM group.
        You can paginate the results using the <code>MaxItems</code> and <code>Marker</code>
        parameters.'
      operationId: GET_GetGroup
      parameters:
      - description: '<p>The name of the group.</p> <p>This parameter allows (through
          its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string
          of characters consisting of upper and lowercase alphanumeric characters
          with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        in: query
        name: GroupName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: Use this parameter only when paginating results and only after
          you receive a response indicating that the results are truncated. Set it
          to the value of the <code>Marker</code> element in the response that you
          received to indicate where the next call should start.
        in: query
        name: Marker
        required: false
        schema:
          maxLength: 320
          minLength: 1
          pattern: '[\u0020-\u00FF]+'
          type: string
      - description: <p>Use this only when paginating results to indicate the maximum
          number of items you want in the response. If additional items exist beyond
          the maximum you specify, the <code>IsTruncated</code> response element is
          <code>true</code>.</p> <p>If you do not include this parameter, the number
          of items defaults to 100. Note that IAM might return fewer results, even
          when there are more results available. In that case, the <code>IsTruncated</code>
          response element returns <code>true</code>, and <code>Marker</code> contains
          a value to include in the subsequent call that tells the service where to
          continue from.</p>
        in: query
        name: MaxItems
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetGroupResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetGroup
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: ' Returns a list of IAM users that are in the specified IAM group.
        You can paginate the results using the <code>MaxItems</code> and <code>Marker</code>
        parameters.'
      operationId: POST_GetGroup
      parameters:
      - description: Pagination limit
        in: query
        name: MaxItems
        required: false
        schema:
          type: string
      - description: Pagination token
        in: query
        name: Marker
        required: false
        schema:
          type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetGroupRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetGroupResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetGroup
  /?Action=GetGroupPolicy&Version=2010-05-08:
    get:
      description: <p>Retrieves the specified inline policy document that is embedded
        in the specified IAM group.</p> <note> <p>Policies returned by this operation
        are URL-encoded compliant with <a href="https://tools.ietf.org/html/rfc3986">RFC
        3986</a>. You can use a URL decoding method to convert the policy back to
        plain JSON text. For example, if you use Java, you can use the <code>decode</code>
        method of the <code>java.net.URLDecoder</code> utility class in the Java SDK.
        Other languages and SDKs provide similar functionality.</p> </note> <p>An
        IAM group can also have managed policies attached to it. To retrieve a managed
        policy document that is attached to a group, use <a>GetPolicy</a> to determine
        the policy's default version, then use <a>GetPolicyVersion</a> to retrieve
        the policy document.</p> <p>For more information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_GetGroupPolicy
      parameters:
      - description: '<p>The name of the group the policy is associated with.</p>
          <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: GroupName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: '<p>The name of the policy document to get.</p> <p>This parameter
          allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters consisting of upper and lowercase alphanumeric characters
          with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        in: query
        name: PolicyName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetGroupPolicyResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetGroupPolicy
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Retrieves the specified inline policy document that is embedded
        in the specified IAM group.</p> <note> <p>Policies returned by this operation
        are URL-encoded compliant with <a href="https://tools.ietf.org/html/rfc3986">RFC
        3986</a>. You can use a URL decoding method to convert the policy back to
        plain JSON text. For example, if you use Java, you can use the <code>decode</code>
        method of the <code>java.net.URLDecoder</code> utility class in the Java SDK.
        Other languages and SDKs provide similar functionality.</p> </note> <p>An
        IAM group can also have managed policies attached to it. To retrieve a managed
        policy document that is attached to a group, use <a>GetPolicy</a> to determine
        the policy's default version, then use <a>GetPolicyVersion</a> to retrieve
        the policy document.</p> <p>For more information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_GetGroupPolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetGroupPolicyRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetGroupPolicyResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetGroupPolicy
  /?Action=GetInstanceProfile&Version=2010-05-08:
    get:
      description: ' Retrieves information about the specified instance profile, including
        the instance profile''s path, GUID, ARN, and role. For more information about
        instance profiles, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html">About
        instance profiles</a> in the <i>IAM User Guide</i>.'
      operationId: GET_GetInstanceProfile
      parameters:
      - description: '<p>The name of the instance profile to get information about.</p>
          <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: InstanceProfileName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetInstanceProfileResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetInstanceProfile
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: ' Retrieves information about the specified instance profile, including
        the instance profile''s path, GUID, ARN, and role. For more information about
        instance profiles, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html">About
        instance profiles</a> in the <i>IAM User Guide</i>.'
      operationId: POST_GetInstanceProfile
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetInstanceProfileRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetInstanceProfileResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetInstanceProfile
  /?Action=GetLoginProfile&Version=2010-05-08:
    get:
      description: <p>Retrieves the user name for the specified IAM user. A login
        profile is created when you create a password for the user to access the Amazon
        Web Services Management Console. If the user does not exist or does not have
        a password, the operation returns a 404 (<code>NoSuchEntity</code>) error.</p>
        <p>If you create an IAM user with access to the console, the <code>CreateDate</code>
        reflects the date you created the initial password for the user.</p> <p>If
        you create an IAM user with programmatic access, and then later add a password
        for the user to access the Amazon Web Services Management Console, the <code>CreateDate</code>
        reflects the initial password creation date. A user with programmatic access
        does not have a login profile unless you create a password for the user to
        access the Amazon Web Services Management Console.</p>
      operationId: GET_GetLoginProfile
      parameters:
      - description: '<p>The name of the user whose login profile you want to retrieve.</p>
          <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: UserName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetLoginProfileResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetLoginProfile
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Retrieves the user name for the specified IAM user. A login
        profile is created when you create a password for the user to access the Amazon
        Web Services Management Console. If the user does not exist or does not have
        a password, the operation returns a 404 (<code>NoSuchEntity</code>) error.</p>
        <p>If you create an IAM user with access to the console, the <code>CreateDate</code>
        reflects the date you created the initial password for the user.</p> <p>If
        you create an IAM user with programmatic access, and then later add a password
        for the user to access the Amazon Web Services Management Console, the <code>CreateDate</code>
        reflects the initial password creation date. A user with programmatic access
        does not have a login profile unless you create a password for the user to
        access the Amazon Web Services Management Console.</p>
      operationId: POST_GetLoginProfile
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetLoginProfileRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetLoginProfileResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetLoginProfile
  /?Action=GetOpenIDConnectProvider&Version=2010-05-08:
    get:
      description: Returns information about the specified OpenID Connect (OIDC) provider
        resource object in IAM.
      operationId: GET_GetOpenIDConnectProvider
      parameters:
      - description: <p>The Amazon Resource Name (ARN) of the OIDC provider resource
          object in IAM to get information for. You can get a list of OIDC provider
          resource ARNs by using the <a>ListOpenIDConnectProviders</a> operation.</p>
          <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
          Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        in: query
        name: OpenIDConnectProviderArn
        required: true
        schema:
          description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers
            for Amazon Web Services resources.</p> <p>For more information about ARNs,
            go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
            </p>
          maxLength: 2048
          minLength: 20
          type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetOpenIDConnectProviderResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetOpenIDConnectProvider
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: Returns information about the specified OpenID Connect (OIDC) provider
        resource object in IAM.
      operationId: POST_GetOpenIDConnectProvider
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetOpenIDConnectProviderRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetOpenIDConnectProviderResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetOpenIDConnectProvider
  /?Action=GetOrganizationsAccessReport&Version=2010-05-08:
    get:
      description: <p>Retrieves the service last accessed data report for Organizations
        that was previously generated using the <code> <a>GenerateOrganizationsAccessReport</a>
        </code> operation. This operation retrieves the status of your report job
        and the report contents.</p> <p>Depending on the parameters that you passed
        when you generated the report, the data returned could include different information.
        For details, see <a>GenerateOrganizationsAccessReport</a>.</p> <p>To call
        this operation, you must be signed in to the management account in your organization.
        SCPs must be enabled for your organization root. You must have permissions
        to perform this operation. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html">Refining
        permissions using service last accessed data</a> in the <i>IAM User Guide</i>.</p>
        <p>For each service that principals in an account (root users, IAM users,
        or IAM roles) could access using SCPs, the operation returns details about
        the most recent access attempt. If there was no attempt, the service is listed
        without details about the most recent attempt to access the service. If the
        operation fails, it returns the reason that it failed.</p> <p>By default,
        the list is sorted by service namespace.</p>
      operationId: GET_GetOrganizationsAccessReport
      parameters:
      - description: The identifier of the request generated by the <a>GenerateOrganizationsAccessReport</a>
          operation.
        in: query
        name: JobId
        required: true
        schema:
          maxLength: 36
          minLength: 36
          type: string
      - description: <p>Use this only when paginating results to indicate the maximum
          number of items you want in the response. If additional items exist beyond
          the maximum you specify, the <code>IsTruncated</code> response element is
          <code>true</code>.</p> <p>If you do not include this parameter, the number
          of items defaults to 100. Note that IAM might return fewer results, even
          when there are more results available. In that case, the <code>IsTruncated</code>
          response element returns <code>true</code>, and <code>Marker</code> contains
          a value to include in the subsequent call that tells the service where to
          continue from.</p>
        in: query
        name: MaxItems
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      - description: Use this parameter only when paginating results and only after
          you receive a response indicating that the results are truncated. Set it
          to the value of the <code>Marker</code> element in the response that you
          received to indicate where the next call should start.
        in: query
        name: Marker
        required: false
        schema:
          maxLength: 320
          minLength: 1
          pattern: '[\u0020-\u00FF]+'
          type: string
      - description: The key that is used to sort the results. If you choose the namespace
          key, the results are returned in alphabetical order. If you choose the time
          key, the results are sorted numerically by the date and time.
        in: query
        name: SortKey
        required: false
        schema:
          enum:
          - SERVICE_NAMESPACE_ASCENDING
          - SERVICE_NAMESPACE_DESCENDING
          - LAST_AUTHENTICATED_TIME_ASCENDING
          - LAST_AUTHENTICATED_TIME_DESCENDING
          type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetOrganizationsAccessReportResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
      x-aws-operation-name: GetOrganizationsAccessReport
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Retrieves the service last accessed data report for Organizations
        that was previously generated using the <code> <a>GenerateOrganizationsAccessReport</a>
        </code> operation. This operation retrieves the status of your report job
        and the report contents.</p> <p>Depending on the parameters that you passed
        when you generated the report, the data returned could include different information.
        For details, see <a>GenerateOrganizationsAccessReport</a>.</p> <p>To call
        this operation, you must be signed in to the management account in your organization.
        SCPs must be enabled for your organization root. You must have permissions
        to perform this operation. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html">Refining
        permissions using service last accessed data</a> in the <i>IAM User Guide</i>.</p>
        <p>For each service that principals in an account (root users, IAM users,
        or IAM roles) could access using SCPs, the operation returns details about
        the most recent access attempt. If there was no attempt, the service is listed
        without details about the most recent attempt to access the service. If the
        operation fails, it returns the reason that it failed.</p> <p>By default,
        the list is sorted by service namespace.</p>
      operationId: POST_GetOrganizationsAccessReport
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetOrganizationsAccessReportRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetOrganizationsAccessReportResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
      x-aws-operation-name: GetOrganizationsAccessReport
  /?Action=GetPolicy&Version=2010-05-08:
    get:
      description: <p>Retrieves information about the specified managed policy, including
        the policy's default version and the total number of IAM users, groups, and
        roles to which the policy is attached. To retrieve the list of the specific
        users, groups, and roles that the policy is attached to, use <a>ListEntitiesForPolicy</a>.
        This operation returns metadata about the policy. To retrieve the actual policy
        document for a specific version of the policy, use <a>GetPolicyVersion</a>.</p>
        <p>This operation retrieves information about managed policies. To retrieve
        information about an inline policy that is embedded with an IAM user, group,
        or role, use <a>GetUserPolicy</a>, <a>GetGroupPolicy</a>, or <a>GetRolePolicy</a>.</p>
        <p>For more information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_GetPolicy
      parameters:
      - description: <p>The Amazon Resource Name (ARN) of the managed policy that
          you want information about.</p> <p>For more information about ARNs, see
          <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
          Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        in: query
        name: PolicyArn
        required: true
        schema:
          description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers
            for Amazon Web Services resources.</p> <p>For more information about ARNs,
            go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
            </p>
          maxLength: 2048
          minLength: 20
          type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetPolicyResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetPolicy
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Retrieves information about the specified managed policy, including
        the policy's default version and the total number of IAM users, groups, and
        roles to which the policy is attached. To retrieve the list of the specific
        users, groups, and roles that the policy is attached to, use <a>ListEntitiesForPolicy</a>.
        This operation returns metadata about the policy. To retrieve the actual policy
        document for a specific version of the policy, use <a>GetPolicyVersion</a>.</p>
        <p>This operation retrieves information about managed policies. To retrieve
        information about an inline policy that is embedded with an IAM user, group,
        or role, use <a>GetUserPolicy</a>, <a>GetGroupPolicy</a>, or <a>GetRolePolicy</a>.</p>
        <p>For more information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_GetPolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetPolicyRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetPolicyResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetPolicy
  /?Action=GetPolicyVersion&Version=2010-05-08:
    get:
      description: <p>Retrieves information about the specified version of the specified
        managed policy, including the policy document.</p> <note> <p>Policies returned
        by this operation are URL-encoded compliant with <a href="https://tools.ietf.org/html/rfc3986">RFC
        3986</a>. You can use a URL decoding method to convert the policy back to
        plain JSON text. For example, if you use Java, you can use the <code>decode</code>
        method of the <code>java.net.URLDecoder</code> utility class in the Java SDK.
        Other languages and SDKs provide similar functionality.</p> </note> <p>To
        list the available versions for a policy, use <a>ListPolicyVersions</a>.</p>
        <p>This operation retrieves information about managed policies. To retrieve
        information about an inline policy that is embedded in a user, group, or role,
        use <a>GetUserPolicy</a>, <a>GetGroupPolicy</a>, or <a>GetRolePolicy</a>.</p>
        <p>For more information about the types of policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>For
        more information about managed policy versions, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning
        for managed policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_GetPolicyVersion
      parameters:
      - description: <p>The Amazon Resource Name (ARN) of the managed policy that
          you want information about.</p> <p>For more information about ARNs, see
          <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
          Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        in: query
        name: PolicyArn
        required: true
        schema:
          description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers
            for Amazon Web Services resources.</p> <p>For more information about ARNs,
            go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
            </p>
          maxLength: 2048
          minLength: 20
          type: string
      - description: <p>Identifies the policy version to retrieve.</p> <p>This parameter
          allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters that consists of the lowercase letter 'v' followed
          by one or two digits, and optionally followed by a period '.' and a string
          of letters and digits.</p>
        in: query
        name: VersionId
        required: true
        schema:
          pattern: v[1-9][0-9]*(\.[A-Za-z0-9-]*)?
          type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetPolicyVersionResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetPolicyVersion
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Retrieves information about the specified version of the specified
        managed policy, including the policy document.</p> <note> <p>Policies returned
        by this operation are URL-encoded compliant with <a href="https://tools.ietf.org/html/rfc3986">RFC
        3986</a>. You can use a URL decoding method to convert the policy back to
        plain JSON text. For example, if you use Java, you can use the <code>decode</code>
        method of the <code>java.net.URLDecoder</code> utility class in the Java SDK.
        Other languages and SDKs provide similar functionality.</p> </note> <p>To
        list the available versions for a policy, use <a>ListPolicyVersions</a>.</p>
        <p>This operation retrieves information about managed policies. To retrieve
        information about an inline policy that is embedded in a user, group, or role,
        use <a>GetUserPolicy</a>, <a>GetGroupPolicy</a>, or <a>GetRolePolicy</a>.</p>
        <p>For more information about the types of policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>For
        more information about managed policy versions, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning
        for managed policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_GetPolicyVersion
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetPolicyVersionRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetPolicyVersionResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetPolicyVersion
  /?Action=GetRole&Version=2010-05-08:
    get:
      description: <p>Retrieves information about the specified role, including the
        role's path, GUID, ARN, and the role's trust policy that grants permission
        to assume the role. For more information about roles, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html">Working
        with roles</a>.</p> <note> <p>Policies returned by this operation are URL-encoded
        compliant with <a href="https://tools.ietf.org/html/rfc3986">RFC 3986</a>.
        You can use a URL decoding method to convert the policy back to plain JSON
        text. For example, if you use Java, you can use the <code>decode</code> method
        of the <code>java.net.URLDecoder</code> utility class in the Java SDK. Other
        languages and SDKs provide similar functionality.</p> </note>
      operationId: GET_GetRole
      parameters:
      - description: '<p>The name of the IAM role to get information about.</p> <p>This
          parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: RoleName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetRoleResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetRole
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Retrieves information about the specified role, including the
        role's path, GUID, ARN, and the role's trust policy that grants permission
        to assume the role. For more information about roles, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html">Working
        with roles</a>.</p> <note> <p>Policies returned by this operation are URL-encoded
        compliant with <a href="https://tools.ietf.org/html/rfc3986">RFC 3986</a>.
        You can use a URL decoding method to convert the policy back to plain JSON
        text. For example, if you use Java, you can use the <code>decode</code> method
        of the <code>java.net.URLDecoder</code> utility class in the Java SDK. Other
        languages and SDKs provide similar functionality.</p> </note>
      operationId: POST_GetRole
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetRoleRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetRoleResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetRole
  /?Action=GetRolePolicy&Version=2010-05-08:
    get:
      description: <p>Retrieves the specified inline policy document that is embedded
        with the specified IAM role.</p> <note> <p>Policies returned by this operation
        are URL-encoded compliant with <a href="https://tools.ietf.org/html/rfc3986">RFC
        3986</a>. You can use a URL decoding method to convert the policy back to
        plain JSON text. For example, if you use Java, you can use the <code>decode</code>
        method of the <code>java.net.URLDecoder</code> utility class in the Java SDK.
        Other languages and SDKs provide similar functionality.</p> </note> <p>An
        IAM role can also have managed policies attached to it. To retrieve a managed
        policy document that is attached to a role, use <a>GetPolicy</a> to determine
        the policy's default version, then use <a>GetPolicyVersion</a> to retrieve
        the policy document.</p> <p>For more information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>For
        more information about roles, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html">Using
        roles to delegate permissions and federate identities</a>.</p>
      operationId: GET_GetRolePolicy
      parameters:
      - description: '<p>The name of the role associated with the policy.</p> <p>This
          parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: RoleName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: '<p>The name of the policy document to get.</p> <p>This parameter
          allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters consisting of upper and lowercase alphanumeric characters
          with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        in: query
        name: PolicyName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetRolePolicyResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetRolePolicy
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Retrieves the specified inline policy document that is embedded
        with the specified IAM role.</p> <note> <p>Policies returned by this operation
        are URL-encoded compliant with <a href="https://tools.ietf.org/html/rfc3986">RFC
        3986</a>. You can use a URL decoding method to convert the policy back to
        plain JSON text. For example, if you use Java, you can use the <code>decode</code>
        method of the <code>java.net.URLDecoder</code> utility class in the Java SDK.
        Other languages and SDKs provide similar functionality.</p> </note> <p>An
        IAM role can also have managed policies attached to it. To retrieve a managed
        policy document that is attached to a role, use <a>GetPolicy</a> to determine
        the policy's default version, then use <a>GetPolicyVersion</a> to retrieve
        the policy document.</p> <p>For more information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>For
        more information about roles, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html">Using
        roles to delegate permissions and federate identities</a>.</p>
      operationId: POST_GetRolePolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetRolePolicyRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetRolePolicyResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetRolePolicy
  /?Action=GetSAMLProvider&Version=2010-05-08:
    get:
      description: <p>Returns the SAML provider metadocument that was uploaded when
        the IAM SAML provider resource object was created or updated.</p> <note> <p>This
        operation requires <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature
        Version 4</a>.</p> </note>
      operationId: GET_GetSAMLProvider
      parameters:
      - description: <p>The Amazon Resource Name (ARN) of the SAML provider resource
          object in IAM to get information about.</p> <p>For more information about
          ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
          Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        in: query
        name: SAMLProviderArn
        required: true
        schema:
          description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers
            for Amazon Web Services resources.</p> <p>For more information about ARNs,
            go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
            </p>
          maxLength: 2048
          minLength: 20
          type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetSAMLProviderResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetSAMLProvider
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Returns the SAML provider metadocument that was uploaded when
        the IAM SAML provider resource object was created or updated.</p> <note> <p>This
        operation requires <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature
        Version 4</a>.</p> </note>
      operationId: POST_GetSAMLProvider
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetSAMLProviderRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetSAMLProviderResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetSAMLProvider
  /?Action=GetSSHPublicKey&Version=2010-05-08:
    get:
      description: <p>Retrieves the specified SSH public key, including metadata about
        the key.</p> <p>The SSH public key retrieved by this operation is used only
        for authenticating the associated IAM user to an CodeCommit repository. For
        more information about using SSH keys to authenticate to an CodeCommit repository,
        see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-credentials-ssh.html">Set
        up CodeCommit for SSH connections</a> in the <i>CodeCommit User Guide</i>.</p>
      operationId: GET_GetSSHPublicKey
      parameters:
      - description: '<p>The name of the IAM user associated with the SSH public key.</p>
          <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: UserName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: <p>The unique identifier for the SSH public key.</p> <p>This
          parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters that can consist of any upper or lowercased
          letter or digit.</p>
        in: query
        name: SSHPublicKeyId
        required: true
        schema:
          maxLength: 128
          minLength: 20
          pattern: '[\w]+'
          type: string
      - description: Specifies the public key encoding format to use in the response.
          To retrieve the public key in ssh-rsa format, use <code>SSH</code>. To retrieve
          the public key in PEM format, use <code>PEM</code>.
        in: query
        name: Encoding
        required: true
        schema:
          enum:
          - SSH
          - PEM
          type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetSSHPublicKeyResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnrecognizedPublicKeyEncodingException'
          description: UnrecognizedPublicKeyEncodingException
      x-aws-operation-name: GetSSHPublicKey
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Retrieves the specified SSH public key, including metadata about
        the key.</p> <p>The SSH public key retrieved by this operation is used only
        for authenticating the associated IAM user to an CodeCommit repository. For
        more information about using SSH keys to authenticate to an CodeCommit repository,
        see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-credentials-ssh.html">Set
        up CodeCommit for SSH connections</a> in the <i>CodeCommit User Guide</i>.</p>
      operationId: POST_GetSSHPublicKey
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetSSHPublicKeyRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetSSHPublicKeyResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnrecognizedPublicKeyEncodingException'
          description: UnrecognizedPublicKeyEncodingException
      x-aws-operation-name: GetSSHPublicKey
  /?Action=GetServerCertificate&Version=2010-05-08:
    get:
      description: <p>Retrieves information about the specified server certificate
        stored in IAM.</p> <p>For more information about working with server certificates,
        see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html">Working
        with server certificates</a> in the <i>IAM User Guide</i>. This topic includes
        a list of Amazon Web Services services that can use the server certificates
        that you manage with IAM.</p>
      operationId: GET_GetServerCertificate
      parameters:
      - description: '<p>The name of the server certificate you want to retrieve information
          about.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: ServerCertificateName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetServerCertificateResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetServerCertificate
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Retrieves information about the specified server certificate
        stored in IAM.</p> <p>For more information about working with server certificates,
        see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html">Working
        with server certificates</a> in the <i>IAM User Guide</i>. This topic includes
        a list of Amazon Web Services services that can use the server certificates
        that you manage with IAM.</p>
      operationId: POST_GetServerCertificate
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetServerCertificateRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetServerCertificateResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetServerCertificate
  /?Action=GetServiceLastAccessedDetails&Version=2010-05-08:
    get:
      description: "<p>Retrieves a service last accessed report that was created using\
        \ the <code>GenerateServiceLastAccessedDetails</code> operation. You can use\
        \ the <code>JobId</code> parameter in <code>GetServiceLastAccessedDetails</code>\
        \ to retrieve the status of your report job. When the report is complete,\
        \ you can retrieve the generated report. The report includes a list of Amazon\
        \ Web Services services that the resource (user, group, role, or managed policy)\
        \ can access.</p> <note> <p>Service last accessed data does not use other\
        \ policy types when determining whether a resource could access a service.\
        \ These other policy types include resource-based policies, access control\
        \ lists, Organizations policies, IAM permissions boundaries, and STS assume\
        \ role policies. It only applies permissions policy logic. For more about\
        \ the evaluation of policy types, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_evaluation-logic.html#policy-eval-basics\"\
        >Evaluating policies</a> in the <i>IAM User Guide</i>.</p> </note> <p>For\
        \ each service that the resource could access using permissions policies,\
        \ the operation returns details about the most recent access attempt. If there\
        \ was no attempt, the service is listed without details about the most recent\
        \ attempt to access the service. If the operation fails, the <code>GetServiceLastAccessedDetails</code>\
        \ operation returns the reason that it failed.</p> <p>The <code>GetServiceLastAccessedDetails</code>\
        \ operation returns a list of services. This list includes the number of entities\
        \ that have attempted to access the service and the date and time of the last\
        \ attempt. It also returns the ARN of the following entity, depending on the\
        \ resource ARN that you used to generate the report:</p> <ul> <li> <p> <b>User</b>\
        \ \u2013 Returns the user ARN that you used to generate the report</p> </li>\
        \ <li> <p> <b>Group</b> \u2013 Returns the ARN of the group member (user)\
        \ that last attempted to access the service</p> </li> <li> <p> <b>Role</b>\
        \ \u2013 Returns the role ARN that you used to generate the report</p> </li>\
        \ <li> <p> <b>Policy</b> \u2013 Returns the ARN of the user or role that last\
        \ used the policy to attempt to access the service</p> </li> </ul> <p>By default,\
        \ the list is sorted by service namespace.</p> <p>If you specified <code>ACTION_LEVEL</code>\
        \ granularity when you generated the report, this operation returns service\
        \ and action last accessed data. This includes the most recent access attempt\
        \ for each tracked action within a service. Otherwise, this operation returns\
        \ only service data.</p> <p>For more information about service and action\
        \ last accessed data, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html\"\
        >Reducing permissions using service last accessed data</a> in the <i>IAM User\
        \ Guide</i>.</p>"
      operationId: GET_GetServiceLastAccessedDetails
      parameters:
      - description: The ID of the request generated by the <a>GenerateServiceLastAccessedDetails</a>
          operation. The <code>JobId</code> returned by <code>GenerateServiceLastAccessedDetail</code>
          must be used by the same role within a session, or by the same user when
          used to call <code>GetServiceLastAccessedDetail</code>.
        in: query
        name: JobId
        required: true
        schema:
          maxLength: 36
          minLength: 36
          type: string
      - description: <p>Use this only when paginating results to indicate the maximum
          number of items you want in the response. If additional items exist beyond
          the maximum you specify, the <code>IsTruncated</code> response element is
          <code>true</code>.</p> <p>If you do not include this parameter, the number
          of items defaults to 100. Note that IAM might return fewer results, even
          when there are more results available. In that case, the <code>IsTruncated</code>
          response element returns <code>true</code>, and <code>Marker</code> contains
          a value to include in the subsequent call that tells the service where to
          continue from.</p>
        in: query
        name: MaxItems
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      - description: Use this parameter only when paginating results and only after
          you receive a response indicating that the results are truncated. Set it
          to the value of the <code>Marker</code> element in the response that you
          received to indicate where the next call should start.
        in: query
        name: Marker
        required: false
        schema:
          maxLength: 320
          minLength: 1
          pattern: '[\u0020-\u00FF]+'
          type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetServiceLastAccessedDetailsResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-aws-operation-name: GetServiceLastAccessedDetails
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: "<p>Retrieves a service last accessed report that was created using\
        \ the <code>GenerateServiceLastAccessedDetails</code> operation. You can use\
        \ the <code>JobId</code> parameter in <code>GetServiceLastAccessedDetails</code>\
        \ to retrieve the status of your report job. When the report is complete,\
        \ you can retrieve the generated report. The report includes a list of Amazon\
        \ Web Services services that the resource (user, group, role, or managed policy)\
        \ can access.</p> <note> <p>Service last accessed data does not use other\
        \ policy types when determining whether a resource could access a service.\
        \ These other policy types include resource-based policies, access control\
        \ lists, Organizations policies, IAM permissions boundaries, and STS assume\
        \ role policies. It only applies permissions policy logic. For more about\
        \ the evaluation of policy types, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_evaluation-logic.html#policy-eval-basics\"\
        >Evaluating policies</a> in the <i>IAM User Guide</i>.</p> </note> <p>For\
        \ each service that the resource could access using permissions policies,\
        \ the operation returns details about the most recent access attempt. If there\
        \ was no attempt, the service is listed without details about the most recent\
        \ attempt to access the service. If the operation fails, the <code>GetServiceLastAccessedDetails</code>\
        \ operation returns the reason that it failed.</p> <p>The <code>GetServiceLastAccessedDetails</code>\
        \ operation returns a list of services. This list includes the number of entities\
        \ that have attempted to access the service and the date and time of the last\
        \ attempt. It also returns the ARN of the following entity, depending on the\
        \ resource ARN that you used to generate the report:</p> <ul> <li> <p> <b>User</b>\
        \ \u2013 Returns the user ARN that you used to generate the report</p> </li>\
        \ <li> <p> <b>Group</b> \u2013 Returns the ARN of the group member (user)\
        \ that last attempted to access the service</p> </li> <li> <p> <b>Role</b>\
        \ \u2013 Returns the role ARN that you used to generate the report</p> </li>\
        \ <li> <p> <b>Policy</b> \u2013 Returns the ARN of the user or role that last\
        \ used the policy to attempt to access the service</p> </li> </ul> <p>By default,\
        \ the list is sorted by service namespace.</p> <p>If you specified <code>ACTION_LEVEL</code>\
        \ granularity when you generated the report, this operation returns service\
        \ and action last accessed data. This includes the most recent access attempt\
        \ for each tracked action within a service. Otherwise, this operation returns\
        \ only service data.</p> <p>For more information about service and action\
        \ last accessed data, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html\"\
        >Reducing permissions using service last accessed data</a> in the <i>IAM User\
        \ Guide</i>.</p>"
      operationId: POST_GetServiceLastAccessedDetails
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetServiceLastAccessedDetailsRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetServiceLastAccessedDetailsResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-aws-operation-name: GetServiceLastAccessedDetails
  /?Action=GetServiceLastAccessedDetailsWithEntities&Version=2010-05-08:
    get:
      description: "<p>After you generate a group or policy report using the <code>GenerateServiceLastAccessedDetails</code>\
        \ operation, you can use the <code>JobId</code> parameter in <code>GetServiceLastAccessedDetailsWithEntities</code>.\
        \ This operation retrieves the status of your report job and a list of entities\
        \ that could have used group or policy permissions to access the specified\
        \ service.</p> <ul> <li> <p> <b>Group</b> \u2013 For a group report, this\
        \ operation returns a list of users in the group that could have used the\
        \ group\u2019s policies in an attempt to access the service.</p> </li> <li>\
        \ <p> <b>Policy</b> \u2013 For a policy report, this operation returns a list\
        \ of entities (users or roles) that could have used the policy in an attempt\
        \ to access the service.</p> </li> </ul> <p>You can also use this operation\
        \ for user or role reports to retrieve details about those entities.</p> <p>If\
        \ the operation fails, the <code>GetServiceLastAccessedDetailsWithEntities</code>\
        \ operation returns the reason that it failed.</p> <p>By default, the list\
        \ of associated entities is sorted by date, with the most recent access listed\
        \ first.</p>"
      operationId: GET_GetServiceLastAccessedDetailsWithEntities
      parameters:
      - description: The ID of the request generated by the <code>GenerateServiceLastAccessedDetails</code>
          operation.
        in: query
        name: JobId
        required: true
        schema:
          maxLength: 36
          minLength: 36
          type: string
      - description: "<p>The service namespace for an Amazon Web Services service.\
          \ Provide the service namespace to learn when the IAM entity last attempted\
          \ to access the specified service.</p> <p>To learn the service namespace\
          \ for a service, see <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/reference_policies_actions-resources-contextkeys.html\"\
          >Actions, resources, and condition keys for Amazon Web Services services</a>\
          \ in the <i>IAM User Guide</i>. Choose the name of the service to view details\
          \ for that service. In the first paragraph, find the service prefix. For\
          \ example, <code>(service prefix: a4b)</code>. For more information about\
          \ service namespaces, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#genref-aws-service-namespaces\"\
          >Amazon Web Services service namespaces</a> in the\_<i>Amazon Web Services\
          \ General Reference</i>.</p>"
        in: query
        name: ServiceNamespace
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w-]*'
          type: string
      - description: <p>Use this only when paginating results to indicate the maximum
          number of items you want in the response. If additional items exist beyond
          the maximum you specify, the <code>IsTruncated</code> response element is
          <code>true</code>.</p> <p>If you do not include this parameter, the number
          of items defaults to 100. Note that IAM might return fewer results, even
          when there are more results available. In that case, the <code>IsTruncated</code>
          response element returns <code>true</code>, and <code>Marker</code> contains
          a value to include in the subsequent call that tells the service where to
          continue from.</p>
        in: query
        name: MaxItems
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      - description: Use this parameter only when paginating results and only after
          you receive a response indicating that the results are truncated. Set it
          to the value of the <code>Marker</code> element in the response that you
          received to indicate where the next call should start.
        in: query
        name: Marker
        required: false
        schema:
          maxLength: 320
          minLength: 1
          pattern: '[\u0020-\u00FF]+'
          type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetServiceLastAccessedDetailsWithEntitiesResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-aws-operation-name: GetServiceLastAccessedDetailsWithEntities
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: "<p>After you generate a group or policy report using the <code>GenerateServiceLastAccessedDetails</code>\
        \ operation, you can use the <code>JobId</code> parameter in <code>GetServiceLastAccessedDetailsWithEntities</code>.\
        \ This operation retrieves the status of your report job and a list of entities\
        \ that could have used group or policy permissions to access the specified\
        \ service.</p> <ul> <li> <p> <b>Group</b> \u2013 For a group report, this\
        \ operation returns a list of users in the group that could have used the\
        \ group\u2019s policies in an attempt to access the service.</p> </li> <li>\
        \ <p> <b>Policy</b> \u2013 For a policy report, this operation returns a list\
        \ of entities (users or roles) that could have used the policy in an attempt\
        \ to access the service.</p> </li> </ul> <p>You can also use this operation\
        \ for user or role reports to retrieve details about those entities.</p> <p>If\
        \ the operation fails, the <code>GetServiceLastAccessedDetailsWithEntities</code>\
        \ operation returns the reason that it failed.</p> <p>By default, the list\
        \ of associated entities is sorted by date, with the most recent access listed\
        \ first.</p>"
      operationId: POST_GetServiceLastAccessedDetailsWithEntities
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetServiceLastAccessedDetailsWithEntitiesRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetServiceLastAccessedDetailsWithEntitiesResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-aws-operation-name: GetServiceLastAccessedDetailsWithEntities
  /?Action=GetServiceLinkedRoleDeletionStatus&Version=2010-05-08:
    get:
      description: Retrieves the status of your service-linked role deletion. After
        you use <a>DeleteServiceLinkedRole</a> to submit a service-linked role for
        deletion, you can use the <code>DeletionTaskId</code> parameter in <code>GetServiceLinkedRoleDeletionStatus</code>
        to check the status of the deletion. If the deletion fails, this operation
        returns the reason that it failed, if that information is returned by the
        service.
      operationId: GET_GetServiceLinkedRoleDeletionStatus
      parameters:
      - description: The deletion task identifier. This identifier is returned by
          the <a>DeleteServiceLinkedRole</a> operation in the format <code>task/aws-service-role/&lt;service-principal-name&gt;/&lt;role-name&gt;/&lt;task-uuid&gt;</code>.
        in: query
        name: DeletionTaskId
        required: true
        schema:
          maxLength: 1000
          minLength: 1
          type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetServiceLinkedRoleDeletionStatusResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetServiceLinkedRoleDeletionStatus
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves the status of your service-linked role deletion. After
        you use <a>DeleteServiceLinkedRole</a> to submit a service-linked role for
        deletion, you can use the <code>DeletionTaskId</code> parameter in <code>GetServiceLinkedRoleDeletionStatus</code>
        to check the status of the deletion. If the deletion fails, this operation
        returns the reason that it failed, if that information is returned by the
        service.
      operationId: POST_GetServiceLinkedRoleDeletionStatus
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetServiceLinkedRoleDeletionStatusRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetServiceLinkedRoleDeletionStatusResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetServiceLinkedRoleDeletionStatus
  /?Action=GetUser&Version=2010-05-08:
    get:
      description: <p>Retrieves information about the specified IAM user, including
        the user's creation date, path, unique ID, and ARN.</p> <p>If you do not specify
        a user name, IAM determines the user name implicitly based on the Amazon Web
        Services access key ID used to sign the request to this operation.</p>
      operationId: GET_GetUser
      parameters:
      - description: '<p>The name of the user to get information about.</p> <p>This
          parameter is optional. If it is not included, it defaults to the user making
          the request. This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: UserName
        required: false
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetUserResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetUser
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Retrieves information about the specified IAM user, including
        the user's creation date, path, unique ID, and ARN.</p> <p>If you do not specify
        a user name, IAM determines the user name implicitly based on the Amazon Web
        Services access key ID used to sign the request to this operation.</p>
      operationId: POST_GetUser
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetUserRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetUserResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetUser
  /?Action=GetUserPolicy&Version=2010-05-08:
    get:
      description: <p>Retrieves the specified inline policy document that is embedded
        in the specified IAM user.</p> <note> <p>Policies returned by this operation
        are URL-encoded compliant with <a href="https://tools.ietf.org/html/rfc3986">RFC
        3986</a>. You can use a URL decoding method to convert the policy back to
        plain JSON text. For example, if you use Java, you can use the <code>decode</code>
        method of the <code>java.net.URLDecoder</code> utility class in the Java SDK.
        Other languages and SDKs provide similar functionality.</p> </note> <p>An
        IAM user can also have managed policies attached to it. To retrieve a managed
        policy document that is attached to a user, use <a>GetPolicy</a> to determine
        the policy's default version. Then use <a>GetPolicyVersion</a> to retrieve
        the policy document.</p> <p>For more information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_GetUserPolicy
      parameters:
      - description: '<p>The name of the user who the policy is associated with.</p>
          <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: UserName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: '<p>The name of the policy document to get.</p> <p>This parameter
          allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters consisting of upper and lowercase alphanumeric characters
          with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        in: query
        name: PolicyName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetUserPolicyResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetUserPolicy
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Retrieves the specified inline policy document that is embedded
        in the specified IAM user.</p> <note> <p>Policies returned by this operation
        are URL-encoded compliant with <a href="https://tools.ietf.org/html/rfc3986">RFC
        3986</a>. You can use a URL decoding method to convert the policy back to
        plain JSON text. For example, if you use Java, you can use the <code>decode</code>
        method of the <code>java.net.URLDecoder</code> utility class in the Java SDK.
        Other languages and SDKs provide similar functionality.</p> </note> <p>An
        IAM user can also have managed policies attached to it. To retrieve a managed
        policy document that is attached to a user, use <a>GetPolicy</a> to determine
        the policy's default version. Then use <a>GetPolicyVersion</a> to retrieve
        the policy document.</p> <p>For more information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_GetUserPolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetUserPolicyRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetUserPolicyResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetUserPolicy
  /?Action=ListAccessKeys&Version=2010-05-08:
    get:
      description: <p>Returns information about the access key IDs associated with
        the specified IAM user. If there is none, the operation returns an empty list.</p>
        <p>Although each user is limited to a small number of keys, you can still
        paginate the results using the <code>MaxItems</code> and <code>Marker</code>
        parameters.</p> <p>If the <code>UserName</code> field is not specified, the
        user name is determined implicitly based on the Amazon Web Services access
        key ID used to sign the request. This operation works for access keys under
        the Amazon Web Services account. Consequently, you can use this operation
        to manage Amazon Web Services account root user credentials even if the Amazon
        Web Services account has no associated users.</p> <note> <p>To ensure the
        security of your Amazon Web Services account, the secret access key is accessible
        only during key and user creation.</p> </note>
      operationId: GET_ListAccessKeys
      parameters:
      - description: '<p>The name of the user.</p> <p>This parameter allows (through
          its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string
          of characters consisting of upper and lowercase alphanumeric characters
          with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        in: query
        name: UserName
        required: false
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: Use this parameter only when paginating results and only after
          you receive a response indicating that the results are truncated. Set it
          to the value of the <code>Marker</code> element in the response that you
          received to indicate where the next call should start.
        in: query
        name: Marker
        required: false
        schema:
          maxLength: 320
          minLength: 1
          pattern: '[\u0020-\u00FF]+'
          type: string
      - description: <p>Use this only when paginating results to indicate the maximum
          number of items you want in the response. If additional items exist beyond
          the maximum you specify, the <code>IsTruncated</code> response element is
          <code>true</code>.</p> <p>If you do not include this parameter, the number
          of items defaults to 100. Note that IAM might return fewer results, even
          when there are more results available. In that case, the <code>IsTruncated</code>
          response element returns <code>true</code>, and <code>Marker</code> contains
          a value to include in the subsequent call that tells the service where to
          continue from.</p>
        in: query
        name: MaxItems
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListAccessKeysResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListAccessKeys
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Returns information about the access key IDs associated with
        the specified IAM user. If there is none, the operation returns an empty list.</p>
        <p>Although each user is limited to a small number of keys, you can still
        paginate the results using the <code>MaxItems</code> and <code>Marker</code>
        parameters.</p> <p>If the <code>UserName</code> field is not specified, the
        user name is determined implicitly based on the Amazon Web Services access
        key ID used to sign the request. This operation works for access keys under
        the Amazon Web Services account. Consequently, you can use this operation
        to manage Amazon Web Services account root user credentials even if the Amazon
        Web Services account has no associated users.</p> <note> <p>To ensure the
        security of your Amazon Web Services account, the secret access key is accessible
        only during key and user creation.</p> </note>
      operationId: POST_ListAccessKeys
      parameters:
      - description: Pagination limit
        in: query
        name: MaxItems
        required: false
        schema:
          type: string
      - description: Pagination token
        in: query
        name: Marker
        required: false
        schema:
          type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListAccessKeysRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListAccessKeysResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListAccessKeys
  /?Action=ListAccountAliases&Version=2010-05-08:
    get:
      description: 'Lists the account alias associated with the Amazon Web Services
        account (Note: you can have only one). For information about using an Amazon
        Web Services account alias, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/AccountAlias.html">Using
        an alias for your Amazon Web Services account ID</a> in the <i>IAM User Guide</i>.'
      operationId: GET_ListAccountAliases
      parameters:
      - description: Use this parameter only when paginating results and only after
          you receive a response indicating that the results are truncated. Set it
          to the value of the <code>Marker</code> element in the response that you
          received to indicate where the next call should start.
        in: query
        name: Marker
        required: false
        schema:
          maxLength: 320
          minLength: 1
          pattern: '[\u0020-\u00FF]+'
          type: string
      - description: <p>Use this only when paginating results to indicate the maximum
          number of items you want in the response. If additional items exist beyond
          the maximum you specify, the <code>IsTruncated</code> response element is
          <code>true</code>.</p> <p>If you do not include this parameter, the number
          of items defaults to 100. Note that IAM might return fewer results, even
          when there are more results available. In that case, the <code>IsTruncated</code>
          response element returns <code>true</code>, and <code>Marker</code> contains
          a value to include in the subsequent call that tells the service where to
          continue from.</p>
        in: query
        name: MaxItems
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListAccountAliasesResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListAccountAliases
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Lists the account alias associated with the Amazon Web Services
        account (Note: you can have only one). For information about using an Amazon
        Web Services account alias, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/AccountAlias.html">Using
        an alias for your Amazon Web Services account ID</a> in the <i>IAM User Guide</i>.'
      operationId: POST_ListAccountAliases
      parameters:
      - description: Pagination limit
        in: query
        name: MaxItems
        required: false
        schema:
          type: string
      - description: Pagination token
        in: query
        name: Marker
        required: false
        schema:
          type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListAccountAliasesRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListAccountAliasesResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListAccountAliases
  /?Action=ListAttachedGroupPolicies&Version=2010-05-08:
    get:
      description: <p>Lists all managed policies that are attached to the specified
        IAM group.</p> <p>An IAM group can also have inline policies embedded with
        it. To list the inline policies for a group, use <a>ListGroupPolicies</a>.
        For information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>You
        can paginate the results using the <code>MaxItems</code> and <code>Marker</code>
        parameters. You can use the <code>PathPrefix</code> parameter to limit the
        list of policies to only those matching the specified path prefix. If there
        are no policies attached to the specified group (or none that match the specified
        path prefix), the operation returns an empty list.</p>
      operationId: GET_ListAttachedGroupPolicies
      parameters:
      - description: '<p>The name (friendly name, not ARN) of the group to list attached
          policies for.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: GroupName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: <p>The path prefix for filtering the results. This parameter
          is optional. If it is not included, it defaults to a slash (/), listing
          all policies.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of either a forward slash
          (/) by itself or a string that must begin and end with forward slashes.
          In addition, it can contain any ASCII character from the ! (<code>\u0021</code>)
          through the DEL character (<code>\u007F</code>), including most punctuation
          characters, digits, and upper and lowercased letters.</p>
        in: query
        name: PathPrefix
        required: false
        schema:
          maxLength: 512
          minLength: 1
          pattern: ((/[A-Za-z0-9\.,\+@=_-]+)*)/
          type: string
      - description: Use this parameter only when paginating results and only after
          you receive a response indicating that the results are truncated. Set it
          to the value of the <code>Marker</code> element in the response that you
          received to indicate where the next call should start.
        in: query
        name: Marker
        required: false
        schema:
          maxLength: 320
          minLength: 1
          pattern: '[\u0020-\u00FF]+'
          type: string
      - description: <p>Use this only when paginating results to indicate the maximum
          number of items you want in the response. If additional items exist beyond
          the maximum you specify, the <code>IsTruncated</code> response element is
          <code>true</code>.</p> <p>If you do not include this parameter, the number
          of items defaults to 100. Note that IAM might return fewer results, even
          when there are more results available. In that case, the <code>IsTruncated</code>
          response element returns <code>true</code>, and <code>Marker</code> contains
          a value to include in the subsequent call that tells the service where to
          continue from.</p>
        in: query
        name: MaxItems
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListAttachedGroupPoliciesResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListAttachedGroupPolicies
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Lists all managed policies that are attached to the specified
        IAM group.</p> <p>An IAM group can also have inline policies embedded with
        it. To list the inline policies for a group, use <a>ListGroupPolicies</a>.
        For information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>You
        can paginate the results using the <code>MaxItems</code> and <code>Marker</code>
        parameters. You can use the <code>PathPrefix</code> parameter to limit the
        list of policies to only those matching the specified path prefix. If there
        are no policies attached to the specified group (or none that match the specified
        path prefix), the operation returns an empty list.</p>
      operationId: POST_ListAttachedGroupPolicies
      parameters:
      - description: Pagination limit
        in: query
        name: MaxItems
        required: false
        schema:
          type: string
      - description: Pagination token
        in: query
        name: Marker
        required: false
        schema:
          type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListAttachedGroupPoliciesRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListAttachedGroupPoliciesResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListAttachedGroupPolicies
  /?Action=ListAttachedRolePolicies&Version=2010-05-08:
    get:
      description: <p>Lists all managed policies that are attached to the specified
        IAM role.</p> <p>An IAM role can also have inline policies embedded with it.
        To list the inline policies for a role, use <a>ListRolePolicies</a>. For information
        about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>You
        can paginate the results using the <code>MaxItems</code> and <code>Marker</code>
        parameters. You can use the <code>PathPrefix</code> parameter to limit the
        list of policies to only those matching the specified path prefix. If there
        are no policies attached to the specified role (or none that match the specified
        path prefix), the operation returns an empty list.</p>
      operationId: GET_ListAttachedRolePolicies
      parameters:
      - description: '<p>The name (friendly name, not ARN) of the role to list attached
          policies for.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: RoleName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: <p>The path prefix for filtering the results. This parameter
          is optional. If it is not included, it defaults to a slash (/), listing
          all policies.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of either a forward slash
          (/) by itself or a string that must begin and end with forward slashes.
          In addition, it can contain any ASCII character from the ! (<code>\u0021</code>)
          through the DEL character (<code>\u007F</code>), including most punctuation
          characters, digits, and upper and lowercased letters.</p>
        in: query
        name: PathPrefix
        required: false
        schema:
          maxLength: 512
          minLength: 1
          pattern: ((/[A-Za-z0-9\.,\+@=_-]+)*)/
          type: string
      - description: Use this parameter only when paginating results and only after
          you receive a response indicating that the results are truncated. Set it
          to the value of the <code>Marker</code> element in the response that you
          received to indicate where the next call should start.
        in: query
        name: Marker
        required: false
        schema:
          maxLength: 320
          minLength: 1
          pattern: '[\u0020-\u00FF]+'
          type: string
      - description: <p>Use this only when paginating results to indicate the maximum
          number of items you want in the response. If additional items exist beyond
          the maximum you specify, the <code>IsTruncated</code> response element is
          <code>true</code>.</p> <p>If you do not include this parameter, the number
          of items defaults to 100. Note that IAM might return fewer results, even
          when there are more results available. In that case, the <code>IsTruncated</code>
          response element returns <code>true</code>, and <code>Marker</code> contains
          a value to include in the subsequent call that tells the service where to
          continue from.</p>
        in: query
        name: MaxItems
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListAttachedRolePoliciesResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListAttachedRolePolicies
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Lists all managed policies that are attached to the specified
        IAM role.</p> <p>An IAM role can also have inline policies embedded with it.
        To list the inline policies for a role, use <a>ListRolePolicies</a>. For information
        about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>You
        can paginate the results using the <code>MaxItems</code> and <code>Marker</code>
        parameters. You can use the <code>PathPrefix</code> parameter to limit the
        list of policies to only those matching the specified path prefix. If there
        are no policies attached to the specified role (or none that match the specified
        path prefix), the operation returns an empty list.</p>
      operationId: POST_ListAttachedRolePolicies
      parameters:
      - description: Pagination limit
        in: query
        name: MaxItems
        required: false
        schema:
          type: string
      - description: Pagination token
        in: query
        name: Marker
        required: false
        schema:
          type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListAttachedRolePoliciesRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListAttachedRolePoliciesResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListAttachedRolePolicies
  /?Action=ListAttachedUserPolicies&Version=2010-05-08:
    get:
      description: <p>Lists all managed policies that are attached to the specified
        IAM user.</p> <p>An IAM user can also have inline policies embedded with it.
        To list the inline policies for a user, use <a>ListUserPolicies</a>. For information
        about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>You
        can paginate the results using the <code>MaxItems</code> and <code>Marker</code>
        parameters. You can use the <code>PathPrefix</code> parameter to limit the
        list of policies to only those matching the specified path prefix. If there
        are no policies attached to the specified group (or none that match the specified
        path prefix), the operation returns an empty list.</p>
      operationId: GET_ListAttachedUserPolicies
      parameters:
      - description: '<p>The name (friendly name, not ARN) of the user to list attached
          policies for.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: UserName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: <p>The path prefix for filtering the results. This parameter
          is optional. If it is not included, it defaults to a slash (/), listing
          all policies.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of either a forward slash
          (/) by itself or a string that must begin and end with forward slashes.
          In addition, it can contain any ASCII character from the ! (<code>\u0021</code>)
          through the DEL character (<code>\u007F</code>), including most punctuation
          characters, digits, and upper and lowercased letters.</p>
        in: query
        name: PathPrefix
        required: false
        schema:
          maxLength: 512
          minLength: 1
          pattern: ((/[A-Za-z0-9\.,\+@=_-]+)*)/
          type: string
      - description: Use this parameter only when paginating results and only after
          you receive a response indicating that the results are truncated. Set it
          to the value of the <code>Marker</code> element in the response that you
          received to indicate where the next call should start.
        in: query
        name: Marker
        required: false
        schema:
          maxLength: 320
          minLength: 1
          pattern: '[\u0020-\u00FF]+'
          type: string
      - description: <p>Use this only when paginating results to indicate the maximum
          number of items you want in the response. If additional items exist beyond
          the maximum you specify, the <code>IsTruncated</code> response element is
          <code>true</code>.</p> <p>If you do not include this parameter, the number
          of items defaults to 100. Note that IAM might return fewer results, even
          when there are more results available. In that case, the <code>IsTruncated</code>
          response element returns <code>true</code>, and <code>Marker</code> contains
          a value to include in the subsequent call that tells the service where to
          continue from.</p>
        in: query
        name: MaxItems
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListAttachedUserPoliciesResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListAttachedUserPolicies
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Lists all managed policies that are attached to the specified
        IAM user.</p> <p>An IAM user can also have inline policies embedded with it.
        To list the inline policies for a user, use <a>ListUserPolicies</a>. For information
        about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>You
        can paginate the results using the <code>MaxItems</code> and <code>Marker</code>
        parameters. You can use the <code>PathPrefix</code> parameter to limit the
        list of policies to only those matching the specified path prefix. If there
        are no policies attached to the specified group (or none that match the specified
        path prefix), the operation returns an empty list.</p>
      operationId: POST_ListAttachedUserPolicies
      parameters:
      - description: Pagination limit
        in: query
        name: MaxItems
        required: false
        schema:
          type: string
      - description: Pagination token
        in: query
        name: Marker
        required: false
        schema:
          type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListAttachedUserPoliciesRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListAttachedUserPoliciesResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListAttachedUserPolicies
  /?Action=ListEntitiesForPolicy&Version=2010-05-08:
    get:
      description: <p>Lists all IAM users, groups, and roles that the specified managed
        policy is attached to.</p> <p>You can use the optional <code>EntityFilter</code>
        parameter to limit the results to a particular type of entity (users, groups,
        or roles). For example, to list only the roles that are attached to the specified
        policy, set <code>EntityFilter</code> to <code>Role</code>.</p> <p>You can
        paginate the results using the <code>MaxItems</code> and <code>Marker</code>
        parameters.</p>
      operationId: GET_ListEntitiesForPolicy
      parameters:
      - description: <p>The Amazon Resource Name (ARN) of the IAM policy for which
          you want the versions.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
          Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        in: query
        name: PolicyArn
        required: true
        schema:
          description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers
            for Amazon Web Services resources.</p> <p>For more information about ARNs,
            go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
            </p>
          maxLength: 2048
          minLength: 20
          type: string
      - description: <p>The entity type to use for filtering the results.</p> <p>For
          example, when <code>EntityFilter</code> is <code>Role</code>, only the roles
          that are attached to the specified policy are returned. This parameter is
          optional. If it is not included, all attached entities (users, groups, and
          roles) are returned. The argument for this parameter must be one of the
          valid values listed below.</p>
        in: query
        name: EntityFilter
        required: false
        schema:
          enum:
          - User
          - Role
          - Group
          - LocalManagedPolicy
          - AWSManagedPolicy
          type: string
      - description: <p>The path prefix for filtering the results. This parameter
          is optional. If it is not included, it defaults to a slash (/), listing
          all entities.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of either a forward slash
          (/) by itself or a string that must begin and end with forward slashes.
          In addition, it can contain any ASCII character from the ! (<code>\u0021</code>)
          through the DEL character (<code>\u007F</code>), including most punctuation
          characters, digits, and upper and lowercased letters.</p>
        in: query
        name: PathPrefix
        required: false
        schema:
          maxLength: 512
          minLength: 1
          pattern: (\u002F)|(\u002F[\u0021-\u007F]+\u002F)
          type: string
      - description: "<p>The policy usage method to use for filtering the results.</p>\
          \ <p>To list only permissions policies, set\_<code>PolicyUsageFilter</code>\_\
          to\_<code>PermissionsPolicy</code>. To list only the policies used to set\
          \ permissions boundaries, set\_the value to\_<code>PermissionsBoundary</code>.</p>\
          \ <p>This parameter is optional. If it is not included, all policies are\
          \ returned. </p>"
        in: query
        name: PolicyUsageFilter
        required: false
        schema:
          description: <p>The policy usage type that indicates whether the policy
            is used as a permissions policy or as the permissions boundary for an
            entity.</p> <p>For more information about permissions boundaries, see
            <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html">Permissions
            boundaries for IAM identities </a> in the <i>IAM User Guide</i>.</p>
          enum:
          - PermissionsPolicy
          - PermissionsBoundary
          type: string
      - description: Use this parameter only when paginating results and only after
          you receive a response indicating that the results are truncated. Set it
          to the value of the <code>Marker</code> element in the response that you
          received to indicate where the next call should start.
        in: query
        name: Marker
        required: false
        schema:
          maxLength: 320
          minLength: 1
          pattern: '[\u0020-\u00FF]+'
          type: string
      - description: <p>Use this only when paginating results to indicate the maximum
          number of items you want in the response. If additional items exist beyond
          the maximum you specify, the <code>IsTruncated</code> response element is
          <code>true</code>.</p> <p>If you do not include this parameter, the number
          of items defaults to 100. Note that IAM might return fewer results, even
          when there are more results available. In that case, the <code>IsTruncated</code>
          response element returns <code>true</code>, and <code>Marker</code> contains
          a value to include in the subsequent call that tells the service where to
          continue from.</p>
        in: query
        name: MaxItems
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListEntitiesForPolicyResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListEntitiesForPolicy
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Lists all IAM users, groups, and roles that the specified managed
        policy is attached to.</p> <p>You can use the optional <code>EntityFilter</code>
        parameter to limit the results to a particular type of entity (users, groups,
        or roles). For example, to list only the roles that are attached to the specified
        policy, set <code>EntityFilter</code> to <code>Role</code>.</p> <p>You can
        paginate the results using the <code>MaxItems</code> and <code>Marker</code>
        parameters.</p>
      operationId: POST_ListEntitiesForPolicy
      parameters:
      - description: Pagination limit
        in: query
        name: MaxItems
        required: false
        schema:
          type: string
      - description: Pagination token
        in: query
        name: Marker
        required: false
        schema:
          type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListEntitiesForPolicyRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListEntitiesForPolicyResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListEntitiesForPolicy
  /?Action=ListGroupPolicies&Version=2010-05-08:
    get:
      description: <p>Lists the names of the inline policies that are embedded in
        the specified IAM group.</p> <p>An IAM group can also have managed policies
        attached to it. To list the managed policies that are attached to a group,
        use <a>ListAttachedGroupPolicies</a>. For more information about policies,
        see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>You
        can paginate the results using the <code>MaxItems</code> and <code>Marker</code>
        parameters. If there are no inline policies embedded with the specified group,
        the operation returns an empty list.</p>
      operationId: GET_ListGroupPolicies
      parameters:
      - description: '<p>The name of the group to list policies for.</p> <p>This parameter
          allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters consisting of upper and lowercase alphanumeric characters
          with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        in: query
        name: GroupName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: Use this parameter only when paginating results and only after
          you receive a response indicating that the results are truncated. Set it
          to the value of the <code>Marker</code> element in the response that you
          received to indicate where the next call should start.
        in: query
        name: Marker
        required: false
        schema:
          maxLength: 320
          minLength: 1
          pattern: '[\u0020-\u00FF]+'
          type: string
      - description: <p>Use this only when paginating results to indicate the maximum
          number of items you want in the response. If additional items exist beyond
          the maximum you specify, the <code>IsTruncated</code> response element is
          <code>true</code>.</p> <p>If you do not include this parameter, the number
          of items defaults to 100. Note that IAM might return fewer results, even
          when there are more results available. In that case, the <code>IsTruncated</code>
          response element returns <code>true</code>, and <code>Marker</code> contains
          a value to include in the subsequent call that tells the service where to
          continue from.</p>
        in: query
        name: MaxItems
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListGroupPoliciesResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListGroupPolicies
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Lists the names of the inline policies that are embedded in
        the specified IAM group.</p> <p>An IAM group can also have managed policies
        attached to it. To list the managed policies that are attached to a group,
        use <a>ListAttachedGroupPolicies</a>. For more information about policies,
        see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>You
        can paginate the results using the <code>MaxItems</code> and <code>Marker</code>
        parameters. If there are no inline policies embedded with the specified group,
        the operation returns an empty list.</p>
      operationId: POST_ListGroupPolicies
      parameters:
      - description: Pagination limit
        in: query
        name: MaxItems
        required: false
        schema:
          type: string
      - description: Pagination token
        in: query
        name: Marker
        required: false
        schema:
          type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListGroupPoliciesRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListGroupPoliciesResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListGroupPolicies
  /?Action=ListGroups&Version=2010-05-08:
    get:
      description: <p>Lists the IAM groups that have the specified path prefix.</p>
        <p> You can paginate the results using the <code>MaxItems</code> and <code>Marker</code>
        parameters.</p>
      operationId: GET_ListGroups
      parameters:
      - description: <p> The path prefix for filtering the results. For example, the
          prefix <code>/division_abc/subdivision_xyz/</code> gets all groups whose
          path starts with <code>/division_abc/subdivision_xyz/</code>.</p> <p>This
          parameter is optional. If it is not included, it defaults to a slash (/),
          listing all groups. This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of either a forward slash
          (/) by itself or a string that must begin and end with forward slashes.
          In addition, it can contain any ASCII character from the ! (<code>\u0021</code>)
          through the DEL character (<code>\u007F</code>), including most punctuation
          characters, digits, and upper and lowercased letters.</p>
        in: query
        name: PathPrefix
        required: false
        schema:
          maxLength: 512
          minLength: 1
          pattern: \u002F[\u0021-\u007F]*
          type: string
      - description: Use this parameter only when paginating results and only after
          you receive a response indicating that the results are truncated. Set it
          to the value of the <code>Marker</code> element in the response that you
          received to indicate where the next call should start.
        in: query
        name: Marker
        required: false
        schema:
          maxLength: 320
          minLength: 1
          pattern: '[\u0020-\u00FF]+'
          type: string
      - description: <p>Use this only when paginating results to indicate the maximum
          number of items you want in the response. If additional items exist beyond
          the maximum you specify, the <code>IsTruncated</code> response element is
          <code>true</code>.</p> <p>If you do not include this parameter, the number
          of items defaults to 100. Note that IAM might return fewer results, even
          when there are more results available. In that case, the <code>IsTruncated</code>
          response element returns <code>true</code>, and <code>Marker</code> contains
          a value to include in the subsequent call that tells the service where to
          continue from.</p>
        in: query
        name: MaxItems
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListGroupsResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListGroups
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Lists the IAM groups that have the specified path prefix.</p>
        <p> You can paginate the results using the <code>MaxItems</code> and <code>Marker</code>
        parameters.</p>
      operationId: POST_ListGroups
      parameters:
      - description: Pagination limit
        in: query
        name: MaxItems
        required: false
        schema:
          type: string
      - description: Pagination token
        in: query
        name: Marker
        required: false
        schema:
          type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListGroupsRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListGroupsResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListGroups
  /?Action=ListGroupsForUser&Version=2010-05-08:
    get:
      description: <p>Lists the IAM groups that the specified IAM user belongs to.</p>
        <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code>
        parameters.</p>
      operationId: GET_ListGroupsForUser
      parameters:
      - description: '<p>The name of the user to list groups for.</p> <p>This parameter
          allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters consisting of upper and lowercase alphanumeric characters
          with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        in: query
        name: UserName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: Use this parameter only when paginating results and only after
          you receive a response indicating that the results are truncated. Set it
          to the value of the <code>Marker</code> element in the response that you
          received to indicate where the next call should start.
        in: query
        name: Marker
        required: false
        schema:
          maxLength: 320
          minLength: 1
          pattern: '[\u0020-\u00FF]+'
          type: string
      - description: <p>Use this only when paginating results to indicate the maximum
          number of items you want in the response. If additional items exist beyond
          the maximum you specify, the <code>IsTruncated</code> response element is
          <code>true</code>.</p> <p>If you do not include this parameter, the number
          of items defaults to 100. Note that IAM might return fewer results, even
          when there are more results available. In that case, the <code>IsTruncated</code>
          response element returns <code>true</code>, and <code>Marker</code> contains
          a value to include in the subsequent call that tells the service where to
          continue from.</p>
        in: query
        name: MaxItems
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListGroupsForUserResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListGroupsForUser
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Lists the IAM groups that the specified IAM user belongs to.</p>
        <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code>
        parameters.</p>
      operationId: POST_ListGroupsForUser
      parameters:
      - description: Pagination limit
        in: query
        name: MaxItems
        required: false
        schema:
          type: string
      - description: Pagination token
        in: query
        name: Marker
        required: false
        schema:
          type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListGroupsForUserRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListGroupsForUserResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListGroupsForUser
  /?Action=ListInstanceProfileTags&Version=2010-05-08:
    get:
      description: Lists the tags that are attached to the specified IAM instance
        profile. The returned list of tags is sorted by tag key. For more information
        about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.
      operationId: GET_ListInstanceProfileTags
      parameters:
      - description: '<p>The name of the IAM instance profile whose tags you want
          to see.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: InstanceProfileName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: Use this parameter only when paginating results and only after
          you receive a response indicating that the results are truncated. Set it
          to the value of the <code>Marker</code> element in the response that you
          received to indicate where the next call should start.
        in: query
        name: Marker
        required: false
        schema:
          maxLength: 320
          minLength: 1
          pattern: '[\u0020-\u00FF]+'
          type: string
      - description: <p>Use this only when paginating results to indicate the maximum
          number of items you want in the response. If additional items exist beyond
          the maximum you specify, the <code>IsTruncated</code> response element is
          <code>true</code>.</p> <p>If you do not include this parameter, the number
          of items defaults to 100. Note that IAM might return fewer results, even
          when there are more results available. In that case, the <code>IsTruncated</code>
          response element returns <code>true</code>, and <code>Marker</code> contains
          a value to include in the subsequent call that tells the service where to
          continue from.</p>
        in: query
        name: MaxItems
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListInstanceProfileTagsResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListInstanceProfileTags
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: Lists the tags that are attached to the specified IAM instance
        profile. The returned list of tags is sorted by tag key. For more information
        about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.
      operationId: POST_ListInstanceProfileTags
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListInstanceProfileTagsRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListInstanceProfileTagsResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListInstanceProfileTags
  /?Action=ListInstanceProfiles&Version=2010-05-08:
    get:
      description: <p>Lists the instance profiles that have the specified path prefix.
        If there are none, the operation returns an empty list. For more information
        about instance profiles, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html">About
        instance profiles</a>.</p> <note> <p>IAM resource-listing operations return
        a subset of the available attributes for the resource. For example, this operation
        does not return tags, even though they are an attribute of the returned object.
        To view all of the information for an instance profile, see <a>GetInstanceProfile</a>.</p>
        </note> <p>You can paginate the results using the <code>MaxItems</code> and
        <code>Marker</code> parameters.</p>
      operationId: GET_ListInstanceProfiles
      parameters:
      - description: <p> The path prefix for filtering the results. For example, the
          prefix <code>/application_abc/component_xyz/</code> gets all instance profiles
          whose path starts with <code>/application_abc/component_xyz/</code>.</p>
          <p>This parameter is optional. If it is not included, it defaults to a slash
          (/), listing all instance profiles. This parameter allows (through its <a
          href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters
          consisting of either a forward slash (/) by itself or a string that must
          begin and end with forward slashes. In addition, it can contain any ASCII
          character from the ! (<code>\u0021</code>) through the DEL character (<code>\u007F</code>),
          including most punctuation characters, digits, and upper and lowercased
          letters.</p>
        in: query
        name: PathPrefix
        required: false
        schema:
          maxLength: 512
          minLength: 1
          pattern: \u002F[\u0021-\u007F]*
          type: string
      - description: Use this parameter only when paginating results and only after
          you receive a response indicating that the results are truncated. Set it
          to the value of the <code>Marker</code> element in the response that you
          received to indicate where the next call should start.
        in: query
        name: Marker
        required: false
        schema:
          maxLength: 320
          minLength: 1
          pattern: '[\u0020-\u00FF]+'
          type: string
      - description: <p>Use this only when paginating results to indicate the maximum
          number of items you want in the response. If additional items exist beyond
          the maximum you specify, the <code>IsTruncated</code> response element is
          <code>true</code>.</p> <p>If you do not include this parameter, the number
          of items defaults to 100. Note that IAM might return fewer results, even
          when there are more results available. In that case, the <code>IsTruncated</code>
          response element returns <code>true</code>, and <code>Marker</code> contains
          a value to include in the subsequent call that tells the service where to
          continue from.</p>
        in: query
        name: MaxItems
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListInstanceProfilesResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListInstanceProfiles
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Lists the instance profiles that have the specified path prefix.
        If there are none, the operation returns an empty list. For more information
        about instance profiles, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html">About
        instance profiles</a>.</p> <note> <p>IAM resource-listing operations return
        a subset of the available attributes for the resource. For example, this operation
        does not return tags, even though they are an attribute of the returned object.
        To view all of the information for an instance profile, see <a>GetInstanceProfile</a>.</p>
        </note> <p>You can paginate the results using the <code>MaxItems</code> and
        <code>Marker</code> parameters.</p>
      operationId: POST_ListInstanceProfiles
      parameters:
      - description: Pagination limit
        in: query
        name: MaxItems
        required: false
        schema:
          type: string
      - description: Pagination token
        in: query
        name: Marker
        required: false
        schema:
          type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListInstanceProfilesRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListInstanceProfilesResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListInstanceProfiles
  /?Action=ListInstanceProfilesForRole&Version=2010-05-08:
    get:
      description: <p>Lists the instance profiles that have the specified associated
        IAM role. If there are none, the operation returns an empty list. For more
        information about instance profiles, go to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html">About
        instance profiles</a>.</p> <p>You can paginate the results using the <code>MaxItems</code>
        and <code>Marker</code> parameters.</p>
      operationId: GET_ListInstanceProfilesForRole
      parameters:
      - description: '<p>The name of the role to list instance profiles for.</p> <p>This
          parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: RoleName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: Use this parameter only when paginating results and only after
          you receive a response indicating that the results are truncated. Set it
          to the value of the <code>Marker</code> element in the response that you
          received to indicate where the next call should start.
        in: query
        name: Marker
        required: false
        schema:
          maxLength: 320
          minLength: 1
          pattern: '[\u0020-\u00FF]+'
          type: string
      - description: <p>Use this only when paginating results to indicate the maximum
          number of items you want in the response. If additional items exist beyond
          the maximum you specify, the <code>IsTruncated</code> response element is
          <code>true</code>.</p> <p>If you do not include this parameter, the number
          of items defaults to 100. Note that IAM might return fewer results, even
          when there are more results available. In that case, the <code>IsTruncated</code>
          response element returns <code>true</code>, and <code>Marker</code> contains
          a value to include in the subsequent call that tells the service where to
          continue from.</p>
        in: query
        name: MaxItems
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListInstanceProfilesForRoleResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListInstanceProfilesForRole
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Lists the instance profiles that have the specified associated
        IAM role. If there are none, the operation returns an empty list. For more
        information about instance profiles, go to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html">About
        instance profiles</a>.</p> <p>You can paginate the results using the <code>MaxItems</code>
        and <code>Marker</code> parameters.</p>
      operationId: POST_ListInstanceProfilesForRole
      parameters:
      - description: Pagination limit
        in: query
        name: MaxItems
        required: false
        schema:
          type: string
      - description: Pagination token
        in: query
        name: Marker
        required: false
        schema:
          type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListInstanceProfilesForRoleRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListInstanceProfilesForRoleResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListInstanceProfilesForRole
  /?Action=ListMFADeviceTags&Version=2010-05-08:
    get:
      description: Lists the tags that are attached to the specified IAM virtual multi-factor
        authentication (MFA) device. The returned list of tags is sorted by tag key.
        For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.
      operationId: GET_ListMFADeviceTags
      parameters:
      - description: '<p>The unique identifier for the IAM virtual MFA device whose
          tags you want to see. For virtual MFA devices, the serial number is the
          same as the ARN.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: SerialNumber
        required: true
        schema:
          maxLength: 256
          minLength: 9
          pattern: '[\w+=/:,.@-]+'
          type: string
      - description: Use this parameter only when paginating results and only after
          you receive a response indicating that the results are truncated. Set it
          to the value of the <code>Marker</code> element in the response that you
          received to indicate where the next call should start.
        in: query
        name: Marker
        required: false
        schema:
          maxLength: 320
          minLength: 1
          pattern: '[\u0020-\u00FF]+'
          type: string
      - description: <p>Use this only when paginating results to indicate the maximum
          number of items you want in the response. If additional items exist beyond
          the maximum you specify, the <code>IsTruncated</code> response element is
          <code>true</code>.</p> <p>If you do not include this parameter, the number
          of items defaults to 100. Note that IAM might return fewer results, even
          when there are more results available. In that case, the <code>IsTruncated</code>
          response element returns <code>true</code>, and <code>Marker</code> contains
          a value to include in the subsequent call that tells the service where to
          continue from.</p>
        in: query
        name: MaxItems
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListMFADeviceTagsResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListMFADeviceTags
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: Lists the tags that are attached to the specified IAM virtual multi-factor
        authentication (MFA) device. The returned list of tags is sorted by tag key.
        For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.
      operationId: POST_ListMFADeviceTags
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListMFADeviceTagsRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListMFADeviceTagsResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListMFADeviceTags
  /?Action=ListMFADevices&Version=2010-05-08:
    get:
      description: <p>Lists the MFA devices for an IAM user. If the request includes
        a IAM user name, then this operation lists all the MFA devices associated
        with the specified user. If you do not specify a user name, IAM determines
        the user name implicitly based on the Amazon Web Services access key ID signing
        the request for this operation.</p> <p>You can paginate the results using
        the <code>MaxItems</code> and <code>Marker</code> parameters.</p>
      operationId: GET_ListMFADevices
      parameters:
      - description: '<p>The name of the user whose MFA devices you want to list.</p>
          <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: UserName
        required: false
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: Use this parameter only when paginating results and only after
          you receive a response indicating that the results are truncated. Set it
          to the value of the <code>Marker</code> element in the response that you
          received to indicate where the next call should start.
        in: query
        name: Marker
        required: false
        schema:
          maxLength: 320
          minLength: 1
          pattern: '[\u0020-\u00FF]+'
          type: string
      - description: <p>Use this only when paginating results to indicate the maximum
          number of items you want in the response. If additional items exist beyond
          the maximum you specify, the <code>IsTruncated</code> response element is
          <code>true</code>.</p> <p>If you do not include this parameter, the number
          of items defaults to 100. Note that IAM might return fewer results, even
          when there are more results available. In that case, the <code>IsTruncated</code>
          response element returns <code>true</code>, and <code>Marker</code> contains
          a value to include in the subsequent call that tells the service where to
          continue from.</p>
        in: query
        name: MaxItems
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListMFADevicesResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListMFADevices
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Lists the MFA devices for an IAM user. If the request includes
        a IAM user name, then this operation lists all the MFA devices associated
        with the specified user. If you do not specify a user name, IAM determines
        the user name implicitly based on the Amazon Web Services access key ID signing
        the request for this operation.</p> <p>You can paginate the results using
        the <code>MaxItems</code> and <code>Marker</code> parameters.</p>
      operationId: POST_ListMFADevices
      parameters:
      - description: Pagination limit
        in: query
        name: MaxItems
        required: false
        schema:
          type: string
      - description: Pagination token
        in: query
        name: Marker
        required: false
        schema:
          type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListMFADevicesRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListMFADevicesResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListMFADevices
  /?Action=ListOpenIDConnectProviderTags&Version=2010-05-08:
    get:
      description: <p>Lists the tags that are attached to the specified OpenID Connect
        (OIDC)-compatible identity provider. The returned list of tags is sorted by
        tag key. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_oidc.html">About
        web identity federation</a>.</p> <p>For more information about tagging, see
        <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_ListOpenIDConnectProviderTags
      parameters:
      - description: '<p>The ARN of the OpenID Connect (OIDC) identity provider whose
          tags you want to see.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: OpenIDConnectProviderArn
        required: true
        schema:
          description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers
            for Amazon Web Services resources.</p> <p>For more information about ARNs,
            go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
            </p>
          maxLength: 2048
          minLength: 20
          type: string
      - description: Use this parameter only when paginating results and only after
          you receive a response indicating that the results are truncated. Set it
          to the value of the <code>Marker</code> element in the response that you
          received to indicate where the next call should start.
        in: query
        name: Marker
        required: false
        schema:
          maxLength: 320
          minLength: 1
          pattern: '[\u0020-\u00FF]+'
          type: string
      - description: <p>Use this only when paginating results to indicate the maximum
          number of items you want in the response. If additional items exist beyond
          the maximum you specify, the <code>IsTruncated</code> response element is
          <code>true</code>.</p> <p>If you do not include this parameter, the number
          of items defaults to 100. Note that IAM might return fewer results, even
          when there are more results available. In that case, the <code>IsTruncated</code>
          response element returns <code>true</code>, and <code>Marker</code> contains
          a value to include in the subsequent call that tells the service where to
          continue from.</p>
        in: query
        name: MaxItems
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListOpenIDConnectProviderTagsResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-aws-operation-name: ListOpenIDConnectProviderTags
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Lists the tags that are attached to the specified OpenID Connect
        (OIDC)-compatible identity provider. The returned list of tags is sorted by
        tag key. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_oidc.html">About
        web identity federation</a>.</p> <p>For more information about tagging, see
        <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_ListOpenIDConnectProviderTags
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListOpenIDConnectProviderTagsRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListOpenIDConnectProviderTagsResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-aws-operation-name: ListOpenIDConnectProviderTags
  /?Action=ListOpenIDConnectProviders&Version=2010-05-08:
    get:
      description: <p>Lists information about the IAM OpenID Connect (OIDC) provider
        resource objects defined in the Amazon Web Services account.</p> <note> <p>IAM
        resource-listing operations return a subset of the available attributes for
        the resource. For example, this operation does not return tags, even though
        they are an attribute of the returned object. To view all of the information
        for an OIDC provider, see <a>GetOpenIDConnectProvider</a>.</p> </note>
      operationId: GET_ListOpenIDConnectProviders
      parameters: []
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListOpenIDConnectProvidersResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListOpenIDConnectProviders
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Lists information about the IAM OpenID Connect (OIDC) provider
        resource objects defined in the Amazon Web Services account.</p> <note> <p>IAM
        resource-listing operations return a subset of the available attributes for
        the resource. For example, this operation does not return tags, even though
        they are an attribute of the returned object. To view all of the information
        for an OIDC provider, see <a>GetOpenIDConnectProvider</a>.</p> </note>
      operationId: POST_ListOpenIDConnectProviders
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListOpenIDConnectProvidersRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListOpenIDConnectProvidersResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListOpenIDConnectProviders
  /?Action=ListPolicies&Version=2010-05-08:
    get:
      description: <p>Lists all the managed policies that are available in your Amazon
        Web Services account, including your own customer-defined managed policies
        and all Amazon Web Services managed policies.</p> <p>You can filter the list
        of policies that is returned using the optional <code>OnlyAttached</code>,
        <code>Scope</code>, and <code>PathPrefix</code> parameters. For example, to
        list only the customer managed policies in your Amazon Web Services account,
        set <code>Scope</code> to <code>Local</code>. To list only Amazon Web Services
        managed policies, set <code>Scope</code> to <code>AWS</code>.</p> <p>You can
        paginate the results using the <code>MaxItems</code> and <code>Marker</code>
        parameters.</p> <p>For more information about managed policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <note>
        <p>IAM resource-listing operations return a subset of the available attributes
        for the resource. For example, this operation does not return tags, even though
        they are an attribute of the returned object. To view all of the information
        for a customer manged policy, see <a>GetPolicy</a>.</p> </note>
      operationId: GET_ListPolicies
      parameters:
      - description: <p>The scope to use for filtering the results.</p> <p>To list
          only Amazon Web Services managed policies, set <code>Scope</code> to <code>AWS</code>.
          To list only the customer managed policies in your Amazon Web Services account,
          set <code>Scope</code> to <code>Local</code>.</p> <p>This parameter is optional.
          If it is not included, or if it is set to <code>All</code>, all policies
          are returned.</p>
        in: query
        name: Scope
        required: false
        schema:
          enum:
          - All
          - AWS
          - Local
          type: string
      - description: <p>A flag to filter the results to only the attached policies.</p>
          <p>When <code>OnlyAttached</code> is <code>true</code>, the returned list
          contains only the policies that are attached to an IAM user, group, or role.
          When <code>OnlyAttached</code> is <code>false</code>, or when the parameter
          is not included, all policies are returned.</p>
        in: query
        name: OnlyAttached
        required: false
        schema:
          type: boolean
      - description: The path prefix for filtering the results. This parameter is
          optional. If it is not included, it defaults to a slash (/), listing all
          policies. This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of either a forward slash
          (/) by itself or a string that must begin and end with forward slashes.
          In addition, it can contain any ASCII character from the ! (<code>\u0021</code>)
          through the DEL character (<code>\u007F</code>), including most punctuation
          characters, digits, and upper and lowercased letters.
        in: query
        name: PathPrefix
        required: false
        schema:
          maxLength: 512
          minLength: 1
          pattern: ((/[A-Za-z0-9\.,\+@=_-]+)*)/
          type: string
      - description: "<p>The policy usage method to use for filtering the results.</p>\
          \ <p>To list only permissions policies, set\_<code>PolicyUsageFilter</code>\_\
          to\_<code>PermissionsPolicy</code>. To list only the policies used to set\
          \ permissions boundaries, set\_the value to\_<code>PermissionsBoundary</code>.</p>\
          \ <p>This parameter is optional. If it is not included, all policies are\
          \ returned. </p>"
        in: query
        name: PolicyUsageFilter
        required: false
        schema:
          description: <p>The policy usage type that indicates whether the policy
            is used as a permissions policy or as the permissions boundary for an
            entity.</p> <p>For more information about permissions boundaries, see
            <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html">Permissions
            boundaries for IAM identities </a> in the <i>IAM User Guide</i>.</p>
          enum:
          - PermissionsPolicy
          - PermissionsBoundary
          type: string
      - description: Use this parameter only when paginating results and only after
          you receive a response indicating that the results are truncated. Set it
          to the value of the <code>Marker</code> element in the response that you
          received to indicate where the next call should start.
        in: query
        name: Marker
        required: false
        schema:
          maxLength: 320
          minLength: 1
          pattern: '[\u0020-\u00FF]+'
          type: string
      - description: <p>Use this only when paginating results to indicate the maximum
          number of items you want in the response. If additional items exist beyond
          the maximum you specify, the <code>IsTruncated</code> response element is
          <code>true</code>.</p> <p>If you do not include this parameter, the number
          of items defaults to 100. Note that IAM might return fewer results, even
          when there are more results available. In that case, the <code>IsTruncated</code>
          response element returns <code>true</code>, and <code>Marker</code> contains
          a value to include in the subsequent call that tells the service where to
          continue from.</p>
        in: query
        name: MaxItems
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListPoliciesResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListPolicies
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Lists all the managed policies that are available in your Amazon
        Web Services account, including your own customer-defined managed policies
        and all Amazon Web Services managed policies.</p> <p>You can filter the list
        of policies that is returned using the optional <code>OnlyAttached</code>,
        <code>Scope</code>, and <code>PathPrefix</code> parameters. For example, to
        list only the customer managed policies in your Amazon Web Services account,
        set <code>Scope</code> to <code>Local</code>. To list only Amazon Web Services
        managed policies, set <code>Scope</code> to <code>AWS</code>.</p> <p>You can
        paginate the results using the <code>MaxItems</code> and <code>Marker</code>
        parameters.</p> <p>For more information about managed policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <note>
        <p>IAM resource-listing operations return a subset of the available attributes
        for the resource. For example, this operation does not return tags, even though
        they are an attribute of the returned object. To view all of the information
        for a customer manged policy, see <a>GetPolicy</a>.</p> </note>
      operationId: POST_ListPolicies
      parameters:
      - description: Pagination limit
        in: query
        name: MaxItems
        required: false
        schema:
          type: string
      - description: Pagination token
        in: query
        name: Marker
        required: false
        schema:
          type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListPoliciesRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListPoliciesResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListPolicies
  /?Action=ListPoliciesGrantingServiceAccess&Version=2010-05-08:
    get:
      description: "<p>Retrieves a list of policies that the IAM identity (user, group,\
        \ or role) can use to access each specified service.</p> <note> <p>This operation\
        \ does not use other policy types when determining whether a resource could\
        \ access a service. These other policy types include resource-based policies,\
        \ access control lists, Organizations policies, IAM permissions boundaries,\
        \ and STS assume role policies. It only applies permissions policy logic.\
        \ For more about the evaluation of policy types, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_evaluation-logic.html#policy-eval-basics\"\
        >Evaluating policies</a> in the <i>IAM User Guide</i>.</p> </note> <p>The\
        \ list of policies returned by the operation depends on the ARN of the identity\
        \ that you provide.</p> <ul> <li> <p> <b>User</b> \u2013 The list of policies\
        \ includes the managed and inline policies that are attached to the user directly.\
        \ The list also includes any additional managed and inline policies that are\
        \ attached to the group to which the user belongs. </p> </li> <li> <p> <b>Group</b>\
        \ \u2013 The list of policies includes only the managed and inline policies\
        \ that are attached to the group directly. Policies that are attached to the\
        \ group\u2019s user are not included.</p> </li> <li> <p> <b>Role</b> \u2013\
        \ The list of policies includes only the managed and inline policies that\
        \ are attached to the role.</p> </li> </ul> <p>For each managed policy, this\
        \ operation returns the ARN and policy name. For each inline policy, it returns\
        \ the policy name and the entity to which it is attached. Inline policies\
        \ do not have an ARN. For more information about these policy types, see <a\
        \ href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_managed-vs-inline.html\"\
        >Managed policies and inline policies</a> in the <i>IAM User Guide</i>.</p>\
        \ <p>Policies that are attached to users and roles as permissions boundaries\
        \ are not returned. To view which managed policy is currently used to set\
        \ the permissions boundary for a user or role, use the <a>GetUser</a> or <a>GetRole</a>\
        \ operations.</p>"
      operationId: GET_ListPoliciesGrantingServiceAccess
      parameters:
      - description: Use this parameter only when paginating results and only after
          you receive a response indicating that the results are truncated. Set it
          to the value of the <code>Marker</code> element in the response that you
          received to indicate where the next call should start.
        in: query
        name: Marker
        required: false
        schema:
          maxLength: 320
          minLength: 1
          pattern: '[\u0020-\u00FF]+'
          type: string
      - description: The ARN of the IAM identity (user, group, or role) whose policies
          you want to list.
        in: query
        name: Arn
        required: true
        schema:
          description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers
            for Amazon Web Services resources.</p> <p>For more information about ARNs,
            go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
            </p>
          maxLength: 2048
          minLength: 20
          type: string
      - description: "<p>The service namespace for the Amazon Web Services services\
          \ whose policies you want to list.</p> <p>To learn the service namespace\
          \ for a service, see <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/reference_policies_actions-resources-contextkeys.html\"\
          >Actions, resources, and condition keys for Amazon Web Services services</a>\
          \ in the <i>IAM User Guide</i>. Choose the name of the service to view details\
          \ for that service. In the first paragraph, find the service prefix. For\
          \ example, <code>(service prefix: a4b)</code>. For more information about\
          \ service namespaces, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#genref-aws-service-namespaces\"\
          >Amazon Web Services service namespaces</a> in the\_<i>Amazon Web Services\
          \ General Reference</i>.</p>"
        in: query
        name: ServiceNamespaces
        required: true
        schema:
          items:
            $ref: '#/components/schemas/serviceNamespaceType'
          maxItems: 200
          minItems: 1
          type: array
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListPoliciesGrantingServiceAccessResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-aws-operation-name: ListPoliciesGrantingServiceAccess
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: "<p>Retrieves a list of policies that the IAM identity (user, group,\
        \ or role) can use to access each specified service.</p> <note> <p>This operation\
        \ does not use other policy types when determining whether a resource could\
        \ access a service. These other policy types include resource-based policies,\
        \ access control lists, Organizations policies, IAM permissions boundaries,\
        \ and STS assume role policies. It only applies permissions policy logic.\
        \ For more about the evaluation of policy types, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_evaluation-logic.html#policy-eval-basics\"\
        >Evaluating policies</a> in the <i>IAM User Guide</i>.</p> </note> <p>The\
        \ list of policies returned by the operation depends on the ARN of the identity\
        \ that you provide.</p> <ul> <li> <p> <b>User</b> \u2013 The list of policies\
        \ includes the managed and inline policies that are attached to the user directly.\
        \ The list also includes any additional managed and inline policies that are\
        \ attached to the group to which the user belongs. </p> </li> <li> <p> <b>Group</b>\
        \ \u2013 The list of policies includes only the managed and inline policies\
        \ that are attached to the group directly. Policies that are attached to the\
        \ group\u2019s user are not included.</p> </li> <li> <p> <b>Role</b> \u2013\
        \ The list of policies includes only the managed and inline policies that\
        \ are attached to the role.</p> </li> </ul> <p>For each managed policy, this\
        \ operation returns the ARN and policy name. For each inline policy, it returns\
        \ the policy name and the entity to which it is attached. Inline policies\
        \ do not have an ARN. For more information about these policy types, see <a\
        \ href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_managed-vs-inline.html\"\
        >Managed policies and inline policies</a> in the <i>IAM User Guide</i>.</p>\
        \ <p>Policies that are attached to users and roles as permissions boundaries\
        \ are not returned. To view which managed policy is currently used to set\
        \ the permissions boundary for a user or role, use the <a>GetUser</a> or <a>GetRole</a>\
        \ operations.</p>"
      operationId: POST_ListPoliciesGrantingServiceAccess
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListPoliciesGrantingServiceAccessRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListPoliciesGrantingServiceAccessResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-aws-operation-name: ListPoliciesGrantingServiceAccess
  /?Action=ListPolicyTags&Version=2010-05-08:
    get:
      description: Lists the tags that are attached to the specified IAM customer
        managed policy. The returned list of tags is sorted by tag key. For more information
        about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.
      operationId: GET_ListPolicyTags
      parameters:
      - description: '<p>The ARN of the IAM customer managed policy whose tags you
          want to see.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: PolicyArn
        required: true
        schema:
          description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers
            for Amazon Web Services resources.</p> <p>For more information about ARNs,
            go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
            </p>
          maxLength: 2048
          minLength: 20
          type: string
      - description: Use this parameter only when paginating results and only after
          you receive a response indicating that the results are truncated. Set it
          to the value of the <code>Marker</code> element in the response that you
          received to indicate where the next call should start.
        in: query
        name: Marker
        required: false
        schema:
          maxLength: 320
          minLength: 1
          pattern: '[\u0020-\u00FF]+'
          type: string
      - description: <p>Use this only when paginating results to indicate the maximum
          number of items you want in the response. If additional items exist beyond
          the maximum you specify, the <code>IsTruncated</code> response element is
          <code>true</code>.</p> <p>If you do not include this parameter, the number
          of items defaults to 100. Note that IAM might return fewer results, even
          when there are more results available. In that case, the <code>IsTruncated</code>
          response element returns <code>true</code>, and <code>Marker</code> contains
          a value to include in the subsequent call that tells the service where to
          continue from.</p>
        in: query
        name: MaxItems
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListPolicyTagsResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-aws-operation-name: ListPolicyTags
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: Lists the tags that are attached to the specified IAM customer
        managed policy. The returned list of tags is sorted by tag key. For more information
        about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.
      operationId: POST_ListPolicyTags
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListPolicyTagsRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListPolicyTagsResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-aws-operation-name: ListPolicyTags
  /?Action=ListPolicyVersions&Version=2010-05-08:
    get:
      description: <p>Lists information about the versions of the specified managed
        policy, including the version that is currently set as the policy's default
        version.</p> <p>For more information about managed policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_ListPolicyVersions
      parameters:
      - description: <p>The Amazon Resource Name (ARN) of the IAM policy for which
          you want the versions.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
          Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        in: query
        name: PolicyArn
        required: true
        schema:
          description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers
            for Amazon Web Services resources.</p> <p>For more information about ARNs,
            go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
            </p>
          maxLength: 2048
          minLength: 20
          type: string
      - description: Use this parameter only when paginating results and only after
          you receive a response indicating that the results are truncated. Set it
          to the value of the <code>Marker</code> element in the response that you
          received to indicate where the next call should start.
        in: query
        name: Marker
        required: false
        schema:
          maxLength: 320
          minLength: 1
          pattern: '[\u0020-\u00FF]+'
          type: string
      - description: <p>Use this only when paginating results to indicate the maximum
          number of items you want in the response. If additional items exist beyond
          the maximum you specify, the <code>IsTruncated</code> response element is
          <code>true</code>.</p> <p>If you do not include this parameter, the number
          of items defaults to 100. Note that IAM might return fewer results, even
          when there are more results available. In that case, the <code>IsTruncated</code>
          response element returns <code>true</code>, and <code>Marker</code> contains
          a value to include in the subsequent call that tells the service where to
          continue from.</p>
        in: query
        name: MaxItems
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListPolicyVersionsResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListPolicyVersions
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Lists information about the versions of the specified managed
        policy, including the version that is currently set as the policy's default
        version.</p> <p>For more information about managed policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_ListPolicyVersions
      parameters:
      - description: Pagination limit
        in: query
        name: MaxItems
        required: false
        schema:
          type: string
      - description: Pagination token
        in: query
        name: Marker
        required: false
        schema:
          type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListPolicyVersionsRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListPolicyVersionsResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListPolicyVersions
  /?Action=ListRolePolicies&Version=2010-05-08:
    get:
      description: <p>Lists the names of the inline policies that are embedded in
        the specified IAM role.</p> <p>An IAM role can also have managed policies
        attached to it. To list the managed policies that are attached to a role,
        use <a>ListAttachedRolePolicies</a>. For more information about policies,
        see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>You
        can paginate the results using the <code>MaxItems</code> and <code>Marker</code>
        parameters. If there are no inline policies embedded with the specified role,
        the operation returns an empty list.</p>
      operationId: GET_ListRolePolicies
      parameters:
      - description: '<p>The name of the role to list policies for.</p> <p>This parameter
          allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters consisting of upper and lowercase alphanumeric characters
          with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        in: query
        name: RoleName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: Use this parameter only when paginating results and only after
          you receive a response indicating that the results are truncated. Set it
          to the value of the <code>Marker</code> element in the response that you
          received to indicate where the next call should start.
        in: query
        name: Marker
        required: false
        schema:
          maxLength: 320
          minLength: 1
          pattern: '[\u0020-\u00FF]+'
          type: string
      - description: <p>Use this only when paginating results to indicate the maximum
          number of items you want in the response. If additional items exist beyond
          the maximum you specify, the <code>IsTruncated</code> response element is
          <code>true</code>.</p> <p>If you do not include this parameter, the number
          of items defaults to 100. Note that IAM might return fewer results, even
          when there are more results available. In that case, the <code>IsTruncated</code>
          response element returns <code>true</code>, and <code>Marker</code> contains
          a value to include in the subsequent call that tells the service where to
          continue from.</p>
        in: query
        name: MaxItems
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListRolePoliciesResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListRolePolicies
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Lists the names of the inline policies that are embedded in
        the specified IAM role.</p> <p>An IAM role can also have managed policies
        attached to it. To list the managed policies that are attached to a role,
        use <a>ListAttachedRolePolicies</a>. For more information about policies,
        see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>You
        can paginate the results using the <code>MaxItems</code> and <code>Marker</code>
        parameters. If there are no inline policies embedded with the specified role,
        the operation returns an empty list.</p>
      operationId: POST_ListRolePolicies
      parameters:
      - description: Pagination limit
        in: query
        name: MaxItems
        required: false
        schema:
          type: string
      - description: Pagination token
        in: query
        name: Marker
        required: false
        schema:
          type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListRolePoliciesRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListRolePoliciesResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListRolePolicies
  /?Action=ListRoleTags&Version=2010-05-08:
    get:
      description: Lists the tags that are attached to the specified role. The returned
        list of tags is sorted by tag key. For more information about tagging, see
        <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.
      operationId: GET_ListRoleTags
      parameters:
      - description: '<p>The name of the IAM role for which you want to see the list
          of tags.</p> <p>This parameter accepts (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters that consist of upper and lowercase
          alphanumeric characters with no spaces. You can also include any of the
          following characters: _+=,.@-</p>'
        in: query
        name: RoleName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: Use this parameter only when paginating results and only after
          you receive a response indicating that the results are truncated. Set it
          to the value of the <code>Marker</code> element in the response that you
          received to indicate where the next call should start.
        in: query
        name: Marker
        required: false
        schema:
          maxLength: 320
          minLength: 1
          pattern: '[\u0020-\u00FF]+'
          type: string
      - description: <p>Use this only when paginating results to indicate the maximum
          number of items you want in the response. If additional items exist beyond
          the maximum you specify, the <code>IsTruncated</code> response element is
          <code>true</code>.</p> <p>If you do not include this parameter, the number
          of items defaults to 100. Note that IAM might return fewer results, even
          when there are more results available. In that case, the <code>IsTruncated</code>
          response element returns <code>true</code>, and <code>Marker</code> contains
          a value to include in the subsequent call that tells the service where to
          continue from.</p>
        in: query
        name: MaxItems
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListRoleTagsResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListRoleTags
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: Lists the tags that are attached to the specified role. The returned
        list of tags is sorted by tag key. For more information about tagging, see
        <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.
      operationId: POST_ListRoleTags
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListRoleTagsRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListRoleTagsResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListRoleTags
  /?Action=ListRoles&Version=2010-05-08:
    get:
      description: <p>Lists the IAM roles that have the specified path prefix. If
        there are none, the operation returns an empty list. For more information
        about roles, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html">Working
        with roles</a>.</p> <note> <p>IAM resource-listing operations return a subset
        of the available attributes for the resource. For example, this operation
        does not return tags, even though they are an attribute of the returned object.
        To view all of the information for a role, see <a>GetRole</a>.</p> </note>
        <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code>
        parameters.</p>
      operationId: GET_ListRoles
      parameters:
      - description: <p> The path prefix for filtering the results. For example, the
          prefix <code>/application_abc/component_xyz/</code> gets all roles whose
          path starts with <code>/application_abc/component_xyz/</code>.</p> <p>This
          parameter is optional. If it is not included, it defaults to a slash (/),
          listing all roles. This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of either a forward slash
          (/) by itself or a string that must begin and end with forward slashes.
          In addition, it can contain any ASCII character from the ! (<code>\u0021</code>)
          through the DEL character (<code>\u007F</code>), including most punctuation
          characters, digits, and upper and lowercased letters.</p>
        in: query
        name: PathPrefix
        required: false
        schema:
          maxLength: 512
          minLength: 1
          pattern: \u002F[\u0021-\u007F]*
          type: string
      - description: Use this parameter only when paginating results and only after
          you receive a response indicating that the results are truncated. Set it
          to the value of the <code>Marker</code> element in the response that you
          received to indicate where the next call should start.
        in: query
        name: Marker
        required: false
        schema:
          maxLength: 320
          minLength: 1
          pattern: '[\u0020-\u00FF]+'
          type: string
      - description: <p>Use this only when paginating results to indicate the maximum
          number of items you want in the response. If additional items exist beyond
          the maximum you specify, the <code>IsTruncated</code> response element is
          <code>true</code>.</p> <p>If you do not include this parameter, the number
          of items defaults to 100. Note that IAM might return fewer results, even
          when there are more results available. In that case, the <code>IsTruncated</code>
          response element returns <code>true</code>, and <code>Marker</code> contains
          a value to include in the subsequent call that tells the service where to
          continue from.</p>
        in: query
        name: MaxItems
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListRolesResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListRoles
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Lists the IAM roles that have the specified path prefix. If
        there are none, the operation returns an empty list. For more information
        about roles, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html">Working
        with roles</a>.</p> <note> <p>IAM resource-listing operations return a subset
        of the available attributes for the resource. For example, this operation
        does not return tags, even though they are an attribute of the returned object.
        To view all of the information for a role, see <a>GetRole</a>.</p> </note>
        <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code>
        parameters.</p>
      operationId: POST_ListRoles
      parameters:
      - description: Pagination limit
        in: query
        name: MaxItems
        required: false
        schema:
          type: string
      - description: Pagination token
        in: query
        name: Marker
        required: false
        schema:
          type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListRolesRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListRolesResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListRoles
  /?Action=ListSAMLProviderTags&Version=2010-05-08:
    get:
      description: <p>Lists the tags that are attached to the specified Security Assertion
        Markup Language (SAML) identity provider. The returned list of tags is sorted
        by tag key. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_saml.html">About
        SAML 2.0-based federation</a>.</p> <p>For more information about tagging,
        see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_ListSAMLProviderTags
      parameters:
      - description: '<p>The ARN of the Security Assertion Markup Language (SAML)
          identity provider whose tags you want to see.</p> <p>This parameter allows
          (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters consisting of upper and lowercase alphanumeric characters
          with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        in: query
        name: SAMLProviderArn
        required: true
        schema:
          description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers
            for Amazon Web Services resources.</p> <p>For more information about ARNs,
            go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
            </p>
          maxLength: 2048
          minLength: 20
          type: string
      - description: Use this parameter only when paginating results and only after
          you receive a response indicating that the results are truncated. Set it
          to the value of the <code>Marker</code> element in the response that you
          received to indicate where the next call should start.
        in: query
        name: Marker
        required: false
        schema:
          maxLength: 320
          minLength: 1
          pattern: '[\u0020-\u00FF]+'
          type: string
      - description: <p>Use this only when paginating results to indicate the maximum
          number of items you want in the response. If additional items exist beyond
          the maximum you specify, the <code>IsTruncated</code> response element is
          <code>true</code>.</p> <p>If you do not include this parameter, the number
          of items defaults to 100. Note that IAM might return fewer results, even
          when there are more results available. In that case, the <code>IsTruncated</code>
          response element returns <code>true</code>, and <code>Marker</code> contains
          a value to include in the subsequent call that tells the service where to
          continue from.</p>
        in: query
        name: MaxItems
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListSAMLProviderTagsResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-aws-operation-name: ListSAMLProviderTags
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Lists the tags that are attached to the specified Security Assertion
        Markup Language (SAML) identity provider. The returned list of tags is sorted
        by tag key. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_saml.html">About
        SAML 2.0-based federation</a>.</p> <p>For more information about tagging,
        see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_ListSAMLProviderTags
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListSAMLProviderTagsRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListSAMLProviderTagsResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-aws-operation-name: ListSAMLProviderTags
  /?Action=ListSAMLProviders&Version=2010-05-08:
    get:
      description: <p>Lists the SAML provider resource objects defined in IAM in the
        account. IAM resource-listing operations return a subset of the available
        attributes for the resource. For example, this operation does not return tags,
        even though they are an attribute of the returned object. To view all of the
        information for a SAML provider, see <a>GetSAMLProvider</a>.</p> <important>
        <p> This operation requires <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature
        Version 4</a>.</p> </important>
      operationId: GET_ListSAMLProviders
      parameters: []
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListSAMLProvidersResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListSAMLProviders
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Lists the SAML provider resource objects defined in IAM in the
        account. IAM resource-listing operations return a subset of the available
        attributes for the resource. For example, this operation does not return tags,
        even though they are an attribute of the returned object. To view all of the
        information for a SAML provider, see <a>GetSAMLProvider</a>.</p> <important>
        <p> This operation requires <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature
        Version 4</a>.</p> </important>
      operationId: POST_ListSAMLProviders
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListSAMLProvidersRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListSAMLProvidersResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListSAMLProviders
  /?Action=ListSSHPublicKeys&Version=2010-05-08:
    get:
      description: <p>Returns information about the SSH public keys associated with
        the specified IAM user. If none exists, the operation returns an empty list.</p>
        <p>The SSH public keys returned by this operation are used only for authenticating
        the IAM user to an CodeCommit repository. For more information about using
        SSH keys to authenticate to an CodeCommit repository, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-credentials-ssh.html">Set
        up CodeCommit for SSH connections</a> in the <i>CodeCommit User Guide</i>.</p>
        <p>Although each user is limited to a small number of keys, you can still
        paginate the results using the <code>MaxItems</code> and <code>Marker</code>
        parameters.</p>
      operationId: GET_ListSSHPublicKeys
      parameters:
      - description: '<p>The name of the IAM user to list SSH public keys for. If
          none is specified, the <code>UserName</code> field is determined implicitly
          based on the Amazon Web Services access key used to sign the request.</p>
          <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: UserName
        required: false
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: Use this parameter only when paginating results and only after
          you receive a response indicating that the results are truncated. Set it
          to the value of the <code>Marker</code> element in the response that you
          received to indicate where the next call should start.
        in: query
        name: Marker
        required: false
        schema:
          maxLength: 320
          minLength: 1
          pattern: '[\u0020-\u00FF]+'
          type: string
      - description: <p>Use this only when paginating results to indicate the maximum
          number of items you want in the response. If additional items exist beyond
          the maximum you specify, the <code>IsTruncated</code> response element is
          <code>true</code>.</p> <p>If you do not include this parameter, the number
          of items defaults to 100. Note that IAM might return fewer results, even
          when there are more results available. In that case, the <code>IsTruncated</code>
          response element returns <code>true</code>, and <code>Marker</code> contains
          a value to include in the subsequent call that tells the service where to
          continue from.</p>
        in: query
        name: MaxItems
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListSSHPublicKeysResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
      x-aws-operation-name: ListSSHPublicKeys
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Returns information about the SSH public keys associated with
        the specified IAM user. If none exists, the operation returns an empty list.</p>
        <p>The SSH public keys returned by this operation are used only for authenticating
        the IAM user to an CodeCommit repository. For more information about using
        SSH keys to authenticate to an CodeCommit repository, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-credentials-ssh.html">Set
        up CodeCommit for SSH connections</a> in the <i>CodeCommit User Guide</i>.</p>
        <p>Although each user is limited to a small number of keys, you can still
        paginate the results using the <code>MaxItems</code> and <code>Marker</code>
        parameters.</p>
      operationId: POST_ListSSHPublicKeys
      parameters:
      - description: Pagination limit
        in: query
        name: MaxItems
        required: false
        schema:
          type: string
      - description: Pagination token
        in: query
        name: Marker
        required: false
        schema:
          type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListSSHPublicKeysRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListSSHPublicKeysResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
      x-aws-operation-name: ListSSHPublicKeys
  /?Action=ListServerCertificateTags&Version=2010-05-08:
    get:
      description: <p>Lists the tags that are attached to the specified IAM server
        certificate. The returned list of tags is sorted by tag key. For more information
        about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.</p> <note> <p>For certificates
        in a Region supported by Certificate Manager (ACM), we recommend that you
        don't use IAM server certificates. Instead, use ACM to provision, manage,
        and deploy your server certificates. For more information about IAM server
        certificates, <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html">Working
        with server certificates</a> in the <i>IAM User Guide</i>.</p> </note>
      operationId: GET_ListServerCertificateTags
      parameters:
      - description: '<p>The name of the IAM server certificate whose tags you want
          to see.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: ServerCertificateName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: Use this parameter only when paginating results and only after
          you receive a response indicating that the results are truncated. Set it
          to the value of the <code>Marker</code> element in the response that you
          received to indicate where the next call should start.
        in: query
        name: Marker
        required: false
        schema:
          maxLength: 320
          minLength: 1
          pattern: '[\u0020-\u00FF]+'
          type: string
      - description: <p>Use this only when paginating results to indicate the maximum
          number of items you want in the response. If additional items exist beyond
          the maximum you specify, the <code>IsTruncated</code> response element is
          <code>true</code>.</p> <p>If you do not include this parameter, the number
          of items defaults to 100. Note that IAM might return fewer results, even
          when there are more results available. In that case, the <code>IsTruncated</code>
          response element returns <code>true</code>, and <code>Marker</code> contains
          a value to include in the subsequent call that tells the service where to
          continue from.</p>
        in: query
        name: MaxItems
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListServerCertificateTagsResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListServerCertificateTags
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Lists the tags that are attached to the specified IAM server
        certificate. The returned list of tags is sorted by tag key. For more information
        about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.</p> <note> <p>For certificates
        in a Region supported by Certificate Manager (ACM), we recommend that you
        don't use IAM server certificates. Instead, use ACM to provision, manage,
        and deploy your server certificates. For more information about IAM server
        certificates, <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html">Working
        with server certificates</a> in the <i>IAM User Guide</i>.</p> </note>
      operationId: POST_ListServerCertificateTags
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListServerCertificateTagsRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListServerCertificateTagsResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListServerCertificateTags
  /?Action=ListServerCertificates&Version=2010-05-08:
    get:
      description: <p>Lists the server certificates stored in IAM that have the specified
        path prefix. If none exist, the operation returns an empty list.</p> <p> You
        can paginate the results using the <code>MaxItems</code> and <code>Marker</code>
        parameters.</p> <p>For more information about working with server certificates,
        see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html">Working
        with server certificates</a> in the <i>IAM User Guide</i>. This topic also
        includes a list of Amazon Web Services services that can use the server certificates
        that you manage with IAM.</p> <note> <p>IAM resource-listing operations return
        a subset of the available attributes for the resource. For example, this operation
        does not return tags, even though they are an attribute of the returned object.
        To view all of the information for a servercertificate, see <a>GetServerCertificate</a>.</p>
        </note>
      operationId: GET_ListServerCertificates
      parameters:
      - description: '<p> The path prefix for filtering the results. For example:
          <code>/company/servercerts</code> would get all server certificates for
          which the path starts with <code>/company/servercerts</code>.</p> <p>This
          parameter is optional. If it is not included, it defaults to a slash (/),
          listing all server certificates. This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of either a forward slash
          (/) by itself or a string that must begin and end with forward slashes.
          In addition, it can contain any ASCII character from the ! (<code>\u0021</code>)
          through the DEL character (<code>\u007F</code>), including most punctuation
          characters, digits, and upper and lowercased letters.</p>'
        in: query
        name: PathPrefix
        required: false
        schema:
          maxLength: 512
          minLength: 1
          pattern: \u002F[\u0021-\u007F]*
          type: string
      - description: Use this parameter only when paginating results and only after
          you receive a response indicating that the results are truncated. Set it
          to the value of the <code>Marker</code> element in the response that you
          received to indicate where the next call should start.
        in: query
        name: Marker
        required: false
        schema:
          maxLength: 320
          minLength: 1
          pattern: '[\u0020-\u00FF]+'
          type: string
      - description: <p>Use this only when paginating results to indicate the maximum
          number of items you want in the response. If additional items exist beyond
          the maximum you specify, the <code>IsTruncated</code> response element is
          <code>true</code>.</p> <p>If you do not include this parameter, the number
          of items defaults to 100. Note that IAM might return fewer results, even
          when there are more results available. In that case, the <code>IsTruncated</code>
          response element returns <code>true</code>, and <code>Marker</code> contains
          a value to include in the subsequent call that tells the service where to
          continue from.</p>
        in: query
        name: MaxItems
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListServerCertificatesResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListServerCertificates
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Lists the server certificates stored in IAM that have the specified
        path prefix. If none exist, the operation returns an empty list.</p> <p> You
        can paginate the results using the <code>MaxItems</code> and <code>Marker</code>
        parameters.</p> <p>For more information about working with server certificates,
        see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html">Working
        with server certificates</a> in the <i>IAM User Guide</i>. This topic also
        includes a list of Amazon Web Services services that can use the server certificates
        that you manage with IAM.</p> <note> <p>IAM resource-listing operations return
        a subset of the available attributes for the resource. For example, this operation
        does not return tags, even though they are an attribute of the returned object.
        To view all of the information for a servercertificate, see <a>GetServerCertificate</a>.</p>
        </note>
      operationId: POST_ListServerCertificates
      parameters:
      - description: Pagination limit
        in: query
        name: MaxItems
        required: false
        schema:
          type: string
      - description: Pagination token
        in: query
        name: Marker
        required: false
        schema:
          type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListServerCertificatesRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListServerCertificatesResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListServerCertificates
  /?Action=ListServiceSpecificCredentials&Version=2010-05-08:
    get:
      description: Returns information about the service-specific credentials associated
        with the specified IAM user. If none exists, the operation returns an empty
        list. The service-specific credentials returned by this operation are used
        only for authenticating the IAM user to a specific service. For more information
        about using service-specific credentials to authenticate to an Amazon Web
        Services service, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-gc.html">Set
        up service-specific credentials</a> in the CodeCommit User Guide.
      operationId: GET_ListServiceSpecificCredentials
      parameters:
      - description: '<p>The name of the user whose service-specific credentials you
          want information about. If this value is not specified, then the operation
          assumes the user whose credentials are used to call the operation.</p> <p>This
          parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: UserName
        required: false
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: Filters the returned results to only those for the specified
          Amazon Web Services service. If not specified, then Amazon Web Services
          returns service-specific credentials for all services.
        in: query
        name: ServiceName
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListServiceSpecificCredentialsResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceNotSupportedException'
          description: ServiceNotSupportedException
      x-aws-operation-name: ListServiceSpecificCredentials
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: Returns information about the service-specific credentials associated
        with the specified IAM user. If none exists, the operation returns an empty
        list. The service-specific credentials returned by this operation are used
        only for authenticating the IAM user to a specific service. For more information
        about using service-specific credentials to authenticate to an Amazon Web
        Services service, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-gc.html">Set
        up service-specific credentials</a> in the CodeCommit User Guide.
      operationId: POST_ListServiceSpecificCredentials
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListServiceSpecificCredentialsRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListServiceSpecificCredentialsResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceNotSupportedException'
          description: ServiceNotSupportedException
      x-aws-operation-name: ListServiceSpecificCredentials
  /?Action=ListSigningCertificates&Version=2010-05-08:
    get:
      description: <p>Returns information about the signing certificates associated
        with the specified IAM user. If none exists, the operation returns an empty
        list.</p> <p>Although each user is limited to a small number of signing certificates,
        you can still paginate the results using the <code>MaxItems</code> and <code>Marker</code>
        parameters.</p> <p>If the <code>UserName</code> field is not specified, the
        user name is determined implicitly based on the Amazon Web Services access
        key ID used to sign the request for this operation. This operation works for
        access keys under the Amazon Web Services account. Consequently, you can use
        this operation to manage Amazon Web Services account root user credentials
        even if the Amazon Web Services account has no associated users.</p>
      operationId: GET_ListSigningCertificates
      parameters:
      - description: '<p>The name of the IAM user whose signing certificates you want
          to examine.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: UserName
        required: false
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: Use this parameter only when paginating results and only after
          you receive a response indicating that the results are truncated. Set it
          to the value of the <code>Marker</code> element in the response that you
          received to indicate where the next call should start.
        in: query
        name: Marker
        required: false
        schema:
          maxLength: 320
          minLength: 1
          pattern: '[\u0020-\u00FF]+'
          type: string
      - description: <p>Use this only when paginating results to indicate the maximum
          number of items you want in the response. If additional items exist beyond
          the maximum you specify, the <code>IsTruncated</code> response element is
          <code>true</code>.</p> <p>If you do not include this parameter, the number
          of items defaults to 100. Note that IAM might return fewer results, even
          when there are more results available. In that case, the <code>IsTruncated</code>
          response element returns <code>true</code>, and <code>Marker</code> contains
          a value to include in the subsequent call that tells the service where to
          continue from.</p>
        in: query
        name: MaxItems
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListSigningCertificatesResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListSigningCertificates
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Returns information about the signing certificates associated
        with the specified IAM user. If none exists, the operation returns an empty
        list.</p> <p>Although each user is limited to a small number of signing certificates,
        you can still paginate the results using the <code>MaxItems</code> and <code>Marker</code>
        parameters.</p> <p>If the <code>UserName</code> field is not specified, the
        user name is determined implicitly based on the Amazon Web Services access
        key ID used to sign the request for this operation. This operation works for
        access keys under the Amazon Web Services account. Consequently, you can use
        this operation to manage Amazon Web Services account root user credentials
        even if the Amazon Web Services account has no associated users.</p>
      operationId: POST_ListSigningCertificates
      parameters:
      - description: Pagination limit
        in: query
        name: MaxItems
        required: false
        schema:
          type: string
      - description: Pagination token
        in: query
        name: Marker
        required: false
        schema:
          type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListSigningCertificatesRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListSigningCertificatesResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListSigningCertificates
  /?Action=ListUserPolicies&Version=2010-05-08:
    get:
      description: <p>Lists the names of the inline policies embedded in the specified
        IAM user.</p> <p>An IAM user can also have managed policies attached to it.
        To list the managed policies that are attached to a user, use <a>ListAttachedUserPolicies</a>.
        For more information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>You
        can paginate the results using the <code>MaxItems</code> and <code>Marker</code>
        parameters. If there are no inline policies embedded with the specified user,
        the operation returns an empty list.</p>
      operationId: GET_ListUserPolicies
      parameters:
      - description: '<p>The name of the user to list policies for.</p> <p>This parameter
          allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters consisting of upper and lowercase alphanumeric characters
          with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        in: query
        name: UserName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: Use this parameter only when paginating results and only after
          you receive a response indicating that the results are truncated. Set it
          to the value of the <code>Marker</code> element in the response that you
          received to indicate where the next call should start.
        in: query
        name: Marker
        required: false
        schema:
          maxLength: 320
          minLength: 1
          pattern: '[\u0020-\u00FF]+'
          type: string
      - description: <p>Use this only when paginating results to indicate the maximum
          number of items you want in the response. If additional items exist beyond
          the maximum you specify, the <code>IsTruncated</code> response element is
          <code>true</code>.</p> <p>If you do not include this parameter, the number
          of items defaults to 100. Note that IAM might return fewer results, even
          when there are more results available. In that case, the <code>IsTruncated</code>
          response element returns <code>true</code>, and <code>Marker</code> contains
          a value to include in the subsequent call that tells the service where to
          continue from.</p>
        in: query
        name: MaxItems
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListUserPoliciesResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListUserPolicies
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Lists the names of the inline policies embedded in the specified
        IAM user.</p> <p>An IAM user can also have managed policies attached to it.
        To list the managed policies that are attached to a user, use <a>ListAttachedUserPolicies</a>.
        For more information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>You
        can paginate the results using the <code>MaxItems</code> and <code>Marker</code>
        parameters. If there are no inline policies embedded with the specified user,
        the operation returns an empty list.</p>
      operationId: POST_ListUserPolicies
      parameters:
      - description: Pagination limit
        in: query
        name: MaxItems
        required: false
        schema:
          type: string
      - description: Pagination token
        in: query
        name: Marker
        required: false
        schema:
          type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListUserPoliciesRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListUserPoliciesResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListUserPolicies
  /?Action=ListUserTags&Version=2010-05-08:
    get:
      description: Lists the tags that are attached to the specified IAM user. The
        returned list of tags is sorted by tag key. For more information about tagging,
        see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.
      operationId: GET_ListUserTags
      parameters:
      - description: '<p>The name of the IAM user whose tags you want to see.</p>
          <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: UserName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: Use this parameter only when paginating results and only after
          you receive a response indicating that the results are truncated. Set it
          to the value of the <code>Marker</code> element in the response that you
          received to indicate where the next call should start.
        in: query
        name: Marker
        required: false
        schema:
          maxLength: 320
          minLength: 1
          pattern: '[\u0020-\u00FF]+'
          type: string
      - description: <p>Use this only when paginating results to indicate the maximum
          number of items you want in the response. If additional items exist beyond
          the maximum you specify, the <code>IsTruncated</code> response element is
          <code>true</code>.</p> <p>If you do not include this parameter, the number
          of items defaults to 100. Note that IAM might return fewer results, even
          when there are more results available. In that case, the <code>IsTruncated</code>
          response element returns <code>true</code>, and <code>Marker</code> contains
          a value to include in the subsequent call that tells the service where to
          continue from.</p>
        in: query
        name: MaxItems
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListUserTagsResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListUserTags
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: Lists the tags that are attached to the specified IAM user. The
        returned list of tags is sorted by tag key. For more information about tagging,
        see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.
      operationId: POST_ListUserTags
      parameters:
      - description: Pagination limit
        in: query
        name: MaxItems
        required: false
        schema:
          type: string
      - description: Pagination token
        in: query
        name: Marker
        required: false
        schema:
          type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListUserTagsRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListUserTagsResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListUserTags
  /?Action=ListUsers&Version=2010-05-08:
    get:
      description: <p>Lists the IAM users that have the specified path prefix. If
        no path prefix is specified, the operation returns all users in the Amazon
        Web Services account. If there are none, the operation returns an empty list.</p>
        <note> <p>IAM resource-listing operations return a subset of the available
        attributes for the resource. For example, this operation does not return tags,
        even though they are an attribute of the returned object. To view all of the
        information for a user, see <a>GetUser</a>.</p> </note> <p>You can paginate
        the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>
      operationId: GET_ListUsers
      parameters:
      - description: '<p> The path prefix for filtering the results. For example:
          <code>/division_abc/subdivision_xyz/</code>, which would get all user names
          whose path starts with <code>/division_abc/subdivision_xyz/</code>.</p>
          <p>This parameter is optional. If it is not included, it defaults to a slash
          (/), listing all user names. This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of either a forward slash
          (/) by itself or a string that must begin and end with forward slashes.
          In addition, it can contain any ASCII character from the ! (<code>\u0021</code>)
          through the DEL character (<code>\u007F</code>), including most punctuation
          characters, digits, and upper and lowercased letters.</p>'
        in: query
        name: PathPrefix
        required: false
        schema:
          maxLength: 512
          minLength: 1
          pattern: \u002F[\u0021-\u007F]*
          type: string
      - description: Use this parameter only when paginating results and only after
          you receive a response indicating that the results are truncated. Set it
          to the value of the <code>Marker</code> element in the response that you
          received to indicate where the next call should start.
        in: query
        name: Marker
        required: false
        schema:
          maxLength: 320
          minLength: 1
          pattern: '[\u0020-\u00FF]+'
          type: string
      - description: <p>Use this only when paginating results to indicate the maximum
          number of items you want in the response. If additional items exist beyond
          the maximum you specify, the <code>IsTruncated</code> response element is
          <code>true</code>.</p> <p>If you do not include this parameter, the number
          of items defaults to 100. Note that IAM might return fewer results, even
          when there are more results available. In that case, the <code>IsTruncated</code>
          response element returns <code>true</code>, and <code>Marker</code> contains
          a value to include in the subsequent call that tells the service where to
          continue from.</p>
        in: query
        name: MaxItems
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                type: object
                properties:
                  ListUsersResult:
                    $ref: '#/components/schemas/ListUsersResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListUsers
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Lists the IAM users that have the specified path prefix. If
        no path prefix is specified, the operation returns all users in the Amazon
        Web Services account. If there are none, the operation returns an empty list.</p>
        <note> <p>IAM resource-listing operations return a subset of the available
        attributes for the resource. For example, this operation does not return tags,
        even though they are an attribute of the returned object. To view all of the
        information for a user, see <a>GetUser</a>.</p> </note> <p>You can paginate
        the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>
      operationId: POST_ListUsers
      parameters:
      - description: Pagination limit
        in: query
        name: MaxItems
        required: false
        schema:
          type: string
      - description: Pagination token
        in: query
        name: Marker
        required: false
        schema:
          type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListUsersRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListUsersResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListUsers
  /?Action=ListVirtualMFADevices&Version=2010-05-08:
    get:
      description: <p>Lists the virtual MFA devices defined in the Amazon Web Services
        account by assignment status. If you do not specify an assignment status,
        the operation returns a list of all virtual MFA devices. Assignment status
        can be <code>Assigned</code>, <code>Unassigned</code>, or <code>Any</code>.</p>
        <note> <p>IAM resource-listing operations return a subset of the available
        attributes for the resource. For example, this operation does not return tags,
        even though they are an attribute of the returned object. To view tag information
        for a virtual MFA device, see <a>ListMFADeviceTags</a>.</p> </note> <p>You
        can paginate the results using the <code>MaxItems</code> and <code>Marker</code>
        parameters.</p>
      operationId: GET_ListVirtualMFADevices
      parameters:
      - description: ' The status (<code>Unassigned</code> or <code>Assigned</code>)
          of the devices to list. If you do not specify an <code>AssignmentStatus</code>,
          the operation defaults to <code>Any</code>, which lists both assigned and
          unassigned virtual MFA devices.,'
        in: query
        name: AssignmentStatus
        required: false
        schema:
          enum:
          - Assigned
          - Unassigned
          - Any
          type: string
      - description: Use this parameter only when paginating results and only after
          you receive a response indicating that the results are truncated. Set it
          to the value of the <code>Marker</code> element in the response that you
          received to indicate where the next call should start.
        in: query
        name: Marker
        required: false
        schema:
          maxLength: 320
          minLength: 1
          pattern: '[\u0020-\u00FF]+'
          type: string
      - description: <p>Use this only when paginating results to indicate the maximum
          number of items you want in the response. If additional items exist beyond
          the maximum you specify, the <code>IsTruncated</code> response element is
          <code>true</code>.</p> <p>If you do not include this parameter, the number
          of items defaults to 100. Note that IAM might return fewer results, even
          when there are more results available. In that case, the <code>IsTruncated</code>
          response element returns <code>true</code>, and <code>Marker</code> contains
          a value to include in the subsequent call that tells the service where to
          continue from.</p>
        in: query
        name: MaxItems
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListVirtualMFADevicesResponse'
          description: Success
      x-aws-operation-name: ListVirtualMFADevices
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Lists the virtual MFA devices defined in the Amazon Web Services
        account by assignment status. If you do not specify an assignment status,
        the operation returns a list of all virtual MFA devices. Assignment status
        can be <code>Assigned</code>, <code>Unassigned</code>, or <code>Any</code>.</p>
        <note> <p>IAM resource-listing operations return a subset of the available
        attributes for the resource. For example, this operation does not return tags,
        even though they are an attribute of the returned object. To view tag information
        for a virtual MFA device, see <a>ListMFADeviceTags</a>.</p> </note> <p>You
        can paginate the results using the <code>MaxItems</code> and <code>Marker</code>
        parameters.</p>
      operationId: POST_ListVirtualMFADevices
      parameters:
      - description: Pagination limit
        in: query
        name: MaxItems
        required: false
        schema:
          type: string
      - description: Pagination token
        in: query
        name: Marker
        required: false
        schema:
          type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListVirtualMFADevicesRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListVirtualMFADevicesResponse'
          description: Success
      x-aws-operation-name: ListVirtualMFADevices
  /?Action=PutGroupPolicy&Version=2010-05-08:
    get:
      description: <p>Adds or updates an inline policy document that is embedded in
        the specified IAM group.</p> <p>A user can also have managed policies attached
        to it. To attach a managed policy to a group, use <a>AttachGroupPolicy</a>.
        To create a new managed policy, use <a>CreatePolicy</a>. For information about
        policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>For
        information about the maximum number of inline policies that you can embed
        in a group, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html">IAM
        and STS quotas</a> in the <i>IAM User Guide</i>.</p> <note> <p>Because policy
        documents can be large, you should use POST rather than GET when calling <code>PutGroupPolicy</code>.
        For general information about using the Query API with IAM, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html">Making
        query requests</a> in the <i>IAM User Guide</i>.</p> </note>
      operationId: GET_PutGroupPolicy
      parameters:
      - description: '<p>The name of the group to associate the policy with.</p> <p>This
          parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-.</p>'
        in: query
        name: GroupName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: '<p>The name of the policy document.</p> <p>This parameter allows
          (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters consisting of upper and lowercase alphanumeric characters
          with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        in: query
        name: PolicyName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: <p>The policy document.</p> <p>You must provide policies in JSON
          format in IAM. However, for CloudFormation templates formatted in YAML,
          you can provide the policy in JSON or YAML format. CloudFormation always
          converts a YAML policy to JSON format before submitting it to = IAM.</p>
          <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used
          to validate this parameter is a string of characters consisting of the following:</p>
          <ul> <li> <p>Any printable ASCII character ranging from the space character
          (<code>\u0020</code>) through the end of the ASCII character range</p> </li>
          <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement
          character set (through <code>\u00FF</code>)</p> </li> <li> <p>The special
          characters tab (<code>\u0009</code>), line feed (<code>\u000A</code>), and
          carriage return (<code>\u000D</code>)</p> </li> </ul>
        in: query
        name: PolicyDocument
        required: true
        schema:
          maxLength: 131072
          minLength: 1
          pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MalformedPolicyDocumentException'
          description: MalformedPolicyDocumentException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: PutGroupPolicy
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Adds or updates an inline policy document that is embedded in
        the specified IAM group.</p> <p>A user can also have managed policies attached
        to it. To attach a managed policy to a group, use <a>AttachGroupPolicy</a>.
        To create a new managed policy, use <a>CreatePolicy</a>. For information about
        policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>For
        information about the maximum number of inline policies that you can embed
        in a group, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html">IAM
        and STS quotas</a> in the <i>IAM User Guide</i>.</p> <note> <p>Because policy
        documents can be large, you should use POST rather than GET when calling <code>PutGroupPolicy</code>.
        For general information about using the Query API with IAM, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html">Making
        query requests</a> in the <i>IAM User Guide</i>.</p> </note>
      operationId: POST_PutGroupPolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/PutGroupPolicyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MalformedPolicyDocumentException'
          description: MalformedPolicyDocumentException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: PutGroupPolicy
  /?Action=PutRolePermissionsBoundary&Version=2010-05-08:
    get:
      description: <p>Adds or updates the policy that is specified as the IAM role's
        permissions boundary. You can use an Amazon Web Services managed policy or
        a customer managed policy to set the boundary for a role. Use the boundary
        to control the maximum permissions that the role can have. Setting a permissions
        boundary is an advanced feature that can affect the permissions for the role.</p>
        <p>You cannot set the boundary for a service-linked role. </p> <important>
        <p>Policies used as permissions boundaries do not provide permissions. You
        must also attach a permissions policy to the role. To learn how the effective
        permissions for a role are evaluated, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_evaluation-logic.html">IAM
        JSON policy evaluation logic</a> in the IAM User Guide. </p> </important>
      operationId: GET_PutRolePermissionsBoundary
      parameters:
      - description: The name (friendly name, not ARN) of the IAM role for which you
          want to set the permissions boundary.
        in: query
        name: RoleName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: The ARN of the policy that is used to set the permissions boundary
          for the role.
        in: query
        name: PermissionsBoundary
        required: true
        schema:
          description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers
            for Amazon Web Services resources.</p> <p>For more information about ARNs,
            go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
            </p>
          maxLength: 2048
          minLength: 20
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnmodifiableEntityException'
          description: UnmodifiableEntityException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PolicyNotAttachableException'
          description: PolicyNotAttachableException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: PutRolePermissionsBoundary
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Adds or updates the policy that is specified as the IAM role's
        permissions boundary. You can use an Amazon Web Services managed policy or
        a customer managed policy to set the boundary for a role. Use the boundary
        to control the maximum permissions that the role can have. Setting a permissions
        boundary is an advanced feature that can affect the permissions for the role.</p>
        <p>You cannot set the boundary for a service-linked role. </p> <important>
        <p>Policies used as permissions boundaries do not provide permissions. You
        must also attach a permissions policy to the role. To learn how the effective
        permissions for a role are evaluated, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_evaluation-logic.html">IAM
        JSON policy evaluation logic</a> in the IAM User Guide. </p> </important>
      operationId: POST_PutRolePermissionsBoundary
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/PutRolePermissionsBoundaryRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnmodifiableEntityException'
          description: UnmodifiableEntityException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PolicyNotAttachableException'
          description: PolicyNotAttachableException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: PutRolePermissionsBoundary
  /?Action=PutRolePolicy&Version=2010-05-08:
    get:
      description: <p>Adds or updates an inline policy document that is embedded in
        the specified IAM role.</p> <p>When you embed an inline policy in a role,
        the inline policy is used as part of the role's access (permissions) policy.
        The role's trust policy is created at the same time as the role, using <a>CreateRole</a>.
        You can update a role's trust policy using <a>UpdateAssumeRolePolicy</a>.
        For more information about IAM roles, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html">Using
        roles to delegate permissions and federate identities</a>.</p> <p>A role can
        also have a managed policy attached to it. To attach a managed policy to a
        role, use <a>AttachRolePolicy</a>. To create a new managed policy, use <a>CreatePolicy</a>.
        For information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>For
        information about the maximum number of inline policies that you can embed
        with a role, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html">IAM
        and STS quotas</a> in the <i>IAM User Guide</i>.</p> <note> <p>Because policy
        documents can be large, you should use POST rather than GET when calling <code>PutRolePolicy</code>.
        For general information about using the Query API with IAM, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html">Making
        query requests</a> in the <i>IAM User Guide</i>.</p> </note>
      operationId: GET_PutRolePolicy
      parameters:
      - description: '<p>The name of the role to associate the policy with.</p> <p>This
          parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: RoleName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: '<p>The name of the policy document.</p> <p>This parameter allows
          (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters consisting of upper and lowercase alphanumeric characters
          with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        in: query
        name: PolicyName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: <p>The policy document.</p> <p>You must provide policies in JSON
          format in IAM. However, for CloudFormation templates formatted in YAML,
          you can provide the policy in JSON or YAML format. CloudFormation always
          converts a YAML policy to JSON format before submitting it to IAM.</p> <p>The
          <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used to validate
          this parameter is a string of characters consisting of the following:</p>
          <ul> <li> <p>Any printable ASCII character ranging from the space character
          (<code>\u0020</code>) through the end of the ASCII character range</p> </li>
          <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement
          character set (through <code>\u00FF</code>)</p> </li> <li> <p>The special
          characters tab (<code>\u0009</code>), line feed (<code>\u000A</code>), and
          carriage return (<code>\u000D</code>)</p> </li> </ul>
        in: query
        name: PolicyDocument
        required: true
        schema:
          maxLength: 131072
          minLength: 1
          pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MalformedPolicyDocumentException'
          description: MalformedPolicyDocumentException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnmodifiableEntityException'
          description: UnmodifiableEntityException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: PutRolePolicy
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Adds or updates an inline policy document that is embedded in
        the specified IAM role.</p> <p>When you embed an inline policy in a role,
        the inline policy is used as part of the role's access (permissions) policy.
        The role's trust policy is created at the same time as the role, using <a>CreateRole</a>.
        You can update a role's trust policy using <a>UpdateAssumeRolePolicy</a>.
        For more information about IAM roles, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html">Using
        roles to delegate permissions and federate identities</a>.</p> <p>A role can
        also have a managed policy attached to it. To attach a managed policy to a
        role, use <a>AttachRolePolicy</a>. To create a new managed policy, use <a>CreatePolicy</a>.
        For information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>For
        information about the maximum number of inline policies that you can embed
        with a role, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html">IAM
        and STS quotas</a> in the <i>IAM User Guide</i>.</p> <note> <p>Because policy
        documents can be large, you should use POST rather than GET when calling <code>PutRolePolicy</code>.
        For general information about using the Query API with IAM, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html">Making
        query requests</a> in the <i>IAM User Guide</i>.</p> </note>
      operationId: POST_PutRolePolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/PutRolePolicyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MalformedPolicyDocumentException'
          description: MalformedPolicyDocumentException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnmodifiableEntityException'
          description: UnmodifiableEntityException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: PutRolePolicy
  /?Action=PutUserPermissionsBoundary&Version=2010-05-08:
    get:
      description: <p>Adds or updates the policy that is specified as the IAM user's
        permissions boundary. You can use an Amazon Web Services managed policy or
        a customer managed policy to set the boundary for a user. Use the boundary
        to control the maximum permissions that the user can have. Setting a permissions
        boundary is an advanced feature that can affect the permissions for the user.</p>
        <important> <p>Policies that are used as permissions boundaries do not provide
        permissions. You must also attach a permissions policy to the user. To learn
        how the effective permissions for a user are evaluated, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_evaluation-logic.html">IAM
        JSON policy evaluation logic</a> in the IAM User Guide. </p> </important>
      operationId: GET_PutUserPermissionsBoundary
      parameters:
      - description: The name (friendly name, not ARN) of the IAM user for which you
          want to set the permissions boundary.
        in: query
        name: UserName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: The ARN of the policy that is used to set the permissions boundary
          for the user.
        in: query
        name: PermissionsBoundary
        required: true
        schema:
          description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers
            for Amazon Web Services resources.</p> <p>For more information about ARNs,
            go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
            </p>
          maxLength: 2048
          minLength: 20
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PolicyNotAttachableException'
          description: PolicyNotAttachableException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: PutUserPermissionsBoundary
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Adds or updates the policy that is specified as the IAM user's
        permissions boundary. You can use an Amazon Web Services managed policy or
        a customer managed policy to set the boundary for a user. Use the boundary
        to control the maximum permissions that the user can have. Setting a permissions
        boundary is an advanced feature that can affect the permissions for the user.</p>
        <important> <p>Policies that are used as permissions boundaries do not provide
        permissions. You must also attach a permissions policy to the user. To learn
        how the effective permissions for a user are evaluated, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_evaluation-logic.html">IAM
        JSON policy evaluation logic</a> in the IAM User Guide. </p> </important>
      operationId: POST_PutUserPermissionsBoundary
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/PutUserPermissionsBoundaryRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PolicyNotAttachableException'
          description: PolicyNotAttachableException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: PutUserPermissionsBoundary
  /?Action=PutUserPolicy&Version=2010-05-08:
    get:
      description: <p>Adds or updates an inline policy document that is embedded in
        the specified IAM user.</p> <p>An IAM user can also have a managed policy
        attached to it. To attach a managed policy to a user, use <a>AttachUserPolicy</a>.
        To create a new managed policy, use <a>CreatePolicy</a>. For information about
        policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>For
        information about the maximum number of inline policies that you can embed
        in a user, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html">IAM
        and STS quotas</a> in the <i>IAM User Guide</i>.</p> <note> <p>Because policy
        documents can be large, you should use POST rather than GET when calling <code>PutUserPolicy</code>.
        For general information about using the Query API with IAM, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html">Making
        query requests</a> in the <i>IAM User Guide</i>.</p> </note>
      operationId: GET_PutUserPolicy
      parameters:
      - description: '<p>The name of the user to associate the policy with.</p> <p>This
          parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: UserName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: '<p>The name of the policy document.</p> <p>This parameter allows
          (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters consisting of upper and lowercase alphanumeric characters
          with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        in: query
        name: PolicyName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: <p>The policy document.</p> <p>You must provide policies in JSON
          format in IAM. However, for CloudFormation templates formatted in YAML,
          you can provide the policy in JSON or YAML format. CloudFormation always
          converts a YAML policy to JSON format before submitting it to IAM.</p> <p>The
          <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used to validate
          this parameter is a string of characters consisting of the following:</p>
          <ul> <li> <p>Any printable ASCII character ranging from the space character
          (<code>\u0020</code>) through the end of the ASCII character range</p> </li>
          <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement
          character set (through <code>\u00FF</code>)</p> </li> <li> <p>The special
          characters tab (<code>\u0009</code>), line feed (<code>\u000A</code>), and
          carriage return (<code>\u000D</code>)</p> </li> </ul>
        in: query
        name: PolicyDocument
        required: true
        schema:
          maxLength: 131072
          minLength: 1
          pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MalformedPolicyDocumentException'
          description: MalformedPolicyDocumentException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: PutUserPolicy
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Adds or updates an inline policy document that is embedded in
        the specified IAM user.</p> <p>An IAM user can also have a managed policy
        attached to it. To attach a managed policy to a user, use <a>AttachUserPolicy</a>.
        To create a new managed policy, use <a>CreatePolicy</a>. For information about
        policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>For
        information about the maximum number of inline policies that you can embed
        in a user, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html">IAM
        and STS quotas</a> in the <i>IAM User Guide</i>.</p> <note> <p>Because policy
        documents can be large, you should use POST rather than GET when calling <code>PutUserPolicy</code>.
        For general information about using the Query API with IAM, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html">Making
        query requests</a> in the <i>IAM User Guide</i>.</p> </note>
      operationId: POST_PutUserPolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/PutUserPolicyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MalformedPolicyDocumentException'
          description: MalformedPolicyDocumentException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: PutUserPolicy
  /?Action=RemoveClientIDFromOpenIDConnectProvider&Version=2010-05-08:
    get:
      description: <p>Removes the specified client ID (also known as audience) from
        the list of client IDs registered for the specified IAM OpenID Connect (OIDC)
        provider resource object.</p> <p>This operation is idempotent; it does not
        fail or return an error if you try to remove a client ID that does not exist.</p>
      operationId: GET_RemoveClientIDFromOpenIDConnectProvider
      parameters:
      - description: <p>The Amazon Resource Name (ARN) of the IAM OIDC provider resource
          to remove the client ID from. You can get a list of OIDC provider ARNs by
          using the <a>ListOpenIDConnectProviders</a> operation.</p> <p>For more information
          about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
          Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        in: query
        name: OpenIDConnectProviderArn
        required: true
        schema:
          description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers
            for Amazon Web Services resources.</p> <p>For more information about ARNs,
            go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
            </p>
          maxLength: 2048
          minLength: 20
          type: string
      - description: The client ID (also known as audience) to remove from the IAM
          OIDC provider resource. For more information about client IDs, see <a>CreateOpenIDConnectProvider</a>.
        in: query
        name: ClientID
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: RemoveClientIDFromOpenIDConnectProvider
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Removes the specified client ID (also known as audience) from
        the list of client IDs registered for the specified IAM OpenID Connect (OIDC)
        provider resource object.</p> <p>This operation is idempotent; it does not
        fail or return an error if you try to remove a client ID that does not exist.</p>
      operationId: POST_RemoveClientIDFromOpenIDConnectProvider
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RemoveClientIDFromOpenIDConnectProviderRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: RemoveClientIDFromOpenIDConnectProvider
  /?Action=RemoveRoleFromInstanceProfile&Version=2010-05-08:
    get:
      description: <p>Removes the specified IAM role from the specified EC2 instance
        profile.</p> <important> <p>Make sure that you do not have any Amazon EC2
        instances running with the role you are about to remove from the instance
        profile. Removing a role from an instance profile that is associated with
        a running instance might break any applications running on the instance.</p>
        </important> <p> For more information about IAM roles, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html">Working
        with roles</a>. For more information about instance profiles, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html">About
        instance profiles</a>.</p>
      operationId: GET_RemoveRoleFromInstanceProfile
      parameters:
      - description: '<p>The name of the instance profile to update.</p> <p>This parameter
          allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters consisting of upper and lowercase alphanumeric characters
          with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        in: query
        name: InstanceProfileName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: '<p>The name of the role to remove.</p> <p>This parameter allows
          (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters consisting of upper and lowercase alphanumeric characters
          with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        in: query
        name: RoleName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnmodifiableEntityException'
          description: UnmodifiableEntityException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: RemoveRoleFromInstanceProfile
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Removes the specified IAM role from the specified EC2 instance
        profile.</p> <important> <p>Make sure that you do not have any Amazon EC2
        instances running with the role you are about to remove from the instance
        profile. Removing a role from an instance profile that is associated with
        a running instance might break any applications running on the instance.</p>
        </important> <p> For more information about IAM roles, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html">Working
        with roles</a>. For more information about instance profiles, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html">About
        instance profiles</a>.</p>
      operationId: POST_RemoveRoleFromInstanceProfile
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RemoveRoleFromInstanceProfileRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnmodifiableEntityException'
          description: UnmodifiableEntityException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: RemoveRoleFromInstanceProfile
  /?Action=RemoveUserFromGroup&Version=2010-05-08:
    get:
      description: Removes the specified user from the specified group.
      operationId: GET_RemoveUserFromGroup
      parameters:
      - description: '<p>The name of the group to update.</p> <p>This parameter allows
          (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters consisting of upper and lowercase alphanumeric characters
          with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        in: query
        name: GroupName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: '<p>The name of the user to remove.</p> <p>This parameter allows
          (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters consisting of upper and lowercase alphanumeric characters
          with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        in: query
        name: UserName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: RemoveUserFromGroup
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: Removes the specified user from the specified group.
      operationId: POST_RemoveUserFromGroup
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RemoveUserFromGroupRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: RemoveUserFromGroup
  /?Action=ResetServiceSpecificCredential&Version=2010-05-08:
    get:
      description: Resets the password for a service-specific credential. The new
        password is Amazon Web Services generated and cryptographically strong. It
        cannot be configured by the user. Resetting the password immediately invalidates
        the previous password associated with this user.
      operationId: GET_ResetServiceSpecificCredential
      parameters:
      - description: '<p>The name of the IAM user associated with the service-specific
          credential. If this value is not specified, then the operation assumes the
          user whose credentials are used to call the operation.</p> <p>This parameter
          allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters consisting of upper and lowercase alphanumeric characters
          with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        in: query
        name: UserName
        required: false
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: <p>The unique identifier of the service-specific credential.</p>
          <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters that can consist of any upper or lowercased
          letter or digit.</p>
        in: query
        name: ServiceSpecificCredentialId
        required: true
        schema:
          maxLength: 128
          minLength: 20
          pattern: '[\w]+'
          type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResetServiceSpecificCredentialResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
      x-aws-operation-name: ResetServiceSpecificCredential
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: Resets the password for a service-specific credential. The new
        password is Amazon Web Services generated and cryptographically strong. It
        cannot be configured by the user. Resetting the password immediately invalidates
        the previous password associated with this user.
      operationId: POST_ResetServiceSpecificCredential
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ResetServiceSpecificCredentialRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResetServiceSpecificCredentialResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
      x-aws-operation-name: ResetServiceSpecificCredential
  /?Action=ResyncMFADevice&Version=2010-05-08:
    get:
      description: <p>Synchronizes the specified MFA device with its IAM resource
        object on the Amazon Web Services servers.</p> <p>For more information about
        creating and working with virtual MFA devices, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_VirtualMFA.html">Using
        a virtual MFA device</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_ResyncMFADevice
      parameters:
      - description: '<p>The name of the user whose MFA device you want to resynchronize.</p>
          <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: UserName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: '<p>Serial number that uniquely identifies the MFA device.</p>
          <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: SerialNumber
        required: true
        schema:
          maxLength: 256
          minLength: 9
          pattern: '[\w+=/:,.@-]+'
          type: string
      - description: <p>An authentication code emitted by the device.</p> <p>The format
          for this parameter is a sequence of six digits.</p>
        in: query
        name: AuthenticationCode1
        required: true
        schema:
          maxLength: 6
          minLength: 6
          pattern: '[\d]+'
          type: string
      - description: <p>A subsequent authentication code emitted by the device.</p>
          <p>The format for this parameter is a sequence of six digits.</p>
        in: query
        name: AuthenticationCode2
        required: true
        schema:
          maxLength: 6
          minLength: 6
          pattern: '[\d]+'
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidAuthenticationCodeException'
          description: InvalidAuthenticationCodeException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ResyncMFADevice
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Synchronizes the specified MFA device with its IAM resource
        object on the Amazon Web Services servers.</p> <p>For more information about
        creating and working with virtual MFA devices, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_VirtualMFA.html">Using
        a virtual MFA device</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_ResyncMFADevice
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ResyncMFADeviceRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidAuthenticationCodeException'
          description: InvalidAuthenticationCodeException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ResyncMFADevice
  /?Action=SetDefaultPolicyVersion&Version=2010-05-08:
    get:
      description: <p>Sets the specified version of the specified policy as the policy's
        default (operative) version.</p> <p>This operation affects all users, groups,
        and roles that the policy is attached to. To list the users, groups, and roles
        that the policy is attached to, use <a>ListEntitiesForPolicy</a>.</p> <p>For
        information about managed policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_SetDefaultPolicyVersion
      parameters:
      - description: <p>The Amazon Resource Name (ARN) of the IAM policy whose default
          version you want to set.</p> <p>For more information about ARNs, see <a
          href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
          Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        in: query
        name: PolicyArn
        required: true
        schema:
          description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers
            for Amazon Web Services resources.</p> <p>For more information about ARNs,
            go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
            </p>
          maxLength: 2048
          minLength: 20
          type: string
      - description: <p>The version of the policy to set as the default (operative)
          version.</p> <p>For more information about managed policy versions, see
          <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning
          for managed policies</a> in the <i>IAM User Guide</i>.</p>
        in: query
        name: VersionId
        required: true
        schema:
          pattern: v[1-9][0-9]*(\.[A-Za-z0-9-]*)?
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: SetDefaultPolicyVersion
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Sets the specified version of the specified policy as the policy's
        default (operative) version.</p> <p>This operation affects all users, groups,
        and roles that the policy is attached to. To list the users, groups, and roles
        that the policy is attached to, use <a>ListEntitiesForPolicy</a>.</p> <p>For
        information about managed policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_SetDefaultPolicyVersion
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/SetDefaultPolicyVersionRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: SetDefaultPolicyVersion
  /?Action=SetSecurityTokenServicePreferences&Version=2010-05-08:
    get:
      description: <p>Sets the specified version of the global endpoint token as the
        token version used for the Amazon Web Services account.</p> <p>By default,
        Security Token Service (STS) is available as a global service, and all STS
        requests go to a single endpoint at <code>https://sts.amazonaws.com</code>.
        Amazon Web Services recommends using Regional STS endpoints to reduce latency,
        build in redundancy, and increase session token availability. For information
        about Regional endpoints for STS, see <a href="https://docs.aws.amazon.com/general/latest/gr/sts.html">Security
        Token Service endpoints and quotas</a> in the <i>Amazon Web Services General
        Reference</i>.</p> <p>If you make an STS call to the global endpoint, the
        resulting session tokens might be valid in some Regions but not others. It
        depends on the version that is set in this operation. Version 1 tokens are
        valid only in Amazon Web Services Regions that are available by default. These
        tokens do not work in manually enabled Regions, such as Asia Pacific (Hong
        Kong). Version 2 tokens are valid in all Regions. However, version 2 tokens
        are longer and might affect systems where you temporarily store tokens. For
        information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_enable-regions.html">Activating
        and deactivating STS in an Amazon Web Services Region</a> in the <i>IAM User
        Guide</i>.</p> <p>To view the current session token version, see the <code>GlobalEndpointTokenVersion</code>
        entry in the response of the <a>GetAccountSummary</a> operation.</p>
      operationId: GET_SetSecurityTokenServicePreferences
      parameters:
      - description: <p>The version of the global endpoint token. Version 1 tokens
          are valid only in Amazon Web Services Regions that are available by default.
          These tokens do not work in manually enabled Regions, such as Asia Pacific
          (Hong Kong). Version 2 tokens are valid in all Regions. However, version
          2 tokens are longer and might affect systems where you temporarily store
          tokens.</p> <p>For information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_enable-regions.html">Activating
          and deactivating STS in an Amazon Web Services Region</a> in the <i>IAM
          User Guide</i>.</p>
        in: query
        name: GlobalEndpointTokenVersion
        required: true
        schema:
          enum:
          - v1Token
          - v2Token
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: SetSecurityTokenServicePreferences
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Sets the specified version of the global endpoint token as the
        token version used for the Amazon Web Services account.</p> <p>By default,
        Security Token Service (STS) is available as a global service, and all STS
        requests go to a single endpoint at <code>https://sts.amazonaws.com</code>.
        Amazon Web Services recommends using Regional STS endpoints to reduce latency,
        build in redundancy, and increase session token availability. For information
        about Regional endpoints for STS, see <a href="https://docs.aws.amazon.com/general/latest/gr/sts.html">Security
        Token Service endpoints and quotas</a> in the <i>Amazon Web Services General
        Reference</i>.</p> <p>If you make an STS call to the global endpoint, the
        resulting session tokens might be valid in some Regions but not others. It
        depends on the version that is set in this operation. Version 1 tokens are
        valid only in Amazon Web Services Regions that are available by default. These
        tokens do not work in manually enabled Regions, such as Asia Pacific (Hong
        Kong). Version 2 tokens are valid in all Regions. However, version 2 tokens
        are longer and might affect systems where you temporarily store tokens. For
        information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_enable-regions.html">Activating
        and deactivating STS in an Amazon Web Services Region</a> in the <i>IAM User
        Guide</i>.</p> <p>To view the current session token version, see the <code>GlobalEndpointTokenVersion</code>
        entry in the response of the <a>GetAccountSummary</a> operation.</p>
      operationId: POST_SetSecurityTokenServicePreferences
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/SetSecurityTokenServicePreferencesRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: SetSecurityTokenServicePreferences
  /?Action=SimulateCustomPolicy&Version=2010-05-08:
    get:
      description: <p>Simulate how a set of IAM policies and optionally a resource-based
        policy works with a list of API operations and Amazon Web Services resources
        to determine the policies' effective permissions. The policies are provided
        as strings.</p> <p>The simulation does not perform the API operations; it
        only checks the authorization to determine if the simulated policies allow
        or deny the operations. You can simulate resources that don't exist in your
        account.</p> <p>If you want to simulate existing policies that are attached
        to an IAM user, group, or role, use <a>SimulatePrincipalPolicy</a> instead.</p>
        <p>Context keys are variables that are maintained by Amazon Web Services and
        its services and which provide details about the context of an API query request.
        You can use the <code>Condition</code> element of an IAM policy to evaluate
        context keys. To get the list of context keys that the policies require for
        correct simulation, use <a>GetContextKeysForCustomPolicy</a>.</p> <p>If the
        output is long, you can use <code>MaxItems</code> and <code>Marker</code>
        parameters to paginate the results.</p> <p>For more information about using
        the policy simulator, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_testing-policies.html">Testing
        IAM policies with the IAM policy simulator </a>in the <i>IAM User Guide</i>.</p>
      operationId: GET_SimulateCustomPolicy
      parameters:
      - description: <p>A list of policy documents to include in the simulation. Each
          document is specified as a string containing the complete, valid JSON text
          of an IAM policy. Do not include any resource-based policies in this parameter.
          Any resource-based policy must be submitted with the <code>ResourcePolicy</code>
          parameter. The policies cannot be "scope-down" policies, such as you could
          include in a call to <a href="https://docs.aws.amazon.com/IAM/latest/APIReference/API_GetFederationToken.html">GetFederationToken</a>
          or one of the <a href="https://docs.aws.amazon.com/IAM/latest/APIReference/API_AssumeRole.html">AssumeRole</a>
          API operations. In other words, do not use policies designed to restrict
          what a user can do while using the temporary credentials.</p> <p>The maximum
          length of the policy document that you can pass in this operation, including
          whitespace, is listed below. To view the maximum character counts of a managed
          policy with no whitespaces, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html#reference_iam-quotas-entity-length">IAM
          and STS character quotas</a>.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> used to validate this parameter is a string of characters consisting
          of the following:</p> <ul> <li> <p>Any printable ASCII character ranging
          from the space character (<code>\u0020</code>) through the end of the ASCII
          character range</p> </li> <li> <p>The printable characters in the Basic
          Latin and Latin-1 Supplement character set (through <code>\u00FF</code>)</p>
          </li> <li> <p>The special characters tab (<code>\u0009</code>), line feed
          (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p> </li>
          </ul>
        in: query
        name: PolicyInputList
        required: true
        schema:
          items:
            $ref: '#/components/schemas/policyDocumentType'
          type: array
      - description: <p>The IAM permissions boundary policy to simulate. The permissions
          boundary sets the maximum permissions that an IAM entity can have. You can
          input only one permissions boundary when you pass a policy to this operation.
          For more information about permissions boundaries, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html">Permissions
          boundaries for IAM entities</a> in the <i>IAM User Guide</i>. The policy
          input is specified as a string that contains the complete, valid JSON text
          of a permissions boundary policy.</p> <p>The maximum length of the policy
          document that you can pass in this operation, including whitespace, is listed
          below. To view the maximum character counts of a managed policy with no
          whitespaces, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html#reference_iam-quotas-entity-length">IAM
          and STS character quotas</a>.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> used to validate this parameter is a string of characters consisting
          of the following:</p> <ul> <li> <p>Any printable ASCII character ranging
          from the space character (<code>\u0020</code>) through the end of the ASCII
          character range</p> </li> <li> <p>The printable characters in the Basic
          Latin and Latin-1 Supplement character set (through <code>\u00FF</code>)</p>
          </li> <li> <p>The special characters tab (<code>\u0009</code>), line feed
          (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p> </li>
          </ul>
        in: query
        name: PermissionsBoundaryPolicyInputList
        required: false
        schema:
          items:
            $ref: '#/components/schemas/policyDocumentType'
          type: array
      - description: A list of names of API operations to evaluate in the simulation.
          Each operation is evaluated against each resource. Each operation must include
          the service identifier, such as <code>iam:CreateUser</code>. This operation
          does not support using wildcards (*) in an action name.
        in: query
        name: ActionNames
        required: true
        schema:
          items:
            $ref: '#/components/schemas/ActionNameType'
          type: array
      - description: <p>A list of ARNs of Amazon Web Services resources to include
          in the simulation. If this parameter is not provided, then the value defaults
          to <code>*</code> (all resources). Each API in the <code>ActionNames</code>
          parameter is evaluated for each resource in this list. The simulation determines
          the access result (allowed or denied) of each combination and reports it
          in the response. You can simulate resources that don't exist in your account.</p>
          <p>The simulation does not automatically retrieve policies for the specified
          resources. If you want to include a resource policy in the simulation, then
          you must include the policy as a string in the <code>ResourcePolicy</code>
          parameter.</p> <p>If you include a <code>ResourcePolicy</code>, then it
          must be applicable to all of the resources included in the simulation or
          you receive an invalid input error.</p> <p>For more information about ARNs,
          see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
          Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        in: query
        name: ResourceArns
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ResourceNameType'
          type: array
      - description: <p>A resource-based policy to include in the simulation provided
          as a string. Each resource in the simulation is treated as if it had this
          policy attached. You can include only one resource-based policy in a simulation.</p>
          <p>The maximum length of the policy document that you can pass in this operation,
          including whitespace, is listed below. To view the maximum character counts
          of a managed policy with no whitespaces, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html#reference_iam-quotas-entity-length">IAM
          and STS character quotas</a>.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> used to validate this parameter is a string of characters consisting
          of the following:</p> <ul> <li> <p>Any printable ASCII character ranging
          from the space character (<code>\u0020</code>) through the end of the ASCII
          character range</p> </li> <li> <p>The printable characters in the Basic
          Latin and Latin-1 Supplement character set (through <code>\u00FF</code>)</p>
          </li> <li> <p>The special characters tab (<code>\u0009</code>), line feed
          (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p> </li>
          </ul>
        in: query
        name: ResourcePolicy
        required: false
        schema:
          maxLength: 131072
          minLength: 1
          pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
          type: string
      - description: '<p>An ARN representing the Amazon Web Services account ID that
          specifies the owner of any simulated resource that does not identify its
          owner in the resource ARN. Examples of resource ARNs include an S3 bucket
          or object. If <code>ResourceOwner</code> is specified, it is also used as
          the account owner of any <code>ResourcePolicy</code> included in the simulation.
          If the <code>ResourceOwner</code> parameter is not specified, then the owner
          of the resources and the resource policy defaults to the account of the
          identity provided in <code>CallerArn</code>. This parameter is required
          only if you specify a resource-based policy and account that owns the resource
          is different from the account that owns the simulated calling user <code>CallerArn</code>.</p>
          <p>The ARN for an account uses the following syntax: <code>arn:aws:iam::<i>AWS-account-ID</i>:root</code>.
          For example, to represent the account with the 112233445566 ID, use the
          following ARN: <code>arn:aws:iam::112233445566-ID:root</code>. </p>'
        in: query
        name: ResourceOwner
        required: false
        schema:
          maxLength: 2048
          minLength: 1
          type: string
      - description: <p>The ARN of the IAM user that you want to use as the simulated
          caller of the API operations. <code>CallerArn</code> is required if you
          include a <code>ResourcePolicy</code> so that the policy's <code>Principal</code>
          element has a value to use in evaluating the policy.</p> <p>You can specify
          only the ARN of an IAM user. You cannot specify the ARN of an assumed role,
          federated user, or a service principal.</p>
        in: query
        name: CallerArn
        required: false
        schema:
          maxLength: 2048
          minLength: 1
          type: string
      - description: A list of context keys and corresponding values for the simulation
          to use. Whenever a context key is evaluated in one of the simulated IAM
          permissions policies, the corresponding value is supplied.
        in: query
        name: ContextEntries
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ContextEntry'
          type: array
      - description: <p>Specifies the type of simulation to run. Different API operations
          that support resource-based policies require different combinations of resources.
          By specifying the type of simulation to run, you enable the policy simulator
          to enforce the presence of the required resources to ensure reliable simulation
          results. If your simulation does not match one of the following scenarios,
          then you can omit this parameter. The following list shows each of the supported
          scenario values and the resources that you must define to run the simulation.</p>
          <p>Each of the EC2 scenarios requires that you specify instance, image,
          and security-group resources. If your scenario includes an EBS volume, then
          you must specify that volume as a resource. If the EC2 scenario includes
          VPC, then you must supply the network-interface resource. If it includes
          an IP subnet, then you must specify the subnet resource. For more information
          on the EC2 scenario options, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-supported-platforms.html">Supported
          platforms</a> in the <i>Amazon EC2 User Guide</i>.</p> <ul> <li> <p> <b>EC2-Classic-InstanceStore</b>
          </p> <p>instance, image, security-group</p> </li> <li> <p> <b>EC2-Classic-EBS</b>
          </p> <p>instance, image, security-group, volume</p> </li> <li> <p> <b>EC2-VPC-InstanceStore</b>
          </p> <p>instance, image, security-group, network-interface</p> </li> <li>
          <p> <b>EC2-VPC-InstanceStore-Subnet</b> </p> <p>instance, image, security-group,
          network-interface, subnet</p> </li> <li> <p> <b>EC2-VPC-EBS</b> </p> <p>instance,
          image, security-group, network-interface, volume</p> </li> <li> <p> <b>EC2-VPC-EBS-Subnet</b>
          </p> <p>instance, image, security-group, network-interface, subnet, volume</p>
          </li> </ul>
        in: query
        name: ResourceHandlingOption
        required: false
        schema:
          maxLength: 64
          minLength: 1
          type: string
      - description: <p>Use this only when paginating results to indicate the maximum
          number of items you want in the response. If additional items exist beyond
          the maximum you specify, the <code>IsTruncated</code> response element is
          <code>true</code>.</p> <p>If you do not include this parameter, the number
          of items defaults to 100. Note that IAM might return fewer results, even
          when there are more results available. In that case, the <code>IsTruncated</code>
          response element returns <code>true</code>, and <code>Marker</code> contains
          a value to include in the subsequent call that tells the service where to
          continue from.</p>
        in: query
        name: MaxItems
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      - description: Use this parameter only when paginating results and only after
          you receive a response indicating that the results are truncated. Set it
          to the value of the <code>Marker</code> element in the response that you
          received to indicate where the next call should start.
        in: query
        name: Marker
        required: false
        schema:
          maxLength: 320
          minLength: 1
          pattern: '[\u0020-\u00FF]+'
          type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SimulatePolicyResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PolicyEvaluationException'
          description: PolicyEvaluationException
      x-aws-operation-name: SimulateCustomPolicy
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Simulate how a set of IAM policies and optionally a resource-based
        policy works with a list of API operations and Amazon Web Services resources
        to determine the policies' effective permissions. The policies are provided
        as strings.</p> <p>The simulation does not perform the API operations; it
        only checks the authorization to determine if the simulated policies allow
        or deny the operations. You can simulate resources that don't exist in your
        account.</p> <p>If you want to simulate existing policies that are attached
        to an IAM user, group, or role, use <a>SimulatePrincipalPolicy</a> instead.</p>
        <p>Context keys are variables that are maintained by Amazon Web Services and
        its services and which provide details about the context of an API query request.
        You can use the <code>Condition</code> element of an IAM policy to evaluate
        context keys. To get the list of context keys that the policies require for
        correct simulation, use <a>GetContextKeysForCustomPolicy</a>.</p> <p>If the
        output is long, you can use <code>MaxItems</code> and <code>Marker</code>
        parameters to paginate the results.</p> <p>For more information about using
        the policy simulator, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_testing-policies.html">Testing
        IAM policies with the IAM policy simulator </a>in the <i>IAM User Guide</i>.</p>
      operationId: POST_SimulateCustomPolicy
      parameters:
      - description: Pagination limit
        in: query
        name: MaxItems
        required: false
        schema:
          type: string
      - description: Pagination token
        in: query
        name: Marker
        required: false
        schema:
          type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/SimulateCustomPolicyRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SimulatePolicyResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PolicyEvaluationException'
          description: PolicyEvaluationException
      x-aws-operation-name: SimulateCustomPolicy
  /?Action=SimulatePrincipalPolicy&Version=2010-05-08:
    get:
      description: <p>Simulate how a set of IAM policies attached to an IAM entity
        works with a list of API operations and Amazon Web Services resources to determine
        the policies' effective permissions. The entity can be an IAM user, group,
        or role. If you specify a user, then the simulation also includes all of the
        policies that are attached to groups that the user belongs to. You can simulate
        resources that don't exist in your account.</p> <p>You can optionally include
        a list of one or more additional policies specified as strings to include
        in the simulation. If you want to simulate only policies specified as strings,
        use <a>SimulateCustomPolicy</a> instead.</p> <p>You can also optionally include
        one resource-based policy to be evaluated with each of the resources included
        in the simulation.</p> <p>The simulation does not perform the API operations;
        it only checks the authorization to determine if the simulated policies allow
        or deny the operations.</p> <p> <b>Note:</b> This operation discloses information
        about the permissions granted to other users. If you do not want users to
        see other user's permissions, then consider allowing them to use <a>SimulateCustomPolicy</a>
        instead.</p> <p>Context keys are variables maintained by Amazon Web Services
        and its services that provide details about the context of an API query request.
        You can use the <code>Condition</code> element of an IAM policy to evaluate
        context keys. To get the list of context keys that the policies require for
        correct simulation, use <a>GetContextKeysForPrincipalPolicy</a>.</p> <p>If
        the output is long, you can use the <code>MaxItems</code> and <code>Marker</code>
        parameters to paginate the results.</p> <p>For more information about using
        the policy simulator, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_testing-policies.html">Testing
        IAM policies with the IAM policy simulator </a>in the <i>IAM User Guide</i>.</p>
      operationId: GET_SimulatePrincipalPolicy
      parameters:
      - description: <p>The Amazon Resource Name (ARN) of a user, group, or role whose
          policies you want to include in the simulation. If you specify a user, group,
          or role, the simulation includes all policies that are associated with that
          entity. If you specify a user, the simulation also includes all policies
          that are attached to any groups the user belongs to.</p> <p>The maximum
          length of the policy document that you can pass in this operation, including
          whitespace, is listed below. To view the maximum character counts of a managed
          policy with no whitespaces, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html#reference_iam-quotas-entity-length">IAM
          and STS character quotas</a>.</p> <p>For more information about ARNs, see
          <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
          Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        in: query
        name: PolicySourceArn
        required: true
        schema:
          description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers
            for Amazon Web Services resources.</p> <p>For more information about ARNs,
            go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
            </p>
          maxLength: 2048
          minLength: 20
          type: string
      - description: <p>An optional list of additional policy documents to include
          in the simulation. Each document is specified as a string containing the
          complete, valid JSON text of an IAM policy.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> used to validate this parameter is a string of characters consisting
          of the following:</p> <ul> <li> <p>Any printable ASCII character ranging
          from the space character (<code>\u0020</code>) through the end of the ASCII
          character range</p> </li> <li> <p>The printable characters in the Basic
          Latin and Latin-1 Supplement character set (through <code>\u00FF</code>)</p>
          </li> <li> <p>The special characters tab (<code>\u0009</code>), line feed
          (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p> </li>
          </ul>
        in: query
        name: PolicyInputList
        required: false
        schema:
          items:
            $ref: '#/components/schemas/policyDocumentType'
          type: array
      - description: <p>The IAM permissions boundary policy to simulate. The permissions
          boundary sets the maximum permissions that the entity can have. You can
          input only one permissions boundary when you pass a policy to this operation.
          An IAM entity can only have one permissions boundary in effect at a time.
          For example, if a permissions boundary is attached to an entity and you
          pass in a different permissions boundary policy using this parameter, then
          the new permissions boundary policy is used for the simulation. For more
          information about permissions boundaries, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html">Permissions
          boundaries for IAM entities</a> in the <i>IAM User Guide</i>. The policy
          input is specified as a string containing the complete, valid JSON text
          of a permissions boundary policy.</p> <p>The maximum length of the policy
          document that you can pass in this operation, including whitespace, is listed
          below. To view the maximum character counts of a managed policy with no
          whitespaces, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html#reference_iam-quotas-entity-length">IAM
          and STS character quotas</a>.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> used to validate this parameter is a string of characters consisting
          of the following:</p> <ul> <li> <p>Any printable ASCII character ranging
          from the space character (<code>\u0020</code>) through the end of the ASCII
          character range</p> </li> <li> <p>The printable characters in the Basic
          Latin and Latin-1 Supplement character set (through <code>\u00FF</code>)</p>
          </li> <li> <p>The special characters tab (<code>\u0009</code>), line feed
          (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p> </li>
          </ul>
        in: query
        name: PermissionsBoundaryPolicyInputList
        required: false
        schema:
          items:
            $ref: '#/components/schemas/policyDocumentType'
          type: array
      - description: A list of names of API operations to evaluate in the simulation.
          Each operation is evaluated for each resource. Each operation must include
          the service identifier, such as <code>iam:CreateUser</code>.
        in: query
        name: ActionNames
        required: true
        schema:
          items:
            $ref: '#/components/schemas/ActionNameType'
          type: array
      - description: <p>A list of ARNs of Amazon Web Services resources to include
          in the simulation. If this parameter is not provided, then the value defaults
          to <code>*</code> (all resources). Each API in the <code>ActionNames</code>
          parameter is evaluated for each resource in this list. The simulation determines
          the access result (allowed or denied) of each combination and reports it
          in the response. You can simulate resources that don't exist in your account.</p>
          <p>The simulation does not automatically retrieve policies for the specified
          resources. If you want to include a resource policy in the simulation, then
          you must include the policy as a string in the <code>ResourcePolicy</code>
          parameter.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
          Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        in: query
        name: ResourceArns
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ResourceNameType'
          type: array
      - description: <p>A resource-based policy to include in the simulation provided
          as a string. Each resource in the simulation is treated as if it had this
          policy attached. You can include only one resource-based policy in a simulation.</p>
          <p>The maximum length of the policy document that you can pass in this operation,
          including whitespace, is listed below. To view the maximum character counts
          of a managed policy with no whitespaces, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html#reference_iam-quotas-entity-length">IAM
          and STS character quotas</a>.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> used to validate this parameter is a string of characters consisting
          of the following:</p> <ul> <li> <p>Any printable ASCII character ranging
          from the space character (<code>\u0020</code>) through the end of the ASCII
          character range</p> </li> <li> <p>The printable characters in the Basic
          Latin and Latin-1 Supplement character set (through <code>\u00FF</code>)</p>
          </li> <li> <p>The special characters tab (<code>\u0009</code>), line feed
          (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p> </li>
          </ul>
        in: query
        name: ResourcePolicy
        required: false
        schema:
          maxLength: 131072
          minLength: 1
          pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
          type: string
      - description: An Amazon Web Services account ID that specifies the owner of
          any simulated resource that does not identify its owner in the resource
          ARN. Examples of resource ARNs include an S3 bucket or object. If <code>ResourceOwner</code>
          is specified, it is also used as the account owner of any <code>ResourcePolicy</code>
          included in the simulation. If the <code>ResourceOwner</code> parameter
          is not specified, then the owner of the resources and the resource policy
          defaults to the account of the identity provided in <code>CallerArn</code>.
          This parameter is required only if you specify a resource-based policy and
          account that owns the resource is different from the account that owns the
          simulated calling user <code>CallerArn</code>.
        in: query
        name: ResourceOwner
        required: false
        schema:
          maxLength: 2048
          minLength: 1
          type: string
      - description: <p>The ARN of the IAM user that you want to specify as the simulated
          caller of the API operations. If you do not specify a <code>CallerArn</code>,
          it defaults to the ARN of the user that you specify in <code>PolicySourceArn</code>,
          if you specified a user. If you include both a <code>PolicySourceArn</code>
          (for example, <code>arn:aws:iam::123456789012:user/David</code>) and a <code>CallerArn</code>
          (for example, <code>arn:aws:iam::123456789012:user/Bob</code>), the result
          is that you simulate calling the API operations as Bob, as if Bob had David's
          policies.</p> <p>You can specify only the ARN of an IAM user. You cannot
          specify the ARN of an assumed role, federated user, or a service principal.</p>
          <p> <code>CallerArn</code> is required if you include a <code>ResourcePolicy</code>
          and the <code>PolicySourceArn</code> is not the ARN for an IAM user. This
          is required so that the resource-based policy's <code>Principal</code> element
          has a value to use in evaluating the policy.</p> <p>For more information
          about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
          Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        in: query
        name: CallerArn
        required: false
        schema:
          maxLength: 2048
          minLength: 1
          type: string
      - description: A list of context keys and corresponding values for the simulation
          to use. Whenever a context key is evaluated in one of the simulated IAM
          permissions policies, the corresponding value is supplied.
        in: query
        name: ContextEntries
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ContextEntry'
          type: array
      - description: <p>Specifies the type of simulation to run. Different API operations
          that support resource-based policies require different combinations of resources.
          By specifying the type of simulation to run, you enable the policy simulator
          to enforce the presence of the required resources to ensure reliable simulation
          results. If your simulation does not match one of the following scenarios,
          then you can omit this parameter. The following list shows each of the supported
          scenario values and the resources that you must define to run the simulation.</p>
          <p>Each of the EC2 scenarios requires that you specify instance, image,
          and security group resources. If your scenario includes an EBS volume, then
          you must specify that volume as a resource. If the EC2 scenario includes
          VPC, then you must supply the network interface resource. If it includes
          an IP subnet, then you must specify the subnet resource. For more information
          on the EC2 scenario options, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-supported-platforms.html">Supported
          platforms</a> in the <i>Amazon EC2 User Guide</i>.</p> <ul> <li> <p> <b>EC2-Classic-InstanceStore</b>
          </p> <p>instance, image, security group</p> </li> <li> <p> <b>EC2-Classic-EBS</b>
          </p> <p>instance, image, security group, volume</p> </li> <li> <p> <b>EC2-VPC-InstanceStore</b>
          </p> <p>instance, image, security group, network interface</p> </li> <li>
          <p> <b>EC2-VPC-InstanceStore-Subnet</b> </p> <p>instance, image, security
          group, network interface, subnet</p> </li> <li> <p> <b>EC2-VPC-EBS</b> </p>
          <p>instance, image, security group, network interface, volume</p> </li>
          <li> <p> <b>EC2-VPC-EBS-Subnet</b> </p> <p>instance, image, security group,
          network interface, subnet, volume</p> </li> </ul>
        in: query
        name: ResourceHandlingOption
        required: false
        schema:
          maxLength: 64
          minLength: 1
          type: string
      - description: <p>Use this only when paginating results to indicate the maximum
          number of items you want in the response. If additional items exist beyond
          the maximum you specify, the <code>IsTruncated</code> response element is
          <code>true</code>.</p> <p>If you do not include this parameter, the number
          of items defaults to 100. Note that IAM might return fewer results, even
          when there are more results available. In that case, the <code>IsTruncated</code>
          response element returns <code>true</code>, and <code>Marker</code> contains
          a value to include in the subsequent call that tells the service where to
          continue from.</p>
        in: query
        name: MaxItems
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      - description: Use this parameter only when paginating results and only after
          you receive a response indicating that the results are truncated. Set it
          to the value of the <code>Marker</code> element in the response that you
          received to indicate where the next call should start.
        in: query
        name: Marker
        required: false
        schema:
          maxLength: 320
          minLength: 1
          pattern: '[\u0020-\u00FF]+'
          type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SimulatePolicyResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PolicyEvaluationException'
          description: PolicyEvaluationException
      x-aws-operation-name: SimulatePrincipalPolicy
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Simulate how a set of IAM policies attached to an IAM entity
        works with a list of API operations and Amazon Web Services resources to determine
        the policies' effective permissions. The entity can be an IAM user, group,
        or role. If you specify a user, then the simulation also includes all of the
        policies that are attached to groups that the user belongs to. You can simulate
        resources that don't exist in your account.</p> <p>You can optionally include
        a list of one or more additional policies specified as strings to include
        in the simulation. If you want to simulate only policies specified as strings,
        use <a>SimulateCustomPolicy</a> instead.</p> <p>You can also optionally include
        one resource-based policy to be evaluated with each of the resources included
        in the simulation.</p> <p>The simulation does not perform the API operations;
        it only checks the authorization to determine if the simulated policies allow
        or deny the operations.</p> <p> <b>Note:</b> This operation discloses information
        about the permissions granted to other users. If you do not want users to
        see other user's permissions, then consider allowing them to use <a>SimulateCustomPolicy</a>
        instead.</p> <p>Context keys are variables maintained by Amazon Web Services
        and its services that provide details about the context of an API query request.
        You can use the <code>Condition</code> element of an IAM policy to evaluate
        context keys. To get the list of context keys that the policies require for
        correct simulation, use <a>GetContextKeysForPrincipalPolicy</a>.</p> <p>If
        the output is long, you can use the <code>MaxItems</code> and <code>Marker</code>
        parameters to paginate the results.</p> <p>For more information about using
        the policy simulator, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_testing-policies.html">Testing
        IAM policies with the IAM policy simulator </a>in the <i>IAM User Guide</i>.</p>
      operationId: POST_SimulatePrincipalPolicy
      parameters:
      - description: Pagination limit
        in: query
        name: MaxItems
        required: false
        schema:
          type: string
      - description: Pagination token
        in: query
        name: Marker
        required: false
        schema:
          type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/SimulatePrincipalPolicyRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SimulatePolicyResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PolicyEvaluationException'
          description: PolicyEvaluationException
      x-aws-operation-name: SimulatePrincipalPolicy
  /?Action=TagInstanceProfile&Version=2010-05-08:
    get:
      description: <p>Adds one or more tags to an IAM instance profile. If a tag with
        the same key name already exists, then that tag is overwritten with the new
        value.</p> <p>Each tag consists of a key name and an associated value. By
        assigning tags to your resources, you can do the following:</p> <ul> <li>
        <p> <b>Administrative grouping and discovery</b> - Attach tags to resources
        to aid in organization and search. For example, you could search for all resources
        with the key name <i>Project</i> and the value <i>MyImportantProject</i>.
        Or search for all resources with the key name <i>Cost Center</i> and the value
        <i>41200</i>. </p> </li> <li> <p> <b>Access control</b> - Include tags in
        IAM user-based and resource-based policies. You can use tags to restrict access
        to only an IAM instance profile that has a specified tag attached. For examples
        of policies that show how to use tags to control access, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html">Control
        access using IAM tags</a> in the <i>IAM User Guide</i>.</p> </li> </ul> <note>
        <ul> <li> <p>If any one of the tags is invalid or if you exceed the allowed
        maximum number of tags, then the entire request fails and the resource is
        not created. For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.</p> </li> <li> <p>Amazon Web
        Services always interprets the tag <code>Value</code> as a single string.
        If you need to store an array, you can store comma-separated values in the
        string. However, you must interpret the value in your code.</p> </li> </ul>
        </note>
      operationId: GET_TagInstanceProfile
      parameters:
      - description: '<p>The name of the IAM instance profile to which you want to
          add tags.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: InstanceProfileName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: The list of tags that you want to attach to the IAM instance
          profile. Each tag consists of a key name and an associated value.
        in: query
        name: Tags
        required: true
        schema:
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 50
          type: array
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: TagInstanceProfile
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Adds one or more tags to an IAM instance profile. If a tag with
        the same key name already exists, then that tag is overwritten with the new
        value.</p> <p>Each tag consists of a key name and an associated value. By
        assigning tags to your resources, you can do the following:</p> <ul> <li>
        <p> <b>Administrative grouping and discovery</b> - Attach tags to resources
        to aid in organization and search. For example, you could search for all resources
        with the key name <i>Project</i> and the value <i>MyImportantProject</i>.
        Or search for all resources with the key name <i>Cost Center</i> and the value
        <i>41200</i>. </p> </li> <li> <p> <b>Access control</b> - Include tags in
        IAM user-based and resource-based policies. You can use tags to restrict access
        to only an IAM instance profile that has a specified tag attached. For examples
        of policies that show how to use tags to control access, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html">Control
        access using IAM tags</a> in the <i>IAM User Guide</i>.</p> </li> </ul> <note>
        <ul> <li> <p>If any one of the tags is invalid or if you exceed the allowed
        maximum number of tags, then the entire request fails and the resource is
        not created. For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.</p> </li> <li> <p>Amazon Web
        Services always interprets the tag <code>Value</code> as a single string.
        If you need to store an array, you can store comma-separated values in the
        string. However, you must interpret the value in your code.</p> </li> </ul>
        </note>
      operationId: POST_TagInstanceProfile
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/TagInstanceProfileRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: TagInstanceProfile
  /?Action=TagMFADevice&Version=2010-05-08:
    get:
      description: <p>Adds one or more tags to an IAM virtual multi-factor authentication
        (MFA) device. If a tag with the same key name already exists, then that tag
        is overwritten with the new value.</p> <p>A tag consists of a key name and
        an associated value. By assigning tags to your resources, you can do the following:</p>
        <ul> <li> <p> <b>Administrative grouping and discovery</b> - Attach tags to
        resources to aid in organization and search. For example, you could search
        for all resources with the key name <i>Project</i> and the value <i>MyImportantProject</i>.
        Or search for all resources with the key name <i>Cost Center</i> and the value
        <i>41200</i>. </p> </li> <li> <p> <b>Access control</b> - Include tags in
        IAM user-based and resource-based policies. You can use tags to restrict access
        to only an IAM virtual MFA device that has a specified tag attached. For examples
        of policies that show how to use tags to control access, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html">Control
        access using IAM tags</a> in the <i>IAM User Guide</i>.</p> </li> </ul> <note>
        <ul> <li> <p>If any one of the tags is invalid or if you exceed the allowed
        maximum number of tags, then the entire request fails and the resource is
        not created. For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.</p> </li> <li> <p>Amazon Web
        Services always interprets the tag <code>Value</code> as a single string.
        If you need to store an array, you can store comma-separated values in the
        string. However, you must interpret the value in your code.</p> </li> </ul>
        </note>
      operationId: GET_TagMFADevice
      parameters:
      - description: '<p>The unique identifier for the IAM virtual MFA device to which
          you want to add tags. For virtual MFA devices, the serial number is the
          same as the ARN.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: SerialNumber
        required: true
        schema:
          maxLength: 256
          minLength: 9
          pattern: '[\w+=/:,.@-]+'
          type: string
      - description: The list of tags that you want to attach to the IAM virtual MFA
          device. Each tag consists of a key name and an associated value.
        in: query
        name: Tags
        required: true
        schema:
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 50
          type: array
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: TagMFADevice
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Adds one or more tags to an IAM virtual multi-factor authentication
        (MFA) device. If a tag with the same key name already exists, then that tag
        is overwritten with the new value.</p> <p>A tag consists of a key name and
        an associated value. By assigning tags to your resources, you can do the following:</p>
        <ul> <li> <p> <b>Administrative grouping and discovery</b> - Attach tags to
        resources to aid in organization and search. For example, you could search
        for all resources with the key name <i>Project</i> and the value <i>MyImportantProject</i>.
        Or search for all resources with the key name <i>Cost Center</i> and the value
        <i>41200</i>. </p> </li> <li> <p> <b>Access control</b> - Include tags in
        IAM user-based and resource-based policies. You can use tags to restrict access
        to only an IAM virtual MFA device that has a specified tag attached. For examples
        of policies that show how to use tags to control access, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html">Control
        access using IAM tags</a> in the <i>IAM User Guide</i>.</p> </li> </ul> <note>
        <ul> <li> <p>If any one of the tags is invalid or if you exceed the allowed
        maximum number of tags, then the entire request fails and the resource is
        not created. For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.</p> </li> <li> <p>Amazon Web
        Services always interprets the tag <code>Value</code> as a single string.
        If you need to store an array, you can store comma-separated values in the
        string. However, you must interpret the value in your code.</p> </li> </ul>
        </note>
      operationId: POST_TagMFADevice
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/TagMFADeviceRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: TagMFADevice
  /?Action=TagOpenIDConnectProvider&Version=2010-05-08:
    get:
      description: <p>Adds one or more tags to an OpenID Connect (OIDC)-compatible
        identity provider. For more information about these providers, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_oidc.html">About
        web identity federation</a>. If a tag with the same key name already exists,
        then that tag is overwritten with the new value.</p> <p>A tag consists of
        a key name and an associated value. By assigning tags to your resources, you
        can do the following:</p> <ul> <li> <p> <b>Administrative grouping and discovery</b>
        - Attach tags to resources to aid in organization and search. For example,
        you could search for all resources with the key name <i>Project</i> and the
        value <i>MyImportantProject</i>. Or search for all resources with the key
        name <i>Cost Center</i> and the value <i>41200</i>. </p> </li> <li> <p> <b>Access
        control</b> - Include tags in IAM user-based and resource-based policies.
        You can use tags to restrict access to only an OIDC provider that has a specified
        tag attached. For examples of policies that show how to use tags to control
        access, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html">Control
        access using IAM tags</a> in the <i>IAM User Guide</i>.</p> </li> </ul> <note>
        <ul> <li> <p>If any one of the tags is invalid or if you exceed the allowed
        maximum number of tags, then the entire request fails and the resource is
        not created. For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.</p> </li> <li> <p>Amazon Web
        Services always interprets the tag <code>Value</code> as a single string.
        If you need to store an array, you can store comma-separated values in the
        string. However, you must interpret the value in your code.</p> </li> </ul>
        </note>
      operationId: GET_TagOpenIDConnectProvider
      parameters:
      - description: '<p>The ARN of the OIDC identity provider in IAM to which you
          want to add tags.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: OpenIDConnectProviderArn
        required: true
        schema:
          description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers
            for Amazon Web Services resources.</p> <p>For more information about ARNs,
            go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
            </p>
          maxLength: 2048
          minLength: 20
          type: string
      - description: The list of tags that you want to attach to the OIDC identity
          provider in IAM. Each tag consists of a key name and an associated value.
        in: query
        name: Tags
        required: true
        schema:
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 50
          type: array
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: TagOpenIDConnectProvider
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Adds one or more tags to an OpenID Connect (OIDC)-compatible
        identity provider. For more information about these providers, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_oidc.html">About
        web identity federation</a>. If a tag with the same key name already exists,
        then that tag is overwritten with the new value.</p> <p>A tag consists of
        a key name and an associated value. By assigning tags to your resources, you
        can do the following:</p> <ul> <li> <p> <b>Administrative grouping and discovery</b>
        - Attach tags to resources to aid in organization and search. For example,
        you could search for all resources with the key name <i>Project</i> and the
        value <i>MyImportantProject</i>. Or search for all resources with the key
        name <i>Cost Center</i> and the value <i>41200</i>. </p> </li> <li> <p> <b>Access
        control</b> - Include tags in IAM user-based and resource-based policies.
        You can use tags to restrict access to only an OIDC provider that has a specified
        tag attached. For examples of policies that show how to use tags to control
        access, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html">Control
        access using IAM tags</a> in the <i>IAM User Guide</i>.</p> </li> </ul> <note>
        <ul> <li> <p>If any one of the tags is invalid or if you exceed the allowed
        maximum number of tags, then the entire request fails and the resource is
        not created. For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.</p> </li> <li> <p>Amazon Web
        Services always interprets the tag <code>Value</code> as a single string.
        If you need to store an array, you can store comma-separated values in the
        string. However, you must interpret the value in your code.</p> </li> </ul>
        </note>
      operationId: POST_TagOpenIDConnectProvider
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/TagOpenIDConnectProviderRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: TagOpenIDConnectProvider
  /?Action=TagPolicy&Version=2010-05-08:
    get:
      description: <p>Adds one or more tags to an IAM customer managed policy. If
        a tag with the same key name already exists, then that tag is overwritten
        with the new value.</p> <p>A tag consists of a key name and an associated
        value. By assigning tags to your resources, you can do the following:</p>
        <ul> <li> <p> <b>Administrative grouping and discovery</b> - Attach tags to
        resources to aid in organization and search. For example, you could search
        for all resources with the key name <i>Project</i> and the value <i>MyImportantProject</i>.
        Or search for all resources with the key name <i>Cost Center</i> and the value
        <i>41200</i>. </p> </li> <li> <p> <b>Access control</b> - Include tags in
        IAM user-based and resource-based policies. You can use tags to restrict access
        to only an IAM customer managed policy that has a specified tag attached.
        For examples of policies that show how to use tags to control access, see
        <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html">Control
        access using IAM tags</a> in the <i>IAM User Guide</i>.</p> </li> </ul> <note>
        <ul> <li> <p>If any one of the tags is invalid or if you exceed the allowed
        maximum number of tags, then the entire request fails and the resource is
        not created. For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.</p> </li> <li> <p>Amazon Web
        Services always interprets the tag <code>Value</code> as a single string.
        If you need to store an array, you can store comma-separated values in the
        string. However, you must interpret the value in your code.</p> </li> </ul>
        </note>
      operationId: GET_TagPolicy
      parameters:
      - description: '<p>The ARN of the IAM customer managed policy to which you want
          to add tags.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: PolicyArn
        required: true
        schema:
          description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers
            for Amazon Web Services resources.</p> <p>For more information about ARNs,
            go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
            </p>
          maxLength: 2048
          minLength: 20
          type: string
      - description: The list of tags that you want to attach to the IAM customer
          managed policy. Each tag consists of a key name and an associated value.
        in: query
        name: Tags
        required: true
        schema:
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 50
          type: array
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: TagPolicy
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Adds one or more tags to an IAM customer managed policy. If
        a tag with the same key name already exists, then that tag is overwritten
        with the new value.</p> <p>A tag consists of a key name and an associated
        value. By assigning tags to your resources, you can do the following:</p>
        <ul> <li> <p> <b>Administrative grouping and discovery</b> - Attach tags to
        resources to aid in organization and search. For example, you could search
        for all resources with the key name <i>Project</i> and the value <i>MyImportantProject</i>.
        Or search for all resources with the key name <i>Cost Center</i> and the value
        <i>41200</i>. </p> </li> <li> <p> <b>Access control</b> - Include tags in
        IAM user-based and resource-based policies. You can use tags to restrict access
        to only an IAM customer managed policy that has a specified tag attached.
        For examples of policies that show how to use tags to control access, see
        <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html">Control
        access using IAM tags</a> in the <i>IAM User Guide</i>.</p> </li> </ul> <note>
        <ul> <li> <p>If any one of the tags is invalid or if you exceed the allowed
        maximum number of tags, then the entire request fails and the resource is
        not created. For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.</p> </li> <li> <p>Amazon Web
        Services always interprets the tag <code>Value</code> as a single string.
        If you need to store an array, you can store comma-separated values in the
        string. However, you must interpret the value in your code.</p> </li> </ul>
        </note>
      operationId: POST_TagPolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/TagPolicyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: TagPolicy
  /?Action=TagRole&Version=2010-05-08:
    get:
      description: <p>Adds one or more tags to an IAM role. The role can be a regular
        role or a service-linked role. If a tag with the same key name already exists,
        then that tag is overwritten with the new value.</p> <p>A tag consists of
        a key name and an associated value. By assigning tags to your resources, you
        can do the following:</p> <ul> <li> <p> <b>Administrative grouping and discovery</b>
        - Attach tags to resources to aid in organization and search. For example,
        you could search for all resources with the key name <i>Project</i> and the
        value <i>MyImportantProject</i>. Or search for all resources with the key
        name <i>Cost Center</i> and the value <i>41200</i>. </p> </li> <li> <p> <b>Access
        control</b> - Include tags in IAM user-based and resource-based policies.
        You can use tags to restrict access to only an IAM role that has a specified
        tag attached. You can also restrict access to only those resources that have
        a certain tag attached. For examples of policies that show how to use tags
        to control access, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html">Control
        access using IAM tags</a> in the <i>IAM User Guide</i>.</p> </li> <li> <p>
        <b>Cost allocation</b> - Use tags to help track which individuals and teams
        are using which Amazon Web Services resources.</p> </li> </ul> <note> <ul>
        <li> <p>If any one of the tags is invalid or if you exceed the allowed maximum
        number of tags, then the entire request fails and the resource is not created.
        For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.</p> </li> <li> <p>Amazon Web
        Services always interprets the tag <code>Value</code> as a single string.
        If you need to store an array, you can store comma-separated values in the
        string. However, you must interpret the value in your code.</p> </li> </ul>
        </note> <p>For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM identities</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_TagRole
      parameters:
      - description: '<p>The name of the IAM role to which you want to add tags.</p>
          <p>This parameter accepts (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters that consist of upper and lowercase
          alphanumeric characters with no spaces. You can also include any of the
          following characters: _+=,.@-</p>'
        in: query
        name: RoleName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: The list of tags that you want to attach to the IAM role. Each
          tag consists of a key name and an associated value.
        in: query
        name: Tags
        required: true
        schema:
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 50
          type: array
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: TagRole
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Adds one or more tags to an IAM role. The role can be a regular
        role or a service-linked role. If a tag with the same key name already exists,
        then that tag is overwritten with the new value.</p> <p>A tag consists of
        a key name and an associated value. By assigning tags to your resources, you
        can do the following:</p> <ul> <li> <p> <b>Administrative grouping and discovery</b>
        - Attach tags to resources to aid in organization and search. For example,
        you could search for all resources with the key name <i>Project</i> and the
        value <i>MyImportantProject</i>. Or search for all resources with the key
        name <i>Cost Center</i> and the value <i>41200</i>. </p> </li> <li> <p> <b>Access
        control</b> - Include tags in IAM user-based and resource-based policies.
        You can use tags to restrict access to only an IAM role that has a specified
        tag attached. You can also restrict access to only those resources that have
        a certain tag attached. For examples of policies that show how to use tags
        to control access, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html">Control
        access using IAM tags</a> in the <i>IAM User Guide</i>.</p> </li> <li> <p>
        <b>Cost allocation</b> - Use tags to help track which individuals and teams
        are using which Amazon Web Services resources.</p> </li> </ul> <note> <ul>
        <li> <p>If any one of the tags is invalid or if you exceed the allowed maximum
        number of tags, then the entire request fails and the resource is not created.
        For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.</p> </li> <li> <p>Amazon Web
        Services always interprets the tag <code>Value</code> as a single string.
        If you need to store an array, you can store comma-separated values in the
        string. However, you must interpret the value in your code.</p> </li> </ul>
        </note> <p>For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM identities</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_TagRole
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/TagRoleRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: TagRole
  /?Action=TagSAMLProvider&Version=2010-05-08:
    get:
      description: <p>Adds one or more tags to a Security Assertion Markup Language
        (SAML) identity provider. For more information about these providers, see
        <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_saml.html">About
        SAML 2.0-based federation </a>. If a tag with the same key name already exists,
        then that tag is overwritten with the new value.</p> <p>A tag consists of
        a key name and an associated value. By assigning tags to your resources, you
        can do the following:</p> <ul> <li> <p> <b>Administrative grouping and discovery</b>
        - Attach tags to resources to aid in organization and search. For example,
        you could search for all resources with the key name <i>Project</i> and the
        value <i>MyImportantProject</i>. Or search for all resources with the key
        name <i>Cost Center</i> and the value <i>41200</i>. </p> </li> <li> <p> <b>Access
        control</b> - Include tags in IAM user-based and resource-based policies.
        You can use tags to restrict access to only a SAML identity provider that
        has a specified tag attached. For examples of policies that show how to use
        tags to control access, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html">Control
        access using IAM tags</a> in the <i>IAM User Guide</i>.</p> </li> </ul> <note>
        <ul> <li> <p>If any one of the tags is invalid or if you exceed the allowed
        maximum number of tags, then the entire request fails and the resource is
        not created. For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.</p> </li> <li> <p>Amazon Web
        Services always interprets the tag <code>Value</code> as a single string.
        If you need to store an array, you can store comma-separated values in the
        string. However, you must interpret the value in your code.</p> </li> </ul>
        </note>
      operationId: GET_TagSAMLProvider
      parameters:
      - description: '<p>The ARN of the SAML identity provider in IAM to which you
          want to add tags.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: SAMLProviderArn
        required: true
        schema:
          description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers
            for Amazon Web Services resources.</p> <p>For more information about ARNs,
            go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
            </p>
          maxLength: 2048
          minLength: 20
          type: string
      - description: The list of tags that you want to attach to the SAML identity
          provider in IAM. Each tag consists of a key name and an associated value.
        in: query
        name: Tags
        required: true
        schema:
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 50
          type: array
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: TagSAMLProvider
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Adds one or more tags to a Security Assertion Markup Language
        (SAML) identity provider. For more information about these providers, see
        <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_saml.html">About
        SAML 2.0-based federation </a>. If a tag with the same key name already exists,
        then that tag is overwritten with the new value.</p> <p>A tag consists of
        a key name and an associated value. By assigning tags to your resources, you
        can do the following:</p> <ul> <li> <p> <b>Administrative grouping and discovery</b>
        - Attach tags to resources to aid in organization and search. For example,
        you could search for all resources with the key name <i>Project</i> and the
        value <i>MyImportantProject</i>. Or search for all resources with the key
        name <i>Cost Center</i> and the value <i>41200</i>. </p> </li> <li> <p> <b>Access
        control</b> - Include tags in IAM user-based and resource-based policies.
        You can use tags to restrict access to only a SAML identity provider that
        has a specified tag attached. For examples of policies that show how to use
        tags to control access, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html">Control
        access using IAM tags</a> in the <i>IAM User Guide</i>.</p> </li> </ul> <note>
        <ul> <li> <p>If any one of the tags is invalid or if you exceed the allowed
        maximum number of tags, then the entire request fails and the resource is
        not created. For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.</p> </li> <li> <p>Amazon Web
        Services always interprets the tag <code>Value</code> as a single string.
        If you need to store an array, you can store comma-separated values in the
        string. However, you must interpret the value in your code.</p> </li> </ul>
        </note>
      operationId: POST_TagSAMLProvider
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/TagSAMLProviderRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: TagSAMLProvider
  /?Action=TagServerCertificate&Version=2010-05-08:
    get:
      description: <p>Adds one or more tags to an IAM server certificate. If a tag
        with the same key name already exists, then that tag is overwritten with the
        new value.</p> <note> <p>For certificates in a Region supported by Certificate
        Manager (ACM), we recommend that you don't use IAM server certificates. Instead,
        use ACM to provision, manage, and deploy your server certificates. For more
        information about IAM server certificates, <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html">Working
        with server certificates</a> in the <i>IAM User Guide</i>.</p> </note> <p>A
        tag consists of a key name and an associated value. By assigning tags to your
        resources, you can do the following:</p> <ul> <li> <p> <b>Administrative grouping
        and discovery</b> - Attach tags to resources to aid in organization and search.
        For example, you could search for all resources with the key name <i>Project</i>
        and the value <i>MyImportantProject</i>. Or search for all resources with
        the key name <i>Cost Center</i> and the value <i>41200</i>. </p> </li> <li>
        <p> <b>Access control</b> - Include tags in IAM user-based and resource-based
        policies. You can use tags to restrict access to only a server certificate
        that has a specified tag attached. For examples of policies that show how
        to use tags to control access, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html">Control
        access using IAM tags</a> in the <i>IAM User Guide</i>.</p> </li> <li> <p>
        <b>Cost allocation</b> - Use tags to help track which individuals and teams
        are using which Amazon Web Services resources.</p> </li> </ul> <note> <ul>
        <li> <p>If any one of the tags is invalid or if you exceed the allowed maximum
        number of tags, then the entire request fails and the resource is not created.
        For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.</p> </li> <li> <p>Amazon Web
        Services always interprets the tag <code>Value</code> as a single string.
        If you need to store an array, you can store comma-separated values in the
        string. However, you must interpret the value in your code.</p> </li> </ul>
        </note>
      operationId: GET_TagServerCertificate
      parameters:
      - description: '<p>The name of the IAM server certificate to which you want
          to add tags.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: ServerCertificateName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: The list of tags that you want to attach to the IAM server certificate.
          Each tag consists of a key name and an associated value.
        in: query
        name: Tags
        required: true
        schema:
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 50
          type: array
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: TagServerCertificate
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Adds one or more tags to an IAM server certificate. If a tag
        with the same key name already exists, then that tag is overwritten with the
        new value.</p> <note> <p>For certificates in a Region supported by Certificate
        Manager (ACM), we recommend that you don't use IAM server certificates. Instead,
        use ACM to provision, manage, and deploy your server certificates. For more
        information about IAM server certificates, <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html">Working
        with server certificates</a> in the <i>IAM User Guide</i>.</p> </note> <p>A
        tag consists of a key name and an associated value. By assigning tags to your
        resources, you can do the following:</p> <ul> <li> <p> <b>Administrative grouping
        and discovery</b> - Attach tags to resources to aid in organization and search.
        For example, you could search for all resources with the key name <i>Project</i>
        and the value <i>MyImportantProject</i>. Or search for all resources with
        the key name <i>Cost Center</i> and the value <i>41200</i>. </p> </li> <li>
        <p> <b>Access control</b> - Include tags in IAM user-based and resource-based
        policies. You can use tags to restrict access to only a server certificate
        that has a specified tag attached. For examples of policies that show how
        to use tags to control access, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html">Control
        access using IAM tags</a> in the <i>IAM User Guide</i>.</p> </li> <li> <p>
        <b>Cost allocation</b> - Use tags to help track which individuals and teams
        are using which Amazon Web Services resources.</p> </li> </ul> <note> <ul>
        <li> <p>If any one of the tags is invalid or if you exceed the allowed maximum
        number of tags, then the entire request fails and the resource is not created.
        For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.</p> </li> <li> <p>Amazon Web
        Services always interprets the tag <code>Value</code> as a single string.
        If you need to store an array, you can store comma-separated values in the
        string. However, you must interpret the value in your code.</p> </li> </ul>
        </note>
      operationId: POST_TagServerCertificate
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/TagServerCertificateRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: TagServerCertificate
  /?Action=TagUser&Version=2010-05-08:
    get:
      description: <p>Adds one or more tags to an IAM user. If a tag with the same
        key name already exists, then that tag is overwritten with the new value.</p>
        <p>A tag consists of a key name and an associated value. By assigning tags
        to your resources, you can do the following:</p> <ul> <li> <p> <b>Administrative
        grouping and discovery</b> - Attach tags to resources to aid in organization
        and search. For example, you could search for all resources with the key name
        <i>Project</i> and the value <i>MyImportantProject</i>. Or search for all
        resources with the key name <i>Cost Center</i> and the value <i>41200</i>.
        </p> </li> <li> <p> <b>Access control</b> - Include tags in IAM user-based
        and resource-based policies. You can use tags to restrict access to only an
        IAM requesting user that has a specified tag attached. You can also restrict
        access to only those resources that have a certain tag attached. For examples
        of policies that show how to use tags to control access, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html">Control
        access using IAM tags</a> in the <i>IAM User Guide</i>.</p> </li> <li> <p>
        <b>Cost allocation</b> - Use tags to help track which individuals and teams
        are using which Amazon Web Services resources.</p> </li> </ul> <note> <ul>
        <li> <p>If any one of the tags is invalid or if you exceed the allowed maximum
        number of tags, then the entire request fails and the resource is not created.
        For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.</p> </li> <li> <p>Amazon Web
        Services always interprets the tag <code>Value</code> as a single string.
        If you need to store an array, you can store comma-separated values in the
        string. However, you must interpret the value in your code.</p> </li> </ul>
        </note> <p>For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM identities</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_TagUser
      parameters:
      - description: '<p>The name of the IAM user to which you want to add tags.</p>
          <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: UserName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: The list of tags that you want to attach to the IAM user. Each
          tag consists of a key name and an associated value.
        in: query
        name: Tags
        required: true
        schema:
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 50
          type: array
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: TagUser
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Adds one or more tags to an IAM user. If a tag with the same
        key name already exists, then that tag is overwritten with the new value.</p>
        <p>A tag consists of a key name and an associated value. By assigning tags
        to your resources, you can do the following:</p> <ul> <li> <p> <b>Administrative
        grouping and discovery</b> - Attach tags to resources to aid in organization
        and search. For example, you could search for all resources with the key name
        <i>Project</i> and the value <i>MyImportantProject</i>. Or search for all
        resources with the key name <i>Cost Center</i> and the value <i>41200</i>.
        </p> </li> <li> <p> <b>Access control</b> - Include tags in IAM user-based
        and resource-based policies. You can use tags to restrict access to only an
        IAM requesting user that has a specified tag attached. You can also restrict
        access to only those resources that have a certain tag attached. For examples
        of policies that show how to use tags to control access, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html">Control
        access using IAM tags</a> in the <i>IAM User Guide</i>.</p> </li> <li> <p>
        <b>Cost allocation</b> - Use tags to help track which individuals and teams
        are using which Amazon Web Services resources.</p> </li> </ul> <note> <ul>
        <li> <p>If any one of the tags is invalid or if you exceed the allowed maximum
        number of tags, then the entire request fails and the resource is not created.
        For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.</p> </li> <li> <p>Amazon Web
        Services always interprets the tag <code>Value</code> as a single string.
        If you need to store an array, you can store comma-separated values in the
        string. However, you must interpret the value in your code.</p> </li> </ul>
        </note> <p>For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM identities</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_TagUser
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/TagUserRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: TagUser
  /?Action=UntagInstanceProfile&Version=2010-05-08:
    get:
      description: Removes the specified tags from the IAM instance profile. For more
        information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.
      operationId: GET_UntagInstanceProfile
      parameters:
      - description: '<p>The name of the IAM instance profile from which you want
          to remove tags.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: InstanceProfileName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: A list of key names as a simple array of strings. The tags with
          matching keys are removed from the specified instance profile.
        in: query
        name: TagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/tagKeyType'
          maxItems: 50
          type: array
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UntagInstanceProfile
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: Removes the specified tags from the IAM instance profile. For more
        information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.
      operationId: POST_UntagInstanceProfile
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UntagInstanceProfileRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UntagInstanceProfile
  /?Action=UntagMFADevice&Version=2010-05-08:
    get:
      description: Removes the specified tags from the IAM virtual multi-factor authentication
        (MFA) device. For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.
      operationId: GET_UntagMFADevice
      parameters:
      - description: '<p>The unique identifier for the IAM virtual MFA device from
          which you want to remove tags. For virtual MFA devices, the serial number
          is the same as the ARN.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: SerialNumber
        required: true
        schema:
          maxLength: 256
          minLength: 9
          pattern: '[\w+=/:,.@-]+'
          type: string
      - description: A list of key names as a simple array of strings. The tags with
          matching keys are removed from the specified instance profile.
        in: query
        name: TagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/tagKeyType'
          maxItems: 50
          type: array
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UntagMFADevice
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: Removes the specified tags from the IAM virtual multi-factor authentication
        (MFA) device. For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.
      operationId: POST_UntagMFADevice
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UntagMFADeviceRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UntagMFADevice
  /?Action=UntagOpenIDConnectProvider&Version=2010-05-08:
    get:
      description: Removes the specified tags from the specified OpenID Connect (OIDC)-compatible
        identity provider in IAM. For more information about OIDC providers, see <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_oidc.html">About
        web identity federation</a>. For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.
      operationId: GET_UntagOpenIDConnectProvider
      parameters:
      - description: '<p>The ARN of the OIDC provider in IAM from which you want to
          remove tags.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: OpenIDConnectProviderArn
        required: true
        schema:
          description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers
            for Amazon Web Services resources.</p> <p>For more information about ARNs,
            go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
            </p>
          maxLength: 2048
          minLength: 20
          type: string
      - description: A list of key names as a simple array of strings. The tags with
          matching keys are removed from the specified OIDC provider.
        in: query
        name: TagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/tagKeyType'
          maxItems: 50
          type: array
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UntagOpenIDConnectProvider
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: Removes the specified tags from the specified OpenID Connect (OIDC)-compatible
        identity provider in IAM. For more information about OIDC providers, see <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_oidc.html">About
        web identity federation</a>. For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.
      operationId: POST_UntagOpenIDConnectProvider
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UntagOpenIDConnectProviderRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UntagOpenIDConnectProvider
  /?Action=UntagPolicy&Version=2010-05-08:
    get:
      description: Removes the specified tags from the customer managed policy. For
        more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.
      operationId: GET_UntagPolicy
      parameters:
      - description: '<p>The ARN of the IAM customer managed policy from which you
          want to remove tags.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: PolicyArn
        required: true
        schema:
          description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers
            for Amazon Web Services resources.</p> <p>For more information about ARNs,
            go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
            </p>
          maxLength: 2048
          minLength: 20
          type: string
      - description: A list of key names as a simple array of strings. The tags with
          matching keys are removed from the specified policy.
        in: query
        name: TagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/tagKeyType'
          maxItems: 50
          type: array
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UntagPolicy
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: Removes the specified tags from the customer managed policy. For
        more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.
      operationId: POST_UntagPolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UntagPolicyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UntagPolicy
  /?Action=UntagRole&Version=2010-05-08:
    get:
      description: Removes the specified tags from the role. For more information
        about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.
      operationId: GET_UntagRole
      parameters:
      - description: '<p>The name of the IAM role from which you want to remove tags.</p>
          <p>This parameter accepts (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters that consist of upper and lowercase
          alphanumeric characters with no spaces. You can also include any of the
          following characters: _+=,.@-</p>'
        in: query
        name: RoleName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: A list of key names as a simple array of strings. The tags with
          matching keys are removed from the specified role.
        in: query
        name: TagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/tagKeyType'
          maxItems: 50
          type: array
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UntagRole
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: Removes the specified tags from the role. For more information
        about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.
      operationId: POST_UntagRole
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UntagRoleRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UntagRole
  /?Action=UntagSAMLProvider&Version=2010-05-08:
    get:
      description: Removes the specified tags from the specified Security Assertion
        Markup Language (SAML) identity provider in IAM. For more information about
        these providers, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_oidc.html">About
        web identity federation</a>. For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.
      operationId: GET_UntagSAMLProvider
      parameters:
      - description: '<p>The ARN of the SAML identity provider in IAM from which you
          want to remove tags.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: SAMLProviderArn
        required: true
        schema:
          description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers
            for Amazon Web Services resources.</p> <p>For more information about ARNs,
            go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
            </p>
          maxLength: 2048
          minLength: 20
          type: string
      - description: A list of key names as a simple array of strings. The tags with
          matching keys are removed from the specified SAML identity provider.
        in: query
        name: TagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/tagKeyType'
          maxItems: 50
          type: array
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UntagSAMLProvider
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: Removes the specified tags from the specified Security Assertion
        Markup Language (SAML) identity provider in IAM. For more information about
        these providers, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_oidc.html">About
        web identity federation</a>. For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.
      operationId: POST_UntagSAMLProvider
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UntagSAMLProviderRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UntagSAMLProvider
  /?Action=UntagServerCertificate&Version=2010-05-08:
    get:
      description: <p>Removes the specified tags from the IAM server certificate.
        For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.</p> <note> <p>For certificates
        in a Region supported by Certificate Manager (ACM), we recommend that you
        don't use IAM server certificates. Instead, use ACM to provision, manage,
        and deploy your server certificates. For more information about IAM server
        certificates, <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html">Working
        with server certificates</a> in the <i>IAM User Guide</i>.</p> </note>
      operationId: GET_UntagServerCertificate
      parameters:
      - description: '<p>The name of the IAM server certificate from which you want
          to remove tags.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: ServerCertificateName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: A list of key names as a simple array of strings. The tags with
          matching keys are removed from the specified IAM server certificate.
        in: query
        name: TagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/tagKeyType'
          maxItems: 50
          type: array
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UntagServerCertificate
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Removes the specified tags from the IAM server certificate.
        For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.</p> <note> <p>For certificates
        in a Region supported by Certificate Manager (ACM), we recommend that you
        don't use IAM server certificates. Instead, use ACM to provision, manage,
        and deploy your server certificates. For more information about IAM server
        certificates, <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html">Working
        with server certificates</a> in the <i>IAM User Guide</i>.</p> </note>
      operationId: POST_UntagServerCertificate
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UntagServerCertificateRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UntagServerCertificate
  /?Action=UntagUser&Version=2010-05-08:
    get:
      description: Removes the specified tags from the user. For more information
        about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.
      operationId: GET_UntagUser
      parameters:
      - description: '<p>The name of the IAM user from which you want to remove tags.</p>
          <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: UserName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: A list of key names as a simple array of strings. The tags with
          matching keys are removed from the specified user.
        in: query
        name: TagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/tagKeyType'
          maxItems: 50
          type: array
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UntagUser
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: Removes the specified tags from the user. For more information
        about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.
      operationId: POST_UntagUser
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UntagUserRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UntagUser
  /?Action=UpdateAccessKey&Version=2010-05-08:
    get:
      description: <p>Changes the status of the specified access key from Active to
        Inactive, or vice versa. This operation can be used to disable a user's key
        as part of a key rotation workflow.</p> <p>If the <code>UserName</code> is
        not specified, the user name is determined implicitly based on the Amazon
        Web Services access key ID used to sign the request. This operation works
        for access keys under the Amazon Web Services account. Consequently, you can
        use this operation to manage Amazon Web Services account root user credentials
        even if the Amazon Web Services account has no associated users.</p> <p>For
        information about rotating keys, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/ManagingCredentials.html">Managing
        keys and certificates</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_UpdateAccessKey
      parameters:
      - description: '<p>The name of the user whose key you want to update.</p> <p>This
          parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: UserName
        required: false
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: <p>The access key ID of the secret access key you want to update.</p>
          <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters that can consist of any upper or lowercased
          letter or digit.</p>
        in: query
        name: AccessKeyId
        required: true
        schema:
          maxLength: 128
          minLength: 16
          pattern: '[\w]+'
          type: string
      - description: ' The status you want to assign to the secret access key. <code>Active</code>
          means that the key can be used for programmatic calls to Amazon Web Services,
          while <code>Inactive</code> means that the key cannot be used.'
        in: query
        name: Status
        required: true
        schema:
          enum:
          - Active
          - Inactive
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UpdateAccessKey
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Changes the status of the specified access key from Active to
        Inactive, or vice versa. This operation can be used to disable a user's key
        as part of a key rotation workflow.</p> <p>If the <code>UserName</code> is
        not specified, the user name is determined implicitly based on the Amazon
        Web Services access key ID used to sign the request. This operation works
        for access keys under the Amazon Web Services account. Consequently, you can
        use this operation to manage Amazon Web Services account root user credentials
        even if the Amazon Web Services account has no associated users.</p> <p>For
        information about rotating keys, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/ManagingCredentials.html">Managing
        keys and certificates</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_UpdateAccessKey
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateAccessKeyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UpdateAccessKey
  /?Action=UpdateAccountPasswordPolicy&Version=2010-05-08:
    get:
      description: <p>Updates the password policy settings for the Amazon Web Services
        account.</p> <note> <p>This operation does not support partial updates. No
        parameters are required, but if you do not specify a parameter, that parameter's
        value reverts to its default value. See the <b>Request Parameters</b> section
        for each parameter's default value. Also note that some parameters do not
        allow the default parameter to be explicitly set. Instead, to invoke the default
        value, do not include that parameter when you invoke the operation.</p> </note>
        <p> For more information about using a password policy, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingPasswordPolicies.html">Managing
        an IAM password policy</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_UpdateAccountPasswordPolicy
      parameters:
      - description: <p>The minimum number of characters allowed in an IAM user password.</p>
          <p>If you do not specify a value for this parameter, then the operation
          uses the default value of <code>6</code>.</p>
        in: query
        name: MinimumPasswordLength
        required: false
        schema:
          maximum: 128
          minimum: 6
          type: integer
      - description: '<p>Specifies whether IAM user passwords must contain at least
          one of the following non-alphanumeric characters:</p> <p>! @ # $ % ^ &amp;
          * ( ) _ + - = [ ] { } | ''</p> <p>If you do not specify a value for this
          parameter, then the operation uses the default value of <code>false</code>.
          The result is that passwords do not require at least one symbol character.</p>'
        in: query
        name: RequireSymbols
        required: false
        schema:
          type: boolean
      - description: <p>Specifies whether IAM user passwords must contain at least
          one numeric character (0 to 9).</p> <p>If you do not specify a value for
          this parameter, then the operation uses the default value of <code>false</code>.
          The result is that passwords do not require at least one numeric character.</p>
        in: query
        name: RequireNumbers
        required: false
        schema:
          type: boolean
      - description: <p>Specifies whether IAM user passwords must contain at least
          one uppercase character from the ISO basic Latin alphabet (A to Z).</p>
          <p>If you do not specify a value for this parameter, then the operation
          uses the default value of <code>false</code>. The result is that passwords
          do not require at least one uppercase character.</p>
        in: query
        name: RequireUppercaseCharacters
        required: false
        schema:
          type: boolean
      - description: <p>Specifies whether IAM user passwords must contain at least
          one lowercase character from the ISO basic Latin alphabet (a to z).</p>
          <p>If you do not specify a value for this parameter, then the operation
          uses the default value of <code>false</code>. The result is that passwords
          do not require at least one lowercase character.</p>
        in: query
        name: RequireLowercaseCharacters
        required: false
        schema:
          type: boolean
      - description: <p> Allows all IAM users in your account to use the Amazon Web
          Services Management Console to change their own passwords. For more information,
          see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_enable-user-change.html">Permitting
          IAM users to change their own passwords</a> in the <i>IAM User Guide</i>.</p>
          <p>If you do not specify a value for this parameter, then the operation
          uses the default value of <code>false</code>. The result is that IAM users
          in the account do not automatically have permissions to change their own
          password.</p>
        in: query
        name: AllowUsersToChangePassword
        required: false
        schema:
          type: boolean
      - description: <p>The number of days that an IAM user password is valid.</p>
          <p>If you do not specify a value for this parameter, then the operation
          uses the default value of <code>0</code>. The result is that IAM user passwords
          never expire.</p>
        in: query
        name: MaxPasswordAge
        required: false
        schema:
          maximum: 1095
          minimum: 1
          type: integer
      - description: <p>Specifies the number of previous passwords that IAM users
          are prevented from reusing.</p> <p>If you do not specify a value for this
          parameter, then the operation uses the default value of <code>0</code>.
          The result is that IAM users are not prevented from reusing previous passwords.</p>
        in: query
        name: PasswordReusePrevention
        required: false
        schema:
          maximum: 24
          minimum: 1
          type: integer
      - description: <p> Prevents IAM users who are accessing the account via the
          Amazon Web Services Management Console from setting a new console password
          after their password has expired. The IAM user cannot access the console
          until an administrator resets the password.</p> <p>If you do not specify
          a value for this parameter, then the operation uses the default value of
          <code>false</code>. The result is that IAM users can change their passwords
          after they expire and continue to sign in as the user.</p> <note> <p> In
          the Amazon Web Services Management Console, the custom password policy option
          <b>Allow users to change their own password</b> gives IAM users permissions
          to <code>iam:ChangePassword</code> for only their user and to the <code>iam:GetAccountPasswordPolicy</code>
          action. This option does not attach a permissions policy to each user, rather
          the permissions are applied at the account-level for all users by IAM. IAM
          users with <code>iam:ChangePassword</code> permission and active access
          keys can reset their own expired console password using the CLI or API.</p>
          </note>
        in: query
        name: HardExpiry
        required: false
        schema:
          type: boolean
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MalformedPolicyDocumentException'
          description: MalformedPolicyDocumentException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UpdateAccountPasswordPolicy
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Updates the password policy settings for the Amazon Web Services
        account.</p> <note> <p>This operation does not support partial updates. No
        parameters are required, but if you do not specify a parameter, that parameter's
        value reverts to its default value. See the <b>Request Parameters</b> section
        for each parameter's default value. Also note that some parameters do not
        allow the default parameter to be explicitly set. Instead, to invoke the default
        value, do not include that parameter when you invoke the operation.</p> </note>
        <p> For more information about using a password policy, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingPasswordPolicies.html">Managing
        an IAM password policy</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_UpdateAccountPasswordPolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateAccountPasswordPolicyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MalformedPolicyDocumentException'
          description: MalformedPolicyDocumentException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UpdateAccountPasswordPolicy
  /?Action=UpdateAssumeRolePolicy&Version=2010-05-08:
    get:
      description: Updates the policy that grants an IAM entity permission to assume
        a role. This is typically referred to as the "role trust policy". For more
        information about roles, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html">Using
        roles to delegate permissions and federate identities</a>.
      operationId: GET_UpdateAssumeRolePolicy
      parameters:
      - description: '<p>The name of the role to update with the new policy.</p> <p>This
          parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: RoleName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: <p>The policy that grants an entity permission to assume the
          role.</p> <p>You must provide policies in JSON format in IAM. However, for
          CloudFormation templates formatted in YAML, you can provide the policy in
          JSON or YAML format. CloudFormation always converts a YAML policy to JSON
          format before submitting it to IAM.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> used to validate this parameter is a string of characters consisting
          of the following:</p> <ul> <li> <p>Any printable ASCII character ranging
          from the space character (<code>\u0020</code>) through the end of the ASCII
          character range</p> </li> <li> <p>The printable characters in the Basic
          Latin and Latin-1 Supplement character set (through <code>\u00FF</code>)</p>
          </li> <li> <p>The special characters tab (<code>\u0009</code>), line feed
          (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p> </li>
          </ul>
        in: query
        name: PolicyDocument
        required: true
        schema:
          maxLength: 131072
          minLength: 1
          pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MalformedPolicyDocumentException'
          description: MalformedPolicyDocumentException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnmodifiableEntityException'
          description: UnmodifiableEntityException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UpdateAssumeRolePolicy
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: Updates the policy that grants an IAM entity permission to assume
        a role. This is typically referred to as the "role trust policy". For more
        information about roles, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html">Using
        roles to delegate permissions and federate identities</a>.
      operationId: POST_UpdateAssumeRolePolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateAssumeRolePolicyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MalformedPolicyDocumentException'
          description: MalformedPolicyDocumentException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnmodifiableEntityException'
          description: UnmodifiableEntityException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UpdateAssumeRolePolicy
  /?Action=UpdateGroup&Version=2010-05-08:
    get:
      description: <p>Updates the name and/or the path of the specified IAM group.</p>
        <important> <p> You should understand the implications of changing a group's
        path or name. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_WorkingWithGroupsAndUsers.html">Renaming
        users and groups</a> in the <i>IAM User Guide</i>.</p> </important> <note>
        <p>The person making the request (the principal), must have permission to
        change the role group with the old name and the new name. For example, to
        change the group named <code>Managers</code> to <code>MGRs</code>, the principal
        must have a policy that allows them to update both groups. If the principal
        has permission to update the <code>Managers</code> group, but not the <code>MGRs</code>
        group, then the update fails. For more information about permissions, see
        <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access.html">Access
        management</a>. </p> </note>
      operationId: GET_UpdateGroup
      parameters:
      - description: '<p>Name of the IAM group to update. If you''re changing the
          name of the group, this is the original name.</p> <p>This parameter allows
          (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters consisting of upper and lowercase alphanumeric characters
          with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        in: query
        name: GroupName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: <p>New path for the IAM group. Only include this if changing
          the group's path.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of either a forward slash
          (/) by itself or a string that must begin and end with forward slashes.
          In addition, it can contain any ASCII character from the ! (<code>\u0021</code>)
          through the DEL character (<code>\u007F</code>), including most punctuation
          characters, digits, and upper and lowercased letters.</p>
        in: query
        name: NewPath
        required: false
        schema:
          maxLength: 512
          minLength: 1
          pattern: (\u002F)|(\u002F[\u0021-\u007F]+\u002F)
          type: string
      - description: <p>New name for the IAM group. Only include this if changing
          the group's name.</p> <p>IAM user, group, role, and policy names must be
          unique within the account. Names are not distinguished by case. For example,
          you cannot create resources named both "MyResource" and "myresource".</p>
        in: query
        name: NewGroupName
        required: false
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
          description: EntityAlreadyExistsException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UpdateGroup
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Updates the name and/or the path of the specified IAM group.</p>
        <important> <p> You should understand the implications of changing a group's
        path or name. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_WorkingWithGroupsAndUsers.html">Renaming
        users and groups</a> in the <i>IAM User Guide</i>.</p> </important> <note>
        <p>The person making the request (the principal), must have permission to
        change the role group with the old name and the new name. For example, to
        change the group named <code>Managers</code> to <code>MGRs</code>, the principal
        must have a policy that allows them to update both groups. If the principal
        has permission to update the <code>Managers</code> group, but not the <code>MGRs</code>
        group, then the update fails. For more information about permissions, see
        <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access.html">Access
        management</a>. </p> </note>
      operationId: POST_UpdateGroup
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateGroupRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
          description: EntityAlreadyExistsException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UpdateGroup
  /?Action=UpdateLoginProfile&Version=2010-05-08:
    get:
      description: <p>Changes the password for the specified IAM user. You can use
        the CLI, the Amazon Web Services API, or the <b>Users</b> page in the IAM
        console to change the password for any IAM user. Use <a>ChangePassword</a>
        to change your own password in the <b>My Security Credentials</b> page in
        the Amazon Web Services Management Console.</p> <p>For more information about
        modifying passwords, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingLogins.html">Managing
        passwords</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_UpdateLoginProfile
      parameters:
      - description: '<p>The name of the user whose password you want to update.</p>
          <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: UserName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: <p>The new password for the specified IAM user.</p> <p>The <a
          href="http://wikipedia.org/wiki/regex">regex pattern</a> used to validate
          this parameter is a string of characters consisting of the following:</p>
          <ul> <li> <p>Any printable ASCII character ranging from the space character
          (<code>\u0020</code>) through the end of the ASCII character range</p> </li>
          <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement
          character set (through <code>\u00FF</code>)</p> </li> <li> <p>The special
          characters tab (<code>\u0009</code>), line feed (<code>\u000A</code>), and
          carriage return (<code>\u000D</code>)</p> </li> </ul> <p>However, the format
          can be further restricted by the account administrator by setting a password
          policy on the Amazon Web Services account. For more information, see <a>UpdateAccountPasswordPolicy</a>.</p>
        in: query
        name: Password
        required: false
        schema:
          format: password
          maxLength: 128
          minLength: 1
          pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
          type: string
      - description: Allows this new password to be used only once by requiring the
          specified IAM user to set a new password on next sign-in.
        in: query
        name: PasswordResetRequired
        required: false
        schema:
          type: boolean
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityTemporarilyUnmodifiableException'
          description: EntityTemporarilyUnmodifiableException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PasswordPolicyViolationException'
          description: PasswordPolicyViolationException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UpdateLoginProfile
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Changes the password for the specified IAM user. You can use
        the CLI, the Amazon Web Services API, or the <b>Users</b> page in the IAM
        console to change the password for any IAM user. Use <a>ChangePassword</a>
        to change your own password in the <b>My Security Credentials</b> page in
        the Amazon Web Services Management Console.</p> <p>For more information about
        modifying passwords, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingLogins.html">Managing
        passwords</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_UpdateLoginProfile
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateLoginProfileRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityTemporarilyUnmodifiableException'
          description: EntityTemporarilyUnmodifiableException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PasswordPolicyViolationException'
          description: PasswordPolicyViolationException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UpdateLoginProfile
  /?Action=UpdateOpenIDConnectProviderThumbprint&Version=2010-05-08:
    get:
      description: <p>Replaces the existing list of server certificate thumbprints
        associated with an OpenID Connect (OIDC) provider resource object with a new
        list of thumbprints.</p> <p>The list that you pass with this operation completely
        replaces the existing list of thumbprints. (The lists are not merged.)</p>
        <p>Typically, you need to update a thumbprint only when the identity provider
        certificate changes, which occurs rarely. However, if the provider's certificate
        <i>does</i> change, any attempt to assume an IAM role that specifies the OIDC
        provider as a principal fails until the certificate thumbprint is updated.</p>
        <note> <p>Amazon Web Services secures communication with some OIDC identity
        providers (IdPs) through our library of trusted certificate authorities (CAs)
        instead of using a certificate thumbprint to verify your IdP server certificate.
        These OIDC IdPs include Google, and those that use an Amazon S3 bucket to
        host a JSON Web Key Set (JWKS) endpoint. In these cases, your legacy thumbprint
        remains in your configuration, but is no longer used for validation.</p> </note>
        <note> <p>Trust for the OIDC provider is derived from the provider certificate
        and is validated by the thumbprint. Therefore, it is best to limit access
        to the <code>UpdateOpenIDConnectProviderThumbprint</code> operation to highly
        privileged users.</p> </note>
      operationId: GET_UpdateOpenIDConnectProviderThumbprint
      parameters:
      - description: <p>The Amazon Resource Name (ARN) of the IAM OIDC provider resource
          object for which you want to update the thumbprint. You can get a list of
          OIDC provider ARNs by using the <a>ListOpenIDConnectProviders</a> operation.</p>
          <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
          Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        in: query
        name: OpenIDConnectProviderArn
        required: true
        schema:
          description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers
            for Amazon Web Services resources.</p> <p>For more information about ARNs,
            go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
            </p>
          maxLength: 2048
          minLength: 20
          type: string
      - description: 'A list of certificate thumbprints that are associated with the
          specified IAM OpenID Connect provider. For more information, see <a>CreateOpenIDConnectProvider</a>. '
        in: query
        name: ThumbprintList
        required: true
        schema:
          description: Contains a list of thumbprints of identity provider server
            certificates.
          items:
            $ref: '#/components/schemas/thumbprintType'
          type: array
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UpdateOpenIDConnectProviderThumbprint
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Replaces the existing list of server certificate thumbprints
        associated with an OpenID Connect (OIDC) provider resource object with a new
        list of thumbprints.</p> <p>The list that you pass with this operation completely
        replaces the existing list of thumbprints. (The lists are not merged.)</p>
        <p>Typically, you need to update a thumbprint only when the identity provider
        certificate changes, which occurs rarely. However, if the provider's certificate
        <i>does</i> change, any attempt to assume an IAM role that specifies the OIDC
        provider as a principal fails until the certificate thumbprint is updated.</p>
        <note> <p>Amazon Web Services secures communication with some OIDC identity
        providers (IdPs) through our library of trusted certificate authorities (CAs)
        instead of using a certificate thumbprint to verify your IdP server certificate.
        These OIDC IdPs include Google, and those that use an Amazon S3 bucket to
        host a JSON Web Key Set (JWKS) endpoint. In these cases, your legacy thumbprint
        remains in your configuration, but is no longer used for validation.</p> </note>
        <note> <p>Trust for the OIDC provider is derived from the provider certificate
        and is validated by the thumbprint. Therefore, it is best to limit access
        to the <code>UpdateOpenIDConnectProviderThumbprint</code> operation to highly
        privileged users.</p> </note>
      operationId: POST_UpdateOpenIDConnectProviderThumbprint
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateOpenIDConnectProviderThumbprintRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UpdateOpenIDConnectProviderThumbprint
  /?Action=UpdateRole&Version=2010-05-08:
    get:
      description: Updates the description or maximum session duration setting of
        a role.
      operationId: GET_UpdateRole
      parameters:
      - description: The name of the role that you want to modify.
        in: query
        name: RoleName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: The new description that you want to apply to the specified role.
        in: query
        name: Description
        required: false
        schema:
          maxLength: 1000
          pattern: '[\p{L}\p{M}\p{Z}\p{S}\p{N}\p{P}]*'
          type: string
      - description: <p>The maximum session duration (in seconds) that you want to
          set for the specified role. If you do not specify a value for this setting,
          the default maximum of one hour is applied. This setting can have a value
          from 1 hour to 12 hours.</p> <p>Anyone who assumes the role from the CLI
          or API can use the <code>DurationSeconds</code> API parameter or the <code>duration-seconds</code>
          CLI parameter to request a longer session. The <code>MaxSessionDuration</code>
          setting determines the maximum duration that can be requested using the
          <code>DurationSeconds</code> parameter. If users don't specify a value for
          the <code>DurationSeconds</code> parameter, their security credentials are
          valid for one hour by default. This applies when you use the <code>AssumeRole*</code>
          API operations or the <code>assume-role*</code> CLI operations but does
          not apply when you use those operations to create a console URL. For more
          information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html">Using
          IAM roles</a> in the <i>IAM User Guide</i>.</p>
        in: query
        name: MaxSessionDuration
        required: false
        schema:
          maximum: 43200
          minimum: 3600
          type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UpdateRoleResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnmodifiableEntityException'
          description: UnmodifiableEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UpdateRole
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: Updates the description or maximum session duration setting of
        a role.
      operationId: POST_UpdateRole
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateRoleRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UpdateRoleResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnmodifiableEntityException'
          description: UnmodifiableEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UpdateRole
  /?Action=UpdateRoleDescription&Version=2010-05-08:
    get:
      description: <p>Use <a>UpdateRole</a> instead.</p> <p>Modifies only the description
        of a role. This operation performs the same function as the <code>Description</code>
        parameter in the <code>UpdateRole</code> operation.</p>
      operationId: GET_UpdateRoleDescription
      parameters:
      - description: The name of the role that you want to modify.
        in: query
        name: RoleName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: The new description that you want to apply to the specified role.
        in: query
        name: Description
        required: true
        schema:
          maxLength: 1000
          pattern: '[\p{L}\p{M}\p{Z}\p{S}\p{N}\p{P}]*'
          type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UpdateRoleDescriptionResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnmodifiableEntityException'
          description: UnmodifiableEntityException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UpdateRoleDescription
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Use <a>UpdateRole</a> instead.</p> <p>Modifies only the description
        of a role. This operation performs the same function as the <code>Description</code>
        parameter in the <code>UpdateRole</code> operation.</p>
      operationId: POST_UpdateRoleDescription
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateRoleDescriptionRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UpdateRoleDescriptionResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnmodifiableEntityException'
          description: UnmodifiableEntityException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UpdateRoleDescription
  /?Action=UpdateSAMLProvider&Version=2010-05-08:
    get:
      description: <p>Updates the metadata document for an existing SAML provider
        resource object.</p> <note> <p>This operation requires <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature
        Version 4</a>.</p> </note>
      operationId: GET_UpdateSAMLProvider
      parameters:
      - description: An XML document generated by an identity provider (IdP) that
          supports SAML 2.0. The document includes the issuer's name, expiration information,
          and keys that can be used to validate the SAML authentication response (assertions)
          that are received from the IdP. You must generate the metadata document
          using the identity management software that is used as your organization's
          IdP.
        in: query
        name: SAMLMetadataDocument
        required: true
        schema:
          maxLength: 10000000
          minLength: 1000
          type: string
      - description: <p>The Amazon Resource Name (ARN) of the SAML provider to update.</p>
          <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
          Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        in: query
        name: SAMLProviderArn
        required: true
        schema:
          description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers
            for Amazon Web Services resources.</p> <p>For more information about ARNs,
            go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
            </p>
          maxLength: 2048
          minLength: 20
          type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UpdateSAMLProviderResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UpdateSAMLProvider
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Updates the metadata document for an existing SAML provider
        resource object.</p> <note> <p>This operation requires <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature
        Version 4</a>.</p> </note>
      operationId: POST_UpdateSAMLProvider
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateSAMLProviderRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UpdateSAMLProviderResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UpdateSAMLProvider
  /?Action=UpdateSSHPublicKey&Version=2010-05-08:
    get:
      description: <p>Sets the status of an IAM user's SSH public key to active or
        inactive. SSH public keys that are inactive cannot be used for authentication.
        This operation can be used to disable a user's SSH public key as part of a
        key rotation work flow.</p> <p>The SSH public key affected by this operation
        is used only for authenticating the associated IAM user to an CodeCommit repository.
        For more information about using SSH keys to authenticate to an CodeCommit
        repository, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-credentials-ssh.html">Set
        up CodeCommit for SSH connections</a> in the <i>CodeCommit User Guide</i>.</p>
      operationId: GET_UpdateSSHPublicKey
      parameters:
      - description: '<p>The name of the IAM user associated with the SSH public key.</p>
          <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: UserName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: <p>The unique identifier for the SSH public key.</p> <p>This
          parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters that can consist of any upper or lowercased
          letter or digit.</p>
        in: query
        name: SSHPublicKeyId
        required: true
        schema:
          maxLength: 128
          minLength: 20
          pattern: '[\w]+'
          type: string
      - description: The status to assign to the SSH public key. <code>Active</code>
          means that the key can be used for authentication with an CodeCommit repository.
          <code>Inactive</code> means that the key cannot be used.
        in: query
        name: Status
        required: true
        schema:
          enum:
          - Active
          - Inactive
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
      x-aws-operation-name: UpdateSSHPublicKey
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Sets the status of an IAM user's SSH public key to active or
        inactive. SSH public keys that are inactive cannot be used for authentication.
        This operation can be used to disable a user's SSH public key as part of a
        key rotation work flow.</p> <p>The SSH public key affected by this operation
        is used only for authenticating the associated IAM user to an CodeCommit repository.
        For more information about using SSH keys to authenticate to an CodeCommit
        repository, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-credentials-ssh.html">Set
        up CodeCommit for SSH connections</a> in the <i>CodeCommit User Guide</i>.</p>
      operationId: POST_UpdateSSHPublicKey
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateSSHPublicKeyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
      x-aws-operation-name: UpdateSSHPublicKey
  /?Action=UpdateServerCertificate&Version=2010-05-08:
    get:
      description: <p>Updates the name and/or the path of the specified server certificate
        stored in IAM.</p> <p>For more information about working with server certificates,
        see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html">Working
        with server certificates</a> in the <i>IAM User Guide</i>. This topic also
        includes a list of Amazon Web Services services that can use the server certificates
        that you manage with IAM.</p> <important> <p>You should understand the implications
        of changing a server certificate's path or name. For more information, see
        <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs_manage.html#RenamingServerCerts">Renaming
        a server certificate</a> in the <i>IAM User Guide</i>.</p> </important> <note>
        <p>The person making the request (the principal), must have permission to
        change the server certificate with the old name and the new name. For example,
        to change the certificate named <code>ProductionCert</code> to <code>ProdCert</code>,
        the principal must have a policy that allows them to update both certificates.
        If the principal has permission to update the <code>ProductionCert</code>
        group, but not the <code>ProdCert</code> certificate, then the update fails.
        For more information about permissions, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access.html">Access
        management</a> in the <i>IAM User Guide</i>.</p> </note>
      operationId: GET_UpdateServerCertificate
      parameters:
      - description: '<p>The name of the server certificate that you want to update.</p>
          <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: ServerCertificateName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: <p>The new path for the server certificate. Include this only
          if you are updating the server certificate's path.</p> <p>This parameter
          allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters consisting of either a forward slash (/) by itself
          or a string that must begin and end with forward slashes. In addition, it
          can contain any ASCII character from the ! (<code>\u0021</code>) through
          the DEL character (<code>\u007F</code>), including most punctuation characters,
          digits, and upper and lowercased letters.</p>
        in: query
        name: NewPath
        required: false
        schema:
          maxLength: 512
          minLength: 1
          pattern: (\u002F)|(\u002F[\u0021-\u007F]+\u002F)
          type: string
      - description: '<p>The new name for the server certificate. Include this only
          if you are updating the server certificate''s name. The name of the certificate
          cannot contain any spaces.</p> <p>This parameter allows (through its <a
          href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters
          consisting of upper and lowercase alphanumeric characters with no spaces.
          You can also include any of the following characters: _+=,.@-</p>'
        in: query
        name: NewServerCertificateName
        required: false
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
          description: EntityAlreadyExistsException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UpdateServerCertificate
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Updates the name and/or the path of the specified server certificate
        stored in IAM.</p> <p>For more information about working with server certificates,
        see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html">Working
        with server certificates</a> in the <i>IAM User Guide</i>. This topic also
        includes a list of Amazon Web Services services that can use the server certificates
        that you manage with IAM.</p> <important> <p>You should understand the implications
        of changing a server certificate's path or name. For more information, see
        <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs_manage.html#RenamingServerCerts">Renaming
        a server certificate</a> in the <i>IAM User Guide</i>.</p> </important> <note>
        <p>The person making the request (the principal), must have permission to
        change the server certificate with the old name and the new name. For example,
        to change the certificate named <code>ProductionCert</code> to <code>ProdCert</code>,
        the principal must have a policy that allows them to update both certificates.
        If the principal has permission to update the <code>ProductionCert</code>
        group, but not the <code>ProdCert</code> certificate, then the update fails.
        For more information about permissions, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access.html">Access
        management</a> in the <i>IAM User Guide</i>.</p> </note>
      operationId: POST_UpdateServerCertificate
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateServerCertificateRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
          description: EntityAlreadyExistsException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UpdateServerCertificate
  /?Action=UpdateServiceSpecificCredential&Version=2010-05-08:
    get:
      description: Sets the status of a service-specific credential to <code>Active</code>
        or <code>Inactive</code>. Service-specific credentials that are inactive cannot
        be used for authentication to the service. This operation can be used to disable
        a user's service-specific credential as part of a credential rotation work
        flow.
      operationId: GET_UpdateServiceSpecificCredential
      parameters:
      - description: '<p>The name of the IAM user associated with the service-specific
          credential. If you do not specify this value, then the operation assumes
          the user whose credentials are used to call the operation.</p> <p>This parameter
          allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters consisting of upper and lowercase alphanumeric characters
          with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        in: query
        name: UserName
        required: false
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: <p>The unique identifier of the service-specific credential.</p>
          <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters that can consist of any upper or lowercased
          letter or digit.</p>
        in: query
        name: ServiceSpecificCredentialId
        required: true
        schema:
          maxLength: 128
          minLength: 20
          pattern: '[\w]+'
          type: string
      - description: The status to be assigned to the service-specific credential.
        in: query
        name: Status
        required: true
        schema:
          enum:
          - Active
          - Inactive
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
      x-aws-operation-name: UpdateServiceSpecificCredential
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: Sets the status of a service-specific credential to <code>Active</code>
        or <code>Inactive</code>. Service-specific credentials that are inactive cannot
        be used for authentication to the service. This operation can be used to disable
        a user's service-specific credential as part of a credential rotation work
        flow.
      operationId: POST_UpdateServiceSpecificCredential
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateServiceSpecificCredentialRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
      x-aws-operation-name: UpdateServiceSpecificCredential
  /?Action=UpdateSigningCertificate&Version=2010-05-08:
    get:
      description: <p>Changes the status of the specified user signing certificate
        from active to disabled, or vice versa. This operation can be used to disable
        an IAM user's signing certificate as part of a certificate rotation work flow.</p>
        <p>If the <code>UserName</code> field is not specified, the user name is determined
        implicitly based on the Amazon Web Services access key ID used to sign the
        request. This operation works for access keys under the Amazon Web Services
        account. Consequently, you can use this operation to manage Amazon Web Services
        account root user credentials even if the Amazon Web Services account has
        no associated users.</p>
      operationId: GET_UpdateSigningCertificate
      parameters:
      - description: '<p>The name of the IAM user the signing certificate belongs
          to.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: UserName
        required: false
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: <p>The ID of the signing certificate you want to update.</p>
          <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters that can consist of any upper or lowercased
          letter or digit.</p>
        in: query
        name: CertificateId
        required: true
        schema:
          maxLength: 128
          minLength: 24
          pattern: '[\w]+'
          type: string
      - description: ' The status you want to assign to the certificate. <code>Active</code>
          means that the certificate can be used for programmatic calls to Amazon
          Web Services <code>Inactive</code> means that the certificate cannot be
          used.'
        in: query
        name: Status
        required: true
        schema:
          enum:
          - Active
          - Inactive
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UpdateSigningCertificate
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Changes the status of the specified user signing certificate
        from active to disabled, or vice versa. This operation can be used to disable
        an IAM user's signing certificate as part of a certificate rotation work flow.</p>
        <p>If the <code>UserName</code> field is not specified, the user name is determined
        implicitly based on the Amazon Web Services access key ID used to sign the
        request. This operation works for access keys under the Amazon Web Services
        account. Consequently, you can use this operation to manage Amazon Web Services
        account root user credentials even if the Amazon Web Services account has
        no associated users.</p>
      operationId: POST_UpdateSigningCertificate
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateSigningCertificateRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UpdateSigningCertificate
  /?Action=UpdateUser&Version=2010-05-08:
    get:
      description: <p>Updates the name and/or the path of the specified IAM user.</p>
        <important> <p> You should understand the implications of changing an IAM
        user's path or name. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users_manage.html#id_users_renaming">Renaming
        an IAM user</a> and <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_groups_manage_rename.html">Renaming
        an IAM group</a> in the <i>IAM User Guide</i>.</p> </important> <note> <p>
        To change a user name, the requester must have appropriate permissions on
        both the source object and the target object. For example, to change Bob to
        Robert, the entity making the request must have permission on Bob and Robert,
        or must have permission on all (*). For more information about permissions,
        see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/PermissionsAndPolicies.html">Permissions
        and policies</a>. </p> </note>
      operationId: GET_UpdateUser
      parameters:
      - description: '<p>Name of the user to update. If you''re changing the name
          of the user, this is the original user name.</p> <p>This parameter allows
          (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters consisting of upper and lowercase alphanumeric characters
          with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        in: query
        name: UserName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: <p>New path for the IAM user. Include this parameter only if
          you're changing the user's path.</p> <p>This parameter allows (through its
          <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of
          characters consisting of either a forward slash (/) by itself or a string
          that must begin and end with forward slashes. In addition, it can contain
          any ASCII character from the ! (<code>\u0021</code>) through the DEL character
          (<code>\u007F</code>), including most punctuation characters, digits, and
          upper and lowercased letters.</p>
        in: query
        name: NewPath
        required: false
        schema:
          maxLength: 512
          minLength: 1
          pattern: (\u002F)|(\u002F[\u0021-\u007F]+\u002F)
          type: string
      - description: <p>New name for the user. Include this parameter only if you're
          changing the user's name.</p> <p>IAM user, group, role, and policy names
          must be unique within the account. Names are not distinguished by case.
          For example, you cannot create resources named both "MyResource" and "myresource".</p>
        in: query
        name: NewUserName
        required: false
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
          description: EntityAlreadyExistsException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityTemporarilyUnmodifiableException'
          description: EntityTemporarilyUnmodifiableException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '485':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UpdateUser
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Updates the name and/or the path of the specified IAM user.</p>
        <important> <p> You should understand the implications of changing an IAM
        user's path or name. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users_manage.html#id_users_renaming">Renaming
        an IAM user</a> and <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_groups_manage_rename.html">Renaming
        an IAM group</a> in the <i>IAM User Guide</i>.</p> </important> <note> <p>
        To change a user name, the requester must have appropriate permissions on
        both the source object and the target object. For example, to change Bob to
        Robert, the entity making the request must have permission on Bob and Robert,
        or must have permission on all (*). For more information about permissions,
        see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/PermissionsAndPolicies.html">Permissions
        and policies</a>. </p> </note>
      operationId: POST_UpdateUser
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
          description: EntityAlreadyExistsException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityTemporarilyUnmodifiableException'
          description: EntityTemporarilyUnmodifiableException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '485':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UpdateUser
  /?Action=UploadSSHPublicKey&Version=2010-05-08:
    get:
      description: <p>Uploads an SSH public key and associates it with the specified
        IAM user.</p> <p>The SSH public key uploaded by this operation can be used
        only for authenticating the associated IAM user to an CodeCommit repository.
        For more information about using SSH keys to authenticate to an CodeCommit
        repository, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-credentials-ssh.html">Set
        up CodeCommit for SSH connections</a> in the <i>CodeCommit User Guide</i>.</p>
      operationId: GET_UploadSSHPublicKey
      parameters:
      - description: '<p>The name of the IAM user to associate the SSH public key
          with.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: UserName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: <p>The SSH public key. The public key must be encoded in ssh-rsa
          format or PEM format. The minimum bit-length of the public key is 2048 bits.
          For example, you can generate a 2048-bit key, and the resulting PEM file
          is 1679 bytes long.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> used to validate this parameter is a string of characters consisting
          of the following:</p> <ul> <li> <p>Any printable ASCII character ranging
          from the space character (<code>\u0020</code>) through the end of the ASCII
          character range</p> </li> <li> <p>The printable characters in the Basic
          Latin and Latin-1 Supplement character set (through <code>\u00FF</code>)</p>
          </li> <li> <p>The special characters tab (<code>\u0009</code>), line feed
          (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p> </li>
          </ul>
        in: query
        name: SSHPublicKeyBody
        required: true
        schema:
          maxLength: 16384
          minLength: 1
          pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
          type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UploadSSHPublicKeyResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidPublicKeyException'
          description: InvalidPublicKeyException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DuplicateSSHPublicKeyException'
          description: DuplicateSSHPublicKeyException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnrecognizedPublicKeyEncodingException'
          description: UnrecognizedPublicKeyEncodingException
      x-aws-operation-name: UploadSSHPublicKey
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Uploads an SSH public key and associates it with the specified
        IAM user.</p> <p>The SSH public key uploaded by this operation can be used
        only for authenticating the associated IAM user to an CodeCommit repository.
        For more information about using SSH keys to authenticate to an CodeCommit
        repository, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-credentials-ssh.html">Set
        up CodeCommit for SSH connections</a> in the <i>CodeCommit User Guide</i>.</p>
      operationId: POST_UploadSSHPublicKey
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UploadSSHPublicKeyRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UploadSSHPublicKeyResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidPublicKeyException'
          description: InvalidPublicKeyException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DuplicateSSHPublicKeyException'
          description: DuplicateSSHPublicKeyException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnrecognizedPublicKeyEncodingException'
          description: UnrecognizedPublicKeyEncodingException
      x-aws-operation-name: UploadSSHPublicKey
  /?Action=UploadServerCertificate&Version=2010-05-08:
    get:
      description: <p>Uploads a server certificate entity for the Amazon Web Services
        account. The server certificate entity includes a public key certificate,
        a private key, and an optional certificate chain, which should all be PEM-encoded.</p>
        <p>We recommend that you use <a href="https://docs.aws.amazon.com/acm/">Certificate
        Manager</a> to provision, manage, and deploy your server certificates. With
        ACM you can request a certificate, deploy it to Amazon Web Services resources,
        and let ACM handle certificate renewals for you. Certificates provided by
        ACM are free. For more information about using ACM, see the <a href="https://docs.aws.amazon.com/acm/latest/userguide/">Certificate
        Manager User Guide</a>.</p> <p>For more information about working with server
        certificates, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html">Working
        with server certificates</a> in the <i>IAM User Guide</i>. This topic includes
        a list of Amazon Web Services services that can use the server certificates
        that you manage with IAM.</p> <p>For information about the number of server
        certificates you can upload, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html">IAM
        and STS quotas</a> in the <i>IAM User Guide</i>.</p> <note> <p>Because the
        body of the public key certificate, private key, and the certificate chain
        can be large, you should use POST rather than GET when calling <code>UploadServerCertificate</code>.
        For information about setting up signatures and authorization through the
        API, see <a href="https://docs.aws.amazon.com/general/latest/gr/signing_aws_api_requests.html">Signing
        Amazon Web Services API requests</a> in the <i>Amazon Web Services General
        Reference</i>. For general information about using the Query API with IAM,
        see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/programming.html">Calling
        the API by making HTTP query requests</a> in the <i>IAM User Guide</i>.</p>
        </note>
      operationId: GET_UploadServerCertificate
      parameters:
      - description: <p>The path for the server certificate. For more information
          about paths, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
          identifiers</a> in the <i>IAM User Guide</i>.</p> <p>This parameter is optional.
          If it is not included, it defaults to a slash (/). This parameter allows
          (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters consisting of either a forward slash (/) by itself
          or a string that must begin and end with forward slashes. In addition, it
          can contain any ASCII character from the ! (<code>\u0021</code>) through
          the DEL character (<code>\u007F</code>), including most punctuation characters,
          digits, and upper and lowercased letters.</p> <note> <p> If you are uploading
          a server certificate specifically for use with Amazon CloudFront distributions,
          you must specify a path using the <code>path</code> parameter. The path
          must begin with <code>/cloudfront</code> and must include a trailing slash
          (for example, <code>/cloudfront/test/</code>).</p> </note>
        in: query
        name: Path
        required: false
        schema:
          maxLength: 512
          minLength: 1
          pattern: (\u002F)|(\u002F[\u0021-\u007F]+\u002F)
          type: string
      - description: '<p>The name for the server certificate. Do not include the path
          in this value. The name of the certificate cannot contain any spaces.</p>
          <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: ServerCertificateName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: <p>The contents of the public key certificate in PEM-encoded
          format.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a>
          used to validate this parameter is a string of characters consisting of
          the following:</p> <ul> <li> <p>Any printable ASCII character ranging from
          the space character (<code>\u0020</code>) through the end of the ASCII character
          range</p> </li> <li> <p>The printable characters in the Basic Latin and
          Latin-1 Supplement character set (through <code>\u00FF</code>)</p> </li>
          <li> <p>The special characters tab (<code>\u0009</code>), line feed (<code>\u000A</code>),
          and carriage return (<code>\u000D</code>)</p> </li> </ul>
        in: query
        name: CertificateBody
        required: true
        schema:
          maxLength: 16384
          minLength: 1
          pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
          type: string
      - description: <p>The contents of the private key in PEM-encoded format.</p>
          <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used
          to validate this parameter is a string of characters consisting of the following:</p>
          <ul> <li> <p>Any printable ASCII character ranging from the space character
          (<code>\u0020</code>) through the end of the ASCII character range</p> </li>
          <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement
          character set (through <code>\u00FF</code>)</p> </li> <li> <p>The special
          characters tab (<code>\u0009</code>), line feed (<code>\u000A</code>), and
          carriage return (<code>\u000D</code>)</p> </li> </ul>
        in: query
        name: PrivateKey
        required: true
        schema:
          format: password
          maxLength: 16384
          minLength: 1
          pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
          type: string
      - description: <p>The contents of the certificate chain. This is typically a
          concatenation of the PEM-encoded public key certificates of the chain.</p>
          <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used
          to validate this parameter is a string of characters consisting of the following:</p>
          <ul> <li> <p>Any printable ASCII character ranging from the space character
          (<code>\u0020</code>) through the end of the ASCII character range</p> </li>
          <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement
          character set (through <code>\u00FF</code>)</p> </li> <li> <p>The special
          characters tab (<code>\u0009</code>), line feed (<code>\u000A</code>), and
          carriage return (<code>\u000D</code>)</p> </li> </ul>
        in: query
        name: CertificateChain
        required: false
        schema:
          maxLength: 2097152
          minLength: 1
          pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
          type: string
      - description: <p>A list of tags that you want to attach to the new IAM server
          certificate resource. Each tag consists of a key name and an associated
          value. For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
          IAM resources</a> in the <i>IAM User Guide</i>.</p> <note> <p>If any one
          of the tags is invalid or if you exceed the allowed maximum number of tags,
          then the entire request fails and the resource is not created.</p> </note>
        in: query
        name: Tags
        required: false
        schema:
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 50
          type: array
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UploadServerCertificateResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
          description: EntityAlreadyExistsException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MalformedCertificateException'
          description: MalformedCertificateException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/KeyPairMismatchException'
          description: KeyPairMismatchException
        '485':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '486':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UploadServerCertificate
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Uploads a server certificate entity for the Amazon Web Services
        account. The server certificate entity includes a public key certificate,
        a private key, and an optional certificate chain, which should all be PEM-encoded.</p>
        <p>We recommend that you use <a href="https://docs.aws.amazon.com/acm/">Certificate
        Manager</a> to provision, manage, and deploy your server certificates. With
        ACM you can request a certificate, deploy it to Amazon Web Services resources,
        and let ACM handle certificate renewals for you. Certificates provided by
        ACM are free. For more information about using ACM, see the <a href="https://docs.aws.amazon.com/acm/latest/userguide/">Certificate
        Manager User Guide</a>.</p> <p>For more information about working with server
        certificates, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html">Working
        with server certificates</a> in the <i>IAM User Guide</i>. This topic includes
        a list of Amazon Web Services services that can use the server certificates
        that you manage with IAM.</p> <p>For information about the number of server
        certificates you can upload, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html">IAM
        and STS quotas</a> in the <i>IAM User Guide</i>.</p> <note> <p>Because the
        body of the public key certificate, private key, and the certificate chain
        can be large, you should use POST rather than GET when calling <code>UploadServerCertificate</code>.
        For information about setting up signatures and authorization through the
        API, see <a href="https://docs.aws.amazon.com/general/latest/gr/signing_aws_api_requests.html">Signing
        Amazon Web Services API requests</a> in the <i>Amazon Web Services General
        Reference</i>. For general information about using the Query API with IAM,
        see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/programming.html">Calling
        the API by making HTTP query requests</a> in the <i>IAM User Guide</i>.</p>
        </note>
      operationId: POST_UploadServerCertificate
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UploadServerCertificateRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UploadServerCertificateResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
          description: EntityAlreadyExistsException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MalformedCertificateException'
          description: MalformedCertificateException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/KeyPairMismatchException'
          description: KeyPairMismatchException
        '485':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '486':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UploadServerCertificate
  /?Action=UploadSigningCertificate&Version=2010-05-08:
    get:
      description: <p>Uploads an X.509 signing certificate and associates it with
        the specified IAM user. Some Amazon Web Services services require you to use
        certificates to validate requests that are signed with a corresponding private
        key. When you upload the certificate, its default status is <code>Active</code>.</p>
        <p>For information about when you would use an X.509 signing certificate,
        see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html">Managing
        server certificates in IAM</a> in the <i>IAM User Guide</i>.</p> <p>If the
        <code>UserName</code> is not specified, the IAM user name is determined implicitly
        based on the Amazon Web Services access key ID used to sign the request. This
        operation works for access keys under the Amazon Web Services account. Consequently,
        you can use this operation to manage Amazon Web Services account root user
        credentials even if the Amazon Web Services account has no associated users.</p>
        <note> <p>Because the body of an X.509 certificate can be large, you should
        use POST rather than GET when calling <code>UploadSigningCertificate</code>.
        For information about setting up signatures and authorization through the
        API, see <a href="https://docs.aws.amazon.com/general/latest/gr/signing_aws_api_requests.html">Signing
        Amazon Web Services API requests</a> in the <i>Amazon Web Services General
        Reference</i>. For general information about using the Query API with IAM,
        see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html">Making
        query requests</a> in the <i>IAM User Guide</i>.</p> </note>
      operationId: GET_UploadSigningCertificate
      parameters:
      - description: '<p>The name of the user the signing certificate is for.</p>
          <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: UserName
        required: false
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: <p>The contents of the signing certificate.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a> used to validate this parameter is a string of characters consisting
          of the following:</p> <ul> <li> <p>Any printable ASCII character ranging
          from the space character (<code>\u0020</code>) through the end of the ASCII
          character range</p> </li> <li> <p>The printable characters in the Basic
          Latin and Latin-1 Supplement character set (through <code>\u00FF</code>)</p>
          </li> <li> <p>The special characters tab (<code>\u0009</code>), line feed
          (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p> </li>
          </ul>
        in: query
        name: CertificateBody
        required: true
        schema:
          maxLength: 16384
          minLength: 1
          pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
          type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UploadSigningCertificateResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
          description: EntityAlreadyExistsException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MalformedCertificateException'
          description: MalformedCertificateException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCertificateException'
          description: InvalidCertificateException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DuplicateCertificateException'
          description: DuplicateCertificateException
        '485':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '486':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UploadSigningCertificate
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Uploads an X.509 signing certificate and associates it with
        the specified IAM user. Some Amazon Web Services services require you to use
        certificates to validate requests that are signed with a corresponding private
        key. When you upload the certificate, its default status is <code>Active</code>.</p>
        <p>For information about when you would use an X.509 signing certificate,
        see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html">Managing
        server certificates in IAM</a> in the <i>IAM User Guide</i>.</p> <p>If the
        <code>UserName</code> is not specified, the IAM user name is determined implicitly
        based on the Amazon Web Services access key ID used to sign the request. This
        operation works for access keys under the Amazon Web Services account. Consequently,
        you can use this operation to manage Amazon Web Services account root user
        credentials even if the Amazon Web Services account has no associated users.</p>
        <note> <p>Because the body of an X.509 certificate can be large, you should
        use POST rather than GET when calling <code>UploadSigningCertificate</code>.
        For information about setting up signatures and authorization through the
        API, see <a href="https://docs.aws.amazon.com/general/latest/gr/signing_aws_api_requests.html">Signing
        Amazon Web Services API requests</a> in the <i>Amazon Web Services General
        Reference</i>. For general information about using the Query API with IAM,
        see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html">Making
        query requests</a> in the <i>IAM User Guide</i>.</p> </note>
      operationId: POST_UploadSigningCertificate
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UploadSigningCertificateRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UploadSigningCertificateResponse'
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
          description: EntityAlreadyExistsException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MalformedCertificateException'
          description: MalformedCertificateException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCertificateException'
          description: InvalidCertificateException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DuplicateCertificateException'
          description: DuplicateCertificateException
        '485':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '486':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UploadSigningCertificate
security:
- hmac: []
servers:
- description: The general IAM multi-region endpoint
  url: https://iam.amazonaws.com
  variables:
    region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
