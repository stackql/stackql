openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Dev Center
  description: Microsoft Dev Box is a service that enables you to provide preconfigured cloud-based workstations to your users through dev centers. Developers, testers, QA professionals, and others who need to get productive quickly on new projects can self-serve multiple dev boxes customized for their workloads.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-06-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    PoolNameParameter:
      name: poolName
      in: path
      description: Name of the pool.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$
        minLength: 3
        maxLength: 63
        type: string
    NetworkConnectionName:
      name: networkConnectionName
      in: path
      description: Name of the Network Connection that can be applied to a Pool.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$
        minLength: 3
        maxLength: 63
        type: string
    ScheduleNameParameter:
      name: scheduleName
      in: path
      description: The name of the schedule that uniquely identifies it.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 100
        pattern: ^[-\w]+$
        type: string
    FilterParameter:
      name: $filter
      in: query
      description: 'The filter to apply to the operation. Example: ''$filter=contains(name,''myName'').'
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    PlanNameParameter:
      name: planName
      in: path
      description: The name of the devcenter plan.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]{2,62}$
        minLength: 3
        maxLength: 63
        type: string
    PlanMemberNameParameter:
      name: memberName
      in: path
      description: The name of a devcenter plan member.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]{2,62}$
        minLength: 3
        maxLength: 63
        type: string
    DevCenterNameParameter:
      name: devCenterName
      in: path
      description: The name of the devcenter.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]{2,25}$
        minLength: 3
        maxLength: 26
        type: string
    DevCenterEncryptionSetNameParameter:
      name: encryptionSetName
      in: path
      description: The name of the devcenter encryption set.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]{2,25}$
        minLength: 3
        maxLength: 63
        type: string
    ProjectNameParameter:
      name: projectName
      in: path
      description: The name of the project.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$
        minLength: 3
        maxLength: 63
        type: string
    CatalogNameParameter:
      name: catalogName
      in: path
      description: The name of the Catalog.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$
        minLength: 3
        maxLength: 63
        type: string
    GalleryNameParameter:
      name: galleryName
      in: path
      description: The name of the gallery.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$
        minLength: 3
        maxLength: 63
        type: string
    ImageNameParameter:
      name: imageName
      in: path
      description: The name of the image.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9][a-zA-Z0-9-.]{0,78}[a-zA-Z0-9]$
        minLength: 3
        maxLength: 80
        type: string
    VersionNameParameter:
      name: versionName
      in: path
      description: The version of the image.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[0-9]{1,10}[.][0-9]{1,10}[.][0-9]{1,10}$
        minLength: 5
        maxLength: 32
        type: string
    EnvironmentTypeNameParameter:
      name: environmentTypeName
      in: path
      description: The name of the environment type.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$
        minLength: 3
        maxLength: 63
        type: string
    AttachedNetworkConnectionNameParameter:
      name: attachedNetworkConnectionName
      in: path
      description: The name of the attached NetworkConnection.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$
        minLength: 3
        maxLength: 63
        type: string
    DevBoxDefinitionName:
      name: devBoxDefinitionName
      in: path
      description: The name of the Dev Box definition.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$
        minLength: 3
        maxLength: 63
        type: string
    CustomizationTaskNameParameter:
      name: taskName
      in: path
      description: The name of the Task.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$
        minLength: 3
        maxLength: 63
        type: string
    EnvironmentDefinitionNameParameter:
      name: environmentDefinitionName
      in: path
      description: The name of the Environment Definition.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$
        minLength: 3
        maxLength: 63
        type: string
    TopParameter:
      name: $top
      in: query
      description: 'The maximum number of resources to return from the operation. Example: ''$top=10''.'
      required: false
      x-ms-parameter-location: method
      schema:
        format: int32
        type: integer
  schemas:
    SkuListResult:
      description: Results of the Microsoft.DevCenter SKU list operation.
      type: object
      properties:
        value:
          description: Current page of results.
          type: array
          items:
            $ref: '#/components/schemas/DevCenterSku'
          x-ms-identifiers: []
          readOnly: true
        nextLink:
          description: URL to get the next set of results if there are any.
          type: string
          readOnly: true
    Pool:
      description: A pool of Virtual Machines.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          description: Pool properties
          x-ms-client-flatten: true
          $ref: '#/components/schemas/PoolProperties'
      type: object
    PoolUpdateProperties:
      description: Properties of a Pool. These properties can be updated after the resource has been created.
      type: object
      properties:
        devBoxDefinitionName:
          description: Name of a Dev Box definition in parent Project of this Pool
          type: string
        networkConnectionName:
          description: Name of a Network Connection in parent Project of this Pool
          type: string
        licenseType:
          description: Specifies the license type indicating the caller has already acquired licenses for the Dev Boxes that will be created.
          $ref: '#/components/schemas/LicenseType'
        localAdministrator:
          description: Indicates whether owners of Dev Boxes in this pool are added as local administrators on the Dev Box.
          $ref: '#/components/schemas/LocalAdminStatus'
        stopOnDisconnect:
          description: Stop on disconnect configuration settings for Dev Boxes created in this pool.
          $ref: '#/components/schemas/StopOnDisconnectConfiguration'
        singleSignOnStatus:
          description: Indicates whether Dev Boxes in this pool are created with single sign on enabled. The also requires that single sign on be enabled on the tenant.
          $ref: '#/components/schemas/SingleSignOnStatus'
        displayName:
          type: string
          description: The display name of the pool.
        virtualNetworkType:
          description: Indicates whether the pool uses a Virtual Network managed by Microsoft or a customer provided network.
          $ref: '#/components/schemas/VirtualNetworkType'
        managedVirtualNetworkRegions:
          type: array
          description: The regions of the managed virtual network (required when managedNetworkType is Managed).
          items:
            type: string
    PoolProperties:
      description: Properties of a Pool
      required:
        - devBoxDefinitionName
        - networkConnectionName
        - licenseType
        - localAdministrator
      properties:
        devBoxDefinitionName:
          description: Name of a Dev Box definition in parent Project of this Pool
          type: string
        networkConnectionName:
          description: Name of a Network Connection in parent Project of this Pool
          type: string
        licenseType:
          description: Specifies the license type indicating the caller has already acquired licenses for the Dev Boxes that will be created.
          $ref: '#/components/schemas/LicenseType'
        localAdministrator:
          description: Indicates whether owners of Dev Boxes in this pool are added as local administrators on the Dev Box.
          $ref: '#/components/schemas/LocalAdminStatus'
        stopOnDisconnect:
          description: Stop on disconnect configuration settings for Dev Boxes created in this pool.
          $ref: '#/components/schemas/StopOnDisconnectConfiguration'
        singleSignOnStatus:
          description: Indicates whether Dev Boxes in this pool are created with single sign on enabled. The also requires that single sign on be enabled on the tenant.
          $ref: '#/components/schemas/SingleSignOnStatus'
        displayName:
          type: string
          description: The display name of the pool.
        virtualNetworkType:
          description: Indicates whether the pool uses a Virtual Network managed by Microsoft or a customer provided network.
          $ref: '#/components/schemas/VirtualNetworkType'
        managedVirtualNetworkRegions:
          type: array
          description: The regions of the managed virtual network (required when managedNetworkType is Managed).
          items:
            type: string
        healthStatus:
          description: Overall health status of the Pool. Indicates whether or not the Pool is available to create Dev Boxes.
          $ref: '#/components/schemas/HealthStatus'
          readOnly: true
        healthStatusDetails:
          description: Details on the Pool health status to help diagnose issues. This is only populated when the pool status indicates the pool is in a non-healthy state
          type: array
          items:
            $ref: '#/components/schemas/HealthStatusDetail'
          x-ms-identifiers:
            - code
          readOnly: true
        devBoxCount:
          description: Indicates the number of provisioned Dev Boxes in this pool.
          type: integer
          format: int32
          readOnly: true
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
      type: object
    HealthStatus:
      description: Health status indicating whether a pool is available to create Dev Boxes.
      enum:
        - Unknown
        - Pending
        - Healthy
        - Warning
        - Unhealthy
      type: string
      x-ms-enum:
        name: HealthStatus
        modelAsString: true
    HealthStatusDetail:
      type: object
      description: Pool health status detail.
      properties:
        code:
          type: string
          description: An identifier for the issue.
          readOnly: true
        message:
          type: string
          description: A message describing the issue, intended to be suitable for display in a user interface
          readOnly: true
    LicenseType:
      description: License Types
      enum:
        - Windows_Client
      type: string
      x-ms-enum:
        name: LicenseType
        modelAsString: true
    LocalAdminStatus:
      description: Local Administrator enable or disable status. Indicates whether owners of Dev Boxes are added as local administrators on the Dev Box.
      type: string
      enum:
        - Disabled
        - Enabled
      x-ms-enum:
        name: LocalAdminStatus
        modelAsString: true
    SingleSignOnStatus:
      description: SingleSignOn (SSO) enable or disable status. Indicates whether Dev Boxes in the Pool will have SSO enabled or disabled.
      type: string
      enum:
        - Disabled
        - Enabled
      x-ms-enum:
        name: SingleSignOnStatus
        modelAsString: true
    VirtualNetworkType:
      description: Indicates a pool uses a Virtual Network managed by Microsoft (Managed), or a customer provided Network (Unmanaged).
      type: string
      enum:
        - Managed
        - Unmanaged
      x-ms-enum:
        name: VirtualNetworkType
        modelAsString: true
    StopOnDisconnectConfiguration:
      type: object
      description: Stop on disconnect configuration settings for Dev Boxes created in this pool.
      properties:
        status:
          description: Whether the feature to stop the Dev Box on disconnect once the grace period has lapsed is enabled.
          $ref: '#/components/schemas/StopOnDisconnectEnableStatus'
        gracePeriodMinutes:
          description: The specified time in minutes to wait before stopping a Dev Box once disconnect is detected.
          type: integer
          format: int32
    StopOnDisconnectEnableStatus:
      description: Stop on disconnect enable or disable status. Indicates whether stop on disconnect to is either enabled or disabled.
      enum:
        - Enabled
        - Disabled
      type: string
      x-ms-enum:
        name: StopOnDisconnectEnableStatus
        modelAsString: true
    PoolListResult:
      description: Results of the machine pool list operation.
      type: object
      properties:
        value:
          description: Current page of results.
          type: array
          items:
            $ref: '#/components/schemas/Pool'
          readOnly: true
        nextLink:
          description: URL to get the next set of results if there are any.
          type: string
          readOnly: true
    PoolUpdate:
      description: The pool properties for partial update. Properties not provided in the update request will not be changed.
      properties:
        tags:
          $ref: '#/components/schemas/Tags'
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/PoolUpdateProperties'
          description: Properties of a pool to be updated.
      type: object
    ImageReference:
      type: object
      description: Image reference information
      properties:
        id:
          description: Image ID, or Image version ID. When Image ID is provided, its latest version will be used.
          type: string
        exactVersion:
          type: string
          readOnly: true
          description: The actual version of the image after use. When id references a gallery image latest version, this will indicate the actual version in use.
    ImageValidationStatus:
      description: Image validation status
      enum:
        - Unknown
        - Pending
        - Succeeded
        - Failed
        - TimedOut
      type: string
      x-ms-enum:
        name: ImageValidationStatus
        modelAsString: true
    ImageValidationErrorDetails:
      type: object
      description: Image validation error details
      properties:
        code:
          type: string
          description: An identifier for the error.
        message:
          type: string
          description: A message describing the error.
    CatalogResourceValidationStatus:
      description: Catalog resource validation status
      enum:
        - Unknown
        - Pending
        - Succeeded
        - Failed
      type: string
      x-ms-enum:
        name: CatalogResourceValidationStatus
        modelAsString: true
    CatalogResourceValidationErrorDetails:
      type: object
      description: List of validator error details. Populated when changes are made to the resource or its dependent resources that impact the validity of the Catalog resource.
      properties:
        errors:
          description: Errors associated with resources synchronized from the catalog.
          type: array
          items:
            $ref: '#/components/schemas/CatalogErrorDetails'
          x-ms-identifiers: []
          readOnly: true
    CatalogErrorDetails:
      type: object
      description: Catalog error details
      properties:
        code:
          type: string
          description: An identifier for the error.
        message:
          type: string
          description: A message describing the error.
    NetworkConnection:
      description: Network related settings
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          description: Properties of a Network Connection
          x-ms-client-flatten: true
          $ref: '#/components/schemas/NetworkProperties'
      type: object
    NetworkConnectionUpdate:
      description: The network connection properties for partial update. Properties not provided in the update request will not be changed.
      properties:
        tags:
          $ref: '#/components/schemas/Tags'
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/NetworkConnectionUpdateProperties'
          description: Properties of a network connection resource to be updated.
      type: object
    NetworkConnectionUpdateProperties:
      description: Properties of network connection. These properties can be updated after the resource has been created.
      type: object
      properties:
        subnetId:
          description: The subnet to attach Virtual Machines to
          type: string
        domainName:
          description: Active Directory domain name
          type: string
        organizationUnit:
          description: Active Directory domain Organization Unit (OU)
          type: string
        domainUsername:
          description: 'The username of an Active Directory account (user or service account) that has permissions to create computer objects in Active Directory. Required format: admin@contoso.com.'
          type: string
        domainPassword:
          description: The password for the account used to join domain
          type: string
          x-ms-secret: true
    NetworkProperties:
      description: Network properties
      required:
        - subnetId
        - domainJoinType
      properties:
        subnetId:
          description: The subnet to attach Virtual Machines to
          type: string
        domainName:
          description: Active Directory domain name
          type: string
        organizationUnit:
          description: Active Directory domain Organization Unit (OU)
          type: string
        domainUsername:
          description: 'The username of an Active Directory account (user or service account) that has permissions to create computer objects in Active Directory. Required format: admin@contoso.com.'
          type: string
        domainPassword:
          description: The password for the account used to join domain
          type: string
          x-ms-secret: true
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
        healthCheckStatus:
          description: Overall health status of the network connection. Health checks are run on creation, update, and periodically to validate the network connection.
          $ref: '#/components/schemas/HealthCheckStatus'
          readOnly: true
        networkingResourceGroupName:
          description: The name for resource group where NICs will be placed.
          type: string
          x-ms-mutability:
            - read
            - create
        domainJoinType:
          description: AAD Join type.
          $ref: '#/components/schemas/DomainJoinType'
          x-ms-mutability:
            - read
            - create
      type: object
    NetworkConnectionListResult:
      description: Result of the network connection list operation.
      type: object
      properties:
        value:
          description: Current page of results.
          type: array
          items:
            $ref: '#/components/schemas/NetworkConnection'
          readOnly: true
        nextLink:
          description: URL to get the next set of results if there are any.
          type: string
          readOnly: true
    DomainJoinType:
      description: Active Directory join type
      enum:
        - HybridAzureADJoin
        - AzureADJoin
        - None
      type: string
      x-ms-enum:
        name: DomainJoinType
        modelAsString: true
    HealthCheckStatus:
      description: Health check status values
      enum:
        - Unknown
        - Pending
        - Running
        - Passed
        - Warning
        - Failed
      type: string
      x-ms-enum:
        name: HealthCheckStatus
        modelAsString: true
    HealthCheckStatusDetails:
      description: Health Check details.
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
        properties:
          x-ms-client-flatten: true
          description: Health check status details properties.
          $ref: '#/components/schemas/HealthCheckStatusDetailsProperties'
      type: object
    HealthCheckStatusDetailsProperties:
      description: Health Check properties.
      type: object
      properties:
        startDateTime:
          type: string
          description: Start time of last execution of the health checks.
          readOnly: true
          format: date-time
        endDateTime:
          type: string
          description: End time of last execution of the health checks.
          readOnly: true
          format: date-time
        healthChecks:
          description: Details for each health check item.
          type: array
          items:
            $ref: '#/components/schemas/HealthCheck'
          x-ms-identifiers: []
          readOnly: true
    HealthCheck:
      description: An individual health check item
      type: object
      properties:
        status:
          description: The status of the health check item.
          $ref: '#/components/schemas/HealthCheckStatus'
          readOnly: true
        displayName:
          description: The display name of this health check item.
          type: string
          readOnly: true
        startDateTime:
          description: Start time of health check item.
          type: string
          readOnly: true
          format: date-time
        endDateTime:
          description: End time of the health check item.
          type: string
          readOnly: true
          format: date-time
        errorType:
          description: The type of error that occurred during this health check.
          type: string
          readOnly: true
        recommendedAction:
          description: The recommended action to fix the corresponding error.
          type: string
          readOnly: true
        additionalDetails:
          description: Additional details about the health check or the recommended action.
          type: string
          readOnly: true
    HealthCheckStatusDetailsListResult:
      description: Result of the network health check list operation.
      type: object
      properties:
        value:
          description: Current page of results.
          type: array
          items:
            $ref: '#/components/schemas/HealthCheckStatusDetails'
          readOnly: true
        nextLink:
          description: URL to get the next set of results if there are any.
          type: string
          readOnly: true
    OutboundEnvironmentEndpointCollection:
      type: object
      properties:
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/OutboundEnvironmentEndpoint'
          x-ms-identifiers:
            - category
          description: The collection of outbound network dependency endpoints returned by the listing operation.
        nextLink:
          type: string
          description: The continuation token.
      description: Values returned by the List operation.
    OutboundEnvironmentEndpoint:
      type: object
      properties:
        category:
          type: string
          readOnly: true
          description: The type of service that the agent connects to.
        endpoints:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/EndpointDependency'
          x-ms-identifiers:
            - domainName
          description: The endpoints for this service for which the agent requires outbound access.
      description: A collection of related endpoints from the same service for which the agent requires outbound access.
    EndpointDependency:
      type: object
      properties:
        domainName:
          type: string
          readOnly: true
          description: The domain name of the dependency. Domain names may be fully qualified or may contain a * wildcard.
        description:
          type: string
          readOnly: true
          description: Human-readable supplemental information about the dependency and when it is applicable.
        endpointDetails:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/EndpointDetail'
          x-ms-identifiers: []
          description: The list of connection details for this endpoint.
      description: A domain name and connection details used to access a dependency.
    EndpointDetail:
      type: object
      properties:
        port:
          type: integer
          format: int32
          readOnly: true
          description: The port an endpoint is connected to.
      description: Details about the connection between the Batch service and the endpoint.
    Schedule:
      description: Represents a Schedule to execute a task.
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
        properties:
          description: Properties of a Schedule resource
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ScheduleProperties'
      type: object
    ScheduleUpdate:
      description: The schedule properties for partial update. Properties not provided in the update request will not be changed.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ScheduleUpdateProperties'
          description: Properties of a schedule resource to be updated.
      type: object
    ScheduleUpdateProperties:
      description: Updatable properties of a Schedule.
      properties:
        tags:
          $ref: '#/components/schemas/Tags'
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        type:
          description: Supported type this scheduled task represents.
          $ref: '#/components/schemas/ScheduledType'
        frequency:
          description: The frequency of this scheduled task.
          $ref: '#/components/schemas/ScheduledFrequency'
        time:
          description: The target time to trigger the action. The format is HH:MM.
          type: string
        timeZone:
          description: The IANA timezone id at which the schedule should execute.
          type: string
        state:
          description: Indicates whether or not this scheduled task is enabled.
          $ref: '#/components/schemas/ScheduleEnableStatus'
      type: object
    ScheduleProperties:
      description: The Schedule properties defining when and what to execute.
      required:
        - type
        - frequency
        - timeZone
        - time
      properties:
        type:
          description: Supported type this scheduled task represents.
          $ref: '#/components/schemas/ScheduledType'
        frequency:
          description: The frequency of this scheduled task.
          $ref: '#/components/schemas/ScheduledFrequency'
        time:
          description: The target time to trigger the action. The format is HH:MM.
          type: string
        timeZone:
          description: The IANA timezone id at which the schedule should execute.
          type: string
        state:
          description: Indicates whether or not this scheduled task is enabled.
          $ref: '#/components/schemas/ScheduleEnableStatus'
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
      type: object
    ScheduleListResult:
      description: Result of the schedule list operation.
      type: object
      properties:
        value:
          description: Current page of results.
          type: array
          items:
            $ref: '#/components/schemas/Schedule'
          readOnly: true
        nextLink:
          description: URL to get the next set of results if there are any.
          type: string
          readOnly: true
    ScheduledType:
      description: The supported types for a scheduled task.
      enum:
        - StopDevBox
      type: string
      x-ms-enum:
        name: ScheduledType
        modelAsString: true
    ScheduledFrequency:
      description: The frequency of task execution.
      enum:
        - Daily
      type: string
      x-ms-enum:
        name: ScheduledFrequency
        modelAsString: true
    ScheduleEnableStatus:
      description: Schedule enable or disable status. Indicates whether the schedule applied to is either enabled or disabled.
      enum:
        - Enabled
        - Disabled
      type: string
      x-ms-enum:
        name: ScheduleEnableStatus
        modelAsString: true
    encryption:
      type: object
      description: (Optional) Discouraged to include in resource definition. Only needed where it is possible to disable platform (AKA infrastructure) encryption. Azure SQL TDE is an example of this. Values are enabled and disabled.
      properties:
        infrastructureEncryption:
          type: string
          enum:
            - enabled
            - disabled
          x-ms-enum:
            name: InfrastructureEncryption
            modelAsString: true
          description: Values are enabled and disabled.
        customerManagedKeyEncryption:
          description: All Customer-managed key encryption properties for the resource.
          $ref: '#/components/schemas/customerManagedKeyEncryption'
    customerManagedKeyEncryption:
      type: object
      description: All Customer-managed key encryption properties for the resource.
      properties:
        keyEncryptionKeyIdentity:
          type: object
          description: All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.
          properties:
            identityType:
              type: string
              enum:
                - systemAssignedIdentity
                - userAssignedIdentity
                - delegatedResourceIdentity
              x-ms-enum:
                name: IdentityType
                modelAsString: true
              description: Values can be systemAssignedIdentity or userAssignedIdentity
            userAssignedIdentityResourceId:
              type: string
              format: arm-id
              description: 'user assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity and delegatedResourceIdentity.'
            delegatedIdentityClientId:
              type: string
              format: uuid
              description: 'delegated identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity and userAssignedIdentity - internal use only.'
        keyEncryptionKeyUrl:
          type: string
          description: 'key encryption key Url, versioned or non-versioned. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78 or https://contosovault.vault.azure.net/keys/contosokek.'
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    DevCenterPlan:
      description: Represents a devcenter plan resource.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          description: Plan properties
          x-ms-client-flatten: true
          $ref: '#/components/schemas/PlanProperties'
        sku:
          description: The SKU for DevCenters created using this definition.
          $ref: '#/components/schemas/Sku'
      type: object
    PlanProperties:
      description: Properties of the devcenter plan.
      type: object
      properties:
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
    DevCenterPlanMember:
      description: Represents a devcenter plan member resource.
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
        properties:
          description: Plan member properties
          x-ms-client-flatten: true
          $ref: '#/components/schemas/PlanMemberProperties'
        tags:
          $ref: '#/components/schemas/Tags'
          description: Resource tags.
      type: object
    PlanMemberProperties:
      description: Properties of the devcenter plan member.
      type: object
      properties:
        memberId:
          description: The unique id of the member.
          type: string
        memberType:
          description: The type of the member (user, group)
          enum:
            - User
            - Group
          type: string
          x-ms-enum:
            name: PlanMemberType
            modelAsString: true
        tags:
          $ref: '#/components/schemas/Tags'
          description: Resource tags.
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
    PlanMemberUpdate:
      description: The devcenter plan member resource for partial updates. Properties not provided in the update request will not be changed.
      type: object
      properties:
        tags:
          $ref: '#/components/schemas/Tags'
          description: Resource tags.
    DevCenter:
      description: Represents a devcenter resource.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          description: DevCenter properties
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DevCenterProperties'
        identity:
          description: Managed identity properties
          $ref: '#/components/schemas/ManagedServiceIdentity'
      type: object
    DevCenterProperties:
      description: Properties of the devcenter.
      properties:
        planId:
          type: string
          description: Resource Id of an associated Plan
        encryption:
          $ref: '#/components/schemas/Encryption'
          description: Encryption settings to be used for server-side encryption for proprietary content (such as catalogs, logs, customizations).
        displayName:
          type: string
          description: The display name of the devcenter.
        projectCatalogSettings:
          $ref: '#/components/schemas/DevCenterProjectCatalogSettings'
          description: Dev Center settings to be used when associating a project with a catalog.
        networkSettings:
          $ref: '#/components/schemas/DevCenterNetworkSettings'
          description: Network settings that will be enforced on network resources associated with the Dev Center.
        devBoxProvisioningSettings:
          $ref: '#/components/schemas/DevBoxProvisioningSettings'
          description: Settings to be used in the provisioning of all Dev Boxes that belong to this dev center.
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
        devCenterUri:
          description: The URI of the Dev Center.
          $ref: '#/components/schemas/DevCenterUri'
          readOnly: true
      type: object
    DevCenterUpdateProperties:
      description: Properties of the devcenter. These properties can be updated after the resource has been created.
      type: object
      properties:
        planId:
          type: string
          description: Resource Id of an associated Plan
        encryption:
          $ref: '#/components/schemas/Encryption'
          description: Encryption settings to be used for server-side encryption for proprietary content (such as catalogs, logs, customizations).
        displayName:
          type: string
          description: The display name of the devcenter.
        projectCatalogSettings:
          $ref: '#/components/schemas/DevCenterProjectCatalogSettings'
          description: Dev Center settings to be used when associating a project with a catalog.
        networkSettings:
          $ref: '#/components/schemas/DevCenterNetworkSettings'
          description: Network settings that will be enforced on network resources associated with the Dev Center.
        devBoxProvisioningSettings:
          $ref: '#/components/schemas/DevBoxProvisioningSettings'
          description: Settings to be used in the provisioning of all Dev Boxes that belong to this dev center.
    DevCenterEncryptionSet:
      description: Represents a devcenter encryption set resource.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DevCenterEncryptionSetProperties'
          description: Properties of a devcenter encryption set.
        identity:
          description: Managed identity properties
          $ref: '#/components/schemas/ManagedServiceIdentity'
      type: object
    DevCenterEncryptionSetProperties:
      description: Properties of the devcenter encryption set.
      properties:
        devboxDisksEncryptionEnableStatus:
          description: Devbox disk encryption enable or disable status. Indicates if Devbox disks encryption using DevCenter CMK is enabled or not.
          $ref: '#/components/schemas/DevboxDisksEncryptionEnableStatus'
        keyEncryptionKeyUrl:
          type: string
          description: 'Key encryption key Url, versioned or non-versioned. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78 or https://contosovault.vault.azure.net/keys/contosokek.'
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
      type: object
    DevCenterEncryptionSetUpdateProperties:
      description: Properties of the devcenter encryption set. These properties can be updated after the resource has been created.
      type: object
      properties:
        devboxDisksEncryptionEnableStatus:
          description: Devbox disk encryption enable or disable status. Indicates if Devbox disks encryption using DevCenter CMK is enabled or not.
          $ref: '#/components/schemas/DevboxDisksEncryptionEnableStatus'
        keyEncryptionKeyUrl:
          type: string
          description: 'Key encryption key Url, versioned or non-versioned. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78 or https://contosovault.vault.azure.net/keys/contosokek.'
    DevboxDisksEncryptionEnableStatus:
      description: Devbox disk encryption enable or disable status. Indicates if Devbox disks encryption is enabled or not.
      enum:
        - Enabled
        - Disabled
      type: string
      x-ms-enum:
        name: DevboxDisksEncryptionEnableStatus
        modelAsString: true
    DevCenterProjectCatalogSettings:
      type: object
      description: Project catalog settings for project catalogs under a project associated to this dev center.
      properties:
        catalogItemSyncEnableStatus:
          description: Whether project catalogs associated with projects in this dev center can be configured to sync catalog items.
          $ref: '#/components/schemas/CatalogItemSyncEnableStatus'
    DevBoxProvisioningSettings:
      type: object
      description: Provisioning settings that apply to all Dev Boxes created in this dev center
      properties:
        installAzureMonitorAgentEnableStatus:
          description: Whether project catalogs associated with projects in this dev center can be configured to sync catalog items.
          $ref: '#/components/schemas/InstallAzureMonitorAgentEnableStatus'
    CatalogItemSyncEnableStatus:
      description: Catalog item sync types enable or disable status. Indicates whether project catalogs are allowed to sync catalog items under projects associated to this dev center.
      enum:
        - Enabled
        - Disabled
      type: string
      x-ms-enum:
        name: CatalogItemSyncEnableStatus
        modelAsString: true
    DevCenterNetworkSettings:
      type: object
      description: Network settings for the Dev Center.
      properties:
        microsoftHostedNetworkEnableStatus:
          $ref: '#/components/schemas/MicrosoftHostedNetworkEnableStatus'
    ProjectNetworkSettings:
      type: object
      description: Network settings for the project.
      properties:
        microsoftHostedNetworkEnableStatus:
          $ref: '#/components/schemas/MicrosoftHostedNetworkEnableStatus'
          readOnly: true
    MicrosoftHostedNetworkEnableStatus:
      description: Indicates whether pools in this Dev Center can use Microsoft Hosted Networks. Defaults to Enabled if not set.
      enum:
        - Enabled
        - Disabled
      type: string
      x-ms-enum:
        name: MicrosoftHostedNetworkEnableStatus
        modelAsString: true
    Encryption:
      type: object
      properties:
        customerManagedKeyEncryption:
          $ref: '#/components/schemas/customerManagedKeyEncryption'
    InstallAzureMonitorAgentEnableStatus:
      description: Setting to be used when determining whether to install the Azure Monitor Agent service on Dev Boxes that belong to this dev center.
      enum:
        - Enabled
        - Disabled
      type: string
      x-ms-enum:
        name: InstallAzureMonitorAgentEnableStatus
        modelAsString: true
    PlanUpdate:
      description: The devcenter plan resource for partial updates. Properties not provided in the update request will not be changed.
      properties:
        tags:
          $ref: '#/components/schemas/Tags'
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        sku:
          description: The SKU for DevCenters created using this definition.
          $ref: '#/components/schemas/Sku'
      type: object
    DevCenterUpdate:
      description: The devcenter resource for partial updates. Properties not provided in the update request will not be changed.
      properties:
        tags:
          $ref: '#/components/schemas/Tags'
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        identity:
          description: Managed identity properties
          $ref: '#/components/schemas/ManagedServiceIdentity'
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DevCenterUpdateProperties'
          description: Properties of a Dev Center to be updated.
      type: object
    EncryptionSetUpdate:
      description: The devcenter encryption set resource for partial updates. Properties not provided in the update request will not be changed.
      properties:
        tags:
          $ref: '#/components/schemas/Tags'
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DevCenterEncryptionSetUpdateProperties'
          description: Properties of a Dev Center encryption set to be updated.
        identity:
          description: Managed identity properties
          $ref: '#/components/schemas/ManagedServiceIdentity'
      type: object
    PlanListResult:
      description: Result of the list devcenter plans operation
      type: object
      properties:
        value:
          description: Current page of results.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/DevCenterPlan'
        nextLink:
          description: URL to get the next set of results if there are any.
          type: string
          readOnly: true
    PlanMembersListResult:
      description: Result of the list devcenter plan members operation
      type: object
      properties:
        value:
          description: Current page of results.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/DevCenterPlanMember'
        nextLink:
          description: URL to get the next set of results if there are any.
          type: string
          readOnly: true
    DevCenterListResult:
      description: Result of the list devcenters operation
      type: object
      properties:
        value:
          description: Current page of results.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/DevCenter'
        nextLink:
          description: URL to get the next set of results if there are any.
          type: string
          readOnly: true
    EncryptionSetListResult:
      description: Result of the list devcenter encryption set operation
      type: object
      properties:
        value:
          description: Current page of results.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/DevCenterEncryptionSet'
        nextLink:
          description: URL to get the next set of results if there are any.
          type: string
          readOnly: true
    DevCenterUri:
      description: The URI of the resource.
      readOnly: true
      type: string
    Project:
      description: Represents a project resource.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ProjectProperties'
          description: Properties of a project.
        identity:
          description: Managed identity properties
          $ref: '#/components/schemas/ManagedServiceIdentity'
      type: object
    ProjectUpdateProperties:
      description: Properties of a project. These properties can be updated after the resource has been created.
      type: object
      properties:
        devCenterId:
          type: string
          description: Resource Id of an associated DevCenter
        description:
          type: string
          description: Description of the project.
        maxDevBoxesPerUser:
          type: integer
          format: int32
          minimum: 0
          description: When specified, limits the maximum number of Dev Boxes a single user can create across all pools in the project. This will have no effect on existing Dev Boxes when reduced.
        displayName:
          type: string
          description: The display name of the project.
        catalogSettings:
          $ref: '#/components/schemas/ProjectCatalogSettings'
          description: Settings to be used when associating a project with a catalog.
    ProjectCatalogSettings:
      description: Settings to be used when associating a project with a catalog.
      type: object
      properties:
        catalogItemSyncTypes:
          description: Indicates catalog item types that can be synced.
          type: array
          items:
            $ref: '#/components/schemas/CatalogItemType'
    ProjectProperties:
      description: Properties of a project.
      properties:
        devCenterId:
          type: string
          description: Resource Id of an associated DevCenter
        description:
          type: string
          description: Description of the project.
        maxDevBoxesPerUser:
          type: integer
          format: int32
          minimum: 0
          description: When specified, limits the maximum number of Dev Boxes a single user can create across all pools in the project. This will have no effect on existing Dev Boxes when reduced.
        displayName:
          type: string
          description: The display name of the project.
        catalogSettings:
          $ref: '#/components/schemas/ProjectCatalogSettings'
          description: Settings to be used when associating a project with a catalog.
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
        devCenterUri:
          description: The URI of the Dev Center resource this project is associated with.
          $ref: '#/components/schemas/DevCenterUri'
          readOnly: true
      type: object
    ProjectUpdate:
      description: The project properties for partial update. Properties not provided in the update request will not be changed.
      properties:
        tags:
          $ref: '#/components/schemas/Tags'
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ProjectUpdateProperties'
          description: Properties of a project to be updated.
        identity:
          description: Managed identity properties
          $ref: '#/components/schemas/ManagedServiceIdentity'
      type: object
    ProjectListResult:
      description: Results of the project list operation.
      type: object
      properties:
        value:
          description: Current page of results.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Project'
        nextLink:
          description: URL to get the next set of results if there are any.
          type: string
          readOnly: true
    InheritedSettingsForProject:
      description: Applicable inherited settings for a project.
      type: object
      properties:
        projectCatalogSettings:
          $ref: '#/components/schemas/DevCenterProjectCatalogSettings'
          description: Dev Center settings to be used when associating a project with a catalog.
          readOnly: true
        networkSettings:
          $ref: '#/components/schemas/ProjectNetworkSettings'
          description: Network settings that will be enforced on this project.
          readOnly: true
    Catalog:
      description: Represents a catalog.
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CatalogProperties'
          description: Catalog properties.
      type: object
    CatalogUpdateProperties:
      description: Properties of a catalog. These properties can be updated after the resource has been created.
      type: object
      properties:
        gitHub:
          description: Properties for a GitHub catalog type.
          $ref: '#/components/schemas/GitCatalog'
        adoGit:
          description: Properties for an Azure DevOps catalog type.
          $ref: '#/components/schemas/GitCatalog'
        syncType:
          enum:
            - Manual
            - Scheduled
          description: Indicates the type of sync that is configured for the catalog.
          type: string
          x-ms-enum:
            name: CatalogSyncType
            modelAsString: true
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
    CatalogProperties:
      description: Properties of a catalog.
      properties:
        gitHub:
          description: Properties for a GitHub catalog type.
          $ref: '#/components/schemas/GitCatalog'
        adoGit:
          description: Properties for an Azure DevOps catalog type.
          $ref: '#/components/schemas/GitCatalog'
        syncType:
          enum:
            - Manual
            - Scheduled
          description: Indicates the type of sync that is configured for the catalog.
          type: string
          x-ms-enum:
            name: CatalogSyncType
            modelAsString: true
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
        syncState:
          enum:
            - Succeeded
            - InProgress
            - Failed
            - Canceled
          description: The synchronization state of the catalog.
          readOnly: true
          type: string
          x-ms-enum:
            name: CatalogSyncState
            modelAsString: true
        lastSyncStats:
          description: Stats of the latest synchronization.
          $ref: '#/components/schemas/SyncStats'
          readOnly: true
        connectionState:
          enum:
            - Connected
            - Disconnected
          description: The connection state of the catalog.
          readOnly: true
          type: string
          x-ms-enum:
            name: CatalogConnectionState
            modelAsString: true
        lastConnectionTime:
          description: When the catalog was last connected.
          type: string
          readOnly: true
          format: date-time
        lastSyncTime:
          description: When the catalog was last synced.
          type: string
          readOnly: true
          format: date-time
      type: object
    SyncStats:
      description: Stats of the synchronization.
      type: object
      properties:
        added:
          description: Count of catalog items added during synchronization.
          type: integer
          format: int32
          readOnly: true
          minimum: 0
        updated:
          description: Count of catalog items updated during synchronization.
          type: integer
          format: int32
          readOnly: true
          minimum: 0
        unchanged:
          description: Count of catalog items that were unchanged during synchronization.
          type: integer
          format: int32
          readOnly: true
          minimum: 0
        removed:
          description: Count of catalog items removed during synchronization.
          type: integer
          format: int32
          readOnly: true
          minimum: 0
        validationErrors:
          description: Count of catalog items that had validation errors during synchronization.
          type: integer
          format: int32
          readOnly: true
          minimum: 0
        synchronizationErrors:
          description: Count of synchronization errors that occured during synchronization.
          type: integer
          format: int32
          readOnly: true
          minimum: 0
        syncedCatalogItemTypes:
          description: Indicates catalog item types that were synced.
          type: array
          items:
            $ref: '#/components/schemas/CatalogItemType'
    GitCatalog:
      description: Properties for a Git repository catalog.
      type: object
      properties:
        uri:
          description: Git URI.
          type: string
        branch:
          description: Git branch.
          type: string
        secretIdentifier:
          description: A reference to the Key Vault secret containing a security token to authenticate to a Git repository.
          type: string
        path:
          description: The folder where the catalog items can be found inside the repository.
          type: string
    CatalogUpdate:
      description: The catalog's properties for partial update. Properties not provided in the update request will not be changed.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CatalogUpdateProperties'
          description: Catalog properties for update.
      type: object
    CatalogListResult:
      description: Results of the catalog list operation.
      type: object
      properties:
        value:
          description: Current page of results.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Catalog'
        nextLink:
          description: URL to get the next set of results if there are any.
          type: string
          readOnly: true
    SyncErrorDetails:
      description: Synchronization error details.
      type: object
      properties:
        operationError:
          description: Error information for the overall synchronization operation.
          readOnly: true
          $ref: '#/components/schemas/CatalogErrorDetails'
        conflicts:
          description: Catalog items that have conflicting names.
          type: array
          items:
            $ref: '#/components/schemas/CatalogConflictError'
          x-ms-identifiers: []
          readOnly: true
        errors:
          description: Errors that occured during synchronization.
          type: array
          items:
            $ref: '#/components/schemas/CatalogSyncError'
          x-ms-identifiers: []
          readOnly: true
    CatalogSyncError:
      description: An individual synchronization error.
      type: object
      properties:
        path:
          description: The path of the file the error is associated with.
          type: string
          readOnly: true
        errorDetails:
          description: Errors associated with the file.
          type: array
          items:
            $ref: '#/components/schemas/CatalogErrorDetails'
          x-ms-identifiers: []
          readOnly: true
    CatalogConflictError:
      description: An individual conflict error.
      type: object
      properties:
        path:
          description: The path of the file that has a conflicting name.
          type: string
          readOnly: true
        name:
          description: Name of the conflicting catalog item.
          type: string
          readOnly: true
    Gallery:
      description: Represents a gallery.
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GalleryProperties'
          description: Gallery properties.
      type: object
    GalleryProperties:
      description: Properties of a gallery.
      type: object
      properties:
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
        galleryResourceId:
          description: The resource ID of the backing Azure Compute Gallery.
          type: string
          x-ms-mutability:
            - read
            - create
      required:
        - galleryResourceId
    Image:
      description: Represents an image.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ImageProperties'
          description: Image properties.
      type: object
    ImageProperties:
      description: Properties of an image.
      type: object
      properties:
        description:
          description: The description of the image.
          type: string
          readOnly: true
        publisher:
          description: The publisher of the image.
          type: string
          readOnly: true
        offer:
          description: The name of the image offer.
          type: string
          readOnly: true
        sku:
          description: The SKU name for the image.
          type: string
          readOnly: true
        recommendedMachineConfiguration:
          description: The recommended machine configuration to use with the image.
          $ref: '#/components/schemas/RecommendedMachineConfiguration'
          readOnly: true
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
        hibernateSupport:
          description: Indicates whether this image has hibernate enabled. Not all images are capable of supporting hibernation. To find out more see https://aka.ms/devbox/hibernate
          readOnly: true
          $ref: '#/components/schemas/HibernateSupport'
    RecommendedMachineConfiguration:
      description: Properties for a recommended machine configuration.
      type: object
      properties:
        memory:
          description: Recommended memory range.
          $ref: '#/components/schemas/ResourceRange'
          readOnly: true
        vCPUs:
          description: Recommended vCPU range.
          $ref: '#/components/schemas/ResourceRange'
          readOnly: true
    ResourceRange:
      description: Properties for a range of values.
      type: object
      properties:
        min:
          description: Minimum value.
          type: integer
          format: int32
          readOnly: true
        max:
          description: Maximum value.
          type: integer
          format: int32
          readOnly: true
    ImageVersion:
      description: Represents an image version.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ImageVersionProperties'
          description: Image version properties.
      type: object
    ImageVersionProperties:
      description: Properties of an image version.
      type: object
      properties:
        name:
          description: The semantic version string.
          type: string
          readOnly: true
        publishedDate:
          description: The datetime that the backing image version was published.
          type: string
          readOnly: true
          format: date-time
        excludeFromLatest:
          description: If the version should be excluded from being treated as the latest version.
          type: boolean
          readOnly: true
        osDiskImageSizeInGb:
          description: The size of the OS disk image, in GB.
          type: integer
          format: int32
          readOnly: true
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
    GalleryListResult:
      description: Results of the gallery list operation.
      type: object
      properties:
        value:
          description: Current page of results.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Gallery'
        nextLink:
          description: URL to get the next set of results if there are any.
          type: string
          readOnly: true
    ImageListResult:
      description: Results of the image list operation.
      type: object
      properties:
        value:
          description: Current page of results.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Image'
        nextLink:
          description: URL to get the next set of results if there are any.
          type: string
          readOnly: true
    ImageVersionListResult:
      description: Results of the image version list operation.
      type: object
      properties:
        value:
          description: Current page of results.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ImageVersion'
        nextLink:
          description: URL to get the next set of results if there are any.
          type: string
          readOnly: true
    AllowedEnvironmentType:
      description: Represents an allowed environment type.
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AllowedEnvironmentTypeProperties'
          description: Properties of an allowed environment type.
      type: object
    AllowedEnvironmentTypeProperties:
      description: Properties of an allowed environment type.
      type: object
      properties:
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
        displayName:
          description: The display name of the allowed environment type.
          type: string
          readOnly: true
    AllowedEnvironmentTypeListResult:
      description: Result of the allowed environment type list operation.
      type: object
      properties:
        value:
          description: Current page of results.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/AllowedEnvironmentType'
        nextLink:
          description: URL to get the next set of results if there are any.
          type: string
          readOnly: true
    EnvironmentType:
      description: Represents an environment type.
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/EnvironmentTypeProperties'
          description: Properties of an environment type.
        tags:
          $ref: '#/components/schemas/Tags'
          description: Resource tags.
      type: object
    EnvironmentTypeProperties:
      description: Properties of an environment type.
      properties:
        displayName:
          type: string
          description: The display name of the environment type.
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
      type: object
    EnvironmentTypeUpdate:
      description: The environment type for partial update. Properties not provided in the update request will not be changed.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/EnvironmentTypeUpdateProperties'
          description: Properties of an environment type to be updated.
        tags:
          $ref: '#/components/schemas/Tags'
          description: Resource tags.
      type: object
    EnvironmentTypeUpdateProperties:
      description: Properties of an environment type. These properties can be updated after the resource has been created.
      type: object
      properties:
        displayName:
          type: string
          description: The display name of the environment type.
    EnvironmentTypeListResult:
      description: Result of the environment type list operation.
      type: object
      properties:
        value:
          description: Current page of results.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentType'
        nextLink:
          description: URL to get the next set of results if there are any.
          type: string
          readOnly: true
    ProjectEnvironmentType:
      description: Represents an environment type.
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ProjectEnvironmentTypeProperties'
          description: Properties of an environment type.
        tags:
          $ref: '#/components/schemas/Tags'
          description: Resource tags.
        identity:
          description: Managed identity properties
          $ref: '#/components/schemas/ManagedServiceIdentity'
        location:
          type: string
          description: The geo-location for the environment type
      type: object
    ProjectEnvironmentTypeUpdateProperties:
      description: Properties of a project environment type. These properties can be updated after the resource has been created.
      type: object
      properties:
        deploymentTargetId:
          description: Id of a subscription that the environment type will be mapped to. The environment's resources will be deployed into this subscription.
          type: string
        displayName:
          description: The display name of the project environment type.
          type: string
        status:
          description: Defines whether this Environment Type can be used in this Project.
          $ref: '#/components/schemas/EnvironmentTypeEnableStatus'
        creatorRoleAssignment:
          description: The role definition assigned to the environment creator on backing resources.
          type: object
          properties:
            roles:
              type: object
              description: A map of roles to assign to the environment creator.
              additionalProperties:
                $ref: '#/components/schemas/EnvironmentRole'
        userRoleAssignments:
          description: Role Assignments created on environment backing resources. This is a mapping from a user object ID to an object of role definition IDs.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/UserRoleAssignment'
    ProjectEnvironmentTypeProperties:
      description: Properties of a project environment type.
      properties:
        deploymentTargetId:
          description: Id of a subscription that the environment type will be mapped to. The environment's resources will be deployed into this subscription.
          type: string
        displayName:
          description: The display name of the project environment type.
          type: string
        status:
          description: Defines whether this Environment Type can be used in this Project.
          $ref: '#/components/schemas/EnvironmentTypeEnableStatus'
        creatorRoleAssignment:
          description: The role definition assigned to the environment creator on backing resources.
          type: object
          properties:
            roles:
              type: object
              description: A map of roles to assign to the environment creator.
              additionalProperties:
                $ref: '#/components/schemas/EnvironmentRole'
        userRoleAssignments:
          description: Role Assignments created on environment backing resources. This is a mapping from a user object ID to an object of role definition IDs.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/UserRoleAssignment'
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
        environmentCount:
          description: The number of environments of this type.
          type: integer
          format: int32
          minimum: 0
          readOnly: true
      type: object
    ProjectEnvironmentTypeUpdate:
      description: The project environment type for partial update. Properties not provided in the update request will not be changed.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ProjectEnvironmentTypeUpdateProperties'
          description: Properties to configure an environment type.
        tags:
          $ref: '#/components/schemas/Tags'
          description: Resource tags.
        identity:
          description: Managed identity properties
          $ref: '#/components/schemas/ManagedServiceIdentity'
      type: object
    ProjectEnvironmentTypeListResult:
      description: Result of the project environment type list operation.
      type: object
      properties:
        value:
          description: Current page of results.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ProjectEnvironmentType'
        nextLink:
          description: URL to get the next set of results if there are any.
          type: string
          readOnly: true
    DevBoxDefinitionListResult:
      description: Results of the Dev Box definition list operation.
      type: object
      properties:
        value:
          description: Current page of results.
          type: array
          items:
            $ref: '#/components/schemas/DevBoxDefinition'
          readOnly: true
        nextLink:
          description: URL to get the next set of results if there are any.
          type: string
          readOnly: true
    DevBoxDefinitionUpdate:
      description: Partial update of a Dev Box definition resource.
      properties:
        tags:
          $ref: '#/components/schemas/Tags'
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DevBoxDefinitionUpdateProperties'
          description: Properties of a Dev Box definition to be updated.
      type: object
    DevBoxDefinition:
      description: Represents a definition for a Developer Machine.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          description: Dev Box definition properties
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DevBoxDefinitionProperties'
      type: object
    DevBoxDefinitionUpdateProperties:
      description: Properties of a Dev Box definition. These properties can be updated after the resource has been created.
      type: object
      properties:
        imageReference:
          $ref: '#/components/schemas/ImageReference'
          description: Image reference information.
        sku:
          description: The SKU for Dev Boxes created using this definition.
          $ref: '#/components/schemas/Sku'
        osStorageType:
          description: The storage type used for the Operating System disk of Dev Boxes created using this definition.
          type: string
        hibernateSupport:
          description: Indicates whether Dev Boxes created with this definition are capable of hibernation. Not all images are capable of supporting hibernation. To find out more see https://aka.ms/devbox/hibernate
          $ref: '#/components/schemas/HibernateSupport'
    DevBoxDefinitionProperties:
      description: Properties of a Dev Box definition.
      required:
        - imageReference
        - sku
      properties:
        imageReference:
          $ref: '#/components/schemas/ImageReference'
          description: Image reference information.
        sku:
          description: The SKU for Dev Boxes created using this definition.
          $ref: '#/components/schemas/Sku'
        osStorageType:
          description: The storage type used for the Operating System disk of Dev Boxes created using this definition.
          type: string
        hibernateSupport:
          description: Indicates whether Dev Boxes created with this definition are capable of hibernation. Not all images are capable of supporting hibernation. To find out more see https://aka.ms/devbox/hibernate
          $ref: '#/components/schemas/HibernateSupport'
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
        imageValidationStatus:
          description: Validation status of the configured image.
          $ref: '#/components/schemas/ImageValidationStatus'
          readOnly: true
        imageValidationErrorDetails:
          description: Details for image validator error. Populated when the image validation is not successful.
          $ref: '#/components/schemas/ImageValidationErrorDetails'
          readOnly: true
        validationStatus:
          description: Validation status for the Dev Box Definition.
          $ref: '#/components/schemas/CatalogResourceValidationStatus'
          readOnly: true
        activeImageReference:
          $ref: '#/components/schemas/ImageReference'
          description: Image reference information for the currently active image (only populated during updates).
          readOnly: true
      type: object
    AttachedNetworkConnection:
      description: Represents an attached NetworkConnection.
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AttachedNetworkConnectionProperties'
          description: Attached NetworkConnection properties.
      type: object
    AttachedNetworkConnectionProperties:
      description: Properties of an attached NetworkConnection.
      type: object
      properties:
        provisioningState:
          description: The provisioning state of the resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
        networkConnectionId:
          description: The resource ID of the NetworkConnection you want to attach.
          type: string
          x-ms-mutability:
            - read
            - create
        networkConnectionLocation:
          description: The geo-location where the NetworkConnection resource specified in 'networkConnectionResourceId' property lives.
          type: string
          readOnly: true
        healthCheckStatus:
          $ref: '#/components/schemas/HealthCheckStatus'
          readOnly: true
        domainJoinType:
          description: AAD Join type of the network. This is populated based on the referenced Network Connection.
          $ref: '#/components/schemas/DomainJoinType'
          readOnly: true
      required:
        - networkConnectionId
    AttachedNetworkListResult:
      description: Results of the Attached Networks list operation.
      type: object
      properties:
        value:
          description: Current page of results.
          type: array
          items:
            $ref: '#/components/schemas/AttachedNetworkConnection'
          readOnly: true
        nextLink:
          description: URL to get the next set of results if there are any.
          type: string
          readOnly: true
    EnvironmentRole:
      type: object
      description: A role that can be assigned to a user.
      properties:
        roleName:
          description: The common name of the Role Assignment. This is a descriptive name such as 'AcrPush'.
          type: string
          readOnly: true
        description:
          description: This is a description of the Role Assignment.
          type: string
          readOnly: true
    UserRoleAssignment:
      type: object
      description: Mapping of user object ID to role assignments.
      x-ms-client-name: userRoleAssignmentValue
      properties:
        roles:
          type: object
          description: A map of roles to assign to the parent user.
          additionalProperties:
            $ref: '#/components/schemas/EnvironmentRole'
    OperationStatus:
      description: The current status of an async operation
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
        properties:
          description: Custom operation properties, populated only for a successful operation.
          type: object
          readOnly: true
      type: object
    CatalogItemType:
      description: Indicates catalog item types.
      enum:
        - EnvironmentDefinition
      type: string
      x-ms-enum:
        name: CatalogItemType
        modelAsString: true
    EnvironmentTypeEnableStatus:
      description: Indicates whether the environment type is either enabled or disabled.
      enum:
        - Enabled
        - Disabled
      type: string
      x-ms-enum:
        name: EnvironmentTypeEnableStatus
        modelAsString: true
    HibernateSupport:
      description: Indicates whether hibernate is enabled/disabled.
      enum:
        - Disabled
        - Enabled
      type: string
      x-ms-enum:
        name: HibernateSupport
        modelAsString: true
    ListUsagesResult:
      description: List of Core Usages.
      type: object
      properties:
        value:
          description: The array page of Usages.
          type: array
          items:
            $ref: '#/components/schemas/Usage'
          x-ms-identifiers: []
          readOnly: true
        nextLink:
          description: The link to get the next page of Usage result.
          type: string
          readOnly: true
    Usage:
      description: The core usage details.
      type: object
      properties:
        currentValue:
          description: The current usage.
          type: integer
          format: int64
        limit:
          description: The limit integer.
          type: integer
          format: int64
        unit:
          description: The unit details.
          type: string
          enum:
            - Count
          x-ms-enum:
            name: UsageUnit
            modelAsString: true
        name:
          description: The name.
          $ref: '#/components/schemas/UsageName'
        id:
          description: The fully qualified arm resource id.
          type: string
    UsageName:
      description: The Usage Names.
      type: object
      properties:
        localizedValue:
          description: The localized name of the resource.
          type: string
        value:
          description: The name of the resource.
          type: string
    CustomizationTaskListResult:
      description: Results of the Task list operation.
      type: object
      properties:
        value:
          description: Current page of results.
          type: array
          items:
            $ref: '#/components/schemas/CustomizationTask'
          readOnly: true
        nextLink:
          description: URL to get the next set of results if there are any.
          type: string
          readOnly: true
    CustomizationTask:
      description: Represents a Task to be used in customizing a Dev Box.
      properties:
        properties:
          description: Task properties
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CustomizationTaskProperties'
      type: object
    CustomizationTaskProperties:
      description: Properties of a Task.
      type: object
      properties:
        inputs:
          description: Inputs to the task.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/CustomizationTaskInput'
          readOnly: true
        timeout:
          description: The default timeout for the task.
          type: integer
          format: int32
          readOnly: true
        validationStatus:
          description: Validation status for the Task.
          $ref: '#/components/schemas/CatalogResourceValidationStatus'
          readOnly: true
    CustomizationTaskInput:
      description: Input for a Task.
      type: object
      properties:
        description:
          description: Description of the input.
          type: string
          readOnly: true
        type:
          description: Type of the input.
          type: string
          enum:
            - string
            - number
            - boolean
          x-ms-enum:
            name: CustomizationTaskInputType
            modelAsString: true
          readOnly: true
        required:
          description: Whether or not the input is required.
          type: boolean
          readOnly: true
    EnvironmentDefinitionListResult:
      description: Results of the environment definition list operation.
      type: object
      properties:
        value:
          description: Current page of results.
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentDefinition'
          readOnly: true
        nextLink:
          description: URL to get the next set of results if there are any.
          type: string
          readOnly: true
    EnvironmentDefinition:
      description: Represents an environment definition catalog item.
      properties:
        properties:
          description: Environment definition properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/EnvironmentDefinitionProperties'
      type: object
    EnvironmentDefinitionProperties:
      description: Properties of an environment definition.
      type: object
      properties:
        description:
          description: A short description of the environment definition.
          type: string
          readOnly: true
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentDefinitionParameter'
          description: Input parameters passed to an environment.
          readOnly: true
        templatePath:
          description: Path to the Environment Definition entrypoint file.
          type: string
          readOnly: true
        validationStatus:
          description: Validation status for the environment definition.
          $ref: '#/components/schemas/CatalogResourceValidationStatus'
          readOnly: true
    EnvironmentDefinitionParameter:
      type: object
      description: Properties of an Environment Definition parameter
      properties:
        id:
          type: string
          description: Unique ID of the parameter
          readOnly: true
        name:
          type: string
          description: Display name of the parameter
          readOnly: true
        description:
          type: string
          description: Description of the parameter
          readOnly: true
        type:
          description: A string of one of the basic JSON types (number, integer, array, object, boolean, string)
          $ref: '#/components/schemas/ParameterType'
          readOnly: true
        readOnly:
          type: boolean
          description: Whether or not this parameter is read-only.  If true, default should have a value.
          readOnly: true
        required:
          type: boolean
          description: Whether or not this parameter is required
          readOnly: true
    ParameterType:
      type: string
      enum:
        - array
        - boolean
        - integer
        - number
        - object
        - string
      description: The type of data a parameter accepts.
      readOnly: true
      x-ms-enum:
        name: ParameterType
        modelAsString: true
        values:
          - value: array
            description: The parameter accepts an array of values.
          - value: boolean
            description: The parameter accepts a boolean value.
          - value: integer
            description: The parameter accepts an integer value.
          - value: number
            description: The parameter accepts a number value.
          - value: object
            description: The parameter accepts an object value.
          - value: string
            description: The parameter accepts a string value.
    CheckScopedNameAvailabilityRequest:
      description: The scoped name check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
        scope:
          description: The resource id to scope the name check.
          type: string
    Capability:
      description: A name/value pair to describe a capability.
      type: object
      properties:
        name:
          description: Name of the capability.
          type: string
          readOnly: true
        value:
          description: Value of the capability.
          type: string
          readOnly: true
    TrackedResourceUpdate:
      description: Base tracked resource type for PATCH updates
      type: object
      properties:
        tags:
          $ref: '#/components/schemas/Tags'
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
    Tags:
      additionalProperties:
        type: string
      x-ms-mutability:
        - read
        - create
        - update
      description: Resource tags.
      properties: {}
      type: object
    DevCenterSku:
      description: The resource model definition representing SKU for DevCenter resources
      required:
        - name
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
        resourceType:
          type: string
          description: The name of the resource type
          readOnly: true
        locations:
          description: SKU supported locations.
          type: array
          readOnly: true
          items:
            type: string
        capabilities:
          description: Collection of name/value pairs to describe the SKU capabilities.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Capability'
          x-ms-identifiers: []
      type: object
    ProvisioningState:
      type: string
      description: Provisioning state of the resource.
      enum:
        - NotSpecified
        - Accepted
        - Running
        - Creating
        - Created
        - Updating
        - Updated
        - Deleting
        - Deleted
        - Succeeded
        - Failed
        - Canceled
        - MovingResources
        - TransientFailure
        - RolloutInProgress
        - StorageProvisioningFailed
      readOnly: true
      x-ms-enum:
        name: ProvisioningState
        modelAsString: true
    UserAssignedIdentities:
      title: User-Assigned Identities
      description: 'The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.'
      additionalProperties:
        $ref: '#/components/schemas/UserAssignedIdentity'
      properties: {}
      type: object
    UserAssignedIdentity:
      type: object
      description: User assigned identity properties
      properties:
        principalId:
          description: The principal ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
        clientId:
          description: The client ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
    ManagedServiceIdentityType:
      description: Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
      enum:
        - None
        - SystemAssigned
        - UserAssigned
        - SystemAssigned, UserAssigned
      type: string
      x-ms-enum:
        name: ManagedServiceIdentityType
        modelAsString: true
    ManagedServiceIdentity:
      description: Managed service identity (system assigned and/or user assigned identities)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/ManagedServiceIdentityType'
        userAssignedIdentities:
          $ref: '#/components/schemas/UserAssignedIdentities'
      required:
        - type
    SystemAssignedServiceIdentityType:
      description: Type of managed service identity (either system assigned, or none).
      enum:
        - None
        - SystemAssigned
      type: string
      x-ms-enum:
        name: SystemAssignedServiceIdentityType
        modelAsString: true
    SystemAssignedServiceIdentity:
      description: Managed service identity (either system assigned, or none)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/SystemAssignedServiceIdentityType'
      required:
        - type
  x-stackQL-resources:
    skus:
      id: azure.dev_center.skus
      name: skus
      title: skus
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DevCenter~1skus?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/skus/methods/list_by_subscription'
        insert: []
        update: []
        delete: []
    pools:
      id: azure.dev_center.pools
      name: pools
      title: pools
      methods:
        list_by_project:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1pools?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1pools~1{poolName}?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1pools~1{poolName}?api-version=2024-05-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1pools~1{poolName}?api-version=2024-05-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1pools~1{poolName}?api-version=2024-05-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        run_health_checks:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1pools~1{poolName}~1runHealthChecks?api-version=2024-05-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/pools/methods/get'
          - $ref: '#/components/x-stackQL-resources/pools/methods/list_by_project'
        insert:
          - $ref: '#/components/x-stackQL-resources/pools/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/pools/methods/delete'
    schedules:
      id: azure.dev_center.schedules
      name: schedules
      title: schedules
      methods:
        list_by_pool:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1pools~1{poolName}~1schedules?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1pools~1{poolName}~1schedules~1{scheduleName}?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1pools~1{poolName}~1schedules~1{scheduleName}?api-version=2024-05-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1pools~1{poolName}~1schedules~1{scheduleName}?api-version=2024-05-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1pools~1{poolName}~1schedules~1{scheduleName}?api-version=2024-05-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/schedules/methods/get'
          - $ref: '#/components/x-stackQL-resources/schedules/methods/list_by_pool'
        insert:
          - $ref: '#/components/x-stackQL-resources/schedules/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/schedules/methods/delete'
    network_connections:
      id: azure.dev_center.network_connections
      name: network_connections
      title: network_connections
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DevCenter~1networkConnections?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1networkConnections?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1networkConnections~1{networkConnectionName}?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1networkConnections~1{networkConnectionName}?api-version=2024-05-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1networkConnections~1{networkConnectionName}?api-version=2024-05-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1networkConnections~1{networkConnectionName}?api-version=2024-05-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        run_health_checks:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1networkConnections~1{networkConnectionName}~1runHealthChecks?api-version=2024-05-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/network_connections/methods/get'
          - $ref: '#/components/x-stackQL-resources/network_connections/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/network_connections/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/network_connections/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/network_connections/methods/delete'
    network_connections_health_details_list:
      id: azure.dev_center.network_connections_health_details_list
      name: network_connections_health_details_list
      title: network_connections_health_details_list
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1networkConnections~1{networkConnectionName}~1healthChecks?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/network_connections_health_details_list/methods/list'
        insert: []
        update: []
        delete: []
    network_connections_health_details:
      id: azure.dev_center.network_connections_health_details
      name: network_connections_health_details
      title: network_connections_health_details
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1networkConnections~1{networkConnectionName}~1healthChecks~1latest?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/network_connections_health_details/methods/get'
        insert: []
        update: []
        delete: []
    network_connections_outbound_network_dependencies_endpoints:
      id: azure.dev_center.network_connections_outbound_network_dependencies_endpoints
      name: network_connections_outbound_network_dependencies_endpoints
      title: network_connections_outbound_network_dependencies_endpoints
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1networkConnections~1{networkConnectionName}~1outboundNetworkDependenciesEndpoints?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/network_connections_outbound_network_dependencies_endpoints/methods/list'
        insert: []
        update: []
        delete: []
    plans:
      id: azure.dev_center.plans
      name: plans
      title: plans
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DevCenter~1plans?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1plans?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1plans~1{planName}?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1plans~1{planName}?api-version=2024-05-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1plans~1{planName}?api-version=2024-05-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1plans~1{planName}?api-version=2024-05-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/plans/methods/get'
          - $ref: '#/components/x-stackQL-resources/plans/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/plans/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/plans/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/plans/methods/delete'
    plan_members:
      id: azure.dev_center.plan_members
      name: plan_members
      title: plan_members
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1plans~1{planName}~1members?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1plans~1{planName}~1members~1{memberName}?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1plans~1{planName}~1members~1{memberName}?api-version=2024-05-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1plans~1{planName}~1members~1{memberName}?api-version=2024-05-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1plans~1{planName}~1members~1{memberName}?api-version=2024-05-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/plan_members/methods/get'
          - $ref: '#/components/x-stackQL-resources/plan_members/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/plan_members/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/plan_members/methods/delete'
    dev_centers:
      id: azure.dev_center.dev_centers
      name: dev_centers
      title: dev_centers
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DevCenter~1devcenters?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}?api-version=2024-05-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}?api-version=2024-05-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}?api-version=2024-05-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/dev_centers/methods/get'
          - $ref: '#/components/x-stackQL-resources/dev_centers/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/dev_centers/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/dev_centers/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/dev_centers/methods/delete'
    encryption_sets:
      id: azure.dev_center.encryption_sets
      name: encryption_sets
      title: encryption_sets
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1encryptionSets?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1encryptionSets~1{encryptionSetName}?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1encryptionSets~1{encryptionSetName}?api-version=2024-05-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1encryptionSets~1{encryptionSetName}?api-version=2024-05-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1encryptionSets~1{encryptionSetName}?api-version=2024-05-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/encryption_sets/methods/get'
          - $ref: '#/components/x-stackQL-resources/encryption_sets/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/encryption_sets/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/encryption_sets/methods/delete'
    projects:
      id: azure.dev_center.projects
      name: projects
      title: projects
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DevCenter~1projects?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}?api-version=2024-05-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}?api-version=2024-05-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}?api-version=2024-05-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/projects/methods/get'
          - $ref: '#/components/x-stackQL-resources/projects/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/projects/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/projects/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/projects/methods/delete'
    projects_inherited_settings:
      id: azure.dev_center.projects_inherited_settings
      name: projects_inherited_settings
      title: projects_inherited_settings
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1getInheritedSettings?api-version=2024-05-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/projects_inherited_settings/methods/get'
        insert: []
        update: []
        delete: []
    attached_networks:
      id: azure.dev_center.attached_networks
      name: attached_networks
      title: attached_networks
      methods:
        list_by_project:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1attachednetworks?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get_by_project:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1attachednetworks~1{attachedNetworkConnectionName}?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_dev_center:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1attachednetworks?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get_by_dev_center:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1attachednetworks~1{attachedNetworkConnectionName}?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1attachednetworks~1{attachedNetworkConnectionName}?api-version=2024-05-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1attachednetworks~1{attachedNetworkConnectionName}?api-version=2024-05-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/attached_networks/methods/list_by_project'
          - $ref: '#/components/x-stackQL-resources/attached_networks/methods/list_by_dev_center'
        insert:
          - $ref: '#/components/x-stackQL-resources/attached_networks/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/attached_networks/methods/delete'
    project_catalogs:
      id: azure.dev_center.project_catalogs
      name: project_catalogs
      title: project_catalogs
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1catalogs?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1catalogs~1{catalogName}?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1catalogs~1{catalogName}?api-version=2024-05-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1catalogs~1{catalogName}?api-version=2024-05-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1catalogs~1{catalogName}?api-version=2024-05-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sync:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1catalogs~1{catalogName}~1sync?api-version=2024-05-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        connect:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1catalogs~1{catalogName}~1connect?api-version=2024-05-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/project_catalogs/methods/get'
          - $ref: '#/components/x-stackQL-resources/project_catalogs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/project_catalogs/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/project_catalogs/methods/delete'
    environment_definitions:
      id: azure.dev_center.environment_definitions
      name: environment_definitions
      title: environment_definitions
      methods:
        list_by_project_catalog:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1catalogs~1{catalogName}~1environmentDefinitions?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get_by_project_catalog:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1catalogs~1{catalogName}~1environmentDefinitions~1{environmentDefinitionName}?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_catalog:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1catalogs~1{catalogName}~1environmentDefinitions?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1catalogs~1{catalogName}~1environmentDefinitions~1{environmentDefinitionName}?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/environment_definitions/methods/get'
          - $ref: '#/components/x-stackQL-resources/environment_definitions/methods/list_by_project_catalog'
          - $ref: '#/components/x-stackQL-resources/environment_definitions/methods/list_by_catalog'
        insert: []
        update: []
        delete: []
    project_catalog_environment_definitions_error_details:
      id: azure.dev_center.project_catalog_environment_definitions_error_details
      name: project_catalog_environment_definitions_error_details
      title: project_catalog_environment_definitions_error_details
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1catalogs~1{catalogName}~1environmentDefinitions~1{environmentDefinitionName}~1getErrorDetails?api-version=2024-05-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/project_catalog_environment_definitions_error_details/methods/get'
        insert: []
        update: []
        delete: []
    project_catalogs_sync_error_details:
      id: azure.dev_center.project_catalogs_sync_error_details
      name: project_catalogs_sync_error_details
      title: project_catalogs_sync_error_details
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1catalogs~1{catalogName}~1getSyncErrorDetails?api-version=2024-05-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/project_catalogs_sync_error_details/methods/get'
        insert: []
        update: []
        delete: []
    galleries:
      id: azure.dev_center.galleries
      name: galleries
      title: galleries
      methods:
        list_by_dev_center:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1galleries?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1galleries~1{galleryName}?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1galleries~1{galleryName}?api-version=2024-05-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1galleries~1{galleryName}?api-version=2024-05-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/galleries/methods/get'
          - $ref: '#/components/x-stackQL-resources/galleries/methods/list_by_dev_center'
        insert:
          - $ref: '#/components/x-stackQL-resources/galleries/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/galleries/methods/delete'
    images:
      id: azure.dev_center.images
      name: images
      title: images
      methods:
        list_by_dev_center:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1images?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_gallery:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1galleries~1{galleryName}~1images?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1galleries~1{galleryName}~1images~1{imageName}?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/images/methods/get'
          - $ref: '#/components/x-stackQL-resources/images/methods/list_by_gallery'
          - $ref: '#/components/x-stackQL-resources/images/methods/list_by_dev_center'
        insert: []
        update: []
        delete: []
    image_versions:
      id: azure.dev_center.image_versions
      name: image_versions
      title: image_versions
      methods:
        list_by_image:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1galleries~1{galleryName}~1images~1{imageName}~1versions?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1galleries~1{galleryName}~1images~1{imageName}~1versions~1{versionName}?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/image_versions/methods/get'
          - $ref: '#/components/x-stackQL-resources/image_versions/methods/list_by_image'
        insert: []
        update: []
        delete: []
    catalogs:
      id: azure.dev_center.catalogs
      name: catalogs
      title: catalogs
      methods:
        list_by_dev_center:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1catalogs?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1catalogs~1{catalogName}?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1catalogs~1{catalogName}?api-version=2024-05-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1catalogs~1{catalogName}?api-version=2024-05-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1catalogs~1{catalogName}?api-version=2024-05-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sync:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1catalogs~1{catalogName}~1sync?api-version=2024-05-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        connect:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1catalogs~1{catalogName}~1connect?api-version=2024-05-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/catalogs/methods/get'
          - $ref: '#/components/x-stackQL-resources/catalogs/methods/list_by_dev_center'
        insert:
          - $ref: '#/components/x-stackQL-resources/catalogs/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/catalogs/methods/delete'
    catalogs_sync_error_details:
      id: azure.dev_center.catalogs_sync_error_details
      name: catalogs_sync_error_details
      title: catalogs_sync_error_details
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1catalogs~1{catalogName}~1getSyncErrorDetails?api-version=2024-05-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/catalogs_sync_error_details/methods/get'
        insert: []
        update: []
        delete: []
    environment_types:
      id: azure.dev_center.environment_types
      name: environment_types
      title: environment_types
      methods:
        list_by_dev_center:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1environmentTypes?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1environmentTypes~1{environmentTypeName}?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1environmentTypes~1{environmentTypeName}?api-version=2024-05-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1environmentTypes~1{environmentTypeName}?api-version=2024-05-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1environmentTypes~1{environmentTypeName}?api-version=2024-05-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/environment_types/methods/get'
          - $ref: '#/components/x-stackQL-resources/environment_types/methods/list_by_dev_center'
        insert:
          - $ref: '#/components/x-stackQL-resources/environment_types/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/environment_types/methods/delete'
    project_allowed_environment_types:
      id: azure.dev_center.project_allowed_environment_types
      name: project_allowed_environment_types
      title: project_allowed_environment_types
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1allowedEnvironmentTypes?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1allowedEnvironmentTypes~1{environmentTypeName}?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/project_allowed_environment_types/methods/get'
          - $ref: '#/components/x-stackQL-resources/project_allowed_environment_types/methods/list'
        insert: []
        update: []
        delete: []
    project_environment_types:
      id: azure.dev_center.project_environment_types
      name: project_environment_types
      title: project_environment_types
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1environmentTypes?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1environmentTypes~1{environmentTypeName}?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1environmentTypes~1{environmentTypeName}?api-version=2024-05-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1environmentTypes~1{environmentTypeName}?api-version=2024-05-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1environmentTypes~1{environmentTypeName}?api-version=2024-05-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/project_environment_types/methods/get'
          - $ref: '#/components/x-stackQL-resources/project_environment_types/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/project_environment_types/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/project_environment_types/methods/delete'
    dev_box_definitions:
      id: azure.dev_center.dev_box_definitions
      name: dev_box_definitions
      title: dev_box_definitions
      methods:
        list_by_dev_center:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1devboxdefinitions?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1devboxdefinitions~1{devBoxDefinitionName}?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1devboxdefinitions~1{devBoxDefinitionName}?api-version=2024-05-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1devboxdefinitions~1{devBoxDefinitionName}?api-version=2024-05-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1devboxdefinitions~1{devBoxDefinitionName}?api-version=2024-05-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_project:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1devboxdefinitions?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get_by_project:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1projects~1{projectName}~1devboxdefinitions~1{devBoxDefinitionName}?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/dev_box_definitions/methods/get'
          - $ref: '#/components/x-stackQL-resources/dev_box_definitions/methods/list_by_dev_center'
          - $ref: '#/components/x-stackQL-resources/dev_box_definitions/methods/list_by_project'
        insert:
          - $ref: '#/components/x-stackQL-resources/dev_box_definitions/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/dev_box_definitions/methods/delete'
    operations:
      id: azure.dev_center.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.DevCenter~1operations?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete: []
    operation_statuses:
      id: azure.dev_center.operation_statuses
      name: operation_statuses
      title: operation_statuses
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DevCenter~1locations~1{location}~1operationStatuses~1{operationId}?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operation_statuses/methods/get'
        insert: []
        update: []
        delete: []
    usages:
      id: azure.dev_center.usages
      name: usages
      title: usages
      methods:
        list_by_location:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DevCenter~1locations~1{location}~1usages?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/usages/methods/list_by_location'
        insert: []
        update: []
        delete: []
    check_name_availability:
      id: azure.dev_center.check_name_availability
      name: check_name_availability
      title: check_name_availability
      methods:
        execute:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DevCenter~1checkNameAvailability?api-version=2024-05-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    check_scoped_name_availability:
      id: azure.dev_center.check_scoped_name_availability
      name: check_scoped_name_availability
      title: check_scoped_name_availability
      methods:
        execute:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DevCenter~1checkScopedNameAvailability?api-version=2024-05-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    customization_tasks:
      id: azure.dev_center.customization_tasks
      name: customization_tasks
      title: customization_tasks
      methods:
        list_by_catalog:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1catalogs~1{catalogName}~1tasks?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1catalogs~1{catalogName}~1tasks~1{taskName}?api-version=2024-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/customization_tasks/methods/get'
          - $ref: '#/components/x-stackQL-resources/customization_tasks/methods/list_by_catalog'
        insert: []
        update: []
        delete: []
    customization_tasks_error_details:
      id: azure.dev_center.customization_tasks_error_details
      name: customization_tasks_error_details
      title: customization_tasks_error_details
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1catalogs~1{catalogName}~1tasks~1{taskName}~1getErrorDetails?api-version=2024-05-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/customization_tasks_error_details/methods/get'
        insert: []
        update: []
        delete: []
    environment_definitions_error_details:
      id: azure.dev_center.environment_definitions_error_details
      name: environment_definitions_error_details
      title: environment_definitions_error_details
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevCenter~1devcenters~1{devCenterName}~1catalogs~1{catalogName}~1environmentDefinitions~1{environmentDefinitionName}~1getErrorDetails?api-version=2024-05-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/environment_definitions_error_details/methods/get'
        insert: []
        update: []
        delete: []
paths:
  /subscriptions/{subscriptionId}/providers/Microsoft.DevCenter/skus?api-version=2024-05-01-preview:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/TopParameter'
    get:
      tags:
        - SKUs
      description: Lists the Microsoft.DevCenter SKUs available in a subscription
      operationId: Skus_ListBySubscription
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkuListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/pools?api-version=2024-05-01-preview:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/ProjectNameParameter'
      - $ref: '#/components/parameters/TopParameter'
    get:
      tags:
        - Pools
      description: Lists pools for a project
      operationId: Pools_ListByProject
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoolListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/pools/{poolName}?api-version=2024-05-01-preview:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/ProjectNameParameter'
      - $ref: '#/components/parameters/PoolNameParameter'
    get:
      tags:
        - Pools
      description: Gets a machine pool
      operationId: Pools_Get
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pool'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Pools
      description: Creates or updates a machine pool
      operationId: Pools_CreateOrUpdate
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      requestBody:
        description: Represents a machine pool
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pool'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pool'
        '201':
          description: Created. Operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pool'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Pools
      description: Partially updates a machine pool
      operationId: Pools_Update
      requestBody:
        description: Represents a machine pool
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PoolUpdate'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pool'
        '202':
          description: Accepted. Operation will complete asynchronously
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Pools
      description: Deletes a machine pool
      operationId: Pools_Delete
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      responses:
        '202':
          description: Accepted. Operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/pools/{poolName}/runHealthChecks?api-version=2024-05-01-preview:
    post:
      tags:
        - Pools
      description: Triggers a refresh of the pool status.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
        - $ref: '#/components/parameters/PoolNameParameter'
      operationId: Pools_RunHealthChecks
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      responses:
        '202':
          description: Accepted. Initiating pool status refresh.
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/pools/{poolName}/schedules?api-version=2024-05-01-preview:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/ProjectNameParameter'
      - $ref: '#/components/parameters/PoolNameParameter'
      - $ref: '#/components/parameters/TopParameter'
    get:
      tags:
        - Schedules
      description: Lists schedules for a pool
      operationId: Schedules_ListByPool
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/pools/{poolName}/schedules/{scheduleName}?api-version=2024-05-01-preview:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/ProjectNameParameter'
      - $ref: '#/components/parameters/PoolNameParameter'
      - $ref: '#/components/parameters/ScheduleNameParameter'
      - $ref: '#/components/parameters/TopParameter'
    get:
      tags:
        - Schedules
      description: Gets a schedule resource.
      operationId: Schedules_Get
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Schedules
      description: Creates or updates a Schedule.
      operationId: Schedules_CreateOrUpdate
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      requestBody:
        description: Represents a scheduled task
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        '201':
          description: Created. Operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Schedules
      description: Partially updates a Scheduled.
      operationId: Schedules_Update
      requestBody:
        description: Represents a scheduled task.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleUpdate'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        '202':
          description: Accepted. Operation will complete asynchronously
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Schedules
      description: Deletes a Scheduled.
      operationId: Schedules_Delete
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      responses:
        '202':
          description: Accepted. Operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.DevCenter/networkConnections?api-version=2024-05-01-preview:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/TopParameter'
    get:
      tags:
        - Network Connections
      description: Lists network connections in a subscription
      operationId: NetworkConnections_ListBySubscription
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkConnectionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/networkConnections?api-version=2024-05-01-preview:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/TopParameter'
    get:
      tags:
        - Network Connections
      description: Lists network connections in a resource group
      operationId: NetworkConnections_ListByResourceGroup
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkConnectionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/networkConnections/{networkConnectionName}?api-version=2024-05-01-preview:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/NetworkConnectionName'
    get:
      tags:
        - Network Connections
      description: Gets a network connection resource
      operationId: NetworkConnections_Get
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Network Connections
      description: Creates or updates a Network Connections resource
      operationId: NetworkConnections_CreateOrUpdate
      requestBody:
        description: Represents network connection
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkConnection'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      responses:
        '200':
          description: Accepted. Operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkConnection'
        '201':
          description: Created. Operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Network Connections
      description: Partially updates a Network Connection
      operationId: NetworkConnections_Update
      requestBody:
        description: Represents network connection
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkConnectionUpdate'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkConnection'
        '202':
          description: Accepted. Operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Network Connections
      description: Deletes a Network Connections resource
      operationId: NetworkConnections_Delete
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      responses:
        '202':
          description: Accepted. Operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/networkConnections/{networkConnectionName}/healthChecks?api-version=2024-05-01-preview:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/TopParameter'
      - $ref: '#/components/parameters/NetworkConnectionName'
    get:
      tags:
        - Network Connections
      description: Lists health check status details
      operationId: NetworkConnections_ListHealthDetails
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckStatusDetailsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/networkConnections/{networkConnectionName}/healthChecks/latest?api-version=2024-05-01-preview:
    get:
      tags:
        - Network Connections
      description: Gets health check status details.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkConnectionName'
      operationId: NetworkConnections_GetHealthDetails
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckStatusDetails'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/networkConnections/{networkConnectionName}/runHealthChecks?api-version=2024-05-01-preview:
    post:
      tags:
        - Network Connection
      description: Triggers a new health check run. The execution and health check result can be tracked via the network Connection health check details
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkConnectionName'
      operationId: NetworkConnections_RunHealthChecks
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      responses:
        '202':
          description: Accepted. Initiating health checks.
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/networkConnections/{networkConnectionName}/outboundNetworkDependenciesEndpoints?api-version=2024-05-01-preview:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/TopParameter'
      - $ref: '#/components/parameters/NetworkConnectionName'
    get:
      tags:
        - Network Connection
      operationId: NetworkConnections_ListOutboundNetworkDependenciesEndpoints
      description: Lists the endpoints that agents may call as part of Dev Box service administration. These FQDNs should be allowed for outbound access in order for the Dev Box service to function.
      responses:
        '200':
          description: The operation was successful. The response contains a list of outbound network dependencies.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboundEnvironmentEndpointCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.DevCenter/plans?api-version=2024-05-01-preview:
    get:
      tags:
        - Plans
      description: Lists all devcenter plans in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/TopParameter'
      operationId: Plans_ListBySubscription
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/plans?api-version=2024-05-01-preview:
    get:
      tags:
        - Plans
      description: Lists all devcenter plans in a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TopParameter'
      operationId: Plans_ListByResourceGroup
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/plans/{planName}?api-version=2024-05-01-preview:
    get:
      tags:
        - Plans
      description: Gets a devcenter plan.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PlanNameParameter'
      operationId: Plans_Get
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevCenterPlan'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Plans
      description: Creates or updates a devcenter plan resource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PlanNameParameter'
      requestBody:
        description: Represents a devcenter plan.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DevCenterPlan'
      operationId: Plans_CreateOrUpdate
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevCenterPlan'
        '201':
          description: Created. The request will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevCenterPlan'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Plans
      description: Partially updates a devcenter plan.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PlanNameParameter'
      requestBody:
        description: Updatable devcenter plan properties.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanUpdate'
      operationId: Plans_Update
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevCenterPlan'
        '202':
          description: Accepted. The request will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Plans
      description: Deletes a devcenter plan
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PlanNameParameter'
      operationId: Plans_Delete
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      responses:
        '202':
          description: Accepted. Operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/plans/{planName}/members?api-version=2024-05-01-preview:
    get:
      tags:
        - Plans
      description: Lists all of the members assigned to a devcenter plan.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PlanNameParameter'
        - $ref: '#/components/parameters/TopParameter'
      operationId: PlanMembers_List
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanMembersListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/plans/{planName}/members/{memberName}?api-version=2024-05-01-preview:
    get:
      tags:
        - Plans
      description: Gets a devcenter plan member.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PlanNameParameter'
        - $ref: '#/components/parameters/PlanMemberNameParameter'
      operationId: PlanMembers_Get
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevCenterPlanMember'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Plans
      description: Creates or updates a devcenter plan member resource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PlanNameParameter'
        - $ref: '#/components/parameters/PlanMemberNameParameter'
      requestBody:
        description: Represents a devcenter plan.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DevCenterPlanMember'
      operationId: PlanMembers_CreateOrUpdate
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevCenterPlanMember'
        '201':
          description: Created. The request will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevCenterPlanMember'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Plans
      description: Partially updates a devcenter plan.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PlanNameParameter'
        - $ref: '#/components/parameters/PlanMemberNameParameter'
      requestBody:
        description: Updatable devcenter plan properties.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanMemberUpdate'
      operationId: PlanMembers_Update
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevCenterPlanMember'
        '202':
          description: Accepted. The request will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Plans
      description: Deletes a devcenter plan member
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PlanNameParameter'
        - $ref: '#/components/parameters/PlanMemberNameParameter'
      operationId: PlanMembers_Delete
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      responses:
        '202':
          description: Accepted. Operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.DevCenter/devcenters?api-version=2024-05-01-preview:
    get:
      tags:
        - DevCenters
      description: Lists all devcenters in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/TopParameter'
      operationId: DevCenters_ListBySubscription
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevCenterListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters?api-version=2024-05-01-preview:
    get:
      tags:
        - DevCenters
      description: Lists all devcenters in a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TopParameter'
      operationId: DevCenters_ListByResourceGroup
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevCenterListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}?api-version=2024-05-01-preview:
    get:
      tags:
        - DevCenters
      description: Gets a devcenter.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
      operationId: DevCenters_Get
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevCenter'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - DevCenters
      description: Creates or updates a devcenter resource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
      requestBody:
        description: Represents a devcenter.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DevCenter'
      operationId: DevCenters_CreateOrUpdate
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevCenter'
        '201':
          description: Created. The request will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevCenter'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - DevCenters
      description: Partially updates a devcenter.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
      requestBody:
        description: Updatable devcenter properties.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DevCenterUpdate'
      operationId: DevCenters_Update
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevCenter'
        '202':
          description: Accepted. The request will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - DevCenters
      description: Deletes a devcenter
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
      operationId: DevCenters_Delete
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      responses:
        '202':
          description: Accepted. Operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/encryptionSets?api-version=2024-05-01-preview:
    get:
      tags:
        - EncryptionSets
      description: Lists all encryption sets in the devcenter.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/TopParameter'
      operationId: EncryptionSets_List
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EncryptionSetListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/encryptionSets/{encryptionSetName}?api-version=2024-05-01-preview:
    get:
      tags:
        - EncryptionSets
      description: Gets a devcenter encryption set.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/DevCenterEncryptionSetNameParameter'
      operationId: EncryptionSets_Get
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevCenterEncryptionSet'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - EncryptionSets
      description: Creates or updates a devcenter encryption set resource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/DevCenterEncryptionSetNameParameter'
      requestBody:
        description: Represents a devcenter encryption set.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DevCenterEncryptionSet'
      operationId: EncryptionSets_CreateOrUpdate
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevCenterEncryptionSet'
        '201':
          description: Created. The request will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevCenterEncryptionSet'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - EncryptionSets
      description: Partially updates a devcenter encryption set.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/DevCenterEncryptionSetNameParameter'
      requestBody:
        description: Updatable devcenter encryption set properties.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EncryptionSetUpdate'
      operationId: EncryptionSets_Update
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevCenterEncryptionSet'
        '202':
          description: Accepted. The request will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - EncryptionSets
      description: Deletes a devcenter encryption set
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/DevCenterEncryptionSetNameParameter'
      operationId: EncryptionSets_Delete
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      responses:
        '202':
          description: Accepted. Operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.DevCenter/projects?api-version=2024-05-01-preview:
    get:
      tags:
        - Projects
      description: Lists all projects in the subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/TopParameter'
      operationId: Projects_ListBySubscription
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects?api-version=2024-05-01-preview:
    get:
      tags:
        - Projects
      description: Lists all projects in the resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TopParameter'
      operationId: Projects_ListByResourceGroup
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}?api-version=2024-05-01-preview:
    get:
      tags:
        - Projects
      description: Gets a specific project.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
      operationId: Projects_Get
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Projects
      description: Creates or updates a project.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
      requestBody:
        description: Represents a project.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      operationId: Projects_CreateOrUpdate
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      responses:
        '200':
          description: Succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '201':
          description: Accepted. Operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Projects
      description: Partially updates a project.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
      requestBody:
        description: Updatable project properties.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectUpdate'
      operationId: Projects_Update
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      responses:
        '200':
          description: Succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '202':
          description: Accepted. Operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Projects
      description: Deletes a project resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
      operationId: Projects_Delete
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      responses:
        '202':
          description: Accepted. Operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/getInheritedSettings?api-version=2024-05-01-preview:
    post:
      tags:
        - Projects
      description: Gets applicable inherited settings for this project.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
      operationId: Projects_GetInheritedSettings
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InheritedSettingsForProject'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/attachednetworks?api-version=2024-05-01-preview:
    get:
      tags:
        - Attached NetworkConnections.
      description: Lists the attached NetworkConnections for a Project.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
        - $ref: '#/components/parameters/TopParameter'
      operationId: AttachedNetworks_ListByProject
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachedNetworkListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/attachednetworks/{attachedNetworkConnectionName}?api-version=2024-05-01-preview:
    get:
      tags:
        - Attached NetworkConnections
      description: Gets an attached NetworkConnection.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
        - $ref: '#/components/parameters/AttachedNetworkConnectionNameParameter'
      operationId: AttachedNetworks_GetByProject
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachedNetworkConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/catalogs?api-version=2024-05-01-preview:
    get:
      tags:
        - Project Catalogs
      description: Lists the catalogs associated with a project.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
        - $ref: '#/components/parameters/TopParameter'
      operationId: ProjectCatalogs_List
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/catalogs/{catalogName}?api-version=2024-05-01-preview:
    get:
      tags:
        - Project Catalogs
      description: Gets an associated project catalog.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
        - $ref: '#/components/parameters/CatalogNameParameter'
      operationId: ProjectCatalogs_Get
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Catalog'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Project Catalogs
      description: Creates or updates a project catalog.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
        - $ref: '#/components/parameters/CatalogNameParameter'
      requestBody:
        description: Represents a catalog.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Catalog'
      operationId: ProjectCatalogs_CreateOrUpdate
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Catalog'
        '201':
          description: Accepted. Operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Catalog'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    patch:
      tags:
        - Project Catalogs
      description: Partially updates a project catalog.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
        - $ref: '#/components/parameters/CatalogNameParameter'
      requestBody:
        description: Updatable project catalog properties.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogUpdate'
      operationId: ProjectCatalogs_Patch
      responses:
        '200':
          description: The resource was updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Catalog'
        '202':
          description: The request will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - Project Catalogs
      description: Deletes a project catalog resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
        - $ref: '#/components/parameters/CatalogNameParameter'
      operationId: ProjectCatalogs_Delete
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      responses:
        '202':
          description: Accepted. Operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/catalogs/{catalogName}/environmentDefinitions?api-version=2024-05-01-preview:
    get:
      tags:
        - Environment Definitions
      description: Lists the environment definitions in this project catalog.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
        - $ref: '#/components/parameters/CatalogNameParameter'
      operationId: EnvironmentDefinitions_ListByProjectCatalog
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentDefinitionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/catalogs/{catalogName}/environmentDefinitions/{environmentDefinitionName}?api-version=2024-05-01-preview:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/ProjectNameParameter'
      - $ref: '#/components/parameters/CatalogNameParameter'
      - $ref: '#/components/parameters/EnvironmentDefinitionNameParameter'
    get:
      tags:
        - Environment Definitions
      description: Gets an environment definition from the catalog.
      operationId: EnvironmentDefinitions_GetByProjectCatalog
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentDefinition'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/catalogs/{catalogName}/environmentDefinitions/{environmentDefinitionName}/getErrorDetails?api-version=2024-05-01-preview:
    post:
      tags:
        - Environment Definitions
      description: Gets Environment Definition error details
      operationId: ProjectCatalogEnvironmentDefinitions_GetErrorDetails
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
        - $ref: '#/components/parameters/CatalogNameParameter'
        - $ref: '#/components/parameters/EnvironmentDefinitionNameParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogResourceValidationErrorDetails'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/catalogs/{catalogName}/getSyncErrorDetails?api-version=2024-05-01-preview:
    post:
      tags:
        - Project Catalogs
      description: Gets project catalog synchronization error details
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
        - $ref: '#/components/parameters/CatalogNameParameter'
      operationId: ProjectCatalogs_GetSyncErrorDetails
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncErrorDetails'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/catalogs/{catalogName}/sync?api-version=2024-05-01-preview:
    post:
      tags:
        - Project Catalogs
      description: Syncs templates for a template source.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
        - $ref: '#/components/parameters/CatalogNameParameter'
      operationId: ProjectCatalogs_Sync
      responses:
        '202':
          description: Accepted. Operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/catalogs/{catalogName}/connect?api-version=2024-05-01-preview:
    post:
      tags:
        - Project Catalogs
      description: Connects a project catalog to enable syncing.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
        - $ref: '#/components/parameters/CatalogNameParameter'
      operationId: ProjectCatalogs_Connect
      responses:
        '202':
          description: Accepted. Operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/galleries?api-version=2024-05-01-preview:
    get:
      tags:
        - Galleries
      description: Lists galleries for a devcenter.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/TopParameter'
      operationId: Galleries_ListByDevCenter
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GalleryListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/galleries/{galleryName}?api-version=2024-05-01-preview:
    get:
      tags:
        - Galleries
      description: Gets a gallery
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/GalleryNameParameter'
      operationId: Galleries_Get
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gallery'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Galleries
      description: Creates or updates a gallery.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/GalleryNameParameter'
      requestBody:
        description: Represents a gallery.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Gallery'
      operationId: Galleries_CreateOrUpdate
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gallery'
        '201':
          description: Accepted. Operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gallery'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - Galleries
      description: Deletes a gallery resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/GalleryNameParameter'
      operationId: Galleries_Delete
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      responses:
        '202':
          description: Accepted. Operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/images?api-version=2024-05-01-preview:
    get:
      tags:
        - Images
      description: Lists images for a devcenter.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/TopParameter'
      operationId: Images_ListByDevCenter
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/galleries/{galleryName}/images?api-version=2024-05-01-preview:
    get:
      tags:
        - Images
      description: Lists images for a gallery.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/GalleryNameParameter'
        - $ref: '#/components/parameters/TopParameter'
      operationId: Images_ListByGallery
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/galleries/{galleryName}/images/{imageName}?api-version=2024-05-01-preview:
    get:
      tags:
        - Images
      description: Gets a gallery image.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/GalleryNameParameter'
        - $ref: '#/components/parameters/ImageNameParameter'
      operationId: Images_Get
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/galleries/{galleryName}/images/{imageName}/versions?api-version=2024-05-01-preview:
    get:
      tags:
        - Image Versions
      description: Lists versions for an image.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/GalleryNameParameter'
        - $ref: '#/components/parameters/ImageNameParameter'
      operationId: ImageVersions_ListByImage
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageVersionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/galleries/{galleryName}/images/{imageName}/versions/{versionName}?api-version=2024-05-01-preview:
    get:
      tags:
        - Image Versions
      description: Gets an image version.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/GalleryNameParameter'
        - $ref: '#/components/parameters/ImageNameParameter'
        - $ref: '#/components/parameters/VersionNameParameter'
      operationId: ImageVersions_Get
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageVersion'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/attachednetworks?api-version=2024-05-01-preview:
    get:
      tags:
        - Attached NetworkConnections.
      description: Lists the attached NetworkConnections for a DevCenter.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/TopParameter'
      operationId: AttachedNetworks_ListByDevCenter
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachedNetworkListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/attachednetworks/{attachedNetworkConnectionName}?api-version=2024-05-01-preview:
    get:
      tags:
        - Attached NetworkConnections
      description: Gets an attached NetworkConnection.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/AttachedNetworkConnectionNameParameter'
      operationId: AttachedNetworks_GetByDevCenter
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachedNetworkConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Attached NetworkConnections
      description: Creates or updates an attached NetworkConnection.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/AttachedNetworkConnectionNameParameter'
      requestBody:
        description: Represents an attached NetworkConnection.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachedNetworkConnection'
      operationId: AttachedNetworks_CreateOrUpdate
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachedNetworkConnection'
        '201':
          description: Accepted. Operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachedNetworkConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - Attached NetworkConnections
      description: Un-attach a NetworkConnection.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/AttachedNetworkConnectionNameParameter'
      operationId: AttachedNetworks_Delete
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      responses:
        '202':
          description: Accepted. Operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/catalogs?api-version=2024-05-01-preview:
    get:
      tags:
        - Catalogs
      description: Lists catalogs for a devcenter.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/TopParameter'
      operationId: Catalogs_ListByDevCenter
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/catalogs/{catalogName}?api-version=2024-05-01-preview:
    get:
      tags:
        - Catalogs
      description: Gets a catalog
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/CatalogNameParameter'
      operationId: Catalogs_Get
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Catalog'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Catalogs
      description: Creates or updates a catalog.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/CatalogNameParameter'
      requestBody:
        description: Represents a catalog.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Catalog'
      operationId: Catalogs_CreateOrUpdate
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Catalog'
        '201':
          description: Accepted. Operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Catalog'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    patch:
      tags:
        - Catalogs
      description: Partially updates a catalog.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/CatalogNameParameter'
      requestBody:
        description: Updatable catalog properties.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogUpdate'
      operationId: Catalogs_Update
      responses:
        '200':
          description: The resource was updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Catalog'
        '202':
          description: The request will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - Catalogs
      description: Deletes a catalog resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/CatalogNameParameter'
      operationId: Catalogs_Delete
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      responses:
        '202':
          description: Accepted. Operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/catalogs/{catalogName}/getSyncErrorDetails?api-version=2024-05-01-preview:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/DevCenterNameParameter'
      - $ref: '#/components/parameters/CatalogNameParameter'
    post:
      tags:
        - Catalogs
      description: Gets catalog synchronization error details
      operationId: Catalogs_GetSyncErrorDetails
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncErrorDetails'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/catalogs/{catalogName}/sync?api-version=2024-05-01-preview:
    post:
      tags:
        - Catalogs
      description: Syncs templates for a template source.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/CatalogNameParameter'
      operationId: Catalogs_Sync
      responses:
        '202':
          description: Accepted. Operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/catalogs/{catalogName}/connect?api-version=2024-05-01-preview:
    post:
      tags:
        - Catalogs
      description: Connects a catalog to enable syncing.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/CatalogNameParameter'
      operationId: Catalogs_Connect
      responses:
        '202':
          description: Accepted. Operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/environmentTypes?api-version=2024-05-01-preview:
    get:
      tags:
        - Environment Types
      description: Lists environment types for the devcenter.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/TopParameter'
      operationId: EnvironmentTypes_ListByDevCenter
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentTypeListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/environmentTypes/{environmentTypeName}?api-version=2024-05-01-preview:
    get:
      tags:
        - Environment Types
      description: Gets an environment type.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/EnvironmentTypeNameParameter'
      operationId: EnvironmentTypes_Get
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentType'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Environment Types
      description: Creates or updates an environment type.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/EnvironmentTypeNameParameter'
      requestBody:
        description: Represents an Environment Type.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentType'
      operationId: EnvironmentTypes_CreateOrUpdate
      responses:
        '200':
          description: Succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentType'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentType'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Environment Types
      description: Partially updates an environment type.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/EnvironmentTypeNameParameter'
      requestBody:
        description: Updatable environment type properties.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentTypeUpdate'
      operationId: EnvironmentTypes_Update
      responses:
        '200':
          description: The resource was updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentType'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Environment Types
      description: Deletes an environment type.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/EnvironmentTypeNameParameter'
      operationId: EnvironmentTypes_Delete
      responses:
        '200':
          description: Resource was deleted.
        '204':
          description: Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/allowedEnvironmentTypes?api-version=2024-05-01-preview:
    get:
      tags:
        - Environment Types
      description: Lists allowed environment types for a project.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
        - $ref: '#/components/parameters/TopParameter'
      operationId: ProjectAllowedEnvironmentTypes_List
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllowedEnvironmentTypeListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/allowedEnvironmentTypes/{environmentTypeName}?api-version=2024-05-01-preview:
    get:
      tags:
        - Environment Types
      description: Gets an allowed environment type.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
        - $ref: '#/components/parameters/EnvironmentTypeNameParameter'
      operationId: ProjectAllowedEnvironmentTypes_Get
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllowedEnvironmentType'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/environmentTypes?api-version=2024-05-01-preview:
    get:
      tags:
        - Environment Types
      description: Lists environment types for a project.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
        - $ref: '#/components/parameters/TopParameter'
      operationId: ProjectEnvironmentTypes_List
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectEnvironmentTypeListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/environmentTypes/{environmentTypeName}?api-version=2024-05-01-preview:
    get:
      tags:
        - Environment Types
      description: Gets a project environment type.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
        - $ref: '#/components/parameters/EnvironmentTypeNameParameter'
      operationId: ProjectEnvironmentTypes_Get
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectEnvironmentType'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Environment Types
      description: Creates or updates a project environment type.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
        - $ref: '#/components/parameters/EnvironmentTypeNameParameter'
      requestBody:
        description: Represents a Project Environment Type.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectEnvironmentType'
      operationId: ProjectEnvironmentTypes_CreateOrUpdate
      responses:
        '200':
          description: Succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectEnvironmentType'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectEnvironmentType'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Environment Types
      description: Partially updates a project environment type.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
        - $ref: '#/components/parameters/EnvironmentTypeNameParameter'
      requestBody:
        description: Updatable project environment type properties.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectEnvironmentTypeUpdate'
      operationId: ProjectEnvironmentTypes_Update
      responses:
        '200':
          description: The resource was updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectEnvironmentType'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Environment Types
      description: Deletes a project environment type.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
        - $ref: '#/components/parameters/EnvironmentTypeNameParameter'
      operationId: ProjectEnvironmentTypes_Delete
      responses:
        '200':
          description: Resource was deleted.
        '204':
          description: Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/devboxdefinitions?api-version=2024-05-01-preview:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/DevCenterNameParameter'
      - $ref: '#/components/parameters/TopParameter'
    get:
      tags:
        - Dev Box Definitions
      description: List Dev Box definitions for a devcenter.
      operationId: DevBoxDefinitions_ListByDevCenter
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevBoxDefinitionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/devboxdefinitions/{devBoxDefinitionName}?api-version=2024-05-01-preview:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/DevCenterNameParameter'
      - $ref: '#/components/parameters/DevBoxDefinitionName'
    get:
      tags:
        - Dev Box Definitions
      description: Gets a Dev Box definition
      operationId: DevBoxDefinitions_Get
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevBoxDefinition'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Dev Box Definitions
      description: Creates or updates a Dev Box definition.
      operationId: DevBoxDefinitions_CreateOrUpdate
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      requestBody:
        description: Represents a Dev Box definition.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DevBoxDefinition'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevBoxDefinition'
        '201':
          description: Created. The operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevBoxDefinition'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Dev Box Definitions
      description: Partially updates a Dev Box definition.
      operationId: DevBoxDefinitions_Update
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      requestBody:
        description: Represents a Dev Box definition.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DevBoxDefinitionUpdate'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevBoxDefinition'
        '202':
          description: Accepted. The operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Dev Box Definitions
      description: Deletes a Dev Box definition
      operationId: DevBoxDefinitions_Delete
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      responses:
        '202':
          description: Accepted. Operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/devboxdefinitions?api-version=2024-05-01-preview:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/ProjectNameParameter'
      - $ref: '#/components/parameters/TopParameter'
    get:
      tags:
        - Dev Box Definitions
      description: List Dev Box definitions configured for a project.
      operationId: DevBoxDefinitions_ListByProject
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevBoxDefinitionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/devboxdefinitions/{devBoxDefinitionName}?api-version=2024-05-01-preview:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/ProjectNameParameter'
      - $ref: '#/components/parameters/DevBoxDefinitionName'
    get:
      tags:
        - Dev Box Definitions
      description: Gets a Dev Box definition configured for a project
      operationId: DevBoxDefinitions_GetByProject
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevBoxDefinition'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.DevCenter/operations?api-version=2024-05-01-preview:
    get:
      tags:
        - Operations
      description: Lists all of the available resource provider operations.
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Resource Provider error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.DevCenter/locations/{location}/operationStatuses/{operationId}?api-version=2024-05-01-preview:
    get:
      description: Gets the current status of an async operation.
      operationId: OperationStatuses_Get
      summary: Get Operation Status
      tags:
        - OperationStatus
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/OperationIdParameter'
      responses:
        '200':
          description: The requested operation status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
        '202':
          description: The requested operation status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          headers:
            Location:
              schema:
                type: string
        default:
          description: Resource Provider error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.DevCenter/locations/{location}/usages?api-version=2024-05-01-preview:
    get:
      operationId: Usages_ListByLocation
      description: Lists the current usages and limits in this location for the provided subscription.
      tags:
        - Usages
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
      responses:
        '200':
          description: The request was successful; a list of usages is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsagesResult'
        default:
          description: The default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.DevCenter/checkNameAvailability?api-version=2024-05-01-preview:
    post:
      tags:
        - CheckNameAvailability
      operationId: CheckNameAvailability_Execute
      description: Check the availability of name for resource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The required parameters for checking if resource name is available.
        required: true
        x-ms-requestBody-name: nameAvailabilityRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckNameAvailabilityRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckNameAvailabilityResponse'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.DevCenter/checkScopedNameAvailability?api-version=2024-05-01-preview:
    post:
      tags:
        - CheckScopedNameAvailability
      operationId: CheckScopedNameAvailability_Execute
      description: Check the availability of name for resource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The required parameters for checking if resource name is available.
        required: true
        x-ms-requestBody-name: nameAvailabilityRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckScopedNameAvailabilityRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckNameAvailabilityResponse'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/catalogs/{catalogName}/tasks?api-version=2024-05-01-preview:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/DevCenterNameParameter'
      - $ref: '#/components/parameters/CatalogNameParameter'
      - $ref: '#/components/parameters/TopParameter'
    get:
      tags:
        - Customization Tasks
      description: List Tasks in the catalog.
      operationId: CustomizationTasks_ListByCatalog
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomizationTaskListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/catalogs/{catalogName}/tasks/{taskName}?api-version=2024-05-01-preview:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/DevCenterNameParameter'
      - $ref: '#/components/parameters/CatalogNameParameter'
      - $ref: '#/components/parameters/CustomizationTaskNameParameter'
    get:
      tags:
        - Customization Tasks
      description: Gets a Task from the catalog
      operationId: CustomizationTasks_Get
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomizationTask'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/catalogs/{catalogName}/tasks/{taskName}/getErrorDetails?api-version=2024-05-01-preview:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/DevCenterNameParameter'
      - $ref: '#/components/parameters/CatalogNameParameter'
      - $ref: '#/components/parameters/CustomizationTaskNameParameter'
    post:
      tags:
        - Customization Tasks
      description: Gets Customization Task error details
      operationId: CustomizationTasks_GetErrorDetails
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogResourceValidationErrorDetails'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/catalogs/{catalogName}/environmentDefinitions?api-version=2024-05-01-preview:
    get:
      tags:
        - Environment Definitions
      description: List environment definitions in the catalog.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DevCenterNameParameter'
        - $ref: '#/components/parameters/CatalogNameParameter'
        - $ref: '#/components/parameters/TopParameter'
      operationId: EnvironmentDefinitions_ListByCatalog
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentDefinitionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/catalogs/{catalogName}/environmentDefinitions/{environmentDefinitionName}?api-version=2024-05-01-preview:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/DevCenterNameParameter'
      - $ref: '#/components/parameters/CatalogNameParameter'
      - $ref: '#/components/parameters/EnvironmentDefinitionNameParameter'
    get:
      tags:
        - Environment Definitions
      description: Gets an environment definition from the catalog.
      operationId: EnvironmentDefinitions_Get
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentDefinition'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/catalogs/{catalogName}/environmentDefinitions/{environmentDefinitionName}/getErrorDetails?api-version=2024-05-01-preview:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/DevCenterNameParameter'
      - $ref: '#/components/parameters/CatalogNameParameter'
      - $ref: '#/components/parameters/EnvironmentDefinitionNameParameter'
    post:
      tags:
        - Environment Definitions
      description: Gets Environment Definition error details
      operationId: EnvironmentDefinitions_GetErrorDetails
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogResourceValidationErrorDetails'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
