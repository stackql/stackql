openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Network Management Client (Microsoft.Network)
  description: The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2022-08-29-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    ManagementGroupIdParameter:
      name: managementGroupId
      in: path
      description: The management group Id which uniquely identify the Microsoft Azure management group.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    NetworkManagerConnectionNameParameter:
      name: networkManagerConnectionName
      in: path
      description: Name for the network manager connection.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    NetworkManagerNameParameter:
      name: networkManagerName
      in: path
      description: The name of the network manager.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    NetworkGroupNameParameter:
      name: networkGroupName
      in: path
      description: The name of the network group.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    StaticMemberNameParameter:
      name: staticMemberName
      in: path
      description: The name of the static member.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ListTopParameter:
      name: $top
      in: query
      description: An optional query parameter which specifies the maximum number of records to be returned by the server.
      required: false
      x-ms-parameter-location: method
      schema:
        format: int32
        minimum: 1
        maximum: 20
        type: integer
    ListSkipTokenParameter:
      name: $skipToken
      in: query
      description: SkipToken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    ForceDeleteParameter:
      name: force
      in: query
      description: Deletes the resource even if it is part of a deployed configuration. If the configuration has been deployed, the service will do a cleanup deployment in the background, prior to the delete.
      required: false
      x-ms-parameter-location: method
      schema:
        type: boolean
    ResourceGroupName:
      name: resourceGroupName
      in: path
      description: The name of the resource group.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    BastionHostName:
      name: bastionHostName
      in: path
      description: The name of the Bastion Host.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SecurityConfigurationParameter:
      name: configurationName
      in: path
      description: The name of the network manager Security Configuration.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    RuleCollectionParameter:
      name: ruleCollectionName
      in: path
      description: The name of the network manager security Configuration rule collection.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SecurityConfigurationsRuleParameter:
      name: ruleName
      in: path
      description: The name of the rule.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
      required: true
      schema:
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: Client API version.
      required: true
      schema:
        type: string
    ApiVersionVmssParameter:
      name: api-version
      in: query
      description: Client API version.
      required: true
      schema:
        enum:
          - '2017-03-30'
        x-ms-enum:
          name: ApiVersion
          modelAsString: true
        type: string
    ScopeConnectionName:
      name: scopeConnectionName
      in: path
      description: Name for the cross-tenant connection.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    VirtualNetworkNameParameter:
      name: virtualNetworkName
      in: path
      description: The name of the virtual network.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ConnectivityConfigurationNameParameter:
      name: configurationName
      in: path
      description: The name of the network manager connectivity configuration.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    OperationResultIdParameter:
      name: operationResultId
      in: path
      description: The id of operation Result.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    NetworkManagerConnection:
      description: The Network Manager Connection resource
      properties:
        networkManagerId:
          type: string
          description: Network Manager Id.
        connectionState:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ConnectionState'
          description: Connection state.
        description:
          type: string
          description: A description of the network manager connection.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        systemData:
          readOnly: true
          description: The system metadata related to this resource.
          $ref: '#/components/schemas/SystemData'
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
      type: object
    NetworkManagerConnectionProperties:
      type: object
      properties:
        networkManagerId:
          type: string
          description: Network Manager Id.
        connectionState:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ConnectionState'
          description: Connection state.
        description:
          type: string
          description: A description of the network manager connection.
      description: Information about the network manager connection.
    NetworkManagerConnectionListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/NetworkManagerConnection'
          description: List of network manager connections.
        nextLink:
          type: string
          description: Gets the URL to get the next page of results.
      description: List of network manager connections.
    RoutePropertiesFormat:
      properties:
        addressPrefix:
          type: string
          description: The destination CIDR to which the route applies.
        nextHopType:
          $ref: '#/components/schemas/RouteNextHopType'
          description: The type of Azure hop the packet should be sent to.
        nextHopIpAddress:
          type: string
          description: The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the route resource.
        hasBgpOverride:
          type: boolean
          description: A value indicating whether this route overrides overlapping BGP routes regardless of LPM.
      required:
        - nextHopType
      description: Route resource.
      type: object
    Route:
      description: Route resource.
      properties:
        addressPrefix:
          type: string
          description: The destination CIDR to which the route applies.
        nextHopType:
          $ref: '#/components/schemas/RouteNextHopType'
          description: The type of Azure hop the packet should be sent to.
        nextHopIpAddress:
          type: string
          description: The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the route resource.
        hasBgpOverride:
          type: boolean
          description: A value indicating whether this route overrides overlapping BGP routes regardless of LPM.
        name:
          type: string
          description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          type: string
          description: The type of the resource.
        id:
          type: string
          description: Resource ID.
      type: object
    RouteTablePropertiesFormat:
      properties:
        routes:
          type: array
          items:
            $ref: '#/components/schemas/Route'
          description: Collection of routes contained within a route table.
        subnets:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Subnet'
          description: A collection of references to subnets.
        disableBgpRoutePropagation:
          type: boolean
          description: Whether to disable the routes learned by BGP on that route table. True means disable.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the route table resource.
        resourceGuid:
          type: string
          readOnly: true
          description: The resource GUID property of the route table.
      description: Route Table resource.
      type: object
    RouteTable:
      description: Route table resource.
      properties:
        routes:
          type: array
          items:
            $ref: '#/components/schemas/Route'
          description: Collection of routes contained within a route table.
        subnets:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Subnet'
          description: A collection of references to subnets.
        disableBgpRoutePropagation:
          type: boolean
          description: Whether to disable the routes learned by BGP on that route table. True means disable.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the route table resource.
        resourceGuid:
          type: string
          readOnly: true
          description: The resource GUID property of the route table.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    RouteTableListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/RouteTable'
          description: A list of route tables in a resource group.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: Response for the ListRouteTable API service call.
      type: object
    RouteListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Route'
          description: A list of routes in a resource group.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: Response for the ListRoute API service call.
      type: object
    RouteNextHopType:
      type: string
      description: The type of Azure hop the packet should be sent to.
      enum:
        - VirtualNetworkGateway
        - VnetLocal
        - Internet
        - VirtualAppliance
        - None
      x-ms-enum:
        name: RouteNextHopType
        modelAsString: true
    FirewallPolicy:
      description: FirewallPolicy Resource.
      properties:
        ruleCollectionGroups:
          type: array
          readOnly: true
          description: List of references to FirewallPolicyRuleCollectionGroups.
          items:
            $ref: '#/components/schemas/SubResource'
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the firewall policy resource.
        basePolicy:
          readOnly: false
          $ref: '#/components/schemas/SubResource'
          description: The parent firewall policy from which rules are inherited.
        firewalls:
          type: array
          readOnly: true
          description: List of references to Azure Firewalls that this Firewall Policy is associated with.
          items:
            $ref: '#/components/schemas/SubResource'
        childPolicies:
          type: array
          readOnly: true
          description: List of references to Child Firewall Policies.
          items:
            $ref: '#/components/schemas/SubResource'
        threatIntelMode:
          description: The operation mode for Threat Intelligence.
          $ref: '#/components/schemas/AzureFirewallThreatIntelMode'
        threatIntelWhitelist:
          description: ThreatIntel Whitelist for Firewall Policy.
          $ref: '#/components/schemas/FirewallPolicyThreatIntelWhitelist'
        insights:
          description: Insights on Firewall Policy.
          $ref: '#/components/schemas/FirewallPolicyInsights'
        snat:
          description: The private IP addresses/IP ranges to which traffic will not be SNAT.
          $ref: '#/components/schemas/FirewallPolicySNAT'
        sql:
          description: SQL Settings definition.
          $ref: '#/components/schemas/FirewallPolicySQL'
        dnsSettings:
          description: DNS Proxy Settings definition.
          $ref: '#/components/schemas/DnsSettings'
        explicitProxy:
          description: Explicit Proxy Settings definition.
          $ref: '#/components/schemas/ExplicitProxy'
        intrusionDetection:
          description: The configuration for Intrusion detection.
          $ref: '#/components/schemas/FirewallPolicyIntrusionDetection'
        transportSecurity:
          description: TLS Configuration definition.
          $ref: '#/components/schemas/FirewallPolicyTransportSecurity'
        sku:
          description: The Firewall Policy SKU.
          $ref: '#/components/schemas/FirewallPolicySku'
        etag:
          type: string
          readOnly: true
          description: A unique read-only string that changes whenever the resource is updated.
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
          description: The identity of the firewall policy.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    FirewallPolicyPropertiesFormat:
      type: object
      properties:
        ruleCollectionGroups:
          type: array
          readOnly: true
          description: List of references to FirewallPolicyRuleCollectionGroups.
          items:
            $ref: '#/components/schemas/SubResource'
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the firewall policy resource.
        basePolicy:
          readOnly: false
          $ref: '#/components/schemas/SubResource'
          description: The parent firewall policy from which rules are inherited.
        firewalls:
          type: array
          readOnly: true
          description: List of references to Azure Firewalls that this Firewall Policy is associated with.
          items:
            $ref: '#/components/schemas/SubResource'
        childPolicies:
          type: array
          readOnly: true
          description: List of references to Child Firewall Policies.
          items:
            $ref: '#/components/schemas/SubResource'
        threatIntelMode:
          description: The operation mode for Threat Intelligence.
          $ref: '#/components/schemas/AzureFirewallThreatIntelMode'
        threatIntelWhitelist:
          description: ThreatIntel Whitelist for Firewall Policy.
          $ref: '#/components/schemas/FirewallPolicyThreatIntelWhitelist'
        insights:
          description: Insights on Firewall Policy.
          $ref: '#/components/schemas/FirewallPolicyInsights'
        snat:
          description: The private IP addresses/IP ranges to which traffic will not be SNAT.
          $ref: '#/components/schemas/FirewallPolicySNAT'
        sql:
          description: SQL Settings definition.
          $ref: '#/components/schemas/FirewallPolicySQL'
        dnsSettings:
          description: DNS Proxy Settings definition.
          $ref: '#/components/schemas/DnsSettings'
        explicitProxy:
          description: Explicit Proxy Settings definition.
          $ref: '#/components/schemas/ExplicitProxy'
        intrusionDetection:
          description: The configuration for Intrusion detection.
          $ref: '#/components/schemas/FirewallPolicyIntrusionDetection'
        transportSecurity:
          description: TLS Configuration definition.
          $ref: '#/components/schemas/FirewallPolicyTransportSecurity'
        sku:
          description: The Firewall Policy SKU.
          $ref: '#/components/schemas/FirewallPolicySku'
      description: Firewall Policy definition.
    FirewallPolicyRuleCollectionGroup:
      description: Rule Collection Group resource.
      properties:
        priority:
          type: integer
          format: int32
          maximum: 65000
          exclusiveMaximum: false
          minimum: 100
          exclusiveMinimum: false
          description: Priority of the Firewall Policy Rule Collection Group resource.
        ruleCollections:
          type: array
          items:
            $ref: '#/components/schemas/FirewallPolicyRuleCollection'
          description: Group of Firewall Policy rule collections.
          x-ms-identifiers: []
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the firewall policy rule collection group resource.
        name:
          type: string
          description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
        etag:
          type: string
          readOnly: true
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          type: string
          readOnly: true
          description: Rule Group type.
        id:
          type: string
          description: Resource ID.
      type: object
    FirewallPolicyRuleCollectionGroupProperties:
      type: object
      properties:
        priority:
          type: integer
          format: int32
          maximum: 65000
          exclusiveMaximum: false
          minimum: 100
          exclusiveMinimum: false
          description: Priority of the Firewall Policy Rule Collection Group resource.
        ruleCollections:
          type: array
          items:
            $ref: '#/components/schemas/FirewallPolicyRuleCollection'
          description: Group of Firewall Policy rule collections.
          x-ms-identifiers: []
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the firewall policy rule collection group resource.
      description: Properties of the rule collection group.
    FirewallPolicyRuleCollection:
      type: object
      description: Properties of the rule collection.
      discriminator:
        propertyName: ruleCollectionType
      required:
        - ruleCollectionType
      properties:
        ruleCollectionType:
          type: string
          description: The type of the rule collection.
          enum:
            - FirewallPolicyNatRuleCollection
            - FirewallPolicyFilterRuleCollection
          x-ms-enum:
            name: FirewallPolicyRuleCollectionType
            modelAsString: true
        name:
          type: string
          description: The name of the rule collection.
        priority:
          type: integer
          format: int32
          maximum: 65000
          exclusiveMaximum: false
          minimum: 100
          exclusiveMinimum: false
          description: Priority of the Firewall Policy Rule Collection resource.
    FirewallPolicyNatRuleCollection:
      x-ms-discriminator-value: FirewallPolicyNatRuleCollection
      description: Firewall Policy NAT Rule Collection.
      properties:
        action:
          $ref: '#/components/schemas/FirewallPolicyNatRuleCollectionAction'
          description: The action type of a Nat rule collection.
        rules:
          type: array
          items:
            $ref: '#/components/schemas/FirewallPolicyRule'
          description: List of rules included in a rule collection.
          x-ms-identifiers: []
        ruleCollectionType:
          type: string
          description: The type of the rule collection.
          enum:
            - FirewallPolicyNatRuleCollection
            - FirewallPolicyFilterRuleCollection
          x-ms-enum:
            name: FirewallPolicyRuleCollectionType
            modelAsString: true
        name:
          type: string
          description: The name of the rule collection.
        priority:
          type: integer
          format: int32
          maximum: 65000
          exclusiveMaximum: false
          minimum: 100
          exclusiveMinimum: false
          description: Priority of the Firewall Policy Rule Collection resource.
      type: object
    FirewallPolicyFilterRuleCollection:
      x-ms-discriminator-value: FirewallPolicyFilterRuleCollection
      description: Firewall Policy Filter Rule Collection.
      properties:
        action:
          $ref: '#/components/schemas/FirewallPolicyFilterRuleCollectionAction'
          description: The action type of a Filter rule collection.
        rules:
          type: array
          items:
            $ref: '#/components/schemas/FirewallPolicyRule'
          description: List of rules included in a rule collection.
          x-ms-identifiers: []
        ruleCollectionType:
          type: string
          description: The type of the rule collection.
          enum:
            - FirewallPolicyNatRuleCollection
            - FirewallPolicyFilterRuleCollection
          x-ms-enum:
            name: FirewallPolicyRuleCollectionType
            modelAsString: true
        name:
          type: string
          description: The name of the rule collection.
        priority:
          type: integer
          format: int32
          maximum: 65000
          exclusiveMaximum: false
          minimum: 100
          exclusiveMinimum: false
          description: Priority of the Firewall Policy Rule Collection resource.
      type: object
    FirewallPolicyRule:
      type: object
      description: Properties of a rule.
      discriminator:
        propertyName: ruleType
      required:
        - ruleType
      properties:
        name:
          type: string
          description: Name of the rule.
        description:
          type: string
          description: Description of the rule.
        ruleType:
          type: string
          description: Rule Type.
          enum:
            - ApplicationRule
            - NetworkRule
            - NatRule
          x-ms-enum:
            name: FirewallPolicyRuleType
            modelAsString: true
    ApplicationRule:
      x-ms-discriminator-value: ApplicationRule
      description: Rule of type application.
      properties:
        name:
          type: string
          description: Name of the rule.
        description:
          type: string
          description: Description of the rule.
        ruleType:
          type: string
          description: Rule Type.
          enum:
            - ApplicationRule
            - NetworkRule
            - NatRule
          x-ms-enum:
            name: FirewallPolicyRuleType
            modelAsString: true
        sourceAddresses:
          type: array
          description: List of source IP addresses for this rule.
          items:
            type: string
          x-ms-identifiers: []
        destinationAddresses:
          type: array
          description: List of destination IP addresses or Service Tags.
          items:
            type: string
          x-ms-identifiers: []
        protocols:
          type: array
          items:
            $ref: '#/components/schemas/FirewallPolicyRuleApplicationProtocol'
          x-ms-identifiers: []
          description: Array of Application Protocols.
        targetFqdns:
          type: array
          description: List of FQDNs for this rule.
          items:
            type: string
          x-ms-identifiers: []
        targetUrls:
          type: array
          description: List of Urls for this rule condition.
          items:
            type: string
          x-ms-identifiers: []
        fqdnTags:
          type: array
          description: List of FQDN Tags for this rule.
          items:
            type: string
          x-ms-identifiers: []
        sourceIpGroups:
          type: array
          description: List of source IpGroups for this rule.
          items:
            type: string
          x-ms-identifiers: []
        terminateTLS:
          type: boolean
          description: Terminate TLS connections for this rule.
        webCategories:
          type: array
          description: List of destination azure web categories.
          items:
            type: string
          x-ms-identifiers: []
      type: object
    NatRule:
      description: Rule of type nat.
      x-ms-discriminator-value: NatRule
      properties:
        name:
          type: string
          description: Name of the rule.
        description:
          type: string
          description: Description of the rule.
        ruleType:
          type: string
          description: Rule Type.
          enum:
            - ApplicationRule
            - NetworkRule
            - NatRule
          x-ms-enum:
            name: FirewallPolicyRuleType
            modelAsString: true
        ipProtocols:
          type: array
          items:
            $ref: '#/components/schemas/FirewallPolicyRuleNetworkProtocol'
          description: Array of FirewallPolicyRuleNetworkProtocols.
        sourceAddresses:
          type: array
          description: List of source IP addresses for this rule.
          items:
            type: string
        destinationAddresses:
          type: array
          description: List of destination IP addresses or Service Tags.
          items:
            type: string
        destinationPorts:
          type: array
          description: List of destination ports.
          items:
            type: string
        translatedAddress:
          type: string
          description: The translated address for this NAT rule.
        translatedPort:
          type: string
          description: The translated port for this NAT rule.
        sourceIpGroups:
          type: array
          description: List of source IpGroups for this rule.
          items:
            type: string
        translatedFqdn:
          type: string
          description: The translated FQDN for this NAT rule.
      type: object
    NetworkRule:
      description: Rule of type network.
      x-ms-discriminator-value: NetworkRule
      properties:
        name:
          type: string
          description: Name of the rule.
        description:
          type: string
          description: Description of the rule.
        ruleType:
          type: string
          description: Rule Type.
          enum:
            - ApplicationRule
            - NetworkRule
            - NatRule
          x-ms-enum:
            name: FirewallPolicyRuleType
            modelAsString: true
        ipProtocols:
          type: array
          items:
            $ref: '#/components/schemas/FirewallPolicyRuleNetworkProtocol'
          description: Array of FirewallPolicyRuleNetworkProtocols.
        sourceAddresses:
          type: array
          description: List of source IP addresses for this rule.
          items:
            type: string
        destinationAddresses:
          type: array
          description: List of destination IP addresses or Service Tags.
          items:
            type: string
        destinationPorts:
          type: array
          description: List of destination ports.
          items:
            type: string
        sourceIpGroups:
          type: array
          description: List of source IpGroups for this rule.
          items:
            type: string
        destinationIpGroups:
          type: array
          description: List of destination IpGroups for this rule.
          items:
            type: string
        destinationFqdns:
          type: array
          description: List of destination FQDNs.
          items:
            type: string
      type: object
    FirewallPolicyRuleApplicationProtocol:
      type: object
      properties:
        protocolType:
          description: Protocol type.
          $ref: '#/components/schemas/FirewallPolicyRuleApplicationProtocolType'
        port:
          type: integer
          format: int32
          maximum: 64000
          exclusiveMaximum: false
          minimum: 0
          exclusiveMinimum: false
          description: Port number for the protocol, cannot be greater than 64000.
      description: Properties of the application rule protocol.
    FirewallPolicyRuleApplicationProtocolType:
      type: string
      description: The application protocol type of a Rule.
      enum:
        - Http
        - Https
      x-ms-enum:
        name: FirewallPolicyRuleApplicationProtocolType
        modelAsString: true
    FirewallPolicyNatRuleCollectionActionType:
      type: string
      description: The action type of a rule.
      enum:
        - DNAT
      x-ms-enum:
        name: FirewallPolicyNatRuleCollectionActionType
        modelAsString: true
    FirewallPolicyNatRuleCollectionAction:
      type: object
      properties:
        type:
          description: The type of action.
          $ref: '#/components/schemas/FirewallPolicyNatRuleCollectionActionType'
      description: Properties of the FirewallPolicyNatRuleCollectionAction.
    FirewallPolicyFilterRuleCollectionActionType:
      type: string
      description: The action type of a rule.
      enum:
        - Allow
        - Deny
      x-ms-enum:
        name: FirewallPolicyFilterRuleCollectionActionType
        modelAsString: true
    FirewallPolicyFilterRuleCollectionAction:
      type: object
      properties:
        type:
          description: The type of action.
          $ref: '#/components/schemas/FirewallPolicyFilterRuleCollectionActionType'
      description: Properties of the FirewallPolicyFilterRuleCollectionAction.
    FirewallPolicyRuleNetworkProtocol:
      type: string
      description: The Network protocol of a Rule.
      enum:
        - TCP
        - UDP
        - Any
        - ICMP
      x-ms-enum:
        name: FirewallPolicyRuleNetworkProtocol
        modelAsString: true
    FirewallPolicyListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/FirewallPolicy'
          description: List of Firewall Policies in a resource group.
        nextLink:
          type: string
          description: URL to get the next set of results.
      description: Response for ListFirewallPolicies API service call.
    FirewallPolicyRuleCollectionGroupListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/FirewallPolicyRuleCollectionGroup'
          description: List of FirewallPolicyRuleCollectionGroups in a FirewallPolicy.
        nextLink:
          type: string
          description: URL to get the next set of results.
      description: Response for ListFirewallPolicyRuleCollectionGroups API service call.
    FirewallPolicyThreatIntelWhitelist:
      type: object
      description: ThreatIntel Whitelist for Firewall Policy.
      properties:
        ipAddresses:
          type: array
          description: List of IP addresses for the ThreatIntel Whitelist.
          items:
            type: string
        fqdns:
          type: array
          description: List of FQDNs for the ThreatIntel Whitelist.
          items:
            type: string
    FirewallPolicyInsights:
      type: object
      description: Firewall Policy Insights.
      properties:
        isEnabled:
          type: boolean
          description: A flag to indicate if the insights are enabled on the policy.
        retentionDays:
          type: integer
          format: int32
          description: Number of days the insights should be enabled on the policy.
        logAnalyticsResources:
          description: Workspaces needed to configure the Firewall Policy Insights.
          $ref: '#/components/schemas/FirewallPolicyLogAnalyticsResources'
    FirewallPolicySNAT:
      type: object
      description: The private IP addresses/IP ranges to which traffic will not be SNAT.
      properties:
        privateRanges:
          type: array
          description: List of private IP addresses/IP address ranges to not be SNAT.
          items:
            type: string
        autoLearnPrivateRanges:
          type: string
          description: The operation mode for automatically learning private ranges to not be SNAT
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: AutoLearnPrivateRangesMode
            modelAsString: true
    FirewallPolicySQL:
      type: object
      description: SQL Settings in Firewall Policy.
      properties:
        allowSqlRedirect:
          type: boolean
          description: A flag to indicate if SQL Redirect traffic filtering is enabled. Turning on the flag requires no rule using port 11000-11999.
    DnsSettings:
      type: object
      description: DNS Proxy Settings in Firewall Policy.
      properties:
        servers:
          type: array
          description: List of Custom DNS Servers.
          items:
            type: string
        enableProxy:
          type: boolean
          description: Enable DNS Proxy on Firewalls attached to the Firewall Policy.
        requireProxyForNetworkRules:
          type: boolean
          description: FQDNs in Network Rules are supported when set to true.
          nullable: true
    ExplicitProxy:
      description: Explicit Proxy Settings in Firewall Policy.
      type: object
      properties:
        enableExplicitProxy:
          type: boolean
          description: When set to true, explicit proxy mode is enabled.
          nullable: true
        httpPort:
          type: integer
          format: int32
          maximum: 64000
          exclusiveMaximum: false
          minimum: 0
          exclusiveMinimum: false
          description: Port number for explicit proxy http protocol, cannot be greater than 64000.
        httpsPort:
          type: integer
          format: int32
          maximum: 64000
          exclusiveMaximum: false
          minimum: 0
          exclusiveMinimum: false
          description: Port number for explicit proxy https protocol, cannot be greater than 64000.
        enablePacFile:
          type: boolean
          description: When set to true, pac file port and url needs to be provided.
          nullable: true
        pacFilePort:
          type: integer
          format: int32
          maximum: 64000
          exclusiveMaximum: false
          minimum: 0
          exclusiveMinimum: false
          description: Port number for firewall to serve PAC file.
        pacFile:
          type: string
          description: SAS URL for PAC file.
    FirewallPolicyIntrusionDetection:
      type: object
      description: Configuration for intrusion detection mode and rules.
      properties:
        mode:
          $ref: '#/components/schemas/FirewallPolicyIntrusionDetectionStateOptions'
          description: Intrusion detection general state.
        configuration:
          $ref: '#/components/schemas/FirewallPolicyIntrusionDetectionConfiguration'
          description: Intrusion detection configuration properties.
    FirewallPolicyIntrusionDetectionStateOptions:
      type: string
      description: Possible state values.
      enum:
        - 'Off'
        - Alert
        - Deny
      x-ms-enum:
        name: FirewallPolicyIntrusionDetectionStateType
        modelAsString: true
    FirewallPolicyIntrusionDetectionConfiguration:
      type: object
      description: The operation for configuring intrusion detection.
      properties:
        signatureOverrides:
          type: array
          description: List of specific signatures states.
          items:
            $ref: '#/components/schemas/FirewallPolicyIntrusionDetectionSignatureSpecification'
        bypassTrafficSettings:
          type: array
          description: List of rules for traffic to bypass.
          items:
            $ref: '#/components/schemas/FirewallPolicyIntrusionDetectionBypassTrafficSpecifications'
          x-ms-identifiers: []
        privateRanges:
          type: array
          description: IDPS Private IP address ranges are used to identify traffic direction (i.e. inbound, outbound, etc.). By default, only ranges defined by IANA RFC 1918 are considered private IP addresses. To modify default ranges, specify your Private IP address ranges with this property
          items:
            type: string
          x-ms-identifiers: []
    FirewallPolicyIntrusionDetectionSignatureSpecification:
      type: object
      properties:
        id:
          type: string
          description: Signature id.
        mode:
          $ref: '#/components/schemas/FirewallPolicyIntrusionDetectionStateOptions'
          description: The signature state.
      description: Intrusion detection signatures specification states.
    FirewallPolicyIntrusionDetectionBypassTrafficSpecifications:
      type: object
      properties:
        name:
          type: string
          description: Name of the bypass traffic rule.
        description:
          type: string
          description: Description of the bypass traffic rule.
        protocol:
          type: string
          $ref: '#/components/schemas/FirewallPolicyIntrusionDetectionBypassTrafficProtocol'
          description: The rule bypass protocol.
        sourceAddresses:
          type: array
          description: List of source IP addresses or ranges for this rule.
          items:
            type: string
        destinationAddresses:
          type: array
          description: List of destination IP addresses or ranges for this rule.
          items:
            type: string
        destinationPorts:
          type: array
          description: List of destination ports or ranges.
          items:
            type: string
        sourceIpGroups:
          type: array
          description: List of source IpGroups for this rule.
          items:
            type: string
        destinationIpGroups:
          type: array
          description: List of destination IpGroups for this rule.
          items:
            type: string
      description: Intrusion detection bypass traffic specification.
    FirewallPolicyIntrusionDetectionBypassTrafficProtocol:
      type: string
      description: Possible intrusion detection bypass traffic protocols.
      enum:
        - TCP
        - UDP
        - ICMP
        - ANY
      x-ms-enum:
        name: FirewallPolicyIntrusionDetectionProtocol
        modelAsString: true
    FirewallPolicyTransportSecurity:
      type: object
      properties:
        certificateAuthority:
          $ref: '#/components/schemas/FirewallPolicyCertificateAuthority'
          description: The CA used for intermediate CA generation.
      description: Configuration needed to perform TLS termination & initiation.
    FirewallPolicyCertificateAuthority:
      type: object
      properties:
        keyVaultSecretId:
          type: string
          description: Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
        name:
          type: string
          description: Name of the CA certificate.
      description: Trusted Root certificates properties for tls.
    FirewallPolicySku:
      type: object
      properties:
        tier:
          type: string
          description: Tier of Firewall Policy.
          enum:
            - Standard
            - Premium
            - Basic
          x-ms-enum:
            name: FirewallPolicySkuTier
            modelAsString: true
      description: SKU of Firewall policy.
    FirewallPolicyLogAnalyticsResources:
      type: object
      description: Log Analytics Resources for Firewall Policy Insights.
      properties:
        workspaces:
          type: array
          description: List of workspaces for Firewall Policy Insights.
          items:
            $ref: '#/components/schemas/FirewallPolicyLogAnalyticsWorkspace'
          x-ms-identifiers: []
        defaultWorkspaceId:
          $ref: '#/components/schemas/SubResource'
          description: The default workspace Id for Firewall Policy Insights.
    FirewallPolicyLogAnalyticsWorkspace:
      type: object
      description: Log Analytics Workspace for Firewall Policy Insights.
      properties:
        region:
          type: string
          description: Region to configure the Workspace.
        workspaceId:
          $ref: '#/components/schemas/SubResource'
          description: The workspace Id for Firewall Policy Insights.
    IDPSQueryObject:
      description: Will describe the query to run against the IDPS signatures DB
      type: object
      properties:
        filters:
          type: object
          description: Contain all filters names and values
          $ref: '#/components/schemas/Filters'
        search:
          type: string
          description: Search term in all columns
        orderBy:
          type: object
          $ref: '#/components/schemas/OrderBy'
          description: Column to sort response by
        resultsPerPage:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          description: The number of the results to return in each page
        skip:
          type: integer
          format: int32
          description: The number of records matching the filter to skip
    Filters:
      description: Describers the filters to filter response by
      type: array
      items:
        $ref: '#/components/schemas/FilterItems'
      x-ms-identifiers: []
    FilterItems:
      description: Will contain the filter name and values to operate on
      type: object
      properties:
        field:
          type: string
          description: The name of the field we would like to filter
        values:
          type: array
          description: List of values to filter the current field by
          items:
            type: string
            description: Value of the field to filter by
    OrderBy:
      description: Describes a column to sort
      type: object
      properties:
        field:
          type: string
          description: Describes the actual column name to sort by
        order:
          type: string
          description: Describes if results should be in ascending/descending order
          enum:
            - Ascending
            - Descending
          x-ms-enum:
            name: FirewallPolicyIDPSQuerySortOrder
            modelAsString: true
    QueryResults:
      description: Query result
      type: object
      properties:
        matchingRecordsCount:
          type: integer
          format: int64
          description: Number of total records matching the query.
        signatures:
          type: array
          items:
            $ref: '#/components/schemas/SingleQueryResult'
          description: Array containing the results of the query
          x-ms-identifiers: []
    SingleQueryResult:
      type: object
      properties:
        signatureId:
          type: integer
          format: int32
          description: The ID of the signature
        mode:
          type: integer
          format: int32
          description: The current mode enforced, 0 - Disabled, 1 - Alert, 2 -Deny
          enum:
            - 0
            - 1
            - 2
          x-ms-enum:
            name: FirewallPolicyIDPSSignatureMode
            modelAsString: false
        severity:
          type: integer
          format: int32
          description: 'Describes the severity of signature: 1 - Low, 2 - Medium, 3 - High'
          enum:
            - 1
            - 2
            - 3
          x-ms-enum:
            name: FirewallPolicyIDPSSignatureSeverity
            modelAsString: false
        direction:
          type: integer
          format: int32
          description: 'Describes in which direction signature is being enforced: 0 - Inbound, 1 - OutBound, 2 - Bidirectional'
          enum:
            - 0
            - 1
            - 2
          x-ms-enum:
            name: FirewallPolicyIDPSSignatureDirection
            modelAsString: false
        group:
          type: string
          description: Describes the groups the signature belongs to
        description:
          type: string
          description: Describes what is the signature enforces
        protocol:
          type: string
          description: Describes the protocol the signatures is being enforced in
        sourcePorts:
          type: array
          items:
            $ref: '#/components/schemas/PortsList'
          description: Describes the list of source ports related to this signature
        destinationPorts:
          type: array
          items:
            $ref: '#/components/schemas/PortsList'
          description: Describes the list of destination ports related to this signature
        lastUpdated:
          type: string
          description: Describes the last updated time of the signature (provided from 3rd party vendor)
        inheritedFromParentPolicy:
          type: boolean
          description: Describes if this override is inherited from base policy or not
    PortsList:
      type: string
      description: Describes a port, port range, or negation of a port
    Signatures:
      additionalProperties:
        type: string
      properties: {}
      type: object
    SignaturesOverridesList:
      type: object
      description: Describes an object containing an array with a single item
      properties:
        value:
          type: array
          description: Describes a list consisting exactly one item describing the policy's signature override status
          items:
            description: Describes the single signatures overrides object related to that policy.
            $ref: '#/components/schemas/SignaturesOverrides'
    SignaturesOverrides:
      x-ms-azure-resource: true
      description: Contains all specific policy signatures overrides for the IDPS
      properties:
        name:
          type: string
          description: Contains the name of the resource (default)
        id:
          description: Will contain the resource id of the signature override resource
          type: string
        type:
          type: string
          description: 'Will contain the type of the resource: Microsoft.Network/firewallPolicies/intrusionDetectionSignaturesOverrides'
        properties:
          type: object
          description: Will contain the properties of the resource (the actual signature overrides)
          properties:
            signatures:
              type: object
              $ref: '#/components/schemas/Signatures'
      type: object
    SignatureOverridesFilterValuesQuery:
      description: Describes the filter values possibles for a given column
      type: object
      properties:
        filterName:
          type: string
          description: Describes the name of the column which values will be returned
    SignatureOverridesFilterValuesResponse:
      description: Describes the list of all possible values for a specific filter value
      type: object
      properties:
        filterValues:
          description: Describes the possible values
          type: array
          items:
            description: Describes a single value of the filter
            type: string
    NetworkGroup:
      description: The network group resource
      properties:
        description:
          type: string
          description: A description of the network group.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the scope assignment resource.
        systemData:
          readOnly: true
          description: The system metadata related to this resource.
          $ref: '#/components/schemas/SystemData'
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
      type: object
    NetworkGroupListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/NetworkGroup'
          description: Gets a page of NetworkGroup
        nextLink:
          type: string
          description: Gets the URL to get the next set of results.
      description: Result of the request to list NetworkGroup. It contains a list of groups and a URL link to get the next set of results.
    NetworkGroupProperties:
      type: object
      properties:
        description:
          type: string
          description: A description of the network group.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the scope assignment resource.
      description: Properties of network group
    StaticMember:
      description: StaticMember Item.
      properties:
        resourceId:
          type: string
          description: Resource Id.
        region:
          readOnly: true
          type: string
          description: Resource region.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the scope assignment resource.
        systemData:
          readOnly: true
          description: The system metadata related to this resource.
          $ref: '#/components/schemas/SystemData'
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
      type: object
    StaticMemberListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/StaticMember'
          description: Gets a page of StaticMember
        nextLink:
          type: string
          description: Gets the URL to get the next set of results.
      description: Result of the request to list StaticMember. It contains a list of groups and a URL link to get the next set of results.
    StaticMemberProperties:
      type: object
      properties:
        resourceId:
          type: string
          description: Resource Id.
        region:
          readOnly: true
          type: string
          description: Resource region.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the scope assignment resource.
      description: Properties of static member.
    QueryRequestOptions:
      type: object
      properties:
        skipToken:
          description: When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.
          type: string
      description: Query Request Options
    ApplicationGatewayOnDemandProbe:
      properties:
        protocol:
          $ref: '#/components/schemas/ApplicationGatewayProtocol'
          description: The protocol used for the probe.
        host:
          type: string
          description: Host name to send the probe to.
        path:
          type: string
          description: Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>.
        timeout:
          type: integer
          format: int32
          description: The probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.
        pickHostNameFromBackendHttpSettings:
          type: boolean
          description: Whether the host header should be picked from the backend http settings. Default value is false.
        match:
          $ref: '#/components/schemas/ApplicationGatewayProbeHealthResponseMatch'
          description: Criterion for classifying a healthy probe response.
        backendAddressPool:
          $ref: '#/components/schemas/SubResource'
          description: Reference to backend pool of application gateway to which probe request will be sent.
        backendHttpSettings:
          $ref: '#/components/schemas/SubResource'
          description: Reference to backend http setting of application gateway to be used for test probe.
      description: Details of on demand test probe request.
      type: object
    ApplicationGatewayBackendHealthOnDemand:
      properties:
        backendAddressPool:
          $ref: '#/components/schemas/ApplicationGatewayBackendAddressPool'
          description: Reference to an ApplicationGatewayBackendAddressPool resource.
        backendHealthHttpSettings:
          $ref: '#/components/schemas/ApplicationGatewayBackendHealthHttpSettings'
          description: Application gateway BackendHealthHttp settings.
      description: Result of on demand test probe.
      type: object
    ApplicationGatewayBackendHealth:
      properties:
        backendAddressPools:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayBackendHealthPool'
          description: A list of ApplicationGatewayBackendHealthPool resources.
      description: Response for ApplicationGatewayBackendHealth API service call.
      type: object
    ApplicationGatewayBackendHealthPool:
      properties:
        backendAddressPool:
          $ref: '#/components/schemas/ApplicationGatewayBackendAddressPool'
          description: Reference to an ApplicationGatewayBackendAddressPool resource.
        backendHttpSettingsCollection:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayBackendHealthHttpSettings'
          description: List of ApplicationGatewayBackendHealthHttpSettings resources.
      description: Application gateway BackendHealth pool.
      type: object
    ApplicationGatewayBackendHealthHttpSettings:
      properties:
        backendHttpSettings:
          $ref: '#/components/schemas/ApplicationGatewayBackendHttpSettings'
          description: Reference to an ApplicationGatewayBackendHttpSettings resource.
        servers:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayBackendHealthServer'
          description: List of ApplicationGatewayBackendHealthServer resources.
      description: Application gateway BackendHealthHttp settings.
      type: object
    ApplicationGatewayBackendHealthServer:
      properties:
        address:
          type: string
          description: IP address or FQDN of backend server.
        ipConfiguration:
          $ref: '#/components/schemas/NetworkInterfaceIPConfiguration'
          description: Reference to IP configuration of backend server.
        health:
          type: string
          description: Health of backend server.
          enum:
            - Unknown
            - Up
            - Down
            - Partial
            - Draining
          x-ms-enum:
            name: ApplicationGatewayBackendHealthServerHealth
            modelAsString: true
        healthProbeLog:
          type: string
          description: Health Probe Log.
      description: Application gateway backendhealth http settings.
      type: object
    ApplicationGatewaySku:
      properties:
        name:
          type: string
          description: Name of an application gateway SKU.
          enum:
            - Standard_Small
            - Standard_Medium
            - Standard_Large
            - WAF_Medium
            - WAF_Large
            - Standard_v2
            - WAF_v2
          x-ms-enum:
            name: ApplicationGatewaySkuName
            modelAsString: true
        tier:
          type: string
          description: Tier of an application gateway.
          enum:
            - Standard
            - WAF
            - Standard_v2
            - WAF_v2
          x-ms-enum:
            name: ApplicationGatewayTier
            modelAsString: true
        capacity:
          type: integer
          format: int32
          description: Capacity (instance count) of an application gateway.
      description: SKU of an application gateway.
      type: object
    ApplicationGatewaySslPolicy:
      properties:
        disabledSslProtocols:
          type: array
          description: Ssl protocols to be disabled on application gateway.
          items:
            type: string
            $ref: '#/components/schemas/ProtocolsEnum'
        policyType:
          type: string
          description: Type of Ssl Policy.
          enum:
            - Predefined
            - Custom
            - CustomV2
          x-ms-enum:
            name: ApplicationGatewaySslPolicyType
            modelAsString: true
        policyName:
          $ref: '#/components/schemas/PolicyNameEnum'
          description: Name of Ssl predefined policy.
        cipherSuites:
          type: array
          items:
            $ref: '#/components/schemas/CipherSuitesEnum'
          description: Ssl cipher suites to be enabled in the specified order to application gateway.
        minProtocolVersion:
          $ref: '#/components/schemas/ProtocolsEnum'
          description: Minimum version of Ssl protocol to be supported on application gateway.
      description: Application Gateway Ssl policy.
      type: object
    ApplicationGatewayClientAuthConfiguration:
      properties:
        verifyClientCertIssuerDN:
          type: boolean
          description: Verify client certificate issuer name on the application gateway.
      description: Application gateway client authentication configuration.
      type: object
    ApplicationGatewayIPConfigurationPropertiesFormat:
      properties:
        subnet:
          $ref: '#/components/schemas/SubResource'
          description: Reference to the subnet resource. A subnet from where application gateway gets its private address.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the application gateway IP configuration resource.
      description: Properties of IP configuration of an application gateway.
      type: object
    ApplicationGatewayIPConfiguration:
      description: IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed.
      properties:
        subnet:
          $ref: '#/components/schemas/SubResource'
          description: Reference to the subnet resource. A subnet from where application gateway gets its private address.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the application gateway IP configuration resource.
        name:
          type: string
          description: Name of the IP configuration that is unique within an Application Gateway.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          readOnly: true
          type: string
          description: Type of the resource.
        id:
          type: string
          description: Resource ID.
      type: object
    ApplicationGatewayAuthenticationCertificatePropertiesFormat:
      properties:
        data:
          type: string
          description: Certificate public data.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the authentication certificate resource.
      description: Authentication certificates properties of an application gateway.
      type: object
    ApplicationGatewayAuthenticationCertificate:
      description: Authentication certificates of an application gateway.
      properties:
        data:
          type: string
          description: Certificate public data.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the authentication certificate resource.
        name:
          type: string
          description: Name of the authentication certificate that is unique within an Application Gateway.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          readOnly: true
          type: string
          description: Type of the resource.
        id:
          type: string
          description: Resource ID.
      type: object
    ApplicationGatewayTrustedRootCertificatePropertiesFormat:
      properties:
        data:
          type: string
          description: Certificate public data.
        keyVaultSecretId:
          type: string
          description: Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the trusted root certificate resource.
      description: Trusted Root certificates properties of an application gateway.
      type: object
    ApplicationGatewayTrustedRootCertificate:
      description: Trusted Root certificates of an application gateway.
      properties:
        data:
          type: string
          description: Certificate public data.
        keyVaultSecretId:
          type: string
          description: Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the trusted root certificate resource.
        name:
          type: string
          description: Name of the trusted root certificate that is unique within an Application Gateway.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          readOnly: true
          type: string
          description: Type of the resource.
        id:
          type: string
          description: Resource ID.
      type: object
    ApplicationGatewayTrustedClientCertificatePropertiesFormat:
      properties:
        data:
          type: string
          description: Certificate public data.
        validatedCertData:
          readOnly: true
          type: string
          description: Validated certificate data.
        clientCertIssuerDN:
          readOnly: true
          type: string
          description: Distinguished name of client certificate issuer.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the trusted client certificate resource.
      description: Trusted client certificates properties of an application gateway.
      type: object
    ApplicationGatewayTrustedClientCertificate:
      description: Trusted client certificates of an application gateway.
      properties:
        data:
          type: string
          description: Certificate public data.
        validatedCertData:
          readOnly: true
          type: string
          description: Validated certificate data.
        clientCertIssuerDN:
          readOnly: true
          type: string
          description: Distinguished name of client certificate issuer.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the trusted client certificate resource.
        name:
          type: string
          description: Name of the trusted client certificate that is unique within an Application Gateway.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          readOnly: true
          type: string
          description: Type of the resource.
        id:
          type: string
          description: Resource ID.
      type: object
    ApplicationGatewaySslCertificatePropertiesFormat:
      properties:
        data:
          type: string
          description: Base-64 encoded pfx certificate. Only applicable in PUT Request.
        password:
          type: string
          description: Password for the pfx file specified in data. Only applicable in PUT request.
        publicCertData:
          readOnly: true
          type: string
          description: Base-64 encoded Public cert data corresponding to pfx specified in data. Only applicable in GET request.
        keyVaultSecretId:
          type: string
          description: Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the SSL certificate resource.
      description: Properties of SSL certificates of an application gateway.
      type: object
    ApplicationGatewaySslCertificate:
      description: SSL certificates of an application gateway.
      properties:
        data:
          type: string
          description: Base-64 encoded pfx certificate. Only applicable in PUT Request.
        password:
          type: string
          description: Password for the pfx file specified in data. Only applicable in PUT request.
        publicCertData:
          readOnly: true
          type: string
          description: Base-64 encoded Public cert data corresponding to pfx specified in data. Only applicable in GET request.
        keyVaultSecretId:
          type: string
          description: Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the SSL certificate resource.
        name:
          type: string
          description: Name of the SSL certificate that is unique within an Application Gateway.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          readOnly: true
          type: string
          description: Type of the resource.
        id:
          type: string
          description: Resource ID.
      type: object
    ApplicationGatewayFrontendIPConfigurationPropertiesFormat:
      properties:
        privateIPAddress:
          type: string
          description: PrivateIPAddress of the network interface IP Configuration.
        privateIPAllocationMethod:
          $ref: '#/components/schemas/IPAllocationMethod'
          description: The private IP address allocation method.
        subnet:
          $ref: '#/components/schemas/SubResource'
          description: Reference to the subnet resource.
        publicIPAddress:
          $ref: '#/components/schemas/SubResource'
          description: Reference to the PublicIP resource.
        privateLinkConfiguration:
          $ref: '#/components/schemas/SubResource'
          description: Reference to the application gateway private link configuration.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the frontend IP configuration resource.
      description: Properties of Frontend IP configuration of an application gateway.
      type: object
    ApplicationGatewayFrontendIPConfiguration:
      description: Frontend IP configuration of an application gateway.
      properties:
        privateIPAddress:
          type: string
          description: PrivateIPAddress of the network interface IP Configuration.
        privateIPAllocationMethod:
          $ref: '#/components/schemas/IPAllocationMethod'
          description: The private IP address allocation method.
        subnet:
          $ref: '#/components/schemas/SubResource'
          description: Reference to the subnet resource.
        publicIPAddress:
          $ref: '#/components/schemas/SubResource'
          description: Reference to the PublicIP resource.
        privateLinkConfiguration:
          $ref: '#/components/schemas/SubResource'
          description: Reference to the application gateway private link configuration.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the frontend IP configuration resource.
        name:
          type: string
          description: Name of the frontend IP configuration that is unique within an Application Gateway.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          readOnly: true
          type: string
          description: Type of the resource.
        id:
          type: string
          description: Resource ID.
      type: object
    ApplicationGatewayFrontendPortPropertiesFormat:
      properties:
        port:
          type: integer
          format: int32
          description: Frontend port.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the frontend port resource.
      description: Properties of Frontend port of an application gateway.
      type: object
    ApplicationGatewayFrontendPort:
      description: Frontend port of an application gateway.
      properties:
        port:
          type: integer
          format: int32
          description: Frontend port.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the frontend port resource.
        name:
          type: string
          description: Name of the frontend port that is unique within an Application Gateway.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          readOnly: true
          type: string
          description: Type of the resource.
        id:
          type: string
          description: Resource ID.
      type: object
    ApplicationGatewayBackendAddress:
      properties:
        fqdn:
          type: string
          description: Fully qualified domain name (FQDN).
        ipAddress:
          type: string
          description: IP address.
      description: Backend address of an application gateway.
      type: object
    ApplicationGatewayBackendAddressPoolPropertiesFormat:
      properties:
        backendIPConfigurations:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterfaceIPConfiguration'
          description: Collection of references to IPs defined in network interfaces.
        backendAddresses:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayBackendAddress'
          description: Backend addresses.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the backend address pool resource.
      description: Properties of Backend Address Pool of an application gateway.
      type: object
    ApplicationGatewayBackendAddressPool:
      description: Backend Address Pool of an application gateway.
      properties:
        backendIPConfigurations:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterfaceIPConfiguration'
          description: Collection of references to IPs defined in network interfaces.
        backendAddresses:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayBackendAddress'
          description: Backend addresses.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the backend address pool resource.
        name:
          type: string
          description: Name of the backend address pool that is unique within an Application Gateway.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          readOnly: true
          type: string
          description: Type of the resource.
        id:
          type: string
          description: Resource ID.
      type: object
    ApplicationGatewayBackendHttpSettingsPropertiesFormat:
      properties:
        port:
          type: integer
          format: int32
          description: The destination port on the backend.
        protocol:
          $ref: '#/components/schemas/ApplicationGatewayProtocol'
          description: The protocol used to communicate with the backend.
        cookieBasedAffinity:
          type: string
          description: Cookie based affinity.
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: ApplicationGatewayCookieBasedAffinity
            modelAsString: true
        requestTimeout:
          type: integer
          format: int32
          description: Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.
        probe:
          $ref: '#/components/schemas/SubResource'
          description: Probe resource of an application gateway.
        authenticationCertificates:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: Array of references to application gateway authentication certificates.
        trustedRootCertificates:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: Array of references to application gateway trusted root certificates.
        connectionDraining:
          $ref: '#/components/schemas/ApplicationGatewayConnectionDraining'
          description: Connection draining of the backend http settings resource.
        hostName:
          type: string
          description: Host header to be sent to the backend servers.
        pickHostNameFromBackendAddress:
          type: boolean
          description: Whether to pick host header should be picked from the host name of the backend server. Default value is false.
        affinityCookieName:
          type: string
          description: Cookie name to use for the affinity cookie.
        probeEnabled:
          type: boolean
          description: Whether the probe is enabled. Default value is false.
        path:
          type: string
          description: Path which should be used as a prefix for all HTTP requests. Null means no path will be prefixed. Default value is null.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the backend HTTP settings resource.
      description: Properties of Backend address pool settings of an application gateway.
      type: object
    ApplicationGatewayBackendHttpSettings:
      description: Backend address pool settings of an application gateway.
      properties:
        port:
          type: integer
          format: int32
          description: The destination port on the backend.
        protocol:
          $ref: '#/components/schemas/ApplicationGatewayProtocol'
          description: The protocol used to communicate with the backend.
        cookieBasedAffinity:
          type: string
          description: Cookie based affinity.
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: ApplicationGatewayCookieBasedAffinity
            modelAsString: true
        requestTimeout:
          type: integer
          format: int32
          description: Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.
        probe:
          $ref: '#/components/schemas/SubResource'
          description: Probe resource of an application gateway.
        authenticationCertificates:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: Array of references to application gateway authentication certificates.
        trustedRootCertificates:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: Array of references to application gateway trusted root certificates.
        connectionDraining:
          $ref: '#/components/schemas/ApplicationGatewayConnectionDraining'
          description: Connection draining of the backend http settings resource.
        hostName:
          type: string
          description: Host header to be sent to the backend servers.
        pickHostNameFromBackendAddress:
          type: boolean
          description: Whether to pick host header should be picked from the host name of the backend server. Default value is false.
        affinityCookieName:
          type: string
          description: Cookie name to use for the affinity cookie.
        probeEnabled:
          type: boolean
          description: Whether the probe is enabled. Default value is false.
        path:
          type: string
          description: Path which should be used as a prefix for all HTTP requests. Null means no path will be prefixed. Default value is null.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the backend HTTP settings resource.
        name:
          type: string
          description: Name of the backend http settings that is unique within an Application Gateway.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          readOnly: true
          type: string
          description: Type of the resource.
        id:
          type: string
          description: Resource ID.
      type: object
    ApplicationGatewayBackendSettingsPropertiesFormat:
      type: object
      properties:
        port:
          type: integer
          format: int32
          description: The destination port on the backend.
        protocol:
          $ref: '#/components/schemas/ApplicationGatewayProtocol'
          description: The protocol used to communicate with the backend.
        timeout:
          type: integer
          format: int32
          description: Connection timeout in seconds. Application Gateway will fail the request if response is not received within ConnectionTimeout. Acceptable values are from 1 second to 86400 seconds.
        probe:
          $ref: '#/components/schemas/SubResource'
          description: Probe resource of an application gateway.
        trustedRootCertificates:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: Array of references to application gateway trusted root certificates.
        hostName:
          type: string
          description: Server name indication to be sent to the backend servers for Tls protocol.
        pickHostNameFromBackendAddress:
          type: boolean
          description: Whether to pick server name indication from the host name of the backend server for Tls protocol. Default value is false.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the backend HTTP settings resource.
      description: Properties of Backend address pool settings of an application gateway.
    ApplicationGatewayBackendSettings:
      description: Backend address pool settings of an application gateway.
      properties:
        port:
          type: integer
          format: int32
          description: The destination port on the backend.
        protocol:
          $ref: '#/components/schemas/ApplicationGatewayProtocol'
          description: The protocol used to communicate with the backend.
        timeout:
          type: integer
          format: int32
          description: Connection timeout in seconds. Application Gateway will fail the request if response is not received within ConnectionTimeout. Acceptable values are from 1 second to 86400 seconds.
        probe:
          $ref: '#/components/schemas/SubResource'
          description: Probe resource of an application gateway.
        trustedRootCertificates:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: Array of references to application gateway trusted root certificates.
        hostName:
          type: string
          description: Server name indication to be sent to the backend servers for Tls protocol.
        pickHostNameFromBackendAddress:
          type: boolean
          description: Whether to pick server name indication from the host name of the backend server for Tls protocol. Default value is false.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the backend HTTP settings resource.
        name:
          type: string
          description: Name of the backend settings that is unique within an Application Gateway.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          readOnly: true
          type: string
          description: Type of the resource.
        id:
          type: string
          description: Resource ID.
      type: object
    ApplicationGatewaySslProfilePropertiesFormat:
      properties:
        trustedClientCertificates:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: Array of references to application gateway trusted client certificates.
        sslPolicy:
          $ref: '#/components/schemas/ApplicationGatewaySslPolicy'
          description: SSL policy of the application gateway resource.
        clientAuthConfiguration:
          $ref: '#/components/schemas/ApplicationGatewayClientAuthConfiguration'
          description: Client authentication configuration of the application gateway resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the HTTP listener resource.
      description: Properties of SSL profile of an application gateway.
      type: object
    ApplicationGatewaySslProfile:
      description: SSL profile of an application gateway.
      properties:
        trustedClientCertificates:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: Array of references to application gateway trusted client certificates.
        sslPolicy:
          $ref: '#/components/schemas/ApplicationGatewaySslPolicy'
          description: SSL policy of the application gateway resource.
        clientAuthConfiguration:
          $ref: '#/components/schemas/ApplicationGatewayClientAuthConfiguration'
          description: Client authentication configuration of the application gateway resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the HTTP listener resource.
        name:
          type: string
          description: Name of the SSL profile that is unique within an Application Gateway.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          readOnly: true
          type: string
          description: Type of the resource.
        id:
          type: string
          description: Resource ID.
      type: object
    ApplicationGatewayHttpListenerPropertiesFormat:
      properties:
        frontendIPConfiguration:
          $ref: '#/components/schemas/SubResource'
          description: Frontend IP configuration resource of an application gateway.
        frontendPort:
          $ref: '#/components/schemas/SubResource'
          description: Frontend port resource of an application gateway.
        protocol:
          $ref: '#/components/schemas/ApplicationGatewayProtocol'
          description: Protocol of the HTTP listener.
        hostName:
          type: string
          description: Host name of HTTP listener.
        sslCertificate:
          $ref: '#/components/schemas/SubResource'
          description: SSL certificate resource of an application gateway.
        sslProfile:
          $ref: '#/components/schemas/SubResource'
          description: SSL profile resource of the application gateway.
        requireServerNameIndication:
          type: boolean
          description: Applicable only if protocol is https. Enables SNI for multi-hosting.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the HTTP listener resource.
        customErrorConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayCustomError'
          description: Custom error configurations of the HTTP listener.
        firewallPolicy:
          $ref: '#/components/schemas/SubResource'
          description: Reference to the FirewallPolicy resource.
        hostNames:
          type: array
          items:
            type: string
          description: List of Host names for HTTP Listener that allows special wildcard characters as well.
      description: Properties of HTTP listener of an application gateway.
      type: object
    ApplicationGatewayHttpListener:
      description: Http listener of an application gateway.
      properties:
        frontendIPConfiguration:
          $ref: '#/components/schemas/SubResource'
          description: Frontend IP configuration resource of an application gateway.
        frontendPort:
          $ref: '#/components/schemas/SubResource'
          description: Frontend port resource of an application gateway.
        protocol:
          $ref: '#/components/schemas/ApplicationGatewayProtocol'
          description: Protocol of the HTTP listener.
        hostName:
          type: string
          description: Host name of HTTP listener.
        sslCertificate:
          $ref: '#/components/schemas/SubResource'
          description: SSL certificate resource of an application gateway.
        sslProfile:
          $ref: '#/components/schemas/SubResource'
          description: SSL profile resource of the application gateway.
        requireServerNameIndication:
          type: boolean
          description: Applicable only if protocol is https. Enables SNI for multi-hosting.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the HTTP listener resource.
        customErrorConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayCustomError'
          description: Custom error configurations of the HTTP listener.
        firewallPolicy:
          $ref: '#/components/schemas/SubResource'
          description: Reference to the FirewallPolicy resource.
        hostNames:
          type: array
          items:
            type: string
          description: List of Host names for HTTP Listener that allows special wildcard characters as well.
        name:
          type: string
          description: Name of the HTTP listener that is unique within an Application Gateway.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          readOnly: true
          type: string
          description: Type of the resource.
        id:
          type: string
          description: Resource ID.
      type: object
    ApplicationGatewayListenerPropertiesFormat:
      type: object
      properties:
        frontendIPConfiguration:
          $ref: '#/components/schemas/SubResource'
          description: Frontend IP configuration resource of an application gateway.
        frontendPort:
          $ref: '#/components/schemas/SubResource'
          description: Frontend port resource of an application gateway.
        protocol:
          $ref: '#/components/schemas/ApplicationGatewayProtocol'
          description: Protocol of the listener.
        sslCertificate:
          $ref: '#/components/schemas/SubResource'
          description: SSL certificate resource of an application gateway.
        sslProfile:
          $ref: '#/components/schemas/SubResource'
          description: SSL profile resource of the application gateway.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the listener resource.
      description: Properties of listener of an application gateway.
    ApplicationGatewayListener:
      description: Listener of an application gateway.
      properties:
        frontendIPConfiguration:
          $ref: '#/components/schemas/SubResource'
          description: Frontend IP configuration resource of an application gateway.
        frontendPort:
          $ref: '#/components/schemas/SubResource'
          description: Frontend port resource of an application gateway.
        protocol:
          $ref: '#/components/schemas/ApplicationGatewayProtocol'
          description: Protocol of the listener.
        sslCertificate:
          $ref: '#/components/schemas/SubResource'
          description: SSL certificate resource of an application gateway.
        sslProfile:
          $ref: '#/components/schemas/SubResource'
          description: SSL profile resource of the application gateway.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the listener resource.
        name:
          type: string
          description: Name of the listener that is unique within an Application Gateway.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          readOnly: true
          type: string
          description: Type of the resource.
        id:
          type: string
          description: Resource ID.
      type: object
    ApplicationGatewayPathRulePropertiesFormat:
      properties:
        paths:
          type: array
          items:
            type: string
          description: Path rules of URL path map.
        backendAddressPool:
          $ref: '#/components/schemas/SubResource'
          description: Backend address pool resource of URL path map path rule.
        backendHttpSettings:
          $ref: '#/components/schemas/SubResource'
          description: Backend http settings resource of URL path map path rule.
        redirectConfiguration:
          $ref: '#/components/schemas/SubResource'
          description: Redirect configuration resource of URL path map path rule.
        rewriteRuleSet:
          $ref: '#/components/schemas/SubResource'
          description: Rewrite rule set resource of URL path map path rule.
        loadDistributionPolicy:
          $ref: '#/components/schemas/SubResource'
          description: Load Distribution Policy resource of URL path map path rule.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the path rule resource.
        firewallPolicy:
          $ref: '#/components/schemas/SubResource'
          description: Reference to the FirewallPolicy resource.
      description: Properties of path rule of an application gateway.
      type: object
    ApplicationGatewayPathRule:
      description: Path rule of URL path map of an application gateway.
      properties:
        paths:
          type: array
          items:
            type: string
          description: Path rules of URL path map.
        backendAddressPool:
          $ref: '#/components/schemas/SubResource'
          description: Backend address pool resource of URL path map path rule.
        backendHttpSettings:
          $ref: '#/components/schemas/SubResource'
          description: Backend http settings resource of URL path map path rule.
        redirectConfiguration:
          $ref: '#/components/schemas/SubResource'
          description: Redirect configuration resource of URL path map path rule.
        rewriteRuleSet:
          $ref: '#/components/schemas/SubResource'
          description: Rewrite rule set resource of URL path map path rule.
        loadDistributionPolicy:
          $ref: '#/components/schemas/SubResource'
          description: Load Distribution Policy resource of URL path map path rule.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the path rule resource.
        firewallPolicy:
          $ref: '#/components/schemas/SubResource'
          description: Reference to the FirewallPolicy resource.
        name:
          type: string
          description: Name of the path rule that is unique within an Application Gateway.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          readOnly: true
          type: string
          description: Type of the resource.
        id:
          type: string
          description: Resource ID.
      type: object
    ApplicationGatewayProbePropertiesFormat:
      properties:
        protocol:
          $ref: '#/components/schemas/ApplicationGatewayProtocol'
          description: The protocol used for the probe.
        host:
          type: string
          description: Host name to send the probe to.
        path:
          type: string
          description: Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>.
        interval:
          type: integer
          format: int32
          description: The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds.
        timeout:
          type: integer
          format: int32
          description: The probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.
        unhealthyThreshold:
          type: integer
          format: int32
          description: The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20.
        pickHostNameFromBackendHttpSettings:
          type: boolean
          description: Whether the host header should be picked from the backend http settings. Default value is false.
        pickHostNameFromBackendSettings:
          type: boolean
          description: Whether the server name indication should be picked from the backend settings for Tls protocol. Default value is false.
        minServers:
          type: integer
          format: int32
          description: Minimum number of servers that are always marked healthy. Default value is 0.
        match:
          $ref: '#/components/schemas/ApplicationGatewayProbeHealthResponseMatch'
          description: Criterion for classifying a healthy probe response.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the probe resource.
        port:
          type: integer
          format: int32
          description: Custom port which will be used for probing the backend servers. The valid value ranges from 1 to 65535. In case not set, port from http settings will be used. This property is valid for Standard_v2 and WAF_v2 only.
          minimum: 1
          maximum: 65535
      description: Properties of probe of an application gateway.
      type: object
    ApplicationGatewayProbeHealthResponseMatch:
      properties:
        body:
          type: string
          description: Body that must be contained in the health response. Default value is empty.
        statusCodes:
          type: array
          items:
            type: string
          description: Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399.
      description: Application gateway probe health response match.
      type: object
    ApplicationGatewayProbe:
      description: Probe of the application gateway.
      properties:
        protocol:
          $ref: '#/components/schemas/ApplicationGatewayProtocol'
          description: The protocol used for the probe.
        host:
          type: string
          description: Host name to send the probe to.
        path:
          type: string
          description: Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>.
        interval:
          type: integer
          format: int32
          description: The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds.
        timeout:
          type: integer
          format: int32
          description: The probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.
        unhealthyThreshold:
          type: integer
          format: int32
          description: The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20.
        pickHostNameFromBackendHttpSettings:
          type: boolean
          description: Whether the host header should be picked from the backend http settings. Default value is false.
        pickHostNameFromBackendSettings:
          type: boolean
          description: Whether the server name indication should be picked from the backend settings for Tls protocol. Default value is false.
        minServers:
          type: integer
          format: int32
          description: Minimum number of servers that are always marked healthy. Default value is 0.
        match:
          $ref: '#/components/schemas/ApplicationGatewayProbeHealthResponseMatch'
          description: Criterion for classifying a healthy probe response.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the probe resource.
        port:
          type: integer
          format: int32
          description: Custom port which will be used for probing the backend servers. The valid value ranges from 1 to 65535. In case not set, port from http settings will be used. This property is valid for Standard_v2 and WAF_v2 only.
          minimum: 1
          maximum: 65535
        name:
          type: string
          description: Name of the probe that is unique within an Application Gateway.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          readOnly: true
          type: string
          description: Type of the resource.
        id:
          type: string
          description: Resource ID.
      type: object
    ApplicationGatewayRequestRoutingRulePropertiesFormat:
      properties:
        ruleType:
          type: string
          description: Rule type.
          enum:
            - Basic
            - PathBasedRouting
          x-ms-enum:
            name: ApplicationGatewayRequestRoutingRuleType
            modelAsString: true
        priority:
          type: integer
          format: int32
          minimum: 1
          exclusiveMinimum: false
          maximum: 20000
          exclusiveMaximum: false
          description: Priority of the request routing rule.
        backendAddressPool:
          $ref: '#/components/schemas/SubResource'
          description: Backend address pool resource of the application gateway.
        backendHttpSettings:
          $ref: '#/components/schemas/SubResource'
          description: Backend http settings resource of the application gateway.
        httpListener:
          $ref: '#/components/schemas/SubResource'
          description: Http listener resource of the application gateway.
        urlPathMap:
          $ref: '#/components/schemas/SubResource'
          description: URL path map resource of the application gateway.
        rewriteRuleSet:
          $ref: '#/components/schemas/SubResource'
          description: Rewrite Rule Set resource in Basic rule of the application gateway.
        redirectConfiguration:
          $ref: '#/components/schemas/SubResource'
          description: Redirect configuration resource of the application gateway.
        loadDistributionPolicy:
          $ref: '#/components/schemas/SubResource'
          description: Load Distribution Policy resource of the application gateway.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the request routing rule resource.
      description: Properties of request routing rule of the application gateway.
      type: object
    ApplicationGatewayRequestRoutingRule:
      description: Request routing rule of an application gateway.
      properties:
        ruleType:
          type: string
          description: Rule type.
          enum:
            - Basic
            - PathBasedRouting
          x-ms-enum:
            name: ApplicationGatewayRequestRoutingRuleType
            modelAsString: true
        priority:
          type: integer
          format: int32
          minimum: 1
          exclusiveMinimum: false
          maximum: 20000
          exclusiveMaximum: false
          description: Priority of the request routing rule.
        backendAddressPool:
          $ref: '#/components/schemas/SubResource'
          description: Backend address pool resource of the application gateway.
        backendHttpSettings:
          $ref: '#/components/schemas/SubResource'
          description: Backend http settings resource of the application gateway.
        httpListener:
          $ref: '#/components/schemas/SubResource'
          description: Http listener resource of the application gateway.
        urlPathMap:
          $ref: '#/components/schemas/SubResource'
          description: URL path map resource of the application gateway.
        rewriteRuleSet:
          $ref: '#/components/schemas/SubResource'
          description: Rewrite Rule Set resource in Basic rule of the application gateway.
        redirectConfiguration:
          $ref: '#/components/schemas/SubResource'
          description: Redirect configuration resource of the application gateway.
        loadDistributionPolicy:
          $ref: '#/components/schemas/SubResource'
          description: Load Distribution Policy resource of the application gateway.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the request routing rule resource.
        name:
          type: string
          description: Name of the request routing rule that is unique within an Application Gateway.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          readOnly: true
          type: string
          description: Type of the resource.
        id:
          type: string
          description: Resource ID.
      type: object
    ApplicationGatewayRoutingRulePropertiesFormat:
      type: object
      properties:
        ruleType:
          type: string
          description: Rule type.
          enum:
            - Basic
            - PathBasedRouting
          x-ms-enum:
            name: ApplicationGatewayRequestRoutingRuleType
            modelAsString: true
        priority:
          type: integer
          format: int32
          minimum: 1
          exclusiveMinimum: false
          maximum: 20000
          exclusiveMaximum: false
          description: Priority of the routing rule.
        backendAddressPool:
          $ref: '#/components/schemas/SubResource'
          description: Backend address pool resource of the application gateway.
        backendSettings:
          $ref: '#/components/schemas/SubResource'
          description: Backend settings resource of the application gateway.
        listener:
          $ref: '#/components/schemas/SubResource'
          description: Listener resource of the application gateway.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the request routing rule resource.
      required:
        - priority
      description: Properties of routing rule of the application gateway.
    ApplicationGatewayRoutingRule:
      description: Routing rule of an application gateway.
      properties:
        ruleType:
          type: string
          description: Rule type.
          enum:
            - Basic
            - PathBasedRouting
          x-ms-enum:
            name: ApplicationGatewayRequestRoutingRuleType
            modelAsString: true
        priority:
          type: integer
          format: int32
          minimum: 1
          exclusiveMinimum: false
          maximum: 20000
          exclusiveMaximum: false
          description: Priority of the routing rule.
        backendAddressPool:
          $ref: '#/components/schemas/SubResource'
          description: Backend address pool resource of the application gateway.
        backendSettings:
          $ref: '#/components/schemas/SubResource'
          description: Backend settings resource of the application gateway.
        listener:
          $ref: '#/components/schemas/SubResource'
          description: Listener resource of the application gateway.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the request routing rule resource.
        name:
          type: string
          description: Name of the routing rule that is unique within an Application Gateway.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          readOnly: true
          type: string
          description: Type of the resource.
        id:
          type: string
          description: Resource ID.
      type: object
    ApplicationGatewayRewriteRuleSet:
      description: Rewrite rule set of an application gateway.
      properties:
        rewriteRules:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayRewriteRule'
          description: Rewrite rules in the rewrite rule set.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the rewrite rule set resource.
        name:
          type: string
          description: Name of the rewrite rule set that is unique within an Application Gateway.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
      type: object
    ApplicationGatewayRewriteRuleSetPropertiesFormat:
      properties:
        rewriteRules:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayRewriteRule'
          description: Rewrite rules in the rewrite rule set.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the rewrite rule set resource.
      description: Properties of rewrite rule set of the application gateway.
      type: object
    ApplicationGatewayRewriteRule:
      properties:
        name:
          type: string
          description: Name of the rewrite rule that is unique within an Application Gateway.
        ruleSequence:
          type: integer
          description: Rule Sequence of the rewrite rule that determines the order of execution of a particular rule in a RewriteRuleSet.
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayRewriteRuleCondition'
          description: Conditions based on which the action set execution will be evaluated.
        actionSet:
          type: object
          $ref: '#/components/schemas/ApplicationGatewayRewriteRuleActionSet'
          description: Set of actions to be done as part of the rewrite Rule.
      description: Rewrite rule of an application gateway.
      type: object
    ApplicationGatewayRewriteRuleCondition:
      properties:
        variable:
          type: string
          description: The condition parameter of the RewriteRuleCondition.
        pattern:
          type: string
          description: The pattern, either fixed string or regular expression, that evaluates the truthfulness of the condition.
        ignoreCase:
          type: boolean
          description: Setting this parameter to truth value with force the pattern to do a case in-sensitive comparison.
        negate:
          type: boolean
          description: Setting this value as truth will force to check the negation of the condition given by the user.
      description: Set of conditions in the Rewrite Rule in Application Gateway.
      type: object
    ApplicationGatewayRewriteRuleActionSet:
      properties:
        requestHeaderConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayHeaderConfiguration'
          description: Request Header Actions in the Action Set.
        responseHeaderConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayHeaderConfiguration'
          description: Response Header Actions in the Action Set.
        urlConfiguration:
          $ref: '#/components/schemas/ApplicationGatewayUrlConfiguration'
          description: Url Configuration Action in the Action Set.
      description: Set of actions in the Rewrite Rule in Application Gateway.
      type: object
    ApplicationGatewayHeaderConfiguration:
      properties:
        headerName:
          type: string
          description: Header name of the header configuration.
        headerValue:
          type: string
          description: Header value of the header configuration.
      description: Header configuration of the Actions set in Application Gateway.
      type: object
    ApplicationGatewayUrlConfiguration:
      properties:
        modifiedPath:
          type: string
          description: Url path which user has provided for url rewrite. Null means no path will be updated. Default value is null.
        modifiedQueryString:
          type: string
          description: Query string which user has provided for url rewrite. Null means no query string will be updated. Default value is null.
        reroute:
          type: boolean
          description: If set as true, it will re-evaluate the url path map provided in path based request routing rules using modified path. Default value is false.
      description: Url configuration of the Actions set in Application Gateway.
      type: object
    ApplicationGatewayRedirectConfigurationPropertiesFormat:
      properties:
        redirectType:
          type: string
          $ref: '#/components/schemas/RedirectTypeEnum'
          description: HTTP redirection type.
        targetListener:
          $ref: '#/components/schemas/SubResource'
          description: Reference to a listener to redirect the request to.
        targetUrl:
          type: string
          description: Url to redirect the request to.
        includePath:
          type: boolean
          description: Include path in the redirected url.
        includeQueryString:
          type: boolean
          description: Include query string in the redirected url.
        requestRoutingRules:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: Request routing specifying redirect configuration.
        urlPathMaps:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: Url path maps specifying default redirect configuration.
        pathRules:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: Path rules specifying redirect configuration.
      description: Properties of redirect configuration of the application gateway.
      type: object
    ApplicationGatewayRedirectConfiguration:
      description: Redirect configuration of an application gateway.
      properties:
        redirectType:
          type: string
          $ref: '#/components/schemas/RedirectTypeEnum'
          description: HTTP redirection type.
        targetListener:
          $ref: '#/components/schemas/SubResource'
          description: Reference to a listener to redirect the request to.
        targetUrl:
          type: string
          description: Url to redirect the request to.
        includePath:
          type: boolean
          description: Include path in the redirected url.
        includeQueryString:
          type: boolean
          description: Include query string in the redirected url.
        requestRoutingRules:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: Request routing specifying redirect configuration.
        urlPathMaps:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: Url path maps specifying default redirect configuration.
        pathRules:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: Path rules specifying redirect configuration.
        name:
          type: string
          description: Name of the redirect configuration that is unique within an Application Gateway.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          readOnly: true
          type: string
          description: Type of the resource.
        id:
          type: string
          description: Resource ID.
      type: object
    ApplicationGatewayPrivateLinkConfiguration:
      description: Private Link Configuration on an application gateway.
      properties:
        ipConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayPrivateLinkIpConfiguration'
          description: An array of application gateway private link ip configurations.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the application gateway private link configuration.
        name:
          type: string
          description: Name of the private link configuration that is unique within an Application Gateway.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          readOnly: true
          type: string
          description: Type of the resource.
        id:
          type: string
          description: Resource ID.
      type: object
    ApplicationGatewayPrivateLinkConfigurationProperties:
      properties:
        ipConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayPrivateLinkIpConfiguration'
          description: An array of application gateway private link ip configurations.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the application gateway private link configuration.
      description: Properties of private link configuration on an application gateway.
      type: object
    ApplicationGatewayPrivateLinkIpConfiguration:
      description: The application gateway private link ip configuration.
      properties:
        privateIPAddress:
          type: string
          description: The private IP address of the IP configuration.
        privateIPAllocationMethod:
          $ref: '#/components/schemas/IPAllocationMethod'
          description: The private IP address allocation method.
        subnet:
          $ref: '#/components/schemas/SubResource'
          description: Reference to the subnet resource.
        primary:
          type: boolean
          description: Whether the ip configuration is primary or not.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the application gateway private link IP configuration.
        name:
          type: string
          description: The name of application gateway private link ip configuration.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          readOnly: true
          type: string
          description: The resource type.
        id:
          type: string
          description: Resource ID.
      type: object
    ApplicationGatewayPrivateLinkIpConfigurationProperties:
      properties:
        privateIPAddress:
          type: string
          description: The private IP address of the IP configuration.
        privateIPAllocationMethod:
          $ref: '#/components/schemas/IPAllocationMethod'
          description: The private IP address allocation method.
        subnet:
          $ref: '#/components/schemas/SubResource'
          description: Reference to the subnet resource.
        primary:
          type: boolean
          description: Whether the ip configuration is primary or not.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the application gateway private link IP configuration.
      description: Properties of an application gateway private link IP configuration.
      type: object
    ApplicationGatewayPrivateLinkResource:
      description: PrivateLink Resource of an application gateway.
      properties:
        groupId:
          description: Group identifier of private link resource.
          type: string
          readOnly: true
        requiredMembers:
          description: Required member names of private link resource.
          type: array
          items:
            type: string
          readOnly: true
        requiredZoneNames:
          type: array
          items:
            type: string
          description: Required DNS zone names of the the private link resource.
        name:
          type: string
          description: Name of the private link resource that is unique within an Application Gateway.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          readOnly: true
          type: string
          description: Type of the resource.
        id:
          type: string
          description: Resource ID.
      type: object
    ApplicationGatewayPrivateLinkResourceProperties:
      properties:
        groupId:
          description: Group identifier of private link resource.
          type: string
          readOnly: true
        requiredMembers:
          description: Required member names of private link resource.
          type: array
          items:
            type: string
          readOnly: true
        requiredZoneNames:
          type: array
          items:
            type: string
          description: Required DNS zone names of the the private link resource.
      description: Properties of a private link resource.
      type: object
    ApplicationGatewayPrivateLinkResourceListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayPrivateLinkResource'
          description: List of private link resources of an application gateway.
        nextLink:
          type: string
          description: URL to get the next set of results.
      description: Response for ListApplicationGatewayPrivateLinkResources API service call. Gets all private link resources for an application gateway.
      type: object
    ApplicationGatewayPrivateEndpointConnection:
      description: Private Endpoint connection on an application gateway.
      properties:
        privateEndpoint:
          readOnly: true
          $ref: '#/components/schemas/PrivateEndpoint'
          description: The resource of private end point.
        privateLinkServiceConnectionState:
          $ref: '#/components/schemas/PrivateLinkServiceConnectionState'
          description: A collection of information about the state of the connection between service consumer and provider.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the application gateway private endpoint connection resource.
        linkIdentifier:
          readOnly: true
          type: string
          description: The consumer link id.
        name:
          type: string
          description: Name of the private endpoint connection on an application gateway.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          readOnly: true
          type: string
          description: Type of the resource.
        id:
          type: string
          description: Resource ID.
      type: object
    ApplicationGatewayPrivateEndpointConnectionProperties:
      properties:
        privateEndpoint:
          readOnly: true
          $ref: '#/components/schemas/PrivateEndpoint'
          description: The resource of private end point.
        privateLinkServiceConnectionState:
          $ref: '#/components/schemas/PrivateLinkServiceConnectionState'
          description: A collection of information about the state of the connection between service consumer and provider.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the application gateway private endpoint connection resource.
        linkIdentifier:
          readOnly: true
          type: string
          description: The consumer link id.
      description: Properties of Private Link Resource of an application gateway.
      type: object
    ApplicationGatewayPrivateEndpointConnectionListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayPrivateEndpointConnection'
          description: List of private endpoint connections on an application gateway.
        nextLink:
          type: string
          description: URL to get the next set of results.
      description: Response for ListApplicationGatewayPrivateEndpointConnection API service call. Gets all private endpoint connections for an application gateway.
      type: object
    ApplicationGatewayPropertiesFormat:
      properties:
        sku:
          $ref: '#/components/schemas/ApplicationGatewaySku'
          description: SKU of the application gateway resource.
        sslPolicy:
          $ref: '#/components/schemas/ApplicationGatewaySslPolicy'
          description: SSL policy of the application gateway resource.
        operationalState:
          readOnly: true
          type: string
          description: Operational state of the application gateway resource.
          enum:
            - Stopped
            - Starting
            - Running
            - Stopping
          x-ms-enum:
            name: ApplicationGatewayOperationalState
            modelAsString: true
        gatewayIPConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayIPConfiguration'
          description: Subnets of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
        authenticationCertificates:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayAuthenticationCertificate'
          description: Authentication certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
        trustedRootCertificates:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayTrustedRootCertificate'
          description: Trusted Root certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
        trustedClientCertificates:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayTrustedClientCertificate'
          description: Trusted client certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
        sslCertificates:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewaySslCertificate'
          description: SSL certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
        frontendIPConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayFrontendIPConfiguration'
          description: Frontend IP addresses of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
        frontendPorts:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayFrontendPort'
          description: Frontend ports of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
        probes:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayProbe'
          description: Probes of the application gateway resource.
        backendAddressPools:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayBackendAddressPool'
          description: Backend address pool of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
        backendHttpSettingsCollection:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayBackendHttpSettings'
          description: Backend http settings of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
        backendSettingsCollection:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayBackendSettings'
          description: Backend settings of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
        httpListeners:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayHttpListener'
          description: Http listeners of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
        listeners:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayListener'
          description: Listeners of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
        sslProfiles:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewaySslProfile'
          description: SSL profiles of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
        urlPathMaps:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayUrlPathMap'
          description: URL path map of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
        requestRoutingRules:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayRequestRoutingRule'
          description: Request routing rules of the application gateway resource.
        routingRules:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayRoutingRule'
          description: Routing rules of the application gateway resource.
        rewriteRuleSets:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayRewriteRuleSet'
          description: Rewrite rules for the application gateway resource.
        redirectConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayRedirectConfiguration'
          description: Redirect configurations of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
        webApplicationFirewallConfiguration:
          $ref: '#/components/schemas/ApplicationGatewayWebApplicationFirewallConfiguration'
          description: Web application firewall configuration.
        firewallPolicy:
          $ref: '#/components/schemas/SubResource'
          description: Reference to the FirewallPolicy resource.
        enableHttp2:
          type: boolean
          description: Whether HTTP2 is enabled on the application gateway resource.
        enableFips:
          type: boolean
          description: Whether FIPS is enabled on the application gateway resource.
        autoscaleConfiguration:
          $ref: '#/components/schemas/ApplicationGatewayAutoscaleConfiguration'
          description: Autoscale Configuration.
        privateLinkConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayPrivateLinkConfiguration'
          description: PrivateLink configurations on application gateway.
        privateEndpointConnections:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayPrivateEndpointConnection'
          description: Private Endpoint connections on application gateway.
        resourceGuid:
          readOnly: true
          type: string
          description: The resource GUID property of the application gateway resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the application gateway resource.
        customErrorConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayCustomError'
          description: Custom error configurations of the application gateway resource.
        forceFirewallPolicyAssociation:
          type: boolean
          description: If true, associates a firewall policy with an application gateway regardless whether the policy differs from the WAF Config.
        loadDistributionPolicies:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayLoadDistributionPolicy'
          description: Load distribution policies of the application gateway resource.
        globalConfiguration:
          $ref: '#/components/schemas/ApplicationGatewayGlobalConfiguration'
          description: Global Configuration.
      description: Properties of the application gateway.
      type: object
    ApplicationGateway:
      description: Application gateway resource.
      properties:
        sku:
          $ref: '#/components/schemas/ApplicationGatewaySku'
          description: SKU of the application gateway resource.
        sslPolicy:
          $ref: '#/components/schemas/ApplicationGatewaySslPolicy'
          description: SSL policy of the application gateway resource.
        operationalState:
          readOnly: true
          type: string
          description: Operational state of the application gateway resource.
          enum:
            - Stopped
            - Starting
            - Running
            - Stopping
          x-ms-enum:
            name: ApplicationGatewayOperationalState
            modelAsString: true
        gatewayIPConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayIPConfiguration'
          description: Subnets of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
        authenticationCertificates:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayAuthenticationCertificate'
          description: Authentication certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
        trustedRootCertificates:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayTrustedRootCertificate'
          description: Trusted Root certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
        trustedClientCertificates:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayTrustedClientCertificate'
          description: Trusted client certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
        sslCertificates:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewaySslCertificate'
          description: SSL certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
        frontendIPConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayFrontendIPConfiguration'
          description: Frontend IP addresses of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
        frontendPorts:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayFrontendPort'
          description: Frontend ports of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
        probes:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayProbe'
          description: Probes of the application gateway resource.
        backendAddressPools:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayBackendAddressPool'
          description: Backend address pool of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
        backendHttpSettingsCollection:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayBackendHttpSettings'
          description: Backend http settings of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
        backendSettingsCollection:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayBackendSettings'
          description: Backend settings of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
        httpListeners:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayHttpListener'
          description: Http listeners of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
        listeners:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayListener'
          description: Listeners of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
        sslProfiles:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewaySslProfile'
          description: SSL profiles of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
        urlPathMaps:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayUrlPathMap'
          description: URL path map of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
        requestRoutingRules:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayRequestRoutingRule'
          description: Request routing rules of the application gateway resource.
        routingRules:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayRoutingRule'
          description: Routing rules of the application gateway resource.
        rewriteRuleSets:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayRewriteRuleSet'
          description: Rewrite rules for the application gateway resource.
        redirectConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayRedirectConfiguration'
          description: Redirect configurations of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
        webApplicationFirewallConfiguration:
          $ref: '#/components/schemas/ApplicationGatewayWebApplicationFirewallConfiguration'
          description: Web application firewall configuration.
        firewallPolicy:
          $ref: '#/components/schemas/SubResource'
          description: Reference to the FirewallPolicy resource.
        enableHttp2:
          type: boolean
          description: Whether HTTP2 is enabled on the application gateway resource.
        enableFips:
          type: boolean
          description: Whether FIPS is enabled on the application gateway resource.
        autoscaleConfiguration:
          $ref: '#/components/schemas/ApplicationGatewayAutoscaleConfiguration'
          description: Autoscale Configuration.
        privateLinkConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayPrivateLinkConfiguration'
          description: PrivateLink configurations on application gateway.
        privateEndpointConnections:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayPrivateEndpointConnection'
          description: Private Endpoint connections on application gateway.
        resourceGuid:
          readOnly: true
          type: string
          description: The resource GUID property of the application gateway resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the application gateway resource.
        customErrorConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayCustomError'
          description: Custom error configurations of the application gateway resource.
        forceFirewallPolicyAssociation:
          type: boolean
          description: If true, associates a firewall policy with an application gateway regardless whether the policy differs from the WAF Config.
        loadDistributionPolicies:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayLoadDistributionPolicy'
          description: Load distribution policies of the application gateway resource.
        globalConfiguration:
          $ref: '#/components/schemas/ApplicationGatewayGlobalConfiguration'
          description: Global Configuration.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        zones:
          type: array
          items:
            type: string
          description: A list of availability zones denoting where the resource needs to come from.
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
          description: The identity of the application gateway, if configured.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    ApplicationGatewayListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGateway'
          description: List of an application gateways in a resource group.
        nextLink:
          type: string
          description: URL to get the next set of results.
      description: Response for ListApplicationGateways API service call.
      type: object
    ApplicationGatewayUrlPathMapPropertiesFormat:
      properties:
        defaultBackendAddressPool:
          $ref: '#/components/schemas/SubResource'
          description: Default backend address pool resource of URL path map.
        defaultBackendHttpSettings:
          $ref: '#/components/schemas/SubResource'
          description: Default backend http settings resource of URL path map.
        defaultRewriteRuleSet:
          $ref: '#/components/schemas/SubResource'
          description: Default Rewrite rule set resource of URL path map.
        defaultRedirectConfiguration:
          $ref: '#/components/schemas/SubResource'
          description: Default redirect configuration resource of URL path map.
        defaultLoadDistributionPolicy:
          $ref: '#/components/schemas/SubResource'
          description: Default Load Distribution Policy resource of URL path map.
        pathRules:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayPathRule'
          description: Path rule of URL path map resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the URL path map resource.
      description: Properties of UrlPathMap of the application gateway.
      type: object
    ApplicationGatewayUrlPathMap:
      description: UrlPathMaps give a url path to the backend mapping information for PathBasedRouting.
      properties:
        defaultBackendAddressPool:
          $ref: '#/components/schemas/SubResource'
          description: Default backend address pool resource of URL path map.
        defaultBackendHttpSettings:
          $ref: '#/components/schemas/SubResource'
          description: Default backend http settings resource of URL path map.
        defaultRewriteRuleSet:
          $ref: '#/components/schemas/SubResource'
          description: Default Rewrite rule set resource of URL path map.
        defaultRedirectConfiguration:
          $ref: '#/components/schemas/SubResource'
          description: Default redirect configuration resource of URL path map.
        defaultLoadDistributionPolicy:
          $ref: '#/components/schemas/SubResource'
          description: Default Load Distribution Policy resource of URL path map.
        pathRules:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayPathRule'
          description: Path rule of URL path map resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the URL path map resource.
        name:
          type: string
          description: Name of the URL path map that is unique within an Application Gateway.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          readOnly: true
          type: string
          description: Type of the resource.
        id:
          type: string
          description: Resource ID.
      type: object
    ApplicationGatewayWebApplicationFirewallConfiguration:
      properties:
        enabled:
          type: boolean
          description: Whether the web application firewall is enabled or not.
        firewallMode:
          type: string
          description: Web application firewall mode.
          enum:
            - Detection
            - Prevention
          x-ms-enum:
            name: ApplicationGatewayFirewallMode
            modelAsString: true
        ruleSetType:
          type: string
          description: 'The type of the web application firewall rule set. Possible values are: ''OWASP''.'
        ruleSetVersion:
          type: string
          description: The version of the rule set type.
        disabledRuleGroups:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayFirewallDisabledRuleGroup'
          description: The disabled rule groups.
        requestBodyCheck:
          type: boolean
          description: Whether allow WAF to check request Body.
        maxRequestBodySize:
          type: integer
          format: int32
          maximum: 128
          exclusiveMaximum: false
          minimum: 8
          exclusiveMinimum: false
          description: Maximum request body size for WAF.
        maxRequestBodySizeInKb:
          type: integer
          format: int32
          maximum: 128
          exclusiveMaximum: false
          minimum: 8
          exclusiveMinimum: false
          description: Maximum request body size in Kb for WAF.
        fileUploadLimitInMb:
          type: integer
          format: int32
          minimum: 0
          exclusiveMinimum: false
          description: Maximum file upload size in Mb for WAF.
        exclusions:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayFirewallExclusion'
          description: The exclusion list.
      required:
        - enabled
        - firewallMode
        - ruleSetType
        - ruleSetVersion
      description: Application gateway web application firewall configuration.
      type: object
    ApplicationGatewayAutoscaleConfiguration:
      properties:
        minCapacity:
          type: integer
          format: int32
          minimum: 0
          exclusiveMinimum: false
          description: Lower bound on number of Application Gateway capacity.
        maxCapacity:
          type: integer
          format: int32
          minimum: 2
          exclusiveMinimum: false
          description: Upper bound on number of Application Gateway capacity.
      required:
        - minCapacity
      description: Application Gateway autoscale configuration.
      type: object
    ApplicationGatewayConnectionDraining:
      properties:
        enabled:
          type: boolean
          description: Whether connection draining is enabled or not.
        drainTimeoutInSec:
          type: integer
          format: int32
          maximum: 3600
          exclusiveMaximum: false
          minimum: 1
          exclusiveMinimum: false
          description: The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds.
      required:
        - enabled
        - drainTimeoutInSec
      description: Connection draining allows open connections to a backend server to be active for a specified time after the backend server got removed from the configuration.
      type: object
    ApplicationGatewayFirewallDisabledRuleGroup:
      properties:
        ruleGroupName:
          type: string
          description: The name of the rule group that will be disabled.
        rules:
          type: array
          items:
            type: integer
            format: int32
            nullable: false
          description: The list of rules that will be disabled. If null, all rules of the rule group will be disabled.
      required:
        - ruleGroupName
      description: Allows to disable rules within a rule group or an entire rule group.
      type: object
    ApplicationGatewayAvailableServerVariablesResult:
      type: array
      items:
        type: string
      description: Response for ApplicationGatewayAvailableServerVariables API service call.
    ApplicationGatewayAvailableRequestHeadersResult:
      type: array
      items:
        type: string
      description: Response for ApplicationGatewayAvailableRequestHeaders API service call.
    ApplicationGatewayAvailableResponseHeadersResult:
      type: array
      items:
        type: string
      description: Response for ApplicationGatewayAvailableResponseHeaders API service call.
    ApplicationGatewayFirewallExclusion:
      properties:
        matchVariable:
          type: string
          description: The variable to be excluded.
        selectorMatchOperator:
          type: string
          description: When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to.
        selector:
          type: string
          description: When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to.
      required:
        - matchVariable
        - selectorMatchOperator
        - selector
      description: Allow to exclude some variable satisfy the condition for the WAF check.
      type: object
    ApplicationGatewayAvailableWafRuleSetsResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayFirewallRuleSet'
          description: The list of application gateway rule sets.
      description: Response for ApplicationGatewayAvailableWafRuleSets API service call.
      type: object
    ApplicationGatewayFirewallRuleSet:
      description: A web application firewall rule set.
      properties:
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the web application firewall rule set.
        ruleSetType:
          type: string
          description: The type of the web application firewall rule set.
        ruleSetVersion:
          type: string
          description: The version of the web application firewall rule set type.
        ruleGroups:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayFirewallRuleGroup'
          description: The rule groups of the web application firewall rule set.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    ApplicationGatewayFirewallRuleSetPropertiesFormat:
      properties:
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the web application firewall rule set.
        ruleSetType:
          type: string
          description: The type of the web application firewall rule set.
        ruleSetVersion:
          type: string
          description: The version of the web application firewall rule set type.
        ruleGroups:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayFirewallRuleGroup'
          description: The rule groups of the web application firewall rule set.
      required:
        - ruleSetType
        - ruleSetVersion
        - ruleGroups
      description: Properties of the web application firewall rule set.
      type: object
    ApplicationGatewayFirewallRuleGroup:
      properties:
        ruleGroupName:
          type: string
          description: The name of the web application firewall rule group.
        description:
          type: string
          description: The description of the web application firewall rule group.
        rules:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayFirewallRule'
          description: The rules of the web application firewall rule group.
      required:
        - ruleGroupName
        - rules
      description: A web application firewall rule group.
      type: object
    ApplicationGatewayFirewallRule:
      properties:
        ruleId:
          type: integer
          format: int32
          description: The identifier of the web application firewall rule.
        description:
          type: string
          description: The description of the web application firewall rule.
      required:
        - ruleId
      description: A web application firewall rule.
      type: object
    ApplicationGatewayAvailableSslOptions:
      description: Response for ApplicationGatewayAvailableSslOptions API service call.
      properties:
        predefinedPolicies:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: List of available Ssl predefined policy.
        defaultPolicy:
          $ref: '#/components/schemas/PolicyNameEnum'
          description: Name of the Ssl predefined policy applied by default to application gateway.
        availableCipherSuites:
          type: array
          items:
            $ref: '#/components/schemas/CipherSuitesEnum'
          description: List of available Ssl cipher suites.
        availableProtocols:
          type: array
          items:
            $ref: '#/components/schemas/ProtocolsEnum'
          description: List of available Ssl protocols.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    ApplicationGatewayAvailableSslOptionsPropertiesFormat:
      properties:
        predefinedPolicies:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: List of available Ssl predefined policy.
        defaultPolicy:
          $ref: '#/components/schemas/PolicyNameEnum'
          description: Name of the Ssl predefined policy applied by default to application gateway.
        availableCipherSuites:
          type: array
          items:
            $ref: '#/components/schemas/CipherSuitesEnum'
          description: List of available Ssl cipher suites.
        availableProtocols:
          type: array
          items:
            $ref: '#/components/schemas/ProtocolsEnum'
          description: List of available Ssl protocols.
      description: Properties of ApplicationGatewayAvailableSslOptions.
      type: object
    ApplicationGatewayAvailableSslPredefinedPolicies:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewaySslPredefinedPolicy'
          description: List of available Ssl predefined policy.
        nextLink:
          type: string
          description: URL to get the next set of results.
      description: Response for ApplicationGatewayAvailableSslOptions API service call.
      type: object
    ApplicationGatewaySslPredefinedPolicy:
      description: An Ssl predefined policy.
      properties:
        cipherSuites:
          type: array
          items:
            $ref: '#/components/schemas/CipherSuitesEnum'
          description: Ssl cipher suites to be enabled in the specified order for application gateway.
        minProtocolVersion:
          $ref: '#/components/schemas/ProtocolsEnum'
          description: Minimum version of Ssl protocol to be supported on application gateway.
        name:
          type: string
          description: Name of the Ssl predefined policy.
        id:
          type: string
          description: Resource ID.
      type: object
    ApplicationGatewaySslPredefinedPolicyPropertiesFormat:
      properties:
        cipherSuites:
          type: array
          items:
            $ref: '#/components/schemas/CipherSuitesEnum'
          description: Ssl cipher suites to be enabled in the specified order for application gateway.
        minProtocolVersion:
          $ref: '#/components/schemas/ProtocolsEnum'
          description: Minimum version of Ssl protocol to be supported on application gateway.
      description: Properties of ApplicationGatewaySslPredefinedPolicy.
      type: object
    ApplicationGatewayCustomError:
      properties:
        statusCode:
          type: string
          description: Status code of the application gateway customer error.
          enum:
            - HttpStatus403
            - HttpStatus502
          x-ms-enum:
            name: ApplicationGatewayCustomErrorStatusCode
            modelAsString: true
        customErrorPageUrl:
          type: string
          description: Error page URL of the application gateway customer error.
      description: Customer error of an application gateway.
      type: object
    PolicyNameEnum:
      type: string
      description: Ssl predefined policy name enums.
      enum:
        - AppGwSslPolicy20150501
        - AppGwSslPolicy20170401
        - AppGwSslPolicy20170401S
        - AppGwSslPolicy20220101
        - AppGwSslPolicy20220101S
      x-ms-enum:
        name: ApplicationGatewaySslPolicyName
        modelAsString: true
    ProtocolsEnum:
      type: string
      description: Ssl protocol enums.
      enum:
        - TLSv1_0
        - TLSv1_1
        - TLSv1_2
        - TLSv1_3
      x-ms-enum:
        name: ApplicationGatewaySslProtocol
        modelAsString: true
    CipherSuitesEnum:
      type: string
      description: Ssl cipher suites enums.
      enum:
        - TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384
        - TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
        - TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA
        - TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA
        - TLS_DHE_RSA_WITH_AES_256_GCM_SHA384
        - TLS_DHE_RSA_WITH_AES_128_GCM_SHA256
        - TLS_DHE_RSA_WITH_AES_256_CBC_SHA
        - TLS_DHE_RSA_WITH_AES_128_CBC_SHA
        - TLS_RSA_WITH_AES_256_GCM_SHA384
        - TLS_RSA_WITH_AES_128_GCM_SHA256
        - TLS_RSA_WITH_AES_256_CBC_SHA256
        - TLS_RSA_WITH_AES_128_CBC_SHA256
        - TLS_RSA_WITH_AES_256_CBC_SHA
        - TLS_RSA_WITH_AES_128_CBC_SHA
        - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
        - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
        - TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384
        - TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
        - TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA
        - TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA
        - TLS_DHE_DSS_WITH_AES_256_CBC_SHA256
        - TLS_DHE_DSS_WITH_AES_128_CBC_SHA256
        - TLS_DHE_DSS_WITH_AES_256_CBC_SHA
        - TLS_DHE_DSS_WITH_AES_128_CBC_SHA
        - TLS_RSA_WITH_3DES_EDE_CBC_SHA
        - TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA
        - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
        - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
      x-ms-enum:
        name: ApplicationGatewaySslCipherSuite
        modelAsString: true
    RedirectTypeEnum:
      type: string
      description: Redirect type enum.
      enum:
        - Permanent
        - Found
        - SeeOther
        - Temporary
      x-ms-enum:
        name: ApplicationGatewayRedirectType
        modelAsString: true
    ApplicationGatewayProtocol:
      type: string
      description: Application Gateway protocol.
      enum:
        - Http
        - Https
        - Tcp
        - Tls
      x-ms-enum:
        name: ApplicationGatewayProtocol
        modelAsString: true
    ApplicationGatewayLoadDistributionPolicyPropertiesFormat:
      properties:
        loadDistributionTargets:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayLoadDistributionTarget'
          description: Load Distribution Targets resource of an application gateway.
        loadDistributionAlgorithm:
          $ref: '#/components/schemas/ApplicationGatewayLoadDistributionAlgorithmEnum'
          description: Load Distribution Targets resource of an application gateway.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the Load Distribution Policy resource.
      description: Properties of Load Distribution Policy of an application gateway.
      type: object
    ApplicationGatewayLoadDistributionPolicy:
      description: Load Distribution Policy of an application gateway.
      properties:
        loadDistributionTargets:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayLoadDistributionTarget'
          description: Load Distribution Targets resource of an application gateway.
        loadDistributionAlgorithm:
          $ref: '#/components/schemas/ApplicationGatewayLoadDistributionAlgorithmEnum'
          description: Load Distribution Targets resource of an application gateway.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the Load Distribution Policy resource.
        name:
          type: string
          description: Name of the load distribution policy that is unique within an Application Gateway.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          readOnly: true
          type: string
          description: Type of the resource.
        id:
          type: string
          description: Resource ID.
      type: object
    ApplicationGatewayLoadDistributionTargetPropertiesFormat:
      properties:
        weightPerServer:
          type: integer
          format: int32
          maximum: 100
          exclusiveMaximum: false
          minimum: 1
          exclusiveMinimum: false
          description: Weight per server. Range between 1 and 100.
        backendAddressPool:
          $ref: '#/components/schemas/SubResource'
          description: Backend address pool resource of the application gateway.
      type: object
    ApplicationGatewayLoadDistributionTarget:
      description: Load Distribution Target of an application gateway.
      properties:
        weightPerServer:
          type: integer
          format: int32
          maximum: 100
          exclusiveMaximum: false
          minimum: 1
          exclusiveMinimum: false
          description: Weight per server. Range between 1 and 100.
        backendAddressPool:
          $ref: '#/components/schemas/SubResource'
          description: Backend address pool resource of the application gateway.
        name:
          type: string
          description: Name of the load distribution policy that is unique within an Application Gateway.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          readOnly: true
          type: string
          description: Type of the resource.
        id:
          type: string
          description: Resource ID.
      type: object
    ApplicationGatewayLoadDistributionAlgorithmEnum:
      type: string
      description: Load Distribution Algorithm enums.
      enum:
        - RoundRobin
        - LeastConnections
        - IpHash
      x-ms-enum:
        name: ApplicationGatewayLoadDistributionAlgorithm
        modelAsString: true
    ApplicationGatewayGlobalConfiguration:
      properties:
        enableRequestBuffering:
          type: boolean
          description: Enable request buffering.
        enableResponseBuffering:
          type: boolean
          description: Enable response buffering.
      description: Application Gateway global configuration.
      type: object
    ServiceAssociationLinkPropertiesFormat:
      properties:
        linkedResourceType:
          type: string
          description: Resource type of the linked resource.
        link:
          type: string
          description: Link to the external resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the service association link resource.
        allowDelete:
          type: boolean
          description: If true, the resource can be deleted.
        locations:
          type: array
          items:
            type: string
          description: A list of locations.
      description: Properties of ServiceAssociationLink.
      type: object
    ServiceAssociationLink:
      description: ServiceAssociationLink resource.
      properties:
        linkedResourceType:
          type: string
          description: Resource type of the linked resource.
        link:
          type: string
          description: Link to the external resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the service association link resource.
        allowDelete:
          type: boolean
          description: If true, the resource can be deleted.
        locations:
          type: array
          items:
            type: string
          description: A list of locations.
        name:
          type: string
          description: Name of the resource that is unique within a resource group. This name can be used to access the resource.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          readOnly: true
          type: string
          description: Resource type.
        id:
          type: string
          description: Resource ID.
      type: object
    ResourceNavigationLinkFormat:
      properties:
        linkedResourceType:
          type: string
          description: Resource type of the linked resource.
        link:
          type: string
          description: Link to the external resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the resource navigation link resource.
      description: Properties of ResourceNavigationLink.
      type: object
    ResourceNavigationLink:
      description: ResourceNavigationLink resource.
      properties:
        linkedResourceType:
          type: string
          description: Resource type of the linked resource.
        link:
          type: string
          description: Link to the external resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the resource navigation link resource.
        name:
          type: string
          description: Name of the resource that is unique within a resource group. This name can be used to access the resource.
        id:
          type: string
          description: Resource ID.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          readOnly: true
          type: string
          description: Resource type.
      type: object
    ServiceDelegationPropertiesFormat:
      properties:
        serviceName:
          type: string
          description: The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers).
        actions:
          readOnly: true
          type: array
          items:
            type: string
          description: The actions permitted to the service upon delegation.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the service delegation resource.
      description: Properties of a service delegation.
      type: object
    Delegation:
      description: Details the service to which the subnet is delegated.
      properties:
        serviceName:
          type: string
          description: The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers).
        actions:
          readOnly: true
          type: array
          items:
            type: string
          description: The actions permitted to the service upon delegation.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the service delegation resource.
        name:
          type: string
          description: The name of the resource that is unique within a subnet. This name can be used to access the resource.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          type: string
          description: Resource type.
        id:
          type: string
          description: Resource ID.
      type: object
    SubnetPropertiesFormat:
      properties:
        addressPrefix:
          type: string
          description: The address prefix for the subnet.
        addressPrefixes:
          type: array
          items:
            type: string
          description: List of address prefixes for the subnet.
        networkSecurityGroup:
          $ref: '#/components/schemas/NetworkSecurityGroup'
          description: The reference to the NetworkSecurityGroup resource.
        routeTable:
          $ref: '#/components/schemas/RouteTable'
          description: The reference to the RouteTable resource.
        natGateway:
          $ref: '#/components/schemas/SubResource'
          description: Nat gateway associated with this subnet.
        serviceEndpoints:
          type: array
          items:
            $ref: '#/components/schemas/ServiceEndpointPropertiesFormat'
          description: An array of service endpoints.
        serviceEndpointPolicies:
          type: array
          items:
            $ref: '#/components/schemas/ServiceEndpointPolicy'
          description: An array of service endpoint policies.
        privateEndpoints:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/PrivateEndpoint'
          description: An array of references to private endpoints.
        ipConfigurations:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/IPConfiguration'
          description: An array of references to the network interface IP configurations using subnet.
        ipConfigurationProfiles:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/IPConfigurationProfile'
          description: Array of IP configuration profiles which reference this subnet.
        ipAllocations:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: Array of IpAllocation which reference this subnet.
        resourceNavigationLinks:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ResourceNavigationLink'
          description: An array of references to the external resources using subnet.
        serviceAssociationLinks:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ServiceAssociationLink'
          description: An array of references to services injecting into this subnet.
        delegations:
          type: array
          items:
            $ref: '#/components/schemas/Delegation'
          description: An array of references to the delegations on the subnet.
        purpose:
          type: string
          readOnly: true
          description: A read-only string identifying the intention of use for this subnet based on delegations and other user-defined properties.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the subnet resource.
        privateEndpointNetworkPolicies:
          type: string
          default: Disabled
          description: Enable or Disable apply network policies on private end point in the subnet.
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: VirtualNetworkPrivateEndpointNetworkPolicies
            modelAsString: true
        privateLinkServiceNetworkPolicies:
          type: string
          default: Enabled
          description: Enable or Disable apply network policies on private link service in the subnet.
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: VirtualNetworkPrivateLinkServiceNetworkPolicies
            modelAsString: true
        applicationGatewayIpConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayIPConfiguration'
          description: Application gateway IP configurations of virtual network resource.
      description: Properties of the subnet.
      type: object
    ServiceEndpointPropertiesFormat:
      properties:
        service:
          type: string
          description: The type of the endpoint service.
        locations:
          type: array
          items:
            type: string
          description: A list of locations.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the service endpoint resource.
      description: The service endpoint properties.
      type: object
    VirtualNetworkPeeringPropertiesFormat:
      properties:
        allowVirtualNetworkAccess:
          type: boolean
          description: Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space.
        allowForwardedTraffic:
          type: boolean
          description: Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network.
        allowGatewayTransit:
          type: boolean
          description: If gateway links can be used in remote virtual networking to link to this virtual network.
        useRemoteGateways:
          type: boolean
          description: If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.
        remoteVirtualNetwork:
          $ref: '#/components/schemas/SubResource'
          description: The reference to the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).
        remoteAddressSpace:
          $ref: '#/components/schemas/AddressSpace'
          description: The reference to the address space peered with the remote virtual network.
        remoteVirtualNetworkAddressSpace:
          $ref: '#/components/schemas/AddressSpace'
          description: The reference to the current address space of the remote virtual network.
        remoteBgpCommunities:
          $ref: '#/components/schemas/VirtualNetworkBgpCommunities'
          default: null
          description: The reference to the remote virtual network's Bgp Communities.
        remoteVirtualNetworkEncryption:
          readOnly: true
          $ref: '#/components/schemas/VirtualNetworkEncryption'
          default: null
          description: The reference to the remote virtual network's encryption
        peeringState:
          type: string
          description: The status of the virtual network peering.
          enum:
            - Initiated
            - Connected
            - Disconnected
          x-ms-enum:
            name: VirtualNetworkPeeringState
            modelAsString: true
        peeringSyncLevel:
          type: string
          description: The peering sync status of the virtual network peering.
          enum:
            - FullyInSync
            - RemoteNotInSync
            - LocalNotInSync
            - LocalAndRemoteNotInSync
          x-ms-enum:
            name: VirtualNetworkPeeringLevel
            modelAsString: true
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the virtual network peering resource.
        doNotVerifyRemoteGateways:
          type: boolean
          description: If we need to verify the provisioning state of the remote gateway.
        resourceGuid:
          readOnly: true
          type: string
          description: The resourceGuid property of the Virtual Network peering resource.
      description: Properties of the virtual network peering.
      type: object
    Subnet:
      description: Subnet in a virtual network resource.
      properties:
        addressPrefix:
          type: string
          description: The address prefix for the subnet.
        addressPrefixes:
          type: array
          items:
            type: string
          description: List of address prefixes for the subnet.
        networkSecurityGroup:
          $ref: '#/components/schemas/NetworkSecurityGroup'
          description: The reference to the NetworkSecurityGroup resource.
        routeTable:
          $ref: '#/components/schemas/RouteTable'
          description: The reference to the RouteTable resource.
        natGateway:
          $ref: '#/components/schemas/SubResource'
          description: Nat gateway associated with this subnet.
        serviceEndpoints:
          type: array
          items:
            $ref: '#/components/schemas/ServiceEndpointPropertiesFormat'
          description: An array of service endpoints.
        serviceEndpointPolicies:
          type: array
          items:
            $ref: '#/components/schemas/ServiceEndpointPolicy'
          description: An array of service endpoint policies.
        privateEndpoints:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/PrivateEndpoint'
          description: An array of references to private endpoints.
        ipConfigurations:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/IPConfiguration'
          description: An array of references to the network interface IP configurations using subnet.
        ipConfigurationProfiles:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/IPConfigurationProfile'
          description: Array of IP configuration profiles which reference this subnet.
        ipAllocations:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: Array of IpAllocation which reference this subnet.
        resourceNavigationLinks:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ResourceNavigationLink'
          description: An array of references to the external resources using subnet.
        serviceAssociationLinks:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ServiceAssociationLink'
          description: An array of references to services injecting into this subnet.
        delegations:
          type: array
          items:
            $ref: '#/components/schemas/Delegation'
          description: An array of references to the delegations on the subnet.
        purpose:
          type: string
          readOnly: true
          description: A read-only string identifying the intention of use for this subnet based on delegations and other user-defined properties.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the subnet resource.
        privateEndpointNetworkPolicies:
          type: string
          default: Disabled
          description: Enable or Disable apply network policies on private end point in the subnet.
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: VirtualNetworkPrivateEndpointNetworkPolicies
            modelAsString: true
        privateLinkServiceNetworkPolicies:
          type: string
          default: Enabled
          description: Enable or Disable apply network policies on private link service in the subnet.
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: VirtualNetworkPrivateLinkServiceNetworkPolicies
            modelAsString: true
        applicationGatewayIpConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayIPConfiguration'
          description: Application gateway IP configurations of virtual network resource.
        name:
          type: string
          description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          type: string
          description: Resource type.
        id:
          type: string
          description: Resource ID.
      type: object
    VirtualNetworkPeering:
      description: Peerings in a virtual network resource.
      properties:
        allowVirtualNetworkAccess:
          type: boolean
          description: Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space.
        allowForwardedTraffic:
          type: boolean
          description: Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network.
        allowGatewayTransit:
          type: boolean
          description: If gateway links can be used in remote virtual networking to link to this virtual network.
        useRemoteGateways:
          type: boolean
          description: If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.
        remoteVirtualNetwork:
          $ref: '#/components/schemas/SubResource'
          description: The reference to the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).
        remoteAddressSpace:
          $ref: '#/components/schemas/AddressSpace'
          description: The reference to the address space peered with the remote virtual network.
        remoteVirtualNetworkAddressSpace:
          $ref: '#/components/schemas/AddressSpace'
          description: The reference to the current address space of the remote virtual network.
        remoteBgpCommunities:
          $ref: '#/components/schemas/VirtualNetworkBgpCommunities'
          default: null
          description: The reference to the remote virtual network's Bgp Communities.
        remoteVirtualNetworkEncryption:
          readOnly: true
          $ref: '#/components/schemas/VirtualNetworkEncryption'
          default: null
          description: The reference to the remote virtual network's encryption
        peeringState:
          type: string
          description: The status of the virtual network peering.
          enum:
            - Initiated
            - Connected
            - Disconnected
          x-ms-enum:
            name: VirtualNetworkPeeringState
            modelAsString: true
        peeringSyncLevel:
          type: string
          description: The peering sync status of the virtual network peering.
          enum:
            - FullyInSync
            - RemoteNotInSync
            - LocalNotInSync
            - LocalAndRemoteNotInSync
          x-ms-enum:
            name: VirtualNetworkPeeringLevel
            modelAsString: true
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the virtual network peering resource.
        doNotVerifyRemoteGateways:
          type: boolean
          description: If we need to verify the provisioning state of the remote gateway.
        resourceGuid:
          readOnly: true
          type: string
          description: The resourceGuid property of the Virtual Network peering resource.
        name:
          type: string
          description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          type: string
          description: Resource type.
        id:
          type: string
          description: Resource ID.
      type: object
    SubnetListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Subnet'
          description: The subnets in a virtual network.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: Response for ListSubnets API service callRetrieves all subnet that belongs to a virtual network.
      type: object
    ResourceNavigationLinksListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ResourceNavigationLink'
          description: The resource navigation links in a subnet.
        nextLink:
          type: string
          readOnly: true
          description: The URL to get the next set of results.
      description: Response for ResourceNavigationLinks_List operation.
      type: object
    ServiceAssociationLinksListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ServiceAssociationLink'
          description: The service association links in a subnet.
        nextLink:
          type: string
          readOnly: true
          description: The URL to get the next set of results.
      description: Response for ServiceAssociationLinks_List operation.
      type: object
    VirtualNetworkPeeringListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VirtualNetworkPeering'
          description: The peerings in a virtual network.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: Response for ListSubnets API service call. Retrieves all subnets that belong to a virtual network.
      type: object
    VirtualNetworkPropertiesFormat:
      properties:
        addressSpace:
          $ref: '#/components/schemas/AddressSpace'
          description: The AddressSpace that contains an array of IP address ranges that can be used by subnets.
        dhcpOptions:
          $ref: '#/components/schemas/DhcpOptions'
          description: The dhcpOptions that contains an array of DNS servers available to VMs deployed in the virtual network.
        flowTimeoutInMinutes:
          type: integer
          format: int32
          description: The FlowTimeout value (in minutes) for the Virtual Network
        subnets:
          type: array
          items:
            $ref: '#/components/schemas/Subnet'
          description: A list of subnets in a Virtual Network.
        virtualNetworkPeerings:
          type: array
          items:
            $ref: '#/components/schemas/VirtualNetworkPeering'
          description: A list of peerings in a Virtual Network.
        resourceGuid:
          readOnly: true
          type: string
          description: The resourceGuid property of the Virtual Network resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the virtual network resource.
        enableDdosProtection:
          type: boolean
          default: false
          description: Indicates if DDoS protection is enabled for all the protected resources in the virtual network. It requires a DDoS protection plan associated with the resource.
        enableVmProtection:
          type: boolean
          default: false
          description: Indicates if VM protection is enabled for all the subnets in the virtual network.
        ddosProtectionPlan:
          $ref: '#/components/schemas/SubResource'
          default: null
          description: The DDoS protection plan associated with the virtual network.
        bgpCommunities:
          $ref: '#/components/schemas/VirtualNetworkBgpCommunities'
          default: null
          description: Bgp Communities sent over ExpressRoute with each route corresponding to a prefix in this VNET.
        encryption:
          $ref: '#/components/schemas/VirtualNetworkEncryption'
          default: null
          description: Indicates if encryption is enabled on virtual network and if VM without encryption is allowed in encrypted VNet.
        ipAllocations:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: Array of IpAllocation which reference this VNET.
      description: Properties of the virtual network.
      type: object
    VirtualNetwork:
      description: Virtual Network resource.
      properties:
        addressSpace:
          $ref: '#/components/schemas/AddressSpace'
          description: The AddressSpace that contains an array of IP address ranges that can be used by subnets.
        dhcpOptions:
          $ref: '#/components/schemas/DhcpOptions'
          description: The dhcpOptions that contains an array of DNS servers available to VMs deployed in the virtual network.
        flowTimeoutInMinutes:
          type: integer
          format: int32
          description: The FlowTimeout value (in minutes) for the Virtual Network
        properties:
          type: object
          properties:
            subnets:
              type: array
              items:
                $ref: '#/components/schemas/Subnet'
              description: A list of subnets in a Virtual Network.
            virtualNetworkPeerings:
              type: array
              items:
                $ref: '#/components/schemas/VirtualNetworkPeering'
              description: A list of peerings in a Virtual Network.
            resourceGuid:
              readOnly: true
              type: string
              description: The resourceGuid property of the Virtual Network resource.
            provisioningState:
              readOnly: true
              $ref: '#/components/schemas/ProvisioningState'
              description: The provisioning state of the virtual network resource.
            enableDdosProtection:
              type: boolean
              default: false
              description: Indicates if DDoS protection is enabled for all the protected resources in the virtual network. It requires a DDoS protection plan associated with the resource.
        enableVmProtection:
          type: boolean
          default: false
          description: Indicates if VM protection is enabled for all the subnets in the virtual network.
        ddosProtectionPlan:
          $ref: '#/components/schemas/SubResource'
          default: null
          description: The DDoS protection plan associated with the virtual network.
        bgpCommunities:
          $ref: '#/components/schemas/VirtualNetworkBgpCommunities'
          default: null
          description: Bgp Communities sent over ExpressRoute with each route corresponding to a prefix in this VNET.
        encryption:
          $ref: '#/components/schemas/VirtualNetworkEncryption'
          default: null
          description: Indicates if encryption is enabled on virtual network and if VM without encryption is allowed in encrypted VNet.
        ipAllocations:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: Array of IpAllocation which reference this VNET.
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location of the virtual network.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    VirtualNetworkListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VirtualNetwork'
          description: A list of VirtualNetwork resources in a resource group.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: Response for the ListVirtualNetworks API service call.
      type: object
    AddressSpace:
      properties:
        addressPrefixes:
          type: array
          items:
            type: string
          description: A list of address blocks reserved for this virtual network in CIDR notation.
      description: AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.
      type: object
    DhcpOptions:
      properties:
        dnsServers:
          type: array
          items:
            type: string
          description: The list of DNS servers IP addresses.
      description: DhcpOptions contains an array of DNS servers available to VMs deployed in the virtual network. Standard DHCP option for a subnet overrides VNET DHCP options.
      type: object
    VirtualNetworkBgpCommunities:
      properties:
        virtualNetworkCommunity:
          type: string
          description: The BGP community associated with the virtual network.
        regionalCommunity:
          type: string
          readOnly: true
          description: The BGP community associated with the region of the virtual network.
      required:
        - virtualNetworkCommunity
      description: Bgp Communities sent over ExpressRoute with each route corresponding to a prefix in this VNET.
      type: object
    VirtualNetworkEncryption:
      type: object
      properties:
        enabled:
          type: boolean
          description: Indicates if encryption is enabled on the virtual network.
        enforcement:
          type: string
          description: If the encrypted VNet allows VM that does not support encryption
          enum:
            - DropUnencrypted
            - AllowUnencrypted
          x-ms-enum:
            name: VirtualNetworkEncryptionEnforcement
            modelAsString: true
      required:
        - enabled
      description: Indicates if encryption is enabled on virtual network and if VM without encryption is allowed in encrypted VNet.
    IPAddressAvailabilityResult:
      properties:
        available:
          type: boolean
          description: Private IP address availability.
        availableIPAddresses:
          type: array
          items:
            type: string
          description: Contains other available private IP addresses if the asked for address is taken.
        isPlatformReserved:
          type: boolean
          description: Private IP address platform reserved.
      description: Response for CheckIPAddressAvailability API service call.
      type: object
    VirtualNetworkListUsageResult:
      properties:
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/VirtualNetworkUsage'
          description: VirtualNetwork usage stats.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: Response for the virtual networks GetUsage API service call.
      type: object
    VirtualNetworkUsage:
      properties:
        currentValue:
          type: number
          format: double
          readOnly: true
          description: Indicates number of IPs used from the Subnet.
        id:
          type: string
          readOnly: true
          description: Subnet identifier.
        limit:
          type: number
          format: double
          readOnly: true
          description: Indicates the size of the subnet.
        name:
          $ref: '#/components/schemas/VirtualNetworkUsageName'
          readOnly: true
          description: The name containing common and localized value for usage.
        unit:
          type: string
          readOnly: true
          description: Usage units. Returns 'Count'.
      description: Usage details for subnet.
      type: object
    VirtualNetworkUsageName:
      properties:
        localizedValue:
          type: string
          readOnly: true
          description: Localized subnet size and usage string.
        value:
          type: string
          readOnly: true
          description: Subnet size and usage string.
      description: Usage strings container.
      type: object
    PrepareNetworkPoliciesRequest:
      properties:
        serviceName:
          type: string
          description: The name of the service for which subnet is being prepared for.
        networkIntentPolicyConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/NetworkIntentPolicyConfiguration'
          description: A list of NetworkIntentPolicyConfiguration.
      description: Details of PrepareNetworkPolicies for Subnet.
      type: object
    UnprepareNetworkPoliciesRequest:
      properties:
        serviceName:
          type: string
          description: The name of the service for which subnet is being unprepared for.
      description: Details of UnprepareNetworkPolicies for Subnet.
      type: object
    NetworkIntentPolicyConfiguration:
      properties:
        networkIntentPolicyName:
          type: string
          description: The name of the Network Intent Policy for storing in target subscription.
        sourceNetworkIntentPolicy:
          $ref: '#/components/schemas/NetworkIntentPolicy'
          description: Source network intent policy.
      description: Details of NetworkIntentPolicyConfiguration for PrepareNetworkPoliciesRequest.
      type: object
    NetworkIntentPolicy:
      description: Network Intent Policy resource.
      properties:
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    NetworkProfilePropertiesFormat:
      properties:
        containerNetworkInterfaces:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ContainerNetworkInterface'
          description: List of child container network interfaces.
        containerNetworkInterfaceConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/ContainerNetworkInterfaceConfiguration'
          description: List of chid container network interface configurations.
        resourceGuid:
          readOnly: true
          type: string
          description: The resource GUID property of the network profile resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the network profile resource.
      description: Network profile properties.
      type: object
    NetworkProfile:
      description: Network profile resource.
      properties:
        containerNetworkInterfaces:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ContainerNetworkInterface'
          description: List of child container network interfaces.
        containerNetworkInterfaceConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/ContainerNetworkInterfaceConfiguration'
          description: List of chid container network interface configurations.
        resourceGuid:
          readOnly: true
          type: string
          description: The resource GUID property of the network profile resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the network profile resource.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    NetworkProfileListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/NetworkProfile'
          description: A list of network profiles that exist in a resource group.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: Response for ListNetworkProfiles API service call.
      type: object
    ContainerNetworkInterfacePropertiesFormat:
      properties:
        containerNetworkInterfaceConfiguration:
          readOnly: true
          $ref: '#/components/schemas/ContainerNetworkInterfaceConfiguration'
          description: Container network interface configuration from which this container network interface is created.
        container:
          $ref: '#/components/schemas/Container'
          description: Reference to the container to which this container network interface is attached.
        ipConfigurations:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ContainerNetworkInterfaceIpConfiguration'
          description: Reference to the ip configuration on this container nic.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the container network interface resource.
      description: Properties of container network interface.
      type: object
    ContainerNetworkInterface:
      description: Container network interface child resource.
      properties:
        containerNetworkInterfaceConfiguration:
          readOnly: true
          $ref: '#/components/schemas/ContainerNetworkInterfaceConfiguration'
          description: Container network interface configuration from which this container network interface is created.
        container:
          $ref: '#/components/schemas/Container'
          description: Reference to the container to which this container network interface is attached.
        ipConfigurations:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ContainerNetworkInterfaceIpConfiguration'
          description: Reference to the ip configuration on this container nic.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the container network interface resource.
        name:
          type: string
          description: The name of the resource. This name can be used to access the resource.
        type:
          readOnly: true
          type: string
          description: Sub Resource type.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
      type: object
    ContainerNetworkInterfaceConfigurationPropertiesFormat:
      properties:
        ipConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/IPConfigurationProfile'
          description: A list of ip configurations of the container network interface configuration.
        containerNetworkInterfaces:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: A list of container network interfaces created from this container network interface configuration.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the container network interface configuration resource.
      description: Container network interface configuration properties.
      type: object
    ContainerNetworkInterfaceConfiguration:
      description: Container network interface configuration child resource.
      properties:
        ipConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/IPConfigurationProfile'
          description: A list of ip configurations of the container network interface configuration.
        containerNetworkInterfaces:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: A list of container network interfaces created from this container network interface configuration.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the container network interface configuration resource.
        name:
          type: string
          description: The name of the resource. This name can be used to access the resource.
        type:
          readOnly: true
          type: string
          description: Sub Resource type.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
      type: object
    IPConfigurationProfilePropertiesFormat:
      properties:
        subnet:
          $ref: '#/components/schemas/Subnet'
          description: The reference to the subnet resource to create a container network interface ip configuration.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the IP configuration profile resource.
      description: IP configuration profile properties.
      type: object
    IPConfigurationProfile:
      description: IP configuration profile child resource.
      properties:
        subnet:
          $ref: '#/components/schemas/Subnet'
          description: The reference to the subnet resource to create a container network interface ip configuration.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the IP configuration profile resource.
        name:
          type: string
          description: The name of the resource. This name can be used to access the resource.
        type:
          readOnly: true
          type: string
          description: Sub Resource type.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
      type: object
    Container:
      description: Reference to container resource in remote resource provider.
      properties:
        id:
          type: string
          description: Resource ID.
      type: object
    ContainerNetworkInterfaceIpConfigurationPropertiesFormat:
      properties:
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the container network interface IP configuration resource.
      description: Properties of the container network interface IP configuration.
      type: object
    ContainerNetworkInterfaceIpConfiguration:
      description: The ip configuration for a container network interface.
      properties:
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the container network interface IP configuration resource.
        name:
          type: string
          description: The name of the resource. This name can be used to access the resource.
        type:
          readOnly: true
          type: string
          description: Sub Resource type.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
      type: object
    ActiveConfigurationParameter:
      type: object
      properties:
        regions:
          type: array
          items:
            type: string
            description: region Name.
          description: List of regions.
        skipToken:
          description: When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.
          type: string
      description: Effective Virtual Networks Parameter.
    ActiveConnectivityConfiguration:
      description: Active connectivity configuration.
      properties:
        commitTime:
          type: string
          description: Deployment time string.
          format: date-time
        region:
          type: string
          description: Deployment region.
        id:
          type: string
          description: Connectivity configuration ID.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ConnectivityConfigurationProperties'
          description: Properties of a network manager connectivity configuration
        configurationGroups:
          type: array
          items:
            $ref: '#/components/schemas/ConfigurationGroup'
          description: Effective configuration groups.
      type: object
    ActiveConnectivityConfigurationsListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ActiveConnectivityConfiguration'
          description: Gets a page of active connectivity configurations.
        skipToken:
          description: When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.
          type: string
      description: Result of the request to list active connectivity configurations. It contains a list of active connectivity configurations and a skiptoken to get the next set of results.
    ActiveSecurityAdminRulesListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ActiveBaseSecurityAdminRule'
          description: Gets a page of active security admin rules.
        skipToken:
          description: When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.
          type: string
      description: Result of the request to list active security admin rules. It contains a list of active security admin rules and a skiptoken to get the next set of results.
    ActiveBaseSecurityAdminRule:
      type: object
      properties:
        id:
          type: string
          description: Resource ID.
        commitTime:
          type: string
          description: Deployment time string.
          format: date-time
        region:
          type: string
          description: Deployment region.
        configurationDescription:
          type: string
          description: A description of the security admin configuration.
        ruleCollectionDescription:
          type: string
          description: A description of the rule collection.
        ruleCollectionAppliesToGroups:
          type: array
          x-ms-identifiers: []
          items:
            $ref: '#/components/schemas/NetworkManagerSecurityGroupItem'
          description: Groups for rule collection
        ruleGroups:
          type: array
          items:
            $ref: '#/components/schemas/ConfigurationGroup'
          description: Effective configuration groups.
        kind:
          type: string
          description: Whether the rule is custom or default.
          enum:
            - Custom
            - Default
          x-ms-enum:
            name: EffectiveAdminRuleKind
            modelAsString: true
      required:
        - kind
      discriminator:
        propertyName: kind
      description: Network base admin rule.
    ActiveSecurityAdminRule:
      description: Network admin rule.
      x-ms-discriminator-value: Custom
      properties:
        description:
          type: string
          description: A description for this rule. Restricted to 140 chars.
        protocol:
          type: string
          $ref: '#/components/schemas/RuleProtocol'
          description: Network protocol this rule applies to.
        sources:
          type: array
          x-ms-identifiers:
            - addressPrefix
          items:
            $ref: '#/components/schemas/AddressPrefixItem'
          description: The CIDR or source IP ranges.
        destinations:
          type: array
          x-ms-identifiers:
            - addressPrefix
          items:
            $ref: '#/components/schemas/AddressPrefixItem'
          description: The destination address prefixes. CIDR or destination IP ranges.
        sourcePortRanges:
          type: array
          items:
            type: string
            description: The source port.
          description: The source port ranges.
        destinationPortRanges:
          type: array
          items:
            type: string
            description: The destination port.
          description: The destination port ranges.
        access:
          $ref: '#/components/schemas/SecurityConfigurationRuleAccess'
          description: Indicates the access allowed for this particular rule
        priority:
          type: integer
          format: int32
          minimum: 1
          maximum: 4096
          description: The priority of the rule. The value can be between 1 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
        direction:
          $ref: '#/components/schemas/SecurityConfigurationRuleDirection'
          description: Indicates if the traffic matched against the rule in inbound or outbound.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the resource.
        id:
          type: string
          description: Resource ID.
        commitTime:
          type: string
          description: Deployment time string.
          format: date-time
        region:
          type: string
          description: Deployment region.
        configurationDescription:
          type: string
          description: A description of the security admin configuration.
        ruleCollectionDescription:
          type: string
          description: A description of the rule collection.
        ruleCollectionAppliesToGroups:
          type: array
          x-ms-identifiers: []
          items:
            $ref: '#/components/schemas/NetworkManagerSecurityGroupItem'
          description: Groups for rule collection
        ruleGroups:
          type: array
          items:
            $ref: '#/components/schemas/ConfigurationGroup'
          description: Effective configuration groups.
        kind:
          type: string
          description: Whether the rule is custom or default.
          enum:
            - Custom
            - Default
          x-ms-enum:
            name: EffectiveAdminRuleKind
            modelAsString: true
      type: object
    ActiveDefaultSecurityAdminRule:
      description: Network default admin rule.
      x-ms-discriminator-value: Default
      properties:
        description:
          type: string
          readOnly: true
          description: A description for this rule. Restricted to 140 chars.
        flag:
          type: string
          description: Default rule flag.
        protocol:
          type: string
          readOnly: true
          $ref: '#/components/schemas/RuleProtocol'
          description: Network protocol this rule applies to.
        sources:
          type: array
          x-ms-identifiers:
            - addressPrefix
          readOnly: true
          items:
            $ref: '#/components/schemas/AddressPrefixItem'
          description: The CIDR or source IP ranges.
        destinations:
          type: array
          x-ms-identifiers:
            - addressPrefix
          readOnly: true
          items:
            $ref: '#/components/schemas/AddressPrefixItem'
          description: The destination address prefixes. CIDR or destination IP ranges.
        sourcePortRanges:
          type: array
          readOnly: true
          items:
            type: string
            description: The source port.
          description: The source port ranges.
        destinationPortRanges:
          type: array
          readOnly: true
          items:
            type: string
            description: The destination port.
          description: The destination port ranges.
        access:
          $ref: '#/components/schemas/SecurityConfigurationRuleAccess'
          readOnly: true
          description: Indicates the access allowed for this particular rule
        priority:
          type: integer
          format: int32
          readOnly: true
          description: The priority of the rule. The value can be between 1 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
        direction:
          $ref: '#/components/schemas/SecurityConfigurationRuleDirection'
          readOnly: true
          description: Indicates if the traffic matched against the rule in inbound or outbound.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the resource.
        id:
          type: string
          description: Resource ID.
        commitTime:
          type: string
          description: Deployment time string.
          format: date-time
        region:
          type: string
          description: Deployment region.
        configurationDescription:
          type: string
          description: A description of the security admin configuration.
        ruleCollectionDescription:
          type: string
          description: A description of the rule collection.
        ruleCollectionAppliesToGroups:
          type: array
          x-ms-identifiers: []
          items:
            $ref: '#/components/schemas/NetworkManagerSecurityGroupItem'
          description: Groups for rule collection
        ruleGroups:
          type: array
          items:
            $ref: '#/components/schemas/ConfigurationGroup'
          description: Effective configuration groups.
        kind:
          type: string
          description: Whether the rule is custom or default.
          enum:
            - Custom
            - Default
          x-ms-enum:
            name: EffectiveAdminRuleKind
            modelAsString: true
      type: object
    BGPCommunity:
      properties:
        serviceSupportedRegion:
          type: string
          description: The region which the service support. e.g. For O365, region is Global.
        communityName:
          type: string
          description: The name of the bgp community. e.g. Skype.
        communityValue:
          type: string
          description: 'The value of the bgp community. For more information: https://docs.microsoft.com/en-us/azure/expressroute/expressroute-routing.'
        communityPrefixes:
          type: array
          items:
            type: string
          description: The prefixes that the bgp community contains.
        isAuthorizedToUse:
          type: boolean
          description: Customer is authorized to use bgp community or not.
        serviceGroup:
          type: string
          description: The service group of the bgp community contains.
      description: Contains bgp community information offered in Service Community resources.
      type: object
    BgpServiceCommunityPropertiesFormat:
      properties:
        serviceName:
          type: string
          description: The name of the bgp community. e.g. Skype.
        bgpCommunities:
          type: array
          items:
            $ref: '#/components/schemas/BGPCommunity'
          description: A list of bgp communities.
      description: Properties of Service Community.
      type: object
    BgpServiceCommunity:
      description: Service Community Properties.
      properties:
        serviceName:
          type: string
          description: The name of the bgp community. e.g. Skype.
        bgpCommunities:
          type: array
          items:
            $ref: '#/components/schemas/BGPCommunity'
          description: A list of bgp communities.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    BgpServiceCommunityListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/BgpServiceCommunity'
          description: A list of service community resources.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: Response for the ListServiceCommunity API service call.
      type: object
    ExpressRouteCrossConnectionRoutesTableSummary:
      properties:
        neighbor:
          type: string
          description: IP address of Neighbor router.
        asn:
          type: integer
          format: int32
          description: Autonomous system number.
        upDown:
          type: string
          description: The length of time that the BGP session has been in the Established state, or the current status if not in the Established state.
        stateOrPrefixesReceived:
          type: string
          description: Current state of the BGP session, and the number of prefixes that have been received from a neighbor or peer group.
      description: The routes table associated with the ExpressRouteCircuit.
      type: object
    ExpressRouteCrossConnectionsRoutesTableSummaryListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ExpressRouteCrossConnectionRoutesTableSummary'
          description: A list of the routes table.
        nextLink:
          readOnly: true
          type: string
          description: The URL to get the next set of results.
      description: Response for ListRoutesTable associated with the Express Route Cross Connections.
      type: object
    ExpressRouteCircuitReference:
      properties:
        id:
          type: string
          description: Corresponding Express Route Circuit Id.
      description: Reference to an express route circuit.
      type: object
    ExpressRouteCrossConnectionProperties:
      properties:
        primaryAzurePort:
          readOnly: true
          type: string
          description: The name of the primary port.
        secondaryAzurePort:
          readOnly: true
          type: string
          description: The name of the secondary port.
        sTag:
          readOnly: true
          type: integer
          description: The identifier of the circuit traffic.
        peeringLocation:
          readOnly: true
          type: string
          description: The peering location of the ExpressRoute circuit.
        bandwidthInMbps:
          readOnly: true
          type: integer
          format: int32
          description: The circuit bandwidth In Mbps.
        expressRouteCircuit:
          $ref: '#/components/schemas/ExpressRouteCircuitReference'
          description: The ExpressRouteCircuit.
        serviceProviderProvisioningState:
          $ref: '#/components/schemas/ServiceProviderProvisioningState'
          description: The provisioning state of the circuit in the connectivity provider system.
        serviceProviderNotes:
          type: string
          description: Additional read only notes set by the connectivity provider.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the express route cross connection resource.
        peerings:
          type: array
          items:
            $ref: '#/components/schemas/ExpressRouteCrossConnectionPeering'
          description: The list of peerings.
      description: Properties of ExpressRouteCrossConnection.
      type: object
    ExpressRouteCrossConnection:
      description: ExpressRouteCrossConnection resource.
      properties:
        primaryAzurePort:
          readOnly: true
          type: string
          description: The name of the primary port.
        secondaryAzurePort:
          readOnly: true
          type: string
          description: The name of the secondary port.
        sTag:
          readOnly: true
          type: integer
          description: The identifier of the circuit traffic.
        peeringLocation:
          readOnly: true
          type: string
          description: The peering location of the ExpressRoute circuit.
        bandwidthInMbps:
          readOnly: true
          type: integer
          format: int32
          description: The circuit bandwidth In Mbps.
        expressRouteCircuit:
          $ref: '#/components/schemas/ExpressRouteCircuitReference'
          description: The ExpressRouteCircuit.
        serviceProviderProvisioningState:
          $ref: '#/components/schemas/ServiceProviderProvisioningState'
          description: The provisioning state of the circuit in the connectivity provider system.
        serviceProviderNotes:
          type: string
          description: Additional read only notes set by the connectivity provider.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the express route cross connection resource.
        peerings:
          type: array
          items:
            $ref: '#/components/schemas/ExpressRouteCrossConnectionPeering'
          description: The list of peerings.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    ExpressRouteCrossConnectionListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ExpressRouteCrossConnection'
          description: A list of ExpressRouteCrossConnection resources.
        nextLink:
          readOnly: true
          type: string
          description: The URL to get the next set of results.
      description: Response for ListExpressRouteCrossConnection API service call.
      type: object
    ExpressRouteCrossConnectionPeeringProperties:
      properties:
        peeringType:
          $ref: '#/components/schemas/ExpressRoutePeeringType'
          description: The peering type.
        state:
          $ref: '#/components/schemas/ExpressRoutePeeringState'
          description: The peering state.
        azureASN:
          readOnly: true
          type: integer
          format: int32
          description: The Azure ASN.
        peerASN:
          type: integer
          format: int64
          minimum: 1
          maximum: 4294967295
          description: The peer ASN.
        primaryPeerAddressPrefix:
          type: string
          description: The primary address prefix.
        secondaryPeerAddressPrefix:
          type: string
          description: The secondary address prefix.
        primaryAzurePort:
          readOnly: true
          type: string
          description: The primary port.
        secondaryAzurePort:
          readOnly: true
          type: string
          description: The secondary port.
        sharedKey:
          type: string
          description: The shared key.
        vlanId:
          type: integer
          format: int32
          description: The VLAN ID.
        microsoftPeeringConfig:
          $ref: '#/components/schemas/ExpressRouteCircuitPeeringConfig'
          description: The Microsoft peering configuration.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the express route cross connection peering resource.
        gatewayManagerEtag:
          type: string
          description: The GatewayManager Etag.
        lastModifiedBy:
          readOnly: true
          type: string
          description: Who was the last to modify the peering.
        ipv6PeeringConfig:
          $ref: '#/components/schemas/Ipv6ExpressRouteCircuitPeeringConfig'
          description: The IPv6 peering configuration.
      description: Properties of express route cross connection peering.
      type: object
    ExpressRouteCrossConnectionPeering:
      description: Peering in an ExpressRoute Cross Connection resource.
      properties:
        peeringType:
          $ref: '#/components/schemas/ExpressRoutePeeringType'
          description: The peering type.
        state:
          $ref: '#/components/schemas/ExpressRoutePeeringState'
          description: The peering state.
        azureASN:
          readOnly: true
          type: integer
          format: int32
          description: The Azure ASN.
        peerASN:
          type: integer
          format: int64
          minimum: 1
          maximum: 4294967295
          description: The peer ASN.
        primaryPeerAddressPrefix:
          type: string
          description: The primary address prefix.
        secondaryPeerAddressPrefix:
          type: string
          description: The secondary address prefix.
        primaryAzurePort:
          readOnly: true
          type: string
          description: The primary port.
        secondaryAzurePort:
          readOnly: true
          type: string
          description: The secondary port.
        sharedKey:
          type: string
          description: The shared key.
        vlanId:
          type: integer
          format: int32
          description: The VLAN ID.
        microsoftPeeringConfig:
          $ref: '#/components/schemas/ExpressRouteCircuitPeeringConfig'
          description: The Microsoft peering configuration.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the express route cross connection peering resource.
        gatewayManagerEtag:
          type: string
          description: The GatewayManager Etag.
        lastModifiedBy:
          readOnly: true
          type: string
          description: Who was the last to modify the peering.
        ipv6PeeringConfig:
          $ref: '#/components/schemas/Ipv6ExpressRouteCircuitPeeringConfig'
          description: The IPv6 peering configuration.
        name:
          type: string
          description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
      type: object
    ExpressRouteCrossConnectionPeeringList:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ExpressRouteCrossConnectionPeering'
          description: The peerings in an express route cross connection.
        nextLink:
          readOnly: true
          type: string
          description: The URL to get the next set of results.
      description: Response for ListPeering API service call retrieves all peerings that belong to an ExpressRouteCrossConnection.
      type: object
    PublicIPAddressSku:
      properties:
        name:
          type: string
          description: Name of a public IP address SKU.
          enum:
            - Basic
            - Standard
          x-ms-enum:
            name: PublicIPAddressSkuName
            modelAsString: true
        tier:
          type: string
          description: Tier of a public IP address SKU.
          enum:
            - Regional
            - Global
          x-ms-enum:
            name: PublicIPAddressSkuTier
            modelAsString: true
      description: SKU of a public IP address.
      type: object
    PublicIPAddressPropertiesFormat:
      properties:
        publicIPAllocationMethod:
          $ref: '#/components/schemas/IPAllocationMethod'
          description: The public IP address allocation method.
        publicIPAddressVersion:
          $ref: '#/components/schemas/IPVersion'
          description: The public IP address version.
        ipConfiguration:
          readOnly: true
          $ref: '#/components/schemas/IPConfiguration'
          description: The IP configuration associated with the public IP address.
        dnsSettings:
          $ref: '#/components/schemas/PublicIPAddressDnsSettings'
          description: The FQDN of the DNS record associated with the public IP address.
        ddosSettings:
          $ref: '#/components/schemas/DdosSettings'
          description: The DDoS protection custom policy associated with the public IP address.
        ipTags:
          type: array
          items:
            $ref: '#/components/schemas/IpTag'
          description: The list of tags associated with the public IP address.
        ipAddress:
          type: string
          description: The IP address associated with the public IP address resource.
        publicIPPrefix:
          $ref: '#/components/schemas/SubResource'
          description: The Public IP Prefix this Public IP Address should be allocated from.
        idleTimeoutInMinutes:
          type: integer
          format: int32
          description: The idle timeout of the public IP address.
        resourceGuid:
          readOnly: true
          type: string
          description: The resource GUID property of the public IP address resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the public IP address resource.
        servicePublicIPAddress:
          $ref: '#/components/schemas/PublicIPAddress'
          description: The service public IP address of the public IP address resource.
        natGateway:
          $ref: '#/components/schemas/NatGateway'
          description: The NatGateway for the Public IP address.
        migrationPhase:
          type: string
          description: Migration phase of Public IP Address.
          enum:
            - None
            - Prepare
            - Commit
            - Abort
            - Committed
          x-ms-enum:
            name: PublicIPAddressMigrationPhase
            modelAsString: true
        linkedPublicIPAddress:
          $ref: '#/components/schemas/PublicIPAddress'
          description: The linked public IP address of the public IP address resource.
        deleteOption:
          type: string
          description: Specify what happens to the public IP address when the VM using it is deleted
          enum:
            - Delete
            - Detach
          x-ms-enum:
            name: DeleteOptions
            modelAsString: true
      description: Public IP address properties.
      type: object
    PublicIPAddress:
      description: Public IP address resource.
      properties:
        publicIPAllocationMethod:
          $ref: '#/components/schemas/IPAllocationMethod'
          description: The public IP address allocation method.
        publicIPAddressVersion:
          $ref: '#/components/schemas/IPVersion'
          description: The public IP address version.
        ipConfiguration:
          readOnly: true
          $ref: '#/components/schemas/IPConfiguration'
          description: The IP configuration associated with the public IP address.
        dnsSettings:
          $ref: '#/components/schemas/PublicIPAddressDnsSettings'
          description: The FQDN of the DNS record associated with the public IP address.
        ddosSettings:
          $ref: '#/components/schemas/DdosSettings'
          description: The DDoS protection custom policy associated with the public IP address.
        ipTags:
          type: array
          items:
            $ref: '#/components/schemas/IpTag'
          description: The list of tags associated with the public IP address.
        ipAddress:
          type: string
          description: The IP address associated with the public IP address resource.
        publicIPPrefix:
          $ref: '#/components/schemas/SubResource'
          description: The Public IP Prefix this Public IP Address should be allocated from.
        idleTimeoutInMinutes:
          type: integer
          format: int32
          description: The idle timeout of the public IP address.
        resourceGuid:
          readOnly: true
          type: string
          description: The resource GUID property of the public IP address resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the public IP address resource.
        servicePublicIPAddress:
          $ref: '#/components/schemas/PublicIPAddress'
          description: The service public IP address of the public IP address resource.
        natGateway:
          $ref: '#/components/schemas/NatGateway'
          description: The NatGateway for the Public IP address.
        migrationPhase:
          type: string
          description: Migration phase of Public IP Address.
          enum:
            - None
            - Prepare
            - Commit
            - Abort
            - Committed
          x-ms-enum:
            name: PublicIPAddressMigrationPhase
            modelAsString: true
        linkedPublicIPAddress:
          $ref: '#/components/schemas/PublicIPAddress'
          description: The linked public IP address of the public IP address resource.
        deleteOption:
          type: string
          description: Specify what happens to the public IP address when the VM using it is deleted
          enum:
            - Delete
            - Detach
          x-ms-enum:
            name: DeleteOptions
            modelAsString: true
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location of the public ip address.
        sku:
          $ref: '#/components/schemas/PublicIPAddressSku'
          description: The public IP address SKU.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        zones:
          type: array
          items:
            type: string
          description: A list of availability zones denoting the IP allocated for the resource needs to come from.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    PublicIPAddressListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/PublicIPAddress'
          description: A list of public IP addresses that exists in a resource group.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: Response for ListPublicIpAddresses API service call.
      type: object
    PublicIPAddressDnsSettings:
      properties:
        domainNameLabel:
          type: string
          description: The domain name label. The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
        fqdn:
          type: string
          description: The Fully Qualified Domain Name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
        reverseFqdn:
          type: string
          description: The reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
      description: Contains FQDN of the DNS record associated with the public IP address.
      type: object
    DdosSettings:
      properties:
        ddosCustomPolicy:
          readOnly: false
          $ref: '#/components/schemas/SubResource'
          description: The DDoS custom policy associated with the public IP.
        protectionCoverage:
          readOnly: false
          type: string
          enum:
            - Basic
            - Standard
          x-ms-enum:
            name: DdosSettingsProtectionCoverage
            modelAsString: true
          description: The DDoS protection policy customizability of the public IP. Only standard coverage will have the ability to be customized.
        protectedIP:
          readOnly: false
          type: boolean
          description: Enables DDoS protection on the public IP.
      description: Contains the DDoS protection settings of the public IP.
      type: object
    IpTag:
      properties:
        ipTagType:
          type: string
          description: 'The IP tag type. Example: FirstPartyUsage.'
        tag:
          type: string
          description: 'The value of the IP tag associated with the public IP. Example: SQL.'
      description: Contains the IpTag associated with the object.
      type: object
    AuthorizationPropertiesFormat:
      properties:
        authorizationKey:
          type: string
          description: The authorization key.
        authorizationUseStatus:
          type: string
          description: The authorization use status.
          enum:
            - Available
            - InUse
          x-ms-enum:
            name: AuthorizationUseStatus
            modelAsString: true
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the authorization resource.
      description: Properties of ExpressRouteCircuitAuthorization.
      type: object
    ExpressRouteCircuitAuthorization:
      description: Authorization in an ExpressRouteCircuit resource.
      properties:
        authorizationKey:
          type: string
          description: The authorization key.
        authorizationUseStatus:
          type: string
          description: The authorization use status.
          enum:
            - Available
            - InUse
          x-ms-enum:
            name: AuthorizationUseStatus
            modelAsString: true
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the authorization resource.
        name:
          type: string
          description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          readOnly: true
          type: string
          description: Type of the resource.
        id:
          type: string
          description: Resource ID.
      type: object
    AuthorizationListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ExpressRouteCircuitAuthorization'
          description: The authorizations in an ExpressRoute Circuit.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: Response for ListAuthorizations API service call retrieves all authorizations that belongs to an ExpressRouteCircuit.
      type: object
    ExpressRouteCircuitPeeringConfig:
      properties:
        advertisedPublicPrefixes:
          type: array
          items:
            type: string
          description: The reference to AdvertisedPublicPrefixes.
        advertisedCommunities:
          type: array
          items:
            type: string
          description: The communities of bgp peering. Specified for microsoft peering.
        advertisedPublicPrefixesState:
          readOnly: true
          type: string
          description: The advertised public prefix state of the Peering resource.
          enum:
            - NotConfigured
            - Configuring
            - Configured
            - ValidationNeeded
          x-ms-enum:
            name: ExpressRouteCircuitPeeringAdvertisedPublicPrefixState
            modelAsString: true
        legacyMode:
          type: integer
          format: int32
          description: The legacy mode of the peering.
        customerASN:
          type: integer
          format: int32
          description: The CustomerASN of the peering.
        routingRegistryName:
          type: string
          description: The RoutingRegistryName of the configuration.
      description: Specifies the peering configuration.
      type: object
    Ipv6ExpressRouteCircuitPeeringConfig:
      properties:
        primaryPeerAddressPrefix:
          type: string
          description: The primary address prefix.
        secondaryPeerAddressPrefix:
          type: string
          description: The secondary address prefix.
        microsoftPeeringConfig:
          $ref: '#/components/schemas/ExpressRouteCircuitPeeringConfig'
          description: The Microsoft peering configuration.
        routeFilter:
          $ref: '#/components/schemas/SubResource'
          description: The reference to the RouteFilter resource.
        state:
          type: string
          description: The state of peering.
          enum:
            - Disabled
            - Enabled
          x-ms-enum:
            name: ExpressRouteCircuitPeeringState
            modelAsString: true
      description: Contains IPv6 peering config.
      type: object
    ExpressRouteCircuitStats:
      properties:
        primarybytesIn:
          type: integer
          format: int64
          description: The Primary BytesIn of the peering.
        primarybytesOut:
          type: integer
          format: int64
          description: The primary BytesOut of the peering.
        secondarybytesIn:
          type: integer
          format: int64
          description: The secondary BytesIn of the peering.
        secondarybytesOut:
          type: integer
          format: int64
          description: The secondary BytesOut of the peering.
      description: Contains stats associated with the peering.
      type: object
    ExpressRouteCircuitPeeringPropertiesFormat:
      properties:
        peeringType:
          $ref: '#/components/schemas/ExpressRoutePeeringType'
          description: The peering type.
        state:
          $ref: '#/components/schemas/ExpressRoutePeeringState'
          description: The peering state.
        azureASN:
          type: integer
          format: int32
          description: The Azure ASN.
        peerASN:
          type: integer
          format: int64
          minimum: 1
          maximum: 4294967295
          description: The peer ASN.
        primaryPeerAddressPrefix:
          type: string
          description: The primary address prefix.
        secondaryPeerAddressPrefix:
          type: string
          description: The secondary address prefix.
        primaryAzurePort:
          type: string
          description: The primary port.
        secondaryAzurePort:
          type: string
          description: The secondary port.
        sharedKey:
          type: string
          description: The shared key.
        vlanId:
          type: integer
          format: int32
          description: The VLAN ID.
        microsoftPeeringConfig:
          $ref: '#/components/schemas/ExpressRouteCircuitPeeringConfig'
          description: The Microsoft peering configuration.
        stats:
          $ref: '#/components/schemas/ExpressRouteCircuitStats'
          description: The peering stats of express route circuit.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the express route circuit peering resource.
        gatewayManagerEtag:
          type: string
          description: The GatewayManager Etag.
        lastModifiedBy:
          readOnly: true
          type: string
          description: Who was the last to modify the peering.
        routeFilter:
          $ref: '#/components/schemas/SubResource'
          description: The reference to the RouteFilter resource.
        ipv6PeeringConfig:
          $ref: '#/components/schemas/Ipv6ExpressRouteCircuitPeeringConfig'
          description: The IPv6 peering configuration.
        expressRouteConnection:
          $ref: '#/components/schemas/ExpressRouteConnectionId'
          description: The ExpressRoute connection.
        connections:
          type: array
          items:
            $ref: '#/components/schemas/ExpressRouteCircuitConnection'
          description: The list of circuit connections associated with Azure Private Peering for this circuit.
        peeredConnections:
          type: array
          items:
            $ref: '#/components/schemas/PeerExpressRouteCircuitConnection'
          readOnly: true
          description: The list of peered circuit connections associated with Azure Private Peering for this circuit.
      description: Properties of the express route circuit peering.
      type: object
    ExpressRouteCircuitPeering:
      description: Peering in an ExpressRouteCircuit resource.
      properties:
        peeringType:
          $ref: '#/components/schemas/ExpressRoutePeeringType'
          description: The peering type.
        state:
          $ref: '#/components/schemas/ExpressRoutePeeringState'
          description: The peering state.
        azureASN:
          type: integer
          format: int32
          description: The Azure ASN.
        peerASN:
          type: integer
          format: int64
          minimum: 1
          maximum: 4294967295
          description: The peer ASN.
        primaryPeerAddressPrefix:
          type: string
          description: The primary address prefix.
        secondaryPeerAddressPrefix:
          type: string
          description: The secondary address prefix.
        primaryAzurePort:
          type: string
          description: The primary port.
        secondaryAzurePort:
          type: string
          description: The secondary port.
        sharedKey:
          type: string
          description: The shared key.
        vlanId:
          type: integer
          format: int32
          description: The VLAN ID.
        microsoftPeeringConfig:
          $ref: '#/components/schemas/ExpressRouteCircuitPeeringConfig'
          description: The Microsoft peering configuration.
        stats:
          $ref: '#/components/schemas/ExpressRouteCircuitStats'
          description: The peering stats of express route circuit.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the express route circuit peering resource.
        gatewayManagerEtag:
          type: string
          description: The GatewayManager Etag.
        lastModifiedBy:
          readOnly: true
          type: string
          description: Who was the last to modify the peering.
        routeFilter:
          $ref: '#/components/schemas/SubResource'
          description: The reference to the RouteFilter resource.
        ipv6PeeringConfig:
          $ref: '#/components/schemas/Ipv6ExpressRouteCircuitPeeringConfig'
          description: The IPv6 peering configuration.
        expressRouteConnection:
          $ref: '#/components/schemas/ExpressRouteConnectionId'
          description: The ExpressRoute connection.
        connections:
          type: array
          items:
            $ref: '#/components/schemas/ExpressRouteCircuitConnection'
          description: The list of circuit connections associated with Azure Private Peering for this circuit.
        peeredConnections:
          type: array
          items:
            $ref: '#/components/schemas/PeerExpressRouteCircuitConnection'
          readOnly: true
          description: The list of peered circuit connections associated with Azure Private Peering for this circuit.
        name:
          type: string
          description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          readOnly: true
          type: string
          description: Type of the resource.
        id:
          type: string
          description: Resource ID.
      type: object
    ExpressRouteCircuitPeeringListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ExpressRouteCircuitPeering'
          description: The peerings in an express route circuit.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: Response for ListPeering API service call retrieves all peerings that belong to an ExpressRouteCircuit.
      type: object
    ExpressRoutePeeringType:
      type: string
      description: The peering type.
      enum:
        - AzurePublicPeering
        - AzurePrivatePeering
        - MicrosoftPeering
      x-ms-enum:
        name: ExpressRoutePeeringType
        modelAsString: true
    ExpressRoutePeeringState:
      type: string
      description: The state of peering.
      enum:
        - Disabled
        - Enabled
      x-ms-enum:
        name: ExpressRoutePeeringState
        modelAsString: true
    Ipv6CircuitConnectionConfig:
      description: IPv6 Circuit Connection properties for global reach.
      properties:
        addressPrefix:
          type: string
          description: /125 IP address space to carve out customer addresses for global reach.
        circuitConnectionStatus:
          readOnly: true
          $ref: '#/components/schemas/CircuitConnectionStatus'
          description: Express Route Circuit connection state.
      type: object
    ExpressRouteCircuitConnectionPropertiesFormat:
      properties:
        expressRouteCircuitPeering:
          $ref: '#/components/schemas/SubResource'
          description: Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection.
        peerExpressRouteCircuitPeering:
          $ref: '#/components/schemas/SubResource'
          description: Reference to Express Route Circuit Private Peering Resource of the peered circuit.
        addressPrefix:
          type: string
          description: /29 IP address space to carve out Customer addresses for tunnels.
        authorizationKey:
          type: string
          description: The authorization key.
        ipv6CircuitConnectionConfig:
          $ref: '#/components/schemas/Ipv6CircuitConnectionConfig'
          description: IPv6 Address PrefixProperties of the express route circuit connection.
        circuitConnectionStatus:
          $ref: '#/components/schemas/CircuitConnectionStatus'
          description: Express Route Circuit connection state.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the express route circuit connection resource.
      description: Properties of the express route circuit connection.
      type: object
    ExpressRouteCircuitConnection:
      description: Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.
      properties:
        expressRouteCircuitPeering:
          $ref: '#/components/schemas/SubResource'
          description: Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection.
        peerExpressRouteCircuitPeering:
          $ref: '#/components/schemas/SubResource'
          description: Reference to Express Route Circuit Private Peering Resource of the peered circuit.
        addressPrefix:
          type: string
          description: /29 IP address space to carve out Customer addresses for tunnels.
        authorizationKey:
          type: string
          description: The authorization key.
        ipv6CircuitConnectionConfig:
          $ref: '#/components/schemas/Ipv6CircuitConnectionConfig'
          description: IPv6 Address PrefixProperties of the express route circuit connection.
        circuitConnectionStatus:
          $ref: '#/components/schemas/CircuitConnectionStatus'
          description: Express Route Circuit connection state.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the express route circuit connection resource.
        name:
          type: string
          description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          readOnly: true
          type: string
          description: Type of the resource.
        id:
          type: string
          description: Resource ID.
      type: object
    ExpressRouteCircuitConnectionListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ExpressRouteCircuitConnection'
          description: The global reach connection associated with Private Peering in an ExpressRoute Circuit.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: Response for ListConnections API service call retrieves all global reach connections that belongs to a Private Peering for an ExpressRouteCircuit.
      type: object
    PeerExpressRouteCircuitConnectionPropertiesFormat:
      properties:
        expressRouteCircuitPeering:
          $ref: '#/components/schemas/SubResource'
          description: Reference to Express Route Circuit Private Peering Resource of the circuit.
        peerExpressRouteCircuitPeering:
          $ref: '#/components/schemas/SubResource'
          description: Reference to Express Route Circuit Private Peering Resource of the peered circuit.
        addressPrefix:
          type: string
          description: /29 IP address space to carve out Customer addresses for tunnels.
        circuitConnectionStatus:
          $ref: '#/components/schemas/CircuitConnectionStatus'
          description: Express Route Circuit connection state.
        connectionName:
          type: string
          description: The name of the express route circuit connection resource.
        authResourceGuid:
          type: string
          description: The resource guid of the authorization used for the express route circuit connection.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the peer express route circuit connection resource.
      description: Properties of the peer express route circuit connection.
      type: object
    PeerExpressRouteCircuitConnection:
      description: Peer Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.
      properties:
        expressRouteCircuitPeering:
          $ref: '#/components/schemas/SubResource'
          description: Reference to Express Route Circuit Private Peering Resource of the circuit.
        peerExpressRouteCircuitPeering:
          $ref: '#/components/schemas/SubResource'
          description: Reference to Express Route Circuit Private Peering Resource of the peered circuit.
        addressPrefix:
          type: string
          description: /29 IP address space to carve out Customer addresses for tunnels.
        circuitConnectionStatus:
          $ref: '#/components/schemas/CircuitConnectionStatus'
          description: Express Route Circuit connection state.
        connectionName:
          type: string
          description: The name of the express route circuit connection resource.
        authResourceGuid:
          type: string
          description: The resource guid of the authorization used for the express route circuit connection.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the peer express route circuit connection resource.
        name:
          type: string
          description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          readOnly: true
          type: string
          description: Type of the resource.
        id:
          type: string
          description: Resource ID.
      type: object
    PeerExpressRouteCircuitConnectionListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/PeerExpressRouteCircuitConnection'
          description: The global reach peer circuit connection associated with Private Peering in an ExpressRoute Circuit.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: Response for ListPeeredConnections API service call retrieves all global reach peer circuit connections that belongs to a Private Peering for an ExpressRouteCircuit.
      type: object
    ExpressRouteCircuitSku:
      properties:
        name:
          type: string
          description: The name of the SKU.
        tier:
          type: string
          description: The tier of the SKU.
          enum:
            - Standard
            - Premium
            - Basic
            - Local
          x-ms-enum:
            name: ExpressRouteCircuitSkuTier
            modelAsString: true
        family:
          type: string
          description: The family of the SKU.
          enum:
            - UnlimitedData
            - MeteredData
          x-ms-enum:
            name: ExpressRouteCircuitSkuFamily
            modelAsString: true
      description: Contains SKU in an ExpressRouteCircuit.
      type: object
    ExpressRouteCircuitServiceProviderProperties:
      properties:
        serviceProviderName:
          type: string
          description: The serviceProviderName.
        peeringLocation:
          type: string
          description: The peering location.
        bandwidthInMbps:
          type: integer
          format: int32
          description: The BandwidthInMbps.
      description: Contains ServiceProviderProperties in an ExpressRouteCircuit.
      type: object
    ExpressRouteCircuitPropertiesFormat:
      properties:
        allowClassicOperations:
          type: boolean
          description: Allow classic operations.
        circuitProvisioningState:
          type: string
          description: The CircuitProvisioningState state of the resource.
        serviceProviderProvisioningState:
          $ref: '#/components/schemas/ServiceProviderProvisioningState'
          description: The ServiceProviderProvisioningState state of the resource.
        authorizations:
          type: array
          items:
            $ref: '#/components/schemas/ExpressRouteCircuitAuthorization'
          description: The list of authorizations.
        peerings:
          type: array
          items:
            $ref: '#/components/schemas/ExpressRouteCircuitPeering'
          description: The list of peerings.
        serviceKey:
          type: string
          description: The ServiceKey.
        serviceProviderNotes:
          type: string
          description: The ServiceProviderNotes.
        serviceProviderProperties:
          $ref: '#/components/schemas/ExpressRouteCircuitServiceProviderProperties'
          description: The ServiceProviderProperties.
        expressRoutePort:
          $ref: '#/components/schemas/SubResource'
          description: The reference to the ExpressRoutePort resource when the circuit is provisioned on an ExpressRoutePort resource.
        bandwidthInGbps:
          type: number
          description: The bandwidth of the circuit when the circuit is provisioned on an ExpressRoutePort resource.
        stag:
          readOnly: true
          type: integer
          format: int32
          description: The identifier of the circuit traffic. Outer tag for QinQ encapsulation.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the express route circuit resource.
        gatewayManagerEtag:
          type: string
          description: The GatewayManager Etag.
        globalReachEnabled:
          type: boolean
          description: Flag denoting global reach status.
        authorizationKey:
          type: string
          description: The authorizationKey.
      description: Properties of ExpressRouteCircuit.
      type: object
    ExpressRouteCircuit:
      description: ExpressRouteCircuit resource.
      properties:
        allowClassicOperations:
          type: boolean
          description: Allow classic operations.
        circuitProvisioningState:
          type: string
          description: The CircuitProvisioningState state of the resource.
        serviceProviderProvisioningState:
          $ref: '#/components/schemas/ServiceProviderProvisioningState'
          description: The ServiceProviderProvisioningState state of the resource.
        authorizations:
          type: array
          items:
            $ref: '#/components/schemas/ExpressRouteCircuitAuthorization'
          description: The list of authorizations.
        peerings:
          type: array
          items:
            $ref: '#/components/schemas/ExpressRouteCircuitPeering'
          description: The list of peerings.
        serviceKey:
          type: string
          description: The ServiceKey.
        serviceProviderNotes:
          type: string
          description: The ServiceProviderNotes.
        serviceProviderProperties:
          $ref: '#/components/schemas/ExpressRouteCircuitServiceProviderProperties'
          description: The ServiceProviderProperties.
        expressRoutePort:
          $ref: '#/components/schemas/SubResource'
          description: The reference to the ExpressRoutePort resource when the circuit is provisioned on an ExpressRoutePort resource.
        bandwidthInGbps:
          type: number
          description: The bandwidth of the circuit when the circuit is provisioned on an ExpressRoutePort resource.
        stag:
          readOnly: true
          type: integer
          format: int32
          description: The identifier of the circuit traffic. Outer tag for QinQ encapsulation.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the express route circuit resource.
        gatewayManagerEtag:
          type: string
          description: The GatewayManager Etag.
        globalReachEnabled:
          type: boolean
          description: Flag denoting global reach status.
        authorizationKey:
          type: string
          description: The authorizationKey.
        sku:
          $ref: '#/components/schemas/ExpressRouteCircuitSku'
          description: The SKU.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    ExpressRouteCircuitArpTable:
      properties:
        age:
          type: integer
          format: int32
          description: Entry age in minutes.
        interface:
          type: string
          description: Interface address.
        ipAddress:
          type: string
          description: The IP address.
        macAddress:
          type: string
          description: The MAC address.
      description: The ARP table associated with the ExpressRouteCircuit.
      type: object
    ExpressRouteCircuitsArpTableListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ExpressRouteCircuitArpTable'
          description: A list of the ARP tables.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: Response for ListArpTable associated with the Express Route Circuits API.
      type: object
    ExpressRouteCircuitRoutesTable:
      properties:
        network:
          type: string
          description: IP address of a network entity.
        nextHop:
          type: string
          description: NextHop address.
        locPrf:
          type: string
          description: Local preference value as set with the set local-preference route-map configuration command.
        weight:
          type: integer
          format: int32
          description: Route Weight.
        path:
          type: string
          description: Autonomous system paths to the destination network.
      description: The routes table associated with the ExpressRouteCircuit.
      type: object
    ExpressRouteCircuitsRoutesTableListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ExpressRouteCircuitRoutesTable'
          description: The list of routes table.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: Response for ListRoutesTable associated with the Express Route Circuits API.
      type: object
    ExpressRouteCircuitRoutesTableSummary:
      properties:
        neighbor:
          type: string
          description: IP address of the neighbor.
        v:
          type: integer
          format: int32
          description: BGP version number spoken to the neighbor.
        as:
          type: integer
          format: int32
          description: Autonomous system number.
        upDown:
          type: string
          description: The length of time that the BGP session has been in the Established state, or the current status if not in the Established state.
        statePfxRcd:
          type: string
          description: Current state of the BGP session, and the number of prefixes that have been received from a neighbor or peer group.
      description: The routes table associated with the ExpressRouteCircuit.
      type: object
    ExpressRouteCircuitsRoutesTableSummaryListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ExpressRouteCircuitRoutesTableSummary'
          description: A list of the routes table.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: Response for ListRoutesTable associated with the Express Route Circuits API.
      type: object
    ExpressRouteCircuitListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ExpressRouteCircuit'
          description: A list of ExpressRouteCircuits in a resource group.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: Response for ListExpressRouteCircuit API service call.
      type: object
    ExpressRouteServiceProviderBandwidthsOffered:
      properties:
        offerName:
          type: string
          description: The OfferName.
        valueInMbps:
          type: integer
          format: int32
          description: The ValueInMbps.
      description: Contains bandwidths offered in ExpressRouteServiceProvider resources.
      type: object
    ExpressRouteServiceProviderPropertiesFormat:
      properties:
        peeringLocations:
          type: array
          items:
            type: string
          description: A list of peering locations.
        bandwidthsOffered:
          type: array
          items:
            $ref: '#/components/schemas/ExpressRouteServiceProviderBandwidthsOffered'
          description: A list of bandwidths offered.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the express route service provider resource.
      description: Properties of ExpressRouteServiceProvider.
      type: object
    ExpressRouteServiceProvider:
      description: A ExpressRouteResourceProvider object.
      properties:
        peeringLocations:
          type: array
          items:
            type: string
          description: A list of peering locations.
        bandwidthsOffered:
          type: array
          items:
            $ref: '#/components/schemas/ExpressRouteServiceProviderBandwidthsOffered'
          description: A list of bandwidths offered.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the express route service provider resource.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    ExpressRouteServiceProviderListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ExpressRouteServiceProvider'
          description: A list of ExpressRouteResourceProvider resources.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: Response for the ListExpressRouteServiceProvider API service call.
      type: object
    CircuitConnectionStatus:
      type: string
      readOnly: true
      description: Express Route Circuit connection state.
      enum:
        - Connected
        - Connecting
        - Disconnected
      x-ms-enum:
        name: CircuitConnectionStatus
        modelAsString: true
    ServiceProviderProvisioningState:
      type: string
      description: The ServiceProviderProvisioningState state of the resource.
      enum:
        - NotProvisioned
        - Provisioning
        - Provisioned
        - Deprovisioning
      x-ms-enum:
        name: ServiceProviderProvisioningState
        modelAsString: true
    ErrorResponse:
      description: The error object.
      properties:
        error:
          title: Error
          $ref: '#/components/schemas/ErrorDetails'
          description: The error details object.
      type: object
    NetworkWatcher:
      description: Network watcher in a resource group.
      properties:
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the network watcher resource.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    NetworkWatcherPropertiesFormat:
      properties:
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the network watcher resource.
      description: The network watcher properties.
      type: object
    NetworkWatcherListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/NetworkWatcher'
          description: List of network watcher resources.
      description: Response for ListNetworkWatchers API service call.
      type: object
    TopologyParameters:
      properties:
        targetResourceGroupName:
          type: string
          description: The name of the target resource group to perform topology on.
        targetVirtualNetwork:
          $ref: '#/components/schemas/SubResource'
          description: The reference to the Virtual Network resource.
        targetSubnet:
          $ref: '#/components/schemas/SubResource'
          description: The reference to the Subnet resource.
      description: Parameters that define the representation of topology.
      type: object
    Topology:
      properties:
        id:
          readOnly: true
          type: string
          description: GUID representing the operation id.
        createdDateTime:
          readOnly: true
          type: string
          format: date-time
          description: The datetime when the topology was initially created for the resource group.
        lastModified:
          readOnly: true
          type: string
          format: date-time
          description: The datetime when the topology was last modified.
        resources:
          type: array
          items:
            $ref: '#/components/schemas/TopologyResource'
          description: A list of topology resources.
      description: Topology of the specified resource group.
      type: object
    TopologyResource:
      properties:
        name:
          type: string
          description: Name of the resource.
        id:
          type: string
          description: ID of the resource.
        location:
          type: string
          description: Resource location.
        associations:
          type: array
          description: Holds the associations the resource has with other resources in the resource group.
          items:
            $ref: '#/components/schemas/TopologyAssociation'
      description: The network resource topology information for the given resource group.
      type: object
    TopologyAssociation:
      properties:
        name:
          type: string
          description: The name of the resource that is associated with the parent resource.
        resourceId:
          type: string
          description: The ID of the resource that is associated with the parent resource.
        associationType:
          type: string
          enum:
            - Associated
            - Contains
          x-ms-enum:
            name: AssociationType
            modelAsString: true
          description: The association type of the child resource to the parent resource.
      description: Resources that have an association with the parent resource.
      type: object
    VerificationIPFlowParameters:
      description: Parameters that define the IP flow to be verified.
      required:
        - targetResourceId
        - direction
        - protocol
        - localPort
        - remotePort
        - localIPAddress
        - remoteIPAddress
      properties:
        targetResourceId:
          type: string
          description: The ID of the target resource to perform next-hop on.
        direction:
          $ref: '#/components/schemas/Direction'
          description: The direction of the packet represented as a 5-tuple.
        protocol:
          type: string
          enum:
            - TCP
            - UDP
          x-ms-enum:
            name: IpFlowProtocol
            modelAsString: true
          description: Protocol to be verified on.
        localPort:
          type: string
          description: The local port. Acceptable values are a single integer in the range (0-65535). Support for * for the source port, which depends on the direction.
        remotePort:
          type: string
          description: The remote port. Acceptable values are a single integer in the range (0-65535). Support for * for the source port, which depends on the direction.
        localIPAddress:
          type: string
          description: The local IP address. Acceptable values are valid IPv4 addresses.
        remoteIPAddress:
          type: string
          description: The remote IP address. Acceptable values are valid IPv4 addresses.
        targetNicResourceId:
          type: string
          description: The NIC ID. (If VM has multiple NICs and IP forwarding is enabled on any of them, then this parameter must be specified. Otherwise optional).
      type: object
    VerificationIPFlowResult:
      description: Results of IP flow verification on the target resource.
      properties:
        access:
          $ref: '#/components/schemas/Access'
          description: Indicates whether the traffic is allowed or denied.
        ruleName:
          type: string
          description: Name of the rule. If input is not matched against any security rule, it is not displayed.
      type: object
    NextHopParameters:
      description: Parameters that define the source and destination endpoint.
      required:
        - targetResourceId
        - sourceIPAddress
        - destinationIPAddress
      properties:
        targetResourceId:
          type: string
          description: The resource identifier of the target resource against which the action is to be performed.
        sourceIPAddress:
          type: string
          description: The source IP address.
        destinationIPAddress:
          type: string
          description: The destination IP address.
        targetNicResourceId:
          type: string
          description: The NIC ID. (If VM has multiple NICs and IP forwarding is enabled on any of the nics, then this parameter must be specified. Otherwise optional).
      type: object
    NextHopResult:
      description: The information about next hop from the specified VM.
      properties:
        nextHopType:
          type: string
          enum:
            - Internet
            - VirtualAppliance
            - VirtualNetworkGateway
            - VnetLocal
            - HyperNetGateway
            - None
          x-ms-enum:
            name: NextHopType
            modelAsString: true
          description: Next hop type.
        nextHopIpAddress:
          type: string
          description: Next hop IP Address.
        routeTableId:
          type: string
          description: The resource identifier for the route table associated with the route being returned. If the route being returned does not correspond to any user created routes then this field will be the string 'System Route'.
      type: object
    SecurityGroupViewParameters:
      description: Parameters that define the VM to check security groups for.
      required:
        - targetResourceId
      properties:
        targetResourceId:
          type: string
          description: ID of the target VM.
      type: object
    SecurityGroupViewResult:
      description: The information about security rules applied to the specified VM.
      properties:
        networkInterfaces:
          type: array
          description: List of network interfaces on the specified VM.
          items:
            $ref: '#/components/schemas/SecurityGroupNetworkInterface'
      type: object
    SecurityGroupNetworkInterface:
      description: Network interface and all its associated security rules.
      properties:
        id:
          type: string
          description: ID of the network interface.
        securityRuleAssociations:
          $ref: '#/components/schemas/SecurityRuleAssociations'
          description: All security rules associated with the network interface.
      type: object
    SecurityRuleAssociations:
      description: All security rules associated with the network interface.
      properties:
        networkInterfaceAssociation:
          $ref: '#/components/schemas/NetworkInterfaceAssociation'
          description: Network interface and it's custom security rules.
        subnetAssociation:
          $ref: '#/components/schemas/SubnetAssociation'
          description: Subnet and it's custom security rules.
        defaultSecurityRules:
          type: array
          items:
            $ref: '#/components/schemas/SecurityRule'
          description: Collection of default security rules of the network security group.
        effectiveSecurityRules:
          type: array
          items:
            $ref: '#/components/schemas/EffectiveNetworkSecurityRule'
          description: Collection of effective security rules.
      type: object
    NetworkInterfaceAssociation:
      description: Network interface and its custom security rules.
      properties:
        id:
          readOnly: true
          type: string
          description: Network interface ID.
        securityRules:
          type: array
          description: Collection of custom security rules.
          items:
            $ref: '#/components/schemas/SecurityRule'
      type: object
    SubnetAssociation:
      description: Subnet and it's custom security rules.
      properties:
        id:
          readOnly: true
          type: string
          description: Subnet ID.
        securityRules:
          type: array
          description: Collection of custom security rules.
          items:
            $ref: '#/components/schemas/SecurityRule'
      type: object
    PacketCapture:
      required:
        - properties
      description: Parameters that define the create packet capture operation.
      properties:
        target:
          type: string
          description: The ID of the targeted resource, only AzureVM and AzureVMSS as target type are currently supported.
        scope:
          $ref: '#/components/schemas/PacketCaptureMachineScope'
          description: A list of AzureVMSS instances which can be included or excluded to run packet capture. If both included and excluded are empty, then the packet capture will run on all instances of AzureVMSS.
        targetType:
          description: Target type of the resource provided.
          type: string
          enum:
            - AzureVM
            - AzureVMSS
          x-ms-enum:
            name: PacketCaptureTargetType
            modelAsString: false
        bytesToCapturePerPacket:
          type: integer
          format: int64
          minimum: 0
          maximum: 4294967295
          default: 0
          description: Number of bytes captured per packet, the remaining bytes are truncated.
        totalBytesPerSession:
          type: integer
          format: int64
          minimum: 0
          maximum: 4294967295
          default: 1073741824
          description: Maximum size of the capture output.
        timeLimitInSeconds:
          type: integer
          format: int32
          minimum: 0
          maximum: 18000
          default: 18000
          description: Maximum duration of the capture session in seconds.
        storageLocation:
          $ref: '#/components/schemas/PacketCaptureStorageLocation'
          description: The storage location for a packet capture session.
        filters:
          type: array
          items:
            $ref: '#/components/schemas/PacketCaptureFilter'
          description: A list of packet capture filters.
      type: object
    PacketCaptureParameters:
      properties:
        target:
          type: string
          description: The ID of the targeted resource, only AzureVM and AzureVMSS as target type are currently supported.
        scope:
          $ref: '#/components/schemas/PacketCaptureMachineScope'
          description: A list of AzureVMSS instances which can be included or excluded to run packet capture. If both included and excluded are empty, then the packet capture will run on all instances of AzureVMSS.
        targetType:
          description: Target type of the resource provided.
          type: string
          enum:
            - AzureVM
            - AzureVMSS
          x-ms-enum:
            name: PacketCaptureTargetType
            modelAsString: false
        bytesToCapturePerPacket:
          type: integer
          format: int64
          minimum: 0
          maximum: 4294967295
          default: 0
          description: Number of bytes captured per packet, the remaining bytes are truncated.
        totalBytesPerSession:
          type: integer
          format: int64
          minimum: 0
          maximum: 4294967295
          default: 1073741824
          description: Maximum size of the capture output.
        timeLimitInSeconds:
          type: integer
          format: int32
          minimum: 0
          maximum: 18000
          default: 18000
          description: Maximum duration of the capture session in seconds.
        storageLocation:
          $ref: '#/components/schemas/PacketCaptureStorageLocation'
          description: The storage location for a packet capture session.
        filters:
          type: array
          items:
            $ref: '#/components/schemas/PacketCaptureFilter'
          description: A list of packet capture filters.
      required:
        - target
        - storageLocation
      description: Parameters that define the create packet capture operation.
      type: object
    PacketCaptureMachineScope:
      type: object
      properties:
        include:
          type: array
          description: List of AzureVMSS instances to run packet capture on.
          items:
            type: string
        exclude:
          type: array
          description: List of AzureVMSS instances which has to be excluded from the AzureVMSS from running packet capture.
          items:
            type: string
      description: A list of AzureVMSS instances which can be included or excluded to run packet capture. If both included and excluded are empty, then the packet capture will run on all instances of AzureVMSS.
    PacketCaptureStorageLocation:
      properties:
        storageId:
          type: string
          description: The ID of the storage account to save the packet capture session. Required if no local file path is provided.
        storagePath:
          type: string
          description: The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture.
        filePath:
          type: string
          description: A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional.
      description: The storage location for a packet capture session.
      type: object
    PacketCaptureFilter:
      properties:
        protocol:
          type: string
          enum:
            - TCP
            - UDP
            - Any
          x-ms-enum:
            name: PcProtocol
            modelAsString: true
          default: Any
          description: Protocol to be filtered on.
        localIPAddress:
          type: string
          description: 'Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5"? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.'
        remoteIPAddress:
          type: string
          description: 'Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.'
        localPort:
          type: string
          description: 'Local port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.'
        remotePort:
          type: string
          description: 'Remote port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.'
      description: Filter that is applied to packet capture request. Multiple filters can be applied.
      type: object
    PacketCaptureListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/PacketCaptureResult'
          description: Information about packet capture sessions.
      description: List of packet capture sessions.
      type: object
    PacketCaptureResult:
      description: Information about packet capture session.
      properties:
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the packet capture session.
        name:
          readOnly: true
          type: string
          description: Name of the packet capture session.
        id:
          readOnly: true
          type: string
          description: ID of the packet capture operation.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
      type: object
    PacketCaptureResultProperties:
      description: The properties of a packet capture session.
      properties:
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the packet capture session.
        target:
          type: string
          description: The ID of the targeted resource, only AzureVM and AzureVMSS as target type are currently supported.
        scope:
          $ref: '#/components/schemas/PacketCaptureMachineScope'
          description: A list of AzureVMSS instances which can be included or excluded to run packet capture. If both included and excluded are empty, then the packet capture will run on all instances of AzureVMSS.
        targetType:
          description: Target type of the resource provided.
          type: string
          enum:
            - AzureVM
            - AzureVMSS
          x-ms-enum:
            name: PacketCaptureTargetType
            modelAsString: false
        bytesToCapturePerPacket:
          type: integer
          format: int64
          minimum: 0
          maximum: 4294967295
          default: 0
          description: Number of bytes captured per packet, the remaining bytes are truncated.
        totalBytesPerSession:
          type: integer
          format: int64
          minimum: 0
          maximum: 4294967295
          default: 1073741824
          description: Maximum size of the capture output.
        timeLimitInSeconds:
          type: integer
          format: int32
          minimum: 0
          maximum: 18000
          default: 18000
          description: Maximum duration of the capture session in seconds.
        storageLocation:
          $ref: '#/components/schemas/PacketCaptureStorageLocation'
          description: The storage location for a packet capture session.
        filters:
          type: array
          items:
            $ref: '#/components/schemas/PacketCaptureFilter'
          description: A list of packet capture filters.
      type: object
    PacketCaptureQueryStatusResult:
      properties:
        name:
          type: string
          description: The name of the packet capture resource.
        id:
          type: string
          description: The ID of the packet capture resource.
        captureStartTime:
          type: string
          format: date-time
          description: The start time of the packet capture session.
        packetCaptureStatus:
          type: string
          enum:
            - NotStarted
            - Running
            - Stopped
            - Error
            - Unknown
          x-ms-enum:
            name: PcStatus
            modelAsString: true
          description: The status of the packet capture session.
        stopReason:
          type: string
          description: The reason the current packet capture session was stopped.
        packetCaptureError:
          type: array
          description: List of errors of packet capture session.
          items:
            type: string
            enum:
              - InternalError
              - AgentStopped
              - CaptureFailed
              - LocalFileFailed
              - StorageFailed
            x-ms-enum:
              name: PcError
              modelAsString: true
      description: Status of packet capture session.
      type: object
    TroubleshootingParameters:
      description: Parameters that define the resource to troubleshoot.
      required:
        - targetResourceId
        - properties
      properties:
        storageId:
          description: The ID for the storage account to save the troubleshoot result.
          type: string
        storagePath:
          description: The path to the blob to save the troubleshoot result in.
          type: string
        targetResourceId:
          description: The target resource to troubleshoot.
          type: string
      type: object
    QueryTroubleshootingParameters:
      description: Parameters that define the resource to query the troubleshooting result.
      required:
        - targetResourceId
      properties:
        targetResourceId:
          description: The target resource ID to query the troubleshooting result.
          type: string
      type: object
    TroubleshootingProperties:
      description: Storage location provided for troubleshoot.
      required:
        - storageId
        - storagePath
      properties:
        storageId:
          description: The ID for the storage account to save the troubleshoot result.
          type: string
        storagePath:
          description: The path to the blob to save the troubleshoot result in.
          type: string
      type: object
    TroubleshootingResult:
      description: Troubleshooting information gained from specified resource.
      properties:
        startTime:
          type: string
          format: date-time
          description: The start time of the troubleshooting.
        endTime:
          type: string
          format: date-time
          description: The end time of the troubleshooting.
        code:
          type: string
          description: The result code of the troubleshooting.
        results:
          type: array
          description: Information from troubleshooting.
          items:
            $ref: '#/components/schemas/TroubleshootingDetails'
      type: object
    TroubleshootingDetails:
      description: Information gained from troubleshooting of specified resource.
      properties:
        id:
          type: string
          description: The id of the get troubleshoot operation.
        reasonType:
          type: string
          description: Reason type of failure.
        summary:
          type: string
          description: A summary of troubleshooting.
        detail:
          type: string
          description: Details on troubleshooting results.
        recommendedActions:
          type: array
          description: List of recommended actions.
          items:
            $ref: '#/components/schemas/TroubleshootingRecommendedActions'
      type: object
    TroubleshootingRecommendedActions:
      description: Recommended actions based on discovered issues.
      properties:
        actionId:
          description: ID of the recommended action.
          type: string
        actionText:
          description: Description of recommended actions.
          type: string
        actionUri:
          description: The uri linking to a documentation for the recommended troubleshooting actions.
          type: string
        actionUriText:
          description: The information from the URI for the recommended troubleshooting actions.
          type: string
      type: object
    FlowLogListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/FlowLog'
          description: Information about flow log resource.
        nextLink:
          readOnly: true
          type: string
          description: The URL to get the next set of results.
      description: List of flow logs.
      type: object
    FlowLog:
      description: A flow log resource.
      properties:
        targetResourceId:
          description: ID of network security group to which flow log will be applied.
          type: string
        targetResourceGuid:
          readOnly: true
          description: Guid of network security group to which flow log will be applied.
          type: string
        storageId:
          description: ID of the storage account which is used to store the flow log.
          type: string
        enabled:
          description: Flag to enable/disable flow logging.
          type: boolean
        retentionPolicy:
          $ref: '#/components/schemas/RetentionPolicyParameters'
          description: Parameters that define the retention policy for flow log.
        format:
          $ref: '#/components/schemas/FlowLogFormatParameters'
          description: Parameters that define the flow log format.
        flowAnalyticsConfiguration:
          $ref: '#/components/schemas/TrafficAnalyticsProperties'
          description: Parameters that define the configuration of traffic analytics.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the flow log.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    FlowLogPropertiesFormat:
      description: Parameters that define the configuration of flow log.
      required:
        - targetResourceId
        - storageId
      properties:
        targetResourceId:
          description: ID of network security group to which flow log will be applied.
          type: string
        targetResourceGuid:
          readOnly: true
          description: Guid of network security group to which flow log will be applied.
          type: string
        storageId:
          description: ID of the storage account which is used to store the flow log.
          type: string
        enabled:
          description: Flag to enable/disable flow logging.
          type: boolean
        retentionPolicy:
          $ref: '#/components/schemas/RetentionPolicyParameters'
          description: Parameters that define the retention policy for flow log.
        format:
          $ref: '#/components/schemas/FlowLogFormatParameters'
          description: Parameters that define the flow log format.
        flowAnalyticsConfiguration:
          $ref: '#/components/schemas/TrafficAnalyticsProperties'
          description: Parameters that define the configuration of traffic analytics.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the flow log.
      type: object
    FlowLogProperties:
      description: Parameters that define the configuration of flow log.
      required:
        - storageId
        - enabled
      properties:
        storageId:
          description: ID of the storage account which is used to store the flow log.
          type: string
        enabled:
          description: Flag to enable/disable flow logging.
          type: boolean
        retentionPolicy:
          $ref: '#/components/schemas/RetentionPolicyParameters'
          description: Parameters that define the retention policy for flow log.
        format:
          $ref: '#/components/schemas/FlowLogFormatParameters'
          description: Parameters that define the flow log format.
      type: object
    FlowLogStatusParameters:
      description: Parameters that define a resource to query flow log and traffic analytics (optional) status.
      required:
        - targetResourceId
      properties:
        targetResourceId:
          description: The target resource where getting the flow log and traffic analytics (optional) status.
          type: string
      type: object
    RetentionPolicyParameters:
      description: Parameters that define the retention policy for flow log.
      properties:
        days:
          description: Number of days to retain flow log records.
          type: integer
          format: int32
          default: 0
        enabled:
          description: Flag to enable/disable retention.
          type: boolean
          default: false
      type: object
    FlowLogFormatParameters:
      description: Parameters that define the flow log format.
      properties:
        type:
          type: string
          description: The file type of flow log.
          enum:
            - JSON
          x-ms-enum:
            name: FlowLogFormatType
            modelAsString: true
        version:
          description: The version (revision) of the flow log.
          type: integer
          format: int32
          default: 0
      type: object
    FlowLogInformation:
      description: Information on the configuration of flow log and traffic analytics (optional) .
      required:
        - targetResourceId
        - properties
      properties:
        storageId:
          description: ID of the storage account which is used to store the flow log.
          type: string
        enabled:
          description: Flag to enable/disable flow logging.
          type: boolean
        retentionPolicy:
          $ref: '#/components/schemas/RetentionPolicyParameters'
          description: Parameters that define the retention policy for flow log.
        format:
          $ref: '#/components/schemas/FlowLogFormatParameters'
          description: Parameters that define the flow log format.
        targetResourceId:
          description: The ID of the resource to configure for flow log and traffic analytics (optional) .
          type: string
        flowAnalyticsConfiguration:
          $ref: '#/components/schemas/TrafficAnalyticsProperties'
          description: Parameters that define the configuration of traffic analytics.
      type: object
    TrafficAnalyticsProperties:
      description: Parameters that define the configuration of traffic analytics.
      properties:
        networkWatcherFlowAnalyticsConfiguration:
          $ref: '#/components/schemas/TrafficAnalyticsConfigurationProperties'
          description: Parameters that define the configuration of traffic analytics.
      type: object
    TrafficAnalyticsConfigurationProperties:
      description: Parameters that define the configuration of traffic analytics.
      properties:
        enabled:
          description: Flag to enable/disable traffic analytics.
          type: boolean
        workspaceId:
          description: The resource guid of the attached workspace.
          type: string
        workspaceRegion:
          description: The location of the attached workspace.
          type: string
        workspaceResourceId:
          description: Resource Id of the attached workspace.
          type: string
        trafficAnalyticsInterval:
          description: The interval in minutes which would decide how frequently TA service should do flow analytics.
          type: integer
          format: int32
      type: object
    ConnectivityParameters:
      description: Parameters that determine how the connectivity check will be performed.
      required:
        - source
        - destination
      properties:
        source:
          $ref: '#/components/schemas/ConnectivitySource'
          description: The source of the connection.
        destination:
          $ref: '#/components/schemas/ConnectivityDestination'
          description: The destination of connection.
        protocol:
          type: string
          description: Network protocol.
          enum:
            - Tcp
            - Http
            - Https
            - Icmp
          x-ms-enum:
            name: Protocol
            modelAsString: true
        protocolConfiguration:
          $ref: '#/components/schemas/ProtocolConfiguration'
          description: Configuration of the protocol.
        preferredIPVersion:
          $ref: '#/components/schemas/IPVersion'
          description: Preferred IP version of the connection.
      type: object
    ConnectivitySource:
      description: Parameters that define the source of the connection.
      required:
        - resourceId
      properties:
        resourceId:
          description: The ID of the resource from which a connectivity check will be initiated.
          type: string
        port:
          description: The source port from which a connectivity check will be performed.
          type: integer
          format: int32
          minimum: 0
          maximum: 65535
      type: object
    ConnectivityDestination:
      description: Parameters that define destination of connection.
      properties:
        resourceId:
          description: The ID of the resource to which a connection attempt will be made.
          type: string
        address:
          description: The IP address or URI the resource to which a connection attempt will be made.
          type: string
        port:
          description: Port on which check connectivity will be performed.
          type: integer
          format: int32
          minimum: 0
          maximum: 65535
      type: object
    ConnectivityInformation:
      description: Information on the connectivity status.
      properties:
        hops:
          readOnly: true
          type: array
          description: List of hops between the source and the destination.
          items:
            $ref: '#/components/schemas/ConnectivityHop'
        connectionStatus:
          readOnly: true
          type: string
          enum:
            - Unknown
            - Connected
            - Disconnected
            - Degraded
          x-ms-enum:
            name: ConnectionStatus
            modelAsString: true
          description: The connection status.
        avgLatencyInMs:
          description: Average latency in milliseconds.
          readOnly: true
          type: integer
          format: int32
        minLatencyInMs:
          description: Minimum latency in milliseconds.
          readOnly: true
          type: integer
          format: int32
        maxLatencyInMs:
          description: Maximum latency in milliseconds.
          readOnly: true
          type: integer
          format: int32
        probesSent:
          description: Total number of probes sent.
          readOnly: true
          type: integer
          format: int32
        probesFailed:
          description: Number of failed probes.
          readOnly: true
          type: integer
          format: int32
      type: object
    ConnectivityHop:
      description: Information about a hop between the source and the destination.
      properties:
        type:
          description: The type of the hop.
          readOnly: true
          type: string
        id:
          description: The ID of the hop.
          readOnly: true
          type: string
        address:
          description: The IP address of the hop.
          readOnly: true
          type: string
        resourceId:
          description: The ID of the resource corresponding to this hop.
          readOnly: true
          type: string
        nextHopIds:
          readOnly: true
          type: array
          description: List of next hop identifiers.
          items:
            type: string
        previousHopIds:
          readOnly: true
          type: array
          description: List of previous hop identifiers.
          items:
            type: string
        links:
          readOnly: true
          type: array
          description: List of hop links.
          items:
            $ref: '#/components/schemas/HopLink'
        previousLinks:
          readOnly: true
          type: array
          description: List of previous hop links.
          items:
            $ref: '#/components/schemas/HopLink'
        issues:
          readOnly: true
          type: array
          description: List of issues.
          items:
            $ref: '#/components/schemas/ConnectivityIssue'
      type: object
    HopLink:
      description: Hop link.
      properties:
        roundTripTimeMin:
          description: Minimum roundtrip time in milliseconds.
          readOnly: true
          type: integer
          format: int64
          minimum: 0
          maximum: 4294967295
        roundTripTimeAvg:
          description: Average roundtrip time in milliseconds.
          readOnly: true
          type: integer
          format: int64
          minimum: 0
          maximum: 4294967295
        roundTripTimeMax:
          description: Maximum roundtrip time in milliseconds.
          readOnly: true
          type: integer
          format: int64
          minimum: 0
          maximum: 4294967295
        nextHopId:
          description: The ID of the next hop.
          readOnly: true
          type: string
        linkType:
          description: Link type.
          readOnly: true
          type: string
        issues:
          readOnly: true
          type: array
          description: List of issues.
          items:
            $ref: '#/components/schemas/ConnectivityIssue'
        context:
          readOnly: true
          type: object
          description: Provides additional context on links.
          additionalProperties:
            type: string
        resourceId:
          description: Resource ID.
          readOnly: true
          type: string
      type: object
    HopLinkProperties:
      description: Hop link properties.
      properties:
        roundTripTimeMin:
          description: Minimum roundtrip time in milliseconds.
          readOnly: true
          type: integer
          format: int64
          minimum: 0
          maximum: 4294967295
        roundTripTimeAvg:
          description: Average roundtrip time in milliseconds.
          readOnly: true
          type: integer
          format: int64
          minimum: 0
          maximum: 4294967295
        roundTripTimeMax:
          description: Maximum roundtrip time in milliseconds.
          readOnly: true
          type: integer
          format: int64
          minimum: 0
          maximum: 4294967295
      type: object
    ConnectivityIssue:
      description: Information about an issue encountered in the process of checking for connectivity.
      properties:
        origin:
          readOnly: true
          type: string
          enum:
            - Local
            - Inbound
            - Outbound
          x-ms-enum:
            name: Origin
            modelAsString: true
          description: The origin of the issue.
        severity:
          readOnly: true
          type: string
          enum:
            - Error
            - Warning
          x-ms-enum:
            name: Severity
            modelAsString: true
          description: The severity of the issue.
        type:
          readOnly: true
          type: string
          enum:
            - Unknown
            - AgentStopped
            - GuestFirewall
            - DnsResolution
            - SocketBind
            - NetworkSecurityRule
            - UserDefinedRoute
            - PortThrottled
            - Platform
          x-ms-enum:
            name: IssueType
            modelAsString: true
          description: The type of issue.
        context:
          readOnly: true
          type: array
          description: Provides additional context on the issue.
          items:
            $ref: '#/components/schemas/IssueContext'
      type: object
    IssueContext:
      description: A key-value pair that provides additional context on the issue.
      additionalProperties:
        type: string
      properties: {}
      type: object
    ProtocolConfiguration:
      description: Configuration of the protocol.
      properties:
        HTTPConfiguration:
          $ref: '#/components/schemas/HTTPConfiguration'
          description: HTTP configuration of the connectivity check.
      type: object
    HTTPConfiguration:
      properties:
        method:
          type: string
          description: HTTP method.
          enum:
            - Get
          x-ms-enum:
            name: HTTPMethod
            modelAsString: true
        headers:
          type: array
          description: List of HTTP headers.
          items:
            $ref: '#/components/schemas/HTTPHeader'
        validStatusCodes:
          type: array
          items:
            type: integer
            format: int32
          description: Valid status codes.
      description: HTTP configuration of the connectivity check.
      type: object
    HTTPHeader:
      properties:
        name:
          type: string
          description: The name in HTTP header.
        value:
          type: string
          description: The value in HTTP header.
      description: The HTTP header.
      type: object
    AzureReachabilityReportParameters:
      properties:
        providerLocation:
          $ref: '#/components/schemas/AzureReachabilityReportLocation'
          description: Parameters that define a geographic location.
        providers:
          type: array
          items:
            type: string
          description: List of Internet service providers.
        azureLocations:
          type: array
          items:
            type: string
          description: Optional Azure regions to scope the query to.
        startTime:
          type: string
          format: date-time
          description: The start time for the Azure reachability report.
        endTime:
          type: string
          format: date-time
          description: The end time for the Azure reachability report.
      required:
        - providerLocation
        - startTime
        - endTime
      description: Geographic and time constraints for Azure reachability report.
      type: object
    AzureReachabilityReportLocation:
      properties:
        country:
          type: string
          description: The name of the country.
        state:
          type: string
          description: The name of the state.
        city:
          type: string
          description: The name of the city or town.
      required:
        - country
      description: Parameters that define a geographic location.
      type: object
    AzureReachabilityReport:
      properties:
        aggregationLevel:
          type: string
          description: The aggregation level of Azure reachability report. Can be Country, State or City.
        providerLocation:
          $ref: '#/components/schemas/AzureReachabilityReportLocation'
          description: Parameters that define a geographic location.
        reachabilityReport:
          type: array
          description: List of Azure reachability report items.
          items:
            $ref: '#/components/schemas/AzureReachabilityReportItem'
      required:
        - aggregationLevel
        - providerLocation
        - reachabilityReport
      description: Azure reachability report details.
      type: object
    AzureReachabilityReportItem:
      properties:
        provider:
          type: string
          description: The Internet service provider.
        azureLocation:
          type: string
          description: The Azure region.
        latencies:
          type: array
          description: List of latency details for each of the time series.
          items:
            $ref: '#/components/schemas/AzureReachabilityReportLatencyInfo'
      description: Azure reachability report details for a given provider location.
      type: object
    AzureReachabilityReportLatencyInfo:
      properties:
        timeStamp:
          type: string
          format: date-time
          description: The time stamp.
        score:
          type: integer
          format: int32
          description: The relative latency score between 1 and 100, higher values indicating a faster connection.
          minimum: 1
          maximum: 100
      description: Details on latency for a time series.
      type: object
    AvailableProvidersListParameters:
      properties:
        azureLocations:
          type: array
          items:
            type: string
          description: A list of Azure regions.
        country:
          type: string
          description: The country for available providers list.
        state:
          type: string
          description: The state for available providers list.
        city:
          type: string
          description: The city or town for available providers list.
      description: Constraints that determine the list of available Internet service providers.
      type: object
    AvailableProvidersList:
      properties:
        countries:
          type: array
          description: List of available countries.
          items:
            $ref: '#/components/schemas/AvailableProvidersListCountry'
      required:
        - countries
      description: List of available countries with details.
      type: object
    AvailableProvidersListCountry:
      properties:
        countryName:
          type: string
          description: The country name.
        providers:
          type: array
          items:
            type: string
          description: A list of Internet service providers.
        states:
          type: array
          description: List of available states in the country.
          items:
            $ref: '#/components/schemas/AvailableProvidersListState'
      description: Country details.
      type: object
    AvailableProvidersListState:
      properties:
        stateName:
          type: string
          description: The state name.
        providers:
          type: array
          items:
            type: string
          description: A list of Internet service providers.
        cities:
          type: array
          description: List of available cities or towns in the state.
          items:
            $ref: '#/components/schemas/AvailableProvidersListCity'
      description: State details.
      type: object
    AvailableProvidersListCity:
      properties:
        cityName:
          type: string
          description: The city or town name.
        providers:
          type: array
          items:
            type: string
          description: A list of Internet service providers.
      description: City or town details.
      type: object
    NetworkConfigurationDiagnosticParameters:
      description: Parameters to get network configuration diagnostic.
      required:
        - targetResourceId
        - profiles
      properties:
        targetResourceId:
          type: string
          description: The ID of the target resource to perform network configuration diagnostic. Valid options are VM, NetworkInterface, VMSS/NetworkInterface and Application Gateway.
        verbosityLevel:
          type: string
          enum:
            - Normal
            - Minimum
            - Full
          x-ms-enum:
            name: VerbosityLevel
            modelAsString: true
          description: Verbosity level.
        profiles:
          type: array
          description: List of network configuration diagnostic profiles.
          items:
            $ref: '#/components/schemas/NetworkConfigurationDiagnosticProfile'
      type: object
    NetworkConfigurationDiagnosticProfile:
      description: Parameters to compare with network configuration.
      required:
        - direction
        - protocol
        - source
        - destination
        - destinationPort
      properties:
        direction:
          $ref: '#/components/schemas/Direction'
          description: The direction of the traffic.
        protocol:
          type: string
          description: Protocol to be verified on. Accepted values are '*', TCP, UDP.
        source:
          type: string
          description: Traffic source. Accepted values are '*', IP Address/CIDR, Service Tag.
        destination:
          type: string
          description: 'Traffic destination. Accepted values are: ''*'', IP Address/CIDR, Service Tag.'
        destinationPort:
          type: string
          description: Traffic destination port. Accepted values are '*' and a single port in the range (0 - 65535).
      type: object
    NetworkConfigurationDiagnosticResponse:
      description: Results of network configuration diagnostic on the target resource.
      properties:
        results:
          readOnly: true
          type: array
          description: List of network configuration diagnostic results.
          items:
            $ref: '#/components/schemas/NetworkConfigurationDiagnosticResult'
      type: object
    NetworkConfigurationDiagnosticResult:
      description: Network configuration diagnostic result corresponded to provided traffic query.
      properties:
        profile:
          $ref: '#/components/schemas/NetworkConfigurationDiagnosticProfile'
          description: Network configuration diagnostic profile.
        networkSecurityGroupResult:
          $ref: '#/components/schemas/NetworkSecurityGroupResult'
          description: Network security group result.
      type: object
    NetworkSecurityGroupResult:
      description: Network configuration diagnostic result corresponded provided traffic query.
      properties:
        securityRuleAccessResult:
          $ref: '#/components/schemas/SecurityRuleAccess'
          description: The network traffic is allowed or denied.
        evaluatedNetworkSecurityGroups:
          readOnly: true
          type: array
          description: List of results network security groups diagnostic.
          items:
            $ref: '#/components/schemas/EvaluatedNetworkSecurityGroup'
      type: object
    EvaluatedNetworkSecurityGroup:
      description: Results of network security group evaluation.
      properties:
        networkSecurityGroupId:
          type: string
          description: Network security group ID.
        appliedTo:
          type: string
          description: Resource ID of nic or subnet to which network security group is applied.
        matchedRule:
          $ref: '#/components/schemas/MatchedRule'
          description: Matched network security rule.
        rulesEvaluationResult:
          readOnly: true
          type: array
          description: List of network security rules evaluation results.
          items:
            $ref: '#/components/schemas/NetworkSecurityRulesEvaluationResult'
      type: object
    MatchedRule:
      description: Matched rule.
      properties:
        ruleName:
          type: string
          description: Name of the matched network security rule.
        action:
          type: string
          description: The network traffic is allowed or denied. Possible values are 'Allow' and 'Deny'.
      type: object
    NetworkSecurityRulesEvaluationResult:
      description: Network security rules evaluation result.
      properties:
        name:
          type: string
          description: Name of the network security rule.
        protocolMatched:
          type: boolean
          description: Value indicating whether protocol is matched.
        sourceMatched:
          type: boolean
          description: Value indicating whether source is matched.
        sourcePortMatched:
          type: boolean
          description: Value indicating whether source port is matched.
        destinationMatched:
          type: boolean
          description: Value indicating whether destination is matched.
        destinationPortMatched:
          type: boolean
          description: Value indicating whether destination port is matched.
      type: object
    Direction:
      type: string
      description: The direction of the traffic.
      enum:
        - Inbound
        - Outbound
      x-ms-enum:
        name: Direction
        modelAsString: true
    ConnectionMonitor:
      required:
        - properties
      description: Parameters that define the operation to create a connection monitor.
      properties:
        source:
          $ref: '#/components/schemas/ConnectionMonitorSource'
          description: Describes the source of connection monitor.
        destination:
          $ref: '#/components/schemas/ConnectionMonitorDestination'
          description: Describes the destination of connection monitor.
        autoStart:
          type: boolean
          default: true
          description: Determines if the connection monitor will start automatically once created.
        monitoringIntervalInSeconds:
          type: integer
          format: int32
          minimum: 30
          maximum: 1800
          default: 60
          description: Monitoring interval in seconds.
        endpoints:
          type: array
          description: List of connection monitor endpoints.
          items:
            $ref: '#/components/schemas/ConnectionMonitorEndpoint'
        testConfigurations:
          type: array
          description: List of connection monitor test configurations.
          items:
            $ref: '#/components/schemas/ConnectionMonitorTestConfiguration'
        testGroups:
          type: array
          description: List of connection monitor test groups.
          items:
            $ref: '#/components/schemas/ConnectionMonitorTestGroup'
        outputs:
          type: array
          description: List of connection monitor outputs.
          items:
            $ref: '#/components/schemas/ConnectionMonitorOutput'
        notes:
          type: string
          description: Optional notes to be associated with the connection monitor.
        location:
          type: string
          description: Connection monitor location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Connection monitor tags.
      type: object
    ConnectionMonitorParameters:
      properties:
        source:
          $ref: '#/components/schemas/ConnectionMonitorSource'
          description: Describes the source of connection monitor.
        destination:
          $ref: '#/components/schemas/ConnectionMonitorDestination'
          description: Describes the destination of connection monitor.
        autoStart:
          type: boolean
          default: true
          description: Determines if the connection monitor will start automatically once created.
        monitoringIntervalInSeconds:
          type: integer
          format: int32
          minimum: 30
          maximum: 1800
          default: 60
          description: Monitoring interval in seconds.
        endpoints:
          type: array
          description: List of connection monitor endpoints.
          items:
            $ref: '#/components/schemas/ConnectionMonitorEndpoint'
        testConfigurations:
          type: array
          description: List of connection monitor test configurations.
          items:
            $ref: '#/components/schemas/ConnectionMonitorTestConfiguration'
        testGroups:
          type: array
          description: List of connection monitor test groups.
          items:
            $ref: '#/components/schemas/ConnectionMonitorTestGroup'
        outputs:
          type: array
          description: List of connection monitor outputs.
          items:
            $ref: '#/components/schemas/ConnectionMonitorOutput'
        notes:
          type: string
          description: Optional notes to be associated with the connection monitor.
      description: Parameters that define the operation to create a connection monitor.
      type: object
    ConnectionMonitorSource:
      properties:
        resourceId:
          type: string
          description: The ID of the resource used as the source by connection monitor.
        port:
          type: integer
          format: int32
          minimum: 0
          maximum: 65535
          description: The source port used by connection monitor.
      required:
        - resourceId
      description: Describes the source of connection monitor.
      type: object
    ConnectionMonitorDestination:
      properties:
        resourceId:
          type: string
          description: The ID of the resource used as the destination by connection monitor.
        address:
          type: string
          description: Address of the connection monitor destination (IP or domain name).
        port:
          type: integer
          format: int32
          minimum: 0
          maximum: 65535
          description: The destination port used by connection monitor.
      description: Describes the destination of connection monitor.
      type: object
    ConnectionMonitorEndpoint:
      properties:
        name:
          type: string
          description: The name of the connection monitor endpoint.
        type:
          type: string
          enum:
            - AzureVM
            - AzureVNet
            - AzureSubnet
            - ExternalAddress
            - MMAWorkspaceMachine
            - MMAWorkspaceNetwork
            - AzureArcVM
            - AzureVMSS
          x-ms-enum:
            name: EndpointType
            modelAsString: true
          description: The endpoint type.
        resourceId:
          type: string
          description: Resource ID of the connection monitor endpoint.
        address:
          type: string
          description: Address of the connection monitor endpoint (IP or domain name).
        filter:
          $ref: '#/components/schemas/ConnectionMonitorEndpointFilter'
          description: Filter for sub-items within the endpoint.
        scope:
          $ref: '#/components/schemas/ConnectionMonitorEndpointScope'
          description: Endpoint scope.
        coverageLevel:
          type: string
          enum:
            - Default
            - Low
            - BelowAverage
            - Average
            - AboveAverage
            - Full
          x-ms-enum:
            name: CoverageLevel
            modelAsString: true
          description: Test coverage for the endpoint.
      required:
        - name
      description: Describes the connection monitor endpoint.
      type: object
    ConnectionMonitorEndpointScope:
      properties:
        include:
          type: array
          description: List of items which needs to be included to the endpoint scope.
          items:
            $ref: '#/components/schemas/ConnectionMonitorEndpointScopeItem'
        exclude:
          type: array
          description: List of items which needs to be excluded from the endpoint scope.
          items:
            $ref: '#/components/schemas/ConnectionMonitorEndpointScopeItem'
      description: Describes the connection monitor endpoint scope.
      type: object
    ConnectionMonitorEndpointScopeItem:
      properties:
        address:
          type: string
          description: The address of the endpoint item. Supported types are IPv4/IPv6 subnet mask or IPv4/IPv6 IP address.
      description: Describes the connection monitor endpoint scope item.
      type: object
    ConnectionMonitorEndpointFilter:
      properties:
        type:
          type: string
          enum:
            - Include
          x-ms-enum:
            name: ConnectionMonitorEndpointFilterType
            modelAsString: true
          description: The behavior of the endpoint filter. Currently only 'Include' is supported.
        items:
          type: array
          description: List of items in the filter.
          items:
            $ref: '#/components/schemas/ConnectionMonitorEndpointFilterItem'
      description: Describes the connection monitor endpoint filter.
      type: object
    ConnectionMonitorEndpointFilterItem:
      properties:
        type:
          type: string
          enum:
            - AgentAddress
          x-ms-enum:
            name: ConnectionMonitorEndpointFilterItemType
            modelAsString: true
          description: The type of item included in the filter. Currently only 'AgentAddress' is supported.
        address:
          type: string
          description: The address of the filter item.
      description: Describes the connection monitor endpoint filter item.
      type: object
    ConnectionMonitorTestGroup:
      properties:
        name:
          type: string
          description: The name of the connection monitor test group.
        disable:
          type: boolean
          description: Value indicating whether test group is disabled.
        testConfigurations:
          type: array
          items:
            type: string
          description: List of test configuration names.
        sources:
          type: array
          items:
            type: string
          description: List of source endpoint names.
        destinations:
          type: array
          items:
            type: string
          description: List of destination endpoint names.
      required:
        - name
        - testConfigurations
        - sources
        - destinations
      description: Describes the connection monitor test group.
      type: object
    ConnectionMonitorTestConfiguration:
      properties:
        name:
          type: string
          description: The name of the connection monitor test configuration.
        testFrequencySec:
          type: integer
          format: int32
          description: The frequency of test evaluation, in seconds.
        protocol:
          type: string
          enum:
            - Tcp
            - Http
            - Icmp
          x-ms-enum:
            name: ConnectionMonitorTestConfigurationProtocol
            modelAsString: true
          description: The protocol to use in test evaluation.
        preferredIPVersion:
          type: string
          enum:
            - IPv4
            - IPv6
          x-ms-enum:
            name: PreferredIPVersion
            modelAsString: true
          description: The preferred IP version to use in test evaluation. The connection monitor may choose to use a different version depending on other parameters.
        httpConfiguration:
          $ref: '#/components/schemas/ConnectionMonitorHttpConfiguration'
          description: The parameters used to perform test evaluation over HTTP.
        tcpConfiguration:
          $ref: '#/components/schemas/ConnectionMonitorTcpConfiguration'
          description: The parameters used to perform test evaluation over TCP.
        icmpConfiguration:
          $ref: '#/components/schemas/ConnectionMonitorIcmpConfiguration'
          description: The parameters used to perform test evaluation over ICMP.
        successThreshold:
          $ref: '#/components/schemas/ConnectionMonitorSuccessThreshold'
          description: The threshold for declaring a test successful.
      required:
        - name
        - protocol
      description: Describes a connection monitor test configuration.
      type: object
    ConnectionMonitorHttpConfiguration:
      properties:
        port:
          type: integer
          format: int32
          minimum: 0
          maximum: 65535
          description: The port to connect to.
        method:
          type: string
          description: The HTTP method to use.
          enum:
            - Get
            - Post
          x-ms-enum:
            name: HTTPConfigurationMethod
            modelAsString: true
        path:
          type: string
          description: The path component of the URI. For instance, "/dir1/dir2".
        requestHeaders:
          type: array
          description: The HTTP headers to transmit with the request.
          items:
            $ref: '#/components/schemas/HTTPHeader'
        validStatusCodeRanges:
          type: array
          items:
            type: string
          description: HTTP status codes to consider successful. For instance, "2xx,301-304,418".
        preferHTTPS:
          type: boolean
          description: Value indicating whether HTTPS is preferred over HTTP in cases where the choice is not explicit.
      description: Describes the HTTP configuration.
      type: object
    ConnectionMonitorTcpConfiguration:
      properties:
        port:
          type: integer
          format: int32
          minimum: 0
          maximum: 65535
          description: The port to connect to.
        disableTraceRoute:
          type: boolean
          description: Value indicating whether path evaluation with trace route should be disabled.
        destinationPortBehavior:
          type: string
          description: Destination port behavior.
          enum:
            - None
            - ListenIfAvailable
          x-ms-enum:
            name: DestinationPortBehavior
            modelAsString: true
      description: Describes the TCP configuration.
      type: object
    ConnectionMonitorIcmpConfiguration:
      properties:
        disableTraceRoute:
          type: boolean
          description: Value indicating whether path evaluation with trace route should be disabled.
      description: Describes the ICMP configuration.
      type: object
    ConnectionMonitorSuccessThreshold:
      properties:
        checksFailedPercent:
          type: integer
          format: int32
          description: The maximum percentage of failed checks permitted for a test to evaluate as successful.
        roundTripTimeMs:
          type: number
          description: The maximum round-trip time in milliseconds permitted for a test to evaluate as successful.
      description: Describes the threshold for declaring a test successful.
      type: object
    ConnectionMonitorOutput:
      properties:
        type:
          type: string
          description: Connection monitor output destination type. Currently, only "Workspace" is supported.
          enum:
            - Workspace
          x-ms-enum:
            name: OutputType
            modelAsString: true
        workspaceSettings:
          $ref: '#/components/schemas/ConnectionMonitorWorkspaceSettings'
          description: Describes the settings for producing output into a log analytics workspace.
      description: Describes a connection monitor output destination.
      type: object
    ConnectionMonitorWorkspaceSettings:
      properties:
        workspaceResourceId:
          type: string
          description: Log analytics workspace resource ID.
      description: Describes the settings for producing output into a log analytics workspace.
      type: object
    ConnectionStateSnapshot:
      properties:
        connectionState:
          type: string
          enum:
            - Reachable
            - Unreachable
            - Unknown
          x-ms-enum:
            name: ConnectionState
            modelAsString: true
          description: The connection state.
        startTime:
          type: string
          format: date-time
          description: The start time of the connection snapshot.
        endTime:
          type: string
          format: date-time
          description: The end time of the connection snapshot.
        evaluationState:
          type: string
          enum:
            - NotStarted
            - InProgress
            - Completed
          x-ms-enum:
            name: EvaluationState
            modelAsString: true
          description: Connectivity analysis evaluation state.
        avgLatencyInMs:
          type: integer
          format: int64
          minimum: 0
          maximum: 4294967295
          description: Average latency in ms.
        minLatencyInMs:
          type: integer
          format: int64
          minimum: 0
          maximum: 4294967295
          description: Minimum latency in ms.
        maxLatencyInMs:
          type: integer
          format: int64
          minimum: 0
          maximum: 4294967295
          description: Maximum latency in ms.
        probesSent:
          type: integer
          format: int64
          minimum: 0
          maximum: 4294967295
          description: The number of sent probes.
        probesFailed:
          type: integer
          format: int64
          minimum: 0
          maximum: 4294967295
          description: The number of failed probes.
        hops:
          readOnly: true
          type: array
          description: List of hops between the source and the destination.
          items:
            $ref: '#/components/schemas/ConnectivityHop'
      description: Connection state snapshot.
      type: object
    ConnectionMonitorListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ConnectionMonitorResult'
          description: Information about connection monitors.
      description: List of connection monitors.
      type: object
    ConnectionMonitorResult:
      x-ms-azure-resource: true
      description: Information about the connection monitor.
      properties:
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the connection monitor.
        startTime:
          readOnly: true
          type: string
          format: date-time
          description: The date and time when the connection monitor was started.
        monitoringStatus:
          readOnly: true
          type: string
          description: The monitoring status of the connection monitor.
        connectionMonitorType:
          readOnly: true
          type: string
          enum:
            - MultiEndpoint
            - SingleSourceDestination
          x-ms-enum:
            name: ConnectionMonitorType
            modelAsString: true
          description: Type of connection monitor.
        name:
          readOnly: true
          type: string
          description: Name of the connection monitor.
        id:
          readOnly: true
          type: string
          description: ID of the connection monitor.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          readOnly: true
          type: string
          description: Connection monitor type.
        location:
          type: string
          description: Connection monitor location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Connection monitor tags.
      type: object
    ConnectionMonitorResultProperties:
      description: Describes the properties of a connection monitor.
      properties:
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the connection monitor.
        startTime:
          readOnly: true
          type: string
          format: date-time
          description: The date and time when the connection monitor was started.
        monitoringStatus:
          readOnly: true
          type: string
          description: The monitoring status of the connection monitor.
        connectionMonitorType:
          readOnly: true
          type: string
          enum:
            - MultiEndpoint
            - SingleSourceDestination
          x-ms-enum:
            name: ConnectionMonitorType
            modelAsString: true
          description: Type of connection monitor.
        source:
          $ref: '#/components/schemas/ConnectionMonitorSource'
          description: Describes the source of connection monitor.
        destination:
          $ref: '#/components/schemas/ConnectionMonitorDestination'
          description: Describes the destination of connection monitor.
        autoStart:
          type: boolean
          default: true
          description: Determines if the connection monitor will start automatically once created.
        monitoringIntervalInSeconds:
          type: integer
          format: int32
          minimum: 30
          maximum: 1800
          default: 60
          description: Monitoring interval in seconds.
        endpoints:
          type: array
          description: List of connection monitor endpoints.
          items:
            $ref: '#/components/schemas/ConnectionMonitorEndpoint'
        testConfigurations:
          type: array
          description: List of connection monitor test configurations.
          items:
            $ref: '#/components/schemas/ConnectionMonitorTestConfiguration'
        testGroups:
          type: array
          description: List of connection monitor test groups.
          items:
            $ref: '#/components/schemas/ConnectionMonitorTestGroup'
        outputs:
          type: array
          description: List of connection monitor outputs.
          items:
            $ref: '#/components/schemas/ConnectionMonitorOutput'
        notes:
          type: string
          description: Optional notes to be associated with the connection monitor.
      type: object
    ConnectionMonitorQueryResult:
      properties:
        sourceStatus:
          type: string
          enum:
            - Unknown
            - Active
            - Inactive
          x-ms-enum:
            name: ConnectionMonitorSourceStatus
            modelAsString: true
          description: Status of connection monitor source.
        states:
          type: array
          items:
            $ref: '#/components/schemas/ConnectionStateSnapshot'
          description: Information about connection states.
      description: List of connection states snapshots.
      type: object
    PrivateEndpoint:
      description: Private endpoint resource.
      properties:
        subnet:
          $ref: '#/components/schemas/Subnet'
          description: The ID of the subnet from which the private IP will be allocated.
        networkInterfaces:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/NetworkInterface'
          description: An array of references to the network interfaces created for this private endpoint.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the private endpoint resource.
        privateLinkServiceConnections:
          type: array
          items:
            $ref: '#/components/schemas/PrivateLinkServiceConnection'
          description: A grouping of information about the connection to the remote resource.
        manualPrivateLinkServiceConnections:
          type: array
          items:
            $ref: '#/components/schemas/PrivateLinkServiceConnection'
          description: A grouping of information about the connection to the remote resource. Used when the network admin does not have access to approve connections to the remote resource.
        customDnsConfigs:
          type: array
          items:
            $ref: '#/components/schemas/CustomDnsConfigPropertiesFormat'
          description: An array of custom dns configurations.
        applicationSecurityGroups:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationSecurityGroup'
          description: Application security groups in which the private endpoint IP configuration is included.
        ipConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/PrivateEndpointIPConfiguration'
          description: A list of IP configurations of the private endpoint. This will be used to map to the First Party Service's endpoints.
        customNetworkInterfaceName:
          type: string
          description: The custom name of the network interface attached to the private endpoint.
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location of the load balancer.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    PrivateEndpointProperties:
      properties:
        subnet:
          $ref: '#/components/schemas/Subnet'
          description: The ID of the subnet from which the private IP will be allocated.
        networkInterfaces:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/NetworkInterface'
          description: An array of references to the network interfaces created for this private endpoint.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the private endpoint resource.
        privateLinkServiceConnections:
          type: array
          items:
            $ref: '#/components/schemas/PrivateLinkServiceConnection'
          description: A grouping of information about the connection to the remote resource.
        manualPrivateLinkServiceConnections:
          type: array
          items:
            $ref: '#/components/schemas/PrivateLinkServiceConnection'
          description: A grouping of information about the connection to the remote resource. Used when the network admin does not have access to approve connections to the remote resource.
        customDnsConfigs:
          type: array
          items:
            $ref: '#/components/schemas/CustomDnsConfigPropertiesFormat'
          description: An array of custom dns configurations.
        applicationSecurityGroups:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationSecurityGroup'
          description: Application security groups in which the private endpoint IP configuration is included.
        ipConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/PrivateEndpointIPConfiguration'
          description: A list of IP configurations of the private endpoint. This will be used to map to the First Party Service's endpoints.
        customNetworkInterfaceName:
          type: string
          description: The custom name of the network interface attached to the private endpoint.
      description: Properties of the private endpoint.
      type: object
    CustomDnsConfigPropertiesFormat:
      properties:
        fqdn:
          type: string
          description: Fqdn that resolves to private endpoint ip address.
        ipAddresses:
          type: array
          items:
            type: string
          description: A list of private ip addresses of the private endpoint.
      description: Contains custom Dns resolution configuration from customer.
      type: object
    PrivateLinkServiceConnection:
      description: PrivateLinkServiceConnection resource.
      properties:
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the private link service connection resource.
        privateLinkServiceId:
          type: string
          description: The resource id of private link service.
        groupIds:
          type: array
          items:
            type: string
          description: The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to.
        requestMessage:
          type: string
          description: A message passed to the owner of the remote resource with this connection request. Restricted to 140 chars.
        privateLinkServiceConnectionState:
          $ref: '#/components/schemas/PrivateLinkServiceConnectionState'
          description: A collection of read-only information about the state of the connection to the remote resource.
        name:
          type: string
          description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
        type:
          readOnly: true
          type: string
          description: The resource type.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
      type: object
    PrivateLinkServiceConnectionProperties:
      properties:
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the private link service connection resource.
        privateLinkServiceId:
          type: string
          description: The resource id of private link service.
        groupIds:
          type: array
          items:
            type: string
          description: The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to.
        requestMessage:
          type: string
          description: A message passed to the owner of the remote resource with this connection request. Restricted to 140 chars.
        privateLinkServiceConnectionState:
          $ref: '#/components/schemas/PrivateLinkServiceConnectionState'
          description: A collection of read-only information about the state of the connection to the remote resource.
      description: Properties of the PrivateLinkServiceConnection.
      type: object
    PrivateEndpointListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/PrivateEndpoint'
          description: A list of private endpoint resources in a resource group.
        nextLink:
          type: string
          description: The URL to get the next set of results.
          readOnly: true
      description: Response for the ListPrivateEndpoints API service call.
      type: object
    PrivateDnsZoneGroupListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/PrivateDnsZoneGroup'
          description: A list of private dns zone group resources in a private endpoint.
        nextLink:
          type: string
          description: The URL to get the next set of results.
          readOnly: true
      description: Response for the ListPrivateDnsZoneGroups API service call.
      type: object
    AvailablePrivateEndpointTypesResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/AvailablePrivateEndpointType'
          description: An array of available privateEndpoint type.
        nextLink:
          readOnly: true
          type: string
          description: The URL to get the next set of results.
      description: An array of available PrivateEndpoint types.
      type: object
    AvailablePrivateEndpointType:
      properties:
        name:
          type: string
          description: The name of the service and resource.
        id:
          type: string
          description: A unique identifier of the AvailablePrivateEndpoint Type resource.
        type:
          type: string
          description: Resource type.
        resourceName:
          type: string
          description: The name of the service and resource.
        displayName:
          type: string
          description: Display name of the resource.
      description: The information of an AvailablePrivateEndpointType.
      type: object
    PrivateDnsZoneGroup:
      description: Private dns zone group resource.
      properties:
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the private dns zone group resource.
        privateDnsZoneConfigs:
          type: array
          items:
            $ref: '#/components/schemas/PrivateDnsZoneConfig'
          description: A collection of private dns zone configurations of the private dns zone group.
        name:
          type: string
          description: Name of the resource that is unique within a resource group. This name can be used to access the resource.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
      type: object
    PrivateDnsZoneGroupPropertiesFormat:
      properties:
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the private dns zone group resource.
        privateDnsZoneConfigs:
          type: array
          items:
            $ref: '#/components/schemas/PrivateDnsZoneConfig'
          description: A collection of private dns zone configurations of the private dns zone group.
      description: Properties of the private dns zone group.
      type: object
    PrivateDnsZoneConfig:
      description: PrivateDnsZoneConfig resource.
      properties:
        privateDnsZoneId:
          type: string
          description: The resource id of the private dns zone.
        recordSets:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/RecordSet'
          description: A collection of information regarding a recordSet, holding information to identify private resources.
        name:
          type: string
          description: Name of the resource that is unique within a resource group. This name can be used to access the resource.
      type: object
    PrivateDnsZonePropertiesFormat:
      properties:
        privateDnsZoneId:
          type: string
          description: The resource id of the private dns zone.
        recordSets:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/RecordSet'
          description: A collection of information regarding a recordSet, holding information to identify private resources.
      description: Properties of the private dns zone configuration resource.
      type: object
    RecordSet:
      properties:
        recordType:
          type: string
          description: Resource record type.
        recordSetName:
          type: string
          description: Recordset name.
        fqdn:
          type: string
          description: Fqdn that resolves to private endpoint ip address.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the recordset.
        ttl:
          type: integer
          description: Recordset time to live.
        ipAddresses:
          type: array
          items:
            type: string
          description: The private ip address of the private endpoint.
      description: A collective group of information about the record set information.
      type: object
    PrivateEndpointIPConfiguration:
      description: An IP Configuration of the private endpoint.
      properties:
        groupId:
          type: string
          description: The ID of a group obtained from the remote resource that this private endpoint should connect to.
        memberName:
          type: string
          description: The member name of a group obtained from the remote resource that this private endpoint should connect to.
        privateIPAddress:
          type: string
          description: A private ip address obtained from the private endpoint's subnet.
        name:
          type: string
          description: The name of the resource that is unique within a resource group.
        type:
          readOnly: true
          type: string
          description: The resource type.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
      type: object
    PrivateEndpointIPConfigurationProperties:
      type: object
      properties:
        groupId:
          type: string
          description: The ID of a group obtained from the remote resource that this private endpoint should connect to.
        memberName:
          type: string
          description: The member name of a group obtained from the remote resource that this private endpoint should connect to.
        privateIPAddress:
          type: string
          description: A private ip address obtained from the private endpoint's subnet.
      description: Properties of an IP Configuration of the private endpoint.
    ApplicationSecurityGroup:
      description: An application security group in a resource group.
      properties:
        resourceGuid:
          readOnly: true
          type: string
          description: The resource GUID property of the application security group resource. It uniquely identifies a resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the application security group resource.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    ApplicationSecurityGroupPropertiesFormat:
      properties:
        resourceGuid:
          readOnly: true
          type: string
          description: The resource GUID property of the application security group resource. It uniquely identifies a resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the application security group resource.
      description: Application security group properties.
      type: object
    ApplicationSecurityGroupListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationSecurityGroup'
          description: A list of application security groups.
        nextLink:
          readOnly: true
          type: string
          description: The URL to get the next set of results.
      description: A list of application security groups.
      type: object
    AzureFirewallIPConfigurationPropertiesFormat:
      properties:
        privateIPAddress:
          type: string
          readOnly: true
          description: The Firewall Internal Load Balancer IP to be used as the next hop in User Defined Routes.
        subnet:
          $ref: '#/components/schemas/SubResource'
          description: Reference to the subnet resource. This resource must be named 'AzureFirewallSubnet' or 'AzureFirewallManagementSubnet'.
        publicIPAddress:
          $ref: '#/components/schemas/SubResource'
          description: Reference to the PublicIP resource. This field is a mandatory input if subnet is not null.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the Azure firewall IP configuration resource.
      description: Properties of IP configuration of an Azure Firewall.
      type: object
    AzureFirewallIPConfiguration:
      description: IP configuration of an Azure Firewall.
      properties:
        privateIPAddress:
          type: string
          readOnly: true
          description: The Firewall Internal Load Balancer IP to be used as the next hop in User Defined Routes.
        subnet:
          $ref: '#/components/schemas/SubResource'
          description: Reference to the subnet resource. This resource must be named 'AzureFirewallSubnet' or 'AzureFirewallManagementSubnet'.
        publicIPAddress:
          $ref: '#/components/schemas/SubResource'
          description: Reference to the PublicIP resource. This field is a mandatory input if subnet is not null.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the Azure firewall IP configuration resource.
        name:
          type: string
          description: Name of the resource that is unique within a resource group. This name can be used to access the resource.
        etag:
          type: string
          readOnly: true
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          readOnly: true
          type: string
          description: Type of the resource.
        id:
          type: string
          description: Resource ID.
      type: object
    AzureFirewallPublicIPAddress:
      properties:
        address:
          type: string
          description: Public IP Address value.
      description: Public IP Address associated with azure firewall.
      type: object
    AzureFirewallIpGroups:
      properties:
        id:
          type: string
          readOnly: true
          description: Resource ID.
        changeNumber:
          type: string
          readOnly: true
          description: The iteration number.
      description: IpGroups associated with azure firewall.
      type: object
    HubPublicIPAddresses:
      properties:
        addresses:
          type: array
          description: The list of Public IP addresses associated with azure firewall or IP addresses to be retained.
          items:
            $ref: '#/components/schemas/AzureFirewallPublicIPAddress'
        count:
          type: integer
          format: int32
          description: The number of Public IP addresses associated with azure firewall.
      description: Public IP addresses associated with azure firewall.
      type: object
    HubIPAddresses:
      properties:
        publicIPs:
          description: Public IP addresses associated with azure firewall.
          $ref: '#/components/schemas/HubPublicIPAddresses'
        privateIPAddress:
          type: string
          description: Private IP Address associated with azure firewall.
      description: IP addresses associated with azure firewall.
      type: object
    IpGroups:
      type: array
      description: List of IpGroups associated with azure firewall.
      items:
        $ref: '#/components/schemas/AzureFirewallIpGroups'
    AzureFirewallPropertiesFormat:
      properties:
        applicationRuleCollections:
          type: array
          items:
            $ref: '#/components/schemas/AzureFirewallApplicationRuleCollection'
          description: Collection of application rule collections used by Azure Firewall.
        natRuleCollections:
          type: array
          items:
            $ref: '#/components/schemas/AzureFirewallNatRuleCollection'
          description: Collection of NAT rule collections used by Azure Firewall.
        networkRuleCollections:
          type: array
          items:
            $ref: '#/components/schemas/AzureFirewallNetworkRuleCollection'
          description: Collection of network rule collections used by Azure Firewall.
        ipConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/AzureFirewallIPConfiguration'
          description: IP configuration of the Azure Firewall resource.
        managementIpConfiguration:
          $ref: '#/components/schemas/AzureFirewallIPConfiguration'
          description: IP configuration of the Azure Firewall used for management traffic.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the Azure firewall resource.
        threatIntelMode:
          description: The operation mode for Threat Intelligence.
          $ref: '#/components/schemas/AzureFirewallThreatIntelMode'
        virtualHub:
          $ref: '#/components/schemas/SubResource'
          description: The virtualHub to which the firewall belongs.
        firewallPolicy:
          $ref: '#/components/schemas/SubResource'
          description: The firewallPolicy associated with this azure firewall.
        hubIPAddresses:
          description: IP addresses associated with AzureFirewall.
          $ref: '#/components/schemas/HubIPAddresses'
        ipGroups:
          readOnly: true
          description: IpGroups associated with AzureFirewall.
          $ref: '#/components/schemas/IpGroups'
        sku:
          description: The Azure Firewall Resource SKU.
          $ref: '#/components/schemas/AzureFirewallSku'
        additionalProperties:
          $ref: '#/components/schemas/AzureFirewallAdditionalProperties'
          description: The additional properties used to further config this azure firewall.
      description: Properties of the Azure Firewall.
      type: object
    AzureFirewall:
      description: Azure Firewall resource.
      properties:
        applicationRuleCollections:
          type: array
          items:
            $ref: '#/components/schemas/AzureFirewallApplicationRuleCollection'
          description: Collection of application rule collections used by Azure Firewall.
        natRuleCollections:
          type: array
          items:
            $ref: '#/components/schemas/AzureFirewallNatRuleCollection'
          description: Collection of NAT rule collections used by Azure Firewall.
        networkRuleCollections:
          type: array
          items:
            $ref: '#/components/schemas/AzureFirewallNetworkRuleCollection'
          description: Collection of network rule collections used by Azure Firewall.
        ipConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/AzureFirewallIPConfiguration'
          description: IP configuration of the Azure Firewall resource.
        managementIpConfiguration:
          $ref: '#/components/schemas/AzureFirewallIPConfiguration'
          description: IP configuration of the Azure Firewall used for management traffic.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the Azure firewall resource.
        threatIntelMode:
          description: The operation mode for Threat Intelligence.
          $ref: '#/components/schemas/AzureFirewallThreatIntelMode'
        virtualHub:
          $ref: '#/components/schemas/SubResource'
          description: The virtualHub to which the firewall belongs.
        firewallPolicy:
          $ref: '#/components/schemas/SubResource'
          description: The firewallPolicy associated with this azure firewall.
        hubIPAddresses:
          description: IP addresses associated with AzureFirewall.
          $ref: '#/components/schemas/HubIPAddresses'
        ipGroups:
          readOnly: true
          description: IpGroups associated with AzureFirewall.
          $ref: '#/components/schemas/IpGroups'
        sku:
          description: The Azure Firewall Resource SKU.
          $ref: '#/components/schemas/AzureFirewallSku'
        additionalProperties:
          $ref: '#/components/schemas/AzureFirewallAdditionalProperties'
          description: The additional properties used to further config this azure firewall.
        zones:
          type: array
          items:
            type: string
          description: A list of availability zones denoting where the resource needs to come from.
        etag:
          type: string
          readOnly: true
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    AzureFirewallListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/AzureFirewall'
          description: List of Azure Firewalls in a resource group.
        nextLink:
          type: string
          description: URL to get the next set of results.
      description: Response for ListAzureFirewalls API service call.
      type: object
    AzureFirewallThreatIntelMode:
      type: string
      description: The operation mode for Threat Intel.
      enum:
        - Alert
        - Deny
        - 'Off'
      x-ms-enum:
        name: AzureFirewallThreatIntelMode
        modelAsString: true
    AzureFirewallAdditionalProperties:
      additionalProperties:
        type: string
      description: The additional properties of azure firewall.
      properties: {}
      type: object
    AzureFirewallApplicationRuleCollectionPropertiesFormat:
      properties:
        priority:
          type: integer
          format: int32
          maximum: 65000
          exclusiveMaximum: false
          minimum: 100
          exclusiveMinimum: false
          description: Priority of the application rule collection resource.
        action:
          $ref: '#/components/schemas/AzureFirewallRCAction'
          description: The action type of a rule collection.
        rules:
          type: array
          items:
            $ref: '#/components/schemas/AzureFirewallApplicationRule'
          description: Collection of rules used by a application rule collection.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the application rule collection resource.
      description: Properties of the application rule collection.
      type: object
    AzureFirewallApplicationRuleCollection:
      description: Application rule collection resource.
      properties:
        priority:
          type: integer
          format: int32
          maximum: 65000
          exclusiveMaximum: false
          minimum: 100
          exclusiveMinimum: false
          description: Priority of the application rule collection resource.
        action:
          $ref: '#/components/schemas/AzureFirewallRCAction'
          description: The action type of a rule collection.
        rules:
          type: array
          items:
            $ref: '#/components/schemas/AzureFirewallApplicationRule'
          description: Collection of rules used by a application rule collection.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the application rule collection resource.
        name:
          type: string
          description: The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.
        etag:
          type: string
          readOnly: true
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
      type: object
    AzureFirewallApplicationRuleProtocol:
      properties:
        protocolType:
          description: Protocol type.
          $ref: '#/components/schemas/AzureFirewallApplicationRuleProtocolType'
        port:
          type: integer
          format: int32
          maximum: 64000
          exclusiveMaximum: false
          minimum: 0
          exclusiveMinimum: false
          description: Port number for the protocol, cannot be greater than 64000. This field is optional.
      description: Properties of the application rule protocol.
      type: object
    AzureFirewallApplicationRule:
      properties:
        name:
          type: string
          description: Name of the application rule.
        description:
          type: string
          description: Description of the rule.
        sourceAddresses:
          type: array
          description: List of source IP addresses for this rule.
          items:
            type: string
        protocols:
          type: array
          items:
            $ref: '#/components/schemas/AzureFirewallApplicationRuleProtocol'
          description: Array of ApplicationRuleProtocols.
        targetFqdns:
          type: array
          description: List of FQDNs for this rule.
          items:
            type: string
        fqdnTags:
          type: array
          description: List of FQDN Tags for this rule.
          items:
            type: string
        sourceIpGroups:
          type: array
          description: List of source IpGroups for this rule.
          items:
            type: string
      description: Properties of an application rule.
      type: object
    AzureFirewallNatRuleCollectionProperties:
      properties:
        priority:
          type: integer
          format: int32
          maximum: 65000
          exclusiveMaximum: false
          minimum: 100
          exclusiveMinimum: false
          description: Priority of the NAT rule collection resource.
        action:
          $ref: '#/components/schemas/AzureFirewallNatRCAction'
          description: The action type of a NAT rule collection.
        rules:
          type: array
          items:
            $ref: '#/components/schemas/AzureFirewallNatRule'
          description: Collection of rules used by a NAT rule collection.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the NAT rule collection resource.
      description: Properties of the NAT rule collection.
      type: object
    AzureFirewallNatRuleCollection:
      description: NAT rule collection resource.
      properties:
        priority:
          type: integer
          format: int32
          maximum: 65000
          exclusiveMaximum: false
          minimum: 100
          exclusiveMinimum: false
          description: Priority of the NAT rule collection resource.
        action:
          $ref: '#/components/schemas/AzureFirewallNatRCAction'
          description: The action type of a NAT rule collection.
        rules:
          type: array
          items:
            $ref: '#/components/schemas/AzureFirewallNatRule'
          description: Collection of rules used by a NAT rule collection.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the NAT rule collection resource.
        name:
          type: string
          description: The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.
        etag:
          type: string
          readOnly: true
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
      type: object
    AzureFirewallNatRule:
      properties:
        name:
          type: string
          description: Name of the NAT rule.
        description:
          type: string
          description: Description of the rule.
        sourceAddresses:
          type: array
          description: List of source IP addresses for this rule.
          items:
            type: string
        destinationAddresses:
          type: array
          description: List of destination IP addresses for this rule. Supports IP ranges, prefixes, and service tags.
          items:
            type: string
        destinationPorts:
          type: array
          description: List of destination ports.
          items:
            type: string
        protocols:
          type: array
          items:
            $ref: '#/components/schemas/AzureFirewallNetworkRuleProtocol'
          description: Array of AzureFirewallNetworkRuleProtocols applicable to this NAT rule.
        translatedAddress:
          type: string
          description: The translated address for this NAT rule.
        translatedPort:
          type: string
          description: The translated port for this NAT rule.
        translatedFqdn:
          type: string
          description: The translated FQDN for this NAT rule.
        sourceIpGroups:
          type: array
          description: List of source IpGroups for this rule.
          items:
            type: string
      description: Properties of a NAT rule.
      type: object
    AzureFirewallNatRCAction:
      properties:
        type:
          description: The type of action.
          $ref: '#/components/schemas/AzureFirewallNatRCActionType'
      description: AzureFirewall NAT Rule Collection Action.
      type: object
    AzureFirewallNatRCActionType:
      type: string
      description: The action type of a NAT rule collection.
      enum:
        - Snat
        - Dnat
      x-ms-enum:
        name: AzureFirewallNatRCActionType
        modelAsString: true
    AzureFirewallNetworkRuleCollectionPropertiesFormat:
      properties:
        priority:
          type: integer
          format: int32
          maximum: 65000
          exclusiveMaximum: false
          minimum: 100
          exclusiveMinimum: false
          description: Priority of the network rule collection resource.
        action:
          $ref: '#/components/schemas/AzureFirewallRCAction'
          description: The action type of a rule collection.
        rules:
          type: array
          items:
            $ref: '#/components/schemas/AzureFirewallNetworkRule'
          description: Collection of rules used by a network rule collection.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the network rule collection resource.
      description: Properties of the network rule collection.
      type: object
    AzureFirewallNetworkRuleCollection:
      description: Network rule collection resource.
      properties:
        priority:
          type: integer
          format: int32
          maximum: 65000
          exclusiveMaximum: false
          minimum: 100
          exclusiveMinimum: false
          description: Priority of the network rule collection resource.
        action:
          $ref: '#/components/schemas/AzureFirewallRCAction'
          description: The action type of a rule collection.
        rules:
          type: array
          items:
            $ref: '#/components/schemas/AzureFirewallNetworkRule'
          description: Collection of rules used by a network rule collection.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the network rule collection resource.
        name:
          type: string
          description: The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.
        etag:
          type: string
          readOnly: true
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
      type: object
    AzureFirewallNetworkRule:
      properties:
        name:
          type: string
          description: Name of the network rule.
        description:
          type: string
          description: Description of the rule.
        protocols:
          type: array
          items:
            $ref: '#/components/schemas/AzureFirewallNetworkRuleProtocol'
          description: Array of AzureFirewallNetworkRuleProtocols.
        sourceAddresses:
          type: array
          description: List of source IP addresses for this rule.
          items:
            type: string
        destinationAddresses:
          type: array
          description: List of destination IP addresses.
          items:
            type: string
        destinationPorts:
          type: array
          description: List of destination ports.
          items:
            type: string
        destinationFqdns:
          type: array
          description: List of destination FQDNs.
          items:
            type: string
        sourceIpGroups:
          type: array
          description: List of source IpGroups for this rule.
          items:
            type: string
        destinationIpGroups:
          type: array
          description: List of destination IpGroups for this rule.
          items:
            type: string
      description: Properties of the network rule.
      type: object
    AzureFirewallRCAction:
      properties:
        type:
          description: The type of action.
          $ref: '#/components/schemas/AzureFirewallRCActionType'
      description: Properties of the AzureFirewallRCAction.
      type: object
    AzureFirewallRCActionType:
      type: string
      description: The action type of a rule collection.
      enum:
        - Allow
        - Deny
      x-ms-enum:
        name: AzureFirewallRCActionType
        modelAsString: true
    AzureFirewallNetworkRuleProtocol:
      type: string
      description: The protocol of a Network Rule resource.
      enum:
        - TCP
        - UDP
        - Any
        - ICMP
      x-ms-enum:
        name: AzureFirewallNetworkRuleProtocol
        modelAsString: true
    AzureFirewallApplicationRuleProtocolType:
      type: string
      description: The protocol type of a Application Rule resource.
      enum:
        - Http
        - Https
        - Mssql
      x-ms-enum:
        name: AzureFirewallApplicationRuleProtocolType
        modelAsString: true
    AzureFirewallSku:
      properties:
        name:
          type: string
          description: Name of an Azure Firewall SKU.
          enum:
            - AZFW_VNet
            - AZFW_Hub
          x-ms-enum:
            name: AzureFirewallSkuName
            modelAsString: true
        tier:
          type: string
          description: Tier of an Azure Firewall.
          enum:
            - Standard
            - Premium
            - Basic
          x-ms-enum:
            name: AzureFirewallSkuTier
            modelAsString: true
      description: SKU of an Azure Firewall.
      type: object
    IPPrefixesList:
      type: object
      properties:
        ipPrefixes:
          type: array
          items:
            type: string
          description: IP Prefix value.
      description: List of SNAT IP Prefixes learnt by firewall to not SNAT
    VirtualNetworkTap:
      description: Virtual Network Tap resource.
      properties:
        networkInterfaceTapConfigurations:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterfaceTapConfiguration'
            description: The reference to the Network Interface.
          description: Specifies the list of resource IDs for the network interface IP configuration that needs to be tapped.
        resourceGuid:
          type: string
          readOnly: true
          description: The resource GUID property of the virtual network tap resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the virtual network tap resource.
        destinationNetworkInterfaceIPConfiguration:
          $ref: '#/components/schemas/NetworkInterfaceIPConfiguration'
          description: The reference to the private IP Address of the collector nic that will receive the tap.
        destinationLoadBalancerFrontEndIPConfiguration:
          $ref: '#/components/schemas/FrontendIPConfiguration'
          description: The reference to the private IP address on the internal Load Balancer that will receive the tap.
        destinationPort:
          type: integer
          description: The VXLAN destination port that will receive the tapped traffic.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    VirtualNetworkTapPropertiesFormat:
      description: Virtual Network Tap properties.
      properties:
        networkInterfaceTapConfigurations:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterfaceTapConfiguration'
            description: The reference to the Network Interface.
          description: Specifies the list of resource IDs for the network interface IP configuration that needs to be tapped.
        resourceGuid:
          type: string
          readOnly: true
          description: The resource GUID property of the virtual network tap resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the virtual network tap resource.
        destinationNetworkInterfaceIPConfiguration:
          $ref: '#/components/schemas/NetworkInterfaceIPConfiguration'
          description: The reference to the private IP Address of the collector nic that will receive the tap.
        destinationLoadBalancerFrontEndIPConfiguration:
          $ref: '#/components/schemas/FrontendIPConfiguration'
          description: The reference to the private IP address on the internal Load Balancer that will receive the tap.
        destinationPort:
          type: integer
          description: The VXLAN destination port that will receive the tapped traffic.
      type: object
    VirtualNetworkTapListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VirtualNetworkTap'
          description: A list of VirtualNetworkTaps in a resource group.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: Response for ListVirtualNetworkTap API service call.
      type: object
    AvailableServiceAlias:
      properties:
        name:
          type: string
          description: The name of the service alias.
        id:
          type: string
          description: The ID of the service alias.
        type:
          type: string
          description: The type of the resource.
        resourceName:
          type: string
          description: The resource name of the service alias.
      description: The available service alias.
      type: object
    AvailableServiceAliasesResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/AvailableServiceAlias'
          description: An array of available service aliases.
        nextLink:
          readOnly: true
          type: string
          description: The URL to get the next set of results.
      description: An array of available service aliases.
      type: object
    ServiceTagsListResult:
      properties:
        name:
          type: string
          readOnly: true
          description: The name of the cloud.
        id:
          type: string
          readOnly: true
          description: The ID of the cloud.
        type:
          type: string
          readOnly: true
          description: The azure resource type.
        changeNumber:
          type: string
          readOnly: true
          description: The iteration number.
        cloud:
          type: string
          readOnly: true
          description: The name of the cloud.
        values:
          type: array
          items:
            $ref: '#/components/schemas/ServiceTagInformation'
          readOnly: true
          description: The list of service tag information resources.
        nextLink:
          type: string
          readOnly: true
          description: The URL to get next page of service tag information resources.
      description: Response for the ListServiceTags API service call.
      type: object
    ServiceTagInformationListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ServiceTagInformation'
          description: The list of service tag information resources.
        nextLink:
          type: string
          readOnly: true
          description: The URL to get the next set of results.
      description: Response for Get ServiceTagInformation API service call. Retrieves the list of service tag information resources.
    ServiceTagInformation:
      description: The service tag information.
      properties:
        properties:
          $ref: '#/components/schemas/ServiceTagInformationPropertiesFormat'
          readOnly: true
          description: Properties of the service tag information.
        name:
          type: string
          readOnly: true
          description: The name of service tag.
        id:
          type: string
          readOnly: true
          description: The ID of service tag.
        serviceTagChangeNumber:
          type: string
          readOnly: true
          description: The iteration number of service tag object for region.
      type: object
    ServiceTagInformationPropertiesFormat:
      properties:
        changeNumber:
          type: string
          readOnly: true
          description: The iteration number of service tag.
        region:
          type: string
          readOnly: true
          description: The region of service tag.
        systemService:
          type: string
          readOnly: true
          description: The name of system service.
        addressPrefixes:
          type: array
          items:
            type: string
          readOnly: true
          description: The list of IP address prefixes.
        state:
          type: string
          readOnly: true
          description: The state of the service tag.
      description: Properties of the service tag information.
      type: object
    Sku:
      description: The sku of this Bastion Host.
      properties:
        name:
          type: string
          description: The name of this Bastion Host.
          enum:
            - Basic
            - Standard
          default: Standard
          x-ms-enum:
            name: BastionHostSkuName
            modelAsString: true
      type: object
    BastionHostIPConfigurationPropertiesFormat:
      properties:
        subnet:
          $ref: '#/components/schemas/SubResource'
          description: Reference of the subnet resource.
        publicIPAddress:
          $ref: '#/components/schemas/SubResource'
          description: Reference of the PublicIP resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the bastion host IP configuration resource.
        privateIPAllocationMethod:
          $ref: '#/components/schemas/IPAllocationMethod'
          description: Private IP allocation method.
      required:
        - subnet
        - publicIPAddress
      description: Properties of IP configuration of an Bastion Host.
      type: object
    BastionHostIPConfiguration:
      description: IP configuration of an Bastion Host.
      properties:
        subnet:
          $ref: '#/components/schemas/SubResource'
          description: Reference of the subnet resource.
        publicIPAddress:
          $ref: '#/components/schemas/SubResource'
          description: Reference of the PublicIP resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the bastion host IP configuration resource.
        privateIPAllocationMethod:
          $ref: '#/components/schemas/IPAllocationMethod'
          description: Private IP allocation method.
        name:
          type: string
          description: Name of the resource that is unique within a resource group. This name can be used to access the resource.
        etag:
          type: string
          readOnly: true
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          readOnly: true
          type: string
          description: Ip configuration type.
        id:
          type: string
          description: Resource ID.
      type: object
    BastionHostPropertiesFormat:
      properties:
        ipConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/BastionHostIPConfiguration'
          description: IP configuration of the Bastion Host resource.
        dnsName:
          type: string
          description: FQDN for the endpoint on which bastion host is accessible.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the bastion host resource.
        scaleUnits:
          type: integer
          format: int32
          description: The scale units for the Bastion Host resource.
          minimum: 2
          maximum: 50
        disableCopyPaste:
          type: boolean
          default: false
          description: Enable/Disable Copy/Paste feature of the Bastion Host resource.
        enableFileCopy:
          type: boolean
          default: false
          description: Enable/Disable File Copy feature of the Bastion Host resource.
        enableIpConnect:
          type: boolean
          default: false
          description: Enable/Disable IP Connect feature of the Bastion Host resource.
        enableShareableLink:
          type: boolean
          default: false
          description: Enable/Disable Shareable Link of the Bastion Host resource.
        enableTunneling:
          type: boolean
          default: false
          description: Enable/Disable Tunneling feature of the Bastion Host resource.
      description: Properties of the Bastion Host.
      type: object
    BastionHost:
      description: Bastion Host resource.
      properties:
        ipConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/BastionHostIPConfiguration'
          description: IP configuration of the Bastion Host resource.
        dnsName:
          type: string
          description: FQDN for the endpoint on which bastion host is accessible.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the bastion host resource.
        scaleUnits:
          type: integer
          format: int32
          description: The scale units for the Bastion Host resource.
          minimum: 2
          maximum: 50
        disableCopyPaste:
          type: boolean
          default: false
          description: Enable/Disable Copy/Paste feature of the Bastion Host resource.
        enableFileCopy:
          type: boolean
          default: false
          description: Enable/Disable File Copy feature of the Bastion Host resource.
        enableIpConnect:
          type: boolean
          default: false
          description: Enable/Disable IP Connect feature of the Bastion Host resource.
        enableShareableLink:
          type: boolean
          default: false
          description: Enable/Disable Shareable Link of the Bastion Host resource.
        enableTunneling:
          type: boolean
          default: false
          description: Enable/Disable Tunneling feature of the Bastion Host resource.
        etag:
          type: string
          readOnly: true
          description: A unique read-only string that changes whenever the resource is updated.
        sku:
          description: The sku of this Bastion Host.
          $ref: '#/components/schemas/Sku'
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    BastionHostListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/BastionHost'
          description: List of Bastion Hosts in a resource group.
        nextLink:
          type: string
          description: URL to get the next set of results.
      description: Response for ListBastionHosts API service call.
      type: object
    BastionShareableLink:
      properties:
        vm:
          $ref: '#/components/schemas/VM'
          description: Reference of the virtual machine resource.
        bsl:
          type: string
          readOnly: true
          description: The unique Bastion Shareable Link to the virtual machine.
        createdAt:
          type: string
          readOnly: true
          description: The time when the link was created.
        message:
          type: string
          readOnly: true
          description: Optional field indicating the warning or error message related to the vm in case of partial failure.
      required:
        - vm
      description: Bastion Shareable Link.
      type: object
    BastionShareableLinkListRequest:
      properties:
        vms:
          type: array
          items:
            $ref: '#/components/schemas/BastionShareableLink'
          description: List of VM references.
      description: Post request for all the Bastion Shareable Link endpoints.
      type: object
    BastionShareableLinkListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/BastionShareableLink'
          description: List of Bastion Shareable Links for the request.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: Response for all the Bastion Shareable Link endpoints.
      type: object
    BastionActiveSession:
      properties:
        sessionId:
          type: string
          readOnly: true
          description: A unique id for the session.
        startTime:
          type: object
          readOnly: true
          description: The time when the session started.
        targetSubscriptionId:
          type: string
          readOnly: true
          description: The subscription id for the target virtual machine.
        resourceType:
          type: string
          readOnly: true
          description: The type of the resource.
        targetHostName:
          type: string
          readOnly: true
          description: The host name of the target.
        targetResourceGroup:
          type: string
          readOnly: true
          description: The resource group of the target.
        userName:
          type: string
          readOnly: true
          description: The user name who is active on this session.
        targetIpAddress:
          type: string
          readOnly: true
          description: The IP Address of the target.
        protocol:
          type: string
          readOnly: true
          description: The protocol used to connect to the target.
          enum:
            - SSH
            - RDP
          x-ms-enum:
            name: BastionConnectProtocol
            modelAsString: true
        targetResourceId:
          type: string
          readOnly: true
          description: The resource id of the target.
        sessionDurationInMins:
          type: number
          readOnly: true
          description: Duration in mins the session has been active.
      description: The session detail for a target.
      type: object
    BastionActiveSessionListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/BastionActiveSession'
          description: List of active sessions on the bastion.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: Response for GetActiveSessions.
      type: object
    BastionSessionState:
      properties:
        sessionId:
          type: string
          readOnly: true
          description: A unique id for the session.
        message:
          type: string
          readOnly: true
          description: Used for extra information.
        state:
          type: string
          readOnly: true
          description: The state of the session. Disconnected/Failed/NotFound.
      description: The session state detail for a target.
      type: object
    BastionSessionDeleteResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/BastionSessionState'
          description: List of sessions with their corresponding state.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: Response for DisconnectActiveSessions.
      type: object
    VM:
      description: Describes a Virtual Machine.
      properties:
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    SessionIds:
      properties:
        sessionIds:
          type: array
          items:
            type: string
          description: List of session IDs.
      description: List of session IDs.
      type: object
    SecurityAdminConfiguration:
      description: Defines the security admin configuration
      properties:
        description:
          type: string
          description: A description of the security configuration.
        applyOnNetworkIntentPolicyBasedServices:
          type: array
          items:
            $ref: '#/components/schemas/NetworkIntentPolicyBasedService'
          description: Enum list of network intent policy based services.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the resource.
        systemData:
          readOnly: true
          description: The system metadata related to this resource.
          $ref: '#/components/schemas/SystemData'
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
      type: object
    SecurityAdminConfigurationPropertiesFormat:
      type: object
      properties:
        description:
          type: string
          description: A description of the security configuration.
        applyOnNetworkIntentPolicyBasedServices:
          type: array
          items:
            $ref: '#/components/schemas/NetworkIntentPolicyBasedService'
          description: Enum list of network intent policy based services.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the resource.
      description: Defines the security admin configuration properties.
    SecurityAdminConfigurationListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/SecurityAdminConfiguration'
          description: Gets a page of security admin configurations
        nextLink:
          type: string
          description: Gets the URL to get the next page of results.
      description: A list of network manager security admin configurations
    AdminRuleListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/BaseAdminRule'
          description: A list of admin rules
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: security configuration admin rule list result.
    AdminRuleCollectionListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/AdminRuleCollection'
          description: A list of network manager security admin configuration rule collections
        nextLink:
          type: string
          description: Gets the URL to get the next set of results.
      description: Security admin configuration rule collection list result.
    AdminRuleCollection:
      description: Defines the admin rule collection.
      properties:
        description:
          type: string
          description: A description of the admin rule collection.
        appliesToGroups:
          type: array
          x-ms-identifiers:
            - networkGroupId
          items:
            $ref: '#/components/schemas/NetworkManagerSecurityGroupItem'
          description: Groups for configuration
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the resource.
        systemData:
          readOnly: true
          description: The system metadata related to this resource.
          $ref: '#/components/schemas/SystemData'
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
      type: object
    AdminRuleCollectionPropertiesFormat:
      type: object
      properties:
        description:
          type: string
          description: A description of the admin rule collection.
        appliesToGroups:
          type: array
          x-ms-identifiers:
            - networkGroupId
          items:
            $ref: '#/components/schemas/NetworkManagerSecurityGroupItem'
          description: Groups for configuration
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the resource.
      required:
        - appliesToGroups
      description: Defines the admin rule collection properties.
    BaseAdminRule:
      required:
        - kind
      discriminator:
        propertyName: kind
      description: Network base admin rule.
      properties:
        kind:
          type: string
          description: Whether the rule is custom or default.
          enum:
            - Custom
            - Default
          x-ms-enum:
            name: AdminRuleKind
            modelAsString: true
        systemData:
          readOnly: true
          description: The system metadata related to this resource.
          $ref: '#/components/schemas/SystemData'
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
      type: object
    AdminRule:
      description: Network admin rule.
      x-ms-discriminator-value: Custom
      properties:
        description:
          type: string
          description: A description for this rule. Restricted to 140 chars.
        protocol:
          type: string
          $ref: '#/components/schemas/RuleProtocol'
          description: Network protocol this rule applies to.
        sources:
          type: array
          x-ms-identifiers:
            - addressPrefix
          items:
            $ref: '#/components/schemas/AddressPrefixItem'
          description: The CIDR or source IP ranges.
        destinations:
          type: array
          x-ms-identifiers:
            - addressPrefix
          items:
            $ref: '#/components/schemas/AddressPrefixItem'
          description: The destination address prefixes. CIDR or destination IP ranges.
        sourcePortRanges:
          type: array
          items:
            type: string
            description: The source port.
          description: The source port ranges.
        destinationPortRanges:
          type: array
          items:
            type: string
            description: The destination port.
          description: The destination port ranges.
        access:
          $ref: '#/components/schemas/SecurityConfigurationRuleAccess'
          description: Indicates the access allowed for this particular rule
        priority:
          type: integer
          format: int32
          minimum: 1
          maximum: 4096
          description: The priority of the rule. The value can be between 1 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
        direction:
          $ref: '#/components/schemas/SecurityConfigurationRuleDirection'
          description: Indicates if the traffic matched against the rule in inbound or outbound.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the resource.
        kind:
          type: string
          description: Whether the rule is custom or default.
          enum:
            - Custom
            - Default
          x-ms-enum:
            name: AdminRuleKind
            modelAsString: true
        systemData:
          readOnly: true
          description: The system metadata related to this resource.
          $ref: '#/components/schemas/SystemData'
      type: object
    AdminPropertiesFormat:
      type: object
      properties:
        description:
          type: string
          description: A description for this rule. Restricted to 140 chars.
        protocol:
          type: string
          $ref: '#/components/schemas/RuleProtocol'
          description: Network protocol this rule applies to.
        sources:
          type: array
          x-ms-identifiers:
            - addressPrefix
          items:
            $ref: '#/components/schemas/AddressPrefixItem'
          description: The CIDR or source IP ranges.
        destinations:
          type: array
          x-ms-identifiers:
            - addressPrefix
          items:
            $ref: '#/components/schemas/AddressPrefixItem'
          description: The destination address prefixes. CIDR or destination IP ranges.
        sourcePortRanges:
          type: array
          items:
            type: string
            description: The source port.
          description: The source port ranges.
        destinationPortRanges:
          type: array
          items:
            type: string
            description: The destination port.
          description: The destination port ranges.
        access:
          $ref: '#/components/schemas/SecurityConfigurationRuleAccess'
          description: Indicates the access allowed for this particular rule
        priority:
          type: integer
          format: int32
          minimum: 1
          maximum: 4096
          description: The priority of the rule. The value can be between 1 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
        direction:
          $ref: '#/components/schemas/SecurityConfigurationRuleDirection'
          description: Indicates if the traffic matched against the rule in inbound or outbound.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the resource.
      required:
        - protocol
        - access
        - direction
        - priority
      description: Security admin rule resource.
    DefaultAdminRule:
      description: Network default admin rule.
      x-ms-discriminator-value: Default
      properties:
        description:
          type: string
          readOnly: true
          description: A description for this rule. Restricted to 140 chars.
        flag:
          type: string
          description: Default rule flag.
        protocol:
          type: string
          readOnly: true
          $ref: '#/components/schemas/RuleProtocol'
          description: Network protocol this rule applies to.
        sources:
          type: array
          x-ms-identifiers:
            - addressPrefix
          readOnly: true
          items:
            $ref: '#/components/schemas/AddressPrefixItem'
          description: The CIDR or source IP ranges.
        destinations:
          type: array
          x-ms-identifiers:
            - addressPrefix
          readOnly: true
          items:
            $ref: '#/components/schemas/AddressPrefixItem'
          description: The destination address prefixes. CIDR or destination IP ranges.
        sourcePortRanges:
          type: array
          readOnly: true
          items:
            type: string
            description: The source port.
          description: The source port ranges.
        destinationPortRanges:
          type: array
          readOnly: true
          items:
            type: string
            description: The destination port.
          description: The destination port ranges.
        access:
          $ref: '#/components/schemas/SecurityConfigurationRuleAccess'
          readOnly: true
          description: Indicates the access allowed for this particular rule
        priority:
          type: integer
          format: int32
          readOnly: true
          description: The priority of the rule. The value can be between 1 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
        direction:
          $ref: '#/components/schemas/SecurityConfigurationRuleDirection'
          readOnly: true
          description: Indicates if the traffic matched against the rule in inbound or outbound.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the resource.
        kind:
          type: string
          description: Whether the rule is custom or default.
          enum:
            - Custom
            - Default
          x-ms-enum:
            name: AdminRuleKind
            modelAsString: true
        systemData:
          readOnly: true
          description: The system metadata related to this resource.
          $ref: '#/components/schemas/SystemData'
      type: object
    DefaultAdminPropertiesFormat:
      type: object
      properties:
        description:
          type: string
          readOnly: true
          description: A description for this rule. Restricted to 140 chars.
        flag:
          type: string
          description: Default rule flag.
        protocol:
          type: string
          readOnly: true
          $ref: '#/components/schemas/RuleProtocol'
          description: Network protocol this rule applies to.
        sources:
          type: array
          x-ms-identifiers:
            - addressPrefix
          readOnly: true
          items:
            $ref: '#/components/schemas/AddressPrefixItem'
          description: The CIDR or source IP ranges.
        destinations:
          type: array
          x-ms-identifiers:
            - addressPrefix
          readOnly: true
          items:
            $ref: '#/components/schemas/AddressPrefixItem'
          description: The destination address prefixes. CIDR or destination IP ranges.
        sourcePortRanges:
          type: array
          readOnly: true
          items:
            type: string
            description: The source port.
          description: The source port ranges.
        destinationPortRanges:
          type: array
          readOnly: true
          items:
            type: string
            description: The destination port.
          description: The destination port ranges.
        access:
          $ref: '#/components/schemas/SecurityConfigurationRuleAccess'
          readOnly: true
          description: Indicates the access allowed for this particular rule
        priority:
          type: integer
          format: int32
          readOnly: true
          description: The priority of the rule. The value can be between 1 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
        direction:
          $ref: '#/components/schemas/SecurityConfigurationRuleDirection'
          readOnly: true
          description: Indicates if the traffic matched against the rule in inbound or outbound.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the resource.
      description: Security default admin rule resource.
    SecurityConfigurationRuleAccess:
      type: string
      description: Whether network traffic is allowed or denied.
      enum:
        - Allow
        - Deny
        - AlwaysAllow
      x-ms-enum:
        name: SecurityConfigurationRuleAccess
        modelAsString: true
    SecurityConfigurationRuleDirection:
      type: string
      description: The direction of the rule. The direction specifies if the rule will be evaluated on incoming or outgoing traffic.
      enum:
        - Inbound
        - Outbound
      x-ms-enum:
        name: SecurityConfigurationRuleDirection
        modelAsString: true
    RuleProtocol:
      type: string
      description: Network protocol this rule applies to.
      enum:
        - Tcp
        - Udp
        - Icmp
        - Esp
        - Any
        - Ah
      x-ms-enum:
        name: SecurityConfigurationRuleProtocol
        modelAsString: true
    NetworkManagerSecurityGroupItem:
      type: object
      properties:
        networkGroupId:
          type: string
          description: Network manager group Id.
      required:
        - networkGroupId
      description: Network manager security group item.
    AddressPrefixItem:
      type: object
      properties:
        addressPrefix:
          type: string
          description: Address prefix.
        addressPrefixType:
          type: string
          description: Address prefix type.
          enum:
            - IPPrefix
            - ServiceTag
          x-ms-enum:
            name: AddressPrefixType
            modelAsString: true
      description: Address prefix item.
    NetworkIntentPolicyBasedService:
      type: string
      description: Network intent policy based services.
      enum:
        - None
        - All
      x-ms-enum:
        name: NetworkIntentPolicyBasedService
        modelAsString: true
    VirtualRouter:
      description: VirtualRouter Resource.
      properties:
        virtualRouterAsn:
          type: integer
          readOnly: false
          format: int64
          minimum: 0
          maximum: 4294967295
          description: VirtualRouter ASN.
        virtualRouterIps:
          type: array
          readOnly: false
          description: VirtualRouter IPs.
          items:
            type: string
        hostedSubnet:
          readOnly: false
          $ref: '#/components/schemas/SubResource'
          description: The Subnet on which VirtualRouter is hosted.
        hostedGateway:
          readOnly: false
          $ref: '#/components/schemas/SubResource'
          description: The Gateway on which VirtualRouter is hosted.
        peerings:
          type: array
          readOnly: true
          description: List of references to VirtualRouterPeerings.
          items:
            $ref: '#/components/schemas/SubResource'
        provisioningState:
          description: The provisioning state of the resource.
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
        etag:
          type: string
          readOnly: true
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    VirtualRouterPropertiesFormat:
      properties:
        virtualRouterAsn:
          type: integer
          readOnly: false
          format: int64
          minimum: 0
          maximum: 4294967295
          description: VirtualRouter ASN.
        virtualRouterIps:
          type: array
          readOnly: false
          description: VirtualRouter IPs.
          items:
            type: string
        hostedSubnet:
          readOnly: false
          $ref: '#/components/schemas/SubResource'
          description: The Subnet on which VirtualRouter is hosted.
        hostedGateway:
          readOnly: false
          $ref: '#/components/schemas/SubResource'
          description: The Gateway on which VirtualRouter is hosted.
        peerings:
          type: array
          readOnly: true
          description: List of references to VirtualRouterPeerings.
          items:
            $ref: '#/components/schemas/SubResource'
        provisioningState:
          description: The provisioning state of the resource.
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
      description: Virtual Router definition.
      type: object
    VirtualRouterPeering:
      description: Virtual Router Peering resource.
      properties:
        peerAsn:
          type: integer
          readOnly: false
          format: int64
          minimum: 0
          maximum: 4294967295
          description: Peer ASN.
        peerIp:
          type: string
          readOnly: false
          description: Peer IP.
        provisioningState:
          description: The provisioning state of the resource.
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
        name:
          type: string
          description: Name of the virtual router peering that is unique within a virtual router.
        etag:
          type: string
          readOnly: true
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          type: string
          readOnly: true
          description: Peering type.
        id:
          type: string
          description: Resource ID.
      type: object
    VirtualRouterPeeringProperties:
      properties:
        peerAsn:
          type: integer
          readOnly: false
          format: int64
          minimum: 0
          maximum: 4294967295
          description: Peer ASN.
        peerIp:
          type: string
          readOnly: false
          description: Peer IP.
        provisioningState:
          description: The provisioning state of the resource.
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
      description: Properties of the rule group.
      type: object
    VirtualRouterListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VirtualRouter'
          description: List of Virtual Routers.
        nextLink:
          type: string
          description: URL to get the next set of results.
      description: Response for ListVirtualRouters API service call.
      type: object
    VirtualRouterPeeringListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VirtualRouterPeering'
          description: List of VirtualRouterPeerings in a VirtualRouter.
        nextLink:
          type: string
          description: URL to get the next set of results.
      description: Response for ListVirtualRouterPeerings API service call.
      type: object
    GatewayLoadBalancerTunnelInterface:
      properties:
        port:
          type: integer
          format: int32
          description: Port of gateway load balancer tunnel interface.
        identifier:
          type: integer
          format: int32
          description: Identifier of gateway load balancer tunnel interface.
        protocol:
          type: string
          description: Protocol of gateway load balancer tunnel interface.
          enum:
            - None
            - Native
            - VXLAN
          x-ms-enum:
            name: GatewayLoadBalancerTunnelProtocol
            modelAsString: true
        type:
          type: string
          description: Traffic type of gateway load balancer tunnel interface.
          enum:
            - None
            - Internal
            - External
          x-ms-enum:
            name: GatewayLoadBalancerTunnelInterfaceType
            modelAsString: true
      description: Gateway load balancer tunnel interface of a load balancer backend address pool.
      type: object
    LoadBalancerSku:
      properties:
        name:
          type: string
          description: Name of a load balancer SKU.
          enum:
            - Basic
            - Standard
            - Gateway
          x-ms-enum:
            name: LoadBalancerSkuName
            modelAsString: true
        tier:
          type: string
          description: Tier of a load balancer SKU.
          enum:
            - Regional
            - Global
          x-ms-enum:
            name: LoadBalancerSkuTier
            modelAsString: true
      description: SKU of a load balancer.
      type: object
    FrontendIPConfigurationPropertiesFormat:
      properties:
        inboundNatRules:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: An array of references to inbound rules that use this frontend IP.
        inboundNatPools:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: An array of references to inbound pools that use this frontend IP.
        outboundRules:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: An array of references to outbound rules that use this frontend IP.
        loadBalancingRules:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: An array of references to load balancing rules that use this frontend IP.
        privateIPAddress:
          type: string
          description: The private IP address of the IP configuration.
        privateIPAllocationMethod:
          $ref: '#/components/schemas/IPAllocationMethod'
          description: The Private IP allocation method.
        privateIPAddressVersion:
          $ref: '#/components/schemas/IPVersion'
          description: Whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.
        subnet:
          $ref: '#/components/schemas/Subnet'
          description: The reference to the subnet resource.
        publicIPAddress:
          $ref: '#/components/schemas/PublicIPAddress'
          description: The reference to the Public IP resource.
        publicIPPrefix:
          $ref: '#/components/schemas/SubResource'
          description: The reference to the Public IP Prefix resource.
        gatewayLoadBalancer:
          $ref: '#/components/schemas/SubResource'
          description: The reference to gateway load balancer frontend IP.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the frontend IP configuration resource.
      description: Properties of Frontend IP Configuration of the load balancer.
      type: object
    FrontendIPConfiguration:
      description: Frontend IP address of the load balancer.
      properties:
        inboundNatRules:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: An array of references to inbound rules that use this frontend IP.
        inboundNatPools:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: An array of references to inbound pools that use this frontend IP.
        outboundRules:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: An array of references to outbound rules that use this frontend IP.
        loadBalancingRules:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: An array of references to load balancing rules that use this frontend IP.
        privateIPAddress:
          type: string
          description: The private IP address of the IP configuration.
        privateIPAllocationMethod:
          $ref: '#/components/schemas/IPAllocationMethod'
          description: The Private IP allocation method.
        privateIPAddressVersion:
          $ref: '#/components/schemas/IPVersion'
          description: Whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.
        subnet:
          $ref: '#/components/schemas/Subnet'
          description: The reference to the subnet resource.
        publicIPAddress:
          $ref: '#/components/schemas/PublicIPAddress'
          description: The reference to the Public IP resource.
        publicIPPrefix:
          $ref: '#/components/schemas/SubResource'
          description: The reference to the Public IP Prefix resource.
        gatewayLoadBalancer:
          $ref: '#/components/schemas/SubResource'
          description: The reference to gateway load balancer frontend IP.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the frontend IP configuration resource.
        name:
          type: string
          description: The name of the resource that is unique within the set of frontend IP configurations used by the load balancer. This name can be used to access the resource.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          readOnly: true
          type: string
          description: Type of the resource.
        zones:
          type: array
          items:
            type: string
          description: A list of availability zones denoting the IP allocated for the resource needs to come from.
        id:
          type: string
          description: Resource ID.
      type: object
    LoadBalancerBackendAddressPropertiesFormat:
      properties:
        virtualNetwork:
          $ref: '#/components/schemas/SubResource'
          description: Reference to an existing virtual network.
        subnet:
          $ref: '#/components/schemas/SubResource'
          description: Reference to an existing subnet.
        ipAddress:
          type: string
          description: IP Address belonging to the referenced virtual network.
          x-ms-azure-resource: false
        networkInterfaceIPConfiguration:
          readOnly: true
          $ref: '#/components/schemas/SubResource'
          description: Reference to IP address defined in network interfaces.
        loadBalancerFrontendIPConfiguration:
          readOnly: false
          $ref: '#/components/schemas/SubResource'
          description: Reference to the frontend ip address configuration defined in regional loadbalancer.
        inboundNatRulesPortMapping:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/NatRulePortMapping'
          description: Collection of inbound NAT rule port mappings.
        adminState:
          type: string
          description: A list of administrative states which once set can override health probe so that Load Balancer will always forward new connections to backend, or deny new connections and reset existing connections.
          enum:
            - None
            - Up
            - Down
            - Drain
          x-ms-enum:
            name: LoadBalancerBackendAddressAdminState
            modelAsString: true
      description: Properties of the load balancer backend addresses.
      type: object
    LoadBalancerBackendAddress:
      description: Load balancer backend addresses.
      properties:
        virtualNetwork:
          $ref: '#/components/schemas/SubResource'
          description: Reference to an existing virtual network.
        subnet:
          $ref: '#/components/schemas/SubResource'
          description: Reference to an existing subnet.
        ipAddress:
          type: string
          description: IP Address belonging to the referenced virtual network.
          x-ms-azure-resource: false
        networkInterfaceIPConfiguration:
          readOnly: true
          $ref: '#/components/schemas/SubResource'
          description: Reference to IP address defined in network interfaces.
        loadBalancerFrontendIPConfiguration:
          readOnly: false
          $ref: '#/components/schemas/SubResource'
          description: Reference to the frontend ip address configuration defined in regional loadbalancer.
        inboundNatRulesPortMapping:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/NatRulePortMapping'
          description: Collection of inbound NAT rule port mappings.
        adminState:
          type: string
          description: A list of administrative states which once set can override health probe so that Load Balancer will always forward new connections to backend, or deny new connections and reset existing connections.
          enum:
            - None
            - Up
            - Down
            - Drain
          x-ms-enum:
            name: LoadBalancerBackendAddressAdminState
            modelAsString: true
        name:
          type: string
          description: Name of the backend address.
      type: object
    BackendAddressPoolPropertiesFormat:
      properties:
        location:
          type: string
          description: The location of the backend address pool.
        tunnelInterfaces:
          type: array
          items:
            $ref: '#/components/schemas/GatewayLoadBalancerTunnelInterface'
          description: An array of gateway load balancer tunnel interfaces.
        loadBalancerBackendAddresses:
          type: array
          items:
            $ref: '#/components/schemas/LoadBalancerBackendAddress'
          description: An array of backend addresses.
        backendIPConfigurations:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterfaceIPConfiguration'
          description: An array of references to IP addresses defined in network interfaces.
        loadBalancingRules:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: An array of references to load balancing rules that use this backend address pool.
        outboundRule:
          readOnly: true
          $ref: '#/components/schemas/SubResource'
          description: A reference to an outbound rule that uses this backend address pool.
        outboundRules:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: An array of references to outbound rules that use this backend address pool.
        inboundNatRules:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: An array of references to inbound NAT rules that use this backend address pool.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the backend address pool resource.
        drainPeriodInSeconds:
          type: integer
          format: int32
          description: Amount of seconds Load Balancer waits for before sending RESET to client and backend address.
      description: Properties of the backend address pool.
      type: object
    BackendAddressPool:
      description: Pool of backend IP addresses.
      properties:
        location:
          type: string
          description: The location of the backend address pool.
        tunnelInterfaces:
          type: array
          items:
            $ref: '#/components/schemas/GatewayLoadBalancerTunnelInterface'
          description: An array of gateway load balancer tunnel interfaces.
        loadBalancerBackendAddresses:
          type: array
          items:
            $ref: '#/components/schemas/LoadBalancerBackendAddress'
          description: An array of backend addresses.
        backendIPConfigurations:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterfaceIPConfiguration'
          description: An array of references to IP addresses defined in network interfaces.
        loadBalancingRules:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: An array of references to load balancing rules that use this backend address pool.
        outboundRule:
          readOnly: true
          $ref: '#/components/schemas/SubResource'
          description: A reference to an outbound rule that uses this backend address pool.
        outboundRules:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: An array of references to outbound rules that use this backend address pool.
        inboundNatRules:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: An array of references to inbound NAT rules that use this backend address pool.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the backend address pool resource.
        drainPeriodInSeconds:
          type: integer
          format: int32
          description: Amount of seconds Load Balancer waits for before sending RESET to client and backend address.
        name:
          type: string
          description: The name of the resource that is unique within the set of backend address pools used by the load balancer. This name can be used to access the resource.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          readOnly: true
          type: string
          description: Type of the resource.
        id:
          type: string
          description: Resource ID.
      type: object
    LoadBalancingRulePropertiesFormat:
      properties:
        frontendIPConfiguration:
          $ref: '#/components/schemas/SubResource'
          description: A reference to frontend IP addresses.
        backendAddressPool:
          $ref: '#/components/schemas/SubResource'
          description: A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.
        backendAddressPools:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: An array of references to pool of DIPs.
        probe:
          $ref: '#/components/schemas/SubResource'
          description: The reference to the load balancer probe used by the load balancing rule.
        protocol:
          $ref: '#/components/schemas/TransportProtocol'
          description: The reference to the transport protocol used by the load balancing rule.
        loadDistribution:
          type: string
          description: The load distribution policy for this rule.
          enum:
            - Default
            - SourceIP
            - SourceIPProtocol
          x-ms-enum:
            name: LoadDistribution
            modelAsString: true
        frontendPort:
          type: integer
          format: int32
          description: The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 0 and 65534. Note that value 0 enables "Any Port".
        backendPort:
          type: integer
          format: int32
          description: The port used for internal connections on the endpoint. Acceptable values are between 0 and 65535. Note that value 0 enables "Any Port".
        idleTimeoutInMinutes:
          type: integer
          format: int32
          description: The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
        enableFloatingIP:
          type: boolean
          description: Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
        enableTcpReset:
          type: boolean
          description: Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
        disableOutboundSnat:
          type: boolean
          description: Configures SNAT for the VMs in the backend pool to use the publicIP address specified in the frontend of the load balancing rule.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the load balancing rule resource.
      required:
        - protocol
        - frontendPort
      description: Properties of the load balancer.
      type: object
    LoadBalancingRule:
      description: A load balancing rule for a load balancer.
      properties:
        frontendIPConfiguration:
          $ref: '#/components/schemas/SubResource'
          description: A reference to frontend IP addresses.
        backendAddressPool:
          $ref: '#/components/schemas/SubResource'
          description: A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.
        backendAddressPools:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: An array of references to pool of DIPs.
        probe:
          $ref: '#/components/schemas/SubResource'
          description: The reference to the load balancer probe used by the load balancing rule.
        protocol:
          $ref: '#/components/schemas/TransportProtocol'
          description: The reference to the transport protocol used by the load balancing rule.
        loadDistribution:
          type: string
          description: The load distribution policy for this rule.
          enum:
            - Default
            - SourceIP
            - SourceIPProtocol
          x-ms-enum:
            name: LoadDistribution
            modelAsString: true
        frontendPort:
          type: integer
          format: int32
          description: The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 0 and 65534. Note that value 0 enables "Any Port".
        backendPort:
          type: integer
          format: int32
          description: The port used for internal connections on the endpoint. Acceptable values are between 0 and 65535. Note that value 0 enables "Any Port".
        idleTimeoutInMinutes:
          type: integer
          format: int32
          description: The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
        enableFloatingIP:
          type: boolean
          description: Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
        enableTcpReset:
          type: boolean
          description: Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
        disableOutboundSnat:
          type: boolean
          description: Configures SNAT for the VMs in the backend pool to use the publicIP address specified in the frontend of the load balancing rule.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the load balancing rule resource.
        name:
          type: string
          description: The name of the resource that is unique within the set of load balancing rules used by the load balancer. This name can be used to access the resource.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          readOnly: true
          type: string
          description: Type of the resource.
        id:
          type: string
          description: Resource ID.
      type: object
    ProbePropertiesFormat:
      properties:
        loadBalancingRules:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: The load balancer rules that use this probe.
        protocol:
          type: string
          description: The protocol of the end point. If 'Tcp' is specified, a received ACK is required for the probe to be successful. If 'Http' or 'Https' is specified, a 200 OK response from the specifies URI is required for the probe to be successful.
          enum:
            - Http
            - Tcp
            - Https
          x-ms-enum:
            name: ProbeProtocol
            modelAsString: true
        port:
          type: integer
          format: int32
          description: The port for communicating the probe. Possible values range from 1 to 65535, inclusive.
        intervalInSeconds:
          type: integer
          format: int32
          description: The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5.
        numberOfProbes:
          type: integer
          format: int32
          description: The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure.
        requestPath:
          type: string
          description: The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the probe resource.
      required:
        - protocol
        - port
      description: Load balancer probe resource.
      type: object
    Probe:
      description: A load balancer probe.
      properties:
        loadBalancingRules:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: The load balancer rules that use this probe.
        protocol:
          type: string
          description: The protocol of the end point. If 'Tcp' is specified, a received ACK is required for the probe to be successful. If 'Http' or 'Https' is specified, a 200 OK response from the specifies URI is required for the probe to be successful.
          enum:
            - Http
            - Tcp
            - Https
          x-ms-enum:
            name: ProbeProtocol
            modelAsString: true
        port:
          type: integer
          format: int32
          description: The port for communicating the probe. Possible values range from 1 to 65535, inclusive.
        intervalInSeconds:
          type: integer
          format: int32
          description: The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5.
        numberOfProbes:
          type: integer
          format: int32
          description: The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure.
        requestPath:
          type: string
          description: The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the probe resource.
        name:
          type: string
          description: The name of the resource that is unique within the set of probes used by the load balancer. This name can be used to access the resource.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          readOnly: true
          type: string
          description: Type of the resource.
        id:
          type: string
          description: Resource ID.
      type: object
    InboundNatRulePropertiesFormat:
      properties:
        frontendIPConfiguration:
          $ref: '#/components/schemas/SubResource'
          description: A reference to frontend IP addresses.
        backendIPConfiguration:
          readOnly: true
          $ref: '#/components/schemas/NetworkInterfaceIPConfiguration'
          description: A reference to a private IP address defined on a network interface of a VM. Traffic sent to the frontend port of each of the frontend IP configurations is forwarded to the backend IP.
        protocol:
          $ref: '#/components/schemas/TransportProtocol'
          description: The reference to the transport protocol used by the load balancing rule.
        frontendPort:
          type: integer
          format: int32
          description: The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
        backendPort:
          type: integer
          format: int32
          description: The port used for the internal endpoint. Acceptable values range from 1 to 65535.
        idleTimeoutInMinutes:
          type: integer
          format: int32
          description: The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
        enableFloatingIP:
          type: boolean
          description: Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
        enableTcpReset:
          type: boolean
          description: Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
        frontendPortRangeStart:
          type: integer
          format: int32
          description: The port range start for the external endpoint. This property is used together with BackendAddressPool and FrontendPortRangeEnd. Individual inbound NAT rule port mappings will be created for each backend address from BackendAddressPool. Acceptable values range from 1 to 65534.
        frontendPortRangeEnd:
          type: integer
          format: int32
          description: The port range end for the external endpoint. This property is used together with BackendAddressPool and FrontendPortRangeStart. Individual inbound NAT rule port mappings will be created for each backend address from BackendAddressPool. Acceptable values range from 1 to 65534.
        backendAddressPool:
          $ref: '#/components/schemas/SubResource'
          description: A reference to backendAddressPool resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the inbound NAT rule resource.
      description: Properties of the inbound NAT rule.
      type: object
    InboundNatRule:
      description: Inbound NAT rule of the load balancer.
      properties:
        frontendIPConfiguration:
          $ref: '#/components/schemas/SubResource'
          description: A reference to frontend IP addresses.
        backendIPConfiguration:
          readOnly: true
          $ref: '#/components/schemas/NetworkInterfaceIPConfiguration'
          description: A reference to a private IP address defined on a network interface of a VM. Traffic sent to the frontend port of each of the frontend IP configurations is forwarded to the backend IP.
        protocol:
          $ref: '#/components/schemas/TransportProtocol'
          description: The reference to the transport protocol used by the load balancing rule.
        frontendPort:
          type: integer
          format: int32
          description: The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
        backendPort:
          type: integer
          format: int32
          description: The port used for the internal endpoint. Acceptable values range from 1 to 65535.
        idleTimeoutInMinutes:
          type: integer
          format: int32
          description: The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
        enableFloatingIP:
          type: boolean
          description: Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
        enableTcpReset:
          type: boolean
          description: Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
        frontendPortRangeStart:
          type: integer
          format: int32
          description: The port range start for the external endpoint. This property is used together with BackendAddressPool and FrontendPortRangeEnd. Individual inbound NAT rule port mappings will be created for each backend address from BackendAddressPool. Acceptable values range from 1 to 65534.
        frontendPortRangeEnd:
          type: integer
          format: int32
          description: The port range end for the external endpoint. This property is used together with BackendAddressPool and FrontendPortRangeStart. Individual inbound NAT rule port mappings will be created for each backend address from BackendAddressPool. Acceptable values range from 1 to 65534.
        backendAddressPool:
          $ref: '#/components/schemas/SubResource'
          description: A reference to backendAddressPool resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the inbound NAT rule resource.
        name:
          type: string
          description: The name of the resource that is unique within the set of inbound NAT rules used by the load balancer. This name can be used to access the resource.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          readOnly: true
          type: string
          description: Type of the resource.
        id:
          type: string
          description: Resource ID.
      type: object
    InboundNatPoolPropertiesFormat:
      properties:
        frontendIPConfiguration:
          $ref: '#/components/schemas/SubResource'
          description: A reference to frontend IP addresses.
        protocol:
          $ref: '#/components/schemas/TransportProtocol'
          description: The reference to the transport protocol used by the inbound NAT pool.
        frontendPortRangeStart:
          type: integer
          format: int32
          description: The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.
        frontendPortRangeEnd:
          type: integer
          format: int32
          description: The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.
        backendPort:
          type: integer
          format: int32
          description: The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
        idleTimeoutInMinutes:
          type: integer
          format: int32
          description: The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
        enableFloatingIP:
          type: boolean
          description: Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
        enableTcpReset:
          type: boolean
          description: Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the inbound NAT pool resource.
      required:
        - protocol
        - frontendPortRangeStart
        - frontendPortRangeEnd
        - backendPort
      description: Properties of Inbound NAT pool.
      type: object
    InboundNatPool:
      description: Inbound NAT pool of the load balancer.
      properties:
        frontendIPConfiguration:
          $ref: '#/components/schemas/SubResource'
          description: A reference to frontend IP addresses.
        protocol:
          $ref: '#/components/schemas/TransportProtocol'
          description: The reference to the transport protocol used by the inbound NAT pool.
        frontendPortRangeStart:
          type: integer
          format: int32
          description: The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.
        frontendPortRangeEnd:
          type: integer
          format: int32
          description: The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.
        backendPort:
          type: integer
          format: int32
          description: The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
        idleTimeoutInMinutes:
          type: integer
          format: int32
          description: The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
        enableFloatingIP:
          type: boolean
          description: Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
        enableTcpReset:
          type: boolean
          description: Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the inbound NAT pool resource.
        name:
          type: string
          description: The name of the resource that is unique within the set of inbound NAT pools used by the load balancer. This name can be used to access the resource.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          readOnly: true
          type: string
          description: Type of the resource.
        id:
          type: string
          description: Resource ID.
      type: object
    OutboundRulePropertiesFormat:
      properties:
        allocatedOutboundPorts:
          type: integer
          format: int32
          description: The number of outbound ports to be used for NAT.
        frontendIPConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: The Frontend IP addresses of the load balancer.
        backendAddressPool:
          $ref: '#/components/schemas/SubResource'
          description: A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the outbound rule resource.
        protocol:
          type: string
          description: The protocol for the outbound rule in load balancer.
          enum:
            - Tcp
            - Udp
            - All
          x-ms-enum:
            name: LoadBalancerOutboundRuleProtocol
            modelAsString: true
        enableTcpReset:
          type: boolean
          description: Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
        idleTimeoutInMinutes:
          type: integer
          description: The timeout for the TCP idle connection.
      required:
        - backendAddressPool
        - frontendIPConfigurations
        - protocol
      description: Outbound rule of the load balancer.
      type: object
    OutboundRule:
      description: Outbound rule of the load balancer.
      properties:
        allocatedOutboundPorts:
          type: integer
          format: int32
          description: The number of outbound ports to be used for NAT.
        frontendIPConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: The Frontend IP addresses of the load balancer.
        backendAddressPool:
          $ref: '#/components/schemas/SubResource'
          description: A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the outbound rule resource.
        protocol:
          type: string
          description: The protocol for the outbound rule in load balancer.
          enum:
            - Tcp
            - Udp
            - All
          x-ms-enum:
            name: LoadBalancerOutboundRuleProtocol
            modelAsString: true
        enableTcpReset:
          type: boolean
          description: Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
        idleTimeoutInMinutes:
          type: integer
          description: The timeout for the TCP idle connection.
        name:
          type: string
          description: The name of the resource that is unique within the set of outbound rules used by the load balancer. This name can be used to access the resource.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          readOnly: true
          type: string
          description: Type of the resource.
        id:
          type: string
          description: Resource ID.
      type: object
    LoadBalancerPropertiesFormat:
      properties:
        frontendIPConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/FrontendIPConfiguration'
          description: Object representing the frontend IPs to be used for the load balancer.
        backendAddressPools:
          type: array
          items:
            $ref: '#/components/schemas/BackendAddressPool'
          description: Collection of backend address pools used by a load balancer.
        loadBalancingRules:
          type: array
          items:
            $ref: '#/components/schemas/LoadBalancingRule'
          description: Object collection representing the load balancing rules Gets the provisioning.
        probes:
          type: array
          items:
            $ref: '#/components/schemas/Probe'
          description: Collection of probe objects used in the load balancer.
        inboundNatRules:
          type: array
          items:
            $ref: '#/components/schemas/InboundNatRule'
          description: Collection of inbound NAT Rules used by a load balancer. Defining inbound NAT rules on your load balancer is mutually exclusive with defining an inbound NAT pool. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an Inbound NAT pool. They have to reference individual inbound NAT rules.
        inboundNatPools:
          type: array
          items:
            $ref: '#/components/schemas/InboundNatPool'
          description: Defines an external port range for inbound NAT to a single backend port on NICs associated with a load balancer. Inbound NAT rules are created automatically for each NIC associated with the Load Balancer using an external port from this range. Defining an Inbound NAT pool on your Load Balancer is mutually exclusive with defining inbound NAT rules. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an inbound NAT pool. They have to reference individual inbound NAT rules.
        outboundRules:
          type: array
          items:
            $ref: '#/components/schemas/OutboundRule'
          description: The outbound rules.
        resourceGuid:
          readOnly: true
          type: string
          description: The resource GUID property of the load balancer resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the load balancer resource.
      description: Properties of the load balancer.
      type: object
    LoadBalancer:
      description: LoadBalancer resource.
      properties:
        frontendIPConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/FrontendIPConfiguration'
          description: Object representing the frontend IPs to be used for the load balancer.
        backendAddressPools:
          type: array
          items:
            $ref: '#/components/schemas/BackendAddressPool'
          description: Collection of backend address pools used by a load balancer.
        loadBalancingRules:
          type: array
          items:
            $ref: '#/components/schemas/LoadBalancingRule'
          description: Object collection representing the load balancing rules Gets the provisioning.
        probes:
          type: array
          items:
            $ref: '#/components/schemas/Probe'
          description: Collection of probe objects used in the load balancer.
        inboundNatRules:
          type: array
          items:
            $ref: '#/components/schemas/InboundNatRule'
          description: Collection of inbound NAT Rules used by a load balancer. Defining inbound NAT rules on your load balancer is mutually exclusive with defining an inbound NAT pool. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an Inbound NAT pool. They have to reference individual inbound NAT rules.
        inboundNatPools:
          type: array
          items:
            $ref: '#/components/schemas/InboundNatPool'
          description: Defines an external port range for inbound NAT to a single backend port on NICs associated with a load balancer. Inbound NAT rules are created automatically for each NIC associated with the Load Balancer using an external port from this range. Defining an Inbound NAT pool on your Load Balancer is mutually exclusive with defining inbound NAT rules. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an inbound NAT pool. They have to reference individual inbound NAT rules.
        outboundRules:
          type: array
          items:
            $ref: '#/components/schemas/OutboundRule'
          description: The outbound rules.
        resourceGuid:
          readOnly: true
          type: string
          description: The resource GUID property of the load balancer resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the load balancer resource.
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location of the load balancer.
        sku:
          $ref: '#/components/schemas/LoadBalancerSku'
          description: The load balancer SKU.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    LoadBalancerListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/LoadBalancer'
          description: A list of load balancers in a resource group.
        nextLink:
          readOnly: true
          type: string
          description: The URL to get the next set of results.
      description: Response for ListLoadBalancers API service call.
      type: object
    InboundNatRuleListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/InboundNatRule'
          description: A list of inbound NAT rules in a load balancer.
        nextLink:
          readOnly: true
          type: string
          description: The URL to get the next set of results.
      description: Response for ListInboundNatRule API service call.
      type: object
    LoadBalancerBackendAddressPoolListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/BackendAddressPool'
          description: A list of backend address pools in a load balancer.
        nextLink:
          readOnly: true
          type: string
          description: The URL to get the next set of results.
      description: Response for ListBackendAddressPool API service call.
      type: object
    LoadBalancerFrontendIPConfigurationListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/FrontendIPConfiguration'
          description: A list of frontend IP configurations in a load balancer.
        nextLink:
          readOnly: true
          type: string
          description: The URL to get the next set of results.
      description: Response for ListFrontendIPConfiguration API service call.
      type: object
    LoadBalancerLoadBalancingRuleListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/LoadBalancingRule'
          description: A list of load balancing rules in a load balancer.
        nextLink:
          readOnly: true
          type: string
          description: The URL to get the next set of results.
      description: Response for ListLoadBalancingRule API service call.
      type: object
    LoadBalancerOutboundRuleListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/OutboundRule'
          description: A list of outbound rules in a load balancer.
        nextLink:
          readOnly: true
          type: string
          description: The URL to get the next set of results.
      description: Response for ListOutboundRule API service call.
      type: object
    LoadBalancerProbeListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Probe'
          description: A list of probes in a load balancer.
        nextLink:
          readOnly: true
          type: string
          description: The URL to get the next set of results.
      description: Response for ListProbe API service call.
      type: object
    TransportProtocol:
      type: string
      description: The transport protocol for the endpoint.
      enum:
        - Udp
        - Tcp
        - All
      x-ms-enum:
        name: TransportProtocol
        modelAsString: true
    LoadBalancerVipSwapRequest:
      properties:
        frontendIPConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/LoadBalancerVipSwapRequestFrontendIPConfiguration'
          description: A list of frontend IP configuration resources that should swap VIPs.
      description: The request for a VIP swap.
      type: object
    LoadBalancerVipSwapRequestFrontendIPConfiguration:
      description: VIP swap request's frontend IP configuration object.
      properties:
        publicIPAddress:
          $ref: '#/components/schemas/SubResource'
          description: A reference to public IP address resource.
        id:
          type: string
          description: The ID of frontend IP configuration resource.
      type: object
    LoadBalancerVipSwapRequestFrontendIPConfigurationProperties:
      properties:
        publicIPAddress:
          $ref: '#/components/schemas/SubResource'
          description: A reference to public IP address resource.
      description: The properties of VIP swap request's frontend IP configuration object.
      type: object
    NatRulePortMapping:
      type: object
      properties:
        inboundNatRuleName:
          type: string
          description: Name of inbound NAT rule.
        frontendPort:
          type: integer
          format: int32
          description: Frontend port.
        backendPort:
          type: integer
          format: int32
          description: Backend port.
      description: Individual port mappings for inbound NAT rule created for backend pool.
    QueryInboundNatRulePortMappingRequest:
      type: object
      properties:
        ipConfiguration:
          $ref: '#/components/schemas/SubResource'
          description: NetworkInterfaceIPConfiguration set in load balancer backend address.
        ipAddress:
          type: string
          description: IP address set in load balancer backend address.
      description: The request for a QueryInboundNatRulePortMapping API. Either IpConfiguration or IpAddress should be set
    BackendAddressInboundNatRulePortMappings:
      type: object
      properties:
        inboundNatRulePortMappings:
          type: array
          items:
            $ref: '#/components/schemas/InboundNatRulePortMapping'
          description: Collection of inbound NAT rule port mappings.
      description: The response for a QueryInboundNatRulePortMapping API.
    InboundNatRulePortMapping:
      type: object
      properties:
        inboundNatRuleName:
          readOnly: true
          type: string
          description: Name of inbound NAT rule.
        protocol:
          readOnly: true
          $ref: '#/components/schemas/TransportProtocol'
          description: The reference to the transport protocol used by the inbound NAT rule.
        frontendPort:
          readOnly: true
          type: integer
          format: int32
          description: Frontend port.
        backendPort:
          readOnly: true
          type: integer
          format: int32
          description: Backend port.
      description: Individual port mappings for inbound NAT rule created for backend pool.
    DnsNameAvailabilityResult:
      properties:
        available:
          type: boolean
          description: Domain availability (True/False).
      description: Response for the CheckDnsNameAvailability API service call.
      type: object
    AzureWebCategoryPropertiesFormat:
      properties:
        group:
          type: string
          readOnly: true
          description: The name of the group that the category belongs to.
      description: Azure Web Category Properties.
      type: object
    AzureWebCategory:
      description: Azure Web Category Resource.
      properties:
        group:
          type: string
          readOnly: true
          description: The name of the group that the category belongs to.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
      type: object
    AzureWebCategoryListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/AzureWebCategory'
          description: List of Azure Web Categories for a given Subscription.
        nextLink:
          type: string
          description: URL to get the next set of results.
      description: Response for ListAzureWebCategories API service call.
      type: object
    VirtualWanProperties:
      properties:
        disableVpnEncryption:
          type: boolean
          description: Vpn encryption to be disabled or not.
        virtualHubs:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/SubResource'
          description: List of VirtualHubs in the VirtualWAN.
        vpnSites:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/SubResource'
          description: List of VpnSites in the VirtualWAN.
        allowBranchToBranchTraffic:
          type: boolean
          description: True if branch to branch traffic is allowed.
        allowVnetToVnetTraffic:
          type: boolean
          description: True if Vnet to Vnet traffic is allowed.
        office365LocalBreakoutCategory:
          description: The office local breakout category.
          $ref: '#/components/schemas/OfficeTrafficCategory'
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the virtual WAN resource.
        type:
          type: string
          description: The type of the VirtualWAN.
      description: Parameters for VirtualWAN.
      type: object
    VirtualWAN:
      required:
        - location
      description: VirtualWAN Resource.
      properties:
        disableVpnEncryption:
          type: boolean
          description: Vpn encryption to be disabled or not.
        virtualHubs:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/SubResource'
          description: List of VirtualHubs in the VirtualWAN.
        vpnSites:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/SubResource'
          description: List of VpnSites in the VirtualWAN.
        allowBranchToBranchTraffic:
          type: boolean
          description: True if branch to branch traffic is allowed.
        allowVnetToVnetTraffic:
          type: boolean
          description: True if Vnet to Vnet traffic is allowed.
        office365LocalBreakoutCategory:
          description: The office local breakout category.
          $ref: '#/components/schemas/OfficeTrafficCategory'
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the virtual WAN resource.
        type:
          readOnly: true
          type: string
          description: Resource type.
        etag:
          type: string
          readOnly: true
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    ListVirtualWANsResult:
      description: Result of the request to list VirtualWANs. It contains a list of VirtualWANs and a URL nextLink to get the next set of results.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VirtualWAN'
          description: List of VirtualWANs.
        nextLink:
          type: string
          description: URL to get the next set of operation list results if there are any.
      type: object
    VpnSiteProperties:
      properties:
        virtualWan:
          $ref: '#/components/schemas/SubResource'
          description: The VirtualWAN to which the vpnSite belongs.
        deviceProperties:
          description: The device properties.
          $ref: '#/components/schemas/DeviceProperties'
        ipAddress:
          type: string
          description: The ip-address for the vpn-site.
        siteKey:
          type: string
          description: The key for vpn-site that can be used for connections.
        addressSpace:
          $ref: '#/components/schemas/AddressSpace'
          description: The AddressSpace that contains an array of IP address ranges.
        bgpProperties:
          $ref: '#/components/schemas/BgpSettings'
          description: The set of bgp properties.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the VPN site resource.
        isSecuritySite:
          type: boolean
          description: IsSecuritySite flag.
        vpnSiteLinks:
          type: array
          description: List of all vpn site links.
          items:
            $ref: '#/components/schemas/VpnSiteLink'
        o365Policy:
          readOnly: false
          description: Office365 Policy.
          $ref: '#/components/schemas/O365PolicyProperties'
      description: Parameters for VpnSite.
      type: object
    VpnSite:
      required:
        - location
      description: VpnSite Resource.
      properties:
        virtualWan:
          $ref: '#/components/schemas/SubResource'
          description: The VirtualWAN to which the vpnSite belongs.
        deviceProperties:
          description: The device properties.
          $ref: '#/components/schemas/DeviceProperties'
        ipAddress:
          type: string
          description: The ip-address for the vpn-site.
        siteKey:
          type: string
          description: The key for vpn-site that can be used for connections.
        addressSpace:
          $ref: '#/components/schemas/AddressSpace'
          description: The AddressSpace that contains an array of IP address ranges.
        bgpProperties:
          $ref: '#/components/schemas/BgpSettings'
          description: The set of bgp properties.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the VPN site resource.
        isSecuritySite:
          type: boolean
          description: IsSecuritySite flag.
        vpnSiteLinks:
          type: array
          description: List of all vpn site links.
          items:
            $ref: '#/components/schemas/VpnSiteLink'
        o365Policy:
          readOnly: false
          description: Office365 Policy.
          $ref: '#/components/schemas/O365PolicyProperties'
        etag:
          type: string
          readOnly: true
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    ListVpnSitesResult:
      description: Result of the request to list VpnSites. It contains a list of VpnSites and a URL nextLink to get the next set of results.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VpnSite'
          description: List of VpnSites.
        nextLink:
          type: string
          description: URL to get the next set of operation list results if there are any.
      type: object
    VpnSiteLinkProperties:
      properties:
        linkProperties:
          description: The link provider properties.
          $ref: '#/components/schemas/VpnLinkProviderProperties'
        ipAddress:
          type: string
          description: The ip-address for the vpn-site-link.
        fqdn:
          type: string
          description: FQDN of vpn-site-link.
        bgpProperties:
          $ref: '#/components/schemas/VpnLinkBgpSettings'
          description: The set of bgp properties.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the VPN site link resource.
      description: Parameters for VpnSite.
      type: object
    VpnSiteLink:
      description: VpnSiteLink Resource.
      properties:
        linkProperties:
          description: The link provider properties.
          $ref: '#/components/schemas/VpnLinkProviderProperties'
        ipAddress:
          type: string
          description: The ip-address for the vpn-site-link.
        fqdn:
          type: string
          description: FQDN of vpn-site-link.
        bgpProperties:
          $ref: '#/components/schemas/VpnLinkBgpSettings'
          description: The set of bgp properties.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the VPN site link resource.
        etag:
          type: string
          readOnly: true
          description: A unique read-only string that changes whenever the resource is updated.
        name:
          type: string
          description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
        type:
          readOnly: true
          type: string
          description: Resource type.
        id:
          type: string
          description: Resource ID.
      type: object
    ListVpnSiteLinksResult:
      description: Result of the request to list VpnSiteLinks. It contains a list of VpnSiteLinks and a URL nextLink to get the next set of results.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VpnSiteLink'
          description: List of VpnSitesLinks.
        nextLink:
          type: string
          description: URL to get the next set of operation list results if there are any.
      type: object
    GetVpnSitesConfigurationRequest:
      properties:
        vpnSites:
          type: array
          items:
            type: string
          description: List of resource-ids of the vpn-sites for which config is to be downloaded.
        outputBlobSasUrl:
          type: string
          description: The sas-url to download the configurations for vpn-sites.
      required:
        - outputBlobSasUrl
      description: List of Vpn-Sites.
      type: object
    VirtualHubProperties:
      properties:
        virtualWan:
          $ref: '#/components/schemas/SubResource'
          description: The VirtualWAN to which the VirtualHub belongs.
        vpnGateway:
          $ref: '#/components/schemas/SubResource'
          description: The VpnGateway associated with this VirtualHub.
        p2SVpnGateway:
          $ref: '#/components/schemas/SubResource'
          description: The P2SVpnGateway associated with this VirtualHub.
        expressRouteGateway:
          $ref: '#/components/schemas/SubResource'
          description: The expressRouteGateway associated with this VirtualHub.
        azureFirewall:
          $ref: '#/components/schemas/SubResource'
          description: The azureFirewall associated with this VirtualHub.
        securityPartnerProvider:
          $ref: '#/components/schemas/SubResource'
          description: The securityPartnerProvider associated with this VirtualHub.
        addressPrefix:
          type: string
          description: Address-prefix for this VirtualHub.
        routeTable:
          $ref: '#/components/schemas/VirtualHubRouteTable'
          description: The routeTable associated with this virtual hub.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the virtual hub resource.
        securityProviderName:
          type: string
          description: The Security Provider name.
        virtualHubRouteTableV2s:
          type: array
          description: List of all virtual hub route table v2s associated with this VirtualHub.
          items:
            $ref: '#/components/schemas/VirtualHubRouteTableV2'
        sku:
          type: string
          description: The sku of this VirtualHub.
        routingState:
          $ref: '#/components/schemas/RoutingState'
          description: The routing state.
        bgpConnections:
          type: array
          readOnly: true
          description: List of references to Bgp Connections.
          items:
            $ref: '#/components/schemas/SubResource'
        ipConfigurations:
          type: array
          readOnly: true
          description: List of references to IpConfigurations.
          items:
            $ref: '#/components/schemas/SubResource'
        virtualRouterAsn:
          type: integer
          readOnly: false
          format: int64
          minimum: 0
          maximum: 4294967295
          description: VirtualRouter ASN.
        virtualRouterIps:
          type: array
          readOnly: false
          description: VirtualRouter IPs.
          items:
            type: string
        allowBranchToBranchTraffic:
          type: boolean
          readOnly: false
          description: Flag to control transit for VirtualRouter hub.
        preferredRoutingGateway:
          $ref: '#/components/schemas/PreferredRoutingGateway'
          description: The preferred gateway to route on-prem traffic
        hubRoutingPreference:
          $ref: '#/components/schemas/HubRoutingPreference'
          description: The hubRoutingPreference of this VirtualHub.
        virtualRouterAutoScaleConfiguration:
          $ref: '#/components/schemas/VirtualRouterAutoScaleConfiguration'
          description: The VirtualHub Router autoscale configuration.
      description: Parameters for VirtualHub.
      type: object
    VirtualRouterAutoScaleConfiguration:
      type: object
      properties:
        minCapacity:
          type: integer
          format: int32
          minimum: 0
          description: The minimum number of scale units for VirtualHub Router.
      description: The VirtualHub Router autoscale configuration.
    PreferredRoutingGateway:
      type: string
      description: The preferred routing gateway types
      enum:
        - ExpressRoute
        - VpnGateway
        - None
      x-ms-enum:
        name: PreferredRoutingGateway
        modelAsString: true
    HubRoutingPreference:
      type: string
      description: The hub routing preference gateway types
      enum:
        - ExpressRoute
        - VpnGateway
        - ASPath
      x-ms-enum:
        name: HubRoutingPreference
        modelAsString: true
    RoutingState:
      type: string
      description: The current routing state of the VirtualHub.
      readOnly: true
      enum:
        - None
        - Provisioned
        - Provisioning
        - Failed
      x-ms-enum:
        name: RoutingState
        modelAsString: true
    BgpConnection:
      description: Virtual Appliance Site resource.
      properties:
        peerAsn:
          type: integer
          readOnly: false
          format: int64
          minimum: 0
          maximum: 4294967295
          description: Peer ASN.
        peerIp:
          type: string
          readOnly: false
          description: Peer IP.
        hubVirtualNetworkConnection:
          description: The reference to the HubVirtualNetworkConnection resource.
          readOnly: false
          $ref: '#/components/schemas/SubResource'
        provisioningState:
          description: The provisioning state of the resource.
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
        connectionState:
          type: string
          description: The current state of the VirtualHub to Peer.
          readOnly: true
          enum:
            - Unknown
            - Connecting
            - Connected
            - NotConnected
          x-ms-enum:
            name: HubBgpConnectionStatus
            modelAsString: true
        name:
          type: string
          description: Name of the connection.
        etag:
          type: string
          readOnly: true
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          type: string
          readOnly: true
          description: Connection type.
        id:
          type: string
          description: Resource ID.
      type: object
    BgpConnectionProperties:
      properties:
        peerAsn:
          type: integer
          readOnly: false
          format: int64
          minimum: 0
          maximum: 4294967295
          description: Peer ASN.
        peerIp:
          type: string
          readOnly: false
          description: Peer IP.
        hubVirtualNetworkConnection:
          description: The reference to the HubVirtualNetworkConnection resource.
          readOnly: false
          $ref: '#/components/schemas/SubResource'
        provisioningState:
          description: The provisioning state of the resource.
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
        connectionState:
          type: string
          description: The current state of the VirtualHub to Peer.
          readOnly: true
          enum:
            - Unknown
            - Connecting
            - Connected
            - NotConnected
          x-ms-enum:
            name: HubBgpConnectionStatus
            modelAsString: true
      description: Properties of the bgp connection.
      type: object
    PeerRoute:
      properties:
        localAddress:
          type: string
          readOnly: true
          description: The peer's local address.
        network:
          type: string
          readOnly: true
          description: The route's network prefix.
        nextHop:
          type: string
          readOnly: true
          description: The route's next hop.
        sourcePeer:
          type: string
          readOnly: true
          description: The peer this route was learned from.
        origin:
          type: string
          readOnly: true
          description: The source this route was learned from.
        asPath:
          type: string
          readOnly: true
          description: The route's AS path sequence.
        weight:
          type: integer
          format: int32
          readOnly: true
          description: The route's weight.
      description: Peer routing details.
      type: object
    PeerRouteList:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/PeerRoute'
          description: List of peer routes.
      description: List of virtual router peer routes.
      type: object
    HubIpConfiguration:
      description: IpConfigurations.
      properties:
        privateIPAddress:
          type: string
          description: The private IP address of the IP configuration.
        privateIPAllocationMethod:
          $ref: '#/components/schemas/IPAllocationMethod'
          description: The private IP address allocation method.
        subnet:
          $ref: '#/components/schemas/Subnet'
          description: The reference to the subnet resource.
        publicIPAddress:
          $ref: '#/components/schemas/PublicIPAddress'
          description: The reference to the public IP resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the IP configuration resource.
        name:
          type: string
          description: Name of the Ip Configuration.
        etag:
          type: string
          readOnly: true
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          type: string
          readOnly: true
          description: Ipconfiguration type.
        id:
          type: string
          description: Resource ID.
      type: object
    HubIPConfigurationPropertiesFormat:
      properties:
        privateIPAddress:
          type: string
          description: The private IP address of the IP configuration.
        privateIPAllocationMethod:
          $ref: '#/components/schemas/IPAllocationMethod'
          description: The private IP address allocation method.
        subnet:
          $ref: '#/components/schemas/Subnet'
          description: The reference to the subnet resource.
        publicIPAddress:
          $ref: '#/components/schemas/PublicIPAddress'
          description: The reference to the public IP resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the IP configuration resource.
      description: Properties of IP configuration.
      type: object
    VirtualHubRouteTable:
      properties:
        routes:
          type: array
          description: List of all routes.
          items:
            $ref: '#/components/schemas/VirtualHubRoute'
      description: VirtualHub route table.
      type: object
    VirtualHubRoute:
      properties:
        addressPrefixes:
          type: array
          description: List of all addressPrefixes.
          items:
            type: string
        nextHopIpAddress:
          type: string
          description: NextHop ip address.
      description: VirtualHub route.
      type: object
    VirtualHub:
      required:
        - location
      description: VirtualHub Resource.
      properties:
        virtualWan:
          $ref: '#/components/schemas/SubResource'
          description: The VirtualWAN to which the VirtualHub belongs.
        vpnGateway:
          $ref: '#/components/schemas/SubResource'
          description: The VpnGateway associated with this VirtualHub.
        p2SVpnGateway:
          $ref: '#/components/schemas/SubResource'
          description: The P2SVpnGateway associated with this VirtualHub.
        expressRouteGateway:
          $ref: '#/components/schemas/SubResource'
          description: The expressRouteGateway associated with this VirtualHub.
        azureFirewall:
          $ref: '#/components/schemas/SubResource'
          description: The azureFirewall associated with this VirtualHub.
        securityPartnerProvider:
          $ref: '#/components/schemas/SubResource'
          description: The securityPartnerProvider associated with this VirtualHub.
        addressPrefix:
          type: string
          description: Address-prefix for this VirtualHub.
        routeTable:
          $ref: '#/components/schemas/VirtualHubRouteTable'
          description: The routeTable associated with this virtual hub.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the virtual hub resource.
        securityProviderName:
          type: string
          description: The Security Provider name.
        virtualHubRouteTableV2s:
          type: array
          description: List of all virtual hub route table v2s associated with this VirtualHub.
          items:
            $ref: '#/components/schemas/VirtualHubRouteTableV2'
        sku:
          type: string
          description: The sku of this VirtualHub.
        routingState:
          $ref: '#/components/schemas/RoutingState'
          description: The routing state.
        bgpConnections:
          type: array
          readOnly: true
          description: List of references to Bgp Connections.
          items:
            $ref: '#/components/schemas/SubResource'
        ipConfigurations:
          type: array
          readOnly: true
          description: List of references to IpConfigurations.
          items:
            $ref: '#/components/schemas/SubResource'
        virtualRouterAsn:
          type: integer
          readOnly: false
          format: int64
          minimum: 0
          maximum: 4294967295
          description: VirtualRouter ASN.
        virtualRouterIps:
          type: array
          readOnly: false
          description: VirtualRouter IPs.
          items:
            type: string
        allowBranchToBranchTraffic:
          type: boolean
          readOnly: false
          description: Flag to control transit for VirtualRouter hub.
        preferredRoutingGateway:
          $ref: '#/components/schemas/PreferredRoutingGateway'
          description: The preferred gateway to route on-prem traffic
        hubRoutingPreference:
          $ref: '#/components/schemas/HubRoutingPreference'
          description: The hubRoutingPreference of this VirtualHub.
        virtualRouterAutoScaleConfiguration:
          $ref: '#/components/schemas/VirtualRouterAutoScaleConfiguration'
          description: The VirtualHub Router autoscale configuration.
        etag:
          type: string
          readOnly: true
          description: A unique read-only string that changes whenever the resource is updated.
        kind:
          readOnly: true
          type: string
          description: Kind of service virtual hub. This is metadata used for the Azure portal experience for Route Server.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    ListVirtualHubsResult:
      description: Result of the request to list VirtualHubs. It contains a list of VirtualHubs and a URL nextLink to get the next set of results.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VirtualHub'
          description: List of VirtualHubs.
        nextLink:
          type: string
          description: URL to get the next set of operation list results if there are any.
      type: object
    VpnGatewayProperties:
      properties:
        virtualHub:
          $ref: '#/components/schemas/SubResource'
          description: The VirtualHub to which the gateway belongs.
        connections:
          type: array
          description: List of all vpn connections to the gateway.
          items:
            $ref: '#/components/schemas/VpnConnection'
        bgpSettings:
          $ref: '#/components/schemas/BgpSettings'
          description: Local network gateway's BGP speaker settings.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the VPN gateway resource.
        vpnGatewayScaleUnit:
          type: integer
          format: int32
          description: The scale unit for this vpn gateway.
        ipConfigurations:
          type: array
          readOnly: true
          description: List of all IPs configured on the gateway.
          items:
            $ref: '#/components/schemas/VpnGatewayIpConfiguration'
        enableBgpRouteTranslationForNat:
          type: boolean
          description: Enable BGP routes translation for NAT on this VpnGateway.
        isRoutingPreferenceInternet:
          type: boolean
          description: Enable Routing Preference property for the Public IP Interface of the VpnGateway.
        natRules:
          type: array
          description: List of all the nat Rules associated with the gateway.
          items:
            $ref: '#/components/schemas/VpnGatewayNatRule'
      description: Parameters for VpnGateway.
      type: object
    VpnGateway:
      required:
        - location
      description: VpnGateway Resource.
      properties:
        virtualHub:
          $ref: '#/components/schemas/SubResource'
          description: The VirtualHub to which the gateway belongs.
        connections:
          type: array
          description: List of all vpn connections to the gateway.
          items:
            $ref: '#/components/schemas/VpnConnection'
        bgpSettings:
          $ref: '#/components/schemas/BgpSettings'
          description: Local network gateway's BGP speaker settings.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the VPN gateway resource.
        vpnGatewayScaleUnit:
          type: integer
          format: int32
          description: The scale unit for this vpn gateway.
        ipConfigurations:
          type: array
          readOnly: true
          description: List of all IPs configured on the gateway.
          items:
            $ref: '#/components/schemas/VpnGatewayIpConfiguration'
        enableBgpRouteTranslationForNat:
          type: boolean
          description: Enable BGP routes translation for NAT on this VpnGateway.
        isRoutingPreferenceInternet:
          type: boolean
          description: Enable Routing Preference property for the Public IP Interface of the VpnGateway.
        natRules:
          type: array
          description: List of all the nat Rules associated with the gateway.
          items:
            $ref: '#/components/schemas/VpnGatewayNatRule'
        etag:
          type: string
          readOnly: true
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    VpnGatewayIpConfiguration:
      description: IP Configuration of a VPN Gateway Resource.
      properties:
        id:
          type: string
          description: The identifier of the IP configuration for a VPN Gateway.
        publicIpAddress:
          type: string
          description: The public IP address of this IP configuration.
        privateIpAddress:
          type: string
          description: The private IP address of this IP configuration.
      type: object
    ListVpnGatewaysResult:
      description: Result of the request to list VpnGateways. It contains a list of VpnGateways and a URL nextLink to get the next set of results.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VpnGateway'
          description: List of VpnGateways.
        nextLink:
          type: string
          description: URL to get the next set of operation list results if there are any.
      type: object
    VpnNatRuleMapping:
      properties:
        addressSpace:
          type: string
          description: Address space for Vpn NatRule mapping.
        portRange:
          type: string
          description: Port range for Vpn NatRule mapping.
      description: Vpn NatRule mapping.
      type: object
    VpnGatewayNatRuleProperties:
      properties:
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the NAT Rule resource.
        type:
          type: string
          description: The type of NAT rule for VPN NAT.
          enum:
            - Static
            - Dynamic
          x-ms-enum:
            name: VpnNatRuleType
            modelAsString: true
        mode:
          type: string
          description: The Source NAT direction of a VPN NAT.
          enum:
            - EgressSnat
            - IngressSnat
          x-ms-enum:
            name: VpnNatRuleMode
            modelAsString: true
        internalMappings:
          type: array
          items:
            $ref: '#/components/schemas/VpnNatRuleMapping'
          description: The private IP address internal mapping for NAT.
        externalMappings:
          type: array
          items:
            $ref: '#/components/schemas/VpnNatRuleMapping'
          description: The private IP address external mapping for NAT.
        ipConfigurationId:
          type: string
          description: The IP Configuration ID this NAT rule applies to.
        egressVpnSiteLinkConnections:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/SubResource'
          description: List of egress VpnSiteLinkConnections.
        ingressVpnSiteLinkConnections:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/SubResource'
          description: List of ingress VpnSiteLinkConnections.
      description: Parameters for VpnGatewayNatRule.
      type: object
    VpnGatewayNatRule:
      description: VpnGatewayNatRule Resource.
      properties:
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the NAT Rule resource.
        type:
          readOnly: true
          type: string
          description: Resource type.
        mode:
          type: string
          description: The Source NAT direction of a VPN NAT.
          enum:
            - EgressSnat
            - IngressSnat
          x-ms-enum:
            name: VpnNatRuleMode
            modelAsString: true
        internalMappings:
          type: array
          items:
            $ref: '#/components/schemas/VpnNatRuleMapping'
          description: The private IP address internal mapping for NAT.
        externalMappings:
          type: array
          items:
            $ref: '#/components/schemas/VpnNatRuleMapping'
          description: The private IP address external mapping for NAT.
        ipConfigurationId:
          type: string
          description: The IP Configuration ID this NAT rule applies to.
        egressVpnSiteLinkConnections:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/SubResource'
          description: List of egress VpnSiteLinkConnections.
        ingressVpnSiteLinkConnections:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/SubResource'
          description: List of ingress VpnSiteLinkConnections.
        name:
          type: string
          description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
        etag:
          type: string
          readOnly: true
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
      type: object
    ListVpnGatewayNatRulesResult:
      description: Result of the request to list all nat rules to a virtual wan vpn gateway. It contains a list of Nat rules and a URL nextLink to get the next set of results.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VpnGatewayNatRule'
          description: List of Nat Rules.
        nextLink:
          type: string
          description: URL to get the next set of operation list results if there are any.
      type: object
    VpnConnectionProperties:
      properties:
        remoteVpnSite:
          $ref: '#/components/schemas/SubResource'
          description: Id of the connected vpn site.
        routingWeight:
          type: integer
          format: int32
          description: Routing weight for vpn connection.
        dpdTimeoutSeconds:
          type: integer
          format: int32
          description: DPD timeout in seconds for vpn connection.
        connectionStatus:
          description: The connection status.
          $ref: '#/components/schemas/VpnConnectionStatus'
        vpnConnectionProtocolType:
          description: Connection protocol used for this connection.
          $ref: '#/components/schemas/ConnectionProtocol'
        ingressBytesTransferred:
          type: integer
          format: int64
          readOnly: true
          description: Ingress bytes transferred.
        egressBytesTransferred:
          type: integer
          format: int64
          readOnly: true
          description: Egress bytes transferred.
        connectionBandwidth:
          type: integer
          format: int32
          description: Expected bandwidth in MBPS.
        sharedKey:
          type: string
          description: SharedKey for the vpn connection.
        enableBgp:
          type: boolean
          description: EnableBgp flag.
        usePolicyBasedTrafficSelectors:
          type: boolean
          description: Enable policy-based traffic selectors.
        ipsecPolicies:
          type: array
          items:
            $ref: '#/components/schemas/IpsecPolicy'
          description: The IPSec Policies to be considered by this connection.
        trafficSelectorPolicies:
          type: array
          items:
            $ref: '#/components/schemas/TrafficSelectorPolicy'
          description: The Traffic Selector Policies to be considered by this connection.
        enableRateLimiting:
          type: boolean
          description: EnableBgp flag.
        enableInternetSecurity:
          type: boolean
          description: Enable internet security.
        useLocalAzureIpAddress:
          type: boolean
          description: Use local azure ip to initiate connection.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the VPN connection resource.
        vpnLinkConnections:
          type: array
          description: List of all vpn site link connections to the gateway.
          items:
            $ref: '#/components/schemas/VpnSiteLinkConnection'
        routingConfiguration:
          $ref: '#/components/schemas/RoutingConfiguration'
          description: The Routing Configuration indicating the associated and propagated route tables on this connection.
      description: Parameters for VpnConnection.
      type: object
    VpnConnection:
      description: VpnConnection Resource.
      properties:
        remoteVpnSite:
          $ref: '#/components/schemas/SubResource'
          description: Id of the connected vpn site.
        routingWeight:
          type: integer
          format: int32
          description: Routing weight for vpn connection.
        dpdTimeoutSeconds:
          type: integer
          format: int32
          description: DPD timeout in seconds for vpn connection.
        connectionStatus:
          description: The connection status.
          $ref: '#/components/schemas/VpnConnectionStatus'
        vpnConnectionProtocolType:
          description: Connection protocol used for this connection.
          $ref: '#/components/schemas/ConnectionProtocol'
        ingressBytesTransferred:
          type: integer
          format: int64
          readOnly: true
          description: Ingress bytes transferred.
        egressBytesTransferred:
          type: integer
          format: int64
          readOnly: true
          description: Egress bytes transferred.
        connectionBandwidth:
          type: integer
          format: int32
          description: Expected bandwidth in MBPS.
        sharedKey:
          type: string
          description: SharedKey for the vpn connection.
        enableBgp:
          type: boolean
          description: EnableBgp flag.
        usePolicyBasedTrafficSelectors:
          type: boolean
          description: Enable policy-based traffic selectors.
        ipsecPolicies:
          type: array
          items:
            $ref: '#/components/schemas/IpsecPolicy'
          description: The IPSec Policies to be considered by this connection.
        trafficSelectorPolicies:
          type: array
          items:
            $ref: '#/components/schemas/TrafficSelectorPolicy'
          description: The Traffic Selector Policies to be considered by this connection.
        enableRateLimiting:
          type: boolean
          description: EnableBgp flag.
        enableInternetSecurity:
          type: boolean
          description: Enable internet security.
        useLocalAzureIpAddress:
          type: boolean
          description: Use local azure ip to initiate connection.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the VPN connection resource.
        vpnLinkConnections:
          type: array
          description: List of all vpn site link connections to the gateway.
          items:
            $ref: '#/components/schemas/VpnSiteLinkConnection'
        routingConfiguration:
          $ref: '#/components/schemas/RoutingConfiguration'
          description: The Routing Configuration indicating the associated and propagated route tables on this connection.
        name:
          type: string
          description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
        etag:
          type: string
          readOnly: true
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
      type: object
    ListVpnConnectionsResult:
      description: Result of the request to list all vpn connections to a virtual wan vpn gateway. It contains a list of Vpn Connections and a URL nextLink to get the next set of results.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VpnConnection'
          description: List of Vpn Connections.
        nextLink:
          type: string
          description: URL to get the next set of operation list results if there are any.
      type: object
    VpnConnectionPacketCaptureStartParameters:
      description: Vpn Connection packet capture parameters supplied to start packet capture on gateway connection.
      properties:
        filterData:
          type: string
          description: Start Packet capture parameters on vpn connection.
        linkConnectionNames:
          type: array
          description: List of site link connection names.
          items:
            type: string
      type: object
    VpnConnectionPacketCaptureStopParameters:
      description: Vpn Connection packet capture parameters supplied to stop packet capture on gateway connection.
      properties:
        sasUrl:
          type: string
          description: SAS url for packet capture on vpn connection.
        linkConnectionNames:
          type: array
          description: List of site link connection names.
          items:
            type: string
      type: object
    VpnGatewayPacketCaptureStartParameters:
      properties:
        filterData:
          type: string
          description: Start Packet capture parameters on vpn gateway.
      description: Start packet capture parameters.
      type: object
    VpnGatewayPacketCaptureStopParameters:
      properties:
        sasUrl:
          type: string
          description: SAS url for packet capture on vpn gateway.
      description: Stop packet capture parameters.
      type: object
    VpnSiteLinkConnectionProperties:
      properties:
        vpnSiteLink:
          $ref: '#/components/schemas/SubResource'
          description: Id of the connected vpn site link.
        routingWeight:
          type: integer
          format: int32
          description: Routing weight for vpn connection.
        vpnLinkConnectionMode:
          type: string
          description: Vpn link connection mode.
          enum:
            - Default
            - ResponderOnly
            - InitiatorOnly
          x-ms-enum:
            name: VpnLinkConnectionMode
            modelAsString: true
        connectionStatus:
          description: The connection status.
          $ref: '#/components/schemas/VpnConnectionStatus'
        vpnConnectionProtocolType:
          description: Connection protocol used for this connection.
          $ref: '#/components/schemas/ConnectionProtocol'
        ingressBytesTransferred:
          type: integer
          format: int64
          readOnly: true
          description: Ingress bytes transferred.
        egressBytesTransferred:
          type: integer
          format: int64
          readOnly: true
          description: Egress bytes transferred.
        connectionBandwidth:
          type: integer
          format: int32
          description: Expected bandwidth in MBPS.
        sharedKey:
          type: string
          description: SharedKey for the vpn connection.
        enableBgp:
          type: boolean
          description: EnableBgp flag.
        vpnGatewayCustomBgpAddresses:
          type: array
          items:
            $ref: '#/components/schemas/GatewayCustomBgpIpAddressIpConfiguration'
          description: vpnGatewayCustomBgpAddresses used by this connection.
          x-ms-identifiers: []
        usePolicyBasedTrafficSelectors:
          type: boolean
          description: Enable policy-based traffic selectors.
        ipsecPolicies:
          type: array
          items:
            $ref: '#/components/schemas/IpsecPolicy'
          description: The IPSec Policies to be considered by this connection.
        enableRateLimiting:
          type: boolean
          description: EnableBgp flag.
        useLocalAzureIpAddress:
          type: boolean
          description: Use local azure ip to initiate connection.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the VPN site link connection resource.
        ingressNatRules:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: List of ingress NatRules.
        egressNatRules:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: List of egress NatRules.
      description: Parameters for VpnConnection.
      type: object
    VpnSiteLinkConnection:
      description: VpnSiteLinkConnection Resource.
      properties:
        vpnSiteLink:
          $ref: '#/components/schemas/SubResource'
          description: Id of the connected vpn site link.
        routingWeight:
          type: integer
          format: int32
          description: Routing weight for vpn connection.
        vpnLinkConnectionMode:
          type: string
          description: Vpn link connection mode.
          enum:
            - Default
            - ResponderOnly
            - InitiatorOnly
          x-ms-enum:
            name: VpnLinkConnectionMode
            modelAsString: true
        connectionStatus:
          description: The connection status.
          $ref: '#/components/schemas/VpnConnectionStatus'
        vpnConnectionProtocolType:
          description: Connection protocol used for this connection.
          $ref: '#/components/schemas/ConnectionProtocol'
        ingressBytesTransferred:
          type: integer
          format: int64
          readOnly: true
          description: Ingress bytes transferred.
        egressBytesTransferred:
          type: integer
          format: int64
          readOnly: true
          description: Egress bytes transferred.
        connectionBandwidth:
          type: integer
          format: int32
          description: Expected bandwidth in MBPS.
        sharedKey:
          type: string
          description: SharedKey for the vpn connection.
        enableBgp:
          type: boolean
          description: EnableBgp flag.
        vpnGatewayCustomBgpAddresses:
          type: array
          items:
            $ref: '#/components/schemas/GatewayCustomBgpIpAddressIpConfiguration'
          description: vpnGatewayCustomBgpAddresses used by this connection.
          x-ms-identifiers: []
        usePolicyBasedTrafficSelectors:
          type: boolean
          description: Enable policy-based traffic selectors.
        ipsecPolicies:
          type: array
          items:
            $ref: '#/components/schemas/IpsecPolicy'
          description: The IPSec Policies to be considered by this connection.
        enableRateLimiting:
          type: boolean
          description: EnableBgp flag.
        useLocalAzureIpAddress:
          type: boolean
          description: Use local azure ip to initiate connection.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the VPN site link connection resource.
        ingressNatRules:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: List of ingress NatRules.
        egressNatRules:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: List of egress NatRules.
        name:
          type: string
          description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
        etag:
          type: string
          readOnly: true
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          readOnly: true
          type: string
          description: Resource type.
        id:
          type: string
          description: Resource ID.
      type: object
    ListVpnSiteLinkConnectionsResult:
      description: Result of the request to list all vpn connections to a virtual wan vpn gateway. It contains a list of Vpn Connections and a URL nextLink to get the next set of results.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VpnSiteLinkConnection'
          description: List of VpnSiteLinkConnections.
        nextLink:
          type: string
          description: URL to get the next set of operation list results if there are any.
      type: object
    HubVirtualNetworkConnectionProperties:
      properties:
        remoteVirtualNetwork:
          $ref: '#/components/schemas/SubResource'
          description: Reference to the remote virtual network.
        allowHubToRemoteVnetTransit:
          type: boolean
          description: 'Deprecated: VirtualHub to RemoteVnet transit to enabled or not.'
        allowRemoteVnetToUseHubVnetGateways:
          type: boolean
          description: 'Deprecated: Allow RemoteVnet to use Virtual Hub''s gateways.'
        enableInternetSecurity:
          type: boolean
          description: Enable internet security.
        routingConfiguration:
          $ref: '#/components/schemas/RoutingConfiguration'
          description: The Routing Configuration indicating the associated and propagated route tables on this connection.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the hub virtual network connection resource.
      description: Parameters for HubVirtualNetworkConnection.
      type: object
    HubVirtualNetworkConnection:
      description: HubVirtualNetworkConnection Resource.
      properties:
        remoteVirtualNetwork:
          $ref: '#/components/schemas/SubResource'
          description: Reference to the remote virtual network.
        allowHubToRemoteVnetTransit:
          type: boolean
          description: 'Deprecated: VirtualHub to RemoteVnet transit to enabled or not.'
        allowRemoteVnetToUseHubVnetGateways:
          type: boolean
          description: 'Deprecated: Allow RemoteVnet to use Virtual Hub''s gateways.'
        enableInternetSecurity:
          type: boolean
          description: Enable internet security.
        routingConfiguration:
          $ref: '#/components/schemas/RoutingConfiguration'
          description: The Routing Configuration indicating the associated and propagated route tables on this connection.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the hub virtual network connection resource.
        name:
          type: string
          description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
        etag:
          type: string
          readOnly: true
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
      type: object
    ListHubVirtualNetworkConnectionsResult:
      description: List of HubVirtualNetworkConnections and a URL nextLink to get the next set of results.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/HubVirtualNetworkConnection'
          description: List of HubVirtualNetworkConnections.
        nextLink:
          type: string
          description: URL to get the next set of operation list results if there are any.
      type: object
    HubRouteTableProperties:
      properties:
        routes:
          type: array
          description: List of all routes.
          items:
            $ref: '#/components/schemas/HubRoute'
        labels:
          type: array
          description: List of labels associated with this route table.
          items:
            type: string
        associatedConnections:
          type: array
          description: List of all connections associated with this route table.
          readOnly: true
          items:
            type: string
        propagatingConnections:
          type: array
          description: List of all connections that advertise to this route table.
          readOnly: true
          items:
            type: string
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
          description: The provisioning state of the RouteTable resource.
      description: Parameters for RouteTable.
      type: object
    HubRouteTable:
      description: RouteTable resource in a virtual hub.
      properties:
        routes:
          type: array
          description: List of all routes.
          items:
            $ref: '#/components/schemas/HubRoute'
        labels:
          type: array
          description: List of labels associated with this route table.
          items:
            type: string
        associatedConnections:
          type: array
          description: List of all connections associated with this route table.
          readOnly: true
          items:
            type: string
        propagatingConnections:
          type: array
          description: List of all connections that advertise to this route table.
          readOnly: true
          items:
            type: string
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
          description: The provisioning state of the RouteTable resource.
        name:
          type: string
          description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
        etag:
          type: string
          readOnly: true
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          readOnly: true
          type: string
          description: Resource type.
        id:
          type: string
          description: Resource ID.
      type: object
    HubRoute:
      required:
        - name
        - destinationType
        - destinations
        - nextHopType
        - nextHop
      properties:
        name:
          type: string
          description: The name of the Route that is unique within a RouteTable. This name can be used to access this route.
        destinationType:
          type: string
          description: 'The type of destinations (eg: CIDR, ResourceId, Service).'
        destinations:
          type: array
          description: List of all destinations.
          items:
            type: string
        nextHopType:
          type: string
          description: 'The type of next hop (eg: ResourceId).'
        nextHop:
          type: string
          description: NextHop resource ID.
      description: RouteTable route.
      type: object
    ListHubRouteTablesResult:
      description: List of RouteTables and a URL nextLink to get the next set of results.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/HubRouteTable'
          description: List of RouteTables.
        nextLink:
          type: string
          description: URL to get the next set of operation list results if there are any.
      type: object
    VpnSiteId:
      properties:
        vpnSite:
          type: string
          readOnly: true
          description: The resource-uri of the vpn-site for which config is to be fetched.
      description: VpnSite Resource.
      type: object
    DeviceProperties:
      properties:
        deviceVendor:
          type: string
          description: Name of the device Vendor.
        deviceModel:
          type: string
          description: Model of the device.
        linkSpeedInMbps:
          type: integer
          format: int32
          description: Link speed.
      description: List of properties of the device.
      type: object
    VirtualWanSecurityProviders:
      properties:
        supportedProviders:
          type: array
          items:
            $ref: '#/components/schemas/VirtualWanSecurityProvider'
          description: List of VirtualWAN security providers.
      description: Collection of SecurityProviders.
      type: object
    VirtualWanSecurityProvider:
      properties:
        name:
          type: string
          description: Name of the security provider.
        url:
          type: string
          description: Url of the security provider.
        type:
          $ref: '#/components/schemas/VirtualWanSecurityProviderType'
          description: Name of the security provider.
      description: Collection of SecurityProviders.
      type: object
    VpnConnectionStatus:
      type: string
      description: The current state of the vpn connection.
      readOnly: true
      enum:
        - Unknown
        - Connecting
        - Connected
        - NotConnected
      x-ms-enum:
        name: VpnConnectionStatus
        modelAsString: true
    TunnelConnectionStatus:
      type: string
      description: The current state of the tunnel.
      readOnly: true
      enum:
        - Unknown
        - Connecting
        - Connected
        - NotConnected
      x-ms-enum:
        name: TunnelConnectionStatus
        modelAsString: true
    HubVirtualNetworkConnectionStatus:
      type: string
      description: The current state of the VirtualHub to vnet connection.
      readOnly: true
      enum:
        - Unknown
        - Connecting
        - Connected
        - NotConnected
      x-ms-enum:
        name: HubVirtualNetworkConnectionStatus
        modelAsString: true
    OfficeTrafficCategory:
      type: string
      description: The office traffic category.
      readOnly: true
      enum:
        - Optimize
        - OptimizeAndAllow
        - All
        - None
      x-ms-enum:
        name: OfficeTrafficCategory
        modelAsString: true
    VirtualWanSecurityProviderType:
      type: string
      description: The virtual wan security provider type.
      readOnly: true
      enum:
        - External
        - Native
      x-ms-enum:
        name: VirtualWanSecurityProviderType
        modelAsString: true
    VpnServerConfigVpnClientRootCertificate:
      properties:
        name:
          type: string
          description: The certificate name.
        publicCertData:
          type: string
          description: The certificate public data.
      description: Properties of VPN client root certificate of VpnServerConfiguration.
      type: object
    VpnServerConfigRadiusServerRootCertificate:
      properties:
        name:
          type: string
          description: The certificate name.
        publicCertData:
          type: string
          description: The certificate public data.
      description: Properties of Radius Server root certificate of VpnServerConfiguration.
      type: object
    VpnServerConfigVpnClientRevokedCertificate:
      properties:
        name:
          type: string
          description: The certificate name.
        thumbprint:
          type: string
          description: The revoked VPN client certificate thumbprint.
      description: Properties of the revoked VPN client certificate of VpnServerConfiguration.
      type: object
    VpnServerConfigRadiusClientRootCertificate:
      properties:
        name:
          type: string
          description: The certificate name.
        thumbprint:
          type: string
          description: The Radius client root certificate thumbprint.
      description: Properties of the Radius client root certificate of VpnServerConfiguration.
      type: object
    AadAuthenticationParameters:
      properties:
        aadTenant:
          type: string
          description: AAD Vpn authentication parameter AAD tenant.
        aadAudience:
          type: string
          description: AAD Vpn authentication parameter AAD audience.
        aadIssuer:
          type: string
          description: AAD Vpn authentication parameter AAD issuer.
      description: AAD Vpn authentication type related parameters.
      type: object
    VpnServerConfigurationProperties:
      properties:
        name:
          type: string
          description: The name of the VpnServerConfiguration that is unique within a resource group.
        vpnProtocols:
          type: array
          items:
            type: string
            description: VPN protocol enabled for the VpnServerConfiguration.
            enum:
              - IkeV2
              - OpenVPN
            x-ms-enum:
              name: VpnGatewayTunnelingProtocol
              modelAsString: true
          description: VPN protocols for the VpnServerConfiguration.
        vpnAuthenticationTypes:
          type: array
          items:
            type: string
            description: VPN authentication types enabled for the VpnServerConfiguration.
            enum:
              - Certificate
              - Radius
              - AAD
            x-ms-enum:
              name: VpnAuthenticationType
              modelAsString: true
          description: VPN authentication types for the VpnServerConfiguration.
        vpnClientRootCertificates:
          type: array
          items:
            $ref: '#/components/schemas/VpnServerConfigVpnClientRootCertificate'
          description: VPN client root certificate of VpnServerConfiguration.
        vpnClientRevokedCertificates:
          type: array
          items:
            $ref: '#/components/schemas/VpnServerConfigVpnClientRevokedCertificate'
          description: VPN client revoked certificate of VpnServerConfiguration.
        radiusServerRootCertificates:
          type: array
          items:
            $ref: '#/components/schemas/VpnServerConfigRadiusServerRootCertificate'
          description: Radius Server root certificate of VpnServerConfiguration.
        radiusClientRootCertificates:
          type: array
          items:
            $ref: '#/components/schemas/VpnServerConfigRadiusClientRootCertificate'
          description: Radius client root certificate of VpnServerConfiguration.
        vpnClientIpsecPolicies:
          type: array
          items:
            $ref: '#/components/schemas/IpsecPolicy'
          description: VpnClientIpsecPolicies for VpnServerConfiguration.
        radiusServerAddress:
          type: string
          description: The radius server address property of the VpnServerConfiguration resource for point to site client connection.
        radiusServerSecret:
          type: string
          description: The radius secret property of the VpnServerConfiguration resource for point to site client connection.
        radiusServers:
          type: array
          items:
            $ref: '#/components/schemas/RadiusServer'
          description: Multiple Radius Server configuration for VpnServerConfiguration.
        aadAuthenticationParameters:
          $ref: '#/components/schemas/AadAuthenticationParameters'
          description: The set of aad vpn authentication parameters.
        provisioningState:
          readOnly: true
          type: string
          description: 'The provisioning state of the VpnServerConfiguration resource. Possible values are: ''Updating'', ''Deleting'', and ''Failed''.'
        p2SVpnGateways:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/P2SVpnGateway'
          description: List of references to P2SVpnGateways.
        configurationPolicyGroups:
          type: array
          description: List of all VpnServerConfigurationPolicyGroups.
          items:
            $ref: '#/components/schemas/VpnServerConfigurationPolicyGroup'
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
      description: Parameters for VpnServerConfiguration.
      type: object
    VpnServerConfiguration:
      description: VpnServerConfiguration Resource.
      properties:
        name:
          readOnly: true
          type: string
          description: Resource name.
        vpnProtocols:
          type: array
          items:
            type: string
            description: VPN protocol enabled for the VpnServerConfiguration.
            enum:
              - IkeV2
              - OpenVPN
            x-ms-enum:
              name: VpnGatewayTunnelingProtocol
              modelAsString: true
          description: VPN protocols for the VpnServerConfiguration.
        vpnAuthenticationTypes:
          type: array
          items:
            type: string
            description: VPN authentication types enabled for the VpnServerConfiguration.
            enum:
              - Certificate
              - Radius
              - AAD
            x-ms-enum:
              name: VpnAuthenticationType
              modelAsString: true
          description: VPN authentication types for the VpnServerConfiguration.
        vpnClientRootCertificates:
          type: array
          items:
            $ref: '#/components/schemas/VpnServerConfigVpnClientRootCertificate'
          description: VPN client root certificate of VpnServerConfiguration.
        vpnClientRevokedCertificates:
          type: array
          items:
            $ref: '#/components/schemas/VpnServerConfigVpnClientRevokedCertificate'
          description: VPN client revoked certificate of VpnServerConfiguration.
        radiusServerRootCertificates:
          type: array
          items:
            $ref: '#/components/schemas/VpnServerConfigRadiusServerRootCertificate'
          description: Radius Server root certificate of VpnServerConfiguration.
        radiusClientRootCertificates:
          type: array
          items:
            $ref: '#/components/schemas/VpnServerConfigRadiusClientRootCertificate'
          description: Radius client root certificate of VpnServerConfiguration.
        vpnClientIpsecPolicies:
          type: array
          items:
            $ref: '#/components/schemas/IpsecPolicy'
          description: VpnClientIpsecPolicies for VpnServerConfiguration.
        radiusServerAddress:
          type: string
          description: The radius server address property of the VpnServerConfiguration resource for point to site client connection.
        radiusServerSecret:
          type: string
          description: The radius secret property of the VpnServerConfiguration resource for point to site client connection.
        radiusServers:
          type: array
          items:
            $ref: '#/components/schemas/RadiusServer'
          description: Multiple Radius Server configuration for VpnServerConfiguration.
        aadAuthenticationParameters:
          $ref: '#/components/schemas/AadAuthenticationParameters'
          description: The set of aad vpn authentication parameters.
        provisioningState:
          readOnly: true
          type: string
          description: 'The provisioning state of the VpnServerConfiguration resource. Possible values are: ''Updating'', ''Deleting'', and ''Failed''.'
        p2SVpnGateways:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/P2SVpnGateway'
          description: List of references to P2SVpnGateways.
        configurationPolicyGroups:
          type: array
          description: List of all VpnServerConfigurationPolicyGroups.
          items:
            $ref: '#/components/schemas/VpnServerConfigurationPolicyGroup'
        etag:
          type: string
          readOnly: true
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    ListVpnServerConfigurationsResult:
      description: Result of the request to list all VpnServerConfigurations. It contains a list of VpnServerConfigurations and a URL nextLink to get the next set of results.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VpnServerConfiguration'
          description: List of VpnServerConfigurations.
        nextLink:
          type: string
          description: URL to get the next set of operation list results if there are any.
      type: object
    VpnClientConnectionHealth:
      properties:
        totalIngressBytesTransferred:
          readOnly: true
          type: integer
          format: int64
          description: Total of the Ingress Bytes Transferred in this P2S Vpn connection.
        totalEgressBytesTransferred:
          readOnly: true
          type: integer
          format: int64
          description: Total of the Egress Bytes Transferred in this connection.
        vpnClientConnectionsCount:
          type: integer
          format: int32
          description: The total of p2s vpn clients connected at this time to this P2SVpnGateway.
        allocatedIpAddresses:
          type: array
          items:
            type: string
          description: List of allocated ip addresses to the connected p2s vpn clients.
      description: VpnClientConnectionHealth properties.
      type: object
    VpnServerConfigurationPolicyGroupProperties:
      type: object
      properties:
        isDefault:
          type: boolean
          description: Shows if this is a Default VpnServerConfigurationPolicyGroup or not.
        priority:
          type: integer
          format: int32
          description: Priority for VpnServerConfigurationPolicyGroup.
        policyMembers:
          type: array
          items:
            $ref: '#/components/schemas/VpnServerConfigurationPolicyGroupMember'
          description: Multiple PolicyMembers for VpnServerConfigurationPolicyGroup.
          x-ms-identifiers: []
        p2SConnectionConfigurations:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/SubResource'
          description: List of references to P2SConnectionConfigurations.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the VpnServerConfigurationPolicyGroup resource.
      description: Parameters for VpnServerConfigurationPolicyGroup.
    VpnServerConfigurationPolicyGroup:
      description: VpnServerConfigurationPolicyGroup Resource.
      properties:
        isDefault:
          type: boolean
          description: Shows if this is a Default VpnServerConfigurationPolicyGroup or not.
        priority:
          type: integer
          format: int32
          description: Priority for VpnServerConfigurationPolicyGroup.
        policyMembers:
          type: array
          items:
            $ref: '#/components/schemas/VpnServerConfigurationPolicyGroupMember'
          description: Multiple PolicyMembers for VpnServerConfigurationPolicyGroup.
          x-ms-identifiers: []
        p2SConnectionConfigurations:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/SubResource'
          description: List of references to P2SConnectionConfigurations.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the VpnServerConfigurationPolicyGroup resource.
        etag:
          type: string
          readOnly: true
          description: A unique read-only string that changes whenever the resource is updated.
        name:
          type: string
          description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
        type:
          readOnly: true
          type: string
          description: Resource type.
        id:
          type: string
          description: Resource ID.
      type: object
    VpnServerConfigurationPolicyGroupMember:
      properties:
        name:
          type: string
          description: Name of the VpnServerConfigurationPolicyGroupMember.
        attributeType:
          type: string
          description: The Vpn Policy member attribute type.
          enum:
            - CertificateGroupId
            - AADGroupId
            - RadiusAzureGroupId
          x-ms-enum:
            name: VpnPolicyMemberAttributeType
            modelAsString: true
        attributeValue:
          type: string
          description: The value of Attribute used for this VpnServerConfigurationPolicyGroupMember.
      description: VpnServerConfiguration PolicyGroup member
      type: object
    ListVpnServerConfigurationPolicyGroupsResult:
      type: object
      description: Result of the request to list VpnServerConfigurationPolicyGroups. It contains a list of VpnServerConfigurationPolicyGroups and a URL nextLink to get the next set of results.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VpnServerConfigurationPolicyGroup'
          description: List of VpnServerConfigurationPolicyGroups.
        nextLink:
          type: string
          description: URL to get the next set of operation list results if there are any.
    P2SVpnGatewayProperties:
      properties:
        virtualHub:
          $ref: '#/components/schemas/SubResource'
          description: The VirtualHub to which the gateway belongs.
        p2SConnectionConfigurations:
          type: array
          description: List of all p2s connection configurations of the gateway.
          items:
            $ref: '#/components/schemas/P2SConnectionConfiguration'
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the P2S VPN gateway resource.
        vpnGatewayScaleUnit:
          type: integer
          format: int32
          description: The scale unit for this p2s vpn gateway.
        vpnServerConfiguration:
          $ref: '#/components/schemas/SubResource'
          description: The VpnServerConfiguration to which the p2sVpnGateway is attached to.
        vpnClientConnectionHealth:
          readOnly: true
          $ref: '#/components/schemas/VpnClientConnectionHealth'
          description: All P2S VPN clients' connection health status.
        customDnsServers:
          type: array
          description: List of all customer specified DNS servers IP addresses.
          items:
            type: string
        isRoutingPreferenceInternet:
          type: boolean
          description: Enable Routing Preference property for the Public IP Interface of the P2SVpnGateway.
      description: Parameters for P2SVpnGateway.
      type: object
    P2SVpnGateway:
      required:
        - location
      description: P2SVpnGateway Resource.
      properties:
        virtualHub:
          $ref: '#/components/schemas/SubResource'
          description: The VirtualHub to which the gateway belongs.
        p2SConnectionConfigurations:
          type: array
          description: List of all p2s connection configurations of the gateway.
          items:
            $ref: '#/components/schemas/P2SConnectionConfiguration'
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the P2S VPN gateway resource.
        vpnGatewayScaleUnit:
          type: integer
          format: int32
          description: The scale unit for this p2s vpn gateway.
        vpnServerConfiguration:
          $ref: '#/components/schemas/SubResource'
          description: The VpnServerConfiguration to which the p2sVpnGateway is attached to.
        vpnClientConnectionHealth:
          readOnly: true
          $ref: '#/components/schemas/VpnClientConnectionHealth'
          description: All P2S VPN clients' connection health status.
        customDnsServers:
          type: array
          description: List of all customer specified DNS servers IP addresses.
          items:
            type: string
        isRoutingPreferenceInternet:
          type: boolean
          description: Enable Routing Preference property for the Public IP Interface of the P2SVpnGateway.
        etag:
          type: string
          readOnly: true
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    ListP2SVpnGatewaysResult:
      description: Result of the request to list P2SVpnGateways. It contains a list of P2SVpnGateways and a URL nextLink to get the next set of results.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/P2SVpnGateway'
          description: List of P2SVpnGateways.
        nextLink:
          type: string
          description: URL to get the next set of operation list results if there are any.
      type: object
    P2SVpnProfileParameters:
      properties:
        authenticationMethod:
          $ref: '#/components/schemas/AuthenticationMethod'
          description: VPN client authentication method.
      description: Vpn Client Parameters for package generation.
      type: object
    VpnProfileResponse:
      properties:
        profileUrl:
          type: string
          description: URL to the VPN profile.
      description: Vpn Profile Response for package generation.
      type: object
    VpnLinkBgpSettings:
      properties:
        asn:
          type: integer
          format: int64
          description: The BGP speaker's ASN.
        bgpPeeringAddress:
          type: string
          description: The BGP peering address and BGP identifier of this BGP speaker.
      description: BGP settings details for a link.
      type: object
    VpnLinkProviderProperties:
      properties:
        linkProviderName:
          type: string
          description: Name of the link provider.
        linkSpeedInMbps:
          type: integer
          format: int32
          description: Link speed.
      description: List of properties of a link provider.
      type: object
    VpnServerConfigurationsResponse:
      properties:
        vpnServerConfigurationResourceIds:
          type: array
          items:
            type: string
            description: VpnServerConfiguration partial resource uri.
          description: List of VpnServerConfigurations associated with VirtualWan.
      description: VpnServerConfigurations list associated with VirtualWan Response.
      type: object
    VirtualWanVpnProfileParameters:
      properties:
        vpnServerConfigurationResourceId:
          type: string
          description: VpnServerConfiguration partial resource uri with which VirtualWan is associated to.
        authenticationMethod:
          $ref: '#/components/schemas/AuthenticationMethod'
          description: VPN client authentication method.
      description: Virtual Wan Vpn profile parameters Vpn profile generation.
      type: object
    P2SVpnConnectionHealthRequest:
      properties:
        vpnUserNamesFilter:
          type: array
          items:
            type: string
            description: P2S vpn user name.
          description: The list of p2s vpn user names whose p2s vpn connection detailed health to retrieve for.
        outputBlobSasUrl:
          type: string
          description: The sas-url to download the P2S Vpn connection health detail.
      description: List of P2S Vpn connection health request.
      type: object
    P2SVpnConnectionHealth:
      properties:
        sasUrl:
          type: string
          description: Returned sas url of the blob to which the p2s vpn connection detailed health will be written.
      description: P2S Vpn connection detailed health written to sas url.
      type: object
    P2SConnectionConfigurationProperties:
      properties:
        vpnClientAddressPool:
          $ref: '#/components/schemas/AddressSpace'
          description: The reference to the address space resource which represents Address space for P2S VpnClient.
        routingConfiguration:
          $ref: '#/components/schemas/RoutingConfiguration'
          description: The Routing Configuration indicating the associated and propagated route tables on this connection.
        enableInternetSecurity:
          type: boolean
          description: Flag indicating whether the enable internet security flag is turned on for the P2S Connections or not.
        configurationPolicyGroupAssociations:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/SubResource'
          description: List of Configuration Policy Groups that this P2SConnectionConfiguration is attached to.
        previousConfigurationPolicyGroupAssociations:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/VpnServerConfigurationPolicyGroup'
          description: List of previous Configuration Policy Groups that this P2SConnectionConfiguration was attached to.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the P2SConnectionConfiguration resource.
      description: Parameters for P2SConnectionConfiguration.
      type: object
    P2SConnectionConfiguration:
      description: P2SConnectionConfiguration Resource.
      properties:
        vpnClientAddressPool:
          $ref: '#/components/schemas/AddressSpace'
          description: The reference to the address space resource which represents Address space for P2S VpnClient.
        routingConfiguration:
          $ref: '#/components/schemas/RoutingConfiguration'
          description: The Routing Configuration indicating the associated and propagated route tables on this connection.
        enableInternetSecurity:
          type: boolean
          description: Flag indicating whether the enable internet security flag is turned on for the P2S Connections or not.
        configurationPolicyGroupAssociations:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/SubResource'
          description: List of Configuration Policy Groups that this P2SConnectionConfiguration is attached to.
        previousConfigurationPolicyGroupAssociations:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/VpnServerConfigurationPolicyGroup'
          description: List of previous Configuration Policy Groups that this P2SConnectionConfiguration was attached to.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the P2SConnectionConfiguration resource.
        name:
          type: string
          description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
        etag:
          type: string
          readOnly: true
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
      type: object
    VirtualHubRouteTableV2Properties:
      properties:
        routes:
          type: array
          description: List of all routes.
          items:
            $ref: '#/components/schemas/VirtualHubRouteV2'
        attachedConnections:
          type: array
          description: List of all connections attached to this route table v2.
          items:
            type: string
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
          description: The provisioning state of the virtual hub route table v2 resource.
      description: Parameters for VirtualHubRouteTableV2.
      type: object
    VirtualHubRouteTableV2:
      description: VirtualHubRouteTableV2 Resource.
      properties:
        routes:
          type: array
          description: List of all routes.
          items:
            $ref: '#/components/schemas/VirtualHubRouteV2'
        attachedConnections:
          type: array
          description: List of all connections attached to this route table v2.
          items:
            type: string
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
          description: The provisioning state of the virtual hub route table v2 resource.
        name:
          type: string
          description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
        etag:
          type: string
          readOnly: true
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
      type: object
    VirtualHubRouteV2:
      properties:
        destinationType:
          type: string
          description: The type of destinations.
        destinations:
          type: array
          description: List of all destinations.
          items:
            type: string
        nextHopType:
          type: string
          description: The type of next hops.
        nextHops:
          type: array
          description: NextHops ip address.
          items:
            type: string
      description: VirtualHubRouteTableV2 route.
      type: object
    ListVirtualHubRouteTableV2sResult:
      description: List of VirtualHubRouteTableV2s and a URL nextLink to get the next set of results.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VirtualHubRouteTableV2'
          description: List of VirtualHubRouteTableV2s.
        nextLink:
          type: string
          description: URL to get the next set of operation list results if there are any.
      type: object
    P2SVpnConnectionRequest:
      description: List of p2s vpn connections to be disconnected.
      properties:
        vpnConnectionIds:
          type: array
          items:
            type: string
          description: List of p2s vpn connection Ids.
      type: object
    VirtualHubId:
      properties:
        id:
          type: string
          description: The resource URI for the Virtual Hub where the ExpressRoute gateway is or will be deployed. The Virtual Hub resource and the ExpressRoute gateway resource reside in the same subscription.
      description: Virtual Hub identifier.
      type: object
    ExpressRouteCircuitPeeringId:
      properties:
        id:
          type: string
          description: The ID of the ExpressRoute circuit peering.
      description: ExpressRoute circuit peering identifier.
      type: object
    ExpressRouteConnectionId:
      properties:
        id:
          type: string
          readOnly: true
          description: The ID of the ExpressRouteConnection.
      description: The ID of the ExpressRouteConnection.
      type: object
    ExpressRouteGatewayProperties:
      required:
        - virtualHub
      properties:
        autoScaleConfiguration:
          properties:
            bounds:
              properties:
                min:
                  type: integer
                  description: Minimum number of scale units deployed for ExpressRoute gateway.
                max:
                  type: integer
                  description: Maximum number of scale units deployed for ExpressRoute gateway.
              description: Minimum and maximum number of scale units to deploy.
          description: Configuration for auto scaling.
        expressRouteConnections:
          type: array
          description: List of ExpressRoute connections to the ExpressRoute gateway.
          items:
            $ref: '#/components/schemas/ExpressRouteConnection'
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the express route gateway resource.
        virtualHub:
          $ref: '#/components/schemas/VirtualHubId'
          description: The Virtual Hub where the ExpressRoute gateway is or will be deployed.
      description: ExpressRoute gateway resource properties.
      type: object
    ExpressRouteGateway:
      description: ExpressRoute gateway resource.
      properties:
        autoScaleConfiguration:
          properties:
            bounds:
              properties:
                min:
                  type: integer
                  description: Minimum number of scale units deployed for ExpressRoute gateway.
                max:
                  type: integer
                  description: Maximum number of scale units deployed for ExpressRoute gateway.
              description: Minimum and maximum number of scale units to deploy.
          description: Configuration for auto scaling.
        expressRouteConnections:
          type: array
          description: List of ExpressRoute connections to the ExpressRoute gateway.
          items:
            $ref: '#/components/schemas/ExpressRouteConnection'
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the express route gateway resource.
        virtualHub:
          $ref: '#/components/schemas/VirtualHubId'
          description: The Virtual Hub where the ExpressRoute gateway is or will be deployed.
        etag:
          type: string
          readOnly: true
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    ExpressRouteGatewayList:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ExpressRouteGateway'
          description: List of ExpressRoute gateways.
      description: List of ExpressRoute gateways.
      type: object
    ExpressRouteConnectionProperties:
      required:
        - expressRouteCircuitPeering
      properties:
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the express route connection resource.
        expressRouteCircuitPeering:
          $ref: '#/components/schemas/ExpressRouteCircuitPeeringId'
          description: The ExpressRoute circuit peering.
        authorizationKey:
          type: string
          description: Authorization key to establish the connection.
        routingWeight:
          type: integer
          description: The routing weight associated to the connection.
        enableInternetSecurity:
          type: boolean
          description: Enable internet security.
        expressRouteGatewayBypass:
          type: boolean
          description: Enable FastPath to vWan Firewall hub.
        routingConfiguration:
          $ref: '#/components/schemas/RoutingConfiguration'
          description: The Routing Configuration indicating the associated and propagated route tables on this connection.
      description: Properties of the ExpressRouteConnection subresource.
      type: object
    ExpressRouteConnection:
      required:
        - name
      description: ExpressRouteConnection resource.
      properties:
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the express route connection resource.
        expressRouteCircuitPeering:
          $ref: '#/components/schemas/ExpressRouteCircuitPeeringId'
          description: The ExpressRoute circuit peering.
        authorizationKey:
          type: string
          description: Authorization key to establish the connection.
        routingWeight:
          type: integer
          description: The routing weight associated to the connection.
        enableInternetSecurity:
          type: boolean
          description: Enable internet security.
        expressRouteGatewayBypass:
          type: boolean
          description: Enable FastPath to vWan Firewall hub.
        routingConfiguration:
          $ref: '#/components/schemas/RoutingConfiguration'
          description: The Routing Configuration indicating the associated and propagated route tables on this connection.
        name:
          type: string
          description: The name of the resource.
        id:
          type: string
          description: Resource ID.
      type: object
    ExpressRouteConnectionList:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ExpressRouteConnection'
          description: The list of ExpressRoute connections.
      description: ExpressRouteConnection list.
      type: object
    ListVirtualHubBgpConnectionResults:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/BgpConnection'
          description: The list of VirtualHubBgpConnections.
        nextLink:
          type: string
          description: URL to get the next set of results.
      description: VirtualHubBgpConnections list.
      type: object
    ListVirtualHubIpConfigurationResults:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/HubIpConfiguration'
          description: The list of VirtualHubIpConfigurations.
        nextLink:
          type: string
          description: URL to get the next set of results.
      description: VirtualHubIpConfigurations list.
      type: object
    RoutingConfiguration:
      description: Routing Configuration indicating the associated and propagated route tables for this connection.
      properties:
        associatedRouteTable:
          $ref: '#/components/schemas/SubResource'
          description: The resource id RouteTable associated with this RoutingConfiguration.
        propagatedRouteTables:
          $ref: '#/components/schemas/PropagatedRouteTable'
          description: The list of RouteTables to advertise the routes to.
        vnetRoutes:
          $ref: '#/components/schemas/VnetRoute'
          description: List of routes that control routing from VirtualHub into a virtual network connection.
      type: object
    PropagatedRouteTable:
      description: The list of RouteTables to advertise the routes to.
      properties:
        labels:
          type: array
          description: The list of labels.
          items:
            type: string
        ids:
          type: array
          description: The list of resource ids of all the RouteTables.
          items:
            $ref: '#/components/schemas/SubResource'
      type: object
    VnetRoute:
      description: List of routes that control routing from VirtualHub into a virtual network connection.
      properties:
        staticRoutes:
          type: array
          description: List of all Static Routes.
          items:
            $ref: '#/components/schemas/StaticRoute'
        bgpConnections:
          type: array
          readOnly: true
          description: The list of references to HubBgpConnection objects.
          items:
            $ref: '#/components/schemas/SubResource'
      type: object
    StaticRoute:
      description: List of all Static Routes.
      properties:
        name:
          type: string
          description: The name of the StaticRoute that is unique within a VnetRoute.
        addressPrefixes:
          type: array
          description: List of all address prefixes.
          items:
            type: string
        nextHopIpAddress:
          type: string
          description: The ip address of the next hop.
      type: object
    VirtualHubEffectiveRouteList:
      description: EffectiveRoutes List.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VirtualHubEffectiveRoute'
          description: The list of effective routes configured on the virtual hub or the specified resource.
      type: object
    VirtualHubEffectiveRoute:
      description: The effective route configured on the virtual hub or specified resource.
      properties:
        addressPrefixes:
          description: The list of address prefixes.
          type: array
          items:
            type: string
        nextHops:
          description: The list of next hops.
          type: array
          items:
            type: string
        nextHopType:
          description: The type of the next hop.
          type: string
        asPath:
          description: The ASPath of this route.
          type: string
        routeOrigin:
          description: The origin of this route.
          type: string
      type: object
    EffectiveRoutesParameters:
      description: The parameters specifying the resource whose effective routes are being requested.
      properties:
        resourceId:
          type: string
          description: The resource whose effective routes are being requested.
        virtualWanResourceType:
          type: string
          description: The type of the specified resource like RouteTable, ExpressRouteConnection, HubVirtualNetworkConnection, VpnConnection and P2SConnection.
      type: object
    O365PolicyProperties:
      properties:
        breakOutCategories:
          readOnly: false
          description: Office365 breakout categories.
          $ref: '#/components/schemas/O365BreakOutCategoryPolicies'
      description: The Office365 breakout policy.
      type: object
    O365BreakOutCategoryPolicies:
      properties:
        allow:
          type: boolean
          readOnly: false
          description: Flag to control allow category.
        optimize:
          type: boolean
          readOnly: false
          description: Flag to control optimize category.
        default:
          type: boolean
          readOnly: false
          description: Flag to control default category.
      description: Office365 breakout categories.
      type: object
    ListRoutingIntentResult:
      description: List of the routing intent result and a URL nextLink to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/RoutingIntent'
          description: List of RoutingIntent resource.
        nextLink:
          type: string
          description: URL to get the next set of operation list results if there are any.
    RoutingIntent:
      description: The routing intent child resource of a Virtual hub.
      properties:
        routingPolicies:
          type: array
          description: List of routing policies.
          readOnly: false
          items:
            $ref: '#/components/schemas/RoutingPolicy'
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
          description: The provisioning state of the RoutingIntent resource.
        name:
          type: string
          description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
        etag:
          type: string
          readOnly: true
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          readOnly: true
          type: string
          description: Resource type.
        id:
          type: string
          description: Resource ID.
      type: object
    RoutingIntentProperties:
      properties:
        routingPolicies:
          type: array
          description: List of routing policies.
          readOnly: false
          items:
            $ref: '#/components/schemas/RoutingPolicy'
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
          description: The provisioning state of the RoutingIntent resource.
      description: The properties of a RoutingIntent resource.
      type: object
    RoutingPolicy:
      required:
        - name
        - destinations
        - nextHop
      properties:
        name:
          type: string
          description: The unique name for the routing policy.
        destinations:
          type: array
          description: 'List of all destinations which this routing policy is applicable to (for example: Internet, PrivateTraffic).'
          items:
            type: string
        nextHop:
          type: string
          description: The next hop resource id on which this routing policy is applicable to.
      description: The routing policy object used in a RoutingIntent resource.
      type: object
    DdosProtectionPlan:
      description: A DDoS protection plan in a resource group.
      x-ms-azure-resource: true
      properties:
        resourceGuid:
          readOnly: true
          type: string
          description: The resource GUID property of the DDoS protection plan resource. It uniquely identifies the resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the DDoS protection plan resource.
        virtualNetworks:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: The list of virtual networks associated with the DDoS protection plan resource. This list is read-only.
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
      type: object
    DdosProtectionPlanPropertiesFormat:
      properties:
        resourceGuid:
          readOnly: true
          type: string
          description: The resource GUID property of the DDoS protection plan resource. It uniquely identifies the resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the DDoS protection plan resource.
        virtualNetworks:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: The list of virtual networks associated with the DDoS protection plan resource. This list is read-only.
      description: DDoS protection plan properties.
      type: object
    DdosProtectionPlanListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/DdosProtectionPlan'
          description: A list of DDoS protection plans.
        nextLink:
          readOnly: true
          type: string
          description: The URL to get the next set of results.
      description: A list of DDoS protection plans.
      type: object
    CustomIpPrefixPropertiesFormat:
      properties:
        cidr:
          type: string
          description: The prefix range in CIDR notation. Should include the start address and the prefix length.
        signedMessage:
          type: string
          description: Signed message for WAN validation.
        authorizationMessage:
          type: string
          description: Authorization message for WAN validation.
        customIpPrefixParent:
          $ref: '#/components/schemas/SubResource'
          description: The Parent CustomIpPrefix for IPv6 /64 CustomIpPrefix.
        childCustomIpPrefixes:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: The list of all Children for IPv6 /48 CustomIpPrefix.
        commissionedState:
          type: string
          description: The commissioned state of the Custom IP Prefix.
          enum:
            - Provisioning
            - Provisioned
            - Commissioning
            - Commissioned
            - Decommissioning
            - Deprovisioning
            - CommissionedNoInternetAdvertise
          x-ms-enum:
            name: CommissionedState
            modelAsString: true
        noInternetAdvertise:
          type: boolean
          description: Whether to Advertise the range to Internet.
        publicIpPrefixes:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: The list of all referenced PublicIpPrefixes.
        resourceGuid:
          readOnly: true
          type: string
          description: The resource GUID property of the custom IP prefix resource.
        failedReason:
          readOnly: true
          type: string
          description: The reason why resource is in failed state.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the custom IP prefix resource.
      description: Custom IP prefix properties.
      type: object
    CustomIpPrefix:
      description: Custom IP prefix resource.
      properties:
        cidr:
          type: string
          description: The prefix range in CIDR notation. Should include the start address and the prefix length.
        signedMessage:
          type: string
          description: Signed message for WAN validation.
        authorizationMessage:
          type: string
          description: Authorization message for WAN validation.
        customIpPrefixParent:
          $ref: '#/components/schemas/SubResource'
          description: The Parent CustomIpPrefix for IPv6 /64 CustomIpPrefix.
        childCustomIpPrefixes:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: The list of all Children for IPv6 /48 CustomIpPrefix.
        commissionedState:
          type: string
          description: The commissioned state of the Custom IP Prefix.
          enum:
            - Provisioning
            - Provisioned
            - Commissioning
            - Commissioned
            - Decommissioning
            - Deprovisioning
            - CommissionedNoInternetAdvertise
          x-ms-enum:
            name: CommissionedState
            modelAsString: true
        noInternetAdvertise:
          type: boolean
          description: Whether to Advertise the range to Internet.
        publicIpPrefixes:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: The list of all referenced PublicIpPrefixes.
        resourceGuid:
          readOnly: true
          type: string
          description: The resource GUID property of the custom IP prefix resource.
        failedReason:
          readOnly: true
          type: string
          description: The reason why resource is in failed state.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the custom IP prefix resource.
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location of the custom IP prefix.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        zones:
          type: array
          items:
            type: string
          description: A list of availability zones denoting the IP allocated for the resource needs to come from.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    CustomIpPrefixListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/CustomIpPrefix'
          description: A list of Custom IP prefixes that exists in a resource group.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: Response for ListCustomIpPrefixes API service call.
      type: object
    PrivateLinkService:
      description: Private link service resource.
      properties:
        loadBalancerFrontendIpConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/FrontendIPConfiguration'
          description: An array of references to the load balancer IP configurations.
        ipConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/PrivateLinkServiceIpConfiguration'
          description: An array of private link service IP configurations.
        networkInterfaces:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/NetworkInterface'
          description: An array of references to the network interfaces created for this private link service.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the private link service resource.
        privateEndpointConnections:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
          description: An array of list about connections to the private endpoint.
        visibility:
          allOf:
            - $ref: '#/components/schemas/ResourceSet'
          description: The visibility list of the private link service.
        autoApproval:
          allOf:
            - $ref: '#/components/schemas/ResourceSet'
          description: The auto-approval list of the private link service.
        fqdns:
          type: array
          items:
            type: string
          description: The list of Fqdn.
        alias:
          readOnly: true
          type: string
          description: The alias of the private link service.
        enableProxyProtocol:
          type: boolean
          description: Whether the private link service is enabled for proxy protocol or not.
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location of the load balancer.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    PrivateLinkServiceProperties:
      properties:
        loadBalancerFrontendIpConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/FrontendIPConfiguration'
          description: An array of references to the load balancer IP configurations.
        ipConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/PrivateLinkServiceIpConfiguration'
          description: An array of private link service IP configurations.
        networkInterfaces:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/NetworkInterface'
          description: An array of references to the network interfaces created for this private link service.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the private link service resource.
        privateEndpointConnections:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
          description: An array of list about connections to the private endpoint.
        visibility:
          allOf:
            - $ref: '#/components/schemas/ResourceSet'
          description: The visibility list of the private link service.
        autoApproval:
          allOf:
            - $ref: '#/components/schemas/ResourceSet'
          description: The auto-approval list of the private link service.
        fqdns:
          type: array
          items:
            type: string
          description: The list of Fqdn.
        alias:
          readOnly: true
          type: string
          description: The alias of the private link service.
        enableProxyProtocol:
          type: boolean
          description: Whether the private link service is enabled for proxy protocol or not.
      description: Properties of the private link service.
      type: object
    ResourceSet:
      properties:
        subscriptions:
          type: array
          items:
            type: string
          description: The list of subscriptions.
      description: The base resource set for visibility and auto-approval.
      type: object
    PrivateLinkServiceIpConfiguration:
      description: The private link service ip configuration.
      properties:
        privateIPAddress:
          type: string
          description: The private IP address of the IP configuration.
        privateIPAllocationMethod:
          $ref: '#/components/schemas/IPAllocationMethod'
          description: The private IP address allocation method.
        subnet:
          $ref: '#/components/schemas/Subnet'
          description: The reference to the subnet resource.
        primary:
          type: boolean
          description: Whether the ip configuration is primary or not.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the private link service IP configuration resource.
        privateIPAddressVersion:
          $ref: '#/components/schemas/IPVersion'
          description: Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
        name:
          type: string
          description: The name of private link service ip configuration.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          readOnly: true
          type: string
          description: The resource type.
        id:
          type: string
          description: Resource ID.
      type: object
    PrivateLinkServiceIpConfigurationProperties:
      properties:
        privateIPAddress:
          type: string
          description: The private IP address of the IP configuration.
        privateIPAllocationMethod:
          $ref: '#/components/schemas/IPAllocationMethod'
          description: The private IP address allocation method.
        subnet:
          $ref: '#/components/schemas/Subnet'
          description: The reference to the subnet resource.
        primary:
          type: boolean
          description: Whether the ip configuration is primary or not.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the private link service IP configuration resource.
        privateIPAddressVersion:
          $ref: '#/components/schemas/IPVersion'
          description: Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
      description: Properties of private link service IP configuration.
      type: object
    PrivateEndpointConnection:
      description: PrivateEndpointConnection resource.
      properties:
        privateEndpoint:
          readOnly: true
          $ref: '#/components/schemas/PrivateEndpoint'
          description: The resource of private end point.
        privateLinkServiceConnectionState:
          $ref: '#/components/schemas/PrivateLinkServiceConnectionState'
          description: A collection of information about the state of the connection between service consumer and provider.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the private endpoint connection resource.
        linkIdentifier:
          readOnly: true
          type: string
          description: The consumer link id.
        name:
          type: string
          description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
        type:
          readOnly: true
          type: string
          description: The resource type.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
      type: object
    PrivateEndpointConnectionProperties:
      properties:
        privateEndpoint:
          readOnly: true
          $ref: '#/components/schemas/PrivateEndpoint'
          description: The resource of private end point.
        privateLinkServiceConnectionState:
          $ref: '#/components/schemas/PrivateLinkServiceConnectionState'
          description: A collection of information about the state of the connection between service consumer and provider.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the private endpoint connection resource.
        linkIdentifier:
          readOnly: true
          type: string
          description: The consumer link id.
      description: Properties of the PrivateEndpointConnectProperties.
      type: object
    PrivateLinkServiceConnectionState:
      properties:
        status:
          type: string
          description: Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
        description:
          type: string
          description: The reason for approval/rejection of the connection.
        actionsRequired:
          type: string
          description: A message indicating if changes on the service provider require any updates on the consumer.
      description: A collection of information about the state of the connection between service consumer and provider.
      type: object
    PrivateLinkServiceListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/PrivateLinkService'
          description: A list of PrivateLinkService resources in a resource group.
        nextLink:
          type: string
          description: The URL to get the next set of results.
          readOnly: true
      description: Response for the ListPrivateLinkService API service call.
      type: object
    PrivateEndpointConnectionListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
          description: A list of PrivateEndpointConnection resources for a specific private link service.
        nextLink:
          type: string
          description: The URL to get the next set of results.
          readOnly: true
      description: Response for the ListPrivateEndpointConnection API service call.
      type: object
    CheckPrivateLinkServiceVisibilityRequest:
      properties:
        privateLinkServiceAlias:
          type: string
          description: The alias of the private link service.
      description: Request body of the CheckPrivateLinkServiceVisibility API service call.
      type: object
    PrivateLinkServiceVisibility:
      properties:
        visible:
          type: boolean
          description: Private Link Service Visibility (True/False).
      description: Response for the CheckPrivateLinkServiceVisibility API service call.
      type: object
    AutoApprovedPrivateLinkServicesResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/AutoApprovedPrivateLinkService'
          description: An array of auto approved private link service.
        nextLink:
          readOnly: true
          type: string
          description: The URL to get the next set of results.
      description: An array of private link service id that can be linked to a private end point with auto approved.
      type: object
    AutoApprovedPrivateLinkService:
      properties:
        privateLinkService:
          type: string
          description: The id of the private link service resource.
      description: The information of an AutoApprovedPrivateLinkService.
      type: object
    NetworkInterfaceTapConfiguration:
      description: Tap configuration in a Network Interface.
      properties:
        virtualNetworkTap:
          $ref: '#/components/schemas/VirtualNetworkTap'
          description: The reference to the Virtual Network Tap resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the network interface tap configuration resource.
        name:
          type: string
          description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          readOnly: true
          type: string
          description: Sub Resource type.
        id:
          type: string
          description: Resource ID.
      type: object
    NetworkInterfaceTapConfigurationPropertiesFormat:
      properties:
        virtualNetworkTap:
          $ref: '#/components/schemas/VirtualNetworkTap'
          description: The reference to the Virtual Network Tap resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the network interface tap configuration resource.
      description: Properties of Virtual Network Tap configuration.
      type: object
    NetworkInterfaceIPConfigurationPropertiesFormat:
      properties:
        gatewayLoadBalancer:
          $ref: '#/components/schemas/SubResource'
          description: The reference to gateway load balancer frontend IP.
        virtualNetworkTaps:
          type: array
          items:
            $ref: '#/components/schemas/VirtualNetworkTap'
          description: The reference to Virtual Network Taps.
        applicationGatewayBackendAddressPools:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayBackendAddressPool'
          description: The reference to ApplicationGatewayBackendAddressPool resource.
        loadBalancerBackendAddressPools:
          type: array
          items:
            $ref: '#/components/schemas/BackendAddressPool'
          description: The reference to LoadBalancerBackendAddressPool resource.
        loadBalancerInboundNatRules:
          type: array
          items:
            $ref: '#/components/schemas/InboundNatRule'
          description: A list of references of LoadBalancerInboundNatRules.
        privateIPAddress:
          type: string
          description: Private IP address of the IP configuration.
        privateIPAllocationMethod:
          $ref: '#/components/schemas/IPAllocationMethod'
          description: The private IP address allocation method.
        privateIPAddressVersion:
          $ref: '#/components/schemas/IPVersion'
          description: Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
        subnet:
          $ref: '#/components/schemas/Subnet'
          description: Subnet bound to the IP configuration.
        primary:
          type: boolean
          description: Whether this is a primary customer address on the network interface.
        publicIPAddress:
          $ref: '#/components/schemas/PublicIPAddress'
          description: Public IP address bound to the IP configuration.
        applicationSecurityGroups:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationSecurityGroup'
          description: Application security groups in which the IP configuration is included.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the network interface IP configuration.
        privateLinkConnectionProperties:
          $ref: '#/components/schemas/NetworkInterfaceIPConfigurationPrivateLinkConnectionProperties'
          description: PrivateLinkConnection properties for the network interface.
          readOnly: true
      description: Properties of IP configuration.
      type: object
    NetworkInterfaceIPConfigurationPrivateLinkConnectionProperties:
      properties:
        groupId:
          type: string
          readOnly: true
          description: The group ID for current private link connection.
        requiredMemberName:
          type: string
          readOnly: true
          description: The required member name for current private link connection.
        fqdns:
          type: array
          items:
            type: string
          readOnly: true
          description: List of FQDNs for current private link connection.
      description: PrivateLinkConnection properties for the network interface.
      type: object
    NetworkInterfaceIPConfiguration:
      description: IPConfiguration in a network interface.
      properties:
        gatewayLoadBalancer:
          $ref: '#/components/schemas/SubResource'
          description: The reference to gateway load balancer frontend IP.
        virtualNetworkTaps:
          type: array
          items:
            $ref: '#/components/schemas/VirtualNetworkTap'
          description: The reference to Virtual Network Taps.
        applicationGatewayBackendAddressPools:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGatewayBackendAddressPool'
          description: The reference to ApplicationGatewayBackendAddressPool resource.
        loadBalancerBackendAddressPools:
          type: array
          items:
            $ref: '#/components/schemas/BackendAddressPool'
          description: The reference to LoadBalancerBackendAddressPool resource.
        loadBalancerInboundNatRules:
          type: array
          items:
            $ref: '#/components/schemas/InboundNatRule'
          description: A list of references of LoadBalancerInboundNatRules.
        privateIPAddress:
          type: string
          description: Private IP address of the IP configuration.
        privateIPAllocationMethod:
          $ref: '#/components/schemas/IPAllocationMethod'
          description: The private IP address allocation method.
        privateIPAddressVersion:
          $ref: '#/components/schemas/IPVersion'
          description: Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
        subnet:
          $ref: '#/components/schemas/Subnet'
          description: Subnet bound to the IP configuration.
        primary:
          type: boolean
          description: Whether this is a primary customer address on the network interface.
        publicIPAddress:
          $ref: '#/components/schemas/PublicIPAddress'
          description: Public IP address bound to the IP configuration.
        applicationSecurityGroups:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationSecurityGroup'
          description: Application security groups in which the IP configuration is included.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the network interface IP configuration.
        privateLinkConnectionProperties:
          $ref: '#/components/schemas/NetworkInterfaceIPConfigurationPrivateLinkConnectionProperties'
          description: PrivateLinkConnection properties for the network interface.
          readOnly: true
        name:
          type: string
          description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          type: string
          description: Resource type.
        id:
          type: string
          description: Resource ID.
      type: object
    NetworkInterfaceDnsSettings:
      properties:
        dnsServers:
          type: array
          items:
            type: string
          description: List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
        appliedDnsServers:
          readOnly: true
          type: array
          items:
            type: string
          description: If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.
        internalDnsNameLabel:
          type: string
          description: Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
        internalFqdn:
          readOnly: true
          type: string
          description: Fully qualified DNS name supporting internal communications between VMs in the same virtual network.
        internalDomainNameSuffix:
          readOnly: true
          type: string
          description: Even if internalDnsNameLabel is not specified, a DNS entry is created for the primary NIC of the VM. This DNS name can be constructed by concatenating the VM name with the value of internalDomainNameSuffix.
      description: DNS settings of a network interface.
      type: object
    NetworkInterfacePropertiesFormat:
      properties:
        virtualMachine:
          $ref: '#/components/schemas/SubResource'
          description: The reference to a virtual machine.
          readOnly: true
        networkSecurityGroup:
          $ref: '#/components/schemas/NetworkSecurityGroup'
          description: The reference to the NetworkSecurityGroup resource.
        privateEndpoint:
          readOnly: true
          $ref: '#/components/schemas/PrivateEndpoint'
          description: A reference to the private endpoint to which the network interface is linked.
        ipConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterfaceIPConfiguration'
          description: A list of IPConfigurations of the network interface.
        tapConfigurations:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterfaceTapConfiguration'
          description: A list of TapConfigurations of the network interface.
        dnsSettings:
          $ref: '#/components/schemas/NetworkInterfaceDnsSettings'
          description: The DNS settings in network interface.
        macAddress:
          readOnly: true
          type: string
          description: The MAC address of the network interface.
        primary:
          readOnly: true
          type: boolean
          description: Whether this is a primary network interface on a virtual machine.
        vnetEncryptionSupported:
          readOnly: true
          type: boolean
          description: Whether the virtual machine this nic is attached to supports encryption.
        enableAcceleratedNetworking:
          type: boolean
          description: If the network interface is configured for accelerated networking. Not applicable to VM sizes which require accelerated networking.
        enableIPForwarding:
          type: boolean
          description: Indicates whether IP forwarding is enabled on this network interface.
        hostedWorkloads:
          type: array
          items:
            type: string
          readOnly: true
          description: A list of references to linked BareMetal resources.
        dscpConfiguration:
          $ref: '#/components/schemas/SubResource'
          description: A reference to the dscp configuration to which the network interface is linked.
          readOnly: true
        resourceGuid:
          readOnly: true
          type: string
          description: The resource GUID property of the network interface resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the network interface resource.
        workloadType:
          type: string
          description: WorkloadType of the NetworkInterface for BareMetal resources
        nicType:
          type: string
          description: Type of Network Interface resource.
          enum:
            - Standard
            - Elastic
          x-ms-enum:
            name: NetworkInterfaceNicType
            modelAsString: true
        privateLinkService:
          $ref: '#/components/schemas/PrivateLinkService'
          description: Privatelinkservice of the network interface resource.
        migrationPhase:
          type: string
          description: Migration phase of Network Interface resource.
          enum:
            - None
            - Prepare
            - Commit
            - Abort
            - Committed
          x-ms-enum:
            name: NetworkInterfaceMigrationPhase
            modelAsString: true
        auxiliaryMode:
          type: string
          description: Auxiliary mode of Network Interface resource.
          enum:
            - None
            - MaxConnections
            - Floating
          x-ms-enum:
            name: NetworkInterfaceAuxiliaryMode
            modelAsString: true
      description: NetworkInterface properties.
      type: object
    NetworkInterface:
      description: A network interface in a resource group.
      properties:
        virtualMachine:
          $ref: '#/components/schemas/SubResource'
          description: The reference to a virtual machine.
          readOnly: true
        networkSecurityGroup:
          $ref: '#/components/schemas/NetworkSecurityGroup'
          description: The reference to the NetworkSecurityGroup resource.
        privateEndpoint:
          readOnly: true
          $ref: '#/components/schemas/PrivateEndpoint'
          description: A reference to the private endpoint to which the network interface is linked.
        ipConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterfaceIPConfiguration'
          description: A list of IPConfigurations of the network interface.
        tapConfigurations:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterfaceTapConfiguration'
          description: A list of TapConfigurations of the network interface.
        dnsSettings:
          $ref: '#/components/schemas/NetworkInterfaceDnsSettings'
          description: The DNS settings in network interface.
        macAddress:
          readOnly: true
          type: string
          description: The MAC address of the network interface.
        primary:
          readOnly: true
          type: boolean
          description: Whether this is a primary network interface on a virtual machine.
        vnetEncryptionSupported:
          readOnly: true
          type: boolean
          description: Whether the virtual machine this nic is attached to supports encryption.
        enableAcceleratedNetworking:
          type: boolean
          description: If the network interface is configured for accelerated networking. Not applicable to VM sizes which require accelerated networking.
        enableIPForwarding:
          type: boolean
          description: Indicates whether IP forwarding is enabled on this network interface.
        hostedWorkloads:
          type: array
          items:
            type: string
          readOnly: true
          description: A list of references to linked BareMetal resources.
        dscpConfiguration:
          $ref: '#/components/schemas/SubResource'
          description: A reference to the dscp configuration to which the network interface is linked.
          readOnly: true
        resourceGuid:
          readOnly: true
          type: string
          description: The resource GUID property of the network interface resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the network interface resource.
        workloadType:
          type: string
          description: WorkloadType of the NetworkInterface for BareMetal resources
        nicType:
          type: string
          description: Type of Network Interface resource.
          enum:
            - Standard
            - Elastic
          x-ms-enum:
            name: NetworkInterfaceNicType
            modelAsString: true
        privateLinkService:
          $ref: '#/components/schemas/PrivateLinkService'
          description: Privatelinkservice of the network interface resource.
        migrationPhase:
          type: string
          description: Migration phase of Network Interface resource.
          enum:
            - None
            - Prepare
            - Commit
            - Abort
            - Committed
          x-ms-enum:
            name: NetworkInterfaceMigrationPhase
            modelAsString: true
        auxiliaryMode:
          type: string
          description: Auxiliary mode of Network Interface resource.
          enum:
            - None
            - MaxConnections
            - Floating
          x-ms-enum:
            name: NetworkInterfaceAuxiliaryMode
            modelAsString: true
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location of the network interface.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    NetworkInterfaceListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterface'
          description: A list of network interfaces in a resource group.
        nextLink:
          readOnly: true
          type: string
          description: The URL to get the next set of results.
      description: Response for the ListNetworkInterface API service call.
      type: object
    NetworkInterfaceTapConfigurationListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterfaceTapConfiguration'
          description: A list of tap configurations.
        nextLink:
          readOnly: true
          type: string
          description: The URL to get the next set of results.
      description: Response for list tap configurations API service call.
      type: object
    NetworkInterfaceIPConfigurationListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterfaceIPConfiguration'
          description: A list of ip configurations.
        nextLink:
          readOnly: true
          type: string
          description: The URL to get the next set of results.
      description: Response for list ip configurations API service call.
      type: object
    NetworkInterfaceLoadBalancerListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/LoadBalancer'
          description: A list of load balancers.
        nextLink:
          readOnly: true
          type: string
          description: The URL to get the next set of results.
      description: Response for list ip configurations API service call.
      type: object
    EffectiveNetworkSecurityGroup:
      properties:
        networkSecurityGroup:
          $ref: '#/components/schemas/SubResource'
          description: The ID of network security group that is applied.
        association:
          $ref: '#/components/schemas/EffectiveNetworkSecurityGroupAssociation'
          description: Associated resources.
        effectiveSecurityRules:
          type: array
          items:
            $ref: '#/components/schemas/EffectiveNetworkSecurityRule'
          description: A collection of effective security rules.
        tagMap:
          type: string
          additionalProperties:
            type: array
            items:
              type: string
            description: List of IP Addresses within the tag (key).
          description: Mapping of tags to list of IP Addresses included within the tag.
      description: Effective network security group.
      type: object
    EffectiveNetworkSecurityGroupAssociation:
      properties:
        networkManager:
          $ref: '#/components/schemas/SubResource'
          description: The ID of the Azure network manager if assigned.
        subnet:
          $ref: '#/components/schemas/SubResource'
          description: The ID of the subnet if assigned.
        networkInterface:
          $ref: '#/components/schemas/SubResource'
          description: The ID of the network interface if assigned.
      description: The effective network security group association.
      type: object
    EffectiveNetworkSecurityRule:
      properties:
        name:
          type: string
          description: The name of the security rule specified by the user (if created by the user).
        protocol:
          type: string
          description: The network protocol this rule applies to.
          enum:
            - Tcp
            - Udp
            - All
          x-ms-enum:
            name: EffectiveSecurityRuleProtocol
            modelAsString: true
        sourcePortRange:
          type: string
          description: The source port or range.
        destinationPortRange:
          type: string
          description: The destination port or range.
        sourcePortRanges:
          type: array
          items:
            type: string
          description: The source port ranges. Expected values include a single integer between 0 and 65535, a range using '-' as separator (e.g. 100-400), or an asterisk (*).
        destinationPortRanges:
          type: array
          items:
            type: string
          description: The destination port ranges. Expected values include a single integer between 0 and 65535, a range using '-' as separator (e.g. 100-400), or an asterisk (*).
        sourceAddressPrefix:
          type: string
          description: The source address prefix.
        destinationAddressPrefix:
          type: string
          description: The destination address prefix.
        sourceAddressPrefixes:
          type: array
          items:
            type: string
          description: The source address prefixes. Expected values include CIDR IP ranges, Default Tags (VirtualNetwork, AzureLoadBalancer, Internet), System Tags, and the asterisk (*).
        destinationAddressPrefixes:
          type: array
          items:
            type: string
          description: The destination address prefixes. Expected values include CIDR IP ranges, Default Tags (VirtualNetwork, AzureLoadBalancer, Internet), System Tags, and the asterisk (*).
        expandedSourceAddressPrefix:
          type: array
          items:
            type: string
          description: The expanded source address prefix.
        expandedDestinationAddressPrefix:
          type: array
          items:
            type: string
          description: Expanded destination address prefix.
        access:
          $ref: '#/components/schemas/SecurityRuleAccess'
          description: Whether network traffic is allowed or denied.
        priority:
          type: integer
          format: int32
          description: The priority of the rule.
        direction:
          $ref: '#/components/schemas/SecurityRuleDirection'
          description: The direction of the rule.
      description: Effective network security rules.
      type: object
    EffectiveNetworkSecurityGroupListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/EffectiveNetworkSecurityGroup'
          description: A list of effective network security groups.
        nextLink:
          readOnly: true
          type: string
          description: The URL to get the next set of results.
      description: Response for list effective network security groups API service call.
      type: object
    EffectiveRoute:
      properties:
        name:
          type: string
          description: The name of the user defined route. This is optional.
        disableBgpRoutePropagation:
          type: boolean
          description: If true, on-premises routes are not propagated to the network interfaces in the subnet.
        source:
          type: string
          description: Who created the route.
          enum:
            - Unknown
            - User
            - VirtualNetworkGateway
            - Default
          x-ms-enum:
            name: EffectiveRouteSource
            modelAsString: true
        state:
          type: string
          description: The value of effective route.
          enum:
            - Active
            - Invalid
          x-ms-enum:
            name: EffectiveRouteState
            modelAsString: true
        addressPrefix:
          type: array
          items:
            type: string
          description: The address prefixes of the effective routes in CIDR notation.
        nextHopIpAddress:
          type: array
          items:
            type: string
          description: The IP address of the next hop of the effective route.
        nextHopType:
          $ref: '#/components/schemas/RouteNextHopType'
          description: The type of Azure hop the packet should be sent to.
      description: Effective Route.
      type: object
    EffectiveRouteListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/EffectiveRoute'
          description: A list of effective routes.
        nextLink:
          readOnly: true
          type: string
          description: The URL to get the next set of results.
      description: Response for list effective route API service call.
      type: object
    IPConfigurationPropertiesFormat:
      properties:
        privateIPAddress:
          type: string
          description: The private IP address of the IP configuration.
        privateIPAllocationMethod:
          $ref: '#/components/schemas/IPAllocationMethod'
          description: The private IP address allocation method.
          default: Dynamic
        subnet:
          $ref: '#/components/schemas/Subnet'
          description: The reference to the subnet resource.
        publicIPAddress:
          $ref: '#/components/schemas/PublicIPAddress'
          description: The reference to the public IP resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the IP configuration resource.
      description: Properties of IP configuration.
      type: object
    IPConfiguration:
      description: IP configuration.
      properties:
        privateIPAddress:
          type: string
          description: The private IP address of the IP configuration.
        privateIPAllocationMethod:
          $ref: '#/components/schemas/IPAllocationMethod'
          description: The private IP address allocation method.
          default: Dynamic
        subnet:
          $ref: '#/components/schemas/Subnet'
          description: The reference to the subnet resource.
        publicIPAddress:
          $ref: '#/components/schemas/PublicIPAddress'
          description: The reference to the public IP resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the IP configuration resource.
        name:
          type: string
          description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
      type: object
    DdosCustomPolicy:
      description: A DDoS custom policy in a resource group.
      properties:
        resourceGuid:
          readOnly: true
          type: string
          description: The resource GUID property of the DDoS custom policy resource. It uniquely identifies the resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the DDoS custom policy resource.
        publicIPAddresses:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: The list of public IPs associated with the DDoS custom policy resource. This list is read-only.
        protocolCustomSettings:
          readOnly: false
          type: array
          items:
            $ref: '#/components/schemas/ProtocolCustomSettingsFormat'
          description: The protocol-specific DDoS policy customization parameters.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    DdosCustomPolicyPropertiesFormat:
      properties:
        resourceGuid:
          readOnly: true
          type: string
          description: The resource GUID property of the DDoS custom policy resource. It uniquely identifies the resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the DDoS custom policy resource.
        publicIPAddresses:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: The list of public IPs associated with the DDoS custom policy resource. This list is read-only.
        protocolCustomSettings:
          readOnly: false
          type: array
          items:
            $ref: '#/components/schemas/ProtocolCustomSettingsFormat'
          description: The protocol-specific DDoS policy customization parameters.
      description: DDoS custom policy properties.
      type: object
    ProtocolCustomSettingsFormat:
      properties:
        protocol:
          readOnly: false
          type: string
          enum:
            - Tcp
            - Udp
            - Syn
          x-ms-enum:
            name: DdosCustomPolicyProtocol
            modelAsString: true
          description: The protocol for which the DDoS protection policy is being customized.
        triggerRateOverride:
          readOnly: false
          type: string
          description: The customized DDoS protection trigger rate.
        sourceRateOverride:
          readOnly: false
          type: string
          description: The customized DDoS protection source rate.
        triggerSensitivityOverride:
          readOnly: false
          type: string
          enum:
            - Relaxed
            - Low
            - Default
            - High
          x-ms-enum:
            name: DdosCustomPolicyTriggerSensitivityOverride
            modelAsString: true
          description: 'The customized DDoS protection trigger rate sensitivity degrees. High: Trigger rate set with most sensitivity w.r.t. normal traffic. Default: Trigger rate set with moderate sensitivity w.r.t. normal traffic. Low: Trigger rate set with less sensitivity w.r.t. normal traffic. Relaxed: Trigger rate set with least sensitivity w.r.t. normal traffic.'
      description: DDoS custom policy properties.
      type: object
    AvailableDelegationsResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/AvailableDelegation'
          description: An array of available delegations.
        nextLink:
          readOnly: true
          type: string
          description: The URL to get the next set of results.
      description: An array of available delegations.
      type: object
    AvailableDelegation:
      properties:
        name:
          type: string
          description: The name of the AvailableDelegation resource.
        id:
          type: string
          description: A unique identifier of the AvailableDelegation resource.
        type:
          type: string
          description: Resource type.
        serviceName:
          type: string
          description: The name of the service and resource.
        actions:
          type: array
          items:
            type: string
          description: The actions permitted to the service upon delegation.
      description: The serviceName of an AvailableDelegation indicates a possible delegation for a subnet.
      type: object
    UsageName:
      properties:
        value:
          type: string
          description: A string describing the resource name.
        localizedValue:
          type: string
          description: A localized string describing the resource name.
      description: The usage names.
      type: object
    Usage:
      properties:
        id:
          type: string
          readOnly: true
          description: Resource identifier.
        unit:
          type: string
          description: An enum describing the unit of measurement.
          enum:
            - Count
          x-ms-enum:
            name: UsageUnit
            modelAsString: true
        currentValue:
          type: integer
          format: int64
          description: The current value of the usage.
        limit:
          type: integer
          format: int64
          description: The limit of usage.
        name:
          $ref: '#/components/schemas/UsageName'
          description: The name of the type of usage.
      required:
        - unit
        - currentValue
        - limit
        - name
      description: The network resource usage.
      type: object
    UsagesListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Usage'
          description: The list network resource usages.
        nextLink:
          type: string
          description: URL to get the next set of results.
      description: The list usages operation response.
      type: object
    ErrorDetails:
      properties:
        code:
          type: string
          description: Error code.
        target:
          type: string
          description: Error target.
        message:
          type: string
          description: Error message.
      description: Common error details representation.
      type: object
    Error:
      properties:
        code:
          type: string
          description: Error code.
        message:
          type: string
          description: Error message.
        target:
          type: string
          description: Error target.
        details:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetails'
          description: Error details.
        innerError:
          type: string
          description: Inner error message.
      description: Common error representation.
      type: object
    CloudError:
      x-ms-external: true
      properties:
        error:
          $ref: '#/components/schemas/CloudErrorBody'
          description: Cloud error body.
      description: An error response from the service.
      type: object
    CloudErrorBody:
      x-ms-external: true
      properties:
        code:
          type: string
          description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
        message:
          type: string
          description: A message describing the error, intended to be suitable for display in a user interface.
        target:
          type: string
          description: The target of the particular error. For example, the name of the property in error.
        details:
          type: array
          items:
            $ref: '#/components/schemas/CloudErrorBody'
          description: A list of additional details about the error.
      description: An error response from the service.
      type: object
    AzureAsyncOperationResult:
      properties:
        status:
          type: string
          description: Status of the Azure async operation.
          enum:
            - InProgress
            - Succeeded
            - Failed
          x-ms-enum:
            name: NetworkOperationStatus
            modelAsString: true
        error:
          $ref: '#/components/schemas/Error'
          description: Details of the error occurred during specified asynchronous operation.
      description: The response body contains the status of the specified asynchronous operation, indicating whether it has succeeded, is in progress, or has failed. Note that this status is distinct from the HTTP status code returned for the Get Operation Status operation itself. If the asynchronous operation succeeded, the response body includes the HTTP status code for the successful request. If the asynchronous operation failed, the response body includes the HTTP status code for the failed request and error information regarding the failure.
      type: object
    Resource:
      properties:
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      description: Common resource representation.
      x-ms-azure-resource: true
      type: object
    ChildResource:
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
      description: Proxy resource representation.
      x-ms-azure-resource: true
    SubResource:
      properties:
        id:
          type: string
          description: Resource ID.
      description: Reference to another subresource.
      x-ms-azure-resource: true
      type: object
    TagsObject:
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      description: Tags object for patch operations.
      type: object
    SystemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The type of identity that last modified the resource.
    ManagedServiceIdentity:
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal id of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant id of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          type: string
          description: The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine.
          enum:
            - SystemAssigned
            - UserAssigned
            - SystemAssigned, UserAssigned
            - None
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
        userAssignedIdentities:
          type: object
          additionalProperties:
            type: object
            properties:
              principalId:
                readOnly: true
                type: string
                description: The principal id of user assigned identity.
              clientId:
                readOnly: true
                type: string
                description: The client id of user assigned identity.
          description: 'The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}''.'
      description: Identity for the resource.
      type: object
    ProvisioningState:
      type: string
      readOnly: true
      description: The current provisioning state.
      enum:
        - Succeeded
        - Updating
        - Deleting
        - Failed
      x-ms-enum:
        name: ProvisioningState
        modelAsString: true
    Access:
      type: string
      description: Access to be allowed or denied.
      enum:
        - Allow
        - Deny
      x-ms-enum:
        name: Access
        modelAsString: true
    AuthenticationMethod:
      type: string
      description: VPN client authentication method.
      enum:
        - EAPTLS
        - EAPMSCHAPv2
      x-ms-enum:
        name: AuthenticationMethod
        modelAsString: true
    IPAllocationMethod:
      type: string
      description: IP address allocation method.
      enum:
        - Static
        - Dynamic
      x-ms-enum:
        name: IPAllocationMethod
        modelAsString: true
    IPVersion:
      type: string
      description: IP address version.
      enum:
        - IPv4
        - IPv6
      x-ms-enum:
        name: IPVersion
        modelAsString: true
    ExtendedLocationType:
      type: string
      description: The supported ExtendedLocation types. Currently only EdgeZone is supported in Microsoft.Network resources.
      enum:
        - EdgeZone
      x-ms-enum:
        name: ExtendedLocationTypes
        modelAsString: true
    ExtendedLocation:
      description: ExtendedLocation complex type.
      properties:
        name:
          type: string
          description: The name of the extended location.
        type:
          $ref: '#/components/schemas/ExtendedLocationType'
          description: The type of the extended location.
      type: object
    RouteFilterRulePropertiesFormat:
      required:
        - access
        - routeFilterRuleType
        - communities
      properties:
        access:
          $ref: '#/components/schemas/Access'
          description: The access type of the rule.
        routeFilterRuleType:
          type: string
          description: The rule type of the rule.
          enum:
            - Community
          x-ms-enum:
            name: RouteFilterRuleType
            modelAsString: true
        communities:
          type: array
          items:
            type: string
          description: The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020'].
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the route filter rule resource.
      description: Route Filter Rule Resource.
      type: object
    RouteFilterRule:
      description: Route Filter Rule Resource.
      properties:
        access:
          $ref: '#/components/schemas/Access'
          description: The access type of the rule.
        routeFilterRuleType:
          type: string
          description: The rule type of the rule.
          enum:
            - Community
          x-ms-enum:
            name: RouteFilterRuleType
            modelAsString: true
        communities:
          type: array
          items:
            type: string
          description: The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020'].
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the route filter rule resource.
        name:
          type: string
          description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
        location:
          type: string
          description: Resource location.
        etag:
          type: string
          readOnly: true
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
      type: object
    PatchRouteFilterRule:
      description: Route Filter Rule Resource.
      properties:
        access:
          $ref: '#/components/schemas/Access'
          description: The access type of the rule.
        routeFilterRuleType:
          type: string
          description: The rule type of the rule.
          enum:
            - Community
          x-ms-enum:
            name: RouteFilterRuleType
            modelAsString: true
        communities:
          type: array
          items:
            type: string
          description: The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020'].
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the route filter rule resource.
        name:
          type: string
          readOnly: true
          description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
        etag:
          type: string
          readOnly: true
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
      type: object
    RouteFilterPropertiesFormat:
      properties:
        rules:
          type: array
          items:
            $ref: '#/components/schemas/RouteFilterRule'
          description: Collection of RouteFilterRules contained within a route filter.
        peerings:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ExpressRouteCircuitPeering'
          description: A collection of references to express route circuit peerings.
        ipv6Peerings:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ExpressRouteCircuitPeering'
          description: A collection of references to express route circuit ipv6 peerings.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the route filter resource.
      description: Route Filter Resource.
      type: object
    RouteFilter:
      required:
        - location
      description: Route Filter Resource.
      properties:
        rules:
          type: array
          items:
            $ref: '#/components/schemas/RouteFilterRule'
          description: Collection of RouteFilterRules contained within a route filter.
        peerings:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ExpressRouteCircuitPeering'
          description: A collection of references to express route circuit peerings.
        ipv6Peerings:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ExpressRouteCircuitPeering'
          description: A collection of references to express route circuit ipv6 peerings.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the route filter resource.
        etag:
          type: string
          readOnly: true
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    PatchRouteFilter:
      description: Route Filter Resource.
      properties:
        rules:
          type: array
          items:
            $ref: '#/components/schemas/RouteFilterRule'
          description: Collection of RouteFilterRules contained within a route filter.
        peerings:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ExpressRouteCircuitPeering'
          description: A collection of references to express route circuit peerings.
        ipv6Peerings:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ExpressRouteCircuitPeering'
          description: A collection of references to express route circuit ipv6 peerings.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the route filter resource.
        name:
          type: string
          readOnly: true
          description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
        etag:
          type: string
          readOnly: true
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          readOnly: true
          type: string
          description: Resource type.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
        id:
          type: string
          description: Resource ID.
      type: object
    RouteFilterListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/RouteFilter'
          description: A list of route filters in a resource group.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: Response for the ListRouteFilters API service call.
      type: object
    RouteFilterRuleListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/RouteFilterRule'
          description: A list of RouteFilterRules in a resource group.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: Response for the ListRouteFilterRules API service call.
      type: object
    ExpressRoutePortsLocationBandwidths:
      title: ExpressRoutePorts Location Bandwidths
      description: Real-time inventory of available ExpressRoute port bandwidths.
      properties:
        offerName:
          type: string
          readOnly: true
          description: Bandwidth descriptive name.
        valueInGbps:
          type: integer
          readOnly: true
          description: Bandwidth value in Gbps.
      type: object
    ExpressRoutePortsLocationPropertiesFormat:
      title: ExpressRoutePorts Location Properties
      description: Properties specific to ExpressRoutePorts peering location resources.
      properties:
        address:
          type: string
          readOnly: true
          description: Address of peering location.
        contact:
          type: string
          readOnly: true
          description: Contact details of peering locations.
        availableBandwidths:
          type: array
          items:
            $ref: '#/components/schemas/ExpressRoutePortsLocationBandwidths'
          description: The inventory of available ExpressRoutePort bandwidths.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the express route port location resource.
      type: object
    ExpressRoutePortsLocation:
      title: ExpressRoutePorts Peering Location
      description: Definition of the ExpressRoutePorts peering location resource.
      properties:
        address:
          type: string
          readOnly: true
          description: Address of peering location.
        contact:
          type: string
          readOnly: true
          description: Contact details of peering locations.
        availableBandwidths:
          type: array
          items:
            $ref: '#/components/schemas/ExpressRoutePortsLocationBandwidths'
          description: The inventory of available ExpressRoutePort bandwidths.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the express route port location resource.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    ExpressRoutePortsLocationListResult:
      title: ExpressRoutePorts Location List Result
      description: Response for ListExpressRoutePortsLocations API service call.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ExpressRoutePortsLocation'
          description: The list of all ExpressRoutePort peering locations.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      type: object
    ExpressRouteLinkMacSecConfig:
      description: ExpressRouteLink Mac Security Configuration.
      title: Definition of ExpressRouteLink Mac Security configuration.
      properties:
        cknSecretIdentifier:
          type: string
          description: Keyvault Secret Identifier URL containing Mac security CKN key.
        cakSecretIdentifier:
          type: string
          description: Keyvault Secret Identifier URL containing Mac security CAK key.
        cipher:
          type: string
          description: Mac security cipher.
          enum:
            - GcmAes256
            - GcmAes128
            - GcmAesXpn128
            - GcmAesXpn256
          x-ms-enum:
            name: ExpressRouteLinkMacSecCipher
            modelAsString: true
        sciState:
          type: string
          description: Sci mode enabled/disabled.
          enum:
            - Disabled
            - Enabled
          x-ms-enum:
            name: ExpressRouteLinkMacSecSciState
            modelAsString: true
      type: object
    ExpressRouteLinkPropertiesFormat:
      title: ExpressRouteLink Resource Properties
      description: Properties specific to ExpressRouteLink resources.
      properties:
        routerName:
          readOnly: true
          type: string
          description: Name of Azure router associated with physical port.
        interfaceName:
          readOnly: true
          type: string
          description: Name of Azure router interface.
        patchPanelId:
          readOnly: true
          type: string
          description: Mapping between physical port to patch panel port.
        rackId:
          readOnly: true
          type: string
          description: Mapping of physical patch panel to rack.
        connectorType:
          readOnly: true
          type: string
          description: Physical fiber port type.
          enum:
            - LC
            - SC
          x-ms-enum:
            name: ExpressRouteLinkConnectorType
            modelAsString: true
        adminState:
          type: string
          description: Administrative state of the physical port.
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: ExpressRouteLinkAdminState
            modelAsString: true
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the express route link resource.
        macSecConfig:
          $ref: '#/components/schemas/ExpressRouteLinkMacSecConfig'
          description: MacSec configuration.
      type: object
    ExpressRouteLink:
      title: ExpressRouteLink
      description: ExpressRouteLink child resource definition.
      properties:
        routerName:
          readOnly: true
          type: string
          description: Name of Azure router associated with physical port.
        interfaceName:
          readOnly: true
          type: string
          description: Name of Azure router interface.
        patchPanelId:
          readOnly: true
          type: string
          description: Mapping between physical port to patch panel port.
        rackId:
          readOnly: true
          type: string
          description: Mapping of physical patch panel to rack.
        connectorType:
          readOnly: true
          type: string
          description: Physical fiber port type.
          enum:
            - LC
            - SC
          x-ms-enum:
            name: ExpressRouteLinkConnectorType
            modelAsString: true
        adminState:
          type: string
          description: Administrative state of the physical port.
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: ExpressRouteLinkAdminState
            modelAsString: true
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the express route link resource.
        macSecConfig:
          $ref: '#/components/schemas/ExpressRouteLinkMacSecConfig'
          description: MacSec configuration.
        name:
          type: string
          description: Name of child port resource that is unique among child port resources of the parent.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
      type: object
    ExpressRouteLinkListResult:
      title: ExpressRouteLink List Result
      description: Response for ListExpressRouteLinks API service call.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ExpressRouteLink'
          description: The list of ExpressRouteLink sub-resources.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      type: object
    ExpressRoutePortPropertiesFormat:
      title: ExpressRoutePort Properties
      description: Properties specific to ExpressRoutePort resources.
      properties:
        peeringLocation:
          type: string
          description: The name of the peering location that the ExpressRoutePort is mapped to physically.
        bandwidthInGbps:
          type: integer
          description: Bandwidth of procured ports in Gbps.
        provisionedBandwidthInGbps:
          readOnly: true
          type: number
          description: Aggregate Gbps of associated circuit bandwidths.
        mtu:
          readOnly: true
          type: string
          description: Maximum transmission unit of the physical port pair(s).
        encapsulation:
          type: string
          description: Encapsulation method on physical ports.
          enum:
            - Dot1Q
            - QinQ
          x-ms-enum:
            name: ExpressRoutePortsEncapsulation
            modelAsString: true
        etherType:
          readOnly: true
          type: string
          description: Ether type of the physical port.
        allocationDate:
          readOnly: true
          type: string
          description: Date of the physical port allocation to be used in Letter of Authorization.
        links:
          title: ExpressRouteLink Sub-Resources
          description: The set of physical links of the ExpressRoutePort resource.
          readOnly: false
          type: array
          items:
            $ref: '#/components/schemas/ExpressRouteLink'
        circuits:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: Reference the ExpressRoute circuit(s) that are provisioned on this ExpressRoutePort resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the express route port resource.
        resourceGuid:
          readOnly: true
          type: string
          description: The resource GUID property of the express route port resource.
      type: object
    ExpressRoutePort:
      title: ExpressRoute Port
      description: ExpressRoutePort resource definition.
      properties:
        peeringLocation:
          type: string
          description: The name of the peering location that the ExpressRoutePort is mapped to physically.
        bandwidthInGbps:
          type: integer
          description: Bandwidth of procured ports in Gbps.
        provisionedBandwidthInGbps:
          readOnly: true
          type: number
          description: Aggregate Gbps of associated circuit bandwidths.
        mtu:
          readOnly: true
          type: string
          description: Maximum transmission unit of the physical port pair(s).
        encapsulation:
          type: string
          description: Encapsulation method on physical ports.
          enum:
            - Dot1Q
            - QinQ
          x-ms-enum:
            name: ExpressRoutePortsEncapsulation
            modelAsString: true
        etherType:
          readOnly: true
          type: string
          description: Ether type of the physical port.
        allocationDate:
          readOnly: true
          type: string
          description: Date of the physical port allocation to be used in Letter of Authorization.
        links:
          title: ExpressRouteLink Sub-Resources
          description: The set of physical links of the ExpressRoutePort resource.
          readOnly: false
          type: array
          items:
            $ref: '#/components/schemas/ExpressRouteLink'
        circuits:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: Reference the ExpressRoute circuit(s) that are provisioned on this ExpressRoutePort resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the express route port resource.
        resourceGuid:
          readOnly: true
          type: string
          description: The resource GUID property of the express route port resource.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
          description: The identity of ExpressRoutePort, if configured.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    ExpressRoutePortListResult:
      title: ExpressRoute Port List Result
      description: Response for ListExpressRoutePorts API service call.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ExpressRoutePort'
          description: A list of ExpressRoutePort resources.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      type: object
    GenerateExpressRoutePortsLOARequest:
      description: The customer name to be printed on a letter of authorization.
      properties:
        customerName:
          type: string
          description: The customer name.
      required:
        - customerName
      type: object
    GenerateExpressRoutePortsLOAResult:
      description: Response for GenerateExpressRoutePortsLOA API service call.
      properties:
        encodedContent:
          type: string
          description: The content as a base64 encoded string.
      type: object
    ExpressRoutePortAuthorizationPropertiesFormat:
      type: object
      title: ExpressRoute Port Authorization Properties
      description: Properties of ExpressRoutePort Authorization.
      properties:
        authorizationKey:
          readOnly: true
          type: string
          description: The authorization key.
        authorizationUseStatus:
          readOnly: true
          type: string
          description: The authorization use status.
          enum:
            - Available
            - InUse
          x-ms-enum:
            name: ExpressRoutePortAuthorizationUseStatus
            modelAsString: true
        circuitResourceUri:
          readOnly: true
          type: string
          description: The reference to the ExpressRoute circuit resource using the authorization.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the authorization resource.
    ExpressRoutePortAuthorization:
      title: ExpressRoute Port Authorization
      description: ExpressRoutePort Authorization resource definition.
      properties:
        authorizationKey:
          readOnly: true
          type: string
          description: The authorization key.
        authorizationUseStatus:
          readOnly: true
          type: string
          description: The authorization use status.
          enum:
            - Available
            - InUse
          x-ms-enum:
            name: ExpressRoutePortAuthorizationUseStatus
            modelAsString: true
        circuitResourceUri:
          readOnly: true
          type: string
          description: The reference to the ExpressRoute circuit resource using the authorization.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the authorization resource.
        name:
          type: string
          description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          readOnly: true
          type: string
          description: Type of the resource.
        id:
          type: string
          description: Resource ID.
      type: object
    ExpressRoutePortAuthorizationListResult:
      type: object
      title: ExpressRoute Port Authorization List Result
      description: Response for ListExpressRoutePortAuthorizations API service call.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ExpressRoutePortAuthorization'
          description: The authorizations in an ExpressRoute Port.
        nextLink:
          type: string
          description: The URL to get the next set of results.
    ScopeConnection:
      description: The Scope Connections resource
      properties:
        tenantId:
          type: string
          description: Tenant ID.
        resourceId:
          type: string
          description: Resource ID.
        connectionState:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ConnectionState'
          description: Connection State
        description:
          type: string
          description: A description of the scope connection.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        systemData:
          readOnly: true
          description: The system metadata related to this resource.
          $ref: '#/components/schemas/SystemData'
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
      type: object
    ScopeConnectionProperties:
      type: object
      properties:
        tenantId:
          type: string
          description: Tenant ID.
        resourceId:
          type: string
          description: Resource ID.
        connectionState:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ConnectionState'
          description: Connection State
        description:
          type: string
          description: A description of the scope connection.
      description: Scope connection.
    ScopeConnectionListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ScopeConnection'
          description: List of scope connections.
        nextLink:
          type: string
          description: Gets the URL to get the next page of results.
      description: List of scope connections.
    ConnectionState:
      type: string
      readOnly: true
      description: The current scope connection state.
      enum:
        - Connected
        - Pending
        - Conflict
        - Revoked
        - Rejected
      x-ms-enum:
        name: ScopeConnectionState
        modelAsString: true
    ServiceEndpointPolicyDefinitionPropertiesFormat:
      properties:
        description:
          type: string
          description: A description for this rule. Restricted to 140 chars.
        service:
          type: string
          description: Service endpoint name.
        serviceResources:
          type: array
          items:
            type: string
          description: A list of service resources.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the service endpoint policy definition resource.
      description: Service Endpoint policy definition resource.
      type: object
    ServiceEndpointPolicyDefinition:
      description: Service Endpoint policy definitions.
      properties:
        description:
          type: string
          description: A description for this rule. Restricted to 140 chars.
        service:
          type: string
          description: Service endpoint name.
        serviceResources:
          type: array
          items:
            type: string
          description: A list of service resources.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the service endpoint policy definition resource.
        name:
          type: string
          description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          type: string
          description: The type of the resource.
        id:
          type: string
          description: Resource ID.
      type: object
    ServiceEndpointPolicyDefinitionListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ServiceEndpointPolicyDefinition'
          description: The service endpoint policy definition in a service endpoint policy.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: Response for ListServiceEndpointPolicyDefinition API service call. Retrieves all service endpoint policy definition that belongs to a service endpoint policy.
      type: object
    ServiceEndpointPolicyPropertiesFormat:
      properties:
        serviceEndpointPolicyDefinitions:
          type: array
          items:
            $ref: '#/components/schemas/ServiceEndpointPolicyDefinition'
          description: A collection of service endpoint policy definitions of the service endpoint policy.
        subnets:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Subnet'
          description: A collection of references to subnets.
        resourceGuid:
          type: string
          readOnly: true
          description: The resource GUID property of the service endpoint policy resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the service endpoint policy resource.
        serviceAlias:
          type: string
          description: The alias indicating if the policy belongs to a service
        contextualServiceEndpointPolicies:
          type: array
          items:
            type: string
          description: A collection of contextual service endpoint policy.
      description: Service Endpoint Policy resource.
      type: object
    ServiceEndpointPolicy:
      description: Service End point policy resource.
      properties:
        serviceEndpointPolicyDefinitions:
          type: array
          items:
            $ref: '#/components/schemas/ServiceEndpointPolicyDefinition'
          description: A collection of service endpoint policy definitions of the service endpoint policy.
        subnets:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Subnet'
          description: A collection of references to subnets.
        resourceGuid:
          type: string
          readOnly: true
          description: The resource GUID property of the service endpoint policy resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the service endpoint policy resource.
        serviceAlias:
          type: string
          description: The alias indicating if the policy belongs to a service
        contextualServiceEndpointPolicies:
          type: array
          items:
            type: string
          description: A collection of contextual service endpoint policy.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        kind:
          readOnly: true
          type: string
          description: Kind of service endpoint policy. This is metadata used for the Azure portal experience.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    ServiceEndpointPolicyListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ServiceEndpointPolicy'
          description: A list of ServiceEndpointPolicy resources.
        nextLink:
          readOnly: true
          type: string
          description: The URL to get the next set of results.
      description: Response for ListServiceEndpointPolicies API service call.
      type: object
    NetworkManagerEffectiveConnectivityConfigurationListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/EffectiveConnectivityConfiguration'
          description: Gets a page of NetworkManagerEffectiveConnectivityConfiguration
        skipToken:
          description: When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.
          type: string
      description: Result of the request to list networkManagerEffectiveConnectivityConfiguration. It contains a list of groups and a skiptoken to get the next set of results.
    NetworkManagerEffectiveSecurityAdminRulesListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/EffectiveBaseSecurityAdminRule'
          description: Gets a page of NetworkManagerEffectiveSecurityAdminRules
        skipToken:
          description: When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.
          type: string
      description: Result of the request to list networkManagerEffectiveSecurityAdminRules. It contains a list of groups and a skiptoken to get the next set of results.
    EffectiveConnectivityConfiguration:
      description: The network manager effective connectivity configuration
      properties:
        description:
          type: string
          description: A description of the connectivity configuration.
        connectivityTopology:
          type: string
          enum:
            - HubAndSpoke
            - Mesh
          x-ms-enum:
            name: ConnectivityTopology
            modelAsString: true
          description: Connectivity topology type.
        hubs:
          type: array
          x-ms-identifiers:
            - resourceId
          items:
            $ref: '#/components/schemas/Hub'
          description: List of hubItems
        isGlobal:
          type: string
          enum:
            - 'False'
            - 'True'
          x-ms-enum:
            name: IsGlobal
            modelAsString: true
          description: Flag if global mesh is supported.
        appliesToGroups:
          type: array
          x-ms-identifiers:
            - networkGroupId
          items:
            $ref: '#/components/schemas/connectivityGroupItem'
          description: Groups for configuration
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the connectivity configuration resource.
        deleteExistingPeering:
          type: string
          enum:
            - 'False'
            - 'True'
          x-ms-enum:
            name: DeleteExistingPeering
            modelAsString: true
          description: Flag if need to remove current existing peerings.
        id:
          type: string
          description: Connectivity configuration ID.
        configurationGroups:
          type: array
          items:
            $ref: '#/components/schemas/ConfigurationGroup'
          description: Effective configuration groups.
      type: object
    EffectiveBaseSecurityAdminRule:
      type: object
      properties:
        id:
          type: string
          description: Resource ID.
        configurationDescription:
          type: string
          description: A description of the security admin configuration.
        ruleCollectionDescription:
          type: string
          description: A description of the rule collection.
        ruleCollectionAppliesToGroups:
          type: array
          x-ms-identifiers:
            - networkGroupId
          items:
            $ref: '#/components/schemas/NetworkManagerSecurityGroupItem'
          description: Groups for rule collection
        ruleGroups:
          type: array
          items:
            $ref: '#/components/schemas/ConfigurationGroup'
          description: Effective configuration groups.
        kind:
          type: string
          description: Whether the rule is custom or default.
          enum:
            - Custom
            - Default
          x-ms-enum:
            name: EffectiveAdminRuleKind
            modelAsString: true
      required:
        - kind
      discriminator:
        propertyName: kind
      description: Network base admin rule.
    EffectiveSecurityAdminRule:
      description: Network admin rule.
      x-ms-discriminator-value: Custom
      properties:
        description:
          type: string
          description: A description for this rule. Restricted to 140 chars.
        protocol:
          type: string
          $ref: '#/components/schemas/RuleProtocol'
          description: Network protocol this rule applies to.
        sources:
          type: array
          x-ms-identifiers:
            - addressPrefix
          items:
            $ref: '#/components/schemas/AddressPrefixItem'
          description: The CIDR or source IP ranges.
        destinations:
          type: array
          x-ms-identifiers:
            - addressPrefix
          items:
            $ref: '#/components/schemas/AddressPrefixItem'
          description: The destination address prefixes. CIDR or destination IP ranges.
        sourcePortRanges:
          type: array
          items:
            type: string
            description: The source port.
          description: The source port ranges.
        destinationPortRanges:
          type: array
          items:
            type: string
            description: The destination port.
          description: The destination port ranges.
        access:
          $ref: '#/components/schemas/SecurityConfigurationRuleAccess'
          description: Indicates the access allowed for this particular rule
        priority:
          type: integer
          format: int32
          minimum: 1
          maximum: 4096
          description: The priority of the rule. The value can be between 1 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
        direction:
          $ref: '#/components/schemas/SecurityConfigurationRuleDirection'
          description: Indicates if the traffic matched against the rule in inbound or outbound.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the resource.
        id:
          type: string
          description: Resource ID.
        configurationDescription:
          type: string
          description: A description of the security admin configuration.
        ruleCollectionDescription:
          type: string
          description: A description of the rule collection.
        ruleCollectionAppliesToGroups:
          type: array
          x-ms-identifiers:
            - networkGroupId
          items:
            $ref: '#/components/schemas/NetworkManagerSecurityGroupItem'
          description: Groups for rule collection
        ruleGroups:
          type: array
          items:
            $ref: '#/components/schemas/ConfigurationGroup'
          description: Effective configuration groups.
        kind:
          type: string
          description: Whether the rule is custom or default.
          enum:
            - Custom
            - Default
          x-ms-enum:
            name: EffectiveAdminRuleKind
            modelAsString: true
      type: object
    EffectiveDefaultSecurityAdminRule:
      description: Network default admin rule.
      x-ms-discriminator-value: Default
      properties:
        description:
          type: string
          readOnly: true
          description: A description for this rule. Restricted to 140 chars.
        flag:
          type: string
          description: Default rule flag.
        protocol:
          type: string
          readOnly: true
          $ref: '#/components/schemas/RuleProtocol'
          description: Network protocol this rule applies to.
        sources:
          type: array
          x-ms-identifiers:
            - addressPrefix
          readOnly: true
          items:
            $ref: '#/components/schemas/AddressPrefixItem'
          description: The CIDR or source IP ranges.
        destinations:
          type: array
          x-ms-identifiers:
            - addressPrefix
          readOnly: true
          items:
            $ref: '#/components/schemas/AddressPrefixItem'
          description: The destination address prefixes. CIDR or destination IP ranges.
        sourcePortRanges:
          type: array
          readOnly: true
          items:
            type: string
            description: The source port.
          description: The source port ranges.
        destinationPortRanges:
          type: array
          readOnly: true
          items:
            type: string
            description: The destination port.
          description: The destination port ranges.
        access:
          $ref: '#/components/schemas/SecurityConfigurationRuleAccess'
          readOnly: true
          description: Indicates the access allowed for this particular rule
        priority:
          type: integer
          format: int32
          readOnly: true
          description: The priority of the rule. The value can be between 1 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
        direction:
          $ref: '#/components/schemas/SecurityConfigurationRuleDirection'
          readOnly: true
          description: Indicates if the traffic matched against the rule in inbound or outbound.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the resource.
        id:
          type: string
          description: Resource ID.
        configurationDescription:
          type: string
          description: A description of the security admin configuration.
        ruleCollectionDescription:
          type: string
          description: A description of the rule collection.
        ruleCollectionAppliesToGroups:
          type: array
          x-ms-identifiers:
            - networkGroupId
          items:
            $ref: '#/components/schemas/NetworkManagerSecurityGroupItem'
          description: Groups for rule collection
        ruleGroups:
          type: array
          items:
            $ref: '#/components/schemas/ConfigurationGroup'
          description: Effective configuration groups.
        kind:
          type: string
          description: Whether the rule is custom or default.
          enum:
            - Custom
            - Default
          x-ms-enum:
            name: EffectiveAdminRuleKind
            modelAsString: true
      type: object
    ConfigurationGroup:
      description: The network configuration group resource
      properties:
        description:
          type: string
          description: A description of the network group.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the scope assignment resource.
        id:
          type: string
          description: Network group ID.
      type: object
    ConnectivityConfigurationListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ConnectivityConfiguration'
          description: Gets a page of Connectivity Configurations
        nextLink:
          type: string
          description: Gets the URL to get the next page of results.
      description: Result of the request to list network manager connectivity configurations. It contains a list of configurations and a link to get the next set of results.
    ConnectivityConfiguration:
      description: The network manager connectivity configuration resource
      properties:
        description:
          type: string
          description: A description of the connectivity configuration.
        connectivityTopology:
          type: string
          enum:
            - HubAndSpoke
            - Mesh
          x-ms-enum:
            name: ConnectivityTopology
            modelAsString: true
          description: Connectivity topology type.
        hubs:
          type: array
          x-ms-identifiers:
            - resourceId
          items:
            $ref: '#/components/schemas/Hub'
          description: List of hubItems
        isGlobal:
          type: string
          enum:
            - 'False'
            - 'True'
          x-ms-enum:
            name: IsGlobal
            modelAsString: true
          description: Flag if global mesh is supported.
        appliesToGroups:
          type: array
          x-ms-identifiers:
            - networkGroupId
          items:
            $ref: '#/components/schemas/connectivityGroupItem'
          description: Groups for configuration
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the connectivity configuration resource.
        deleteExistingPeering:
          type: string
          enum:
            - 'False'
            - 'True'
          x-ms-enum:
            name: DeleteExistingPeering
            modelAsString: true
          description: Flag if need to remove current existing peerings.
        systemData:
          readOnly: true
          description: The system metadata related to this resource.
          $ref: '#/components/schemas/SystemData'
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
      type: object
    ConnectivityConfigurationProperties:
      type: object
      properties:
        description:
          type: string
          description: A description of the connectivity configuration.
        connectivityTopology:
          type: string
          enum:
            - HubAndSpoke
            - Mesh
          x-ms-enum:
            name: ConnectivityTopology
            modelAsString: true
          description: Connectivity topology type.
        hubs:
          type: array
          x-ms-identifiers:
            - resourceId
          items:
            $ref: '#/components/schemas/Hub'
          description: List of hubItems
        isGlobal:
          type: string
          enum:
            - 'False'
            - 'True'
          x-ms-enum:
            name: IsGlobal
            modelAsString: true
          description: Flag if global mesh is supported.
        appliesToGroups:
          type: array
          x-ms-identifiers:
            - networkGroupId
          items:
            $ref: '#/components/schemas/connectivityGroupItem'
          description: Groups for configuration
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the connectivity configuration resource.
        deleteExistingPeering:
          type: string
          enum:
            - 'False'
            - 'True'
          x-ms-enum:
            name: DeleteExistingPeering
            modelAsString: true
          description: Flag if need to remove current existing peerings.
      required:
        - connectivityTopology
        - appliesToGroups
      description: Properties of network manager connectivity configuration
    Hub:
      type: object
      properties:
        resourceId:
          type: string
          description: Resource Id.
        resourceType:
          type: string
          description: Resource Type.
      description: Hub Item.
    connectivityGroupItem:
      type: object
      properties:
        networkGroupId:
          type: string
          description: Network group Id.
        useHubGateway:
          type: string
          enum:
            - 'False'
            - 'True'
          x-ms-enum:
            name: UseHubGateway
            modelAsString: true
          description: Flag if need to use hub gateway.
        isGlobal:
          type: string
          enum:
            - 'False'
            - 'True'
          x-ms-enum:
            name: IsGlobal
            modelAsString: true
          description: Flag if global is supported.
        groupConnectivity:
          type: string
          enum:
            - None
            - DirectlyConnected
          x-ms-enum:
            name: GroupConnectivity
            modelAsString: true
          description: Group connectivity type.
      description: Connectivity group item.
      required:
        - networkGroupId
        - groupConnectivity
    OperationListResult:
      description: Result of the request to list Network operations. It contains a list of operations and a URL link to get the next set of results.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          description: List of Network operations supported by the Network resource provider.
        nextLink:
          type: string
          description: URL to get the next set of operation list results if there are any.
      type: object
    Operation:
      description: Network REST API operation definition.
      properties:
        serviceSpecification:
          description: Specification of the service.
          properties:
            metricSpecifications:
              type: array
              items:
                $ref: '#/components/schemas/MetricSpecification'
              description: Operation service specification.
            logSpecifications:
              type: array
              items:
                $ref: '#/components/schemas/LogSpecification'
              description: Operation log specification.
        name:
          description: 'Operation name: {provider}/{resource}/{operation}.'
          type: string
        display:
          description: Display metadata associated with the operation.
          properties:
            provider:
              description: 'Service provider: Microsoft Network.'
              type: string
            resource:
              description: Resource on which the operation is performed.
              type: string
            operation:
              description: 'Type of the operation: get, read, delete, etc.'
              type: string
            description:
              description: Description of the operation.
              type: string
        origin:
          description: Origin of the operation.
          type: string
      type: object
    OperationPropertiesFormat:
      description: Description of operation properties format.
      properties:
        serviceSpecification:
          description: Specification of the service.
          properties:
            metricSpecifications:
              type: array
              items:
                $ref: '#/components/schemas/MetricSpecification'
              description: Operation service specification.
            logSpecifications:
              type: array
              items:
                $ref: '#/components/schemas/LogSpecification'
              description: Operation log specification.
      type: object
    LogSpecification:
      description: Description of logging specification.
      properties:
        name:
          type: string
          description: The name of the specification.
        displayName:
          type: string
          description: The display name of the specification.
        blobDuration:
          type: string
          description: Duration of the blob.
      type: object
    MetricSpecification:
      description: Description of metrics specification.
      properties:
        name:
          type: string
          description: The name of the metric.
        displayName:
          type: string
          description: The display name of the metric.
        displayDescription:
          type: string
          description: The description of the metric.
        unit:
          type: string
          description: Units the metric to be displayed in.
        aggregationType:
          type: string
          description: The aggregation type.
        availabilities:
          type: array
          items:
            $ref: '#/components/schemas/Availability'
          description: List of availability.
        enableRegionalMdmAccount:
          type: boolean
          description: Whether regional MDM account enabled.
        fillGapWithZero:
          type: boolean
          description: Whether gaps would be filled with zeros.
        metricFilterPattern:
          type: string
          description: Pattern for the filter of the metric.
        dimensions:
          type: array
          items:
            $ref: '#/components/schemas/Dimension'
          description: List of dimensions.
        isInternal:
          type: boolean
          description: Whether the metric is internal.
        sourceMdmAccount:
          type: string
          description: The source MDM account.
        sourceMdmNamespace:
          type: string
          description: The source MDM namespace.
        resourceIdDimensionNameOverride:
          type: string
          description: The resource Id dimension name override.
      type: object
    Dimension:
      description: Dimension of the metric.
      properties:
        name:
          type: string
          description: The name of the dimension.
        displayName:
          type: string
          description: The display name of the dimension.
        internalName:
          type: string
          description: The internal name of the dimension.
      type: object
    Availability:
      description: Availability of the metric.
      properties:
        timeGrain:
          type: string
          description: The time grain of the availability.
        retention:
          type: string
          description: The retention of the availability.
        blobDuration:
          type: string
          description: Duration of the availability blob.
      type: object
    SecurityRulePropertiesFormat:
      properties:
        description:
          type: string
          description: A description for this rule. Restricted to 140 chars.
        protocol:
          type: string
          description: Network protocol this rule applies to.
          enum:
            - Tcp
            - Udp
            - Icmp
            - Esp
            - '*'
            - Ah
          x-ms-enum:
            name: SecurityRuleProtocol
            modelAsString: true
        sourcePortRange:
          type: string
          description: The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
        destinationPortRange:
          type: string
          description: The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
        sourceAddressPrefix:
          type: string
          description: The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
        sourceAddressPrefixes:
          type: array
          items:
            type: string
          description: The CIDR or source IP ranges.
        sourceApplicationSecurityGroups:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationSecurityGroup'
          description: The application security group specified as source.
        destinationAddressPrefix:
          type: string
          description: The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
        destinationAddressPrefixes:
          type: array
          items:
            type: string
          description: The destination address prefixes. CIDR or destination IP ranges.
        destinationApplicationSecurityGroups:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationSecurityGroup'
          description: The application security group specified as destination.
        sourcePortRanges:
          type: array
          items:
            type: string
            description: The source port.
          description: The source port ranges.
        destinationPortRanges:
          type: array
          items:
            type: string
            description: The destination port.
          description: The destination port ranges.
        access:
          $ref: '#/components/schemas/SecurityRuleAccess'
          description: The network traffic is allowed or denied.
        priority:
          type: integer
          format: int32
          description: The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
        direction:
          $ref: '#/components/schemas/SecurityRuleDirection'
          description: The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the security rule resource.
      required:
        - protocol
        - access
        - direction
      description: Security rule resource.
      type: object
    SecurityRule:
      description: Network security rule.
      properties:
        description:
          type: string
          description: A description for this rule. Restricted to 140 chars.
        protocol:
          type: string
          description: Network protocol this rule applies to.
          enum:
            - Tcp
            - Udp
            - Icmp
            - Esp
            - '*'
            - Ah
          x-ms-enum:
            name: SecurityRuleProtocol
            modelAsString: true
        sourcePortRange:
          type: string
          description: The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
        destinationPortRange:
          type: string
          description: The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
        sourceAddressPrefix:
          type: string
          description: The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
        sourceAddressPrefixes:
          type: array
          items:
            type: string
          description: The CIDR or source IP ranges.
        sourceApplicationSecurityGroups:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationSecurityGroup'
          description: The application security group specified as source.
        destinationAddressPrefix:
          type: string
          description: The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
        destinationAddressPrefixes:
          type: array
          items:
            type: string
          description: The destination address prefixes. CIDR or destination IP ranges.
        destinationApplicationSecurityGroups:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationSecurityGroup'
          description: The application security group specified as destination.
        sourcePortRanges:
          type: array
          items:
            type: string
            description: The source port.
          description: The source port ranges.
        destinationPortRanges:
          type: array
          items:
            type: string
            description: The destination port.
          description: The destination port ranges.
        access:
          $ref: '#/components/schemas/SecurityRuleAccess'
          description: The network traffic is allowed or denied.
        priority:
          type: integer
          format: int32
          description: The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
        direction:
          $ref: '#/components/schemas/SecurityRuleDirection'
          description: The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the security rule resource.
        name:
          type: string
          description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          type: string
          description: The type of the resource.
        id:
          type: string
          description: Resource ID.
      type: object
    SecurityRuleListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/SecurityRule'
          description: The security rules in a network security group.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: Response for ListSecurityRule API service call. Retrieves all security rules that belongs to a network security group.
      type: object
    NetworkSecurityGroupPropertiesFormat:
      properties:
        flushConnection:
          type: boolean
          description: When enabled, flows created from Network Security Group connections will be re-evaluated when rules are updates. Initial enablement will trigger re-evaluation.
        securityRules:
          type: array
          items:
            $ref: '#/components/schemas/SecurityRule'
          description: A collection of security rules of the network security group.
        defaultSecurityRules:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SecurityRule'
          description: The default security rules of network security group.
        networkInterfaces:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterface'
          description: A collection of references to network interfaces.
        subnets:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Subnet'
          description: A collection of references to subnets.
        flowLogs:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/FlowLog'
          description: A collection of references to flow log resources.
        resourceGuid:
          readOnly: true
          type: string
          description: The resource GUID property of the network security group resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the network security group resource.
      description: Network Security Group resource.
      type: object
    NetworkSecurityGroup:
      description: NetworkSecurityGroup resource.
      properties:
        flushConnection:
          type: boolean
          description: When enabled, flows created from Network Security Group connections will be re-evaluated when rules are updates. Initial enablement will trigger re-evaluation.
        securityRules:
          type: array
          items:
            $ref: '#/components/schemas/SecurityRule'
          description: A collection of security rules of the network security group.
        defaultSecurityRules:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SecurityRule'
          description: The default security rules of network security group.
        networkInterfaces:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterface'
          description: A collection of references to network interfaces.
        subnets:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Subnet'
          description: A collection of references to subnets.
        flowLogs:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/FlowLog'
          description: A collection of references to flow log resources.
        resourceGuid:
          readOnly: true
          type: string
          description: The resource GUID property of the network security group resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the network security group resource.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    NetworkSecurityGroupListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/NetworkSecurityGroup'
          description: A list of NetworkSecurityGroup resources.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: Response for ListNetworkSecurityGroups API service call.
      type: object
    SecurityRuleAccess:
      type: string
      description: Whether network traffic is allowed or denied.
      enum:
        - Allow
        - Deny
      x-ms-enum:
        name: SecurityRuleAccess
        modelAsString: true
    SecurityRuleDirection:
      type: string
      description: The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic.
      enum:
        - Inbound
        - Outbound
      x-ms-enum:
        name: SecurityRuleDirection
        modelAsString: true
    VirtualNetworkGatewayIPConfigurationPropertiesFormat:
      properties:
        privateIPAllocationMethod:
          $ref: '#/components/schemas/IPAllocationMethod'
          description: The private IP address allocation method.
        subnet:
          $ref: '#/components/schemas/SubResource'
          description: The reference to the subnet resource.
        publicIPAddress:
          $ref: '#/components/schemas/SubResource'
          description: The reference to the public IP resource.
        privateIPAddress:
          readOnly: true
          type: string
          description: Private IP Address for this gateway.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the virtual network gateway IP configuration resource.
      description: Properties of VirtualNetworkGatewayIPConfiguration.
      type: object
    VirtualNetworkGatewayIPConfiguration:
      description: IP configuration for virtual network gateway.
      properties:
        privateIPAllocationMethod:
          $ref: '#/components/schemas/IPAllocationMethod'
          description: The private IP address allocation method.
        subnet:
          $ref: '#/components/schemas/SubResource'
          description: The reference to the subnet resource.
        publicIPAddress:
          $ref: '#/components/schemas/SubResource'
          description: The reference to the public IP resource.
        privateIPAddress:
          readOnly: true
          type: string
          description: Private IP Address for this gateway.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the virtual network gateway IP configuration resource.
        name:
          type: string
          description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
      type: object
    VirtualNetworkGatewayNatRuleProperties:
      properties:
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the NAT Rule resource.
        type:
          type: string
          description: The type of NAT rule for VPN NAT.
          enum:
            - Static
            - Dynamic
          x-ms-enum:
            name: VpnNatRuleType
            modelAsString: true
        mode:
          type: string
          description: The Source NAT direction of a VPN NAT.
          enum:
            - EgressSnat
            - IngressSnat
          x-ms-enum:
            name: VpnNatRuleMode
            modelAsString: true
        internalMappings:
          type: array
          items:
            $ref: '#/components/schemas/VpnNatRuleMapping'
          description: The private IP address internal mapping for NAT.
        externalMappings:
          type: array
          items:
            $ref: '#/components/schemas/VpnNatRuleMapping'
          description: The private IP address external mapping for NAT.
        ipConfigurationId:
          type: string
          description: The IP Configuration ID this NAT rule applies to.
      description: Parameters for VirtualNetworkGatewayNatRule.
      type: object
    VirtualNetworkGatewayNatRule:
      description: VirtualNetworkGatewayNatRule Resource.
      properties:
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the NAT Rule resource.
        type:
          readOnly: true
          type: string
          description: Resource type.
        mode:
          type: string
          description: The Source NAT direction of a VPN NAT.
          enum:
            - EgressSnat
            - IngressSnat
          x-ms-enum:
            name: VpnNatRuleMode
            modelAsString: true
        internalMappings:
          type: array
          items:
            $ref: '#/components/schemas/VpnNatRuleMapping'
          description: The private IP address internal mapping for NAT.
        externalMappings:
          type: array
          items:
            $ref: '#/components/schemas/VpnNatRuleMapping'
          description: The private IP address external mapping for NAT.
        ipConfigurationId:
          type: string
          description: The IP Configuration ID this NAT rule applies to.
        name:
          type: string
          description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
        etag:
          type: string
          readOnly: true
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
      type: object
    VirtualNetworkGatewayPropertiesFormat:
      properties:
        ipConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/VirtualNetworkGatewayIPConfiguration'
          description: IP configurations for virtual network gateway.
        gatewayType:
          type: string
          description: The type of this virtual network gateway.
          enum:
            - Vpn
            - ExpressRoute
            - LocalGateway
          x-ms-enum:
            name: VirtualNetworkGatewayType
            modelAsString: true
        vpnType:
          type: string
          description: The type of this virtual network gateway.
          enum:
            - PolicyBased
            - RouteBased
          x-ms-enum:
            name: VpnType
            modelAsString: true
        vpnGatewayGeneration:
          type: string
          description: The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.
          enum:
            - None
            - Generation1
            - Generation2
          x-ms-enum:
            name: VpnGatewayGeneration
            modelAsString: true
        enableBgp:
          type: boolean
          description: Whether BGP is enabled for this virtual network gateway or not.
        enablePrivateIpAddress:
          type: boolean
          description: Whether private IP needs to be enabled on this gateway for connections or not.
        activeActive:
          type: boolean
          description: ActiveActive flag.
        disableIPSecReplayProtection:
          type: boolean
          description: disableIPSecReplayProtection flag.
        gatewayDefaultSite:
          $ref: '#/components/schemas/SubResource'
          description: The reference to the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
        sku:
          $ref: '#/components/schemas/VirtualNetworkGatewaySku'
          description: The reference to the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
        vpnClientConfiguration:
          $ref: '#/components/schemas/VpnClientConfiguration'
          description: The reference to the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
        bgpSettings:
          $ref: '#/components/schemas/BgpSettings'
          description: Virtual network gateway's BGP speaker settings.
        customRoutes:
          $ref: '#/components/schemas/AddressSpace'
          description: The reference to the address space resource which represents the custom routes address space specified by the customer for virtual network gateway and VpnClient.
        resourceGuid:
          readOnly: true
          type: string
          description: The resource GUID property of the virtual network gateway resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the virtual network gateway resource.
        enableDnsForwarding:
          type: boolean
          description: Whether dns forwarding is enabled or not.
        inboundDnsForwardingEndpoint:
          type: string
          readOnly: true
          description: The IP address allocated by the gateway to which dns requests can be sent.
        vNetExtendedLocationResourceId:
          type: string
          description: Customer vnet resource id. VirtualNetworkGateway of type local gateway is associated with the customer vnet.
        natRules:
          type: array
          items:
            $ref: '#/components/schemas/VirtualNetworkGatewayNatRule'
          description: NatRules for virtual network gateway.
        enableBgpRouteTranslationForNat:
          type: boolean
          description: EnableBgpRouteTranslationForNat flag.
      description: VirtualNetworkGateway properties.
      type: object
    VpnClientRootCertificatePropertiesFormat:
      properties:
        publicCertData:
          type: string
          description: The certificate public data.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the VPN client root certificate resource.
      required:
        - publicCertData
      description: Properties of SSL certificates of application gateway.
      type: object
    VpnClientRootCertificate:
      required:
        - properties
      description: VPN client root certificate of virtual network gateway.
      properties:
        publicCertData:
          type: string
          description: The certificate public data.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the VPN client root certificate resource.
        name:
          type: string
          description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
      type: object
    VpnClientRevokedCertificatePropertiesFormat:
      properties:
        thumbprint:
          type: string
          description: The revoked VPN client certificate thumbprint.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the VPN client revoked certificate resource.
      description: Properties of the revoked VPN client certificate of virtual network gateway.
      type: object
    VpnClientRevokedCertificate:
      description: VPN client revoked certificate of virtual network gateway.
      properties:
        thumbprint:
          type: string
          description: The revoked VPN client certificate thumbprint.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the VPN client revoked certificate resource.
        name:
          type: string
          description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
      type: object
    RadiusServer:
      properties:
        radiusServerAddress:
          type: string
          description: The address of this radius server.
        radiusServerScore:
          type: integer
          format: int64
          description: The initial score assigned to this radius server.
        radiusServerSecret:
          type: string
          description: The secret used for this radius server.
      required:
        - radiusServerAddress
      description: Radius Server Settings.
      type: object
    VpnClientConfiguration:
      properties:
        vpnClientAddressPool:
          $ref: '#/components/schemas/AddressSpace'
          description: The reference to the address space resource which represents Address space for P2S VpnClient.
        vpnClientRootCertificates:
          type: array
          items:
            $ref: '#/components/schemas/VpnClientRootCertificate'
          description: VpnClientRootCertificate for virtual network gateway.
        vpnClientRevokedCertificates:
          type: array
          items:
            $ref: '#/components/schemas/VpnClientRevokedCertificate'
          description: VpnClientRevokedCertificate for Virtual network gateway.
        vpnClientProtocols:
          type: array
          items:
            type: string
            description: VPN client protocol enabled for the virtual network gateway.
            enum:
              - IkeV2
              - SSTP
              - OpenVPN
            x-ms-enum:
              name: VpnClientProtocol
              modelAsString: true
          description: VpnClientProtocols for Virtual network gateway.
        vpnAuthenticationTypes:
          type: array
          items:
            type: string
            description: VPN authentication types enabled for the virtual network gateway.
            enum:
              - Certificate
              - Radius
              - AAD
            x-ms-enum:
              name: VpnAuthenticationType
              modelAsString: true
          description: VPN authentication types for the virtual network gateway..
        vpnClientIpsecPolicies:
          type: array
          items:
            $ref: '#/components/schemas/IpsecPolicy'
          description: VpnClientIpsecPolicies for virtual network gateway P2S client.
        radiusServerAddress:
          type: string
          description: The radius server address property of the VirtualNetworkGateway resource for vpn client connection.
        radiusServerSecret:
          type: string
          description: The radius secret property of the VirtualNetworkGateway resource for vpn client connection.
        radiusServers:
          type: array
          items:
            $ref: '#/components/schemas/RadiusServer'
          description: The radiusServers property for multiple radius server configuration.
        aadTenant:
          type: string
          description: The AADTenant property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
        aadAudience:
          type: string
          description: The AADAudience property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
        aadIssuer:
          type: string
          description: The AADIssuer property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
      description: VpnClientConfiguration for P2S client.
      type: object
    VirtualNetworkGatewaySku:
      properties:
        name:
          type: string
          description: Gateway SKU name.
          enum:
            - Basic
            - HighPerformance
            - Standard
            - UltraPerformance
            - VpnGw1
            - VpnGw2
            - VpnGw3
            - VpnGw4
            - VpnGw5
            - VpnGw1AZ
            - VpnGw2AZ
            - VpnGw3AZ
            - VpnGw4AZ
            - VpnGw5AZ
            - ErGw1AZ
            - ErGw2AZ
            - ErGw3AZ
          x-ms-enum:
            name: VirtualNetworkGatewaySkuName
            modelAsString: true
        tier:
          type: string
          description: Gateway SKU tier.
          enum:
            - Basic
            - HighPerformance
            - Standard
            - UltraPerformance
            - VpnGw1
            - VpnGw2
            - VpnGw3
            - VpnGw4
            - VpnGw5
            - VpnGw1AZ
            - VpnGw2AZ
            - VpnGw3AZ
            - VpnGw4AZ
            - VpnGw5AZ
            - ErGw1AZ
            - ErGw2AZ
            - ErGw3AZ
          x-ms-enum:
            name: VirtualNetworkGatewaySkuTier
            modelAsString: true
        capacity:
          readOnly: true
          type: integer
          format: int32
          description: The capacity.
      description: VirtualNetworkGatewaySku details.
      type: object
    BgpSettings:
      properties:
        asn:
          type: integer
          format: int64
          minimum: 0
          maximum: 4294967295
          description: The BGP speaker's ASN.
        bgpPeeringAddress:
          type: string
          description: The BGP peering address and BGP identifier of this BGP speaker.
        peerWeight:
          type: integer
          format: int32
          description: The weight added to routes learned from this BGP speaker.
        bgpPeeringAddresses:
          type: array
          items:
            $ref: '#/components/schemas/IPConfigurationBgpPeeringAddress'
          description: BGP peering address with IP configuration ID for virtual network gateway.
      description: BGP settings details.
      type: object
    BgpPeerStatus:
      properties:
        localAddress:
          type: string
          readOnly: true
          description: The virtual network gateway's local address.
        neighbor:
          type: string
          readOnly: true
          description: The remote BGP peer.
        asn:
          type: integer
          format: int64
          readOnly: true
          minimum: 0
          maximum: 4294967295
          description: The autonomous system number of the remote BGP peer.
        state:
          type: string
          readOnly: true
          description: The BGP peer state.
          enum:
            - Unknown
            - Stopped
            - Idle
            - Connecting
            - Connected
          x-ms-enum:
            name: BgpPeerState
            modelAsString: true
        connectedDuration:
          type: string
          readOnly: true
          description: For how long the peering has been up.
        routesReceived:
          type: integer
          format: int64
          readOnly: true
          description: The number of routes learned from this peer.
        messagesSent:
          type: integer
          format: int64
          readOnly: true
          description: The number of BGP messages sent.
        messagesReceived:
          type: integer
          format: int64
          readOnly: true
          description: The number of BGP messages received.
      description: BGP peer status details.
      type: object
    GatewayRoute:
      properties:
        localAddress:
          type: string
          readOnly: true
          description: The gateway's local address.
        network:
          type: string
          readOnly: true
          description: The route's network prefix.
        nextHop:
          type: string
          readOnly: true
          description: The route's next hop.
        sourcePeer:
          type: string
          readOnly: true
          description: The peer this route was learned from.
        origin:
          type: string
          readOnly: true
          description: The source this route was learned from.
        asPath:
          type: string
          readOnly: true
          description: The route's AS path sequence.
        weight:
          type: integer
          format: int32
          readOnly: true
          description: The route's weight.
      description: Gateway routing details.
      type: object
    VirtualNetworkGateway:
      required:
        - properties
      description: A common class for general resource information.
      properties:
        ipConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/VirtualNetworkGatewayIPConfiguration'
          description: IP configurations for virtual network gateway.
        gatewayType:
          type: string
          description: The type of this virtual network gateway.
          enum:
            - Vpn
            - ExpressRoute
            - LocalGateway
          x-ms-enum:
            name: VirtualNetworkGatewayType
            modelAsString: true
        vpnType:
          type: string
          description: The type of this virtual network gateway.
          enum:
            - PolicyBased
            - RouteBased
          x-ms-enum:
            name: VpnType
            modelAsString: true
        vpnGatewayGeneration:
          type: string
          description: The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.
          enum:
            - None
            - Generation1
            - Generation2
          x-ms-enum:
            name: VpnGatewayGeneration
            modelAsString: true
        enableBgp:
          type: boolean
          description: Whether BGP is enabled for this virtual network gateway or not.
        enablePrivateIpAddress:
          type: boolean
          description: Whether private IP needs to be enabled on this gateway for connections or not.
        activeActive:
          type: boolean
          description: ActiveActive flag.
        disableIPSecReplayProtection:
          type: boolean
          description: disableIPSecReplayProtection flag.
        gatewayDefaultSite:
          $ref: '#/components/schemas/SubResource'
          description: The reference to the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
        sku:
          $ref: '#/components/schemas/VirtualNetworkGatewaySku'
          description: The reference to the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
        vpnClientConfiguration:
          $ref: '#/components/schemas/VpnClientConfiguration'
          description: The reference to the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
        bgpSettings:
          $ref: '#/components/schemas/BgpSettings'
          description: Virtual network gateway's BGP speaker settings.
        customRoutes:
          $ref: '#/components/schemas/AddressSpace'
          description: The reference to the address space resource which represents the custom routes address space specified by the customer for virtual network gateway and VpnClient.
        resourceGuid:
          readOnly: true
          type: string
          description: The resource GUID property of the virtual network gateway resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the virtual network gateway resource.
        enableDnsForwarding:
          type: boolean
          description: Whether dns forwarding is enabled or not.
        inboundDnsForwardingEndpoint:
          type: string
          readOnly: true
          description: The IP address allocated by the gateway to which dns requests can be sent.
        vNetExtendedLocationResourceId:
          type: string
          description: Customer vnet resource id. VirtualNetworkGateway of type local gateway is associated with the customer vnet.
        natRules:
          type: array
          items:
            $ref: '#/components/schemas/VirtualNetworkGatewayNatRule'
          description: NatRules for virtual network gateway.
        enableBgpRouteTranslationForNat:
          type: boolean
          description: EnableBgpRouteTranslationForNat flag.
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location of type local virtual network gateway.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    VpnClientParameters:
      properties:
        processorArchitecture:
          type: string
          description: VPN client Processor Architecture.
          enum:
            - Amd64
            - X86
          x-ms-enum:
            name: ProcessorArchitecture
            modelAsString: true
        authenticationMethod:
          $ref: '#/components/schemas/AuthenticationMethod'
          description: VPN client authentication method.
        radiusServerAuthCertificate:
          type: string
          description: The public certificate data for the radius server authentication certificate as a Base-64 encoded string. Required only if external radius authentication has been configured with EAPTLS authentication.
        clientRootCertificates:
          type: array
          items:
            type: string
          description: A list of client root certificates public certificate data encoded as Base-64 strings. Optional parameter for external radius based authentication with EAPTLS.
      description: Vpn Client Parameters for package generation.
      type: object
    VirtualNetworkGatewayListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VirtualNetworkGateway'
          description: A list of VirtualNetworkGateway resources that exists in a resource group.
        nextLink:
          readOnly: true
          type: string
          description: The URL to get the next set of results.
      description: Response for the ListVirtualNetworkGateways API service call.
      type: object
    ListVirtualNetworkGatewayNatRulesResult:
      description: Result of the request to list all nat rules to a virtual network gateway. It contains a list of Nat rules and a URL nextLink to get the next set of results.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VirtualNetworkGatewayNatRule'
          description: List of Nat Rules.
        nextLink:
          type: string
          description: URL to get the next set of operation list results if there are any.
      type: object
    BgpPeerStatusListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/BgpPeerStatus'
          description: List of BGP peers.
      description: Response for list BGP peer status API service call.
      type: object
    GatewayRouteListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/GatewayRoute'
          description: List of gateway routes.
      description: List of virtual network gateway routes.
      type: object
    TunnelConnectionHealth:
      properties:
        tunnel:
          readOnly: true
          type: string
          description: Tunnel name.
        connectionStatus:
          readOnly: true
          $ref: '#/components/schemas/VirtualNetworkGatewayConnectionStatus'
          description: Virtual Network Gateway connection status.
        ingressBytesTransferred:
          readOnly: true
          type: integer
          format: int64
          description: The Ingress Bytes Transferred in this connection.
        egressBytesTransferred:
          readOnly: true
          type: integer
          format: int64
          description: The Egress Bytes Transferred in this connection.
        lastConnectionEstablishedUtcTime:
          readOnly: true
          type: string
          description: The time at which connection was established in Utc format.
      description: VirtualNetworkGatewayConnection properties.
      type: object
    VirtualNetworkGatewayConnectionPropertiesFormat:
      properties:
        authorizationKey:
          type: string
          description: The authorizationKey.
        virtualNetworkGateway1:
          $ref: '#/components/schemas/VirtualNetworkGateway'
          description: The reference to virtual network gateway resource.
        virtualNetworkGateway2:
          $ref: '#/components/schemas/VirtualNetworkGateway'
          description: The reference to virtual network gateway resource.
        localNetworkGateway2:
          $ref: '#/components/schemas/LocalNetworkGateway'
          description: The reference to local network gateway resource.
        ingressNatRules:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: List of ingress NatRules.
        egressNatRules:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: List of egress NatRules.
        connectionType:
          $ref: '#/components/schemas/VirtualNetworkGatewayConnectionType'
          description: Gateway connection type.
        connectionProtocol:
          $ref: '#/components/schemas/ConnectionProtocol'
          description: Connection protocol used for this connection.
        routingWeight:
          type: integer
          format: int32
          description: The routing weight.
        dpdTimeoutSeconds:
          type: integer
          format: int32
          description: The dead peer detection timeout of this connection in seconds.
        connectionMode:
          $ref: '#/components/schemas/VirtualNetworkGatewayConnectionMode'
          description: The connection mode for this connection.
        sharedKey:
          type: string
          description: The IPSec shared key.
        connectionStatus:
          readOnly: true
          $ref: '#/components/schemas/VirtualNetworkGatewayConnectionStatus'
          description: Virtual Network Gateway connection status.
        tunnelConnectionStatus:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/TunnelConnectionHealth'
          description: Collection of all tunnels' connection health status.
        egressBytesTransferred:
          readOnly: true
          type: integer
          format: int64
          description: The egress bytes transferred in this connection.
        ingressBytesTransferred:
          readOnly: true
          type: integer
          format: int64
          description: The ingress bytes transferred in this connection.
        peer:
          $ref: '#/components/schemas/SubResource'
          description: The reference to peerings resource.
        enableBgp:
          type: boolean
          description: EnableBgp flag.
        gatewayCustomBgpIpAddresses:
          type: array
          items:
            $ref: '#/components/schemas/GatewayCustomBgpIpAddressIpConfiguration'
          description: GatewayCustomBgpIpAddresses to be used for virtual network gateway Connection.
          x-ms-identifiers: []
        useLocalAzureIpAddress:
          type: boolean
          description: Use private local Azure IP for the connection.
        usePolicyBasedTrafficSelectors:
          type: boolean
          description: Enable policy-based traffic selectors.
        ipsecPolicies:
          type: array
          items:
            $ref: '#/components/schemas/IpsecPolicy'
          description: The IPSec Policies to be considered by this connection.
        trafficSelectorPolicies:
          type: array
          items:
            $ref: '#/components/schemas/TrafficSelectorPolicy'
          description: The Traffic Selector Policies to be considered by this connection.
        resourceGuid:
          readOnly: true
          type: string
          description: The resource GUID property of the virtual network gateway connection resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the virtual network gateway connection resource.
        expressRouteGatewayBypass:
          type: boolean
          description: Bypass ExpressRoute Gateway for data forwarding.
      required:
        - virtualNetworkGateway1
        - connectionType
      description: VirtualNetworkGatewayConnection properties.
      type: object
    VirtualNetworkGatewayConnection:
      required:
        - properties
      description: A common class for general resource information.
      properties:
        authorizationKey:
          type: string
          description: The authorizationKey.
        virtualNetworkGateway1:
          $ref: '#/components/schemas/VirtualNetworkGateway'
          description: The reference to virtual network gateway resource.
        virtualNetworkGateway2:
          $ref: '#/components/schemas/VirtualNetworkGateway'
          description: The reference to virtual network gateway resource.
        localNetworkGateway2:
          $ref: '#/components/schemas/LocalNetworkGateway'
          description: The reference to local network gateway resource.
        ingressNatRules:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: List of ingress NatRules.
        egressNatRules:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: List of egress NatRules.
        connectionType:
          $ref: '#/components/schemas/VirtualNetworkGatewayConnectionType'
          description: Gateway connection type.
        connectionProtocol:
          $ref: '#/components/schemas/ConnectionProtocol'
          description: Connection protocol used for this connection.
        routingWeight:
          type: integer
          format: int32
          description: The routing weight.
        dpdTimeoutSeconds:
          type: integer
          format: int32
          description: The dead peer detection timeout of this connection in seconds.
        connectionMode:
          $ref: '#/components/schemas/VirtualNetworkGatewayConnectionMode'
          description: The connection mode for this connection.
        sharedKey:
          type: string
          description: The IPSec shared key.
        connectionStatus:
          readOnly: true
          $ref: '#/components/schemas/VirtualNetworkGatewayConnectionStatus'
          description: Virtual Network Gateway connection status.
        tunnelConnectionStatus:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/TunnelConnectionHealth'
          description: Collection of all tunnels' connection health status.
        egressBytesTransferred:
          readOnly: true
          type: integer
          format: int64
          description: The egress bytes transferred in this connection.
        ingressBytesTransferred:
          readOnly: true
          type: integer
          format: int64
          description: The ingress bytes transferred in this connection.
        peer:
          $ref: '#/components/schemas/SubResource'
          description: The reference to peerings resource.
        enableBgp:
          type: boolean
          description: EnableBgp flag.
        gatewayCustomBgpIpAddresses:
          type: array
          items:
            $ref: '#/components/schemas/GatewayCustomBgpIpAddressIpConfiguration'
          description: GatewayCustomBgpIpAddresses to be used for virtual network gateway Connection.
          x-ms-identifiers: []
        useLocalAzureIpAddress:
          type: boolean
          description: Use private local Azure IP for the connection.
        usePolicyBasedTrafficSelectors:
          type: boolean
          description: Enable policy-based traffic selectors.
        ipsecPolicies:
          type: array
          items:
            $ref: '#/components/schemas/IpsecPolicy'
          description: The IPSec Policies to be considered by this connection.
        trafficSelectorPolicies:
          type: array
          items:
            $ref: '#/components/schemas/TrafficSelectorPolicy'
          description: The Traffic Selector Policies to be considered by this connection.
        resourceGuid:
          readOnly: true
          type: string
          description: The resource GUID property of the virtual network gateway connection resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the virtual network gateway connection resource.
        expressRouteGatewayBypass:
          type: boolean
          description: Bypass ExpressRoute Gateway for data forwarding.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    VirtualNetworkGatewayConnectionListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VirtualNetworkGatewayConnection'
          description: A list of VirtualNetworkGatewayConnection resources that exists in a resource group.
        nextLink:
          readOnly: true
          type: string
          description: The URL to get the next set of results.
      description: Response for the ListVirtualNetworkGatewayConnections API service call.
      type: object
    ConnectionResetSharedKey:
      properties:
        keyLength:
          type: integer
          format: int32
          minimum: 1
          maximum: 128
          description: The virtual network connection reset shared key length, should between 1 and 128.
      required:
        - keyLength
      description: The virtual network connection reset shared key.
      type: object
    ConnectionSharedKey:
      required:
        - value
      description: Response for GetConnectionSharedKey API service call.
      properties:
        value:
          type: string
          description: The virtual network connection shared key value.
        id:
          type: string
          description: Resource ID.
      type: object
    IpsecPolicy:
      properties:
        saLifeTimeSeconds:
          type: integer
          format: int32
          description: The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel.
        saDataSizeKilobytes:
          type: integer
          format: int32
          description: The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel.
        ipsecEncryption:
          $ref: '#/components/schemas/IpsecEncryption'
          description: The IPSec encryption algorithm (IKE phase 1).
        ipsecIntegrity:
          $ref: '#/components/schemas/IpsecIntegrity'
          description: The IPSec integrity algorithm (IKE phase 1).
        ikeEncryption:
          $ref: '#/components/schemas/IkeEncryption'
          description: The IKE encryption algorithm (IKE phase 2).
        ikeIntegrity:
          $ref: '#/components/schemas/IkeIntegrity'
          description: The IKE integrity algorithm (IKE phase 2).
        dhGroup:
          $ref: '#/components/schemas/DhGroup'
          description: The DH Group used in IKE Phase 1 for initial SA.
        pfsGroup:
          $ref: '#/components/schemas/PfsGroup'
          description: The Pfs Group used in IKE Phase 2 for new child SA.
      required:
        - saLifeTimeSeconds
        - saDataSizeKilobytes
        - ipsecEncryption
        - ipsecIntegrity
        - ikeEncryption
        - ikeIntegrity
        - dhGroup
        - pfsGroup
      description: An IPSec Policy configuration for a virtual network gateway connection.
      type: object
    TrafficSelectorPolicy:
      properties:
        localAddressRanges:
          type: array
          items:
            type: string
          description: A collection of local address spaces in CIDR format.
        remoteAddressRanges:
          type: array
          items:
            type: string
          description: A collection of remote address spaces in CIDR format.
      required:
        - localAddressRanges
        - remoteAddressRanges
      description: An traffic selector policy for a virtual network gateway connection.
      type: object
    ConnectionProtocol:
      type: string
      description: Gateway connection protocol.
      enum:
        - IKEv2
        - IKEv1
      x-ms-enum:
        name: VirtualNetworkGatewayConnectionProtocol
        modelAsString: true
    VpnClientIPsecParameters:
      properties:
        saLifeTimeSeconds:
          type: integer
          format: int32
          description: The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for P2S client.
        saDataSizeKilobytes:
          type: integer
          format: int32
          description: The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for P2S client..
        ipsecEncryption:
          $ref: '#/components/schemas/IpsecEncryption'
          description: The IPSec encryption algorithm (IKE phase 1).
        ipsecIntegrity:
          $ref: '#/components/schemas/IpsecIntegrity'
          description: The IPSec integrity algorithm (IKE phase 1).
        ikeEncryption:
          $ref: '#/components/schemas/IkeEncryption'
          description: The IKE encryption algorithm (IKE phase 2).
        ikeIntegrity:
          $ref: '#/components/schemas/IkeIntegrity'
          description: The IKE integrity algorithm (IKE phase 2).
        dhGroup:
          $ref: '#/components/schemas/DhGroup'
          description: The DH Group used in IKE Phase 1 for initial SA.
        pfsGroup:
          $ref: '#/components/schemas/PfsGroup'
          description: The Pfs Group used in IKE Phase 2 for new child SA.
      required:
        - saLifeTimeSeconds
        - saDataSizeKilobytes
        - ipsecEncryption
        - ipsecIntegrity
        - ikeEncryption
        - ikeIntegrity
        - dhGroup
        - pfsGroup
      description: An IPSec parameters for a virtual network gateway P2S connection.
      type: object
    LocalNetworkGatewayPropertiesFormat:
      properties:
        localNetworkAddressSpace:
          $ref: '#/components/schemas/AddressSpace'
          description: Local network site address space.
        gatewayIpAddress:
          type: string
          description: IP address of local network gateway.
        fqdn:
          type: string
          description: FQDN of local network gateway.
        bgpSettings:
          $ref: '#/components/schemas/BgpSettings'
          description: Local network gateway's BGP speaker settings.
        resourceGuid:
          readOnly: true
          type: string
          description: The resource GUID property of the local network gateway resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the local network gateway resource.
      description: LocalNetworkGateway properties.
      type: object
    LocalNetworkGateway:
      required:
        - properties
      description: A common class for general resource information.
      properties:
        localNetworkAddressSpace:
          $ref: '#/components/schemas/AddressSpace'
          description: Local network site address space.
        gatewayIpAddress:
          type: string
          description: IP address of local network gateway.
        fqdn:
          type: string
          description: FQDN of local network gateway.
        bgpSettings:
          $ref: '#/components/schemas/BgpSettings'
          description: Local network gateway's BGP speaker settings.
        resourceGuid:
          readOnly: true
          type: string
          description: The resource GUID property of the local network gateway resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the local network gateway resource.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    LocalNetworkGatewayListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/LocalNetworkGateway'
          description: A list of local network gateways that exists in a resource group.
        nextLink:
          readOnly: true
          type: string
          description: The URL to get the next set of results.
      description: Response for ListLocalNetworkGateways API service call.
      type: object
    VirtualNetworkConnectionGatewayReference:
      properties:
        id:
          type: string
          description: The ID of VirtualNetworkGateway or LocalNetworkGateway resource.
      required:
        - id
      description: A reference to VirtualNetworkGateway or LocalNetworkGateway resource.
      type: object
    VirtualNetworkGatewayConnectionListEntityPropertiesFormat:
      properties:
        authorizationKey:
          type: string
          description: The authorizationKey.
        virtualNetworkGateway1:
          $ref: '#/components/schemas/VirtualNetworkConnectionGatewayReference'
          description: The reference to virtual network gateway resource.
        virtualNetworkGateway2:
          $ref: '#/components/schemas/VirtualNetworkConnectionGatewayReference'
          description: The reference to virtual network gateway resource.
        localNetworkGateway2:
          $ref: '#/components/schemas/VirtualNetworkConnectionGatewayReference'
          description: The reference to local network gateway resource.
        connectionType:
          $ref: '#/components/schemas/VirtualNetworkGatewayConnectionType'
          description: Gateway connection type.
        connectionProtocol:
          $ref: '#/components/schemas/ConnectionProtocol'
          description: Connection protocol used for this connection.
        routingWeight:
          type: integer
          format: int32
          description: The routing weight.
        connectionMode:
          $ref: '#/components/schemas/VirtualNetworkGatewayConnectionMode'
          description: The connection mode for this connection.
        sharedKey:
          type: string
          description: The IPSec shared key.
        connectionStatus:
          readOnly: true
          $ref: '#/components/schemas/VirtualNetworkGatewayConnectionStatus'
          description: Virtual Network Gateway connection status.
        tunnelConnectionStatus:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/TunnelConnectionHealth'
          description: Collection of all tunnels' connection health status.
        egressBytesTransferred:
          readOnly: true
          type: integer
          format: int64
          description: The egress bytes transferred in this connection.
        ingressBytesTransferred:
          readOnly: true
          type: integer
          format: int64
          description: The ingress bytes transferred in this connection.
        peer:
          $ref: '#/components/schemas/SubResource'
          description: The reference to peerings resource.
        enableBgp:
          type: boolean
          description: EnableBgp flag.
        gatewayCustomBgpIpAddresses:
          type: array
          items:
            $ref: '#/components/schemas/GatewayCustomBgpIpAddressIpConfiguration'
          description: GatewayCustomBgpIpAddresses to be used for virtual network gateway Connection.
          x-ms-identifiers: []
        usePolicyBasedTrafficSelectors:
          type: boolean
          description: Enable policy-based traffic selectors.
        ipsecPolicies:
          type: array
          items:
            $ref: '#/components/schemas/IpsecPolicy'
          description: The IPSec Policies to be considered by this connection.
        trafficSelectorPolicies:
          type: array
          items:
            $ref: '#/components/schemas/TrafficSelectorPolicy'
          description: The Traffic Selector Policies to be considered by this connection.
        resourceGuid:
          readOnly: true
          type: string
          description: The resource GUID property of the virtual network gateway connection resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the virtual network gateway connection resource.
        expressRouteGatewayBypass:
          type: boolean
          description: Bypass ExpressRoute Gateway for data forwarding.
      required:
        - virtualNetworkGateway1
        - connectionType
      description: VirtualNetworkGatewayConnection properties.
      type: object
    VirtualNetworkGatewayConnectionListEntity:
      required:
        - properties
      description: A common class for general resource information.
      properties:
        authorizationKey:
          type: string
          description: The authorizationKey.
        virtualNetworkGateway1:
          $ref: '#/components/schemas/VirtualNetworkConnectionGatewayReference'
          description: The reference to virtual network gateway resource.
        virtualNetworkGateway2:
          $ref: '#/components/schemas/VirtualNetworkConnectionGatewayReference'
          description: The reference to virtual network gateway resource.
        localNetworkGateway2:
          $ref: '#/components/schemas/VirtualNetworkConnectionGatewayReference'
          description: The reference to local network gateway resource.
        connectionType:
          $ref: '#/components/schemas/VirtualNetworkGatewayConnectionType'
          description: Gateway connection type.
        connectionProtocol:
          $ref: '#/components/schemas/ConnectionProtocol'
          description: Connection protocol used for this connection.
        routingWeight:
          type: integer
          format: int32
          description: The routing weight.
        connectionMode:
          $ref: '#/components/schemas/VirtualNetworkGatewayConnectionMode'
          description: The connection mode for this connection.
        sharedKey:
          type: string
          description: The IPSec shared key.
        connectionStatus:
          readOnly: true
          $ref: '#/components/schemas/VirtualNetworkGatewayConnectionStatus'
          description: Virtual Network Gateway connection status.
        tunnelConnectionStatus:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/TunnelConnectionHealth'
          description: Collection of all tunnels' connection health status.
        egressBytesTransferred:
          readOnly: true
          type: integer
          format: int64
          description: The egress bytes transferred in this connection.
        ingressBytesTransferred:
          readOnly: true
          type: integer
          format: int64
          description: The ingress bytes transferred in this connection.
        peer:
          $ref: '#/components/schemas/SubResource'
          description: The reference to peerings resource.
        enableBgp:
          type: boolean
          description: EnableBgp flag.
        gatewayCustomBgpIpAddresses:
          type: array
          items:
            $ref: '#/components/schemas/GatewayCustomBgpIpAddressIpConfiguration'
          description: GatewayCustomBgpIpAddresses to be used for virtual network gateway Connection.
          x-ms-identifiers: []
        usePolicyBasedTrafficSelectors:
          type: boolean
          description: Enable policy-based traffic selectors.
        ipsecPolicies:
          type: array
          items:
            $ref: '#/components/schemas/IpsecPolicy'
          description: The IPSec Policies to be considered by this connection.
        trafficSelectorPolicies:
          type: array
          items:
            $ref: '#/components/schemas/TrafficSelectorPolicy'
          description: The Traffic Selector Policies to be considered by this connection.
        resourceGuid:
          readOnly: true
          type: string
          description: The resource GUID property of the virtual network gateway connection resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the virtual network gateway connection resource.
        expressRouteGatewayBypass:
          type: boolean
          description: Bypass ExpressRoute Gateway for data forwarding.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    VirtualNetworkGatewayListConnectionsResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VirtualNetworkGatewayConnectionListEntity'
          description: A list of VirtualNetworkGatewayConnection resources that exists in a resource group.
        nextLink:
          readOnly: true
          type: string
          description: The URL to get the next set of results.
      description: Response for the VirtualNetworkGatewayListConnections API service call.
      type: object
    VpnDeviceScriptParameters:
      properties:
        vendor:
          type: string
          description: The vendor for the vpn device.
        deviceFamily:
          type: string
          description: The device family for the vpn device.
        firmwareVersion:
          type: string
          description: The firmware version for the vpn device.
      description: Vpn device configuration script generation parameters.
      type: object
    DhGroup:
      type: string
      description: The DH Groups used in IKE Phase 1 for initial SA.
      enum:
        - None
        - DHGroup1
        - DHGroup2
        - DHGroup14
        - DHGroup2048
        - ECP256
        - ECP384
        - DHGroup24
      x-ms-enum:
        name: DhGroup
        modelAsString: true
    IkeEncryption:
      type: string
      description: The IKE encryption algorithm (IKE phase 2).
      enum:
        - DES
        - DES3
        - AES128
        - AES192
        - AES256
        - GCMAES256
        - GCMAES128
      x-ms-enum:
        name: IkeEncryption
        modelAsString: true
    IkeIntegrity:
      type: string
      description: The IKE integrity algorithm (IKE phase 2).
      enum:
        - MD5
        - SHA1
        - SHA256
        - SHA384
        - GCMAES256
        - GCMAES128
      x-ms-enum:
        name: IkeIntegrity
        modelAsString: true
    IpsecEncryption:
      type: string
      description: The IPSec encryption algorithm (IKE phase 1).
      enum:
        - None
        - DES
        - DES3
        - AES128
        - AES192
        - AES256
        - GCMAES128
        - GCMAES192
        - GCMAES256
      x-ms-enum:
        name: IpsecEncryption
        modelAsString: true
    IpsecIntegrity:
      type: string
      description: The IPSec integrity algorithm (IKE phase 1).
      enum:
        - MD5
        - SHA1
        - SHA256
        - GCMAES128
        - GCMAES192
        - GCMAES256
      x-ms-enum:
        name: IpsecIntegrity
        modelAsString: true
    PfsGroup:
      type: string
      description: The Pfs Groups used in IKE Phase 2 for new child SA.
      enum:
        - None
        - PFS1
        - PFS2
        - PFS2048
        - ECP256
        - ECP384
        - PFS24
        - PFS14
        - PFSMM
      x-ms-enum:
        name: PfsGroup
        modelAsString: true
    VirtualNetworkGatewayConnectionStatus:
      type: string
      description: Virtual Network Gateway connection status.
      enum:
        - Unknown
        - Connecting
        - Connected
        - NotConnected
      x-ms-enum:
        name: VirtualNetworkGatewayConnectionStatus
        modelAsString: true
    VirtualNetworkGatewayConnectionType:
      type: string
      description: Gateway connection type.
      enum:
        - IPsec
        - Vnet2Vnet
        - ExpressRoute
        - VPNClient
      x-ms-enum:
        name: VirtualNetworkGatewayConnectionType
        modelAsString: true
    VirtualNetworkGatewayConnectionMode:
      type: string
      description: Gateway connection type.
      enum:
        - Default
        - ResponderOnly
        - InitiatorOnly
      x-ms-enum:
        name: VirtualNetworkGatewayConnectionMode
        modelAsString: true
    VpnClientConnectionHealthDetailListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VpnClientConnectionHealthDetail'
          description: List of vpn client connection health.
      description: List of virtual network gateway vpn client connection health.
      type: object
    VpnClientConnectionHealthDetail:
      properties:
        vpnConnectionId:
          type: string
          readOnly: true
          description: The vpn client Id.
        vpnConnectionDuration:
          type: integer
          format: int64
          readOnly: true
          description: The duration time of a connected vpn client.
        vpnConnectionTime:
          type: string
          readOnly: true
          description: The start time of a connected vpn client.
        publicIpAddress:
          type: string
          readOnly: true
          description: The public Ip of a connected vpn client.
        privateIpAddress:
          type: string
          readOnly: true
          description: The assigned private Ip of a connected vpn client.
        vpnUserName:
          type: string
          readOnly: true
          description: The user name of a connected vpn client.
        maxBandwidth:
          type: integer
          format: int64
          readOnly: true
          description: The max band width.
        egressPacketsTransferred:
          type: integer
          format: int64
          readOnly: true
          description: The egress packets per second.
        egressBytesTransferred:
          type: integer
          format: int64
          readOnly: true
          description: The egress bytes per second.
        ingressPacketsTransferred:
          type: integer
          format: int64
          readOnly: true
          description: The ingress packets per second.
        ingressBytesTransferred:
          type: integer
          format: int64
          readOnly: true
          description: The ingress bytes per second.
        maxPacketsPerSecond:
          type: integer
          format: int64
          readOnly: true
          description: The max packets transferred per second.
      description: VPN client connection health detail.
      type: object
    VpnPacketCaptureStopParameters:
      properties:
        sasUrl:
          type: string
          description: SAS url for packet capture on virtual network gateway.
      description: Stop packet capture parameters.
      type: object
    VpnPacketCaptureStartParameters:
      properties:
        filterData:
          type: string
          description: Start Packet capture parameters.
      description: Start packet capture parameters on virtual network gateway.
      type: object
    IPConfigurationBgpPeeringAddress:
      properties:
        ipconfigurationId:
          type: string
          description: The ID of IP configuration which belongs to gateway.
        defaultBgpIpAddresses:
          readOnly: true
          type: array
          items:
            type: string
          description: The list of default BGP peering addresses which belong to IP configuration.
        customBgpIpAddresses:
          type: array
          items:
            type: string
          description: The list of custom BGP peering addresses which belong to IP configuration.
        tunnelIpAddresses:
          readOnly: true
          type: array
          items:
            type: string
          description: The list of tunnel public IP addresses which belong to IP configuration.
      description: Properties of IPConfigurationBgpPeeringAddress.
      type: object
    GatewayCustomBgpIpAddressIpConfiguration:
      type: object
      properties:
        ipConfigurationId:
          type: string
          description: The IpconfigurationId of ipconfiguration which belongs to gateway.
        customBgpIpAddress:
          type: string
          description: The custom BgpPeeringAddress which belongs to IpconfigurationId.
      required:
        - ipConfigurationId
        - customBgpIpAddress
      description: GatewayCustomBgpIpAddressIpConfiguration for a virtual network gateway connection.
    IpAllocationPropertiesFormat:
      properties:
        subnet:
          readOnly: true
          $ref: '#/components/schemas/SubResource'
          description: The Subnet that using the prefix of this IpAllocation resource.
        virtualNetwork:
          readOnly: true
          $ref: '#/components/schemas/SubResource'
          description: The VirtualNetwork that using the prefix of this IpAllocation resource.
        type:
          $ref: '#/components/schemas/IpAllocationType'
          description: The type for the IpAllocation.
        prefix:
          type: string
          description: The address prefix for the IpAllocation.
        prefixLength:
          type: integer
          nullable: true
          default: 0
          description: The address prefix length for the IpAllocation.
        prefixType:
          $ref: '#/components/schemas/IPVersion'
          default: null
          description: The address prefix Type for the IpAllocation.
        ipamAllocationId:
          type: string
          description: The IPAM allocation ID.
        allocationTags:
          type: object
          additionalProperties:
            type: string
          description: IpAllocation tags.
      description: Properties of the IpAllocation.
      type: object
    IpAllocation:
      description: IpAllocation resource.
      properties:
        subnet:
          readOnly: true
          $ref: '#/components/schemas/SubResource'
          description: The Subnet that using the prefix of this IpAllocation resource.
        virtualNetwork:
          readOnly: true
          $ref: '#/components/schemas/SubResource'
          description: The VirtualNetwork that using the prefix of this IpAllocation resource.
        type:
          readOnly: true
          type: string
          description: Resource type.
        prefix:
          type: string
          description: The address prefix for the IpAllocation.
        prefixLength:
          type: integer
          nullable: true
          default: 0
          description: The address prefix length for the IpAllocation.
        prefixType:
          $ref: '#/components/schemas/IPVersion'
          default: null
          description: The address prefix Type for the IpAllocation.
        ipamAllocationId:
          type: string
          description: The IPAM allocation ID.
        allocationTags:
          type: object
          additionalProperties:
            type: string
          description: IpAllocation tags.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    IpAllocationListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/IpAllocation'
          description: A list of IpAllocation resources.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: Response for the ListIpAllocations API service call.
      type: object
    IpAllocationType:
      type: string
      description: IpAllocation type.
      enum:
        - Undefined
        - Hypernet
      x-ms-enum:
        name: IpAllocationType
        modelAsString: true
    IpGroup:
      description: The IpGroups resource information.
      properties:
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the IpGroups resource.
          readOnly: true
        ipAddresses:
          type: array
          items:
            type: string
          description: IpAddresses/IpAddressPrefixes in the IpGroups resource.
        firewalls:
          type: array
          readOnly: true
          description: List of references to Firewall resources that this IpGroups is associated with.
          items:
            $ref: '#/components/schemas/SubResource'
        firewallPolicies:
          type: array
          readOnly: true
          description: List of references to Firewall Policies resources that this IpGroups is associated with.
          items:
            $ref: '#/components/schemas/SubResource'
        etag:
          type: string
          readOnly: true
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    IpGroupListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/IpGroup'
          description: The list of IpGroups information resources.
        nextLink:
          type: string
          description: URL to get the next set of results.
      description: Response for the ListIpGroups API service call.
      type: object
    IpGroupPropertiesFormat:
      properties:
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the IpGroups resource.
          readOnly: true
        ipAddresses:
          type: array
          items:
            type: string
          description: IpAddresses/IpAddressPrefixes in the IpGroups resource.
        firewalls:
          type: array
          readOnly: true
          description: List of references to Firewall resources that this IpGroups is associated with.
          items:
            $ref: '#/components/schemas/SubResource'
        firewallPolicies:
          type: array
          readOnly: true
          description: List of references to Firewall Policies resources that this IpGroups is associated with.
          items:
            $ref: '#/components/schemas/SubResource'
      description: The IpGroups property information.
      type: object
    NetworkManager:
      description: The Managed Network resource
      properties:
        description:
          type: string
          description: A description of the network manager.
        networkManagerScopes:
          type: object
          properties:
            managementGroups:
              type: array
              items:
                type: string
              description: List of management groups.
            subscriptions:
              type: array
              items:
                type: string
              description: List of subscriptions.
            crossTenantScopes:
              readOnly: true
              type: array
              x-ms-identifiers: []
              items:
                $ref: '#/components/schemas/CrossTenantScopes'
              description: List of cross tenant scopes.
          description: Scope of Network Manager.
        networkManagerScopeAccesses:
          type: array
          items:
            type: string
            $ref: '#/components/schemas/ConfigurationType'
          description: Scope Access.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the network manager resource.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        systemData:
          readOnly: true
          description: The system metadata related to this resource.
          $ref: '#/components/schemas/SystemData'
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    NetworkManagerListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/NetworkManager'
          description: Gets a page of NetworkManager
        nextLink:
          type: string
          description: Gets the URL to get the next page of results.
      description: Result of the request to list NetworkManager. It contains a list of network managers and a URL link to get the next set of results.
    NetworkManagerProperties:
      type: object
      properties:
        description:
          type: string
          description: A description of the network manager.
        networkManagerScopes:
          type: object
          properties:
            managementGroups:
              type: array
              items:
                type: string
              description: List of management groups.
            subscriptions:
              type: array
              items:
                type: string
              description: List of subscriptions.
            crossTenantScopes:
              readOnly: true
              type: array
              x-ms-identifiers: []
              items:
                $ref: '#/components/schemas/CrossTenantScopes'
              description: List of cross tenant scopes.
          description: Scope of Network Manager.
        networkManagerScopeAccesses:
          type: array
          items:
            type: string
            $ref: '#/components/schemas/ConfigurationType'
          description: Scope Access.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the network manager resource.
      required:
        - networkManagerScopes
        - networkManagerScopeAccesses
      description: Properties of Managed Network
    CrossTenantScopes:
      type: object
      properties:
        tenantId:
          readOnly: true
          type: string
          description: Tenant ID.
        managementGroups:
          type: array
          readOnly: true
          items:
            type: string
          description: List of management groups.
        subscriptions:
          type: array
          readOnly: true
          items:
            type: string
          description: List of subscriptions.
      description: Cross tenant scopes.
    NetworkManagerCommit:
      type: object
      properties:
        commitId:
          type: string
          readOnly: true
          description: Commit Id.
        targetLocations:
          type: array
          items:
            type: string
          description: List of target locations.
        configurationIds:
          type: array
          items:
            type: string
          description: List of configuration ids.
        commitType:
          type: string
          $ref: '#/components/schemas/ConfigurationType'
          description: Commit Type.
      required:
        - targetLocations
        - commitType
      description: Network Manager Commit.
    PatchObject:
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      description: Object for patch operations.
    NetworkManagerDeploymentStatusParameter:
      type: object
      properties:
        regions:
          type: array
          items:
            type: string
          description: List of locations.
        deploymentTypes:
          type: array
          items:
            $ref: '#/components/schemas/ConfigurationType'
          description: List of deployment types.
        skipToken:
          description: Continuation token for pagination, capturing the next page size and offset, as well as the context of the query.
          type: string
      description: Network Manager Deployment Status Parameter.
    NetworkManagerDeploymentStatusListResult:
      type: object
      properties:
        value:
          type: array
          x-ms-identifiers: []
          items:
            $ref: '#/components/schemas/NetworkManagerDeploymentStatus'
          description: Gets a page of Network Manager Deployment Status
        skipToken:
          description: When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.
          type: string
      description: A list of Network Manager Deployment Status
    NetworkManagerDeploymentStatus:
      type: object
      properties:
        commitTime:
          type: string
          format: date-time
          description: Commit Time.
        region:
          type: string
          description: Region Name.
        deploymentStatus:
          type: string
          enum:
            - NotStarted
            - Deploying
            - Deployed
            - Failed
          x-ms-enum:
            name: DeploymentStatus
            modelAsString: true
          description: Deployment Status.
        configurationIds:
          type: array
          items:
            type: string
          description: List of configuration ids.
        deploymentType:
          type: string
          $ref: '#/components/schemas/ConfigurationType'
        errorMessage:
          type: string
          description: Error Message.
      description: Network Manager Deployment Status.
    ConfigurationType:
      type: string
      enum:
        - SecurityAdmin
        - Connectivity
      x-ms-enum:
        name: ConfigurationType
        modelAsString: true
      description: Configuration Deployment Type.
    WebApplicationFirewallPolicy:
      description: Defines web application firewall policy.
      properties:
        policySettings:
          description: The PolicySettings for policy.
          $ref: '#/components/schemas/PolicySettings'
        customRules:
          description: The custom rules inside the policy.
          type: array
          items:
            $ref: '#/components/schemas/WebApplicationFirewallCustomRule'
        applicationGateways:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGateway'
          description: A collection of references to application gateways.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the web application firewall policy resource.
        resourceState:
          title: Resource status of the policy.
          readOnly: true
          type: string
          description: Resource status of the policy.
          enum:
            - Creating
            - Enabling
            - Enabled
            - Disabling
            - Disabled
            - Deleting
          x-ms-enum:
            name: WebApplicationFirewallPolicyResourceState
            modelAsString: true
        managedRules:
          description: Describes the managedRules structure.
          $ref: '#/components/schemas/ManagedRulesDefinition'
        httpListeners:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: A collection of references to application gateway http listeners.
        pathBasedRules:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: A collection of references to application gateway path rules.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    WebApplicationFirewallPolicyPropertiesFormat:
      description: Defines web application firewall policy properties.
      required:
        - managedRules
      properties:
        policySettings:
          description: The PolicySettings for policy.
          $ref: '#/components/schemas/PolicySettings'
        customRules:
          description: The custom rules inside the policy.
          type: array
          items:
            $ref: '#/components/schemas/WebApplicationFirewallCustomRule'
        applicationGateways:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGateway'
          description: A collection of references to application gateways.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the web application firewall policy resource.
        resourceState:
          title: Resource status of the policy.
          readOnly: true
          type: string
          description: Resource status of the policy.
          enum:
            - Creating
            - Enabling
            - Enabled
            - Disabling
            - Disabled
            - Deleting
          x-ms-enum:
            name: WebApplicationFirewallPolicyResourceState
            modelAsString: true
        managedRules:
          description: Describes the managedRules structure.
          $ref: '#/components/schemas/ManagedRulesDefinition'
        httpListeners:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: A collection of references to application gateway http listeners.
        pathBasedRules:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: A collection of references to application gateway path rules.
      type: object
    WebApplicationFirewallPolicyListResult:
      description: Result of the request to list WebApplicationFirewallPolicies. It contains a list of WebApplicationFirewallPolicy objects and a URL link to get the next set of results.
      properties:
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/WebApplicationFirewallPolicy'
          description: List of WebApplicationFirewallPolicies within a resource group.
        nextLink:
          readOnly: true
          type: string
          description: URL to get the next set of WebApplicationFirewallPolicy objects if there are any.
      type: object
    ManagedRulesDefinition:
      description: Allow to exclude some variable satisfy the condition for the WAF check.
      required:
        - managedRuleSets
      properties:
        exclusions:
          type: array
          items:
            $ref: '#/components/schemas/OwaspCrsExclusionEntry'
          description: The Exclusions that are applied on the policy.
        managedRuleSets:
          type: array
          items:
            $ref: '#/components/schemas/ManagedRuleSet'
          description: The managed rule sets that are associated with the policy.
      type: object
    PolicySettings:
      description: Defines contents of a web application firewall global configuration.
      properties:
        state:
          description: The state of the policy.
          type: string
          enum:
            - Disabled
            - Enabled
          x-ms-enum:
            name: WebApplicationFirewallEnabledState
            modelAsString: true
        mode:
          description: The mode of the policy.
          type: string
          enum:
            - Prevention
            - Detection
          x-ms-enum:
            name: WebApplicationFirewallMode
            modelAsString: true
        requestBodyCheck:
          type: boolean
          description: Whether to allow WAF to check request Body.
        maxRequestBodySizeInKb:
          type: integer
          format: int32
          minimum: 8
          exclusiveMinimum: false
          description: Maximum request body size in Kb for WAF.
        fileUploadLimitInMb:
          type: integer
          format: int32
          minimum: 0
          exclusiveMinimum: false
          description: Maximum file upload size in Mb for WAF.
      type: object
    WebApplicationFirewallCustomRule:
      description: Defines contents of a web application rule.
      required:
        - priority
        - ruleType
        - matchConditions
        - action
      properties:
        name:
          type: string
          description: The name of the resource that is unique within a policy. This name can be used to access the resource.
          maxLength: 128
        etag:
          type: string
          readOnly: true
          description: A unique read-only string that changes whenever the resource is updated.
        priority:
          description: Priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
          type: integer
        ruleType:
          description: The rule type.
          type: string
          enum:
            - MatchRule
            - Invalid
          x-ms-enum:
            name: WebApplicationFirewallRuleType
            modelAsString: true
        matchConditions:
          description: List of match conditions.
          type: array
          items:
            $ref: '#/components/schemas/MatchCondition'
        action:
          description: Type of Actions.
          type: string
          enum:
            - Allow
            - Block
            - Log
          x-ms-enum:
            name: WebApplicationFirewallAction
            modelAsString: true
      type: object
    Transform:
      description: Transforms applied before matching.
      type: string
      enum:
        - Lowercase
        - Trim
        - UrlDecode
        - UrlEncode
        - RemoveNulls
        - HtmlEntityDecode
      x-ms-enum:
        name: WebApplicationFirewallTransform
        modelAsString: true
    MatchVariable:
      description: Define match variables.
      required:
        - variableName
      properties:
        variableName:
          description: Match Variable.
          type: string
          enum:
            - RemoteAddr
            - RequestMethod
            - QueryString
            - PostArgs
            - RequestUri
            - RequestHeaders
            - RequestBody
            - RequestCookies
          x-ms-enum:
            name: WebApplicationFirewallMatchVariable
            modelAsString: true
        selector:
          description: The selector of match variable.
          type: string
      type: object
    MatchCondition:
      description: Define match conditions.
      required:
        - matchVariables
        - operator
        - matchValues
      properties:
        matchVariables:
          description: List of match variables.
          type: array
          items:
            $ref: '#/components/schemas/MatchVariable'
        operator:
          description: The operator to be matched.
          type: string
          enum:
            - IPMatch
            - Equal
            - Contains
            - LessThan
            - GreaterThan
            - LessThanOrEqual
            - GreaterThanOrEqual
            - BeginsWith
            - EndsWith
            - Regex
            - GeoMatch
            - Any
          x-ms-enum:
            name: WebApplicationFirewallOperator
            modelAsString: true
        negationConditon:
          description: Whether this is negate condition or not.
          type: boolean
        matchValues:
          description: Match value.
          type: array
          items:
            type: string
        transforms:
          description: List of transforms.
          type: array
          items:
            $ref: '#/components/schemas/Transform'
      type: object
    ManagedRuleSet:
      type: object
      description: Defines a managed rule set.
      required:
        - ruleSetType
        - ruleSetVersion
      properties:
        ruleSetType:
          description: Defines the rule set type to use.
          type: string
        ruleSetVersion:
          description: Defines the version of the rule set to use.
          type: string
        ruleGroupOverrides:
          description: Defines the rule group overrides to apply to the rule set.
          type: array
          items:
            $ref: '#/components/schemas/ManagedRuleGroupOverride'
    ManagedRuleGroupOverride:
      type: object
      description: Defines a managed rule group override setting.
      required:
        - ruleGroupName
      properties:
        ruleGroupName:
          description: The managed rule group to override.
          type: string
        rules:
          description: List of rules that will be disabled. If none specified, all rules in the group will be disabled.
          type: array
          items:
            $ref: '#/components/schemas/ManagedRuleOverride'
    ManagedRuleOverride:
      type: object
      description: Defines a managed rule group override setting.
      required:
        - ruleId
      properties:
        ruleId:
          description: Identifier for the managed rule.
          type: string
        state:
          description: The state of the managed rule. Defaults to Disabled if not specified.
          type: string
          enum:
            - Disabled
          x-ms-enum:
            name: ManagedRuleEnabledState
            modelAsString: true
    ExclusionManagedRuleSet:
      type: object
      description: Defines a managed rule set for Exclusions.
      required:
        - ruleSetType
        - ruleSetVersion
      properties:
        ruleSetType:
          description: Defines the rule set type to use.
          type: string
        ruleSetVersion:
          description: Defines the version of the rule set to use.
          type: string
        ruleGroups:
          description: Defines the rule groups to apply to the rule set.
          type: array
          items:
            $ref: '#/components/schemas/ExclusionManagedRuleGroup'
    ExclusionManagedRuleGroup:
      type: object
      description: Defines a managed rule group to use for exclusion.
      required:
        - ruleGroupName
      properties:
        ruleGroupName:
          description: The managed rule group for exclusion.
          type: string
        rules:
          description: List of rules that will be excluded. If none specified, all rules in the group will be excluded.
          type: array
          items:
            $ref: '#/components/schemas/ExclusionManagedRule'
    ExclusionManagedRule:
      type: object
      description: Defines a managed rule to use for exclusion.
      required:
        - ruleId
      properties:
        ruleId:
          description: Identifier for the managed rule.
          type: string
    OwaspCrsExclusionEntry:
      required:
        - matchVariable
        - selectorMatchOperator
        - selector
      description: Allow to exclude some variable satisfy the condition for the WAF check.
      properties:
        matchVariable:
          type: string
          enum:
            - RequestHeaderNames
            - RequestCookieNames
            - RequestArgNames
            - RequestHeaderKeys
            - RequestHeaderValues
            - RequestCookieKeys
            - RequestCookieValues
            - RequestArgKeys
            - RequestArgValues
          description: The variable to be excluded.
          x-ms-enum:
            name: OwaspCrsExclusionEntryMatchVariable
            modelAsString: true
        selectorMatchOperator:
          type: string
          enum:
            - Equals
            - Contains
            - StartsWith
            - EndsWith
            - EqualsAny
          description: When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to.
          x-ms-enum:
            name: OwaspCrsExclusionEntrySelectorMatchOperator
            modelAsString: true
        selector:
          type: string
          description: When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to.
        exclusionManagedRuleSets:
          type: array
          items:
            $ref: '#/components/schemas/ExclusionManagedRuleSet'
          description: The managed rule sets that are associated with the exclusion.
      type: object
    NatGatewaySku:
      properties:
        name:
          type: string
          description: Name of Nat Gateway SKU.
          enum:
            - Standard
          x-ms-enum:
            name: NatGatewaySkuName
            modelAsString: true
      description: SKU of nat gateway.
      type: object
    NatGatewayPropertiesFormat:
      properties:
        idleTimeoutInMinutes:
          type: integer
          format: int32
          description: The idle timeout of the nat gateway.
        publicIpAddresses:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: An array of public ip addresses associated with the nat gateway resource.
        publicIpPrefixes:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: An array of public ip prefixes associated with the nat gateway resource.
        subnets:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: An array of references to the subnets using this nat gateway resource.
        resourceGuid:
          readOnly: true
          type: string
          description: The resource GUID property of the NAT gateway resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the NAT gateway resource.
      description: Nat Gateway properties.
      type: object
    NatGateway:
      description: Nat Gateway resource.
      properties:
        idleTimeoutInMinutes:
          type: integer
          format: int32
          description: The idle timeout of the nat gateway.
        publicIpAddresses:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: An array of public ip addresses associated with the nat gateway resource.
        publicIpPrefixes:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: An array of public ip prefixes associated with the nat gateway resource.
        subnets:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: An array of references to the subnets using this nat gateway resource.
        resourceGuid:
          readOnly: true
          type: string
          description: The resource GUID property of the NAT gateway resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the NAT gateway resource.
        sku:
          $ref: '#/components/schemas/NatGatewaySku'
          description: The nat gateway SKU.
        zones:
          type: array
          items:
            type: string
          description: A list of availability zones denoting the zone in which Nat Gateway should be deployed.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    NatGatewayListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/NatGateway'
          description: A list of Nat Gateways that exists in a resource group.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: Response for ListNatGateways API service call.
      type: object
    PublicIPPrefixSku:
      properties:
        name:
          type: string
          description: Name of a public IP prefix SKU.
          enum:
            - Standard
          x-ms-enum:
            name: PublicIPPrefixSkuName
            modelAsString: true
        tier:
          type: string
          description: Tier of a public IP prefix SKU.
          enum:
            - Regional
            - Global
          x-ms-enum:
            name: PublicIPPrefixSkuTier
            modelAsString: true
      description: SKU of a public IP prefix.
      type: object
    PublicIPPrefixPropertiesFormat:
      properties:
        publicIPAddressVersion:
          $ref: '#/components/schemas/IPVersion'
          description: The public IP address version.
        ipTags:
          type: array
          items:
            $ref: '#/components/schemas/IpTag'
          description: The list of tags associated with the public IP prefix.
        prefixLength:
          type: integer
          format: int32
          description: The Length of the Public IP Prefix.
        ipPrefix:
          readOnly: true
          type: string
          description: The allocated Prefix.
        publicIPAddresses:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ReferencedPublicIpAddress'
          description: The list of all referenced PublicIPAddresses.
        loadBalancerFrontendIpConfiguration:
          readOnly: true
          $ref: '#/components/schemas/SubResource'
          description: The reference to load balancer frontend IP configuration associated with the public IP prefix.
        customIPPrefix:
          $ref: '#/components/schemas/SubResource'
          description: The customIpPrefix that this prefix is associated with.
        resourceGuid:
          readOnly: true
          type: string
          description: The resource GUID property of the public IP prefix resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the public IP prefix resource.
        natGateway:
          $ref: '#/components/schemas/NatGateway'
          description: NatGateway of Public IP Prefix.
      description: Public IP prefix properties.
      type: object
    PublicIPPrefix:
      description: Public IP prefix resource.
      properties:
        publicIPAddressVersion:
          $ref: '#/components/schemas/IPVersion'
          description: The public IP address version.
        ipTags:
          type: array
          items:
            $ref: '#/components/schemas/IpTag'
          description: The list of tags associated with the public IP prefix.
        prefixLength:
          type: integer
          format: int32
          description: The Length of the Public IP Prefix.
        ipPrefix:
          readOnly: true
          type: string
          description: The allocated Prefix.
        publicIPAddresses:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ReferencedPublicIpAddress'
          description: The list of all referenced PublicIPAddresses.
        loadBalancerFrontendIpConfiguration:
          readOnly: true
          $ref: '#/components/schemas/SubResource'
          description: The reference to load balancer frontend IP configuration associated with the public IP prefix.
        customIPPrefix:
          $ref: '#/components/schemas/SubResource'
          description: The customIpPrefix that this prefix is associated with.
        resourceGuid:
          readOnly: true
          type: string
          description: The resource GUID property of the public IP prefix resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the public IP prefix resource.
        natGateway:
          $ref: '#/components/schemas/NatGateway'
          description: NatGateway of Public IP Prefix.
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location of the public ip address.
        sku:
          $ref: '#/components/schemas/PublicIPPrefixSku'
          description: The public IP prefix SKU.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        zones:
          type: array
          items:
            type: string
          description: A list of availability zones denoting the IP allocated for the resource needs to come from.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    PublicIPPrefixListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/PublicIPPrefix'
          description: A list of public IP prefixes that exists in a resource group.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: Response for ListPublicIpPrefixes API service call.
      type: object
    ReferencedPublicIpAddress:
      properties:
        id:
          type: string
          description: The PublicIPAddress Reference.
      description: Reference to a public IP address.
      type: object
    NetworkVirtualAppliance:
      description: NetworkVirtualAppliance Resource.
      properties:
        nvaSku:
          readOnly: false
          description: Network Virtual Appliance SKU.
          $ref: '#/components/schemas/VirtualApplianceSkuProperties'
        addressPrefix:
          type: string
          readOnly: true
          description: Address Prefix.
        bootStrapConfigurationBlobs:
          type: array
          readOnly: false
          description: BootStrapConfigurationBlobs storage URLs.
          items:
            type: string
        virtualHub:
          readOnly: false
          $ref: '#/components/schemas/SubResource'
          description: The Virtual Hub where Network Virtual Appliance is being deployed.
        cloudInitConfigurationBlobs:
          type: array
          readOnly: false
          description: CloudInitConfigurationBlob storage URLs.
          items:
            type: string
        cloudInitConfiguration:
          type: string
          readOnly: false
          description: CloudInitConfiguration string in plain text.
        virtualApplianceAsn:
          type: integer
          readOnly: false
          format: int64
          minimum: 0
          maximum: 4294967295
          description: VirtualAppliance ASN.
        sshPublicKey:
          type: string
          readOnly: false
          description: Public key for SSH login.
        virtualApplianceNics:
          type: array
          readOnly: true
          description: List of Virtual Appliance Network Interfaces.
          items:
            $ref: '#/components/schemas/VirtualApplianceNicProperties'
        virtualApplianceSites:
          type: array
          readOnly: true
          description: List of references to VirtualApplianceSite.
          items:
            $ref: '#/components/schemas/SubResource'
        inboundSecurityRules:
          type: array
          readOnly: true
          description: List of references to InboundSecurityRules.
          items:
            $ref: '#/components/schemas/SubResource'
        provisioningState:
          description: The provisioning state of the resource.
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
          description: The service principal that has read access to cloud-init and config blob.
        etag:
          type: string
          readOnly: true
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    NetworkVirtualAppliancePropertiesFormat:
      properties:
        nvaSku:
          readOnly: false
          description: Network Virtual Appliance SKU.
          $ref: '#/components/schemas/VirtualApplianceSkuProperties'
        addressPrefix:
          type: string
          readOnly: true
          description: Address Prefix.
        bootStrapConfigurationBlobs:
          type: array
          readOnly: false
          description: BootStrapConfigurationBlobs storage URLs.
          items:
            type: string
        virtualHub:
          readOnly: false
          $ref: '#/components/schemas/SubResource'
          description: The Virtual Hub where Network Virtual Appliance is being deployed.
        cloudInitConfigurationBlobs:
          type: array
          readOnly: false
          description: CloudInitConfigurationBlob storage URLs.
          items:
            type: string
        cloudInitConfiguration:
          type: string
          readOnly: false
          description: CloudInitConfiguration string in plain text.
        virtualApplianceAsn:
          type: integer
          readOnly: false
          format: int64
          minimum: 0
          maximum: 4294967295
          description: VirtualAppliance ASN.
        sshPublicKey:
          type: string
          readOnly: false
          description: Public key for SSH login.
        virtualApplianceNics:
          type: array
          readOnly: true
          description: List of Virtual Appliance Network Interfaces.
          items:
            $ref: '#/components/schemas/VirtualApplianceNicProperties'
        virtualApplianceSites:
          type: array
          readOnly: true
          description: List of references to VirtualApplianceSite.
          items:
            $ref: '#/components/schemas/SubResource'
        inboundSecurityRules:
          type: array
          readOnly: true
          description: List of references to InboundSecurityRules.
          items:
            $ref: '#/components/schemas/SubResource'
        provisioningState:
          description: The provisioning state of the resource.
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
      description: Network Virtual Appliance definition.
      type: object
    VirtualApplianceSkuProperties:
      properties:
        vendor:
          type: string
          readOnly: false
          description: Virtual Appliance Vendor.
        bundledScaleUnit:
          type: string
          readOnly: false
          description: Virtual Appliance Scale Unit.
        marketPlaceVersion:
          type: string
          readOnly: false
          description: Virtual Appliance Version.
      description: Network Virtual Appliance Sku Properties.
      type: object
    VirtualApplianceNicProperties:
      properties:
        name:
          type: string
          readOnly: true
          description: NIC name.
        publicIpAddress:
          type: string
          readOnly: true
          description: Public IP address.
        privateIpAddress:
          type: string
          readOnly: true
          description: Private IP address.
      description: Network Virtual Appliance NIC properties.
      type: object
    VirtualApplianceSite:
      description: Virtual Appliance Site resource.
      properties:
        addressPrefix:
          type: string
          readOnly: false
          description: Address Prefix.
        o365Policy:
          readOnly: false
          description: Office 365 Policy.
          $ref: '#/components/schemas/Office365PolicyProperties'
        provisioningState:
          description: The provisioning state of the resource.
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
        name:
          type: string
          description: Name of the virtual appliance site.
        etag:
          type: string
          readOnly: true
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          type: string
          readOnly: true
          description: Site type.
        id:
          type: string
          description: Resource ID.
      type: object
    VirtualApplianceSiteProperties:
      properties:
        addressPrefix:
          type: string
          readOnly: false
          description: Address Prefix.
        o365Policy:
          readOnly: false
          description: Office 365 Policy.
          $ref: '#/components/schemas/Office365PolicyProperties'
        provisioningState:
          description: The provisioning state of the resource.
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
      description: Properties of the rule group.
      type: object
    Office365PolicyProperties:
      properties:
        breakOutCategories:
          readOnly: false
          description: Office 365 breakout categories.
          $ref: '#/components/schemas/BreakOutCategoryPolicies'
      description: Network Virtual Appliance Sku Properties.
      type: object
    BreakOutCategoryPolicies:
      properties:
        allow:
          type: boolean
          readOnly: false
          description: Flag to control breakout of o365 allow category.
        optimize:
          type: boolean
          readOnly: false
          description: Flag to control breakout of o365 optimize category.
        default:
          type: boolean
          readOnly: false
          description: Flag to control breakout of o365 default category.
      description: Network Virtual Appliance Sku Properties.
      type: object
    NetworkVirtualApplianceSku:
      title: Available NetworkVirtualApplianceSkus
      description: Definition of the NetworkVirtualApplianceSkus resource.
      properties:
        vendor:
          type: string
          readOnly: true
          description: Network Virtual Appliance Sku vendor.
        availableVersions:
          type: array
          readOnly: true
          description: Available Network Virtual Appliance versions.
          items:
            type: string
        availableScaleUnits:
          type: array
          items:
            $ref: '#/components/schemas/NetworkVirtualApplianceSkuInstances'
          description: The list of scale units available.
        etag:
          type: string
          readOnly: true
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    NetworkVirtualApplianceSkuPropertiesFormat:
      title: Network Virtual Appliance Sku Properties
      description: Properties specific to NetworkVirtualApplianceSkus.
      properties:
        vendor:
          type: string
          readOnly: true
          description: Network Virtual Appliance Sku vendor.
        availableVersions:
          type: array
          readOnly: true
          description: Available Network Virtual Appliance versions.
          items:
            type: string
        availableScaleUnits:
          type: array
          items:
            $ref: '#/components/schemas/NetworkVirtualApplianceSkuInstances'
          description: The list of scale units available.
      type: object
    NetworkVirtualApplianceSkuInstances:
      title: Network Virtual Appliance Sku Instances
      description: List of available Sku and instances.
      properties:
        scaleUnit:
          type: string
          readOnly: true
          description: Scale Unit.
        instanceCount:
          type: integer
          format: int32
          readOnly: true
          description: Instance Count.
      type: object
    NetworkVirtualApplianceListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/NetworkVirtualAppliance'
          description: List of Network Virtual Appliances.
        nextLink:
          type: string
          description: URL to get the next set of results.
      description: Response for ListNetworkVirtualAppliances API service call.
      type: object
    NetworkVirtualApplianceSiteListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VirtualApplianceSite'
          description: List of Network Virtual Appliance sites.
        nextLink:
          type: string
          description: URL to get the next set of results.
      description: Response for ListNetworkVirtualApplianceSites API service call.
      type: object
    NetworkVirtualApplianceSkuListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/NetworkVirtualApplianceSku'
          description: List of Network Virtual Appliance Skus that are available.
        nextLink:
          type: string
          description: URL to get the next set of results.
      description: Response for ListNetworkVirtualApplianceSkus API service call.
      type: object
    InboundSecurityRule:
      description: NVA Inbound Security Rule resource.
      properties:
        rules:
          type: array
          readOnly: false
          description: List of allowed rules.
          items:
            $ref: '#/components/schemas/InboundSecurityRules'
        provisioningState:
          description: The provisioning state of the resource.
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
        name:
          type: string
          description: Name of security rule collection.
        etag:
          type: string
          readOnly: true
          description: A unique read-only string that changes whenever the resource is updated.
        type:
          type: string
          readOnly: true
          description: NVA inbound security rule type.
        id:
          type: string
          description: Resource ID.
      type: object
    InboundSecurityRuleProperties:
      properties:
        rules:
          type: array
          readOnly: false
          description: List of allowed rules.
          items:
            $ref: '#/components/schemas/InboundSecurityRules'
        provisioningState:
          description: The provisioning state of the resource.
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
      description: Properties of the Inbound Security Rules resource.
      type: object
    InboundSecurityRules:
      properties:
        protocol:
          type: string
          enum:
            - TCP
            - UDP
          x-ms-enum:
            name: InboundSecurityRulesProtocol
            modelAsString: true
          description: Protocol. This should be either TCP or UDP.
        sourceAddressPrefix:
          type: string
          description: The CIDR or source IP range. Only /30, /31 and /32 Ip ranges are allowed.
        destinationPortRange:
          type: integer
          format: int32
          minimum: 0
          maximum: 65535
          description: NVA port ranges to be opened up. One needs to provide specific ports.
      description: Properties of the Inbound Security Rules resource.
      type: object
    EndpointServicesListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/EndpointServiceResult'
          description: List of available endpoint services in a region.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      description: Response for the ListAvailableEndpointServices API service call.
      type: object
    EndpointServiceResult:
      description: Endpoint service.
      properties:
        name:
          type: string
          description: Name of the endpoint service.
          readOnly: true
        type:
          type: string
          description: Type of the endpoint service.
          readOnly: true
        id:
          type: string
          description: Resource ID.
      type: object
    SecurityPartnerProviderPropertiesFormat:
      properties:
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the Security Partner Provider resource.
        securityProviderName:
          description: The security provider name.
          $ref: '#/components/schemas/SecurityPartnerProvidersecurityProviderName'
        connectionStatus:
          readOnly: true
          description: The connection status with the Security Partner Provider.
          $ref: '#/components/schemas/SecurityPartnerProviderConnectionStatus'
        virtualHub:
          $ref: '#/components/schemas/SubResource'
          description: The virtualHub to which the Security Partner Provider belongs.
      description: Properties of the Security Partner Provider.
      type: object
    SecurityPartnerProvider:
      description: Security Partner Provider resource.
      properties:
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the Security Partner Provider resource.
        securityProviderName:
          description: The security provider name.
          $ref: '#/components/schemas/SecurityPartnerProvidersecurityProviderName'
        connectionStatus:
          readOnly: true
          description: The connection status with the Security Partner Provider.
          $ref: '#/components/schemas/SecurityPartnerProviderConnectionStatus'
        virtualHub:
          $ref: '#/components/schemas/SubResource'
          description: The virtualHub to which the Security Partner Provider belongs.
        etag:
          type: string
          readOnly: true
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    SecurityPartnerProviderListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/SecurityPartnerProvider'
          description: List of Security Partner Providers in a resource group.
        nextLink:
          type: string
          description: URL to get the next set of results.
      description: Response for ListSecurityPartnerProviders API service call.
      type: object
    SecurityPartnerProvidersecurityProviderName:
      type: string
      description: The Security Providers.
      enum:
        - ZScaler
        - IBoss
        - Checkpoint
      x-ms-enum:
        name: SecurityProviderName
        modelAsString: true
    SecurityPartnerProviderConnectionStatus:
      type: string
      description: The current state of the connection with Security Partner Provider.
      readOnly: true
      enum:
        - Unknown
        - PartiallyConnected
        - Connected
        - NotConnected
      x-ms-enum:
        name: SecurityPartnerProviderConnectionStatus
        modelAsString: true
    ExpressRouteProviderPortProperties:
      type: object
      properties:
        portPairDescriptor:
          readOnly: true
          type: string
          description: The name of the port pair.
        primaryAzurePort:
          readOnly: true
          type: string
          description: The name of the primary port.
        secondaryAzurePort:
          readOnly: true
          type: string
          description: The name of the secondary port.
        peeringLocation:
          type: string
          description: The peering location of the port pair.
        overprovisionFactor:
          type: integer
          format: int32
          description: Overprovisioning factor for the port pair.
        portBandwidthInMbps:
          type: integer
          format: int32
          description: Bandwidth of the port in Mbps
        usedBandwidthInMbps:
          type: integer
          format: int32
          description: Used Bandwidth of the port in Mbps
        remainingBandwidthInMbps:
          type: integer
          format: int32
          description: Remaining Bandwidth of the port in Mbps
      description: Properties of ExpressRouteProviderPort.
    ExpressRouteProviderPort:
      description: ExpressRouteProviderPort resource.
      properties:
        portPairDescriptor:
          readOnly: true
          type: string
          description: The name of the port pair.
        primaryAzurePort:
          readOnly: true
          type: string
          description: The name of the primary port.
        secondaryAzurePort:
          readOnly: true
          type: string
          description: The name of the secondary port.
        peeringLocation:
          type: string
          description: The peering location of the port pair.
        overprovisionFactor:
          type: integer
          format: int32
          description: Overprovisioning factor for the port pair.
        portBandwidthInMbps:
          type: integer
          format: int32
          description: Bandwidth of the port in Mbps
        usedBandwidthInMbps:
          type: integer
          format: int32
          description: Used Bandwidth of the port in Mbps
        remainingBandwidthInMbps:
          type: integer
          format: int32
          description: Remaining Bandwidth of the port in Mbps
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    ExpressRouteProviderPortListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ExpressRouteProviderPort'
          description: A list of ExpressRouteProviderPort resources.
        nextLink:
          readOnly: true
          type: string
          description: The URL to get the next set of results.
      description: Response for ListExpressRouteProviderPort API service call.
    DscpConfiguration:
      description: Differentiated Services Code Point configuration for any given network interface
      properties:
        markings:
          type: array
          items:
            type: integer
            format: int32
          description: List of markings to be used in the configuration.
        sourceIpRanges:
          type: array
          items:
            $ref: '#/components/schemas/QosIpRange'
          description: Source IP ranges.
        destinationIpRanges:
          type: array
          items:
            $ref: '#/components/schemas/QosIpRange'
          description: Destination IP ranges.
        sourcePortRanges:
          type: array
          items:
            $ref: '#/components/schemas/QosPortRange'
          description: Sources port ranges.
        destinationPortRanges:
          type: array
          items:
            $ref: '#/components/schemas/QosPortRange'
          description: Destination port ranges.
        protocol:
          type: string
          enum:
            - DoNotUse
            - Icmp
            - Tcp
            - Udp
            - Gre
            - Esp
            - Ah
            - Vxlan
            - All
          x-ms-enum:
            name: ProtocolType
            modelAsString: true
          description: RNM supported protocol types.
        qosDefinitionCollection:
          type: array
          items:
            $ref: '#/components/schemas/QosDefinition'
          description: QoS object definitions
        qosCollectionId:
          type: string
          readOnly: true
          description: Qos Collection ID generated by RNM.
        associatedNetworkInterfaces:
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterface'
          readOnly: true
          description: Associated Network Interfaces to the DSCP Configuration.
        resourceGuid:
          readOnly: true
          type: string
          description: The resource GUID property of the DSCP Configuration resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the DSCP Configuration resource.
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    DscpConfigurationPropertiesFormat:
      properties:
        markings:
          type: array
          items:
            type: integer
            format: int32
          description: List of markings to be used in the configuration.
        sourceIpRanges:
          type: array
          items:
            $ref: '#/components/schemas/QosIpRange'
          description: Source IP ranges.
        destinationIpRanges:
          type: array
          items:
            $ref: '#/components/schemas/QosIpRange'
          description: Destination IP ranges.
        sourcePortRanges:
          type: array
          items:
            $ref: '#/components/schemas/QosPortRange'
          description: Sources port ranges.
        destinationPortRanges:
          type: array
          items:
            $ref: '#/components/schemas/QosPortRange'
          description: Destination port ranges.
        protocol:
          type: string
          enum:
            - DoNotUse
            - Icmp
            - Tcp
            - Udp
            - Gre
            - Esp
            - Ah
            - Vxlan
            - All
          x-ms-enum:
            name: ProtocolType
            modelAsString: true
          description: RNM supported protocol types.
        qosDefinitionCollection:
          type: array
          items:
            $ref: '#/components/schemas/QosDefinition'
          description: QoS object definitions
        qosCollectionId:
          type: string
          readOnly: true
          description: Qos Collection ID generated by RNM.
        associatedNetworkInterfaces:
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterface'
          readOnly: true
          description: Associated Network Interfaces to the DSCP Configuration.
        resourceGuid:
          readOnly: true
          type: string
          description: The resource GUID property of the DSCP Configuration resource.
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the DSCP Configuration resource.
      description: Differentiated Services Code Point configuration properties.
      type: object
    QosDefinition:
      type: object
      properties:
        markings:
          type: array
          items:
            type: integer
            format: int32
          description: List of markings to be used in the configuration.
        sourceIpRanges:
          type: array
          items:
            $ref: '#/components/schemas/QosIpRange'
          description: Source IP ranges.
        destinationIpRanges:
          type: array
          items:
            $ref: '#/components/schemas/QosIpRange'
          description: Destination IP ranges.
        sourcePortRanges:
          type: array
          items:
            $ref: '#/components/schemas/QosPortRange'
          description: Sources port ranges.
        destinationPortRanges:
          type: array
          items:
            $ref: '#/components/schemas/QosPortRange'
          description: Destination port ranges.
        protocol:
          type: string
          enum:
            - DoNotUse
            - Icmp
            - Tcp
            - Udp
            - Gre
            - Esp
            - Ah
            - Vxlan
            - All
          x-ms-enum:
            name: ProtocolType
            modelAsString: true
          description: RNM supported protocol types.
      description: Quality of Service defines the traffic configuration between endpoints. Mandatory to have one marking.
    QosIpRange:
      properties:
        startIP:
          type: string
          description: Start IP Address.
        endIP:
          type: string
          description: End IP Address.
      description: Qos Traffic Profiler IP Range properties.
      type: object
    QosPortRange:
      properties:
        start:
          type: integer
          format: int32
          description: Qos Port Range start.
        end:
          type: integer
          format: int32
          description: Qos Port Range end.
      description: Qos Traffic Profiler Port range properties.
      type: object
    DscpConfigurationListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/DscpConfiguration'
          description: A list of dscp configurations in a resource group.
        nextLink:
          readOnly: true
          type: string
          description: The URL to get the next set of results.
      description: Response for the DscpConfigurationList API service call.
      type: object
    AzureFirewallFqdnTagPropertiesFormat:
      properties:
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the Azure firewall FQDN tag resource.
        fqdnTagName:
          type: string
          readOnly: true
          description: The name of this FQDN Tag.
      description: Azure Firewall FQDN Tag Properties.
      type: object
    AzureFirewallFqdnTag:
      description: Azure Firewall FQDN Tag Resource.
      properties:
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the Azure firewall FQDN tag resource.
        fqdnTagName:
          type: string
          readOnly: true
          description: The name of this FQDN Tag.
        etag:
          type: string
          readOnly: true
          description: A unique read-only string that changes whenever the resource is updated.
        id:
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    AzureFirewallFqdnTagListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/AzureFirewallFqdnTag'
          description: List of Azure Firewall FQDN Tags in a resource group.
        nextLink:
          type: string
          description: URL to get the next set of results.
      description: Response for ListAzureFirewallFqdnTags API service call.
      type: object
  x-stackQL-resources:
    subscription_network_manager_connections:
      id: azure.network.subscription_network_manager_connections
      name: subscription_network_manager_connections
      title: Subscription_network_manager_connections
      methods:
        SubscriptionNetworkManagerConnections_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1networkManagerConnections~1{networkManagerConnectionName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        SubscriptionNetworkManagerConnections_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1networkManagerConnections~1{networkManagerConnectionName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        SubscriptionNetworkManagerConnections_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1networkManagerConnections~1{networkManagerConnectionName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        SubscriptionNetworkManagerConnections_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1networkManagerConnections~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/subscription_network_manager_connections/methods/SubscriptionNetworkManagerConnections_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/subscription_network_manager_connections/methods/SubscriptionNetworkManagerConnections_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/subscription_network_manager_connections/methods/SubscriptionNetworkManagerConnections_Delete'
    management_group_network_manager_connections:
      id: azure.network.management_group_network_manager_connections
      name: management_group_network_manager_connections
      title: Management_group_network_manager_connections
      methods:
        ManagementGroupNetworkManagerConnections_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Management~1managementGroups~1{managementGroupId}~1providers~1Microsoft.Network~1networkManagerConnections~1{networkManagerConnectionName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        ManagementGroupNetworkManagerConnections_Get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Management~1managementGroups~1{managementGroupId}~1providers~1Microsoft.Network~1networkManagerConnections~1{networkManagerConnectionName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        ManagementGroupNetworkManagerConnections_Delete:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Management~1managementGroups~1{managementGroupId}~1providers~1Microsoft.Network~1networkManagerConnections~1{networkManagerConnectionName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        ManagementGroupNetworkManagerConnections_List:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Management~1managementGroups~1{managementGroupId}~1providers~1Microsoft.Network~1networkManagerConnections~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/management_group_network_manager_connections/methods/ManagementGroupNetworkManagerConnections_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/management_group_network_manager_connections/methods/ManagementGroupNetworkManagerConnections_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/management_group_network_manager_connections/methods/ManagementGroupNetworkManagerConnections_Delete'
    route_tables:
      id: azure.network.route_tables
      name: route_tables
      title: Route_tables
      methods:
        RouteTables_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1routeTables~1{routeTableName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        RouteTables_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1routeTables~1{routeTableName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        RouteTables_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1routeTables~1{routeTableName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        RouteTables_UpdateTags:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1routeTables~1{routeTableName}~1?api-version=2022-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        RouteTables_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1routeTables~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        RouteTables_ListAll:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1routeTables~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/route_tables/methods/RouteTables_List'
          - $ref: '#/components/x-stackQL-resources/route_tables/methods/RouteTables_ListAll'
        insert:
          - $ref: '#/components/x-stackQL-resources/route_tables/methods/RouteTables_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/route_tables/methods/RouteTables_Delete'
    routes:
      id: azure.network.routes
      name: routes
      title: Routes
      methods:
        Routes_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1routeTables~1{routeTableName}~1routes~1{routeName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        Routes_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1routeTables~1{routeTableName}~1routes~1{routeName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Routes_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1routeTables~1{routeTableName}~1routes~1{routeName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        Routes_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1routeTables~1{routeTableName}~1routes~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/routes/methods/Routes_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/routes/methods/Routes_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/routes/methods/Routes_Delete'
    firewall_policies:
      id: azure.network.firewall_policies
      name: firewall_policies
      title: Firewall_policies
      methods:
        FirewallPolicies_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1firewallPolicies~1{firewallPolicyName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        FirewallPolicies_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1firewallPolicies~1{firewallPolicyName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        FirewallPolicies_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1firewallPolicies~1{firewallPolicyName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        FirewallPolicies_UpdateTags:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1firewallPolicies~1{firewallPolicyName}~1?api-version=2022-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        FirewallPolicies_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1firewallPolicies~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        FirewallPolicies_ListAll:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1firewallPolicies~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/firewall_policies/methods/FirewallPolicies_List'
          - $ref: '#/components/x-stackQL-resources/firewall_policies/methods/FirewallPolicies_ListAll'
        insert:
          - $ref: '#/components/x-stackQL-resources/firewall_policies/methods/FirewallPolicies_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/firewall_policies/methods/FirewallPolicies_Delete'
    firewall_policy_rule_collection_groups:
      id: azure.network.firewall_policy_rule_collection_groups
      name: firewall_policy_rule_collection_groups
      title: Firewall_policy_rule_collection_groups
      methods:
        FirewallPolicyRuleCollectionGroups_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1firewallPolicies~1{firewallPolicyName}~1ruleCollectionGroups~1{ruleCollectionGroupName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        FirewallPolicyRuleCollectionGroups_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1firewallPolicies~1{firewallPolicyName}~1ruleCollectionGroups~1{ruleCollectionGroupName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        FirewallPolicyRuleCollectionGroups_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1firewallPolicies~1{firewallPolicyName}~1ruleCollectionGroups~1{ruleCollectionGroupName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        FirewallPolicyRuleCollectionGroups_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1firewallPolicies~1{firewallPolicyName}~1ruleCollectionGroups~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/firewall_policy_rule_collection_groups/methods/FirewallPolicyRuleCollectionGroups_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/firewall_policy_rule_collection_groups/methods/FirewallPolicyRuleCollectionGroups_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/firewall_policy_rule_collection_groups/methods/FirewallPolicyRuleCollectionGroups_Delete'
    firewall_policy_idps_signatures:
      id: azure.network.firewall_policy_idps_signatures
      name: firewall_policy_idps_signatures
      title: Firewall_policy_idps_signatures
      methods:
        FirewallPolicyIdpsSignatures_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1firewallPolicies~1{firewallPolicyName}~1listIdpsSignatures~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/firewall_policy_idps_signatures/methods/FirewallPolicyIdpsSignatures_List'
        insert: []
        update: []
        delete: []
    firewall_policy_idps_signatures_overrides:
      id: azure.network.firewall_policy_idps_signatures_overrides
      name: firewall_policy_idps_signatures_overrides
      title: Firewall_policy_idps_signatures_overrides
      methods:
        FirewallPolicyIdpsSignaturesOverrides_Patch:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1firewallPolicies~1{firewallPolicyName}~1signatureOverrides~1default~1?api-version=2022-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        FirewallPolicyIdpsSignaturesOverrides_Put:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1firewallPolicies~1{firewallPolicyName}~1signatureOverrides~1default~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        FirewallPolicyIdpsSignaturesOverrides_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1firewallPolicies~1{firewallPolicyName}~1signatureOverrides~1default~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        FirewallPolicyIdpsSignaturesOverrides_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1firewallPolicies~1{firewallPolicyName}~1signatureOverrides~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/firewall_policy_idps_signatures_overrides/methods/FirewallPolicyIdpsSignaturesOverrides_List'
        insert: []
        update: []
        delete: []
    firewall_policy_idps_signatures_filter_values:
      id: azure.network.firewall_policy_idps_signatures_filter_values
      name: firewall_policy_idps_signatures_filter_values
      title: Firewall_policy_idps_signatures_filter_values
      methods:
        FirewallPolicyIdpsSignaturesFilterValues_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1firewallPolicies~1{firewallPolicyName}~1listIdpsFilterOptions~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/firewall_policy_idps_signatures_filter_values/methods/FirewallPolicyIdpsSignaturesFilterValues_List'
        insert: []
        update: []
        delete: []
    groups:
      id: azure.network.groups
      name: groups
      title: Groups
      methods:
        NetworkGroups_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkManagers~1{networkManagerName}~1networkGroups~1{networkGroupName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        NetworkGroups_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkManagers~1{networkManagerName}~1networkGroups~1{networkGroupName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        NetworkGroups_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkManagers~1{networkManagerName}~1networkGroups~1{networkGroupName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        NetworkGroups_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkManagers~1{networkManagerName}~1networkGroups~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/groups/methods/NetworkGroups_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/groups/methods/NetworkGroups_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/groups/methods/NetworkGroups_Delete'
    static_members:
      id: azure.network.static_members
      name: static_members
      title: Static_members
      methods:
        StaticMembers_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkManagers~1{networkManagerName}~1networkGroups~1{networkGroupName}~1staticMembers~1{staticMemberName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        StaticMembers_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkManagers~1{networkManagerName}~1networkGroups~1{networkGroupName}~1staticMembers~1{staticMemberName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        StaticMembers_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkManagers~1{networkManagerName}~1networkGroups~1{networkGroupName}~1staticMembers~1{staticMemberName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        StaticMembers_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkManagers~1{networkManagerName}~1networkGroups~1{networkGroupName}~1staticMembers~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/static_members/methods/StaticMembers_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/static_members/methods/StaticMembers_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/static_members/methods/StaticMembers_Delete'
    application_gateways:
      id: azure.network.application_gateways
      name: application_gateways
      title: Application_gateways
      methods:
        ApplicationGateways_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1applicationGateways~1{applicationGatewayName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        ApplicationGateways_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1applicationGateways~1{applicationGatewayName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        ApplicationGateways_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1applicationGateways~1{applicationGatewayName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        ApplicationGateways_UpdateTags:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1applicationGateways~1{applicationGatewayName}~1?api-version=2022-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ApplicationGateways_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1applicationGateways~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        ApplicationGateways_ListAll:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1applicationGateways~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        ApplicationGateways_Start:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1applicationGateways~1{applicationGatewayName}~1start~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        ApplicationGateways_Stop:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1applicationGateways~1{applicationGatewayName}~1stop~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        ApplicationGateways_BackendHealth:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1applicationGateways~1{applicationGatewayName}~1backendhealth~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        ApplicationGateways_BackendHealthOnDemand:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1applicationGateways~1{applicationGatewayName}~1getBackendHealthOnDemand~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        ApplicationGateways_ListAvailableServerVariables:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1applicationGatewayAvailableServerVariables~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        ApplicationGateways_ListAvailableRequestHeaders:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1applicationGatewayAvailableRequestHeaders~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        ApplicationGateways_ListAvailableResponseHeaders:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1applicationGatewayAvailableResponseHeaders~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        ApplicationGateways_ListAvailableWafRuleSets:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1applicationGatewayAvailableWafRuleSets~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        ApplicationGateways_ListAvailableSslOptions:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1applicationGatewayAvailableSslOptions~1default~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        ApplicationGateways_ListAvailableSslPredefinedPolicies:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1applicationGatewayAvailableSslOptions~1default~1predefinedPolicies~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        ApplicationGateways_GetSslPredefinedPolicy:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1applicationGatewayAvailableSslOptions~1default~1predefinedPolicies~1{predefinedPolicyName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/application_gateways/methods/ApplicationGateways_List'
          - $ref: '#/components/x-stackQL-resources/application_gateways/methods/ApplicationGateways_ListAll'
        insert:
          - $ref: '#/components/x-stackQL-resources/application_gateways/methods/ApplicationGateways_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/application_gateways/methods/ApplicationGateways_Delete'
    application_gateway_private_link_resources:
      id: azure.network.application_gateway_private_link_resources
      name: application_gateway_private_link_resources
      title: Application_gateway_private_link_resources
      methods:
        ApplicationGatewayPrivateLinkResources_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1applicationGateways~1{applicationGatewayName}~1privateLinkResources~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/application_gateway_private_link_resources/methods/ApplicationGatewayPrivateLinkResources_List'
        insert: []
        update: []
        delete: []
    application_gateway_private_endpoint_connections:
      id: azure.network.application_gateway_private_endpoint_connections
      name: application_gateway_private_endpoint_connections
      title: Application_gateway_private_endpoint_connections
      methods:
        ApplicationGatewayPrivateEndpointConnections_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1applicationGateways~1{applicationGatewayName}~1privateEndpointConnections~1{connectionName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        ApplicationGatewayPrivateEndpointConnections_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1applicationGateways~1{applicationGatewayName}~1privateEndpointConnections~1{connectionName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        ApplicationGatewayPrivateEndpointConnections_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1applicationGateways~1{applicationGatewayName}~1privateEndpointConnections~1{connectionName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        ApplicationGatewayPrivateEndpointConnections_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1applicationGateways~1{applicationGatewayName}~1privateEndpointConnections~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/application_gateway_private_endpoint_connections/methods/ApplicationGatewayPrivateEndpointConnections_List'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/application_gateway_private_endpoint_connections/methods/ApplicationGatewayPrivateEndpointConnections_Delete'
    virtual_networks:
      id: azure.network.virtual_networks
      name: virtual_networks
      title: Virtual_networks
      methods:
        VirtualNetworks_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworks~1{virtualNetworkName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        VirtualNetworks_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworks~1{virtualNetworkName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VirtualNetworks_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworks~1{virtualNetworkName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        VirtualNetworks_UpdateTags:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworks~1{virtualNetworkName}~1?api-version=2022-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        VirtualNetworks_ListAll:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1virtualNetworks~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VirtualNetworks_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworks~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: '$.value[*].properties'
        VirtualNetworks_CheckIPAddressAvailability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworks~1{virtualNetworkName}~1CheckIPAddressAvailability~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VirtualNetworks_ListUsage:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworks~1{virtualNetworkName}~1usages~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_networks/methods/VirtualNetworks_List'
          - $ref: '#/components/x-stackQL-resources/virtual_networks/methods/VirtualNetworks_ListAll'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_networks/methods/VirtualNetworks_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_networks/methods/VirtualNetworks_Delete'
    subnets:
      id: azure.network.subnets
      name: subnets
      title: Subnets
      methods:
        Subnets_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworks~1{virtualNetworkName}~1subnets~1{subnetName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        Subnets_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworks~1{virtualNetworkName}~1subnets~1{subnetName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Subnets_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworks~1{virtualNetworkName}~1subnets~1{subnetName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        Subnets_PrepareNetworkPolicies:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworks~1{virtualNetworkName}~1subnets~1{subnetName}~1PrepareNetworkPolicies~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        Subnets_UnprepareNetworkPolicies:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworks~1{virtualNetworkName}~1subnets~1{subnetName}~1UnprepareNetworkPolicies~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        Subnets_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworks~1{virtualNetworkName}~1subnets~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/subnets/methods/Subnets_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/subnets/methods/Subnets_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/subnets/methods/Subnets_Delete'
    resource_navigation_links:
      id: azure.network.resource_navigation_links
      name: resource_navigation_links
      title: Resource_navigation_links
      methods:
        ResourceNavigationLinks_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworks~1{virtualNetworkName}~1subnets~1{subnetName}~1ResourceNavigationLinks~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/resource_navigation_links/methods/ResourceNavigationLinks_List'
        insert: []
        update: []
        delete: []
    service_association_links:
      id: azure.network.service_association_links
      name: service_association_links
      title: Service_association_links
      methods:
        ServiceAssociationLinks_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworks~1{virtualNetworkName}~1subnets~1{subnetName}~1ServiceAssociationLinks~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/service_association_links/methods/ServiceAssociationLinks_List'
        insert: []
        update: []
        delete: []
    virtual_network_peerings:
      id: azure.network.virtual_network_peerings
      name: virtual_network_peerings
      title: Virtual_network_peerings
      methods:
        VirtualNetworkPeerings_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworks~1{virtualNetworkName}~1virtualNetworkPeerings~1{virtualNetworkPeeringName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        VirtualNetworkPeerings_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworks~1{virtualNetworkName}~1virtualNetworkPeerings~1{virtualNetworkPeeringName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VirtualNetworkPeerings_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworks~1{virtualNetworkName}~1virtualNetworkPeerings~1{virtualNetworkPeeringName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        VirtualNetworkPeerings_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworks~1{virtualNetworkName}~1virtualNetworkPeerings~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_network_peerings/methods/VirtualNetworkPeerings_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_network_peerings/methods/VirtualNetworkPeerings_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_network_peerings/methods/VirtualNetworkPeerings_Delete'
    profiles:
      id: azure.network.profiles
      name: profiles
      title: Profiles
      methods:
        NetworkProfiles_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkProfiles~1{networkProfileName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        NetworkProfiles_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkProfiles~1{networkProfileName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        NetworkProfiles_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkProfiles~1{networkProfileName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        NetworkProfiles_UpdateTags:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkProfiles~1{networkProfileName}~1?api-version=2022-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        NetworkProfiles_ListAll:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1networkProfiles~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        NetworkProfiles_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkProfiles~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/profiles/methods/NetworkProfiles_List'
          - $ref: '#/components/x-stackQL-resources/profiles/methods/NetworkProfiles_ListAll'
        insert:
          - $ref: '#/components/x-stackQL-resources/profiles/methods/NetworkProfiles_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/profiles/methods/NetworkProfiles_Delete'
    network_manager_active_connectivity_configurations:
      id: azure.network.network_manager_active_connectivity_configurations
      name: network_manager_active_connectivity_configurations
      title: Network_manager_active_connectivity_configurations
      methods:
        ListActiveConnectivityConfigurations:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkManagers~1{networkManagerName}~1listActiveConnectivityConfigurations~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    network_manager_active_configurations:
      id: azure.network.network_manager_active_configurations
      name: network_manager_active_configurations
      title: Network_manager_active_configurations
      methods:
        ListActiveSecurityAdminRules:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkManagers~1{networkManagerName}~1listActiveSecurityAdminRules~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    bgp_service_communities:
      id: azure.network.bgp_service_communities
      name: bgp_service_communities
      title: Bgp_service_communities
      methods:
        BgpServiceCommunities_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1bgpServiceCommunities~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/bgp_service_communities/methods/BgpServiceCommunities_List'
        insert: []
        update: []
        delete: []
    express_route_cross_connections:
      id: azure.network.express_route_cross_connections
      name: express_route_cross_connections
      title: Express_route_cross_connections
      methods:
        ExpressRouteCrossConnections_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1expressRouteCrossConnections~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        ExpressRouteCrossConnections_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1expressRouteCrossConnections~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        ExpressRouteCrossConnections_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1expressRouteCrossConnections~1{crossConnectionName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        ExpressRouteCrossConnections_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1expressRouteCrossConnections~1{crossConnectionName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ExpressRouteCrossConnections_UpdateTags:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1expressRouteCrossConnections~1{crossConnectionName}~1?api-version=2022-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ExpressRouteCrossConnections_ListArpTable:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1expressRouteCrossConnections~1{crossConnectionName}~1peerings~1{peeringName}~1arpTables~1{devicePath}~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        ExpressRouteCrossConnections_ListRoutesTableSummary:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1expressRouteCrossConnections~1{crossConnectionName}~1peerings~1{peeringName}~1routeTablesSummary~1{devicePath}~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        ExpressRouteCrossConnections_ListRoutesTable:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1expressRouteCrossConnections~1{crossConnectionName}~1peerings~1{peeringName}~1routeTables~1{devicePath}~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/express_route_cross_connections/methods/ExpressRouteCrossConnections_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/express_route_cross_connections/methods/ExpressRouteCrossConnections_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/express_route_cross_connections/methods/ExpressRouteCrossConnections_CreateOrUpdate'
        update: []
        delete: []
    express_route_cross_connection_peerings:
      id: azure.network.express_route_cross_connection_peerings
      name: express_route_cross_connection_peerings
      title: Express_route_cross_connection_peerings
      methods:
        ExpressRouteCrossConnectionPeerings_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1expressRouteCrossConnections~1{crossConnectionName}~1peerings~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        ExpressRouteCrossConnectionPeerings_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1expressRouteCrossConnections~1{crossConnectionName}~1peerings~1{peeringName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        ExpressRouteCrossConnectionPeerings_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1expressRouteCrossConnections~1{crossConnectionName}~1peerings~1{peeringName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        ExpressRouteCrossConnectionPeerings_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1expressRouteCrossConnections~1{crossConnectionName}~1peerings~1{peeringName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/express_route_cross_connection_peerings/methods/ExpressRouteCrossConnectionPeerings_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/express_route_cross_connection_peerings/methods/ExpressRouteCrossConnectionPeerings_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/express_route_cross_connection_peerings/methods/ExpressRouteCrossConnectionPeerings_Delete'
    public_ip_addresses:
      id: azure.network.public_ip_addresses
      name: public_ip_addresses
      title: Public_ip_addresses
      methods:
        PublicIPAddresses_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1publicIPAddresses~1{publicIpAddressName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        PublicIPAddresses_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1publicIPAddresses~1{publicIpAddressName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        PublicIPAddresses_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1publicIPAddresses~1{publicIpAddressName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        PublicIPAddresses_UpdateTags:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1publicIPAddresses~1{publicIpAddressName}~1?api-version=2022-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        PublicIPAddresses_ListAll:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1publicIPAddresses~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        PublicIPAddresses_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1publicIPAddresses~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        PublicIPAddresses_ListVirtualMachineScaleSetPublicIPAddresses:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{virtualMachineScaleSetName}~1publicipaddresses~1?api-version=2018-10-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        PublicIPAddresses_ListVirtualMachineScaleSetVMPublicIPAddresses:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{virtualMachineScaleSetName}~1virtualMachines~1{virtualmachineIndex}~1networkInterfaces~1{networkInterfaceName}~1ipconfigurations~1{ipConfigurationName}~1publicipaddresses~1?api-version=2018-10-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        PublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{virtualMachineScaleSetName}~1virtualMachines~1{virtualmachineIndex}~1networkInterfaces~1{networkInterfaceName}~1ipconfigurations~1{ipConfigurationName}~1publicipaddresses~1{publicIpAddressName}~1?api-version=2018-10-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        PublicIPAddresses_ListCloudServicePublicIPAddresses:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1cloudServices~1{cloudServiceName}~1publicipaddresses~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        PublicIPAddresses_ListCloudServiceRoleInstancePublicIPAddresses:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1cloudServices~1{cloudServiceName}~1roleInstances~1{roleInstanceName}~1networkInterfaces~1{networkInterfaceName}~1ipconfigurations~1{ipConfigurationName}~1publicipaddresses~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        PublicIPAddresses_GetCloudServicePublicIPAddress:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1cloudServices~1{cloudServiceName}~1roleInstances~1{roleInstanceName}~1networkInterfaces~1{networkInterfaceName}~1ipconfigurations~1{ipConfigurationName}~1publicipaddresses~1{publicIpAddressName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/public_ip_addresses/methods/PublicIPAddresses_List'
          - $ref: '#/components/x-stackQL-resources/public_ip_addresses/methods/PublicIPAddresses_ListAll'
        insert:
          - $ref: '#/components/x-stackQL-resources/public_ip_addresses/methods/PublicIPAddresses_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/public_ip_addresses/methods/PublicIPAddresses_Delete'
    express_route_circuit_authorizations:
      id: azure.network.express_route_circuit_authorizations
      name: express_route_circuit_authorizations
      title: Express_route_circuit_authorizations
      methods:
        ExpressRouteCircuitAuthorizations_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1expressRouteCircuits~1{circuitName}~1authorizations~1{authorizationName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        ExpressRouteCircuitAuthorizations_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1expressRouteCircuits~1{circuitName}~1authorizations~1{authorizationName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        ExpressRouteCircuitAuthorizations_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1expressRouteCircuits~1{circuitName}~1authorizations~1{authorizationName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        ExpressRouteCircuitAuthorizations_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1expressRouteCircuits~1{circuitName}~1authorizations~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/express_route_circuit_authorizations/methods/ExpressRouteCircuitAuthorizations_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/express_route_circuit_authorizations/methods/ExpressRouteCircuitAuthorizations_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/express_route_circuit_authorizations/methods/ExpressRouteCircuitAuthorizations_Delete'
    express_route_circuit_peerings:
      id: azure.network.express_route_circuit_peerings
      name: express_route_circuit_peerings
      title: Express_route_circuit_peerings
      methods:
        ExpressRouteCircuitPeerings_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1expressRouteCircuits~1{circuitName}~1peerings~1{peeringName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        ExpressRouteCircuitPeerings_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1expressRouteCircuits~1{circuitName}~1peerings~1{peeringName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        ExpressRouteCircuitPeerings_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1expressRouteCircuits~1{circuitName}~1peerings~1{peeringName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        ExpressRouteCircuitPeerings_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1expressRouteCircuits~1{circuitName}~1peerings~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/express_route_circuit_peerings/methods/ExpressRouteCircuitPeerings_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/express_route_circuit_peerings/methods/ExpressRouteCircuitPeerings_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/express_route_circuit_peerings/methods/ExpressRouteCircuitPeerings_Delete'
    express_route_circuit_connections:
      id: azure.network.express_route_circuit_connections
      name: express_route_circuit_connections
      title: Express_route_circuit_connections
      methods:
        ExpressRouteCircuitConnections_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1expressRouteCircuits~1{circuitName}~1peerings~1{peeringName}~1connections~1{connectionName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        ExpressRouteCircuitConnections_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1expressRouteCircuits~1{circuitName}~1peerings~1{peeringName}~1connections~1{connectionName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        ExpressRouteCircuitConnections_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1expressRouteCircuits~1{circuitName}~1peerings~1{peeringName}~1connections~1{connectionName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        ExpressRouteCircuitConnections_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1expressRouteCircuits~1{circuitName}~1peerings~1{peeringName}~1connections~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/express_route_circuit_connections/methods/ExpressRouteCircuitConnections_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/express_route_circuit_connections/methods/ExpressRouteCircuitConnections_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/express_route_circuit_connections/methods/ExpressRouteCircuitConnections_Delete'
    peer_express_route_circuit_connections:
      id: azure.network.peer_express_route_circuit_connections
      name: peer_express_route_circuit_connections
      title: Peer_express_route_circuit_connections
      methods:
        PeerExpressRouteCircuitConnections_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1expressRouteCircuits~1{circuitName}~1peerings~1{peeringName}~1peerConnections~1{connectionName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        PeerExpressRouteCircuitConnections_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1expressRouteCircuits~1{circuitName}~1peerings~1{peeringName}~1peerConnections~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/peer_express_route_circuit_connections/methods/PeerExpressRouteCircuitConnections_List'
        insert: []
        update: []
        delete: []
    express_route_circuits:
      id: azure.network.express_route_circuits
      name: express_route_circuits
      title: Express_route_circuits
      methods:
        ExpressRouteCircuits_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1expressRouteCircuits~1{circuitName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        ExpressRouteCircuits_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1expressRouteCircuits~1{circuitName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        ExpressRouteCircuits_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1expressRouteCircuits~1{circuitName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        ExpressRouteCircuits_UpdateTags:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1expressRouteCircuits~1{circuitName}~1?api-version=2022-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ExpressRouteCircuits_ListArpTable:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1expressRouteCircuits~1{circuitName}~1peerings~1{peeringName}~1arpTables~1{devicePath}~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        ExpressRouteCircuits_ListRoutesTable:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1expressRouteCircuits~1{circuitName}~1peerings~1{peeringName}~1routeTables~1{devicePath}~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        ExpressRouteCircuits_ListRoutesTableSummary:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1expressRouteCircuits~1{circuitName}~1peerings~1{peeringName}~1routeTablesSummary~1{devicePath}~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        ExpressRouteCircuits_GetStats:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1expressRouteCircuits~1{circuitName}~1stats~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        ExpressRouteCircuits_GetPeeringStats:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1expressRouteCircuits~1{circuitName}~1peerings~1{peeringName}~1stats~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        ExpressRouteCircuits_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1expressRouteCircuits~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        ExpressRouteCircuits_ListAll:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1expressRouteCircuits~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/express_route_circuits/methods/ExpressRouteCircuits_List'
          - $ref: '#/components/x-stackQL-resources/express_route_circuits/methods/ExpressRouteCircuits_ListAll'
        insert:
          - $ref: '#/components/x-stackQL-resources/express_route_circuits/methods/ExpressRouteCircuits_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/express_route_circuits/methods/ExpressRouteCircuits_Delete'
    express_route_service_providers:
      id: azure.network.express_route_service_providers
      name: express_route_service_providers
      title: Express_route_service_providers
      methods:
        ExpressRouteServiceProviders_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1expressRouteServiceProviders~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/express_route_service_providers/methods/ExpressRouteServiceProviders_List'
        insert: []
        update: []
        delete: []
    watchers:
      id: azure.network.watchers
      name: watchers
      title: Watchers
      methods:
        NetworkWatchers_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkWatchers~1{networkWatcherName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        NetworkWatchers_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkWatchers~1{networkWatcherName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        NetworkWatchers_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkWatchers~1{networkWatcherName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        NetworkWatchers_UpdateTags:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkWatchers~1{networkWatcherName}~1?api-version=2022-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        NetworkWatchers_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkWatchers~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        NetworkWatchers_ListAll:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1networkWatchers~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        NetworkWatchers_GetTopology:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkWatchers~1{networkWatcherName}~1topology~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        NetworkWatchers_VerifyIPFlow:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkWatchers~1{networkWatcherName}~1ipFlowVerify~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        NetworkWatchers_GetNextHop:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkWatchers~1{networkWatcherName}~1nextHop~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        NetworkWatchers_GetVMSecurityRules:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkWatchers~1{networkWatcherName}~1securityGroupView~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        NetworkWatchers_GetTroubleshooting:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkWatchers~1{networkWatcherName}~1troubleshoot~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        NetworkWatchers_GetTroubleshootingResult:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkWatchers~1{networkWatcherName}~1queryTroubleshootResult~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        NetworkWatchers_SetFlowLogConfiguration:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkWatchers~1{networkWatcherName}~1configureFlowLog~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        NetworkWatchers_GetFlowLogStatus:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkWatchers~1{networkWatcherName}~1queryFlowLogStatus~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        NetworkWatchers_CheckConnectivity:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkWatchers~1{networkWatcherName}~1connectivityCheck~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        NetworkWatchers_GetAzureReachabilityReport:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkWatchers~1{networkWatcherName}~1azureReachabilityReport~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        NetworkWatchers_ListAvailableProviders:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkWatchers~1{networkWatcherName}~1availableProvidersList~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        NetworkWatchers_GetNetworkConfigurationDiagnostic:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkWatchers~1{networkWatcherName}~1networkConfigurationDiagnostic~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/watchers/methods/NetworkWatchers_List'
          - $ref: '#/components/x-stackQL-resources/watchers/methods/NetworkWatchers_ListAll'
        insert:
          - $ref: '#/components/x-stackQL-resources/watchers/methods/NetworkWatchers_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/watchers/methods/NetworkWatchers_Delete'
    packet_captures:
      id: azure.network.packet_captures
      name: packet_captures
      title: Packet_captures
      methods:
        PacketCaptures_Create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkWatchers~1{networkWatcherName}~1packetCaptures~1{packetCaptureName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        PacketCaptures_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkWatchers~1{networkWatcherName}~1packetCaptures~1{packetCaptureName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        PacketCaptures_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkWatchers~1{networkWatcherName}~1packetCaptures~1{packetCaptureName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        PacketCaptures_Stop:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkWatchers~1{networkWatcherName}~1packetCaptures~1{packetCaptureName}~1stop~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        PacketCaptures_GetStatus:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkWatchers~1{networkWatcherName}~1packetCaptures~1{packetCaptureName}~1queryStatus~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        PacketCaptures_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkWatchers~1{networkWatcherName}~1packetCaptures~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/packet_captures/methods/PacketCaptures_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/packet_captures/methods/PacketCaptures_Create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/packet_captures/methods/PacketCaptures_Delete'
    connection_monitors:
      id: azure.network.connection_monitors
      name: connection_monitors
      title: Connection_monitors
      methods:
        ConnectionMonitors_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkWatchers~1{networkWatcherName}~1connectionMonitors~1{connectionMonitorName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        ConnectionMonitors_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkWatchers~1{networkWatcherName}~1connectionMonitors~1{connectionMonitorName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        ConnectionMonitors_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkWatchers~1{networkWatcherName}~1connectionMonitors~1{connectionMonitorName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        ConnectionMonitors_UpdateTags:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkWatchers~1{networkWatcherName}~1connectionMonitors~1{connectionMonitorName}~1?api-version=2022-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ConnectionMonitors_Stop:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkWatchers~1{networkWatcherName}~1connectionMonitors~1{connectionMonitorName}~1stop~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        ConnectionMonitors_Start:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkWatchers~1{networkWatcherName}~1connectionMonitors~1{connectionMonitorName}~1start~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        ConnectionMonitors_Query:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkWatchers~1{networkWatcherName}~1connectionMonitors~1{connectionMonitorName}~1query~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        ConnectionMonitors_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkWatchers~1{networkWatcherName}~1connectionMonitors~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/connection_monitors/methods/ConnectionMonitors_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/connection_monitors/methods/ConnectionMonitors_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/connection_monitors/methods/ConnectionMonitors_Delete'
    flow_logs:
      id: azure.network.flow_logs
      name: flow_logs
      title: Flow_logs
      methods:
        FlowLogs_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkWatchers~1{networkWatcherName}~1flowLogs~1{flowLogName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        FlowLogs_UpdateTags:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkWatchers~1{networkWatcherName}~1flowLogs~1{flowLogName}~1?api-version=2022-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        FlowLogs_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkWatchers~1{networkWatcherName}~1flowLogs~1{flowLogName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        FlowLogs_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkWatchers~1{networkWatcherName}~1flowLogs~1{flowLogName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        FlowLogs_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkWatchers~1{networkWatcherName}~1flowLogs~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/flow_logs/methods/FlowLogs_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/flow_logs/methods/FlowLogs_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/flow_logs/methods/FlowLogs_Delete'
    private_endpoints:
      id: azure.network.private_endpoints
      name: private_endpoints
      title: Private_endpoints
      methods:
        PrivateEndpoints_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1privateEndpoints~1{privateEndpointName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        PrivateEndpoints_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1privateEndpoints~1{privateEndpointName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        PrivateEndpoints_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1privateEndpoints~1{privateEndpointName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        PrivateEndpoints_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1privateEndpoints~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        PrivateEndpoints_ListBySubscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1privateEndpoints~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_endpoints/methods/PrivateEndpoints_List'
          - $ref: '#/components/x-stackQL-resources/private_endpoints/methods/PrivateEndpoints_ListBySubscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/private_endpoints/methods/PrivateEndpoints_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/private_endpoints/methods/PrivateEndpoints_Delete'
    available_private_endpoint_types:
      id: azure.network.available_private_endpoint_types
      name: available_private_endpoint_types
      title: Available_private_endpoint_types
      methods:
        AvailablePrivateEndpointTypes_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1locations~1{location}~1availablePrivateEndpointTypes~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        AvailablePrivateEndpointTypes_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1locations~1{location}~1availablePrivateEndpointTypes~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/available_private_endpoint_types/methods/AvailablePrivateEndpointTypes_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/available_private_endpoint_types/methods/AvailablePrivateEndpointTypes_List'
        insert: []
        update: []
        delete: []
    private_dns_zone_groups:
      id: azure.network.private_dns_zone_groups
      name: private_dns_zone_groups
      title: Private_dns_zone_groups
      methods:
        PrivateDnsZoneGroups_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1privateEndpoints~1{privateEndpointName}~1privateDnsZoneGroups~1{privateDnsZoneGroupName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        PrivateDnsZoneGroups_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1privateEndpoints~1{privateEndpointName}~1privateDnsZoneGroups~1{privateDnsZoneGroupName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        PrivateDnsZoneGroups_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1privateEndpoints~1{privateEndpointName}~1privateDnsZoneGroups~1{privateDnsZoneGroupName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        PrivateDnsZoneGroups_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1privateEndpoints~1{privateEndpointName}~1privateDnsZoneGroups~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_dns_zone_groups/methods/PrivateDnsZoneGroups_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/private_dns_zone_groups/methods/PrivateDnsZoneGroups_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/private_dns_zone_groups/methods/PrivateDnsZoneGroups_Delete'
    application_security_groups:
      id: azure.network.application_security_groups
      name: application_security_groups
      title: Application_security_groups
      methods:
        ApplicationSecurityGroups_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1applicationSecurityGroups~1{applicationSecurityGroupName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        ApplicationSecurityGroups_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1applicationSecurityGroups~1{applicationSecurityGroupName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        ApplicationSecurityGroups_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1applicationSecurityGroups~1{applicationSecurityGroupName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        ApplicationSecurityGroups_UpdateTags:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1applicationSecurityGroups~1{applicationSecurityGroupName}~1?api-version=2022-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ApplicationSecurityGroups_ListAll:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1applicationSecurityGroups~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        ApplicationSecurityGroups_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1applicationSecurityGroups~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/application_security_groups/methods/ApplicationSecurityGroups_List'
          - $ref: '#/components/x-stackQL-resources/application_security_groups/methods/ApplicationSecurityGroups_ListAll'
        insert:
          - $ref: '#/components/x-stackQL-resources/application_security_groups/methods/ApplicationSecurityGroups_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/application_security_groups/methods/ApplicationSecurityGroups_Delete'
    azure_firewalls:
      id: azure.network.azure_firewalls
      name: azure_firewalls
      title: Azure_firewalls
      methods:
        AzureFirewalls_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1azureFirewalls~1{azureFirewallName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        AzureFirewalls_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1azureFirewalls~1{azureFirewallName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        AzureFirewalls_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1azureFirewalls~1{azureFirewallName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        AzureFirewalls_UpdateTags:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1azureFirewalls~1{azureFirewallName}~1?api-version=2022-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        AzureFirewalls_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1azureFirewalls~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        AzureFirewalls_ListAll:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1azureFirewalls~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        AzureFirewalls_ListLearnedPrefixes:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1azureFirewalls~1{azureFirewallName}~1learnedIPPrefixes~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/azure_firewalls/methods/AzureFirewalls_List'
          - $ref: '#/components/x-stackQL-resources/azure_firewalls/methods/AzureFirewalls_ListAll'
        insert:
          - $ref: '#/components/x-stackQL-resources/azure_firewalls/methods/AzureFirewalls_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/azure_firewalls/methods/AzureFirewalls_Delete'
    virtual_network_taps:
      id: azure.network.virtual_network_taps
      name: virtual_network_taps
      title: Virtual_network_taps
      methods:
        VirtualNetworkTaps_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworkTaps~1{tapName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        VirtualNetworkTaps_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworkTaps~1{tapName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VirtualNetworkTaps_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworkTaps~1{tapName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        VirtualNetworkTaps_UpdateTags:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworkTaps~1{tapName}~1?api-version=2022-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        VirtualNetworkTaps_ListAll:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1virtualNetworkTaps~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VirtualNetworkTaps_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworkTaps~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_network_taps/methods/VirtualNetworkTaps_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/virtual_network_taps/methods/VirtualNetworkTaps_ListAll'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_network_taps/methods/VirtualNetworkTaps_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_network_taps/methods/VirtualNetworkTaps_Delete'
    available_service_aliases:
      id: azure.network.available_service_aliases
      name: available_service_aliases
      title: Available_service_aliases
      methods:
        AvailableServiceAliases_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1locations~1{location}~1availableServiceAliases~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        AvailableServiceAliases_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1locations~1{location}~1availableServiceAliases~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/available_service_aliases/methods/AvailableServiceAliases_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/available_service_aliases/methods/AvailableServiceAliases_List'
        insert: []
        update: []
        delete: []
    service_tags:
      id: azure.network.service_tags
      name: service_tags
      title: Service_tags
      methods:
        ServiceTags_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1locations~1{location}~1serviceTags~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/service_tags/methods/ServiceTags_List'
        insert: []
        update: []
        delete: []
    service_tag_information:
      id: azure.network.service_tag_information
      name: service_tag_information
      title: Service_tag_information
      methods:
        ServiceTagInformation_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1locations~1{location}~1serviceTagDetails~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/service_tag_information/methods/ServiceTagInformation_List'
        insert: []
        update: []
        delete: []
    bastion_hosts:
      id: azure.network.bastion_hosts
      name: bastion_hosts
      title: Bastion_hosts
      methods:
        BastionHosts_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1bastionHosts~1{bastionHostName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        BastionHosts_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1bastionHosts~1{bastionHostName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        BastionHosts_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1bastionHosts~1{bastionHostName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        BastionHosts_UpdateTags:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1bastionHosts~1{bastionHostName}~1?api-version=2022-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        BastionHosts_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1bastionHosts~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        BastionHosts_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1bastionHosts~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        PutBastionShareableLink:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1bastionHosts~1{bastionHostName}~1createShareableLinks~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        DeleteBastionShareableLink:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1bastionHosts~1{bastionHostName}~1deleteShareableLinks~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        GetBastionShareableLink:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1bastionHosts~1{bastionHostName}~1getShareableLinks~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        GetActiveSessions:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1bastionHosts~1{bastionHostName}~1getActiveSessions~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        DisconnectActiveSessions:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1bastionHosts~1{bastionHostName}~1disconnectActiveSessions~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/bastion_hosts/methods/BastionHosts_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/bastion_hosts/methods/BastionHosts_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/bastion_hosts/methods/BastionHosts_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/bastion_hosts/methods/BastionHosts_Delete'
    security_admin_configurations:
      id: azure.network.security_admin_configurations
      name: security_admin_configurations
      title: Security_admin_configurations
      methods:
        SecurityAdminConfigurations_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkManagers~1{networkManagerName}~1securityAdminConfigurations~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        SecurityAdminConfigurations_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkManagers~1{networkManagerName}~1securityAdminConfigurations~1{configurationName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        SecurityAdminConfigurations_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkManagers~1{networkManagerName}~1securityAdminConfigurations~1{configurationName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        SecurityAdminConfigurations_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkManagers~1{networkManagerName}~1securityAdminConfigurations~1{configurationName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/security_admin_configurations/methods/SecurityAdminConfigurations_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/security_admin_configurations/methods/SecurityAdminConfigurations_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/security_admin_configurations/methods/SecurityAdminConfigurations_Delete'
    admin_rule_collections:
      id: azure.network.admin_rule_collections
      name: admin_rule_collections
      title: Admin_rule_collections
      methods:
        AdminRuleCollections_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkManagers~1{networkManagerName}~1securityAdminConfigurations~1{configurationName}~1ruleCollections~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        AdminRuleCollections_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkManagers~1{networkManagerName}~1securityAdminConfigurations~1{configurationName}~1ruleCollections~1{ruleCollectionName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        AdminRuleCollections_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkManagers~1{networkManagerName}~1securityAdminConfigurations~1{configurationName}~1ruleCollections~1{ruleCollectionName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        AdminRuleCollections_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkManagers~1{networkManagerName}~1securityAdminConfigurations~1{configurationName}~1ruleCollections~1{ruleCollectionName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/admin_rule_collections/methods/AdminRuleCollections_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/admin_rule_collections/methods/AdminRuleCollections_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/admin_rule_collections/methods/AdminRuleCollections_Delete'
    admin_rules:
      id: azure.network.admin_rules
      name: admin_rules
      title: Admin_rules
      methods:
        AdminRules_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkManagers~1{networkManagerName}~1securityAdminConfigurations~1{configurationName}~1ruleCollections~1{ruleCollectionName}~1rules~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        AdminRules_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkManagers~1{networkManagerName}~1securityAdminConfigurations~1{configurationName}~1ruleCollections~1{ruleCollectionName}~1rules~1{ruleName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        AdminRules_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkManagers~1{networkManagerName}~1securityAdminConfigurations~1{configurationName}~1ruleCollections~1{ruleCollectionName}~1rules~1{ruleName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        AdminRules_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkManagers~1{networkManagerName}~1securityAdminConfigurations~1{configurationName}~1ruleCollections~1{ruleCollectionName}~1rules~1{ruleName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/admin_rules/methods/AdminRules_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/admin_rules/methods/AdminRules_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/admin_rules/methods/AdminRules_Delete'
    virtual_routers:
      id: azure.network.virtual_routers
      name: virtual_routers
      title: Virtual_routers
      methods:
        VirtualRouters_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualRouters~1{virtualRouterName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        VirtualRouters_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualRouters~1{virtualRouterName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VirtualRouters_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualRouters~1{virtualRouterName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        VirtualRouters_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualRouters~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VirtualRouters_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1virtualRouters~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_routers/methods/VirtualRouters_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/virtual_routers/methods/VirtualRouters_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_routers/methods/VirtualRouters_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_routers/methods/VirtualRouters_Delete'
    virtual_router_peerings:
      id: azure.network.virtual_router_peerings
      name: virtual_router_peerings
      title: Virtual_router_peerings
      methods:
        VirtualRouterPeerings_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualRouters~1{virtualRouterName}~1peerings~1{peeringName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        VirtualRouterPeerings_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualRouters~1{virtualRouterName}~1peerings~1{peeringName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VirtualRouterPeerings_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualRouters~1{virtualRouterName}~1peerings~1{peeringName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        VirtualRouterPeerings_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualRouters~1{virtualRouterName}~1peerings~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_router_peerings/methods/VirtualRouterPeerings_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_router_peerings/methods/VirtualRouterPeerings_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_router_peerings/methods/VirtualRouterPeerings_Delete'
    load_balancers:
      id: azure.network.load_balancers
      name: load_balancers
      title: Load_balancers
      methods:
        LoadBalancers_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1loadBalancers~1{loadBalancerName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        LoadBalancers_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1loadBalancers~1{loadBalancerName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        LoadBalancers_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1loadBalancers~1{loadBalancerName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        LoadBalancers_UpdateTags:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1loadBalancers~1{loadBalancerName}~1?api-version=2022-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        LoadBalancers_ListAll:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1loadBalancers~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        LoadBalancers_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1loadBalancers~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        LoadBalancers_SwapPublicIpAddresses:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1locations~1{location}~1setLoadBalancerFrontendPublicIpAddresses~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        LoadBalancers_ListInboundNatRulePortMappings:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{groupName}~1providers~1Microsoft.Network~1loadBalancers~1{loadBalancerName}~1backendAddressPools~1{backendPoolName}~1queryInboundNatRulePortMapping~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/load_balancers/methods/LoadBalancers_List'
          - $ref: '#/components/x-stackQL-resources/load_balancers/methods/LoadBalancers_ListAll'
        insert:
          - $ref: '#/components/x-stackQL-resources/load_balancers/methods/LoadBalancers_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/load_balancers/methods/LoadBalancers_Delete'
    load_balancer_backend_address_pools:
      id: azure.network.load_balancer_backend_address_pools
      name: load_balancer_backend_address_pools
      title: Load_balancer_backend_address_pools
      methods:
        LoadBalancerBackendAddressPools_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1loadBalancers~1{loadBalancerName}~1backendAddressPools~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        LoadBalancerBackendAddressPools_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1loadBalancers~1{loadBalancerName}~1backendAddressPools~1{backendAddressPoolName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        LoadBalancerBackendAddressPools_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1loadBalancers~1{loadBalancerName}~1backendAddressPools~1{backendAddressPoolName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        LoadBalancerBackendAddressPools_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1loadBalancers~1{loadBalancerName}~1backendAddressPools~1{backendAddressPoolName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/load_balancer_backend_address_pools/methods/LoadBalancerBackendAddressPools_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/load_balancer_backend_address_pools/methods/LoadBalancerBackendAddressPools_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/load_balancer_backend_address_pools/methods/LoadBalancerBackendAddressPools_Delete'
    load_balancer_frontend_ip_configurations:
      id: azure.network.load_balancer_frontend_ip_configurations
      name: load_balancer_frontend_ip_configurations
      title: Load_balancer_frontend_ip_configurations
      methods:
        LoadBalancerFrontendIPConfigurations_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1loadBalancers~1{loadBalancerName}~1frontendIPConfigurations~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        LoadBalancerFrontendIPConfigurations_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1loadBalancers~1{loadBalancerName}~1frontendIPConfigurations~1{frontendIPConfigurationName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/load_balancer_frontend_ip_configurations/methods/LoadBalancerFrontendIPConfigurations_List'
        insert: []
        update: []
        delete: []
    inbound_nat_rules:
      id: azure.network.inbound_nat_rules
      name: inbound_nat_rules
      title: Inbound_nat_rules
      methods:
        InboundNatRules_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1loadBalancers~1{loadBalancerName}~1inboundNatRules~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        InboundNatRules_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1loadBalancers~1{loadBalancerName}~1inboundNatRules~1{inboundNatRuleName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        InboundNatRules_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1loadBalancers~1{loadBalancerName}~1inboundNatRules~1{inboundNatRuleName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        InboundNatRules_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1loadBalancers~1{loadBalancerName}~1inboundNatRules~1{inboundNatRuleName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/inbound_nat_rules/methods/InboundNatRules_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/inbound_nat_rules/methods/InboundNatRules_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/inbound_nat_rules/methods/InboundNatRules_Delete'
    load_balancer_load_balancing_rules:
      id: azure.network.load_balancer_load_balancing_rules
      name: load_balancer_load_balancing_rules
      title: Load_balancer_load_balancing_rules
      methods:
        LoadBalancerLoadBalancingRules_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1loadBalancers~1{loadBalancerName}~1loadBalancingRules~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        LoadBalancerLoadBalancingRules_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1loadBalancers~1{loadBalancerName}~1loadBalancingRules~1{loadBalancingRuleName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/load_balancer_load_balancing_rules/methods/LoadBalancerLoadBalancingRules_List'
        insert: []
        update: []
        delete: []
    load_balancer_outbound_rules:
      id: azure.network.load_balancer_outbound_rules
      name: load_balancer_outbound_rules
      title: Load_balancer_outbound_rules
      methods:
        LoadBalancerOutboundRules_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1loadBalancers~1{loadBalancerName}~1outboundRules~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        LoadBalancerOutboundRules_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1loadBalancers~1{loadBalancerName}~1outboundRules~1{outboundRuleName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/load_balancer_outbound_rules/methods/LoadBalancerOutboundRules_List'
        insert: []
        update: []
        delete: []
    load_balancer_network_interfaces:
      id: azure.network.load_balancer_network_interfaces
      name: load_balancer_network_interfaces
      title: Load_balancer_network_interfaces
      methods:
        LoadBalancerNetworkInterfaces_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1loadBalancers~1{loadBalancerName}~1networkInterfaces~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/load_balancer_network_interfaces/methods/LoadBalancerNetworkInterfaces_List'
        insert: []
        update: []
        delete: []
    load_balancer_probes:
      id: azure.network.load_balancer_probes
      name: load_balancer_probes
      title: Load_balancer_probes
      methods:
        LoadBalancerProbes_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1loadBalancers~1{loadBalancerName}~1probes~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        LoadBalancerProbes_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1loadBalancers~1{loadBalancerName}~1probes~1{probeName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/load_balancer_probes/methods/LoadBalancerProbes_List'
        insert: []
        update: []
        delete: []
    operations:
      id: azure.network.operations
      name: operations
      title: Operations
      methods:
        CheckDnsNameAvailability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1locations~1{location}~1CheckDnsNameAvailability~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        SupportedSecurityProviders:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualWans~1{virtualWANName}~1supportedSecurityProviders~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        generatevirtualwanvpnserverconfigurationvpnprofile:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualWans~1{virtualWANName}~1GenerateVpnProfile~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        Operations_List:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Network~1operations~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/Operations_List'
        insert: []
        update: []
        delete: []
    web_categories:
      id: azure.network.web_categories
      name: web_categories
      title: Web_categories
      methods:
        WebCategories_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1azureWebCategories~1{name}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        WebCategories_ListBySubscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1azureWebCategories~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/web_categories/methods/WebCategories_ListBySubscription'
        insert: []
        update: []
        delete: []
    virtual_wans:
      id: azure.network.virtual_wans
      name: virtual_wans
      title: Virtual_wans
      methods:
        VirtualWans_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualWans~1{VirtualWANName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VirtualWans_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualWans~1{VirtualWANName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        VirtualWans_UpdateTags:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualWans~1{VirtualWANName}~1?api-version=2022-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        VirtualWans_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualWans~1{VirtualWANName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        VirtualWans_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualWans~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VirtualWans_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1virtualWans~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_wans/methods/VirtualWans_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/virtual_wans/methods/VirtualWans_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_wans/methods/VirtualWans_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_wans/methods/VirtualWans_Delete'
    vpn_sites:
      id: azure.network.vpn_sites
      name: vpn_sites
      title: Vpn_sites
      methods:
        VpnSites_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1vpnSites~1{vpnSiteName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VpnSites_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1vpnSites~1{vpnSiteName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        VpnSites_UpdateTags:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1vpnSites~1{vpnSiteName}~1?api-version=2022-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        VpnSites_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1vpnSites~1{vpnSiteName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        VpnSites_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1vpnSites~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VpnSites_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1vpnSites~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/vpn_sites/methods/VpnSites_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/vpn_sites/methods/VpnSites_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/vpn_sites/methods/VpnSites_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/vpn_sites/methods/VpnSites_Delete'
    vpn_site_links:
      id: azure.network.vpn_site_links
      name: vpn_site_links
      title: Vpn_site_links
      methods:
        VpnSiteLinks_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1vpnSites~1{vpnSiteName}~1vpnSiteLinks~1{vpnSiteLinkName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VpnSiteLinks_ListByVpnSite:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1vpnSites~1{vpnSiteName}~1vpnSiteLinks~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/vpn_site_links/methods/VpnSiteLinks_ListByVpnSite'
        insert: []
        update: []
        delete: []
    vpn_sites_configuration:
      id: azure.network.vpn_sites_configuration
      name: vpn_sites_configuration
      title: Vpn_sites_configuration
      methods:
        VpnSitesConfiguration_Download:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualWans~1{virtualWANName}~1vpnConfiguration~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    vpn_server_configurations:
      id: azure.network.vpn_server_configurations
      name: vpn_server_configurations
      title: Vpn_server_configurations
      methods:
        VpnServerConfigurations_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1vpnServerConfigurations~1{vpnServerConfigurationName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VpnServerConfigurations_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1vpnServerConfigurations~1{vpnServerConfigurationName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        VpnServerConfigurations_UpdateTags:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1vpnServerConfigurations~1{vpnServerConfigurationName}~1?api-version=2022-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        VpnServerConfigurations_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1vpnServerConfigurations~1{vpnServerConfigurationName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        VpnServerConfigurations_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1vpnServerConfigurations~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VpnServerConfigurations_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1vpnServerConfigurations~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/vpn_server_configurations/methods/VpnServerConfigurations_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/vpn_server_configurations/methods/VpnServerConfigurations_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/vpn_server_configurations/methods/VpnServerConfigurations_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/vpn_server_configurations/methods/VpnServerConfigurations_Delete'
    configuration_policy_groups:
      id: azure.network.configuration_policy_groups
      name: configuration_policy_groups
      title: Configuration_policy_groups
      methods:
        ConfigurationPolicyGroups_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1vpnServerConfigurations~1{vpnServerConfigurationName}~1configurationPolicyGroups~1{configurationPolicyGroupName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        ConfigurationPolicyGroups_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1vpnServerConfigurations~1{vpnServerConfigurationName}~1configurationPolicyGroups~1{configurationPolicyGroupName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        ConfigurationPolicyGroups_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1vpnServerConfigurations~1{vpnServerConfigurationName}~1configurationPolicyGroups~1{configurationPolicyGroupName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        configurationPolicyGroups_ListByVpnServerConfiguration:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1vpnServerConfigurations~1{vpnServerConfigurationName}~1configurationPolicyGroups~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/configuration_policy_groups/methods/configurationPolicyGroups_ListByVpnServerConfiguration'
        insert:
          - $ref: '#/components/x-stackQL-resources/configuration_policy_groups/methods/ConfigurationPolicyGroups_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/configuration_policy_groups/methods/ConfigurationPolicyGroups_Delete'
    virtual_hubs:
      id: azure.network.virtual_hubs
      name: virtual_hubs
      title: Virtual_hubs
      methods:
        VirtualHubs_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualHubs~1{virtualHubName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VirtualHubs_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualHubs~1{virtualHubName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        VirtualHubs_UpdateTags:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualHubs~1{virtualHubName}~1?api-version=2022-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        VirtualHubs_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualHubs~1{virtualHubName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        VirtualHubs_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualHubs~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VirtualHubs_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1virtualHubs~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VirtualHubs_GetEffectiveVirtualHubRoutes:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualHubs~1{virtualHubName}~1effectiveRoutes~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_hubs/methods/VirtualHubs_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/virtual_hubs/methods/VirtualHubs_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_hubs/methods/VirtualHubs_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_hubs/methods/VirtualHubs_Delete'
    hub_virtual_network_connections:
      id: azure.network.hub_virtual_network_connections
      name: hub_virtual_network_connections
      title: Hub_virtual_network_connections
      methods:
        HubVirtualNetworkConnections_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualHubs~1{virtualHubName}~1hubVirtualNetworkConnections~1{connectionName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        HubVirtualNetworkConnections_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualHubs~1{virtualHubName}~1hubVirtualNetworkConnections~1{connectionName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        HubVirtualNetworkConnections_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualHubs~1{virtualHubName}~1hubVirtualNetworkConnections~1{connectionName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        HubVirtualNetworkConnections_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualHubs~1{virtualHubName}~1hubVirtualNetworkConnections~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/hub_virtual_network_connections/methods/HubVirtualNetworkConnections_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/hub_virtual_network_connections/methods/HubVirtualNetworkConnections_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/hub_virtual_network_connections/methods/HubVirtualNetworkConnections_Delete'
    vpn_gateways:
      id: azure.network.vpn_gateways
      name: vpn_gateways
      title: Vpn_gateways
      methods:
        VpnGateways_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1vpnGateways~1{gatewayName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        VpnGateways_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1vpnGateways~1{gatewayName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        VpnGateways_UpdateTags:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1vpnGateways~1{gatewayName}~1?api-version=2022-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        VpnGateways_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1vpnGateways~1{gatewayName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        VpnGateways_Reset:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1vpnGateways~1{gatewayName}~1reset~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        VpnGateways_StartPacketCapture:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1vpnGateways~1{gatewayName}~1startpacketcapture~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        VpnGateways_StopPacketCapture:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1vpnGateways~1{gatewayName}~1stoppacketcapture~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        VpnGateways_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1vpnGateways~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VpnGateways_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1vpnGateways~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/vpn_gateways/methods/VpnGateways_Get'
          - $ref: '#/components/x-stackQL-resources/vpn_gateways/methods/VpnGateways_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/vpn_gateways/methods/VpnGateways_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/vpn_gateways/methods/VpnGateways_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/vpn_gateways/methods/VpnGateways_Delete'
    vpn_link_connections:
      id: azure.network.vpn_link_connections
      name: vpn_link_connections
      title: Vpn_link_connections
      methods:
        VpnLinkConnections_ResetConnection:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1vpnGateways~1{gatewayName}~1vpnConnections~1{connectionName}~1vpnLinkConnections~1{linkConnectionName}~1resetconnection~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        VpnLinkConnections_GetIkeSas:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1vpnGateways~1{gatewayName}~1vpnConnections~1{connectionName}~1vpnLinkConnections~1{linkConnectionName}~1getikesas~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        VpnLinkConnections_ListByVpnConnection:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1vpnGateways~1{gatewayName}~1vpnConnections~1{connectionName}~1vpnLinkConnections~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/vpn_link_connections/methods/VpnLinkConnections_ListByVpnConnection'
        insert: []
        update: []
        delete: []
    vpn_connections:
      id: azure.network.vpn_connections
      name: vpn_connections
      title: Vpn_connections
      methods:
        VpnConnections_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1vpnGateways~1{gatewayName}~1vpnConnections~1{connectionName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VpnConnections_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1vpnGateways~1{gatewayName}~1vpnConnections~1{connectionName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        VpnConnections_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1vpnGateways~1{gatewayName}~1vpnConnections~1{connectionName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        VpnConnections_StartPacketCapture:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1vpnGateways~1{gatewayName}~1vpnConnections~1{vpnConnectionName}~1startpacketcapture~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        VpnConnections_StopPacketCapture:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1vpnGateways~1{gatewayName}~1vpnConnections~1{vpnConnectionName}~1stoppacketcapture~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        VpnConnections_ListByVpnGateway:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1vpnGateways~1{gatewayName}~1vpnConnections~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/vpn_connections/methods/VpnConnections_ListByVpnGateway'
        insert:
          - $ref: '#/components/x-stackQL-resources/vpn_connections/methods/VpnConnections_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/vpn_connections/methods/VpnConnections_Delete'
    vpn_site_link_connections:
      id: azure.network.vpn_site_link_connections
      name: vpn_site_link_connections
      title: Vpn_site_link_connections
      methods:
        VpnSiteLinkConnections_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1vpnGateways~1{gatewayName}~1vpnConnections~1{connectionName}~1vpnLinkConnections~1{linkConnectionName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    nat_rules:
      id: azure.network.nat_rules
      name: nat_rules
      title: Nat_rules
      methods:
        NatRules_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1vpnGateways~1{gatewayName}~1natRules~1{natRuleName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        NatRules_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1vpnGateways~1{gatewayName}~1natRules~1{natRuleName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        NatRules_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1vpnGateways~1{gatewayName}~1natRules~1{natRuleName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        NatRules_ListByVpnGateway:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1vpnGateways~1{gatewayName}~1natRules~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/nat_rules/methods/NatRules_ListByVpnGateway'
        insert:
          - $ref: '#/components/x-stackQL-resources/nat_rules/methods/NatRules_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/nat_rules/methods/NatRules_Delete'
    p2s_vpn_gateways:
      id: azure.network.p2s_vpn_gateways
      name: p2s_vpn_gateways
      title: P2s_vpn_gateways
      methods:
        P2sVpnGateways_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1p2svpnGateways~1{gatewayName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        P2sVpnGateways_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1p2svpnGateways~1{gatewayName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        P2sVpnGateways_UpdateTags:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1p2svpnGateways~1{gatewayName}~1?api-version=2022-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        P2sVpnGateways_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1p2svpnGateways~1{gatewayName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        P2sVpnGateways_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1p2svpnGateways~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        P2sVpnGateways_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1p2svpnGateways~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        P2SVpnGateways_Reset:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1p2svpnGateways~1{gatewayName}~1reset~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        P2sVpnGateways_GenerateVpnProfile:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1p2svpnGateways~1{gatewayName}~1generatevpnprofile~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        P2sVpnGateways_GetP2sVpnConnectionHealth:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1p2svpnGateways~1{gatewayName}~1getP2sVpnConnectionHealth~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        P2sVpnGateways_GetP2sVpnConnectionHealthDetailed:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1p2svpnGateways~1{gatewayName}~1getP2sVpnConnectionHealthDetailed~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        P2sVpnGateways_DisconnectP2sVpnConnections:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1p2svpnGateways~1{p2sVpnGatewayName}~1disconnectP2sVpnConnections~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/p2s_vpn_gateways/methods/P2sVpnGateways_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/p2s_vpn_gateways/methods/P2sVpnGateways_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/p2s_vpn_gateways/methods/P2sVpnGateways_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/p2s_vpn_gateways/methods/P2sVpnGateways_Delete'
    vpn_server_configurations_associated_with_virtual_wan:
      id: azure.network.vpn_server_configurations_associated_with_virtual_wan
      name: vpn_server_configurations_associated_with_virtual_wan
      title: Vpn_server_configurations_associated_with_virtual_wan
      methods:
        VpnServerConfigurationsAssociatedWithVirtualWan_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualWans~1{virtualWANName}~1vpnServerConfigurations~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    virtual_hub_route_table_v2s:
      id: azure.network.virtual_hub_route_table_v2s
      name: virtual_hub_route_table_v2s
      title: Virtual_hub_route_table_v2s
      methods:
        VirtualHubRouteTableV2s_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualHubs~1{virtualHubName}~1routeTables~1{routeTableName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VirtualHubRouteTableV2s_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualHubs~1{virtualHubName}~1routeTables~1{routeTableName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        VirtualHubRouteTableV2s_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualHubs~1{virtualHubName}~1routeTables~1{routeTableName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        VirtualHubRouteTableV2s_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualHubs~1{virtualHubName}~1routeTables~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_hub_route_table_v2s/methods/VirtualHubRouteTableV2s_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_hub_route_table_v2s/methods/VirtualHubRouteTableV2s_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_hub_route_table_v2s/methods/VirtualHubRouteTableV2s_Delete'
    express_route_gateways:
      id: azure.network.express_route_gateways
      name: express_route_gateways
      title: Express_route_gateways
      methods:
        ExpressRouteGateways_ListBySubscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1expressRouteGateways~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        ExpressRouteGateways_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1expressRouteGateways~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        ExpressRouteGateways_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1expressRouteGateways~1{expressRouteGatewayName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        ExpressRouteGateways_UpdateTags:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1expressRouteGateways~1{expressRouteGatewayName}~1?api-version=2022-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        ExpressRouteGateways_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1expressRouteGateways~1{expressRouteGatewayName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        ExpressRouteGateways_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1expressRouteGateways~1{expressRouteGatewayName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/express_route_gateways/methods/ExpressRouteGateways_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/express_route_gateways/methods/ExpressRouteGateways_ListBySubscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/express_route_gateways/methods/ExpressRouteGateways_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/express_route_gateways/methods/ExpressRouteGateways_Delete'
    express_route_connections:
      id: azure.network.express_route_connections
      name: express_route_connections
      title: Express_route_connections
      methods:
        ExpressRouteConnections_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1expressRouteGateways~1{expressRouteGatewayName}~1expressRouteConnections~1{connectionName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        ExpressRouteConnections_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1expressRouteGateways~1{expressRouteGatewayName}~1expressRouteConnections~1{connectionName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        ExpressRouteConnections_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1expressRouteGateways~1{expressRouteGatewayName}~1expressRouteConnections~1{connectionName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        ExpressRouteConnections_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1expressRouteGateways~1{expressRouteGatewayName}~1expressRouteConnections~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/express_route_connections/methods/ExpressRouteConnections_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/express_route_connections/methods/ExpressRouteConnections_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/express_route_connections/methods/ExpressRouteConnections_Delete'
    virtual_hub_bgp_connection:
      id: azure.network.virtual_hub_bgp_connection
      name: virtual_hub_bgp_connection
      title: Virtual_hub_bgp_connection
      methods:
        VirtualHubBgpConnection_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualHubs~1{virtualHubName}~1bgpConnections~1{connectionName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VirtualHubBgpConnection_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualHubs~1{virtualHubName}~1bgpConnections~1{connectionName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        VirtualHubBgpConnection_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualHubs~1{virtualHubName}~1bgpConnections~1{connectionName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_hub_bgp_connection/methods/VirtualHubBgpConnection_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_hub_bgp_connection/methods/VirtualHubBgpConnection_Delete'
    virtual_hub_bgp_connections:
      id: azure.network.virtual_hub_bgp_connections
      name: virtual_hub_bgp_connections
      title: Virtual_hub_bgp_connections
      methods:
        VirtualHubBgpConnections_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualHubs~1{virtualHubName}~1bgpConnections~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VirtualHubBgpConnections_ListLearnedRoutes:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualHubs~1{hubName}~1bgpConnections~1{connectionName}~1learnedRoutes~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        VirtualHubBgpConnections_ListAdvertisedRoutes:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualHubs~1{hubName}~1bgpConnections~1{connectionName}~1advertisedRoutes~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_hub_bgp_connections/methods/VirtualHubBgpConnections_List'
        insert: []
        update: []
        delete: []
    virtual_hub_ip_configuration:
      id: azure.network.virtual_hub_ip_configuration
      name: virtual_hub_ip_configuration
      title: Virtual_hub_ip_configuration
      methods:
        VirtualHubIpConfiguration_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualHubs~1{virtualHubName}~1ipConfigurations~1{ipConfigName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VirtualHubIpConfiguration_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualHubs~1{virtualHubName}~1ipConfigurations~1{ipConfigName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        VirtualHubIpConfiguration_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualHubs~1{virtualHubName}~1ipConfigurations~1{ipConfigName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        VirtualHubIpConfiguration_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualHubs~1{virtualHubName}~1ipConfigurations~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_hub_ip_configuration/methods/VirtualHubIpConfiguration_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_hub_ip_configuration/methods/VirtualHubIpConfiguration_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_hub_ip_configuration/methods/VirtualHubIpConfiguration_Delete'
    hub_route_tables:
      id: azure.network.hub_route_tables
      name: hub_route_tables
      title: Hub_route_tables
      methods:
        HubRouteTables_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualHubs~1{virtualHubName}~1hubRouteTables~1{routeTableName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        HubRouteTables_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualHubs~1{virtualHubName}~1hubRouteTables~1{routeTableName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        HubRouteTables_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualHubs~1{virtualHubName}~1hubRouteTables~1{routeTableName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        HubRouteTables_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualHubs~1{virtualHubName}~1hubRouteTables~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/hub_route_tables/methods/HubRouteTables_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/hub_route_tables/methods/HubRouteTables_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/hub_route_tables/methods/HubRouteTables_Delete'
    routing_intent:
      id: azure.network.routing_intent
      name: routing_intent
      title: Routing_intent
      methods:
        RoutingIntent_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualHubs~1{virtualHubName}~1routingIntent~1{routingIntentName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        RoutingIntent_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualHubs~1{virtualHubName}~1routingIntent~1{routingIntentName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        RoutingIntent_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualHubs~1{virtualHubName}~1routingIntent~1{routingIntentName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        RoutingIntent_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualHubs~1{virtualHubName}~1routingIntent~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/routing_intent/methods/RoutingIntent_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/routing_intent/methods/RoutingIntent_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/routing_intent/methods/RoutingIntent_Delete'
    ddos_protection_plans:
      id: azure.network.ddos_protection_plans
      name: ddos_protection_plans
      title: Ddos_protection_plans
      methods:
        DdosProtectionPlans_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1ddosProtectionPlans~1{ddosProtectionPlanName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        DdosProtectionPlans_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1ddosProtectionPlans~1{ddosProtectionPlanName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        DdosProtectionPlans_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1ddosProtectionPlans~1{ddosProtectionPlanName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        DdosProtectionPlans_UpdateTags:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1ddosProtectionPlans~1{ddosProtectionPlanName}~1?api-version=2022-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        DdosProtectionPlans_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1ddosProtectionPlans~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        DdosProtectionPlans_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1ddosProtectionPlans~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/ddos_protection_plans/methods/DdosProtectionPlans_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/ddos_protection_plans/methods/DdosProtectionPlans_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/ddos_protection_plans/methods/DdosProtectionPlans_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/ddos_protection_plans/methods/DdosProtectionPlans_Delete'
    interfaces:
      id: azure.network.interfaces
      name: interfaces
      title: Interfaces
      methods:
        NetworkInterfaces_ListCloudServiceRoleInstanceNetworkInterfaces:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1cloudServices~1{cloudServiceName}~1roleInstances~1{roleInstanceName}~1networkInterfaces~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        NetworkInterfaces_ListCloudServiceNetworkInterfaces:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1cloudServices~1{cloudServiceName}~1networkInterfaces~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        NetworkInterfaces_GetCloudServiceNetworkInterface:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1cloudServices~1{cloudServiceName}~1roleInstances~1{roleInstanceName}~1networkInterfaces~1{networkInterfaceName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        NetworkInterfaces_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkInterfaces~1{networkInterfaceName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        NetworkInterfaces_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkInterfaces~1{networkInterfaceName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        NetworkInterfaces_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkInterfaces~1{networkInterfaceName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        NetworkInterfaces_UpdateTags:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkInterfaces~1{networkInterfaceName}~1?api-version=2022-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        NetworkInterfaces_ListAll:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1networkInterfaces~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        NetworkInterfaces_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkInterfaces~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        NetworkInterfaces_GetEffectiveRouteTable:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkInterfaces~1{networkInterfaceName}~1effectiveRouteTable~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        NetworkInterfaces_ListEffectiveNetworkSecurityGroups:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkInterfaces~1{networkInterfaceName}~1effectiveNetworkSecurityGroups~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        NetworkInterfaces_ListVirtualMachineScaleSetVMNetworkInterfaces:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1microsoft.Compute~1virtualMachineScaleSets~1{virtualMachineScaleSetName}~1virtualMachines~1{virtualmachineIndex}~1networkInterfaces~1?api-version=2018-10-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        NetworkInterfaces_ListVirtualMachineScaleSetNetworkInterfaces:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1microsoft.Compute~1virtualMachineScaleSets~1{virtualMachineScaleSetName}~1networkInterfaces~1?api-version=2018-10-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        NetworkInterfaces_GetVirtualMachineScaleSetNetworkInterface:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1microsoft.Compute~1virtualMachineScaleSets~1{virtualMachineScaleSetName}~1virtualMachines~1{virtualmachineIndex}~1networkInterfaces~1{networkInterfaceName}~1?api-version=2018-10-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        NetworkInterfaces_ListVirtualMachineScaleSetIpConfigurations:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1microsoft.Compute~1virtualMachineScaleSets~1{virtualMachineScaleSetName}~1virtualMachines~1{virtualmachineIndex}~1networkInterfaces~1{networkInterfaceName}~1ipConfigurations~1?api-version=2018-10-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        NetworkInterfaces_GetVirtualMachineScaleSetIpConfiguration:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1microsoft.Compute~1virtualMachineScaleSets~1{virtualMachineScaleSetName}~1virtualMachines~1{virtualmachineIndex}~1networkInterfaces~1{networkInterfaceName}~1ipConfigurations~1{ipConfigurationName}~1?api-version=2018-10-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/interfaces/methods/NetworkInterfaces_List'
          - $ref: '#/components/x-stackQL-resources/interfaces/methods/NetworkInterfaces_ListAll'
        insert:
          - $ref: '#/components/x-stackQL-resources/interfaces/methods/NetworkInterfaces_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/interfaces/methods/NetworkInterfaces_Delete'
    custom_ip_prefixes:
      id: azure.network.custom_ip_prefixes
      name: custom_ip_prefixes
      title: Custom_ip_prefixes
      methods:
        CustomIPPrefixes_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1customIpPrefixes~1{customIpPrefixName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        CustomIPPrefixes_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1customIpPrefixes~1{customIpPrefixName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        CustomIPPrefixes_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1customIpPrefixes~1{customIpPrefixName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        CustomIPPrefixes_UpdateTags:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1customIpPrefixes~1{customIpPrefixName}~1?api-version=2022-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        CustomIPPrefixes_ListAll:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1customIpPrefixes~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        CustomIPPrefixes_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1customIpPrefixes~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/custom_ip_prefixes/methods/CustomIPPrefixes_List'
          - $ref: '#/components/x-stackQL-resources/custom_ip_prefixes/methods/CustomIPPrefixes_ListAll'
        insert:
          - $ref: '#/components/x-stackQL-resources/custom_ip_prefixes/methods/CustomIPPrefixes_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/custom_ip_prefixes/methods/CustomIPPrefixes_Delete'
    private_link_services:
      id: azure.network.private_link_services
      name: private_link_services
      title: Private_link_services
      methods:
        PrivateLinkServices_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1privateLinkServices~1{serviceName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        PrivateLinkServices_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1privateLinkServices~1{serviceName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        PrivateLinkServices_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1privateLinkServices~1{serviceName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        PrivateLinkServices_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1privateLinkServices~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        PrivateLinkServices_ListBySubscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1privateLinkServices~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        PrivateLinkServices_GetPrivateEndpointConnection:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1privateLinkServices~1{serviceName}~1privateEndpointConnections~1{peConnectionName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        PrivateLinkServices_UpdatePrivateEndpointConnection:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1privateLinkServices~1{serviceName}~1privateEndpointConnections~1{peConnectionName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        PrivateLinkServices_DeletePrivateEndpointConnection:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1privateLinkServices~1{serviceName}~1privateEndpointConnections~1{peConnectionName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        PrivateLinkServices_ListPrivateEndpointConnections:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1privateLinkServices~1{serviceName}~1privateEndpointConnections~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        PrivateLinkServices_CheckPrivateLinkServiceVisibility:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1locations~1{location}~1checkPrivateLinkServiceVisibility~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        PrivateLinkServices_CheckPrivateLinkServiceVisibilityByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1locations~1{location}~1checkPrivateLinkServiceVisibility~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        PrivateLinkServices_ListAutoApprovedPrivateLinkServices:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1locations~1{location}~1autoApprovedPrivateLinkServices~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        PrivateLinkServices_ListAutoApprovedPrivateLinkServicesByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1locations~1{location}~1autoApprovedPrivateLinkServices~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_link_services/methods/PrivateLinkServices_List'
          - $ref: '#/components/x-stackQL-resources/private_link_services/methods/PrivateLinkServices_ListBySubscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/private_link_services/methods/PrivateLinkServices_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/private_link_services/methods/PrivateLinkServices_Delete'
    interface_ip_configurations:
      id: azure.network.interface_ip_configurations
      name: interface_ip_configurations
      title: Interface_ip_configurations
      methods:
        NetworkInterfaceIPConfigurations_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkInterfaces~1{networkInterfaceName}~1ipConfigurations~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        NetworkInterfaceIPConfigurations_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkInterfaces~1{networkInterfaceName}~1ipConfigurations~1{ipConfigurationName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/interface_ip_configurations/methods/NetworkInterfaceIPConfigurations_List'
        insert: []
        update: []
        delete: []
    interface_load_balancers:
      id: azure.network.interface_load_balancers
      name: interface_load_balancers
      title: Interface_load_balancers
      methods:
        NetworkInterfaceLoadBalancers_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkInterfaces~1{networkInterfaceName}~1loadBalancers~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/interface_load_balancers/methods/NetworkInterfaceLoadBalancers_List'
        insert: []
        update: []
        delete: []
    interface_tap_configurations:
      id: azure.network.interface_tap_configurations
      name: interface_tap_configurations
      title: Interface_tap_configurations
      methods:
        NetworkInterfaceTapConfigurations_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkInterfaces~1{networkInterfaceName}~1tapConfigurations~1{tapConfigurationName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        NetworkInterfaceTapConfigurations_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkInterfaces~1{networkInterfaceName}~1tapConfigurations~1{tapConfigurationName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        NetworkInterfaceTapConfigurations_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkInterfaces~1{networkInterfaceName}~1tapConfigurations~1{tapConfigurationName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        NetworkInterfaceTapConfigurations_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkInterfaces~1{networkInterfaceName}~1tapConfigurations~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/interface_tap_configurations/methods/NetworkInterfaceTapConfigurations_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/interface_tap_configurations/methods/NetworkInterfaceTapConfigurations_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/interface_tap_configurations/methods/NetworkInterfaceTapConfigurations_Delete'
    ddos_custom_policies:
      id: azure.network.ddos_custom_policies
      name: ddos_custom_policies
      title: Ddos_custom_policies
      methods:
        DdosCustomPolicies_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1ddosCustomPolicies~1{ddosCustomPolicyName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        DdosCustomPolicies_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1ddosCustomPolicies~1{ddosCustomPolicyName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        DdosCustomPolicies_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1ddosCustomPolicies~1{ddosCustomPolicyName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        DdosCustomPolicies_UpdateTags:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1ddosCustomPolicies~1{ddosCustomPolicyName}~1?api-version=2022-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/ddos_custom_policies/methods/DdosCustomPolicies_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/ddos_custom_policies/methods/DdosCustomPolicies_Delete'
    available_delegations:
      id: azure.network.available_delegations
      name: available_delegations
      title: Available_delegations
      methods:
        AvailableDelegations_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1locations~1{location}~1availableDelegations~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/available_delegations/methods/AvailableDelegations_List'
        insert: []
        update: []
        delete: []
    available_resource_group_delegations:
      id: azure.network.available_resource_group_delegations
      name: available_resource_group_delegations
      title: Available_resource_group_delegations
      methods:
        AvailableResourceGroupDelegations_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1locations~1{location}~1availableDelegations~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/available_resource_group_delegations/methods/AvailableResourceGroupDelegations_List'
        insert: []
        update: []
        delete: []
    usages:
      id: azure.network.usages
      name: usages
      title: Usages
      methods:
        Usages_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1locations~1{location}~1usages~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/usages/methods/Usages_List'
        insert: []
        update: []
        delete: []
    route_filters:
      id: azure.network.route_filters
      name: route_filters
      title: Route_filters
      methods:
        RouteFilters_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1routeFilters~1{routeFilterName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        RouteFilters_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1routeFilters~1{routeFilterName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        RouteFilters_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1routeFilters~1{routeFilterName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        RouteFilters_UpdateTags:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1routeFilters~1{routeFilterName}~1?api-version=2022-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        RouteFilters_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1routeFilters~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        RouteFilters_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1routeFilters~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/route_filters/methods/RouteFilters_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/route_filters/methods/RouteFilters_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/route_filters/methods/RouteFilters_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/route_filters/methods/RouteFilters_Delete'
    route_filter_rules:
      id: azure.network.route_filter_rules
      name: route_filter_rules
      title: Route_filter_rules
      methods:
        RouteFilterRules_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1routeFilters~1{routeFilterName}~1routeFilterRules~1{ruleName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        RouteFilterRules_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1routeFilters~1{routeFilterName}~1routeFilterRules~1{ruleName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        RouteFilterRules_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1routeFilters~1{routeFilterName}~1routeFilterRules~1{ruleName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        RouteFilterRules_ListByRouteFilter:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1routeFilters~1{routeFilterName}~1routeFilterRules~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/route_filter_rules/methods/RouteFilterRules_ListByRouteFilter'
        insert:
          - $ref: '#/components/x-stackQL-resources/route_filter_rules/methods/RouteFilterRules_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/route_filter_rules/methods/RouteFilterRules_Delete'
    express_route_ports_locations:
      id: azure.network.express_route_ports_locations
      name: express_route_ports_locations
      title: Express_route_ports_locations
      methods:
        ExpressRoutePortsLocations_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1ExpressRoutePortsLocations~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        ExpressRoutePortsLocations_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1ExpressRoutePortsLocations~1{locationName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/express_route_ports_locations/methods/ExpressRoutePortsLocations_List'
        insert: []
        update: []
        delete: []
    express_route_ports:
      id: azure.network.express_route_ports
      name: express_route_ports
      title: Express_route_ports
      methods:
        ExpressRoutePorts_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1ExpressRoutePorts~1{expressRoutePortName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        ExpressRoutePorts_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1ExpressRoutePorts~1{expressRoutePortName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        ExpressRoutePorts_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1ExpressRoutePorts~1{expressRoutePortName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        ExpressRoutePorts_UpdateTags:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1ExpressRoutePorts~1{expressRoutePortName}~1?api-version=2022-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ExpressRoutePorts_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1ExpressRoutePorts~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        ExpressRoutePorts_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1ExpressRoutePorts~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        ExpressRoutePorts_GenerateLOA:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1expressRoutePorts~1{expressRoutePortName}~1generateLoa~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/express_route_ports/methods/ExpressRoutePorts_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/express_route_ports/methods/ExpressRoutePorts_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/express_route_ports/methods/ExpressRoutePorts_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/express_route_ports/methods/ExpressRoutePorts_Delete'
    express_route_links:
      id: azure.network.express_route_links
      name: express_route_links
      title: Express_route_links
      methods:
        ExpressRouteLinks_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1ExpressRoutePorts~1{expressRoutePortName}~1links~1{linkName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        ExpressRouteLinks_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1ExpressRoutePorts~1{expressRoutePortName}~1links~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/express_route_links/methods/ExpressRouteLinks_List'
        insert: []
        update: []
        delete: []
    express_route_port_authorizations:
      id: azure.network.express_route_port_authorizations
      name: express_route_port_authorizations
      title: Express_route_port_authorizations
      methods:
        ExpressRoutePortAuthorizations_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1expressRoutePorts~1{expressRoutePortName}~1authorizations~1{authorizationName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        ExpressRoutePortAuthorizations_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1expressRoutePorts~1{expressRoutePortName}~1authorizations~1{authorizationName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        ExpressRoutePortAuthorizations_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1expressRoutePorts~1{expressRoutePortName}~1authorizations~1{authorizationName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        ExpressRoutePortAuthorizations_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1expressRoutePorts~1{expressRoutePortName}~1authorizations~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/express_route_port_authorizations/methods/ExpressRoutePortAuthorizations_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/express_route_port_authorizations/methods/ExpressRoutePortAuthorizations_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/express_route_port_authorizations/methods/ExpressRoutePortAuthorizations_Delete'
    scope_connections:
      id: azure.network.scope_connections
      name: scope_connections
      title: Scope_connections
      methods:
        ScopeConnections_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkManagers~1{networkManagerName}~1scopeConnections~1{scopeConnectionName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        ScopeConnections_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkManagers~1{networkManagerName}~1scopeConnections~1{scopeConnectionName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        ScopeConnections_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkManagers~1{networkManagerName}~1scopeConnections~1{scopeConnectionName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        ScopeConnections_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkManagers~1{networkManagerName}~1scopeConnections~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/scope_connections/methods/ScopeConnections_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/scope_connections/methods/ScopeConnections_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/scope_connections/methods/ScopeConnections_Delete'
    service_endpoint_policies:
      id: azure.network.service_endpoint_policies
      name: service_endpoint_policies
      title: Service_endpoint_policies
      methods:
        ServiceEndpointPolicies_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1serviceEndpointPolicies~1{serviceEndpointPolicyName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        ServiceEndpointPolicies_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1serviceEndpointPolicies~1{serviceEndpointPolicyName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        ServiceEndpointPolicies_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1serviceEndpointPolicies~1{serviceEndpointPolicyName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        ServiceEndpointPolicies_UpdateTags:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1serviceEndpointPolicies~1{serviceEndpointPolicyName}~1?api-version=2022-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ServiceEndpointPolicies_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1ServiceEndpointPolicies~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        ServiceEndpointPolicies_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1serviceEndpointPolicies~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/service_endpoint_policies/methods/ServiceEndpointPolicies_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/service_endpoint_policies/methods/ServiceEndpointPolicies_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/service_endpoint_policies/methods/ServiceEndpointPolicies_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/service_endpoint_policies/methods/ServiceEndpointPolicies_Delete'
    service_endpoint_policy_definitions:
      id: azure.network.service_endpoint_policy_definitions
      name: service_endpoint_policy_definitions
      title: Service_endpoint_policy_definitions
      methods:
        ServiceEndpointPolicyDefinitions_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1serviceEndpointPolicies~1{serviceEndpointPolicyName}~1serviceEndpointPolicyDefinitions~1{serviceEndpointPolicyDefinitionName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        ServiceEndpointPolicyDefinitions_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1serviceEndpointPolicies~1{serviceEndpointPolicyName}~1serviceEndpointPolicyDefinitions~1{serviceEndpointPolicyDefinitionName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        ServiceEndpointPolicyDefinitions_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1serviceEndpointPolicies~1{serviceEndpointPolicyName}~1serviceEndpointPolicyDefinitions~1{serviceEndpointPolicyDefinitionName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        ServiceEndpointPolicyDefinitions_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1serviceEndpointPolicies~1{serviceEndpointPolicyName}~1serviceEndpointPolicyDefinitions~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/service_endpoint_policy_definitions/methods/ServiceEndpointPolicyDefinitions_ListByResourceGroup'
        insert:
          - $ref: '#/components/x-stackQL-resources/service_endpoint_policy_definitions/methods/ServiceEndpointPolicyDefinitions_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/service_endpoint_policy_definitions/methods/ServiceEndpointPolicyDefinitions_Delete'
    network_manager_effective_connectivity_configuration:
      id: azure.network.network_manager_effective_connectivity_configuration
      name: network_manager_effective_connectivity_configuration
      title: Network_manager_effective_connectivity_configuration
      methods:
        ListNetworkManagerEffectiveConnectivityConfigurations:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworks~1{virtualNetworkName}~1listNetworkManagerEffectiveConnectivityConfigurations~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    network_manager_effective_security_admin_rules:
      id: azure.network.network_manager_effective_security_admin_rules
      name: network_manager_effective_security_admin_rules
      title: Network_manager_effective_security_admin_rules
      methods:
        ListNetworkManagerEffectiveSecurityAdminRules:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworks~1{virtualNetworkName}~1listNetworkManagerEffectiveSecurityAdminRules~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    connectivity_configurations:
      id: azure.network.connectivity_configurations
      name: connectivity_configurations
      title: Connectivity_configurations
      methods:
        ConnectivityConfigurations_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkManagers~1{networkManagerName}~1connectivityConfigurations~1{configurationName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        ConnectivityConfigurations_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkManagers~1{networkManagerName}~1connectivityConfigurations~1{configurationName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        ConnectivityConfigurations_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkManagers~1{networkManagerName}~1connectivityConfigurations~1{configurationName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        ConnectivityConfigurations_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkManagers~1{networkManagerName}~1connectivityConfigurations~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/connectivity_configurations/methods/ConnectivityConfigurations_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/connectivity_configurations/methods/ConnectivityConfigurations_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/connectivity_configurations/methods/ConnectivityConfigurations_Delete'
    security_groups:
      id: azure.network.security_groups
      name: security_groups
      title: Security_groups
      methods:
        NetworkSecurityGroups_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkSecurityGroups~1{networkSecurityGroupName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        NetworkSecurityGroups_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkSecurityGroups~1{networkSecurityGroupName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        NetworkSecurityGroups_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkSecurityGroups~1{networkSecurityGroupName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        NetworkSecurityGroups_UpdateTags:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkSecurityGroups~1{networkSecurityGroupName}~1?api-version=2022-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        NetworkSecurityGroups_ListAll:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1networkSecurityGroups~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        NetworkSecurityGroups_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkSecurityGroups~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/security_groups/methods/NetworkSecurityGroups_List'
          - $ref: '#/components/x-stackQL-resources/security_groups/methods/NetworkSecurityGroups_ListAll'
        insert:
          - $ref: '#/components/x-stackQL-resources/security_groups/methods/NetworkSecurityGroups_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/security_groups/methods/NetworkSecurityGroups_Delete'
    security_rules:
      id: azure.network.security_rules
      name: security_rules
      title: Security_rules
      methods:
        SecurityRules_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkSecurityGroups~1{networkSecurityGroupName}~1securityRules~1{securityRuleName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        SecurityRules_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkSecurityGroups~1{networkSecurityGroupName}~1securityRules~1{securityRuleName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        SecurityRules_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkSecurityGroups~1{networkSecurityGroupName}~1securityRules~1{securityRuleName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        SecurityRules_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkSecurityGroups~1{networkSecurityGroupName}~1securityRules~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/security_rules/methods/SecurityRules_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/security_rules/methods/SecurityRules_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/security_rules/methods/SecurityRules_Delete'
    default_security_rules:
      id: azure.network.default_security_rules
      name: default_security_rules
      title: Default_security_rules
      methods:
        DefaultSecurityRules_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkSecurityGroups~1{networkSecurityGroupName}~1defaultSecurityRules~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        DefaultSecurityRules_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkSecurityGroups~1{networkSecurityGroupName}~1defaultSecurityRules~1{defaultSecurityRuleName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/default_security_rules/methods/DefaultSecurityRules_List'
        insert: []
        update: []
        delete: []
    virtual_network_gateways:
      id: azure.network.virtual_network_gateways
      name: virtual_network_gateways
      title: Virtual_network_gateways
      methods:
        VirtualNetworkGateways_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworkGateways~1{virtualNetworkGatewayName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        VirtualNetworkGateways_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworkGateways~1{virtualNetworkGatewayName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VirtualNetworkGateways_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworkGateways~1{virtualNetworkGatewayName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        VirtualNetworkGateways_UpdateTags:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworkGateways~1{virtualNetworkGatewayName}~1?api-version=2022-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        VirtualNetworkGateways_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworkGateways~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VirtualNetworkGateways_ListConnections:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworkGateways~1{virtualNetworkGatewayName}~1connections~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VirtualNetworkGateways_Reset:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworkGateways~1{virtualNetworkGatewayName}~1reset~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        VirtualNetworkGateways_ResetVpnClientSharedKey:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworkGateways~1{virtualNetworkGatewayName}~1resetvpnclientsharedkey~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        VirtualNetworkGateways_Generatevpnclientpackage:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworkGateways~1{virtualNetworkGatewayName}~1generatevpnclientpackage~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        VirtualNetworkGateways_GenerateVpnProfile:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworkGateways~1{virtualNetworkGatewayName}~1generatevpnprofile~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        VirtualNetworkGateways_GetVpnProfilePackageUrl:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworkGateways~1{virtualNetworkGatewayName}~1getvpnprofilepackageurl~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        VirtualNetworkGateways_GetBgpPeerStatus:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworkGateways~1{virtualNetworkGatewayName}~1getBgpPeerStatus~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        VirtualNetworkGateways_SupportedVpnDevices:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworkGateways~1{virtualNetworkGatewayName}~1supportedvpndevices~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        VirtualNetworkGateways_GetLearnedRoutes:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworkGateways~1{virtualNetworkGatewayName}~1getLearnedRoutes~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        VirtualNetworkGateways_GetAdvertisedRoutes:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworkGateways~1{virtualNetworkGatewayName}~1getAdvertisedRoutes~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        VirtualNetworkGateways_SetVpnclientIpsecParameters:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworkGateways~1{virtualNetworkGatewayName}~1setvpnclientipsecparameters~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        VirtualNetworkGateways_GetVpnclientIpsecParameters:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworkGateways~1{virtualNetworkGatewayName}~1getvpnclientipsecparameters~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        VirtualNetworkGateways_VpnDeviceConfigurationScript:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1connections~1{virtualNetworkGatewayConnectionName}~1vpndeviceconfigurationscript~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        VirtualNetworkGateways_StartPacketCapture:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworkGateways~1{virtualNetworkGatewayName}~1startPacketCapture~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        VirtualNetworkGateways_StopPacketCapture:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworkGateways~1{virtualNetworkGatewayName}~1stopPacketCapture~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        VirtualNetworkGateways_GetVpnclientConnectionHealth:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworkGateways~1{virtualNetworkGatewayName}~1getVpnClientConnectionHealth~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        VirtualNetworkGateways_DisconnectVirtualNetworkGatewayVpnConnections:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworkGateways~1{virtualNetworkGatewayName}~1disconnectVirtualNetworkGatewayVpnConnections~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_network_gateways/methods/VirtualNetworkGateways_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_network_gateways/methods/VirtualNetworkGateways_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_network_gateways/methods/VirtualNetworkGateways_Delete'
    virtual_network_gateway_connections:
      id: azure.network.virtual_network_gateway_connections
      name: virtual_network_gateway_connections
      title: Virtual_network_gateway_connections
      methods:
        VirtualNetworkGatewayConnections_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1connections~1{virtualNetworkGatewayConnectionName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        VirtualNetworkGatewayConnections_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1connections~1{virtualNetworkGatewayConnectionName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VirtualNetworkGatewayConnections_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1connections~1{virtualNetworkGatewayConnectionName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        VirtualNetworkGatewayConnections_UpdateTags:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1connections~1{virtualNetworkGatewayConnectionName}~1?api-version=2022-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        VirtualNetworkGatewayConnections_SetSharedKey:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1connections~1{virtualNetworkGatewayConnectionName}~1sharedkey~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        VirtualNetworkGatewayConnections_GetSharedKey:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1connections~1{virtualNetworkGatewayConnectionName}~1sharedkey~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VirtualNetworkGatewayConnections_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1connections~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VirtualNetworkGatewayConnections_ResetSharedKey:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1connections~1{virtualNetworkGatewayConnectionName}~1sharedkey~1reset~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        VirtualNetworkGatewayConnections_StartPacketCapture:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1connections~1{virtualNetworkGatewayConnectionName}~1startPacketCapture~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        VirtualNetworkGatewayConnections_StopPacketCapture:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1connections~1{virtualNetworkGatewayConnectionName}~1stopPacketCapture~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        VirtualNetworkGatewayConnections_GetIkeSas:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1connections~1{virtualNetworkGatewayConnectionName}~1getikesas~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        VirtualNetworkGatewayConnections_ResetConnection:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1connections~1{virtualNetworkGatewayConnectionName}~1resetconnection~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_network_gateway_connections/methods/VirtualNetworkGatewayConnections_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_network_gateway_connections/methods/VirtualNetworkGatewayConnections_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_network_gateway_connections/methods/VirtualNetworkGatewayConnections_Delete'
    local_network_gateways:
      id: azure.network.local_network_gateways
      name: local_network_gateways
      title: Local_network_gateways
      methods:
        LocalNetworkGateways_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1localNetworkGateways~1{localNetworkGatewayName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        LocalNetworkGateways_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1localNetworkGateways~1{localNetworkGatewayName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        LocalNetworkGateways_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1localNetworkGateways~1{localNetworkGatewayName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        LocalNetworkGateways_UpdateTags:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1localNetworkGateways~1{localNetworkGatewayName}~1?api-version=2022-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        LocalNetworkGateways_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1localNetworkGateways~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/local_network_gateways/methods/LocalNetworkGateways_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/local_network_gateways/methods/LocalNetworkGateways_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/local_network_gateways/methods/LocalNetworkGateways_Delete'
    virtual_network_gateway_nat_rules:
      id: azure.network.virtual_network_gateway_nat_rules
      name: virtual_network_gateway_nat_rules
      title: Virtual_network_gateway_nat_rules
      methods:
        VirtualNetworkGatewayNatRules_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworkGateways~1{virtualNetworkGatewayName}~1natRules~1{natRuleName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VirtualNetworkGatewayNatRules_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworkGateways~1{virtualNetworkGatewayName}~1natRules~1{natRuleName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        VirtualNetworkGatewayNatRules_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworkGateways~1{virtualNetworkGatewayName}~1natRules~1{natRuleName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        VirtualNetworkGatewayNatRules_ListByVirtualNetworkGateway:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworkGateways~1{virtualNetworkGatewayName}~1natRules~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_network_gateway_nat_rules/methods/VirtualNetworkGatewayNatRules_ListByVirtualNetworkGateway'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_network_gateway_nat_rules/methods/VirtualNetworkGatewayNatRules_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_network_gateway_nat_rules/methods/VirtualNetworkGatewayNatRules_Delete'
    ip_allocations:
      id: azure.network.ip_allocations
      name: ip_allocations
      title: Ip_allocations
      methods:
        IpAllocations_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1IpAllocations~1{ipAllocationName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        IpAllocations_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1IpAllocations~1{ipAllocationName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        IpAllocations_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1IpAllocations~1{ipAllocationName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        IpAllocations_UpdateTags:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1IpAllocations~1{ipAllocationName}~1?api-version=2022-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        IpAllocations_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1IpAllocations~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        IpAllocations_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1IpAllocations~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/ip_allocations/methods/IpAllocations_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/ip_allocations/methods/IpAllocations_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/ip_allocations/methods/IpAllocations_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/ip_allocations/methods/IpAllocations_Delete'
    ip_groups:
      id: azure.network.ip_groups
      name: ip_groups
      title: Ip_groups
      methods:
        IpGroups_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1ipGroups~1{ipGroupsName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        IpGroups_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1ipGroups~1{ipGroupsName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        IpGroups_UpdateGroups:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1ipGroups~1{ipGroupsName}~1?api-version=2022-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        IpGroups_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1ipGroups~1{ipGroupsName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        IpGroups_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1ipGroups~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        IpGroups_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1ipGroups~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/ip_groups/methods/IpGroups_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/ip_groups/methods/IpGroups_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/ip_groups/methods/IpGroups_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/ip_groups/methods/IpGroups_Delete'
    managers:
      id: azure.network.managers
      name: managers
      title: Managers
      methods:
        NetworkManagers_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkManagers~1{networkManagerName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        NetworkManagers_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkManagers~1{networkManagerName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        NetworkManagers_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkManagers~1{networkManagerName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        NetworkManagers_Patch:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkManagers~1{networkManagerName}~1?api-version=2022-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        NetworkManagers_ListBySubscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1networkManagers~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        NetworkManagers_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkManagers~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/managers/methods/NetworkManagers_List'
          - $ref: '#/components/x-stackQL-resources/managers/methods/NetworkManagers_ListBySubscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/managers/methods/NetworkManagers_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/managers/methods/NetworkManagers_Delete'
    manager_commits:
      id: azure.network.manager_commits
      name: manager_commits
      title: Manager_commits
      methods:
        NetworkManagerCommits_Post:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkManagers~1{networkManagerName}~1commit~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    manager_deployment_status:
      id: azure.network.manager_deployment_status
      name: manager_deployment_status
      title: Manager_deployment_status
      methods:
        NetworkManagerDeploymentStatus_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkManagers~1{networkManagerName}~1listDeploymentStatus~1?api-version=2022-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/manager_deployment_status/methods/NetworkManagerDeploymentStatus_List'
        insert: []
        update: []
        delete: []
    web_application_firewall_policies:
      id: azure.network.web_application_firewall_policies
      name: web_application_firewall_policies
      title: Web_application_firewall_policies
      methods:
        WebApplicationFirewallPolicies_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1ApplicationGatewayWebApplicationFirewallPolicies~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        WebApplicationFirewallPolicies_ListAll:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1ApplicationGatewayWebApplicationFirewallPolicies~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        WebApplicationFirewallPolicies_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1ApplicationGatewayWebApplicationFirewallPolicies~1{policyName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        WebApplicationFirewallPolicies_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1ApplicationGatewayWebApplicationFirewallPolicies~1{policyName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        WebApplicationFirewallPolicies_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1ApplicationGatewayWebApplicationFirewallPolicies~1{policyName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/web_application_firewall_policies/methods/WebApplicationFirewallPolicies_List'
          - $ref: '#/components/x-stackQL-resources/web_application_firewall_policies/methods/WebApplicationFirewallPolicies_ListAll'
        insert:
          - $ref: '#/components/x-stackQL-resources/web_application_firewall_policies/methods/WebApplicationFirewallPolicies_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/web_application_firewall_policies/methods/WebApplicationFirewallPolicies_Delete'
    nat_gateways:
      id: azure.network.nat_gateways
      name: nat_gateways
      title: Nat_gateways
      methods:
        NatGateways_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1natGateways~1{natGatewayName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        NatGateways_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1natGateways~1{natGatewayName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        NatGateways_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1natGateways~1{natGatewayName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        NatGateways_UpdateTags:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1natGateways~1{natGatewayName}~1?api-version=2022-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        NatGateways_ListAll:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1natGateways~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        NatGateways_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1natGateways~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/nat_gateways/methods/NatGateways_List'
          - $ref: '#/components/x-stackQL-resources/nat_gateways/methods/NatGateways_ListAll'
        insert:
          - $ref: '#/components/x-stackQL-resources/nat_gateways/methods/NatGateways_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/nat_gateways/methods/NatGateways_Delete'
    public_ip_prefixes:
      id: azure.network.public_ip_prefixes
      name: public_ip_prefixes
      title: Public_ip_prefixes
      methods:
        PublicIPPrefixes_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1publicIPPrefixes~1{publicIpPrefixName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        PublicIPPrefixes_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1publicIPPrefixes~1{publicIpPrefixName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        PublicIPPrefixes_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1publicIPPrefixes~1{publicIpPrefixName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        PublicIPPrefixes_UpdateTags:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1publicIPPrefixes~1{publicIpPrefixName}~1?api-version=2022-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        PublicIPPrefixes_ListAll:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1publicIPPrefixes~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        PublicIPPrefixes_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1publicIPPrefixes~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/public_ip_prefixes/methods/PublicIPPrefixes_List'
          - $ref: '#/components/x-stackQL-resources/public_ip_prefixes/methods/PublicIPPrefixes_ListAll'
        insert:
          - $ref: '#/components/x-stackQL-resources/public_ip_prefixes/methods/PublicIPPrefixes_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/public_ip_prefixes/methods/PublicIPPrefixes_Delete'
    virtual_appliances:
      id: azure.network.virtual_appliances
      name: virtual_appliances
      title: Virtual_appliances
      methods:
        NetworkVirtualAppliances_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkVirtualAppliances~1{networkVirtualApplianceName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        NetworkVirtualAppliances_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkVirtualAppliances~1{networkVirtualApplianceName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        NetworkVirtualAppliances_UpdateTags:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkVirtualAppliances~1{networkVirtualApplianceName}~1?api-version=2022-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        NetworkVirtualAppliances_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkVirtualAppliances~1{networkVirtualApplianceName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        NetworkVirtualAppliances_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkVirtualAppliances~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        NetworkVirtualAppliances_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1networkVirtualAppliances~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_appliances/methods/NetworkVirtualAppliances_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/virtual_appliances/methods/NetworkVirtualAppliances_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_appliances/methods/NetworkVirtualAppliances_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_appliances/methods/NetworkVirtualAppliances_Delete'
    virtual_appliance_sites:
      id: azure.network.virtual_appliance_sites
      name: virtual_appliance_sites
      title: Virtual_appliance_sites
      methods:
        VirtualApplianceSites_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkVirtualAppliances~1{networkVirtualApplianceName}~1virtualApplianceSites~1{siteName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        VirtualApplianceSites_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkVirtualAppliances~1{networkVirtualApplianceName}~1virtualApplianceSites~1{siteName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VirtualApplianceSites_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkVirtualAppliances~1{networkVirtualApplianceName}~1virtualApplianceSites~1{siteName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        VirtualApplianceSites_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkVirtualAppliances~1{networkVirtualApplianceName}~1virtualApplianceSites~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_appliance_sites/methods/VirtualApplianceSites_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_appliance_sites/methods/VirtualApplianceSites_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_appliance_sites/methods/VirtualApplianceSites_Delete'
    virtual_appliance_skus:
      id: azure.network.virtual_appliance_skus
      name: virtual_appliance_skus
      title: Virtual_appliance_skus
      methods:
        VirtualApplianceSkus_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1networkVirtualApplianceSkus~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VirtualApplianceSkus_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1networkVirtualApplianceSkus~1{skuName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_appliance_skus/methods/VirtualApplianceSkus_List'
        insert: []
        update: []
        delete: []
    inbound_security_rule:
      id: azure.network.inbound_security_rule
      name: inbound_security_rule
      title: Inbound_security_rule
      methods:
        InboundSecurityRule_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1networkVirtualAppliances~1{networkVirtualApplianceName}~1inboundSecurityRules~1{ruleCollectionName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/inbound_security_rule/methods/InboundSecurityRule_CreateOrUpdate'
        update: []
        delete: []
    available_endpoint_services:
      id: azure.network.available_endpoint_services
      name: available_endpoint_services
      title: Available_endpoint_services
      methods:
        AvailableEndpointServices_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1locations~1{location}~1virtualNetworkAvailableEndpointServices~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/available_endpoint_services/methods/AvailableEndpointServices_List'
        insert: []
        update: []
        delete: []
    security_partner_providers:
      id: azure.network.security_partner_providers
      name: security_partner_providers
      title: Security_partner_providers
      methods:
        SecurityPartnerProviders_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1securityPartnerProviders~1{securityPartnerProviderName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        SecurityPartnerProviders_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1securityPartnerProviders~1{securityPartnerProviderName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        SecurityPartnerProviders_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1securityPartnerProviders~1{securityPartnerProviderName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        SecurityPartnerProviders_UpdateTags:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1securityPartnerProviders~1{securityPartnerProviderName}~1?api-version=2022-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        SecurityPartnerProviders_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1securityPartnerProviders~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        SecurityPartnerProviders_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1securityPartnerProviders~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/security_partner_providers/methods/SecurityPartnerProviders_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/security_partner_providers/methods/SecurityPartnerProviders_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/security_partner_providers/methods/SecurityPartnerProviders_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/security_partner_providers/methods/SecurityPartnerProviders_Delete'
    express_route_provider_ports_location:
      id: azure.network.express_route_provider_ports_location
      name: express_route_provider_ports_location
      title: Express_route_provider_ports_location
      methods:
        ExpressRouteProviderPortsLocation_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1expressRouteProviderPorts~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/express_route_provider_ports_location/methods/ExpressRouteProviderPortsLocation_List'
        insert: []
        update: []
        delete: []
    express_route_provider_ports:
      id: azure.network.express_route_provider_ports
      name: express_route_provider_ports
      title: Express_route_provider_ports
      methods:
        ExpressRouteProviderPort:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1expressRouteProviderPorts~1{providerport}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    dscp_configuration:
      id: azure.network.dscp_configuration
      name: dscp_configuration
      title: Dscp_configuration
      methods:
        DscpConfiguration_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1dscpConfigurations~1{dscpConfigurationName}~1?api-version=2022-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        DscpConfiguration_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1dscpConfigurations~1{dscpConfigurationName}~1?api-version=2022-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        DscpConfiguration_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1dscpConfigurations~1{dscpConfigurationName}~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        DscpConfiguration_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1dscpConfigurations~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        DscpConfiguration_ListAll:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1dscpConfigurations~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/dscp_configuration/methods/DscpConfiguration_List'
          - $ref: '#/components/x-stackQL-resources/dscp_configuration/methods/DscpConfiguration_ListAll'
        insert:
          - $ref: '#/components/x-stackQL-resources/dscp_configuration/methods/DscpConfiguration_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/dscp_configuration/methods/DscpConfiguration_Delete'
    azure_firewall_fqdn_tags:
      id: azure.network.azure_firewall_fqdn_tags
      name: azure_firewall_fqdn_tags
      title: Azure_firewall_fqdn_tags
      methods:
        AzureFirewallFqdnTags_ListAll:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1azureFirewallFqdnTags~1?api-version=2022-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/azure_firewall_fqdn_tags/methods/AzureFirewallFqdnTags_ListAll'
        insert: []
        update: []
        delete: []
paths:
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/networkManagerConnections/{networkManagerConnectionName}/?api-version=2022-01-01:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/NetworkManagerConnectionNameParameter'
    put:
      tags:
        - NetworkManagerConnections
      operationId: SubscriptionNetworkManagerConnections_CreateOrUpdate
      description: Create a network manager connection on this subscription.
      requestBody:
        description: Network manager connection to be created/updated.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkManagerConnection'
      responses:
        '200':
          description: Updated - Returns information about the connection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkManagerConnection'
        '201':
          description: Created - Returns information about the connection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkManagerConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: subscription_network_manager_connections
      x-stackQL-verb: insert
    get:
      tags:
        - NetworkManagerConnections
      operationId: SubscriptionNetworkManagerConnections_Get
      description: Get a specified connection created by this subscription.
      responses:
        '200':
          description: OK - Returns the connection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkManagerConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: subscription_network_manager_connections
      x-stackQL-verb: exec
    delete:
      tags:
        - NetworkManagerConnections
      operationId: SubscriptionNetworkManagerConnections_Delete
      description: Delete specified connection created by this subscription.
      responses:
        '200':
          description: Delete Succeed.
        '204':
          description: Request successful. The resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: subscription_network_manager_connections
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/networkManagerConnections/?api-version=2022-01-01:
    get:
      tags:
        - NetworkManagerConnections
      operationId: SubscriptionNetworkManagerConnections_List
      description: List all network manager connections created by this subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ListTopParameter'
        - $ref: '#/components/parameters/ListSkipTokenParameter'
      responses:
        '200':
          description: OK - Returns information about the network manager connection(s).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkManagerConnectionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: subscription_network_manager_connections
      x-stackQL-verb: select
  /providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Network/networkManagerConnections/{networkManagerConnectionName}/?api-version=2022-01-01:
    parameters:
      - $ref: '#/components/parameters/ManagementGroupIdParameter'
      - $ref: '#/components/parameters/NetworkManagerConnectionNameParameter'
    put:
      tags:
        - NetworkManagerConnections
      operationId: ManagementGroupNetworkManagerConnections_CreateOrUpdate
      description: Create a network manager connection on this management group.
      requestBody:
        description: Network manager connection to be created/updated.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkManagerConnection'
      responses:
        '200':
          description: Updated - Returns information about the connection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkManagerConnection'
        '201':
          description: Created - Returns information about the connection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkManagerConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: management_group_network_manager_connections
      x-stackQL-verb: insert
    get:
      tags:
        - NetworkManagerConnections
      operationId: ManagementGroupNetworkManagerConnections_Get
      description: Get a specified connection created by this management group.
      responses:
        '200':
          description: OK - Returns the connection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkManagerConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: management_group_network_manager_connections
      x-stackQL-verb: exec
    delete:
      tags:
        - NetworkManagerConnections
      operationId: ManagementGroupNetworkManagerConnections_Delete
      description: Delete specified pending connection created by this management group.
      responses:
        '200':
          description: Delete Succeed.
        '204':
          description: Request successful. The resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: management_group_network_manager_connections
      x-stackQL-verb: delete
  /providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Network/networkManagerConnections/?api-version=2022-01-01:
    get:
      tags:
        - NetworkManagerConnections
      operationId: ManagementGroupNetworkManagerConnections_List
      description: List all network manager connections created by this management group.
      parameters:
        - $ref: '#/components/parameters/ManagementGroupIdParameter'
        - $ref: '#/components/parameters/ListTopParameter'
        - $ref: '#/components/parameters/ListSkipTokenParameter'
      responses:
        '200':
          description: OK - Returns information about the network manager connection(s).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkManagerConnectionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: management_group_network_manager_connections
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/?api-version=2022-01-01:
    delete:
      tags:
        - RouteTables
      operationId: RouteTables_Delete
      description: Deletes the specified route table.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: routeTableName
          in: path
          description: The name of the route table.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. Operation to delete was accepted.
        '202':
          description: Accepted. If route table not found returned synchronously, otherwise if found returned asynchronously.
        '204':
          description: Request successful. Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: route_tables
      x-stackQL-verb: delete
    get:
      tags:
        - RouteTables
      operationId: RouteTables_Get
      description: Gets the specified route table.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: routeTableName
          in: path
          description: The name of the route table.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $expand
          in: query
          description: Expands referenced resources.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request successful. The operation returns the resulting RouteTable resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteTable'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: route_tables
      x-stackQL-verb: exec
    put:
      tags:
        - RouteTables
      operationId: RouteTables_CreateOrUpdate
      description: Create or updates a route table in a specified resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: routeTableName
          in: path
          description: The name of the route table.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update route table operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RouteTable'
      responses:
        '200':
          description: Request successful. The operation returns the resulting RouteTable resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteTable'
        '201':
          description: Create successful. The operation returns the resulting RouteTable resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteTable'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: route_tables
      x-stackQL-verb: insert
    patch:
      tags:
        - RouteTables
      operationId: RouteTables_UpdateTags
      description: Updates a route table tags.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: routeTableName
          in: path
          description: The name of the route table.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to update route table tags.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Request successful. The operation returns the resulting RouteTable resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteTable'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: route_tables
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/?api-version=2022-01-01:
    get:
      tags:
        - RouteTables
      operationId: RouteTables_List
      description: Gets all route tables in a resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of RouteTable resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteTableListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: route_tables
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/routeTables/?api-version=2022-01-01:
    get:
      tags:
        - RouteTables
      operationId: RouteTables_ListAll
      description: Gets all route tables in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of RouteTable resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteTableListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: route_tables
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}/?api-version=2022-01-01:
    delete:
      tags:
        - Routes
      operationId: Routes_Delete
      description: Deletes the specified route from a route table.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: routeTableName
          in: path
          description: The name of the route table.
          required: true
          schema:
            type: string
        - name: routeName
          in: path
          description: The name of the route.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Accepted.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Route was deleted or not found.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: routes
      x-stackQL-verb: delete
    get:
      tags:
        - Routes
      operationId: Routes_Get
      description: Gets the specified route from a route table.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: routeTableName
          in: path
          description: The name of the route table.
          required: true
          schema:
            type: string
        - name: routeName
          in: path
          description: The name of the route.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns the resulting Route resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: routes
      x-stackQL-verb: exec
    put:
      tags:
        - Routes
      operationId: Routes_CreateOrUpdate
      description: Creates or updates a route in the specified route table.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: routeTableName
          in: path
          description: The name of the route table.
          required: true
          schema:
            type: string
        - name: routeName
          in: path
          description: The name of the route.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update route operation.
        required: true
        x-ms-requestBody-name: routeParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Route'
      responses:
        '200':
          description: Update successful. The operation returns the resulting Route resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
        '201':
          description: Create successful. The operation returns the resulting Route resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: routes
      x-stackQL-verb: insert
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/?api-version=2022-01-01:
    get:
      tags:
        - Routes
      operationId: Routes_List
      description: Gets all routes in a route table.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: routeTableName
          in: path
          description: The name of the route table.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of Route resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: routes
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/?api-version=2022-01-01:
    delete:
      tags:
        - FirewallPolicies
      operationId: FirewallPolicies_Delete
      description: Deletes the specified Firewall Policy.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: firewallPolicyName
          in: path
          description: The name of the Firewall Policy.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Request successful. Resource with the specified name does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: firewall_policies
      x-stackQL-verb: delete
    get:
      tags:
        - FirewallPolicies
      operationId: FirewallPolicies_Get
      description: Gets the specified Firewall Policy.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: firewallPolicyName
          in: path
          description: The name of the Firewall Policy.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $expand
          in: query
          description: Expands referenced resources.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request successful. The operation returns a Firewall Policy resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallPolicy'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: firewall_policies
      x-stackQL-verb: exec
    put:
      tags:
        - FirewallPolicies
      operationId: FirewallPolicies_CreateOrUpdate
      description: Creates or updates the specified Firewall Policy.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: firewallPolicyName
          in: path
          description: The name of the Firewall Policy.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update Firewall Policy operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FirewallPolicy'
      responses:
        '200':
          description: Request successful. The operation returns the resulting FirewallPolicy resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallPolicy'
        '201':
          description: Request received successfully. The operation returns the resulting FirewallPolicy resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallPolicy'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: firewall_policies
      x-stackQL-verb: insert
    patch:
      tags:
        - FirewallPolicies
      operationId: FirewallPolicies_UpdateTags
      description: Updates tags of a Azure Firewall Policy resource.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: firewallPolicyName
          in: path
          description: The name of the Firewall Policy.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to update Azure Firewall Policy tags.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Request successful. The operation returns the resulting FirewallPolicy resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallPolicy'
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: firewall_policies
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/?api-version=2022-01-01:
    get:
      tags:
        - FirewallPolicies
      operationId: FirewallPolicies_List
      description: Lists all Firewall Policies in a resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success. The operation returns a list of FirewallPolicy resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallPolicyListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: firewall_policies
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/firewallPolicies/?api-version=2022-01-01:
    get:
      tags:
        - FirewallPolicies
      operationId: FirewallPolicies_ListAll
      description: Gets all the Firewall Policies in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success. The operation returns a list of FirewallPolicy resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallPolicyListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: firewall_policies
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/ruleCollectionGroups/{ruleCollectionGroupName}/?api-version=2022-01-01:
    delete:
      tags:
        - FirewallPolicyRuleCollectionGroups
      operationId: FirewallPolicyRuleCollectionGroups_Delete
      description: Deletes the specified FirewallPolicyRuleCollectionGroup.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: firewallPolicyName
          in: path
          description: The name of the Firewall Policy.
          required: true
          schema:
            type: string
        - name: ruleCollectionGroupName
          in: path
          description: The name of the FirewallPolicyRuleCollectionGroup.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Request successful. Resource with the specified name does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: firewall_policy_rule_collection_groups
      x-stackQL-verb: delete
    get:
      tags:
        - FirewallPolicyRuleCollectionGroups
      operationId: FirewallPolicyRuleCollectionGroups_Get
      description: Gets the specified FirewallPolicyRuleCollectionGroup.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: firewallPolicyName
          in: path
          description: The name of the Firewall Policy.
          required: true
          schema:
            type: string
        - name: ruleCollectionGroupName
          in: path
          description: The name of the FirewallPolicyRuleCollectionGroup.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a FirewallPolicyRuleCollectionGroup resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallPolicyRuleCollectionGroup'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: firewall_policy_rule_collection_groups
      x-stackQL-verb: exec
    put:
      tags:
        - FirewallPolicyRuleCollectionGroups
      operationId: FirewallPolicyRuleCollectionGroups_CreateOrUpdate
      description: Creates or updates the specified FirewallPolicyRuleCollectionGroup.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: firewallPolicyName
          in: path
          description: The name of the Firewall Policy.
          required: true
          schema:
            type: string
        - name: ruleCollectionGroupName
          in: path
          description: The name of the FirewallPolicyRuleCollectionGroup.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update FirewallPolicyRuleCollectionGroup operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FirewallPolicyRuleCollectionGroup'
      responses:
        '200':
          description: Request successful. The operation returns the resulting FirewallPolicyRuleCollectionGroup resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallPolicyRuleCollectionGroup'
        '201':
          description: Request received successfully. The operation returns the resulting FirewallPolicyRuleCollectionGroup resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallPolicyRuleCollectionGroup'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: firewall_policy_rule_collection_groups
      x-stackQL-verb: insert
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/ruleCollectionGroups/?api-version=2022-01-01:
    get:
      tags:
        - FirewallPolicyRuleCollectionGroups
      operationId: FirewallPolicyRuleCollectionGroups_List
      description: Lists all FirewallPolicyRuleCollectionGroups in a FirewallPolicy resource.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: firewallPolicyName
          in: path
          description: The name of the Firewall Policy.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success. The operation returns a list of FirewallPolicyRuleCollectionGroup resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallPolicyRuleCollectionGroupListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: firewall_policy_rule_collection_groups
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/listIdpsSignatures/?api-version=2022-01-01:
    post:
      operationId: FirewallPolicyIdpsSignatures_List
      description: Retrieves the current status of IDPS signatures for the relevant policy
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: firewallPolicyName
          in: path
          description: The name of the Firewall Policy.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IDPSQueryObject'
      responses:
        '200':
          description: Success. The operation returns an IDPS Query Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResults'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: firewall_policy_idps_signatures
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/signatureOverrides/default/?api-version=2022-01-01:
    patch:
      operationId: FirewallPolicyIdpsSignaturesOverrides_Patch
      description: Will update the status of policy's signature overrides for IDPS
      requestBody:
        description: Will contain all properties of the object to put
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignaturesOverrides'
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: firewallPolicyName
          in: path
          description: The name of the Firewall Policy.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Will return the policy current signature overrides object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignaturesOverrides'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: firewall_policy_idps_signatures_overrides
      x-stackQL-verb: exec
    put:
      description: Will override/create a new signature overrides for the policy's IDPS
      operationId: FirewallPolicyIdpsSignaturesOverrides_Put
      requestBody:
        description: Will contain all properties of the object to put
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignaturesOverrides'
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: firewallPolicyName
          in: path
          description: The name of the Firewall Policy.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Describes the new state of the signature overrides after the PUT operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignaturesOverrides'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: firewall_policy_idps_signatures_overrides
      x-stackQL-verb: exec
    get:
      description: Returns all signatures overrides for a specific policy.
      operationId: FirewallPolicyIdpsSignaturesOverrides_Get
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: firewallPolicyName
          in: path
          description: The name of the Firewall Policy.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Will return the policy current signature overrides object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignaturesOverrides'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: firewall_policy_idps_signatures_overrides
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/listIdpsFilterOptions/?api-version=2022-01-01:
    post:
      operationId: FirewallPolicyIdpsSignaturesFilterValues_List
      description: Retrieves the current filter values for the signatures overrides
      requestBody:
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatureOverridesFilterValuesQuery'
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: firewallPolicyName
          in: path
          description: The name of the Firewall Policy.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success. The operation returns a list of all valid filter values for the requested column
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureOverridesFilterValuesResponse'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: firewall_policy_idps_signatures_filter_values
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/signatureOverrides/?api-version=2022-01-01:
    get:
      description: Returns all signatures overrides objects for a specific policy as a list containing a single value.
      operationId: FirewallPolicyIdpsSignaturesOverrides_List
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: firewallPolicyName
          in: path
          description: The name of the Firewall Policy.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Will return the policy current signature overrides object inside a list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignaturesOverridesList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: firewall_policy_idps_signatures_overrides
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/networkGroups/{networkGroupName}/?api-version=2022-01-01:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/NetworkManagerNameParameter'
      - $ref: '#/components/parameters/NetworkGroupNameParameter'
    get:
      tags:
        - NetworkGroups
      operationId: NetworkGroups_Get
      description: Gets the specified network group.
      responses:
        '200':
          description: OK - Returns information about the network group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkGroup'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: groups
      x-stackQL-verb: exec
    put:
      tags:
        - NetworkGroups
      operationId: NetworkGroups_CreateOrUpdate
      description: Creates or updates a network group.
      requestBody:
        description: Parameters supplied to the specify which network group need to create
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkGroup'
      parameters:
        - name: If-Match
          in: header
          description: The ETag of the transformation. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes.
          required: false
          x-ms-client-name: IfMatch
          schema:
            type: string
      responses:
        '200':
          description: Updated - Returns information about the network group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkGroup'
          headers:
            ETag:
              schema:
                type: string
              description: The current entity tag.
        '201':
          description: Created - Returns information about the network group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkGroup'
          headers:
            ETag:
              schema:
                type: string
              description: The current entity tag.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: groups
      x-stackQL-verb: insert
    delete:
      tags:
        - NetworkGroups
      operationId: NetworkGroups_Delete
      description: Deletes a network group.
      parameters:
        - $ref: '#/components/parameters/ForceDeleteParameter'
      responses:
        '200':
          description: Delete Succeed.
        '202':
          description: Accepted and will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
              description: The URL of the resource used to check the status of the asynchronous operation.
        '204':
          description: Request successful. The resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: groups
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/networkGroups/?api-version=2022-01-01:
    get:
      tags:
        - NetworkGroups
      operationId: NetworkGroups_List
      description: Lists the specified network group.
      x-ms-pageable:
        nextLinkName: nextLink
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkManagerNameParameter'
        - $ref: '#/components/parameters/ListTopParameter'
        - $ref: '#/components/parameters/ListSkipTokenParameter'
      responses:
        '200':
          description: OK - Returns information about the network group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkGroupListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: groups
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/networkGroups/{networkGroupName}/staticMembers/{staticMemberName}/?api-version=2022-01-01:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/NetworkManagerNameParameter'
      - $ref: '#/components/parameters/NetworkGroupNameParameter'
      - $ref: '#/components/parameters/StaticMemberNameParameter'
    get:
      tags:
        - StaticMembers
      operationId: StaticMembers_Get
      description: Gets the specified static member.
      responses:
        '200':
          description: OK - Returns information about the static member.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticMember'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: static_members
      x-stackQL-verb: exec
    put:
      tags:
        - StaticMembers
      operationId: StaticMembers_CreateOrUpdate
      description: Creates or updates a static member.
      requestBody:
        description: Parameters supplied to the specify the static member to create
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaticMember'
      responses:
        '200':
          description: Updated - Returns information about the static member.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticMember'
        '201':
          description: Created - Returns information about the static member.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticMember'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: static_members
      x-stackQL-verb: insert
    delete:
      tags:
        - StaticMembers
      operationId: StaticMembers_Delete
      description: Deletes a static member.
      responses:
        '200':
          description: Delete Succeed.
        '204':
          description: Request successful. The resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: static_members
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/networkGroups/{networkGroupName}/staticMembers/?api-version=2022-01-01:
    get:
      tags:
        - StaticMembers
      operationId: StaticMembers_List
      description: Lists the specified static member.
      x-ms-pageable:
        nextLinkName: nextLink
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkManagerNameParameter'
        - $ref: '#/components/parameters/NetworkGroupNameParameter'
        - $ref: '#/components/parameters/ListTopParameter'
        - $ref: '#/components/parameters/ListSkipTokenParameter'
      responses:
        '200':
          description: OK - Returns information about the static member.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticMemberListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: static_members
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/?api-version=2022-01-01:
    delete:
      tags:
        - ApplicationGateways
      operationId: ApplicationGateways_Delete
      description: Deletes the specified application gateway.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: applicationGatewayName
          in: path
          description: The name of the application gateway.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Request successful. Resource with the specified name does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: application_gateways
      x-stackQL-verb: delete
    get:
      tags:
        - ApplicationGateways
      operationId: ApplicationGateways_Get
      description: Gets the specified application gateway.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: applicationGatewayName
          in: path
          description: The name of the application gateway.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns an ApplicationGateway resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGateway'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: application_gateways
      x-stackQL-verb: exec
    put:
      tags:
        - ApplicationGateways
      operationId: ApplicationGateways_CreateOrUpdate
      description: Creates or updates the specified application gateway.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: applicationGatewayName
          in: path
          description: The name of the application gateway.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update application gateway operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationGateway'
      responses:
        '200':
          description: Update successful. The operation returns the resulting ApplicationGateway resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGateway'
        '201':
          description: Create successful. The operation returns the resulting ApplicationGateway resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGateway'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: application_gateways
      x-stackQL-verb: insert
    patch:
      tags:
        - ApplicationGateways
      operationId: ApplicationGateways_UpdateTags
      description: Updates the specified application gateway tags.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: applicationGatewayName
          in: path
          description: The name of the application gateway.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to update application gateway tags.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Update successful. The operation returns the resulting ApplicationGateway resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGateway'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: application_gateways
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/?api-version=2022-01-01:
    get:
      tags:
        - ApplicationGateways
      operationId: ApplicationGateways_List
      description: Lists all application gateways in a resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success. The operation returns a list of ApplicationGateway resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGatewayListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: application_gateways
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGateways/?api-version=2022-01-01:
    get:
      tags:
        - ApplicationGateways
      operationId: ApplicationGateways_ListAll
      description: Gets all the application gateways in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success. The operation returns a list of ApplicationGateway resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGatewayListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: application_gateways
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/start/?api-version=2022-01-01:
    post:
      tags:
        - ApplicationGateways
      operationId: ApplicationGateways_Start
      description: Starts the specified application gateway.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: applicationGatewayName
          in: path
          description: The name of the application gateway.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation starts the ApplicationGateway resource.
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: application_gateways
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/stop/?api-version=2022-01-01:
    post:
      tags:
        - ApplicationGateways
      operationId: ApplicationGateways_Stop
      description: Stops the specified application gateway in a resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: applicationGatewayName
          in: path
          description: The name of the application gateway.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation stops the ApplicationGateway resource.
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: application_gateways
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/backendhealth/?api-version=2022-01-01:
    post:
      tags:
        - ApplicationGateways
      operationId: ApplicationGateways_BackendHealth
      description: Gets the backend health of the specified application gateway in a resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: applicationGatewayName
          in: path
          description: The name of the application gateway.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $expand
          in: query
          description: Expands BackendAddressPool and BackendHttpSettings referenced in backend health.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGatewayBackendHealth'
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: application_gateways
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/getBackendHealthOnDemand/?api-version=2022-01-01:
    post:
      tags:
        - ApplicationGateways
      operationId: ApplicationGateways_BackendHealthOnDemand
      description: Gets the backend health for given combination of backend pool and http setting of the specified application gateway in a resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: applicationGatewayName
          in: path
          description: The name of the application gateway.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $expand
          in: query
          description: Expands BackendAddressPool and BackendHttpSettings referenced in backend health.
          required: false
          schema:
            type: string
      requestBody:
        description: Request body for on-demand test probe operation.
        required: true
        x-ms-requestBody-name: probeRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationGatewayOnDemandProbe'
      responses:
        '200':
          description: Request successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGatewayBackendHealthOnDemand'
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: application_gateways
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/privateLinkResources/?api-version=2022-01-01:
    get:
      tags:
        - ApplicationGatewayPrivateLinkResources
      operationId: ApplicationGatewayPrivateLinkResources_List
      description: Lists all private link resources on an application gateway.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: applicationGatewayName
          in: path
          description: The name of the application gateway.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success. The operation returns a list of private link resources on application gateway.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGatewayPrivateLinkResourceListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: application_gateway_private_link_resources
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/privateEndpointConnections/{connectionName}/?api-version=2022-01-01:
    delete:
      tags:
        - ApplicationGatewayPrivateEndpointConnections
      operationId: ApplicationGatewayPrivateEndpointConnections_Delete
      description: Deletes the specified private endpoint connection on application gateway.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: applicationGatewayName
          in: path
          description: The name of the application gateway.
          required: true
          schema:
            type: string
        - name: connectionName
          in: path
          description: The name of the application gateway private endpoint connection.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Request successful. Resource with the specified name does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: application_gateway_private_endpoint_connections
      x-stackQL-verb: delete
    put:
      tags:
        - ApplicationGatewayPrivateEndpointConnections
      operationId: ApplicationGatewayPrivateEndpointConnections_Update
      description: Updates the specified private endpoint connection on application gateway.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: applicationGatewayName
          in: path
          description: The name of the application gateway.
          required: true
          schema:
            type: string
        - name: connectionName
          in: path
          description: The name of the application gateway private endpoint connection.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to update application gateway private endpoint connection operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationGatewayPrivateEndpointConnection'
      responses:
        '200':
          description: Update successful. The operation returns the resulting private endpoint connection on application gateway.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGatewayPrivateEndpointConnection'
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: application_gateway_private_endpoint_connections
      x-stackQL-verb: exec
    get:
      tags:
        - ApplicationGatewayPrivateEndpointConnections
      operationId: ApplicationGatewayPrivateEndpointConnections_Get
      description: Gets the specified private endpoint connection on application gateway.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: applicationGatewayName
          in: path
          description: The name of the application gateway.
          required: true
          schema:
            type: string
        - name: connectionName
          in: path
          description: The name of the application gateway private endpoint connection.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns an application gateway private endpoint connection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGatewayPrivateEndpointConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: application_gateway_private_endpoint_connections
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/privateEndpointConnections/?api-version=2022-01-01:
    get:
      tags:
        - ApplicationGatewayPrivateEndpointConnections
      operationId: ApplicationGatewayPrivateEndpointConnections_List
      description: Lists all private endpoint connections on an application gateway.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: applicationGatewayName
          in: path
          description: The name of the application gateway.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success. The operation returns a list of private endpoint connections on application gateway.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGatewayPrivateEndpointConnectionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: application_gateway_private_endpoint_connections
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGatewayAvailableServerVariables/?api-version=2022-01-01:
    get:
      tags:
        - ApplicationGateways
      operationId: ApplicationGateways_ListAvailableServerVariables
      description: Lists all available server variables.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success. The operation returns a list of all available server variables.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGatewayAvailableServerVariablesResult'
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-stackQL-resource: application_gateways
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGatewayAvailableRequestHeaders/?api-version=2022-01-01:
    get:
      tags:
        - ApplicationGateways
      operationId: ApplicationGateways_ListAvailableRequestHeaders
      description: Lists all available request headers.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success. The operation returns a list of all available request headers.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGatewayAvailableRequestHeadersResult'
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-stackQL-resource: application_gateways
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGatewayAvailableResponseHeaders/?api-version=2022-01-01:
    get:
      tags:
        - ApplicationGateways
      operationId: ApplicationGateways_ListAvailableResponseHeaders
      description: Lists all available response headers.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success. The operation returns a list of all available response headers.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGatewayAvailableResponseHeadersResult'
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-stackQL-resource: application_gateways
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGatewayAvailableWafRuleSets/?api-version=2022-01-01:
    get:
      tags:
        - ApplicationGateways
      operationId: ApplicationGateways_ListAvailableWafRuleSets
      description: Lists all available web application firewall rule sets.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success. The operation returns a list of all available web application firewall rule sets.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGatewayAvailableWafRuleSetsResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: application_gateways
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGatewayAvailableSslOptions/default/?api-version=2022-01-01:
    get:
      tags:
        - ApplicationGateways
      operationId: ApplicationGateways_ListAvailableSslOptions
      description: Lists available Ssl options for configuring Ssl policy.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success. The operation returns all available Ssl options for configuring Ssl policy.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGatewayAvailableSslOptions'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: application_gateways
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGatewayAvailableSslOptions/default/predefinedPolicies/?api-version=2022-01-01:
    get:
      tags:
        - ApplicationGateways
      operationId: ApplicationGateways_ListAvailableSslPredefinedPolicies
      x-ms-pageable:
        nextLinkName: nextLink
      description: Lists all SSL predefined policies for configuring Ssl policy.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success. The operation returns a lists of all Ssl predefined policies for configuring Ssl policy.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGatewayAvailableSslPredefinedPolicies'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: application_gateways
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGatewayAvailableSslOptions/default/predefinedPolicies/{predefinedPolicyName}/?api-version=2022-01-01:
    get:
      tags:
        - ApplicationGateways
      operationId: ApplicationGateways_GetSslPredefinedPolicy
      description: Gets Ssl predefined policy with the specified policy name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: predefinedPolicyName
          in: path
          description: Name of Ssl predefined policy.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success. The operation returns a Ssl predefined policy with the specified policy name.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGatewaySslPredefinedPolicy'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: application_gateways
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/?api-version=2022-01-01:
    delete:
      tags:
        - VirtualNetworks
      operationId: VirtualNetworks_Delete
      description: Deletes the specified virtual network.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualNetworkName
          in: path
          description: The name of the virtual network.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Delete successful.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: virtual_networks
      x-stackQL-verb: delete
    get:
      tags:
        - VirtualNetworks
      operationId: VirtualNetworks_Get
      description: Gets the specified virtual network by resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualNetworkName
          in: path
          description: The name of the virtual network.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $expand
          in: query
          description: Expands referenced resources.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request successful. The operation returns the resulting VirtualNetwork resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetwork'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: virtual_networks
      x-stackQL-verb: exec
    put:
      tags:
        - VirtualNetworks
      operationId: VirtualNetworks_CreateOrUpdate
      description: Creates or updates a virtual network in the specified resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualNetworkName
          in: path
          description: The name of the virtual network.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update virtual network operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualNetwork'
      responses:
        '200':
          description: Update successful. The operation returns the resulting VirtualNetwork resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetwork'
        '201':
          description: Create successful. The operation returns the resulting VirtualNetwork resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetwork'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: virtual_networks
      x-stackQL-verb: insert
    patch:
      tags:
        - VirtualNetworks
      operationId: VirtualNetworks_UpdateTags
      description: Updates a virtual network tags.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualNetworkName
          in: path
          description: The name of the virtual network.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to update virtual network tags.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Update successful. The operation returns the resulting VirtualNetwork resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetwork'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: virtual_networks
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/virtualNetworks/?api-version=2022-01-01:
    get:
      tags:
        - VirtualNetworks
      operationId: VirtualNetworks_ListAll
      description: Gets all virtual networks in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of VirtualNetwork resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: virtual_networks
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/?api-version=2022-01-01:
    get:
      tags:
        - VirtualNetworks
      operationId: VirtualNetworks_List
      description: Gets all virtual networks in a resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of VirtualNetwork resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: virtual_networks
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}/?api-version=2022-01-01:
    delete:
      tags:
        - Subnets
      operationId: Subnets_Delete
      description: Deletes the specified subnet.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualNetworkName
          in: path
          description: The name of the virtual network.
          required: true
          schema:
            type: string
        - name: subnetName
          in: path
          description: The name of the subnet.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Request successful. Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: subnets
      x-stackQL-verb: delete
    get:
      tags:
        - Subnets
      operationId: Subnets_Get
      description: Gets the specified subnet by virtual network and resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualNetworkName
          in: path
          description: The name of the virtual network.
          required: true
          schema:
            type: string
        - name: subnetName
          in: path
          description: The name of the subnet.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $expand
          in: query
          description: Expands referenced resources.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request successful. The operation returns the resulting Subnet resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subnet'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: subnets
      x-stackQL-verb: exec
    put:
      tags:
        - Subnets
      operationId: Subnets_CreateOrUpdate
      description: Creates or updates a subnet in the specified virtual network.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualNetworkName
          in: path
          description: The name of the virtual network.
          required: true
          schema:
            type: string
        - name: subnetName
          in: path
          description: The name of the subnet.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update subnet operation.
        required: true
        x-ms-requestBody-name: subnetParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subnet'
      responses:
        '200':
          description: Update successful. The operation returns the resulting Subnet resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subnet'
        '201':
          description: Create successful. The operation returns the resulting Subnet resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subnet'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: subnets
      x-stackQL-verb: insert
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}/PrepareNetworkPolicies/?api-version=2022-01-01:
    post:
      operationId: Subnets_PrepareNetworkPolicies
      description: Prepares a subnet by applying network intent policies.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualNetworkName
          in: path
          description: The name of the virtual network.
          required: true
          schema:
            type: string
        - name: subnetName
          in: path
          description: The name of the subnet.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to prepare subnet by applying network intent policies.
        required: true
        x-ms-requestBody-name: prepareNetworkPoliciesRequestParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrepareNetworkPoliciesRequest'
      responses:
        '200':
          description: Preparing subnet by applying network intent policies is successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: subnets
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}/UnprepareNetworkPolicies/?api-version=2022-01-01:
    post:
      operationId: Subnets_UnprepareNetworkPolicies
      description: Unprepares a subnet by removing network intent policies.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualNetworkName
          in: path
          description: The name of the virtual network.
          required: true
          schema:
            type: string
        - name: subnetName
          in: path
          description: The name of the subnet.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to unprepare subnet to remove network intent policies.
        required: true
        x-ms-requestBody-name: unprepareNetworkPoliciesRequestParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnprepareNetworkPoliciesRequest'
      responses:
        '200':
          description: Unpreparing subnet by removing network intent policies is successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: subnets
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}/ResourceNavigationLinks/?api-version=2022-01-01:
    get:
      operationId: ResourceNavigationLinks_List
      description: Gets a list of resource navigation links for a subnet.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualNetworkName
          in: path
          description: The name of the virtual network.
          required: true
          schema:
            type: string
        - name: subnetName
          in: path
          description: The name of the subnet.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of resource navigation links for the subnet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNavigationLinksListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: resource_navigation_links
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}/ServiceAssociationLinks/?api-version=2022-01-01:
    get:
      operationId: ServiceAssociationLinks_List
      description: Gets a list of service association links for a subnet.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualNetworkName
          in: path
          description: The name of the virtual network.
          required: true
          schema:
            type: string
        - name: subnetName
          in: path
          description: The name of the subnet.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of service association links for the subnet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAssociationLinksListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: service_association_links
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/?api-version=2022-01-01:
    get:
      tags:
        - Subnets
      operationId: Subnets_List
      description: Gets all subnets in a virtual network.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualNetworkName
          in: path
          description: The name of the virtual network.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of Subnet resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: subnets
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/virtualNetworkPeerings/{virtualNetworkPeeringName}/?api-version=2022-01-01:
    delete:
      tags:
        - VirtualNetworkPeerings
      operationId: VirtualNetworkPeerings_Delete
      description: Deletes the specified virtual network peering.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualNetworkName
          in: path
          description: The name of the virtual network.
          required: true
          schema:
            type: string
        - name: virtualNetworkPeeringName
          in: path
          description: The name of the virtual network peering.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Delete successful.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: virtual_network_peerings
      x-stackQL-verb: delete
    get:
      tags:
        - VirtualNetworkPeerings
      operationId: VirtualNetworkPeerings_Get
      description: Gets the specified virtual network peering.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualNetworkName
          in: path
          description: The name of the virtual network.
          required: true
          schema:
            type: string
        - name: virtualNetworkPeeringName
          in: path
          description: The name of the virtual network peering.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns the resulting VirtualNetworkPeering resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkPeering'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: virtual_network_peerings
      x-stackQL-verb: exec
    put:
      tags:
        - VirtualNetworkPeerings
      operationId: VirtualNetworkPeerings_CreateOrUpdate
      description: Creates or updates a peering in the specified virtual network.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualNetworkName
          in: path
          description: The name of the virtual network.
          required: true
          schema:
            type: string
        - name: virtualNetworkPeeringName
          in: path
          description: The name of the peering.
          required: true
          schema:
            type: string
        - name: syncRemoteAddressSpace
          in: query
          description: Parameter indicates the intention to sync the peering with the current address space on the remote vNet after it's updated.
          required: false
          schema:
            enum:
              - 'true'
            x-ms-enum:
              name: SyncRemoteAddressSpace
              modelAsString: true
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update virtual network peering operation.
        required: true
        x-ms-requestBody-name: VirtualNetworkPeeringParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualNetworkPeering'
      responses:
        '200':
          description: Update successful. The operation returns the resulting VirtualNetworkPeering resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkPeering'
        '201':
          description: Create successful. The operation returns the resulting VirtualNetworkPeering resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkPeering'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: virtual_network_peerings
      x-stackQL-verb: insert
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/virtualNetworkPeerings/?api-version=2022-01-01:
    get:
      tags:
        - VirtualNetworkPeerings
      operationId: VirtualNetworkPeerings_List
      description: Gets all virtual network peerings in a virtual network.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualNetworkName
          in: path
          description: The name of the virtual network.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of VirtualNetworkPeering resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkPeeringListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: virtual_network_peerings
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/CheckIPAddressAvailability/?api-version=2022-01-01:
    get:
      operationId: VirtualNetworks_CheckIPAddressAvailability
      description: Checks whether a private IP address is available for use.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualNetworkName
          in: path
          description: The name of the virtual network.
          required: true
          schema:
            type: string
        - name: ipAddress
          in: query
          description: The private IP address to be verified.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Private IP address availability and list of other free addresses if the requested one is not available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPAddressAvailabilityResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: virtual_networks
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/usages/?api-version=2022-01-01:
    get:
      operationId: VirtualNetworks_ListUsage
      description: Lists usage stats.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualNetworkName
          in: path
          description: The name of the virtual network.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Usage stats for vnet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkListUsageResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: virtual_networks
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkProfiles/{networkProfileName}/?api-version=2022-01-01:
    delete:
      tags:
        - NetworkProfiles
      operationId: NetworkProfiles_Delete
      description: Deletes the specified network profile.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkProfileName
          in: path
          description: The name of the NetworkProfile.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Request successful. Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: profiles
      x-stackQL-verb: delete
    get:
      tags:
        - NetworkProfiles
      operationId: NetworkProfiles_Get
      description: Gets the specified network profile in a specified resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkProfileName
          in: path
          description: The name of the public IP prefix.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $expand
          in: query
          description: Expands referenced resources.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request successful. The operation returns the resulting NetworkProfile resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkProfile'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: profiles
      x-stackQL-verb: exec
    put:
      tags:
        - NetworkProfiles
      operationId: NetworkProfiles_CreateOrUpdate
      description: Creates or updates a network profile.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkProfileName
          in: path
          description: The name of the network profile.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update network profile operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkProfile'
      responses:
        '200':
          description: Update successful. The operation returns the resulting NetworkProfile resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkProfile'
        '201':
          description: Create successful. The operation returns the resulting NetworkProfile resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkProfile'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: false
      x-stackQL-resource: profiles
      x-stackQL-verb: insert
    patch:
      tags:
        - NetworkProfiles
      operationId: NetworkProfiles_UpdateTags
      description: Updates network profile tags.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkProfileName
          in: path
          description: The name of the network profile.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to update network profile tags.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Update successful. The operation returns the resulting NetworkProfile resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkProfile'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: profiles
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/networkProfiles/?api-version=2022-01-01:
    get:
      tags:
        - NetworkProfiles
      operationId: NetworkProfiles_ListAll
      description: Gets all the network profiles in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of NetworkProfile resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkProfileListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: profiles
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkProfiles/?api-version=2022-01-01:
    get:
      tags:
        - NetworkProfiles
      operationId: NetworkProfiles_List
      description: Gets all network profiles in a resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of NetworkProfile resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkProfileListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: profiles
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/listActiveConnectivityConfigurations/?api-version=2022-01-01:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/NetworkManagerNameParameter'
    post:
      tags:
        - NetworkManagerActiveConnectivityConfigurations
      requestBody:
        description: Active Configuration Parameter.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActiveConfigurationParameter'
      operationId: ListActiveConnectivityConfigurations
      description: Lists active connectivity configurations in a network manager.
      responses:
        '200':
          description: Post successful. The operation returns the specified Managed Network active connectivity configuration resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActiveConnectivityConfigurationsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: network_manager_active_connectivity_configurations
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/listActiveSecurityAdminRules/?api-version=2022-01-01:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/NetworkManagerNameParameter'
    post:
      tags:
        - NetworkManagerActiveConfigurations
      requestBody:
        description: Active Configuration Parameter.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActiveConfigurationParameter'
      operationId: ListActiveSecurityAdminRules
      description: Lists active security admin rules in a network manager.
      responses:
        '200':
          description: Post successful. The operation returns the specified Managed Network active security admin rules resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActiveSecurityAdminRulesListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: network_manager_active_configurations
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/bgpServiceCommunities/?api-version=2022-01-01:
    get:
      tags:
        - BgpServiceCommunities
      operationId: BgpServiceCommunities_List
      description: Gets all the available bgp service communities.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of BgpServiceCommunity resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BgpServiceCommunityListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: bgp_service_communities
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/expressRouteCrossConnections/?api-version=2022-01-01:
    get:
      tags:
        - ExpressRouteCrossConnections
      operationId: ExpressRouteCrossConnections_List
      description: Retrieves all the ExpressRouteCrossConnections in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of ExpressRouteCrossConnection resources. If there are no cross connection resources an empty list is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCrossConnectionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: express_route_cross_connections
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCrossConnections/?api-version=2022-01-01:
    get:
      tags:
        - ExpressRouteCrossConnections
      operationId: ExpressRouteCrossConnections_ListByResourceGroup
      description: Retrieves all the ExpressRouteCrossConnections in a resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful.The operation returns a list of ExpressRouteCrossConnection resources. If there are no cross connection resources an empty list is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCrossConnectionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: express_route_cross_connections
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCrossConnections/{crossConnectionName}/?api-version=2022-01-01:
    get:
      tags:
        - ExpressRouteCrossConnections
      operationId: ExpressRouteCrossConnections_Get
      description: Gets details about the specified ExpressRouteCrossConnection.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group (peering location of the circuit).
          required: true
          schema:
            type: string
        - name: crossConnectionName
          in: path
          description: The name of the ExpressRouteCrossConnection (service key of the circuit).
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns the resulting ExpressRouteCrossConnection resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCrossConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: express_route_cross_connections
      x-stackQL-verb: exec
    put:
      tags:
        - ExpressRouteCrossConnections
      operationId: ExpressRouteCrossConnections_CreateOrUpdate
      description: Update the specified ExpressRouteCrossConnection.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: crossConnectionName
          in: path
          description: The name of the ExpressRouteCrossConnection.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the update express route crossConnection operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpressRouteCrossConnection'
      responses:
        '200':
          description: Update successful. The operation returns the resulting ExpressRouteCrossConnection resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCrossConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: express_route_cross_connections
      x-stackQL-verb: insert
    patch:
      tags:
        - ExpressRouteCrossConnections
      operationId: ExpressRouteCrossConnections_UpdateTags
      description: Updates an express route cross connection tags.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: crossConnectionName
          in: path
          description: The name of the cross connection.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to update express route cross connection tags.
        required: true
        x-ms-requestBody-name: crossConnectionParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Update successful. The operation returns the resulting ExpressRouteCrossConnection resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCrossConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: express_route_cross_connections
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCrossConnections/{crossConnectionName}/peerings/?api-version=2022-01-01:
    get:
      tags:
        - ExpressRouteCrossConnectionPeerings
      operationId: ExpressRouteCrossConnectionPeerings_List
      description: Gets all peerings in a specified ExpressRouteCrossConnection.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: crossConnectionName
          in: path
          description: The name of the ExpressRouteCrossConnection.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of ExpressRouteCrossConnectionPeering resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCrossConnectionPeeringList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: express_route_cross_connection_peerings
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCrossConnections/{crossConnectionName}/peerings/{peeringName}/?api-version=2022-01-01:
    delete:
      tags:
        - ExpressRouteCrossConnectionPeerings
      operationId: ExpressRouteCrossConnectionPeerings_Delete
      description: Deletes the specified peering from the ExpressRouteCrossConnection.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: crossConnectionName
          in: path
          description: The name of the ExpressRouteCrossConnection.
          required: true
          schema:
            type: string
        - name: peeringName
          in: path
          description: The name of the peering.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Delete successful.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: express_route_cross_connection_peerings
      x-stackQL-verb: delete
    get:
      tags:
        - ExpressRouteCrossConnectionPeerings
      operationId: ExpressRouteCrossConnectionPeerings_Get
      description: Gets the specified peering for the ExpressRouteCrossConnection.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: crossConnectionName
          in: path
          description: The name of the ExpressRouteCrossConnection.
          required: true
          schema:
            type: string
        - name: peeringName
          in: path
          description: The name of the peering.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns the resulting ExpressRouteCrossConnectionPeering resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCrossConnectionPeering'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: express_route_cross_connection_peerings
      x-stackQL-verb: exec
    put:
      tags:
        - ExpressRouteCrossConnectionPeerings
      operationId: ExpressRouteCrossConnectionPeerings_CreateOrUpdate
      description: Creates or updates a peering in the specified ExpressRouteCrossConnection.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: crossConnectionName
          in: path
          description: The name of the ExpressRouteCrossConnection.
          required: true
          schema:
            type: string
        - name: peeringName
          in: path
          description: The name of the peering.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update ExpressRouteCrossConnection peering operation.
        required: true
        x-ms-requestBody-name: peeringParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpressRouteCrossConnectionPeering'
      responses:
        '200':
          description: Update successful. The operation returns the resulting ExpressRouteCrossConnectionPeering resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCrossConnectionPeering'
        '201':
          description: Create successful. The operation returns the resulting ExpressRouteCrossConnectionPeering resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCrossConnectionPeering'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: express_route_cross_connection_peerings
      x-stackQL-verb: insert
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCrossConnections/{crossConnectionName}/peerings/{peeringName}/arpTables/{devicePath}/?api-version=2022-01-01:
    post:
      tags:
        - ExpressRouteCrossConnectionArpTable
      operationId: ExpressRouteCrossConnections_ListArpTable
      description: Gets the currently advertised ARP table associated with the express route cross connection in a resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: crossConnectionName
          in: path
          description: The name of the ExpressRouteCrossConnection.
          required: true
          schema:
            type: string
        - name: peeringName
          in: path
          description: The name of the peering.
          required: true
          schema:
            type: string
        - name: devicePath
          in: path
          description: The path of the device.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns the resulting ExpressRouteCrossConnectionsArpTable resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuitsArpTableListResult'
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: express_route_cross_connections
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCrossConnections/{crossConnectionName}/peerings/{peeringName}/routeTablesSummary/{devicePath}/?api-version=2022-01-01:
    post:
      tags:
        - ExpressRouteCrossConnectionRouteTableSummary
      operationId: ExpressRouteCrossConnections_ListRoutesTableSummary
      description: Gets the route table summary associated with the express route cross connection in a resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: crossConnectionName
          in: path
          description: The name of the ExpressRouteCrossConnection.
          required: true
          schema:
            type: string
        - name: peeringName
          in: path
          description: The name of the peering.
          required: true
          schema:
            type: string
        - name: devicePath
          in: path
          description: The path of the device.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns the resulting ExpressRouteCrossConnectionsRouteTableSummary resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCrossConnectionsRoutesTableSummaryListResult'
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: express_route_cross_connections
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCrossConnections/{crossConnectionName}/peerings/{peeringName}/routeTables/{devicePath}/?api-version=2022-01-01:
    post:
      tags:
        - ExpressRouteCrossConnectionRouteTable
      operationId: ExpressRouteCrossConnections_ListRoutesTable
      description: Gets the currently advertised routes table associated with the express route cross connection in a resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: crossConnectionName
          in: path
          description: The name of the ExpressRouteCrossConnection.
          required: true
          schema:
            type: string
        - name: peeringName
          in: path
          description: The name of the peering.
          required: true
          schema:
            type: string
        - name: devicePath
          in: path
          description: The path of the device.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns the resulting ExpressRouteCrossConnectionsRouteTable resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuitsRoutesTableListResult'
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: express_route_cross_connections
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}/?api-version=2022-01-01:
    delete:
      tags:
        - PublicIPAddresses
      operationId: PublicIPAddresses_Delete
      description: Deletes the specified public IP address.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: publicIpAddressName
          in: path
          description: The name of the public IP address.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Request successful. Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: public_ip_addresses
      x-stackQL-verb: delete
    get:
      tags:
        - PublicIPAddresses
      operationId: PublicIPAddresses_Get
      description: Gets the specified public IP address in a specified resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: publicIpAddressName
          in: path
          description: The name of the public IP address.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $expand
          in: query
          description: Expands referenced resources.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request successful. The operation returns the resulting PublicIPAddress resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicIPAddress'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: public_ip_addresses
      x-stackQL-verb: exec
    put:
      tags:
        - PublicIPAddresses
      operationId: PublicIPAddresses_CreateOrUpdate
      description: Creates or updates a static or dynamic public IP address.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: publicIpAddressName
          in: path
          description: The name of the public IP address.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update public IP address operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicIPAddress'
      responses:
        '200':
          description: Update successful. The operation returns the resulting PublicIPAddress resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicIPAddress'
        '201':
          description: Create successful. The operation returns the resulting PublicIPAddress resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicIPAddress'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: public_ip_addresses
      x-stackQL-verb: insert
    patch:
      tags:
        - PublicIPAddresses
      operationId: PublicIPAddresses_UpdateTags
      description: Updates public IP address tags.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: publicIpAddressName
          in: path
          description: The name of the public IP address.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to update public IP address tags.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Update successful. The operation returns the resulting PublicIPAddress resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicIPAddress'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: public_ip_addresses
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/publicIPAddresses/?api-version=2022-01-01:
    get:
      tags:
        - PublicIPAddresses
      operationId: PublicIPAddresses_ListAll
      description: Gets all the public IP addresses in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of PublicIPAddress resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicIPAddressListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: public_ip_addresses
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/?api-version=2022-01-01:
    get:
      tags:
        - PublicIPAddresses
      operationId: PublicIPAddresses_List
      description: Gets all public IP addresses in a resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of PublicIPAddress resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicIPAddressListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: public_ip_addresses
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations/{authorizationName}/?api-version=2022-01-01:
    delete:
      tags:
        - ExpressRouteCircuitAuthorizations
      operationId: ExpressRouteCircuitAuthorizations_Delete
      description: Deletes the specified authorization from the specified express route circuit.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: circuitName
          in: path
          description: The name of the express route circuit.
          required: true
          schema:
            type: string
        - name: authorizationName
          in: path
          description: The name of the authorization.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Delete successful.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: express_route_circuit_authorizations
      x-stackQL-verb: delete
    get:
      tags:
        - ExpressRouteCircuitAuthorizations
      operationId: ExpressRouteCircuitAuthorizations_Get
      description: Gets the specified authorization from the specified express route circuit.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: circuitName
          in: path
          description: The name of the express route circuit.
          required: true
          schema:
            type: string
        - name: authorizationName
          in: path
          description: The name of the authorization.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns the ExpressRouteCircuitAuthorization resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuitAuthorization'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: express_route_circuit_authorizations
      x-stackQL-verb: exec
    put:
      tags:
        - ExpressRouteCircuitAuthorizations
      operationId: ExpressRouteCircuitAuthorizations_CreateOrUpdate
      description: Creates or updates an authorization in the specified express route circuit.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: circuitName
          in: path
          description: The name of the express route circuit.
          required: true
          schema:
            type: string
        - name: authorizationName
          in: path
          description: The name of the authorization.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update express route circuit authorization operation.
        required: true
        x-ms-requestBody-name: authorizationParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpressRouteCircuitAuthorization'
      responses:
        '200':
          description: Update successful. The operation returns the resulting ExpressRouteCircuitAuthorization resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuitAuthorization'
        '201':
          description: Create successful. The operation returns the resulting ExpressRouteCircuitAuthorization resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuitAuthorization'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: express_route_circuit_authorizations
      x-stackQL-verb: insert
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations/?api-version=2022-01-01:
    get:
      tags:
        - ExpressRouteCircuitAuthorizations
      operationId: ExpressRouteCircuitAuthorizations_List
      description: Gets all authorizations in an express route circuit.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: circuitName
          in: path
          description: The name of the circuit.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of ExpressRouteCircuitAuthorization resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: express_route_circuit_authorizations
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/?api-version=2022-01-01:
    delete:
      tags:
        - ExpressRouteCircuitPeerings
      operationId: ExpressRouteCircuitPeerings_Delete
      description: Deletes the specified peering from the specified express route circuit.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: circuitName
          in: path
          description: The name of the express route circuit.
          required: true
          schema:
            type: string
        - name: peeringName
          in: path
          description: The name of the peering.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Delete successful.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: express_route_circuit_peerings
      x-stackQL-verb: delete
    get:
      tags:
        - ExpressRouteCircuitPeerings
      operationId: ExpressRouteCircuitPeerings_Get
      description: Gets the specified peering for the express route circuit.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: circuitName
          in: path
          description: The name of the express route circuit.
          required: true
          schema:
            type: string
        - name: peeringName
          in: path
          description: The name of the peering.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns the resulting ExpressRouteCircuitPeering resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuitPeering'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: express_route_circuit_peerings
      x-stackQL-verb: exec
    put:
      tags:
        - ExpressRouteCircuitPeerings
      operationId: ExpressRouteCircuitPeerings_CreateOrUpdate
      description: Creates or updates a peering in the specified express route circuits.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: circuitName
          in: path
          description: The name of the express route circuit.
          required: true
          schema:
            type: string
        - name: peeringName
          in: path
          description: The name of the peering.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update express route circuit peering operation.
        required: true
        x-ms-requestBody-name: peeringParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpressRouteCircuitPeering'
      responses:
        '200':
          description: Update successful. The operation returns the resulting ExpressRouteCircuitPeering resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuitPeering'
        '201':
          description: Create successful. The operation returns the resulting ExpressRouteCircuitPeering resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuitPeering'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: express_route_circuit_peerings
      x-stackQL-verb: insert
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/?api-version=2022-01-01:
    get:
      tags:
        - ExpressRouteCircuitPeerings
      operationId: ExpressRouteCircuitPeerings_List
      description: Gets all peerings in a specified express route circuit.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: circuitName
          in: path
          description: The name of the express route circuit.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of ExpressRouteCircuitPeering resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuitPeeringListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: express_route_circuit_peerings
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/connections/{connectionName}/?api-version=2022-01-01:
    delete:
      tags:
        - ExpressRouteCircuitConnections
      operationId: ExpressRouteCircuitConnections_Delete
      description: Deletes the specified Express Route Circuit Connection from the specified express route circuit.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: circuitName
          in: path
          description: The name of the express route circuit.
          required: true
          schema:
            type: string
        - name: peeringName
          in: path
          description: The name of the peering.
          required: true
          schema:
            type: string
        - name: connectionName
          in: path
          description: The name of the express route circuit connection.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Delete successful.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: express_route_circuit_connections
      x-stackQL-verb: delete
    get:
      tags:
        - ExpressRouteCircuitConnections
      operationId: ExpressRouteCircuitConnections_Get
      description: Gets the specified Express Route Circuit Connection from the specified express route circuit.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: circuitName
          in: path
          description: The name of the express route circuit.
          required: true
          schema:
            type: string
        - name: peeringName
          in: path
          description: The name of the peering.
          required: true
          schema:
            type: string
        - name: connectionName
          in: path
          description: The name of the express route circuit connection.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns the resulting Express Route Circuit Connection resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuitConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: express_route_circuit_connections
      x-stackQL-verb: exec
    put:
      tags:
        - ExpressRouteCircuitConnections
      operationId: ExpressRouteCircuitConnections_CreateOrUpdate
      description: Creates or updates a Express Route Circuit Connection in the specified express route circuits.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: circuitName
          in: path
          description: The name of the express route circuit.
          required: true
          schema:
            type: string
        - name: peeringName
          in: path
          description: The name of the peering.
          required: true
          schema:
            type: string
        - name: connectionName
          in: path
          description: The name of the express route circuit connection.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update express route circuit connection operation.
        required: true
        x-ms-requestBody-name: expressRouteCircuitConnectionParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpressRouteCircuitConnection'
      responses:
        '200':
          description: Update successful. The operation returns the resulting ExpressRouteCircuitPeering resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuitConnection'
        '201':
          description: Create successful. The operation returns the resulting ExpressRouteCircuitPeering resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuitConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: express_route_circuit_connections
      x-stackQL-verb: insert
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/connections/?api-version=2022-01-01:
    get:
      tags:
        - ExpressRouteCircuitConnections
      operationId: ExpressRouteCircuitConnections_List
      description: Gets all global reach connections associated with a private peering in an express route circuit.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: circuitName
          in: path
          description: The name of the circuit.
          required: true
          schema:
            type: string
        - name: peeringName
          in: path
          description: The name of the peering.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of ExpressRouteCircuitConnections resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuitConnectionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: express_route_circuit_connections
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/peerConnections/{connectionName}/?api-version=2022-01-01:
    get:
      tags:
        - PeerExpressRouteCircuitConnections
      operationId: PeerExpressRouteCircuitConnections_Get
      description: Gets the specified Peer Express Route Circuit Connection from the specified express route circuit.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: circuitName
          in: path
          description: The name of the express route circuit.
          required: true
          schema:
            type: string
        - name: peeringName
          in: path
          description: The name of the peering.
          required: true
          schema:
            type: string
        - name: connectionName
          in: path
          description: The name of the peer express route circuit connection.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns the resulting Peer Express Route Circuit Connection resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeerExpressRouteCircuitConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: peer_express_route_circuit_connections
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/peerConnections/?api-version=2022-01-01:
    get:
      tags:
        - PeerExpressRouteCircuitConnections
      operationId: PeerExpressRouteCircuitConnections_List
      description: Gets all global reach peer connections associated with a private peering in an express route circuit.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: circuitName
          in: path
          description: The name of the circuit.
          required: true
          schema:
            type: string
        - name: peeringName
          in: path
          description: The name of the peering.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of PeerExpressRouteCircuitConnections resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeerExpressRouteCircuitConnectionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: peer_express_route_circuit_connections
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/?api-version=2022-01-01:
    delete:
      tags:
        - ExpressRouteCircuits
      operationId: ExpressRouteCircuits_Delete
      description: Deletes the specified express route circuit.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: circuitName
          in: path
          description: The name of the express route circuit.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted. Sets 'Disabling' provisioningState until the operation completes. Returns an operation URI that can be queried to find the current state of the operation.
        '204':
          description: Delete successful.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: express_route_circuits
      x-stackQL-verb: delete
    get:
      tags:
        - ExpressRouteCircuits
      operationId: ExpressRouteCircuits_Get
      description: Gets information about the specified express route circuit.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: circuitName
          in: path
          description: The name of express route circuit.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns the resulting ExpressRouteCircuit resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuit'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: express_route_circuits
      x-stackQL-verb: exec
    put:
      tags:
        - ExpressRouteCircuits
      operationId: ExpressRouteCircuits_CreateOrUpdate
      description: Creates or updates an express route circuit.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: circuitName
          in: path
          description: The name of the circuit.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update express route circuit operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpressRouteCircuit'
      responses:
        '200':
          description: Update successful. The operation returns the resulting ExpressRouteCircuit resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuit'
        '201':
          description: Create successful. The operation returns the resulting ExpressRouteCircuit resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuit'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: express_route_circuits
      x-stackQL-verb: insert
    patch:
      tags:
        - ExpressRouteCircuits
      operationId: ExpressRouteCircuits_UpdateTags
      description: Updates an express route circuit tags.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: circuitName
          in: path
          description: The name of the circuit.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to update express route circuit tags.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Update successful. The operation returns the resulting ExpressRouteCircuit resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuit'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: express_route_circuits
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/arpTables/{devicePath}/?api-version=2022-01-01:
    post:
      tags:
        - ExpressRouteCircuitArpTable
      operationId: ExpressRouteCircuits_ListArpTable
      description: Gets the currently advertised ARP table associated with the express route circuit in a resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: circuitName
          in: path
          description: The name of the express route circuit.
          required: true
          schema:
            type: string
        - name: peeringName
          in: path
          description: The name of the peering.
          required: true
          schema:
            type: string
        - name: devicePath
          in: path
          description: The path of the device.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns the resulting ExpressRouteCircuitsArpTable resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuitsArpTableListResult'
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: express_route_circuits
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/routeTables/{devicePath}/?api-version=2022-01-01:
    post:
      tags:
        - ExpressRouteCircuitRoutesTable
      operationId: ExpressRouteCircuits_ListRoutesTable
      description: Gets the currently advertised routes table associated with the express route circuit in a resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: circuitName
          in: path
          description: The name of the express route circuit.
          required: true
          schema:
            type: string
        - name: peeringName
          in: path
          description: The name of the peering.
          required: true
          schema:
            type: string
        - name: devicePath
          in: path
          description: The path of the device.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns the resulting ExpressRouteCircuitsRouteTable resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuitsRoutesTableListResult'
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: express_route_circuits
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/routeTablesSummary/{devicePath}/?api-version=2022-01-01:
    post:
      tags:
        - ExpressRouteCircuitRoutesTableSummary
      operationId: ExpressRouteCircuits_ListRoutesTableSummary
      description: Gets the currently advertised routes table summary associated with the express route circuit in a resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: circuitName
          in: path
          description: The name of the express route circuit.
          required: true
          schema:
            type: string
        - name: peeringName
          in: path
          description: The name of the peering.
          required: true
          schema:
            type: string
        - name: devicePath
          in: path
          description: The path of the device.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns the resulting ExpressRouteCircuitsRoutesTableSummary resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuitsRoutesTableSummaryListResult'
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: express_route_circuits
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/stats/?api-version=2022-01-01:
    get:
      tags:
        - ExpressRouteCircuitStats
      operationId: ExpressRouteCircuits_GetStats
      description: Gets all the stats from an express route circuit in a resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: circuitName
          in: path
          description: The name of the express route circuit.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns the resulting ExpressRouteCircuitStats resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuitStats'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: express_route_circuits
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/stats/?api-version=2022-01-01:
    get:
      tags:
        - ExpressRouteCircuitStats
      operationId: ExpressRouteCircuits_GetPeeringStats
      description: Gets all stats from an express route circuit in a resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: circuitName
          in: path
          description: The name of the express route circuit.
          required: true
          schema:
            type: string
        - name: peeringName
          in: path
          description: The name of the peering.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns the resulting ExpressRouteCircuitStats resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuitStats'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: express_route_circuits
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/?api-version=2022-01-01:
    get:
      tags:
        - ExpressRouteCircuits
      operationId: ExpressRouteCircuits_List
      description: Gets all the express route circuits in a resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns the resulting ExpressRouteCircuitAuthorization resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuitListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: express_route_circuits
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/expressRouteCircuits/?api-version=2022-01-01:
    get:
      tags:
        - ExpressRouteCircuits
      operationId: ExpressRouteCircuits_ListAll
      description: Gets all the express route circuits in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of ExpressRouteCircuit resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteCircuitListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: express_route_circuits
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/expressRouteServiceProviders/?api-version=2022-01-01:
    get:
      tags:
        - ExpressRouteServiceProviders
      operationId: ExpressRouteServiceProviders_List
      description: Gets all the available express route service providers.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of ExpressRouteServiceProvider resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteServiceProviderListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: express_route_service_providers
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/?api-version=2022-01-01:
    put:
      tags:
        - NetworkWatchers
      operationId: NetworkWatchers_CreateOrUpdate
      description: Creates or updates a network watcher in the specified resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkWatcherName
          in: path
          description: The name of the network watcher.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters that define the network watcher resource.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkWatcher'
      responses:
        '200':
          description: Update successful. The operation returns the resulting network watcher resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkWatcher'
        '201':
          description: Create successful. The operation returns the resulting network watcher resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkWatcher'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: watchers
      x-stackQL-verb: insert
    get:
      tags:
        - NetworkWatchers
      operationId: NetworkWatchers_Get
      description: Gets the specified network watcher by resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkWatcherName
          in: path
          description: The name of the network watcher.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a network watcher resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkWatcher'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: watchers
      x-stackQL-verb: exec
    delete:
      tags:
        - NetworkWatchers
      operationId: NetworkWatchers_Delete
      description: Deletes the specified network watcher resource.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkWatcherName
          in: path
          description: The name of the network watcher.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Delete successful.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: watchers
      x-stackQL-verb: delete
    patch:
      tags:
        - NetworkWatchers
      operationId: NetworkWatchers_UpdateTags
      description: Updates a network watcher tags.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkWatcherName
          in: path
          description: The name of the network watcher.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to update network watcher tags.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Update successful. The operation returns the resulting network watcher resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkWatcher'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: watchers
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/?api-version=2022-01-01:
    get:
      tags:
        - NetworkWatchers
      operationId: NetworkWatchers_List
      description: Gets all network watchers by resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of network watcher resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkWatcherListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
      x-stackQL-resource: watchers
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/networkWatchers/?api-version=2022-01-01:
    get:
      tags:
        - NetworkWatchers
      operationId: NetworkWatchers_ListAll
      description: Gets all network watchers by subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of network watcher resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkWatcherListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
      x-stackQL-resource: watchers
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/topology/?api-version=2022-01-01:
    post:
      tags:
        - NetworkWatchers
      operationId: NetworkWatchers_GetTopology
      description: Gets the current network topology by resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkWatcherName
          in: path
          description: The name of the network watcher.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters that define the representation of topology.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopologyParameters'
      responses:
        '200':
          description: Request successful. The operation returns the topology of resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topology'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: watchers
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/ipFlowVerify/?api-version=2022-01-01:
    post:
      tags:
        - NetworkWatchers
      operationId: NetworkWatchers_VerifyIPFlow
      description: Verify IP flow from the specified VM to a location given the currently configured NSG rules.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkWatcherName
          in: path
          description: The name of the network watcher.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters that define the IP flow to be verified.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerificationIPFlowParameters'
      responses:
        '200':
          description: Request successful. The operation returns the result of IP flow verification.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationIPFlowResult'
        '202':
          description: Accepted and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationIPFlowResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: watchers
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/nextHop/?api-version=2022-01-01:
    post:
      tags:
        - NetworkWatchers
      operationId: NetworkWatchers_GetNextHop
      description: Gets the next hop from the specified VM.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkWatcherName
          in: path
          description: The name of the network watcher.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters that define the source and destination endpoint.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NextHopParameters'
      responses:
        '200':
          description: Request successful. The operation returns the next hop from the VM.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NextHopResult'
        '202':
          description: Accepted and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NextHopResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: watchers
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/securityGroupView/?api-version=2022-01-01:
    post:
      tags:
        - NetworkWatchers
      operationId: NetworkWatchers_GetVMSecurityRules
      description: Gets the configured and effective security group rules on the specified VM.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkWatcherName
          in: path
          description: The name of the network watcher.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters that define the VM to check security groups for.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityGroupViewParameters'
      responses:
        '200':
          description: Request successful. The operation returns security group rules on the VM.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityGroupViewResult'
        '202':
          description: Accepted and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityGroupViewResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: watchers
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}/?api-version=2022-01-01:
    put:
      tags:
        - PacketCaptures
      operationId: PacketCaptures_Create
      description: Create and start a packet capture on the specified VM.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkWatcherName
          in: path
          description: The name of the network watcher.
          required: true
          schema:
            type: string
        - name: packetCaptureName
          in: path
          description: The name of the packet capture session.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters that define the create packet capture operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PacketCapture'
      responses:
        '201':
          description: Request successful. The operation returns the resulting packet capture session.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PacketCaptureResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: packet_captures
      x-stackQL-verb: insert
    get:
      tags:
        - PacketCaptures
      operationId: PacketCaptures_Get
      description: Gets a packet capture session by name.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkWatcherName
          in: path
          description: The name of the network watcher.
          required: true
          schema:
            type: string
        - name: packetCaptureName
          in: path
          description: The name of the packet capture session.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a packet capture session.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PacketCaptureResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: packet_captures
      x-stackQL-verb: exec
    delete:
      tags:
        - PacketCaptures
      operationId: PacketCaptures_Delete
      description: Deletes the specified packet capture session.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkWatcherName
          in: path
          description: The name of the network watcher.
          required: true
          schema:
            type: string
        - name: packetCaptureName
          in: path
          description: The name of the packet capture session.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Delete successful.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: packet_captures
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}/stop/?api-version=2022-01-01:
    post:
      tags:
        - PacketCaptures
      operationId: PacketCaptures_Stop
      description: Stops a specified packet capture session.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkWatcherName
          in: path
          description: The name of the network watcher.
          required: true
          schema:
            type: string
        - name: packetCaptureName
          in: path
          description: The name of the packet capture session.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation stops the packet capture session.
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: packet_captures
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}/queryStatus/?api-version=2022-01-01:
    post:
      tags:
        - PacketCaptures
      operationId: PacketCaptures_GetStatus
      description: Query the status of a running packet capture session.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkWatcherName
          in: path
          description: The name of the Network Watcher resource.
          required: true
          schema:
            type: string
        - name: packetCaptureName
          in: path
          description: The name given to the packet capture session.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successful query of packet capture status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PacketCaptureQueryStatusResult'
        '202':
          description: Accepted query status of packet capture.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PacketCaptureQueryStatusResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: packet_captures
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/?api-version=2022-01-01:
    get:
      tags:
        - PacketCaptures
      operationId: PacketCaptures_List
      description: Lists all packet capture sessions within the specified resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkWatcherName
          in: path
          description: The name of the Network Watcher resource.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successful packet capture enumeration request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PacketCaptureListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
      x-stackQL-resource: packet_captures
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/troubleshoot/?api-version=2022-01-01:
    post:
      tags:
        - NetworkWatchers
      operationId: NetworkWatchers_GetTroubleshooting
      description: Initiate troubleshooting on a specified resource.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkWatcherName
          in: path
          description: The name of the network watcher resource.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters that define the resource to troubleshoot.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TroubleshootingParameters'
      responses:
        '200':
          description: Successful troubleshooting request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TroubleshootingResult'
        '202':
          description: Accepted get troubleshooting request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TroubleshootingResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: watchers
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/queryTroubleshootResult/?api-version=2022-01-01:
    post:
      tags:
        - NetworkWatchers
      operationId: NetworkWatchers_GetTroubleshootingResult
      description: Get the last completed troubleshooting result on a specified resource.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkWatcherName
          in: path
          description: The name of the network watcher resource.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters that define the resource to query the troubleshooting result.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryTroubleshootingParameters'
      responses:
        '200':
          description: Successful get troubleshooting result request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TroubleshootingResult'
        '202':
          description: Accepted get troubleshooting result request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TroubleshootingResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: watchers
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/configureFlowLog/?api-version=2022-01-01:
    post:
      tags:
        - NetworkWatchers
        - TrafficAnalytics
      operationId: NetworkWatchers_SetFlowLogConfiguration
      description: Configures flow log and traffic analytics (optional) on a specified resource.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the network watcher resource group.
          required: true
          schema:
            type: string
        - name: networkWatcherName
          in: path
          description: The name of the network watcher resource.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters that define the configuration of flow log.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlowLogInformation'
      responses:
        '200':
          description: Successful request for setting flow log and traffic analytics (optional) configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowLogInformation'
        '202':
          description: Accepted and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowLogInformation'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: watchers
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/queryFlowLogStatus/?api-version=2022-01-01:
    post:
      tags:
        - NetworkWatchers
        - TrafficAnalytics
      operationId: NetworkWatchers_GetFlowLogStatus
      description: Queries status of flow log and traffic analytics (optional) on a specified resource.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the network watcher resource group.
          required: true
          schema:
            type: string
        - name: networkWatcherName
          in: path
          description: The name of the network watcher resource.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters that define a resource to query flow log and traffic analytics (optional) status.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlowLogStatusParameters'
      responses:
        '200':
          description: Successful request for query flow log and traffic analytics (optional) status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowLogInformation'
        '202':
          description: Accepted and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowLogInformation'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: watchers
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectivityCheck/?api-version=2022-01-01:
    post:
      tags:
        - NetworkWatchers
      operationId: NetworkWatchers_CheckConnectivity
      description: Verifies the possibility of establishing a direct TCP connection from a virtual machine to a given endpoint including another VM or an arbitrary remote server.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the network watcher resource group.
          required: true
          schema:
            type: string
        - name: networkWatcherName
          in: path
          description: The name of the network watcher resource.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters that determine how the connectivity check will be performed.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectivityParameters'
      responses:
        '200':
          description: Successful request for checking connectivity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectivityInformation'
        '202':
          description: Accepted and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectivityInformation'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: watchers
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/azureReachabilityReport/?api-version=2022-01-01:
    post:
      tags:
        - NetworkWatchers
      operationId: NetworkWatchers_GetAzureReachabilityReport
      description: 'NOTE: This feature is currently in preview and still being tested for stability. Gets the relative latency score for internet service providers from a specified location to Azure regions.'
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the network watcher resource group.
          required: true
          schema:
            type: string
        - name: networkWatcherName
          in: path
          description: The name of the network watcher resource.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters that determine Azure reachability report configuration.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AzureReachabilityReportParameters'
      responses:
        '200':
          description: Successful request for Azure reachability report.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureReachabilityReport'
        '202':
          description: Accepted and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureReachabilityReport'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: watchers
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/availableProvidersList/?api-version=2022-01-01:
    post:
      tags:
        - NetworkWatchers
      operationId: NetworkWatchers_ListAvailableProviders
      description: 'NOTE: This feature is currently in preview and still being tested for stability. Lists all available internet service providers for a specified Azure region.'
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the network watcher resource group.
          required: true
          schema:
            type: string
        - name: networkWatcherName
          in: path
          description: The name of the network watcher resource.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters that scope the list of available providers.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvailableProvidersListParameters'
      responses:
        '200':
          description: Successful request for list of available providers.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableProvidersList'
        '202':
          description: Accepted and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableProvidersList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: watchers
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/networkConfigurationDiagnostic/?api-version=2022-01-01:
    post:
      tags:
        - NetworkWatchers
      operationId: NetworkWatchers_GetNetworkConfigurationDiagnostic
      description: Gets Network Configuration Diagnostic data to help customers understand and debug network behavior. It provides detailed information on what security rules were applied to a specified traffic flow and the result of evaluating these rules. Customers must provide details of a flow like source, destination, protocol, etc. The API returns whether traffic was allowed or denied, the rules evaluated for the specified flow and the evaluation results.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkWatcherName
          in: path
          description: The name of the network watcher.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters to get network configuration diagnostic.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkConfigurationDiagnosticParameters'
      responses:
        '200':
          description: Request successful. The operation returns the result of network configuration diagnostic.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkConfigurationDiagnosticResponse'
        '202':
          description: Accepted and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkConfigurationDiagnosticResponse'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: watchers
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectionMonitors/{connectionMonitorName}/?api-version=2022-01-01:
    put:
      tags:
        - ConnectionMonitors
      operationId: ConnectionMonitors_CreateOrUpdate
      description: Create or update a connection monitor.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group containing Network Watcher.
          required: true
          schema:
            type: string
        - name: networkWatcherName
          in: path
          description: The name of the Network Watcher resource.
          required: true
          schema:
            type: string
        - name: connectionMonitorName
          in: path
          description: The name of the connection monitor.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: migrate
          in: query
          description: Value indicating whether connection monitor V1 should be migrated to V2 format.
          required: false
          schema:
            type: string
      requestBody:
        description: Parameters that define the operation to create a connection monitor.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionMonitor'
      responses:
        '200':
          description: Update successful. The operation returns the resulting network watcher resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionMonitorResult'
        '201':
          description: Create successful. The operation returns the resulting network watcher resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionMonitorResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: connection_monitors
      x-stackQL-verb: insert
    get:
      tags:
        - ConnectionMonitors
      operationId: ConnectionMonitors_Get
      description: Gets a connection monitor by name.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group containing Network Watcher.
          required: true
          schema:
            type: string
        - name: networkWatcherName
          in: path
          description: The name of the Network Watcher resource.
          required: true
          schema:
            type: string
        - name: connectionMonitorName
          in: path
          description: The name of the connection monitor.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a connection monitor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionMonitorResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: connection_monitors
      x-stackQL-verb: exec
    delete:
      tags:
        - ConnectionMonitors
      operationId: ConnectionMonitors_Delete
      description: Deletes the specified connection monitor.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group containing Network Watcher.
          required: true
          schema:
            type: string
        - name: networkWatcherName
          in: path
          description: The name of the Network Watcher resource.
          required: true
          schema:
            type: string
        - name: connectionMonitorName
          in: path
          description: The name of the connection monitor.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '202':
          description: Accepted. The operation will complete asynchronously.
        '204':
          description: Delete successful.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: connection_monitors
      x-stackQL-verb: delete
    patch:
      tags:
        - ConnectionMonitors
      operationId: ConnectionMonitors_UpdateTags
      description: Update tags of the specified connection monitor.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkWatcherName
          in: path
          description: The name of the network watcher.
          required: true
          schema:
            type: string
        - name: connectionMonitorName
          in: path
          description: The name of the connection monitor.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to update connection monitor tags.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Request successful. The operation returns updated connection monitor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionMonitorResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: connection_monitors
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectionMonitors/{connectionMonitorName}/stop/?api-version=2022-01-01:
    post:
      tags:
        - ConnectionMonitors
      operationId: ConnectionMonitors_Stop
      description: Stops the specified connection monitor.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group containing Network Watcher.
          required: true
          schema:
            type: string
        - name: networkWatcherName
          in: path
          description: The name of the Network Watcher resource.
          required: true
          schema:
            type: string
        - name: connectionMonitorName
          in: path
          description: The name of the connection monitor.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation stops the connection monitor.
        '202':
          description: Accepted. The operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: connection_monitors
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectionMonitors/{connectionMonitorName}/start/?api-version=2022-01-01:
    post:
      tags:
        - ConnectionMonitors
      operationId: ConnectionMonitors_Start
      description: Starts the specified connection monitor.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group containing Network Watcher.
          required: true
          schema:
            type: string
        - name: networkWatcherName
          in: path
          description: The name of the Network Watcher resource.
          required: true
          schema:
            type: string
        - name: connectionMonitorName
          in: path
          description: The name of the connection monitor.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation starts the connection monitor.
        '202':
          description: Accepted. The operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: connection_monitors
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectionMonitors/{connectionMonitorName}/query/?api-version=2022-01-01:
    post:
      tags:
        - ConnectionMonitors
      operationId: ConnectionMonitors_Query
      description: Query a snapshot of the most recent connection states.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group containing Network Watcher.
          required: true
          schema:
            type: string
        - name: networkWatcherName
          in: path
          description: The name of the Network Watcher resource.
          required: true
          schema:
            type: string
        - name: connectionMonitorName
          in: path
          description: The name given to the connection monitor.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successful query of connection states.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionMonitorQueryResult'
        '202':
          description: Accepted query of connection states.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionMonitorQueryResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: connection_monitors
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectionMonitors/?api-version=2022-01-01:
    get:
      tags:
        - ConnectionMonitors
      operationId: ConnectionMonitors_List
      description: Lists all connection monitors for the specified Network Watcher.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group containing Network Watcher.
          required: true
          schema:
            type: string
        - name: networkWatcherName
          in: path
          description: The name of the Network Watcher resource.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successful connection monitor enumeration request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionMonitorListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
      x-stackQL-resource: connection_monitors
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/flowLogs/{flowLogName}/?api-version=2022-01-01:
    put:
      tags:
        - FlowLogs
      operationId: FlowLogs_CreateOrUpdate
      description: Create or update a flow log for the specified network security group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkWatcherName
          in: path
          description: The name of the network watcher.
          required: true
          schema:
            type: string
        - name: flowLogName
          in: path
          description: The name of the flow log.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters that define the create or update flow log resource.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlowLog'
      responses:
        '200':
          description: Update successful. The operation returns the resulting flow log resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowLog'
        '201':
          description: Request successful. The operation returns the resulting flow log resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowLog'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: flow_logs
      x-stackQL-verb: insert
    patch:
      tags:
        - FlowLogs
      operationId: FlowLogs_UpdateTags
      description: Update tags of the specified flow log.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkWatcherName
          in: path
          description: The name of the network watcher.
          required: true
          schema:
            type: string
        - name: flowLogName
          in: path
          description: The name of the flow log.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to update flow log tags.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Request successful. The operation returns updated flow log.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowLog'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: flow_logs
      x-stackQL-verb: exec
    get:
      tags:
        - FlowLogs
      operationId: FlowLogs_Get
      description: Gets a flow log resource by name.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkWatcherName
          in: path
          description: The name of the network watcher.
          required: true
          schema:
            type: string
        - name: flowLogName
          in: path
          description: The name of the flow log resource.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a flow log resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowLog'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: flow_logs
      x-stackQL-verb: exec
    delete:
      tags:
        - FlowLogs
      operationId: FlowLogs_Delete
      description: Deletes the specified flow log resource.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkWatcherName
          in: path
          description: The name of the network watcher.
          required: true
          schema:
            type: string
        - name: flowLogName
          in: path
          description: The name of the flow log resource.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Delete successful.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: flow_logs
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/flowLogs/?api-version=2022-01-01:
    get:
      tags:
        - FlowLogs
      operationId: FlowLogs_List
      description: Lists all flow log resources for the specified Network Watcher.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group containing Network Watcher.
          required: true
          schema:
            type: string
        - name: networkWatcherName
          in: path
          description: The name of the Network Watcher resource.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successful flow log enumeration request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowLogListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: flow_logs
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateEndpoints/{privateEndpointName}/?api-version=2022-01-01:
    delete:
      tags:
        - PrivateEndpoints
      operationId: PrivateEndpoints_Delete
      description: Deletes the specified private endpoint.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: privateEndpointName
          in: path
          description: The name of the private endpoint.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Delete successful.
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: private_endpoints
      x-stackQL-verb: delete
    get:
      tags:
        - PrivateEndpoints
      operationId: PrivateEndpoints_Get
      description: Gets the specified private endpoint by resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: privateEndpointName
          in: path
          description: The name of the private endpoint.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $expand
          in: query
          description: Expands referenced resources.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request successful. The operation returns the resulting private endpoint resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpoint'
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-stackQL-resource: private_endpoints
      x-stackQL-verb: exec
    put:
      tags:
        - PrivateEndpoints
      operationId: PrivateEndpoints_CreateOrUpdate
      description: Creates or updates an private endpoint in the specified resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: privateEndpointName
          in: path
          description: The name of the private endpoint.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update private endpoint operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateEndpoint'
      responses:
        '200':
          description: Update successful. The operation returns the resulting private endpoint resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpoint'
        '201':
          description: Create successful. The operation returns the resulting private endpoint resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpoint'
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: private_endpoints
      x-stackQL-verb: insert
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateEndpoints/?api-version=2022-01-01:
    get:
      tags:
        - PrivateEndpoints
      operationId: PrivateEndpoints_List
      description: Gets all private endpoints in a resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of private endpoint resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointListResult'
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: private_endpoints
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/privateEndpoints/?api-version=2022-01-01:
    get:
      tags:
        - PrivateEndpoints
      operationId: PrivateEndpoints_ListBySubscription
      description: Gets all private endpoints in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of private endpoint resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointListResult'
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: private_endpoints
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/availablePrivateEndpointTypes/?api-version=2022-01-01:
    get:
      operationId: AvailablePrivateEndpointTypes_List
      description: Returns all of the resource types that can be linked to a Private Endpoint in this subscription in this region.
      parameters:
        - name: location
          in: path
          description: The location of the domain name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. Returns all of the resource types that can be linked to a Private Endpoint in this subscription in this region.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailablePrivateEndpointTypesResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: available_private_endpoint_types
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/locations/{location}/availablePrivateEndpointTypes/?api-version=2022-01-01:
    get:
      operationId: AvailablePrivateEndpointTypes_ListByResourceGroup
      description: Returns all of the resource types that can be linked to a Private Endpoint in this subscription in this region.
      parameters:
        - name: location
          in: path
          description: The location of the domain name.
          required: true
          schema:
            type: string
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. Returns all of the resource types that can be linked to a Private Endpoint in this subscription in this region.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailablePrivateEndpointTypesResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: available_private_endpoint_types
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateEndpoints/{privateEndpointName}/privateDnsZoneGroups/{privateDnsZoneGroupName}/?api-version=2022-01-01:
    delete:
      tags:
        - PrivateDnsZoneGroups
      operationId: PrivateDnsZoneGroups_Delete
      description: Deletes the specified private dns zone group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: privateEndpointName
          in: path
          description: The name of the private endpoint.
          required: true
          schema:
            type: string
        - name: privateDnsZoneGroupName
          in: path
          description: The name of the private dns zone group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Request successful. Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: private_dns_zone_groups
      x-stackQL-verb: delete
    get:
      tags:
        - PrivateDnsZoneGroups
      operationId: PrivateDnsZoneGroups_Get
      description: Gets the private dns zone group resource by specified private dns zone group name.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: privateEndpointName
          in: path
          description: The name of the private endpoint.
          required: true
          schema:
            type: string
        - name: privateDnsZoneGroupName
          in: path
          description: The name of the private dns zone group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns the resulting privateDnsZoneGroup resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateDnsZoneGroup'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: private_dns_zone_groups
      x-stackQL-verb: exec
    put:
      tags:
        - PrivateDnsZoneGroups
      operationId: PrivateDnsZoneGroups_CreateOrUpdate
      description: Creates or updates a private dns zone group in the specified private endpoint.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: privateEndpointName
          in: path
          description: The name of the private endpoint.
          required: true
          schema:
            type: string
        - name: privateDnsZoneGroupName
          in: path
          description: The name of the private dns zone group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update private dns zone group operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateDnsZoneGroup'
      responses:
        '200':
          description: Update successful. The operation returns the resulting PrivateDnsZoneGroup resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateDnsZoneGroup'
        '201':
          description: Create successful. The operation returns the resulting PrivateDnsZoneGroup resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateDnsZoneGroup'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: private_dns_zone_groups
      x-stackQL-verb: insert
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateEndpoints/{privateEndpointName}/privateDnsZoneGroups/?api-version=2022-01-01:
    get:
      tags:
        - PrivateDnsZoneGroups
      operationId: PrivateDnsZoneGroups_List
      description: Gets all private dns zone groups in a private endpoint.
      parameters:
        - name: privateEndpointName
          in: path
          description: The name of the private endpoint.
          required: true
          schema:
            type: string
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of private dns zone group resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateDnsZoneGroupListResult'
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: private_dns_zone_groups
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationSecurityGroups/{applicationSecurityGroupName}/?api-version=2022-01-01:
    delete:
      tags:
        - ApplicationSecurityGroups
      operationId: ApplicationSecurityGroups_Delete
      description: Deletes the specified application security group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: applicationSecurityGroupName
          in: path
          description: The name of the application security group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Request successful. Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: application_security_groups
      x-stackQL-verb: delete
    get:
      tags:
        - ApplicationSecurityGroups
      operationId: ApplicationSecurityGroups_Get
      description: Gets information about the specified application security group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: applicationSecurityGroupName
          in: path
          description: The name of the application security group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns the specified application security group resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationSecurityGroup'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: application_security_groups
      x-stackQL-verb: exec
    put:
      tags:
        - ApplicationSecurityGroups
      operationId: ApplicationSecurityGroups_CreateOrUpdate
      description: Creates or updates an application security group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: applicationSecurityGroupName
          in: path
          description: The name of the application security group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update ApplicationSecurityGroup operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationSecurityGroup'
      responses:
        '200':
          description: Update successful. The operation returns the resulting application security group resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationSecurityGroup'
        '201':
          description: Create successful. The operation returns the resulting application security group resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationSecurityGroup'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: application_security_groups
      x-stackQL-verb: insert
    patch:
      tags:
        - applicationSecurityGroups
      operationId: ApplicationSecurityGroups_UpdateTags
      description: Updates an application security group's tags.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: applicationSecurityGroupName
          in: path
          description: The name of the application security group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to update application security group tags.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Update successful. The operation returns the resulting ApplicationSecurityGroup resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationSecurityGroup'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: application_security_groups
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationSecurityGroups/?api-version=2022-01-01:
    get:
      tags:
        - ApplicationSecurityGroups
      operationId: ApplicationSecurityGroups_ListAll
      description: Gets all application security groups in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of application security group resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationSecurityGroupListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: application_security_groups
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationSecurityGroups/?api-version=2022-01-01:
    get:
      tags:
        - ApplicationSecurityGroups
      operationId: ApplicationSecurityGroups_List
      description: Gets all the application security groups in a resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of application security group resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationSecurityGroupListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: application_security_groups
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/azureFirewalls/{azureFirewallName}/?api-version=2022-01-01:
    delete:
      tags:
        - AzureFirewalls
      operationId: AzureFirewalls_Delete
      description: Deletes the specified Azure Firewall.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: azureFirewallName
          in: path
          description: The name of the Azure Firewall.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Request successful. Resource with the specified name does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: azure_firewalls
      x-stackQL-verb: delete
    get:
      tags:
        - AzureFirewalls
      operationId: AzureFirewalls_Get
      description: Gets the specified Azure Firewall.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: azureFirewallName
          in: path
          description: The name of the Azure Firewall.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns an AzureFirewall resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureFirewall'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: azure_firewalls
      x-stackQL-verb: exec
    put:
      tags:
        - AzureFirewalls
      operationId: AzureFirewalls_CreateOrUpdate
      description: Creates or updates the specified Azure Firewall.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: azureFirewallName
          in: path
          description: The name of the Azure Firewall.
          required: true
          schema:
            minLength: 1
            maxLength: 56
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update Azure Firewall operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AzureFirewall'
      responses:
        '200':
          description: Update successful. The operation returns the resulting AzureFirewall resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureFirewall'
        '201':
          description: Create successful. The operation returns the resulting AzureFirewall resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureFirewall'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: azure_firewalls
      x-stackQL-verb: insert
    patch:
      tags:
        - AzureFirewalls
      operationId: AzureFirewalls_UpdateTags
      description: Updates tags of an Azure Firewall resource.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: azureFirewallName
          in: path
          description: The name of the Azure Firewall.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to update azure firewall tags.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Update successful. The operation returns the resulting AzureFirewall resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureFirewall'
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: azure_firewalls
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/azureFirewalls/?api-version=2022-01-01:
    get:
      tags:
        - AzureFirewalls
      operationId: AzureFirewalls_List
      description: Lists all Azure Firewalls in a resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success. The operation returns a list of AzureFirewall resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureFirewallListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: azure_firewalls
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/azureFirewalls/?api-version=2022-01-01:
    get:
      tags:
        - AzureFirewalls
      operationId: AzureFirewalls_ListAll
      description: Gets all the Azure Firewalls in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success. The operation returns a list of AzureFirewall resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureFirewallListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: azure_firewalls
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/azureFirewalls/{azureFirewallName}/learnedIPPrefixes/?api-version=2022-01-01:
    post:
      operationId: AzureFirewalls_ListLearnedPrefixes
      description: Retrieves a list of all IP prefixes that azure firewall has learned to not SNAT.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: azureFirewallName
          in: path
          description: The name of the azure firewall.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: List of learnt SNAT IP prefixes for no SNAT.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPPrefixesList'
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: azure_firewalls
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkTaps/{tapName}/?api-version=2022-01-01:
    delete:
      tags:
        - VirtualNetworkTap
      operationId: VirtualNetworkTaps_Delete
      description: Deletes the specified virtual network tap.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: tapName
          in: path
          description: The name of the virtual network tap.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted. Sets 'Deleting' provisioningState until the operation completes. Returns an operation URI that can be queried to find the current state of the operation.
        '204':
          description: Request successful. Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: virtual_network_taps
      x-stackQL-verb: delete
    get:
      tags:
        - VirtualNetworkTap
      operationId: VirtualNetworkTaps_Get
      description: Gets information about the specified virtual network tap.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: tapName
          in: path
          description: The name of virtual network tap.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns the resulting VirtualNetworkTap resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkTap'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: virtual_network_taps
      x-stackQL-verb: exec
    put:
      tags:
        - VirtualNetworkTap
      operationId: VirtualNetworkTaps_CreateOrUpdate
      description: Creates or updates a Virtual Network Tap.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: tapName
          in: path
          description: The name of the virtual network tap.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update virtual network tap operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualNetworkTap'
      responses:
        '200':
          description: Update successful. The operation returns the resulting VirtualNetworkTap resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkTap'
        '201':
          description: Create successful. The operation returns the resulting VirtualNetworkTap resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkTap'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: virtual_network_taps
      x-stackQL-verb: insert
    patch:
      tags:
        - VirtualNetworkTap
      operationId: VirtualNetworkTaps_UpdateTags
      description: Updates an VirtualNetworkTap tags.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: tapName
          in: path
          description: The name of the tap.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to update VirtualNetworkTap tags.
        required: true
        x-ms-requestBody-name: tapParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Update successful. The operation returns the resulting VirtualNetworkTap resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkTap'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: virtual_network_taps
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/virtualNetworkTaps/?api-version=2022-01-01:
    get:
      tags:
        - VirtualNetworkTaps
      operationId: VirtualNetworkTaps_ListAll
      description: Gets all the VirtualNetworkTaps in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of Virtual Network Tap resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkTapListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: virtual_network_taps
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkTaps/?api-version=2022-01-01:
    get:
      tags:
        - VirtualNetworkTaps
      operationId: VirtualNetworkTaps_ListByResourceGroup
      description: Gets all the VirtualNetworkTaps in a subscription.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of Virtual Network Tap resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkTapListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: virtual_network_taps
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/availableServiceAliases/?api-version=2022-01-01:
    get:
      operationId: AvailableServiceAliases_List
      description: Gets all available service aliases for this subscription in this region.
      parameters:
        - name: location
          in: path
          description: The location.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. Returns all available service aliases for the subscription in the region.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableServiceAliasesResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: available_service_aliases
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/locations/{location}/availableServiceAliases/?api-version=2022-01-01:
    get:
      operationId: AvailableServiceAliases_ListByResourceGroup
      description: Gets all available service aliases for this resource group in this region.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: location
          in: path
          description: The location.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. Returns all available service aliases for the resource group in the region.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableServiceAliasesResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: available_service_aliases
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/serviceTags/?api-version=2022-01-01:
    get:
      operationId: ServiceTags_List
      description: Gets a list of service tag information resources.
      parameters:
        - name: location
          in: path
          description: The location that will be used as a reference for version (not as a filter based on location, you will get the list of service tags with prefix details across all regions but limited to the cloud that your subscription belongs to).
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. Returns a list of service tag information resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceTagsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: service_tags
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/serviceTagDetails/?api-version=2022-01-01:
    get:
      operationId: ServiceTagInformation_List
      description: Gets a list of service tag information resources with pagination.
      parameters:
        - name: location
          in: path
          description: The location that will be used as a reference for cloud (not as a filter based on location, you will get the list of service tags with prefix details across all regions but limited to the cloud that your subscription belongs to).
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: noAddressPrefixes
          in: query
          description: Do not return address prefixes for the tag(s).
          required: false
          schema:
            type: boolean
        - name: tagName
          in: query
          description: Return tag information for a particular tag.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request successful. Returns a list of service tag information resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceTagInformationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: service_tag_information
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/bastionHosts/{bastionHostName}/?api-version=2022-01-01:
    delete:
      tags:
        - BastionHosts
      operationId: BastionHosts_Delete
      description: Deletes the specified Bastion Host.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/BastionHostName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Request successful. Resource with the specified name does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: bastion_hosts
      x-stackQL-verb: delete
    get:
      tags:
        - BastionHosts
      operationId: BastionHosts_Get
      description: Gets the specified Bastion Host.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/BastionHostName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns an BastionHost resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BastionHost'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: bastion_hosts
      x-stackQL-verb: exec
    put:
      tags:
        - BastionHosts
      operationId: BastionHosts_CreateOrUpdate
      description: Creates or updates the specified Bastion Host.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/BastionHostName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update Bastion Host operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BastionHost'
      responses:
        '200':
          description: Update successful. The operation returns the resulting Bastion Host resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BastionHost'
        '201':
          description: Create successful. The operation returns the resulting Bastion Host resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BastionHost'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: bastion_hosts
      x-stackQL-verb: insert
    patch:
      tags:
        - BastionHosts
      operationId: BastionHosts_UpdateTags
      description: Updates Tags for BastionHost resource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/BastionHostName'
      requestBody:
        description: Parameters supplied to update BastionHost tags.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Update successful. The operation returns the resulting BastionHost resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BastionHost'
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: bastion_hosts
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/bastionHosts/?api-version=2022-01-01:
    get:
      tags:
        - BastionHosts
      operationId: BastionHosts_List
      description: Lists all Bastion Hosts in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success. The operation returns a list of Bastion Host resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BastionHostListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: bastion_hosts
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/bastionHosts/?api-version=2022-01-01:
    get:
      tags:
        - BastionHosts
      operationId: BastionHosts_ListByResourceGroup
      description: Lists all Bastion Hosts in a resource group.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success. The operation returns a list of BastionHost resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BastionHostListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: bastion_hosts
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/bastionHosts/{bastionHostName}/createShareableLinks/?api-version=2022-01-01:
    post:
      tags:
        - BastionHosts
        - BastionShareableLink
      operationId: PutBastionShareableLink
      description: Creates a Bastion Shareable Links for all the VMs specified in the request.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/BastionHostName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Post request for all the Bastion Shareable Link endpoints.
        required: true
        x-ms-requestBody-name: bslRequest
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BastionShareableLinkListRequest'
      responses:
        '200':
          description: Success. The operation returns a list of shareable links for the specified VMs, giving appropriate error messages as needed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BastionShareableLinkListResult'
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: bastion_hosts
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/bastionHosts/{bastionHostName}/deleteShareableLinks/?api-version=2022-01-01:
    post:
      tags:
        - BastionHosts
        - BastionShareableLink
      operationId: DeleteBastionShareableLink
      description: Deletes the Bastion Shareable Links for all the VMs specified in the request.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/BastionHostName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Post request for all the Bastion Shareable Link endpoints.
        required: true
        x-ms-requestBody-name: bslRequest
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BastionShareableLinkListRequest'
      responses:
        '200':
          description: Success. The operation deleted the BastionShareableLinks associated with the VMs, if they existed. No return body.
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: bastion_hosts
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/bastionHosts/{bastionHostName}/getShareableLinks/?api-version=2022-01-01:
    post:
      tags:
        - BastionHosts
        - BastionShareableLink
      operationId: GetBastionShareableLink
      description: Return the Bastion Shareable Links for all the VMs specified in the request.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/BastionHostName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Post request for all the Bastion Shareable Link endpoints.
        required: true
        x-ms-requestBody-name: bslRequest
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BastionShareableLinkListRequest'
      responses:
        '200':
          description: Success. The operation returns a list of shareable links for the specified VMs, giving appropriate error messages as needed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BastionShareableLinkListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: bastion_hosts
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/bastionHosts/{bastionHostName}/getActiveSessions/?api-version=2022-01-01:
    post:
      tags:
        - BastionHosts
      operationId: GetActiveSessions
      description: Returns the list of currently active sessions on the Bastion.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/BastionHostName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success. The operation returns a list of active sessions on the Bastion.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BastionActiveSessionListResult'
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: bastion_hosts
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/bastionHosts/{bastionHostName}/disconnectActiveSessions/?api-version=2022-01-01:
    post:
      tags:
        - BastionHosts
      operationId: DisconnectActiveSessions
      description: Returns the list of currently active sessions on the Bastion.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/BastionHostName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The list of sessionids to disconnect.
        required: true
        x-ms-requestBody-name: sessionIds
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionIds'
      responses:
        '200':
          description: Success. The operation returns a list of sessions with the state of deleted/failed/not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BastionSessionDeleteResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: bastion_hosts
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/securityAdminConfigurations/?api-version=2022-01-01:
    get:
      tags:
        - SecurityAdminConfigurations
      operationId: SecurityAdminConfigurations_List
      description: Lists all the network manager security admin configurations in a network manager, in a paginated format.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkManagerNameParameter'
        - $ref: '#/components/parameters/ListTopParameter'
        - $ref: '#/components/parameters/ListSkipTokenParameter'
      responses:
        '200':
          description: Get successful. The operation returns all security admin configuration resources in the specified network manager, in a paginated format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityAdminConfigurationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: security_admin_configurations
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/securityAdminConfigurations/{configurationName}/?api-version=2022-01-01:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/NetworkManagerNameParameter'
      - $ref: '#/components/parameters/SecurityConfigurationParameter'
    get:
      tags:
        - SecurityAdminConfigurations
      description: Retrieves a network manager security admin configuration.
      operationId: SecurityAdminConfigurations_Get
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityAdminConfiguration'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: security_admin_configurations
      x-stackQL-verb: exec
    put:
      tags:
        - SecurityAdminConfigurations
      description: Creates or updates a network manager security admin configuration.
      operationId: SecurityAdminConfigurations_CreateOrUpdate
      requestBody:
        description: The security admin configuration to create or update
        required: true
        x-ms-requestBody-name: securityAdminConfiguration
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityAdminConfiguration'
      responses:
        '200':
          description: Updated Admin Configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityAdminConfiguration'
        '201':
          description: Created Admin Configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityAdminConfiguration'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: security_admin_configurations
      x-stackQL-verb: insert
    delete:
      tags:
        - SecurityAdminConfigurations
      description: Deletes a network manager security admin configuration.
      operationId: SecurityAdminConfigurations_Delete
      parameters:
        - $ref: '#/components/parameters/ForceDeleteParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted and will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
              description: The URL of the resource used to check the status of the asynchronous operation.
        '204':
          description: Request successful. Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: security_admin_configurations
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/securityAdminConfigurations/{configurationName}/ruleCollections/?api-version=2022-01-01:
    get:
      tags:
        - AdminRuleCollections
      operationId: AdminRuleCollections_List
      description: Lists all the rule collections in a security admin configuration, in a paginated format.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkManagerNameParameter'
        - $ref: '#/components/parameters/SecurityConfigurationParameter'
        - $ref: '#/components/parameters/ListTopParameter'
        - $ref: '#/components/parameters/ListSkipTokenParameter'
      responses:
        '200':
          description: Get successful. The operation returns all ruleCollections in the specified security configuration, in a paginated format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminRuleCollectionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: admin_rule_collections
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/securityAdminConfigurations/{configurationName}/ruleCollections/{ruleCollectionName}/?api-version=2022-01-01:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/NetworkManagerNameParameter'
      - $ref: '#/components/parameters/SecurityConfigurationParameter'
      - $ref: '#/components/parameters/RuleCollectionParameter'
    get:
      tags:
        - AdminRuleCollections
      description: Gets a network manager security admin configuration rule collection.
      operationId: AdminRuleCollections_Get
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminRuleCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: admin_rule_collections
      x-stackQL-verb: exec
    put:
      tags:
        - AdminRuleCollections
      description: Creates or updates an admin rule collection.
      operationId: AdminRuleCollections_CreateOrUpdate
      requestBody:
        description: The Rule Collection to create or update
        required: true
        x-ms-requestBody-name: ruleCollection
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminRuleCollection'
      responses:
        '200':
          description: Updated Rule Collection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminRuleCollection'
        '201':
          description: Created Rule Collection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminRuleCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: admin_rule_collections
      x-stackQL-verb: insert
    delete:
      tags:
        - AdminRuleCollections
      description: Deletes an admin rule collection.
      operationId: AdminRuleCollections_Delete
      parameters:
        - $ref: '#/components/parameters/ForceDeleteParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted and will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
              description: The URL of the resource used to check the status of the asynchronous operation.
        '204':
          description: Request successful. Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: admin_rule_collections
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/securityAdminConfigurations/{configurationName}/ruleCollections/{ruleCollectionName}/rules/?api-version=2022-01-01:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/NetworkManagerNameParameter'
      - $ref: '#/components/parameters/SecurityConfigurationParameter'
      - $ref: '#/components/parameters/RuleCollectionParameter'
      - $ref: '#/components/parameters/ListTopParameter'
      - $ref: '#/components/parameters/ListSkipTokenParameter'
    get:
      tags:
        - AdminRules
      description: List all network manager security configuration admin rules.
      operationId: AdminRules_List
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminRuleListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: admin_rules
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/securityAdminConfigurations/{configurationName}/ruleCollections/{ruleCollectionName}/rules/{ruleName}/?api-version=2022-01-01:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/NetworkManagerNameParameter'
      - $ref: '#/components/parameters/SecurityConfigurationParameter'
      - $ref: '#/components/parameters/RuleCollectionParameter'
      - $ref: '#/components/parameters/SecurityConfigurationsRuleParameter'
    get:
      tags:
        - AdminRules
      description: Gets a network manager security configuration admin rule.
      operationId: AdminRules_Get
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseAdminRule'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: admin_rules
      x-stackQL-verb: exec
    put:
      tags:
        - AdminRules
      description: Creates or updates an admin rule.
      operationId: AdminRules_CreateOrUpdate
      requestBody:
        description: The admin rule to create or update
        required: true
        x-ms-requestBody-name: adminRule
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseAdminRule'
      responses:
        '200':
          description: Updated rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseAdminRule'
        '201':
          description: Created rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseAdminRule'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: admin_rules
      x-stackQL-verb: insert
    delete:
      tags:
        - AdminRules
      description: Deletes an admin rule.
      operationId: AdminRules_Delete
      parameters:
        - $ref: '#/components/parameters/ForceDeleteParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted and will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
              description: The URL of the resource used to check the status of the asynchronous operation.
        '204':
          description: Request successful. Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: admin_rules
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualRouters/{virtualRouterName}/?api-version=2022-01-01:
    delete:
      tags:
        - VirtualRouters
      operationId: VirtualRouters_Delete
      description: Deletes the specified Virtual Router.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualRouterName
          in: path
          description: The name of the Virtual Router.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Request successful. Resource with the specified name does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: virtual_routers
      x-stackQL-verb: delete
    get:
      tags:
        - VirtualRouters
      operationId: VirtualRouters_Get
      description: Gets the specified Virtual Router.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualRouterName
          in: path
          description: The name of the Virtual Router.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $expand
          in: query
          description: Expands referenced resources.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request successful. The operation returns a Virtual Router resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualRouter'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-stackQL-resource: virtual_routers
      x-stackQL-verb: exec
    put:
      tags:
        - VirtualRouters
      operationId: VirtualRouters_CreateOrUpdate
      description: Creates or updates the specified Virtual Router.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualRouterName
          in: path
          description: The name of the Virtual Router.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update Virtual Router.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualRouter'
      responses:
        '200':
          description: Request successful. The operation returns the resulting Virtual Router resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualRouter'
        '201':
          description: Request received successfully. The operation returns the resulting Virtual Router resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualRouter'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: virtual_routers
      x-stackQL-verb: insert
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualRouters/?api-version=2022-01-01:
    get:
      tags:
        - VirtualRouters
      operationId: VirtualRouters_ListByResourceGroup
      description: Lists all Virtual Routers in a resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success. The operation returns a list of Virtual Router resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualRouterListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: virtual_routers
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/virtualRouters/?api-version=2022-01-01:
    get:
      tags:
        - VirtualRouters
      operationId: VirtualRouters_List
      description: Gets all the Virtual Routers in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success. The operation returns a list of Virtual Router resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualRouterListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: virtual_routers
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualRouters/{virtualRouterName}/peerings/{peeringName}/?api-version=2022-01-01:
    delete:
      tags:
        - VirtualRouterPeerings
      operationId: VirtualRouterPeerings_Delete
      description: Deletes the specified peering from a Virtual Router.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualRouterName
          in: path
          description: The name of the Virtual Router.
          required: true
          schema:
            type: string
        - name: peeringName
          in: path
          description: The name of the peering.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Request successful. Resource with the specified name does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: virtual_router_peerings
      x-stackQL-verb: delete
    get:
      tags:
        - VirtualRouterPeerings
      operationId: VirtualRouterPeerings_Get
      description: Gets the specified Virtual Router Peering.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualRouterName
          in: path
          description: The name of the Virtual Router.
          required: true
          schema:
            type: string
        - name: peeringName
          in: path
          description: The name of the Virtual Router Peering.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a Virtual Router Peering resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualRouterPeering'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-stackQL-resource: virtual_router_peerings
      x-stackQL-verb: exec
    put:
      tags:
        - VirtualRouterPeerings
      operationId: VirtualRouterPeerings_CreateOrUpdate
      description: Creates or updates the specified Virtual Router Peering.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualRouterName
          in: path
          description: The name of the Virtual Router.
          required: true
          schema:
            type: string
        - name: peeringName
          in: path
          description: The name of the Virtual Router Peering.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update Virtual Router Peering operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualRouterPeering'
      responses:
        '200':
          description: Request successful. The operation returns the resulting Virtual Router Peering resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualRouterPeering'
        '201':
          description: Request received successfully. The operation returns the resulting Virtual Router Peering resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualRouterPeering'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: virtual_router_peerings
      x-stackQL-verb: insert
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualRouters/{virtualRouterName}/peerings/?api-version=2022-01-01:
    get:
      tags:
        - VirtualRouterPeerings
      operationId: VirtualRouterPeerings_List
      description: Lists all Virtual Router Peerings in a Virtual Router resource.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualRouterName
          in: path
          description: The name of the Virtual Router.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success. The operation returns a list of Virtual Router Peering resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualRouterPeeringListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: virtual_router_peerings
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/?api-version=2022-01-01:
    delete:
      tags:
        - LoadBalancers
      operationId: LoadBalancers_Delete
      description: Deletes the specified load balancer.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: loadBalancerName
          in: path
          description: The name of the load balancer.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Request successful. Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: load_balancers
      x-stackQL-verb: delete
    get:
      tags:
        - LoadBalancers
      operationId: LoadBalancers_Get
      description: Gets the specified load balancer.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: loadBalancerName
          in: path
          description: The name of the load balancer.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $expand
          in: query
          description: Expands referenced resources.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request successful. The operation returns the resulting LoadBalancer resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadBalancer'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: load_balancers
      x-stackQL-verb: exec
    put:
      tags:
        - LoadBalancers
      operationId: LoadBalancers_CreateOrUpdate
      description: Creates or updates a load balancer.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: loadBalancerName
          in: path
          description: The name of the load balancer.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update load balancer operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoadBalancer'
      responses:
        '200':
          description: Update successful. The operation returns the resulting LoadBalancer resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadBalancer'
        '201':
          description: Create successful. The operation returns the resulting LoadBalancer resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadBalancer'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: load_balancers
      x-stackQL-verb: insert
    patch:
      tags:
        - LoadBalancers
      operationId: LoadBalancers_UpdateTags
      description: Updates a load balancer tags.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: loadBalancerName
          in: path
          description: The name of the load balancer.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to update load balancer tags.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Update successful. The operation returns the resulting LoadBalancer resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadBalancer'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: load_balancers
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/loadBalancers/?api-version=2022-01-01:
    get:
      tags:
        - LoadBalancers
      operationId: LoadBalancers_ListAll
      description: Gets all the load balancers in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of LoadBalancer resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadBalancerListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: load_balancers
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/?api-version=2022-01-01:
    get:
      tags:
        - LoadBalancers
      operationId: LoadBalancers_List
      description: Gets all the load balancers in a resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of LoadBalancer resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadBalancerListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: load_balancers
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/backendAddressPools/?api-version=2022-01-01:
    get:
      tags:
        - LoadBalancers
      operationId: LoadBalancerBackendAddressPools_List
      description: Gets all the load balancer backed address pools.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: loadBalancerName
          in: path
          description: The name of the load balancer.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of LoadBalancer BackendAddressPool resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadBalancerBackendAddressPoolListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: load_balancer_backend_address_pools
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/backendAddressPools/{backendAddressPoolName}/?api-version=2022-01-01:
    get:
      tags:
        - LoadBalancers
      operationId: LoadBalancerBackendAddressPools_Get
      description: Gets load balancer backend address pool.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: loadBalancerName
          in: path
          description: The name of the load balancer.
          required: true
          schema:
            type: string
        - name: backendAddressPoolName
          in: path
          description: The name of the backend address pool.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns LoadBalancer BackendAddressPool resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackendAddressPool'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: load_balancer_backend_address_pools
      x-stackQL-verb: exec
    put:
      tags:
        - LoadBalancers
      operationId: LoadBalancerBackendAddressPools_CreateOrUpdate
      description: Creates or updates a load balancer backend address pool.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: loadBalancerName
          in: path
          description: The name of the load balancer.
          required: true
          schema:
            type: string
        - name: backendAddressPoolName
          in: path
          description: The name of the backend address pool.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update load balancer backend address pool operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackendAddressPool'
      responses:
        '200':
          description: Update successful. The operation returns the resulting BackendAddressPool resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackendAddressPool'
        '201':
          description: Create successful. The operation returns the resulting BackendAddressPool resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackendAddressPool'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: load_balancer_backend_address_pools
      x-stackQL-verb: insert
    delete:
      tags:
        - LoadBalancers
      operationId: LoadBalancerBackendAddressPools_Delete
      description: Deletes the specified load balancer backend address pool.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: loadBalancerName
          in: path
          description: The name of the load balancer.
          required: true
          schema:
            type: string
        - name: backendAddressPoolName
          in: path
          description: The name of the backend address pool.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Request successful. Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: load_balancer_backend_address_pools
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/frontendIPConfigurations/?api-version=2022-01-01:
    get:
      tags:
        - LoadBalancers
      operationId: LoadBalancerFrontendIPConfigurations_List
      description: Gets all the load balancer frontend IP configurations.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: loadBalancerName
          in: path
          description: The name of the load balancer.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of LoadBalancer FrontendIPConfiguration resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadBalancerFrontendIPConfigurationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: load_balancer_frontend_ip_configurations
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/frontendIPConfigurations/{frontendIPConfigurationName}/?api-version=2022-01-01:
    get:
      tags:
        - LoadBalancers
      operationId: LoadBalancerFrontendIPConfigurations_Get
      description: Gets load balancer frontend IP configuration.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: loadBalancerName
          in: path
          description: The name of the load balancer.
          required: true
          schema:
            type: string
        - name: frontendIPConfigurationName
          in: path
          description: The name of the frontend IP configuration.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns LoadBalancer FrontendIPConfiguration resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrontendIPConfiguration'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: load_balancer_frontend_ip_configurations
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/inboundNatRules/?api-version=2022-01-01:
    get:
      tags:
        - LoadBalancers
      operationId: InboundNatRules_List
      description: Gets all the inbound NAT rules in a load balancer.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: loadBalancerName
          in: path
          description: The name of the load balancer.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of LoadBalancer InboundNatRule resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundNatRuleListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: inbound_nat_rules
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/inboundNatRules/{inboundNatRuleName}/?api-version=2022-01-01:
    delete:
      tags:
        - LoadBalancers
      operationId: InboundNatRules_Delete
      description: Deletes the specified load balancer inbound NAT rule.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: loadBalancerName
          in: path
          description: The name of the load balancer.
          required: true
          schema:
            type: string
        - name: inboundNatRuleName
          in: path
          description: The name of the inbound NAT rule.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Request successful. Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: inbound_nat_rules
      x-stackQL-verb: delete
    get:
      tags:
        - LoadBalancers
      operationId: InboundNatRules_Get
      description: Gets the specified load balancer inbound NAT rule.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: loadBalancerName
          in: path
          description: The name of the load balancer.
          required: true
          schema:
            type: string
        - name: inboundNatRuleName
          in: path
          description: The name of the inbound NAT rule.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $expand
          in: query
          description: Expands referenced resources.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request successful. The operation returns the resulting InboundNatRule resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundNatRule'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: inbound_nat_rules
      x-stackQL-verb: exec
    put:
      tags:
        - LoadBalancers
      operationId: InboundNatRules_CreateOrUpdate
      description: Creates or updates a load balancer inbound NAT rule.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: loadBalancerName
          in: path
          description: The name of the load balancer.
          required: true
          schema:
            type: string
        - name: inboundNatRuleName
          in: path
          description: The name of the inbound NAT rule.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update inbound NAT rule operation.
        required: true
        x-ms-requestBody-name: inboundNatRuleParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboundNatRule'
      responses:
        '200':
          description: Update successful. The operation returns the resulting InboundNatRule resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundNatRule'
        '201':
          description: Create successful. The operation returns the resulting InboundNatRule resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundNatRule'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: inbound_nat_rules
      x-stackQL-verb: insert
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/loadBalancingRules/?api-version=2022-01-01:
    get:
      tags:
        - LoadBalancers
      operationId: LoadBalancerLoadBalancingRules_List
      description: Gets all the load balancing rules in a load balancer.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: loadBalancerName
          in: path
          description: The name of the load balancer.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of LoadBalancer LoadBalancingRule resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadBalancerLoadBalancingRuleListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: load_balancer_load_balancing_rules
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/loadBalancingRules/{loadBalancingRuleName}/?api-version=2022-01-01:
    get:
      tags:
        - LoadBalancers
      operationId: LoadBalancerLoadBalancingRules_Get
      description: Gets the specified load balancer load balancing rule.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: loadBalancerName
          in: path
          description: The name of the load balancer.
          required: true
          schema:
            type: string
        - name: loadBalancingRuleName
          in: path
          description: The name of the load balancing rule.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns the resulting LoadBalancingRule resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadBalancingRule'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: load_balancer_load_balancing_rules
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/outboundRules/?api-version=2022-01-01:
    get:
      tags:
        - LoadBalancers
      operationId: LoadBalancerOutboundRules_List
      description: Gets all the outbound rules in a load balancer.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: loadBalancerName
          in: path
          description: The name of the load balancer.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of LoadBalancer OutboundRule resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadBalancerOutboundRuleListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: load_balancer_outbound_rules
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/outboundRules/{outboundRuleName}/?api-version=2022-01-01:
    get:
      tags:
        - LoadBalancers
      operationId: LoadBalancerOutboundRules_Get
      description: Gets the specified load balancer outbound rule.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: loadBalancerName
          in: path
          description: The name of the load balancer.
          required: true
          schema:
            type: string
        - name: outboundRuleName
          in: path
          description: The name of the outbound rule.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns the resulting OutboundRule resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboundRule'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: load_balancer_outbound_rules
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/networkInterfaces/?api-version=2022-01-01:
    get:
      tags:
        - LoadBalancers
      operationId: LoadBalancerNetworkInterfaces_List
      description: Gets associated load balancer network interfaces.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: loadBalancerName
          in: path
          description: The name of the load balancer.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of NetworkInterface resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkInterfaceListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: load_balancer_network_interfaces
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/probes/?api-version=2022-01-01:
    get:
      tags:
        - LoadBalancers
      operationId: LoadBalancerProbes_List
      description: Gets all the load balancer probes.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: loadBalancerName
          in: path
          description: The name of the load balancer.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of LoadBalancer Probe resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadBalancerProbeListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: load_balancer_probes
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/setLoadBalancerFrontendPublicIpAddresses/?api-version=2022-01-01:
    post:
      tags:
        - LoadBalancers
      operationId: LoadBalancers_SwapPublicIpAddresses
      description: Swaps VIPs between two load balancers.
      parameters:
        - name: location
          in: path
          description: The region where load balancers are located at.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters that define which VIPs should be swapped.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoadBalancerVipSwapRequest'
      responses:
        '200':
          description: Request successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: load_balancers
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/backendAddressPools/{backendPoolName}/queryInboundNatRulePortMapping/?api-version=2022-01-01:
    post:
      tags:
        - LoadBalancers
      operationId: LoadBalancers_ListInboundNatRulePortMappings
      description: List of inbound NAT rule port mappings.
      parameters:
        - name: groupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: loadBalancerName
          in: path
          description: The name of the load balancer.
          required: true
          schema:
            type: string
        - name: backendPoolName
          in: path
          description: The name of the load balancer backend address pool.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Query inbound NAT rule port mapping request.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryInboundNatRulePortMappingRequest'
      responses:
        '200':
          description: Successful request for query inbound NAT rule port mapping.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackendAddressInboundNatRulePortMappings'
        '202':
          description: Accepted and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackendAddressInboundNatRulePortMappings'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: load_balancers
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/probes/{probeName}/?api-version=2022-01-01:
    get:
      tags:
        - LoadBalancers
      operationId: LoadBalancerProbes_Get
      description: Gets load balancer probe.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: loadBalancerName
          in: path
          description: The name of the load balancer.
          required: true
          schema:
            type: string
        - name: probeName
          in: path
          description: The name of the probe.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns LoadBalancer Probe resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Probe'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: load_balancer_probes
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/CheckDnsNameAvailability/?api-version=2022-01-01:
    get:
      operationId: CheckDnsNameAvailability
      description: Checks whether a domain name in the cloudapp.azure.com zone is available for use.
      parameters:
        - name: location
          in: path
          description: The location of the domain name.
          required: true
          schema:
            type: string
        - name: domainNameLabel
          in: query
          description: 'The domain name to be verified. It must conform to the following regular expression: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$.'
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. Returns whether the DNS name is available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsNameAvailabilityResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: operations
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/azureWebCategories/{name}/?api-version=2022-01-01:
    get:
      tags:
        - WebCategories
      operationId: WebCategories_Get
      description: Gets the specified Azure Web Category.
      parameters:
        - name: name
          in: path
          description: The name of the azureWebCategory.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $expand
          in: query
          description: Expands resourceIds back referenced by the azureWebCategory resource.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request successful. The operation returns the resulting azureWebCategory resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureWebCategory'
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: web_categories
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/azureWebCategories/?api-version=2022-01-01:
    get:
      tags:
        - WebCategories
      operationId: WebCategories_ListBySubscription
      description: Gets all the Azure Web Categories in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success. The operation returns a list of Azure Web Category resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureWebCategoryListResult'
        default:
          description: Unexpected Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: web_categories
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualWans/{VirtualWANName}/?api-version=2022-01-01:
    get:
      operationId: VirtualWans_Get
      description: Retrieves the details of a VirtualWAN.
      parameters:
        - name: resourceGroupName
          in: path
          description: The resource group name of the VirtualWan.
          required: true
          schema:
            type: string
        - name: VirtualWANName
          in: path
          description: The name of the VirtualWAN being retrieved.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. Returns the details of the VirtualWAN retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualWAN'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: virtual_wans
      x-stackQL-verb: exec
    put:
      operationId: VirtualWans_CreateOrUpdate
      description: Creates a VirtualWAN resource if it doesn't exist else updates the existing VirtualWAN.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VirtualWan.
          required: true
          schema:
            type: string
        - name: VirtualWANName
          in: path
          description: The name of the VirtualWAN being created or updated.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to create or update VirtualWAN.
        required: true
        x-ms-requestBody-name: WANParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualWAN'
      responses:
        '200':
          description: Request successful. Returns the details of the VirtualWAN created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualWAN'
        '201':
          description: Create successful. The operation returns the resulting VirtualWAN resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualWAN'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: virtual_wans
      x-stackQL-verb: insert
    patch:
      tags:
        - VirtualWANs
      operationId: VirtualWans_UpdateTags
      description: Updates a VirtualWAN tags.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VirtualWan.
          required: true
          schema:
            type: string
        - name: VirtualWANName
          in: path
          description: The name of the VirtualWAN being updated.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to Update VirtualWAN tags.
        required: true
        x-ms-requestBody-name: WANParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Request successful. Returns the details of the VirtualWAN updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualWAN'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: virtual_wans
      x-stackQL-verb: exec
    delete:
      operationId: VirtualWans_Delete
      description: Deletes a VirtualWAN.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VirtualWan.
          required: true
          schema:
            type: string
        - name: VirtualWANName
          in: path
          description: The name of the VirtualWAN being deleted.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. VirtualWAN deleted.
        '202':
          description: Request received successfully. VirtualWAN deletion is in progress; follow the Location header to poll for final outcome.
        '204':
          description: No VirtualWANs exist by the name provided.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: virtual_wans
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualWans/?api-version=2022-01-01:
    get:
      operationId: VirtualWans_ListByResourceGroup
      description: Lists all the VirtualWANs in a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VirtualWan.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. Returns the details of all the VirtualWANs in the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVirtualWANsResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: virtual_wans
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/virtualWans/?api-version=2022-01-01:
    get:
      operationId: VirtualWans_List
      description: Lists all the VirtualWANs in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. Returns the details of all the VirtualWANs in the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVirtualWANsResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: virtual_wans
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnSites/{vpnSiteName}/?api-version=2022-01-01:
    get:
      operationId: VpnSites_Get
      description: Retrieves the details of a VPN site.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VpnSite.
          required: true
          schema:
            type: string
        - name: vpnSiteName
          in: path
          description: The name of the VpnSite being retrieved.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. Returns the details of the VpnSite retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnSite'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: vpn_sites
      x-stackQL-verb: exec
    put:
      operationId: VpnSites_CreateOrUpdate
      description: Creates a VpnSite resource if it doesn't exist else updates the existing VpnSite.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VpnSite.
          required: true
          schema:
            type: string
        - name: vpnSiteName
          in: path
          description: The name of the VpnSite being created or updated.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to create or update VpnSite.
        required: true
        x-ms-requestBody-name: VpnSiteParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VpnSite'
      responses:
        '200':
          description: Request successful. Returns the details of the VpnSite created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnSite'
        '201':
          description: Request received successfully. Returns the details of the VpnSite created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnSite'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: vpn_sites
      x-stackQL-verb: insert
    patch:
      tags:
        - VpnSites
      operationId: VpnSites_UpdateTags
      description: Updates VpnSite tags.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VpnSite.
          required: true
          schema:
            type: string
        - name: vpnSiteName
          in: path
          description: The name of the VpnSite being updated.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to update VpnSite tags.
        required: true
        x-ms-requestBody-name: VpnSiteParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Request successful. Returns the details of the VpnSite updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnSite'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: vpn_sites
      x-stackQL-verb: exec
    delete:
      operationId: VpnSites_Delete
      description: Deletes a VpnSite.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VpnSite.
          required: true
          schema:
            type: string
        - name: vpnSiteName
          in: path
          description: The name of the VpnSite being deleted.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. VpnSite deleted.
        '202':
          description: Request received successfully. VpnSite deletion is in progress.
        '204':
          description: No VpnSites exist by the name provided.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: vpn_sites
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnSites/?api-version=2022-01-01:
    get:
      operationId: VpnSites_ListByResourceGroup
      description: Lists all the vpnSites in a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VpnSite.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. Returns the details of all the vpnSites in the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVpnSitesResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: vpn_sites
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnSites/{vpnSiteName}/vpnSiteLinks/{vpnSiteLinkName}/?api-version=2022-01-01:
    get:
      operationId: VpnSiteLinks_Get
      description: Retrieves the details of a VPN site link.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VpnSite.
          required: true
          schema:
            type: string
        - name: vpnSiteName
          in: path
          description: The name of the VpnSite.
          required: true
          schema:
            type: string
        - name: vpnSiteLinkName
          in: path
          description: The name of the VpnSiteLink being retrieved.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. Returns the details of the VpnSiteLink retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnSiteLink'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: vpn_site_links
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnSites/{vpnSiteName}/vpnSiteLinks/?api-version=2022-01-01:
    get:
      operationId: VpnSiteLinks_ListByVpnSite
      description: Lists all the vpnSiteLinks in a resource group for a vpn site.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VpnSite.
          required: true
          schema:
            type: string
        - name: vpnSiteName
          in: path
          description: The name of the VpnSite.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. Returns the details of all the vpnSites in the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVpnSiteLinksResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: vpn_site_links
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/vpnSites/?api-version=2022-01-01:
    get:
      operationId: VpnSites_List
      description: Lists all the VpnSites in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. Returns the details of all the VpnSites in the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVpnSitesResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: vpn_sites
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualWans/{virtualWANName}/vpnConfiguration/?api-version=2022-01-01:
    post:
      operationId: VpnSitesConfiguration_Download
      description: Gives the sas-url to download the configurations for vpn-sites in a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: virtualWANName
          in: path
          description: The name of the VirtualWAN for which configuration of all vpn-sites is needed.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to download vpn-sites configuration.
        required: true
        x-ms-requestBody-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetVpnSitesConfigurationRequest'
      responses:
        '200':
          description: Request successful. Follow the location header for sas-url to output blob.
        '202':
          description: Accepted and the operation will complete asynchronously. Follow the location header for sas-url to output blob.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: vpn_sites_configuration
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualWans/{virtualWANName}/supportedSecurityProviders/?api-version=2022-01-01:
    get:
      operationId: SupportedSecurityProviders
      description: Gives the supported security providers for the virtual wan.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: virtualWANName
          in: path
          description: The name of the VirtualWAN for which supported security providers are needed.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. Returns the object containing supported security providers.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualWanSecurityProviders'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: operations
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnServerConfigurations/{vpnServerConfigurationName}/?api-version=2022-01-01:
    get:
      operationId: VpnServerConfigurations_Get
      description: Retrieves the details of a VpnServerConfiguration.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VpnServerConfiguration.
          required: true
          schema:
            type: string
        - name: vpnServerConfigurationName
          in: path
          description: The name of the VpnServerConfiguration being retrieved.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. Returns the details of the VpnServerConfiguration retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnServerConfiguration'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: vpn_server_configurations
      x-stackQL-verb: exec
    put:
      operationId: VpnServerConfigurations_CreateOrUpdate
      description: Creates a VpnServerConfiguration resource if it doesn't exist else updates the existing VpnServerConfiguration.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VpnServerConfiguration.
          required: true
          schema:
            type: string
        - name: vpnServerConfigurationName
          in: path
          description: The name of the VpnServerConfiguration being created or updated.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to create or update VpnServerConfiguration.
        required: true
        x-ms-requestBody-name: VpnServerConfigurationParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VpnServerConfiguration'
      responses:
        '200':
          description: Request successful. Returns the details of the VpnServerConfiguration created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnServerConfiguration'
        '201':
          description: Request received successfully. Returns the details of the VpnServerConfiguration created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnServerConfiguration'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: vpn_server_configurations
      x-stackQL-verb: insert
    patch:
      tags:
        - VpnServerConfigurations
      operationId: VpnServerConfigurations_UpdateTags
      description: Updates VpnServerConfiguration tags.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VpnServerConfiguration.
          required: true
          schema:
            type: string
        - name: vpnServerConfigurationName
          in: path
          description: The name of the VpnServerConfiguration being updated.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to update VpnServerConfiguration tags.
        required: true
        x-ms-requestBody-name: VpnServerConfigurationParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Request successful. Returns the details of the VpnServerConfiguration updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnServerConfiguration'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: vpn_server_configurations
      x-stackQL-verb: exec
    delete:
      operationId: VpnServerConfigurations_Delete
      description: Deletes a VpnServerConfiguration.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VpnServerConfiguration.
          required: true
          schema:
            type: string
        - name: vpnServerConfigurationName
          in: path
          description: The name of the VpnServerConfiguration being deleted.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. VpnServerConfiguration deleted.
        '202':
          description: Request received successfully. VpnServerConfiguration deletion is in progress.
        '204':
          description: No VpnServerConfigurations exist by the name provided.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: vpn_server_configurations
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnServerConfigurations/?api-version=2022-01-01:
    get:
      operationId: VpnServerConfigurations_ListByResourceGroup
      description: Lists all the vpnServerConfigurations in a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VpnServerConfiguration.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. Returns the details of all the vpnServerConfigurations in the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVpnServerConfigurationsResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: vpn_server_configurations
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnServerConfigurations/{vpnServerConfigurationName}/configurationPolicyGroups/{configurationPolicyGroupName}/?api-version=2022-01-01:
    put:
      operationId: ConfigurationPolicyGroups_CreateOrUpdate
      description: Creates a ConfigurationPolicyGroup if it doesn't exist else updates the existing one.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the ConfigurationPolicyGroup.
          required: true
          schema:
            type: string
        - name: vpnServerConfigurationName
          in: path
          description: The name of the VpnServerConfiguration.
          required: true
          schema:
            type: string
        - name: configurationPolicyGroupName
          in: path
          description: The name of the ConfigurationPolicyGroup.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to create or update a VpnServerConfiguration PolicyGroup.
        required: true
        x-ms-requestBody-name: VpnServerConfigurationPolicyGroupParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VpnServerConfigurationPolicyGroup'
      responses:
        '200':
          description: Request successful. Returns the details of the VpnServerConfiguration PolicyGroup created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnServerConfigurationPolicyGroup'
        '201':
          description: Request successful. Returns the details of the VpnServerConfiguration PolicyGroup retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnServerConfigurationPolicyGroup'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: configuration_policy_groups
      x-stackQL-verb: insert
    delete:
      operationId: ConfigurationPolicyGroups_Delete
      description: Deletes a ConfigurationPolicyGroup.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the ConfigurationPolicyGroup.
          required: true
          schema:
            type: string
        - name: vpnServerConfigurationName
          in: path
          description: The name of the VpnServerConfiguration.
          required: true
          schema:
            type: string
        - name: configurationPolicyGroupName
          in: path
          description: The name of the ConfigurationPolicyGroup.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. ConfigurationPolicyGroup deleted.
        '202':
          description: Request received successfully. ConfigurationPolicyGroup deletion is in progress; follow the Location header to poll for final outcome.
        '204':
          description: No ConfigurationPolicyGroup exist by the name provided.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: configuration_policy_groups
      x-stackQL-verb: delete
    get:
      operationId: ConfigurationPolicyGroups_Get
      description: Retrieves the details of a ConfigurationPolicyGroup.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VpnServerConfiguration.
          required: true
          schema:
            type: string
        - name: vpnServerConfigurationName
          in: path
          description: The name of the VpnServerConfiguration.
          required: true
          schema:
            type: string
        - name: configurationPolicyGroupName
          in: path
          description: The name of the ConfigurationPolicyGroup being retrieved.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. Returns the details of the ConfigurationPolicyGroup retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnServerConfigurationPolicyGroup'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: configuration_policy_groups
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnServerConfigurations/{vpnServerConfigurationName}/configurationPolicyGroups/?api-version=2022-01-01:
    get:
      operationId: configurationPolicyGroups_ListByVpnServerConfiguration
      description: Lists all the configurationPolicyGroups in a resource group for a vpnServerConfiguration.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VpnServerConfiguration.
          required: true
          schema:
            type: string
        - name: vpnServerConfigurationName
          in: path
          description: The name of the VpnServerConfiguration.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. Returns the details of all the VpnServerConfigurations in the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVpnServerConfigurationPolicyGroupsResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: configuration_policy_groups
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/vpnServerConfigurations/?api-version=2022-01-01:
    get:
      operationId: VpnServerConfigurations_List
      description: Lists all the VpnServerConfigurations in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. Returns the details of all the VpnServerConfigurations in the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVpnServerConfigurationsResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: vpn_server_configurations
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/?api-version=2022-01-01:
    get:
      operationId: VirtualHubs_Get
      description: Retrieves the details of a VirtualHub.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VirtualHub.
          required: true
          schema:
            type: string
        - name: virtualHubName
          in: path
          description: The name of the VirtualHub.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. Returns the details of the VirtualHub retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualHub'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: virtual_hubs
      x-stackQL-verb: exec
    put:
      operationId: VirtualHubs_CreateOrUpdate
      description: Creates a VirtualHub resource if it doesn't exist else updates the existing VirtualHub.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VirtualHub.
          required: true
          schema:
            type: string
        - name: virtualHubName
          in: path
          description: The name of the VirtualHub.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to create or update VirtualHub.
        required: true
        x-ms-requestBody-name: virtualHubParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualHub'
      responses:
        '200':
          description: Request successful. Returns the details of the VirtualHub created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualHub'
        '201':
          description: Request received successfully. Returns the details of the VirtualHub created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualHub'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: virtual_hubs
      x-stackQL-verb: insert
    patch:
      tags:
        - VirtualWANs
      operationId: VirtualHubs_UpdateTags
      description: Updates VirtualHub tags.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VirtualHub.
          required: true
          schema:
            type: string
        - name: virtualHubName
          in: path
          description: The name of the VirtualHub.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to update VirtualHub tags.
        required: true
        x-ms-requestBody-name: virtualHubParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Request successful. Returns the details of the VirtualHub updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualHub'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: virtual_hubs
      x-stackQL-verb: exec
    delete:
      operationId: VirtualHubs_Delete
      description: Deletes a VirtualHub.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VirtualHub.
          required: true
          schema:
            type: string
        - name: virtualHubName
          in: path
          description: The name of the VirtualHub.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. VirtualHub deleted.
        '202':
          description: Request received successfully. VirtualHub deletion is in progress; follow the Location header to poll for final outcome.
        '204':
          description: No VirtualHubs exist by the name provided.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: virtual_hubs
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/?api-version=2022-01-01:
    get:
      operationId: VirtualHubs_ListByResourceGroup
      description: Lists all the VirtualHubs in a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VirtualHub.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. Returns the details of all the VirtualHubs in the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVirtualHubsResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: virtual_hubs
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/virtualHubs/?api-version=2022-01-01:
    get:
      operationId: VirtualHubs_List
      description: Lists all the VirtualHubs in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. Returns the details of all the VirtualHubs in the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVirtualHubsResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: virtual_hubs
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/hubVirtualNetworkConnections/{connectionName}/?api-version=2022-01-01:
    put:
      operationId: HubVirtualNetworkConnections_CreateOrUpdate
      description: Creates a hub virtual network connection if it doesn't exist else updates the existing one.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the HubVirtualNetworkConnection.
          required: true
          schema:
            type: string
        - name: virtualHubName
          in: path
          description: The name of the VirtualHub.
          required: true
          schema:
            type: string
        - name: connectionName
          in: path
          description: The name of the HubVirtualNetworkConnection.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to create or update a hub virtual network connection.
        required: true
        x-ms-requestBody-name: hubVirtualNetworkConnectionParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HubVirtualNetworkConnection'
      responses:
        '200':
          description: Request successful. Returns the details of the hub virtual network connection created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubVirtualNetworkConnection'
        '201':
          description: Request successful. Returns the details of the hub virtual network connection retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubVirtualNetworkConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: hub_virtual_network_connections
      x-stackQL-verb: insert
    delete:
      operationId: HubVirtualNetworkConnections_Delete
      description: Deletes a HubVirtualNetworkConnection.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VirtualHub.
          required: true
          schema:
            type: string
        - name: virtualHubName
          in: path
          description: The name of the VirtualHub.
          required: true
          schema:
            type: string
        - name: connectionName
          in: path
          description: The name of the HubVirtualNetworkConnection.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. HubVirtualNetworkConnection deleted.
        '202':
          description: Request received successfully. HubVirtualNetworkConnection deletion is in progress; follow the Location header to poll for final outcome.
        '204':
          description: No HubVirtualNetworkConnection exist by the name provided.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: hub_virtual_network_connections
      x-stackQL-verb: delete
    get:
      operationId: HubVirtualNetworkConnections_Get
      description: Retrieves the details of a HubVirtualNetworkConnection.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VirtualHub.
          required: true
          schema:
            type: string
        - name: virtualHubName
          in: path
          description: The name of the VirtualHub.
          required: true
          schema:
            type: string
        - name: connectionName
          in: path
          description: The name of the vpn connection.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. Returns the details of the HubVirtualNetworkConnection retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubVirtualNetworkConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: hub_virtual_network_connections
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/hubVirtualNetworkConnections/?api-version=2022-01-01:
    get:
      operationId: HubVirtualNetworkConnections_List
      description: Retrieves the details of all HubVirtualNetworkConnections.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VirtualHub.
          required: true
          schema:
            type: string
        - name: virtualHubName
          in: path
          description: The name of the VirtualHub.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. Returns the details of all the HubVirtualNetworkConnections for the VirtualHub.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHubVirtualNetworkConnectionsResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: hub_virtual_network_connections
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/?api-version=2022-01-01:
    get:
      operationId: VpnGateways_Get
      description: Retrieves the details of a virtual wan vpn gateway.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VpnGateway.
          required: true
          schema:
            type: string
        - name: gatewayName
          in: path
          description: The name of the gateway.
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  properties:
                    $ref: '#/components/schemas/VpnGateway'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: vpn_gateways
      x-stackQL-verb: exec
    put:
      operationId: VpnGateways_CreateOrUpdate
      description: Creates a virtual wan vpn gateway if it doesn't exist else updates the existing gateway.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VpnGateway.
          required: true
          schema:
            type: string
        - name: gatewayName
          in: path
          description: The name of the gateway.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to create or Update a virtual wan vpn gateway.
        required: true
        x-ms-requestBody-name: vpnGatewayParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VpnGateway'
      responses:
        '200':
          description: Request successful. Returns the details of the virtual wan vpn Gateway created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnGateway'
        '201':
          description: Request successful. Returns the details of the virtual wan vpn gateway retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnGateway'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: vpn_gateways
      x-stackQL-verb: insert
    patch:
      tags:
        - VpnGateways
      operationId: VpnGateways_UpdateTags
      description: Updates virtual wan vpn gateway tags.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VpnGateway.
          required: true
          schema:
            type: string
        - name: gatewayName
          in: path
          description: The name of the gateway.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to update a virtual wan vpn gateway tags.
        required: true
        x-ms-requestBody-name: vpnGatewayParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Request successful. Returns the details of the updated gateway.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnGateway'
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: vpn_gateways
      x-stackQL-verb: exec
    delete:
      operationId: VpnGateways_Delete
      description: Deletes a virtual wan vpn gateway.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VpnGateway.
          required: true
          schema:
            type: string
        - name: gatewayName
          in: path
          description: The name of the gateway.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. Vpn Gateway deleted.
        '202':
          description: Request received successfully. Vpn Gateway deletion is in progress; follow the Location header to poll for final outcome.
        '204':
          description: No vpn gateways exist by the name provided.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: vpn_gateways
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/reset/?api-version=2022-01-01:
    post:
      tags:
        - VpnGateways
      operationId: VpnGateways_Reset
      description: Resets the primary of the vpn gateway in the specified resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The resource group name of the VpnGateway.
          required: true
          schema:
            type: string
        - name: gatewayName
          in: path
          description: The name of the gateway.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation reset the primary of the VpnGateway.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnGateway'
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: vpn_gateways
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/startpacketcapture/?api-version=2022-01-01:
    post:
      tags:
        - VpnGateways
      operationId: VpnGateways_StartPacketCapture
      description: Starts packet capture on vpn gateway in the specified resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The resource group name of the VpnGateway.
          required: true
          schema:
            type: string
        - name: gatewayName
          in: path
          description: The name of the gateway.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Vpn gateway packet capture parameters supplied to start packet capture on vpn gateway.
        required: false
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VpnGatewayPacketCaptureStartParameters'
      responses:
        '200':
          description: Request successful. The operation packet capture started on vpn gateway.
          content:
            application/json:
              schema:
                type: string
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: vpn_gateways
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/stoppacketcapture/?api-version=2022-01-01:
    post:
      tags:
        - VpnGateways
      operationId: VpnGateways_StopPacketCapture
      description: Stops packet capture on vpn gateway in the specified resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The resource group name of the VpnGateway.
          required: true
          schema:
            type: string
        - name: gatewayName
          in: path
          description: The name of the gateway.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Vpn gateway packet capture parameters supplied to stop packet capture on vpn gateway.
        required: false
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VpnGatewayPacketCaptureStopParameters'
      responses:
        '200':
          description: Request successful. The operation packet capture stopped on vpn gateway.
          content:
            application/json:
              schema:
                type: string
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: vpn_gateways
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/vpnConnections/{connectionName}/vpnLinkConnections/{linkConnectionName}/resetconnection/?api-version=2022-01-01:
    post:
      tags:
        - vpnLinkConnections
      operationId: VpnLinkConnections_ResetConnection
      description: Resets the VpnLink connection specified.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: gatewayName
          in: path
          description: The name of the gateway.
          required: true
          schema:
            type: string
        - name: connectionName
          in: path
          description: The name of the vpn connection.
          required: true
          schema:
            type: string
        - name: linkConnectionName
          in: path
          description: The name of the vpn link connection.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Accepted and the operation ResetConnection will complete asynchronously.
        default:
          description: The operation ResetConnection could not be completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: vpn_link_connections
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/?api-version=2022-01-01:
    get:
      operationId: VpnGateways_ListByResourceGroup
      description: Lists all the VpnGateways in a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VpnGateway.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. Returns the details of all the VpnGateways in the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVpnGatewaysResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: vpn_gateways
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/vpnGateways/?api-version=2022-01-01:
    get:
      operationId: VpnGateways_List
      description: Lists all the VpnGateways in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. Returns the details of all the VpnGateways in the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVpnGatewaysResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: vpn_gateways
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/vpnConnections/{connectionName}/?api-version=2022-01-01:
    get:
      operationId: VpnConnections_Get
      description: Retrieves the details of a vpn connection.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VpnGateway.
          required: true
          schema:
            type: string
        - name: gatewayName
          in: path
          description: The name of the gateway.
          required: true
          schema:
            type: string
        - name: connectionName
          in: path
          description: The name of the vpn connection.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. Returns the details of the vpn connection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: vpn_connections
      x-stackQL-verb: exec
    put:
      operationId: VpnConnections_CreateOrUpdate
      description: Creates a vpn connection to a scalable vpn gateway if it doesn't exist else updates the existing connection.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VpnGateway.
          required: true
          schema:
            type: string
        - name: gatewayName
          in: path
          description: The name of the gateway.
          required: true
          schema:
            type: string
        - name: connectionName
          in: path
          description: The name of the connection.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to create or Update a VPN Connection.
        required: true
        x-ms-requestBody-name: VpnConnectionParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VpnConnection'
      responses:
        '200':
          description: Request successful. Returns the details of the vpn connection created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnConnection'
        '201':
          description: Request successful. Returns the details of the vpn connection created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: vpn_connections
      x-stackQL-verb: insert
    delete:
      operationId: VpnConnections_Delete
      description: Deletes a vpn connection.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VpnGateway.
          required: true
          schema:
            type: string
        - name: gatewayName
          in: path
          description: The name of the gateway.
          required: true
          schema:
            type: string
        - name: connectionName
          in: path
          description: The name of the connection.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. Vpn Connection deleted.
        '202':
          description: Request received successfully. Vpn Connection deletion is in progress; follow the Location header to poll for final outcome.
        '204':
          description: No vpn connections exist by the name provided.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: vpn_connections
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/vpnConnections/{connectionName}/vpnLinkConnections/{linkConnectionName}/?api-version=2022-01-01:
    get:
      operationId: VpnSiteLinkConnections_Get
      description: Retrieves the details of a vpn site link connection.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VpnGateway.
          required: true
          schema:
            type: string
        - name: gatewayName
          in: path
          description: The name of the gateway.
          required: true
          schema:
            type: string
        - name: connectionName
          in: path
          description: The name of the vpn connection.
          required: true
          schema:
            type: string
        - name: linkConnectionName
          in: path
          description: The name of the vpn connection.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. Returns the details of the vpn connection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnSiteLinkConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: vpn_site_link_connections
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/vpnConnections/{connectionName}/vpnLinkConnections/{linkConnectionName}/getikesas/?api-version=2022-01-01:
    post:
      operationId: VpnLinkConnections_GetIkeSas
      description: Lists IKE Security Associations for Vpn Site Link Connection in the specified resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: gatewayName
          in: path
          description: The name of the gateway.
          required: true
          schema:
            type: string
        - name: connectionName
          in: path
          description: The name of the vpn connection.
          required: true
          schema:
            type: string
        - name: linkConnectionName
          in: path
          description: The name of the vpn link connection.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. The operation getikesas completed on vpn site link connection.
          content:
            application/json:
              schema:
                type: string
        '202':
          description: Accepted and the operation GetIkeSas will complete asynchronously.
        default:
          description: The operation GetIkeSas could not be completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: vpn_link_connections
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/vpnConnections/{vpnConnectionName}/startpacketcapture/?api-version=2022-01-01:
    post:
      operationId: VpnConnections_StartPacketCapture
      description: Starts packet capture on Vpn connection in the specified resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: gatewayName
          in: path
          description: The name of the gateway.
          required: true
          schema:
            type: string
        - name: vpnConnectionName
          in: path
          description: The name of the vpn connection.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Vpn Connection packet capture parameters supplied to start packet capture on gateway connection.
        required: false
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VpnConnectionPacketCaptureStartParameters'
      responses:
        '200':
          description: Request successful. The operation packet capture started on vpn connection.
          content:
            application/json:
              schema:
                type: string
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: vpn_connections
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/vpnConnections/{vpnConnectionName}/stoppacketcapture/?api-version=2022-01-01:
    post:
      operationId: VpnConnections_StopPacketCapture
      description: Stops packet capture on Vpn connection in the specified resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: gatewayName
          in: path
          description: The name of the gateway.
          required: true
          schema:
            type: string
        - name: vpnConnectionName
          in: path
          description: The name of the vpn connection.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Vpn Connection packet capture parameters supplied to stop packet capture on gateway connection.
        required: false
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VpnConnectionPacketCaptureStopParameters'
      responses:
        '200':
          description: Request successful. The operation packet capture stopped on vpn connection.
          content:
            application/json:
              schema:
                type: string
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: vpn_connections
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/vpnConnections/?api-version=2022-01-01:
    get:
      operationId: VpnConnections_ListByVpnGateway
      description: Retrieves all vpn connections for a particular virtual wan vpn gateway.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VpnGateway.
          required: true
          schema:
            type: string
        - name: gatewayName
          in: path
          description: The name of the gateway.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. Returns all Vpn connections for a virtual wan vpn gateway.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVpnConnectionsResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: vpn_connections
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/vpnConnections/{connectionName}/vpnLinkConnections/?api-version=2022-01-01:
    get:
      operationId: VpnLinkConnections_ListByVpnConnection
      description: Retrieves all vpn site link connections for a particular virtual wan vpn gateway vpn connection.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the vpn gateway.
          required: true
          schema:
            type: string
        - name: gatewayName
          in: path
          description: The name of the gateway.
          required: true
          schema:
            type: string
        - name: connectionName
          in: path
          description: The name of the vpn connection.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. Returns all Vpn connections for a virtual wan vpn gateway.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVpnSiteLinkConnectionsResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: vpn_link_connections
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/natRules/{natRuleName}/?api-version=2022-01-01:
    get:
      operationId: NatRules_Get
      description: Retrieves the details of a nat ruleGet.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VpnGateway.
          required: true
          schema:
            type: string
        - name: gatewayName
          in: path
          description: The name of the gateway.
          required: true
          schema:
            type: string
        - name: natRuleName
          in: path
          description: The name of the nat rule.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. Returns the details of the nat rule.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnGatewayNatRule'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: nat_rules
      x-stackQL-verb: exec
    put:
      operationId: NatRules_CreateOrUpdate
      description: Creates a nat rule to a scalable vpn gateway if it doesn't exist else updates the existing nat rules.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VpnGateway.
          required: true
          schema:
            type: string
        - name: gatewayName
          in: path
          description: The name of the gateway.
          required: true
          schema:
            type: string
        - name: natRuleName
          in: path
          description: The name of the nat rule.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to create or Update a Nat Rule.
        required: true
        x-ms-requestBody-name: NatRuleParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VpnGatewayNatRule'
      responses:
        '200':
          description: Request successful. Returns the details of the nat rule created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnGatewayNatRule'
        '201':
          description: Request successful. Returns the details of the nat rule created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnGatewayNatRule'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: nat_rules
      x-stackQL-verb: insert
    delete:
      operationId: NatRules_Delete
      description: Deletes a nat rule.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VpnGateway.
          required: true
          schema:
            type: string
        - name: gatewayName
          in: path
          description: The name of the gateway.
          required: true
          schema:
            type: string
        - name: natRuleName
          in: path
          description: The name of the nat rule.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. Nat Rule deleted.
        '202':
          description: Request received successfully. Nat Rule deletion is in progress; follow the Location header to poll for final outcome.
        '204':
          description: No nat rules exist by the name provided.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: nat_rules
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/natRules/?api-version=2022-01-01:
    get:
      operationId: NatRules_ListByVpnGateway
      description: Retrieves all nat rules for a particular virtual wan vpn gateway.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VpnGateway.
          required: true
          schema:
            type: string
        - name: gatewayName
          in: path
          description: The name of the gateway.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. Returns all Nat rules for a virtual wan vpn gateway.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVpnGatewayNatRulesResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: nat_rules
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/p2svpnGateways/{gatewayName}/?api-version=2022-01-01:
    get:
      operationId: P2sVpnGateways_Get
      description: Retrieves the details of a virtual wan p2s vpn gateway.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the P2SVpnGateway.
          required: true
          schema:
            type: string
        - name: gatewayName
          in: path
          description: The name of the gateway.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. Returns the details of the virtual wan p2s vpn gateway retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P2SVpnGateway'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: p2s_vpn_gateways
      x-stackQL-verb: exec
    put:
      operationId: P2sVpnGateways_CreateOrUpdate
      description: Creates a virtual wan p2s vpn gateway if it doesn't exist else updates the existing gateway.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the P2SVpnGateway.
          required: true
          schema:
            type: string
        - name: gatewayName
          in: path
          description: The name of the gateway.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to create or Update a virtual wan p2s vpn gateway.
        required: true
        x-ms-requestBody-name: p2SVpnGatewayParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/P2SVpnGateway'
      responses:
        '200':
          description: Request successful. Returns the details of the virtual wan p2s vpn Gateway created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P2SVpnGateway'
        '201':
          description: Request successful. Returns the details of the virtual wan p2s vpn gateway retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P2SVpnGateway'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: p2s_vpn_gateways
      x-stackQL-verb: insert
    patch:
      tags:
        - P2SVpnGateways
      operationId: P2sVpnGateways_UpdateTags
      description: Updates virtual wan p2s vpn gateway tags.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the P2SVpnGateway.
          required: true
          schema:
            type: string
        - name: gatewayName
          in: path
          description: The name of the gateway.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to update a virtual wan p2s vpn gateway tags.
        required: true
        x-ms-requestBody-name: p2SVpnGatewayParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Request successful. Returns the details of the updated gateway.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P2SVpnGateway'
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: p2s_vpn_gateways
      x-stackQL-verb: exec
    delete:
      operationId: P2sVpnGateways_Delete
      description: Deletes a virtual wan p2s vpn gateway.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the P2SVpnGateway.
          required: true
          schema:
            type: string
        - name: gatewayName
          in: path
          description: The name of the gateway.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. P2SVpnGateway deleted.
        '202':
          description: Request received successfully. P2SVpnGateway deletion is in progress; follow the Location header to poll for final outcome.
        '204':
          description: No p2s vpn gateways exist by the name provided.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: p2s_vpn_gateways
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/p2svpnGateways/?api-version=2022-01-01:
    get:
      operationId: P2sVpnGateways_ListByResourceGroup
      description: Lists all the P2SVpnGateways in a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the P2SVpnGateway.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. Returns the details of all the P2SVpnGateways in the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListP2SVpnGatewaysResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: p2s_vpn_gateways
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/p2svpnGateways/?api-version=2022-01-01:
    get:
      operationId: P2sVpnGateways_List
      description: Lists all the P2SVpnGateways in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. Returns the details of all the P2SVpnGateways in the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListP2SVpnGatewaysResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: p2s_vpn_gateways
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/p2svpnGateways/{gatewayName}/reset/?api-version=2022-01-01:
    post:
      tags:
        - P2SVpnGateways
      operationId: P2SVpnGateways_Reset
      description: Resets the primary of the p2s vpn gateway in the specified resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The resource group name of the P2SVpnGateway.
          required: true
          schema:
            type: string
        - name: gatewayName
          in: path
          description: The name of the gateway.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation reset the primary of the P2SVpnGateway.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P2SVpnGateway'
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: p2_s_vpn_gateways
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/p2svpnGateways/{gatewayName}/generatevpnprofile/?api-version=2022-01-01:
    post:
      tags:
        - P2SVpnGateways
      operationId: P2sVpnGateways_GenerateVpnProfile
      description: Generates VPN profile for P2S client of the P2SVpnGateway in the specified resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: gatewayName
          in: path
          description: The name of the P2SVpnGateway.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the generate P2SVpnGateway VPN client package operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/P2SVpnProfileParameters'
      responses:
        '200':
          description: VPN profile package URL.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnProfileResponse'
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: p2s_vpn_gateways
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/p2svpnGateways/{gatewayName}/getP2sVpnConnectionHealth/?api-version=2022-01-01:
    post:
      tags:
        - P2SVpnGateways
      operationId: P2sVpnGateways_GetP2sVpnConnectionHealth
      description: Gets the connection health of P2S clients of the virtual wan P2SVpnGateway in the specified resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: gatewayName
          in: path
          description: The name of the P2SVpnGateway.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: P2S Vpn Gateway with P2S connection health details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P2SVpnGateway'
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: p2s_vpn_gateways
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/p2svpnGateways/{gatewayName}/getP2sVpnConnectionHealthDetailed/?api-version=2022-01-01:
    post:
      tags:
        - P2SVpnGateways
      operationId: P2sVpnGateways_GetP2sVpnConnectionHealthDetailed
      description: Gets the sas url to get the connection health detail of P2S clients of the virtual wan P2SVpnGateway in the specified resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: gatewayName
          in: path
          description: The name of the P2SVpnGateway.
          required: true
          schema:
            type: string
      requestBody:
        description: Request parameters supplied to get p2s vpn connections detailed health.
        required: true
        x-ms-requestBody-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/P2SVpnConnectionHealthRequest'
      responses:
        '200':
          description: P2S connections detailed health report.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P2SVpnConnectionHealth'
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: p2s_vpn_gateways
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualWans/{virtualWANName}/vpnServerConfigurations/?api-version=2022-01-01:
    post:
      operationId: VpnServerConfigurationsAssociatedWithVirtualWan_List
      description: Gives the list of VpnServerConfigurations associated with Virtual Wan in a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: virtualWANName
          in: path
          description: The name of the VirtualWAN whose associated VpnServerConfigurations is needed.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of associated VpnServerConfigurations list.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnServerConfigurationsResponse'
        '202':
          description: Accepted and the operation will complete asynchronously. Follow the location header for list of associated VpnServerConfigurations list.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: vpn_server_configurations_associated_with_virtual_wan
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualWans/{virtualWANName}/GenerateVpnProfile/?api-version=2022-01-01:
    post:
      operationId: generatevirtualwanvpnserverconfigurationvpnprofile
      description: Generates a unique VPN profile for P2S clients for VirtualWan and associated VpnServerConfiguration combination in the specified resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: virtualWANName
          in: path
          description: The name of the VirtualWAN whose associated VpnServerConfigurations is needed.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to the generate VirtualWan VPN profile generation operation.
        required: true
        x-ms-requestBody-name: vpnClientParams
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualWanVpnProfileParameters'
      responses:
        '200':
          description: VPN profile package URL.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnProfileResponse'
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: operations
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/routeTables/{routeTableName}/?api-version=2022-01-01:
    get:
      operationId: VirtualHubRouteTableV2s_Get
      description: Retrieves the details of a VirtualHubRouteTableV2.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VirtualHubRouteTableV2.
          required: true
          schema:
            type: string
        - name: virtualHubName
          in: path
          description: The name of the VirtualHub.
          required: true
          schema:
            type: string
        - name: routeTableName
          in: path
          description: The name of the VirtualHubRouteTableV2.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. Returns the details of the VirtualHubRouteTableV2 retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualHubRouteTableV2'
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-stackQL-resource: virtual_hub_route_table_v2s
      x-stackQL-verb: exec
    put:
      operationId: VirtualHubRouteTableV2s_CreateOrUpdate
      description: Creates a VirtualHubRouteTableV2 resource if it doesn't exist else updates the existing VirtualHubRouteTableV2.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VirtualHub.
          required: true
          schema:
            type: string
        - name: virtualHubName
          in: path
          description: The name of the VirtualHub.
          required: true
          schema:
            type: string
        - name: routeTableName
          in: path
          description: The name of the VirtualHubRouteTableV2.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to create or update VirtualHubRouteTableV2.
        required: true
        x-ms-requestBody-name: virtualHubRouteTableV2Parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualHubRouteTableV2'
      responses:
        '200':
          description: Request successful. Returns the details of the VirtualHubRouteTableV2 created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualHubRouteTableV2'
        '201':
          description: Request received successfully. Returns the details of the VirtualHubRouteTableV2 created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualHubRouteTableV2'
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: virtual_hub_route_table_v2s
      x-stackQL-verb: insert
    delete:
      operationId: VirtualHubRouteTableV2s_Delete
      description: Deletes a VirtualHubRouteTableV2.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VirtualHubRouteTableV2.
          required: true
          schema:
            type: string
        - name: virtualHubName
          in: path
          description: The name of the VirtualHub.
          required: true
          schema:
            type: string
        - name: routeTableName
          in: path
          description: The name of the VirtualHubRouteTableV2.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. VirtualHubRouteTableV2 deleted.
        '202':
          description: Request received successfully. VirtualHubRouteTableV2 deletion is in progress; follow the Location header to poll for final outcome.
        '204':
          description: No VirtualHubRouteTableV2s exist by the name provided.
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: virtual_hub_route_table_v2s
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/routeTables/?api-version=2022-01-01:
    get:
      operationId: VirtualHubRouteTableV2s_List
      description: Retrieves the details of all VirtualHubRouteTableV2s.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VirtualHub.
          required: true
          schema:
            type: string
        - name: virtualHubName
          in: path
          description: The name of the VirtualHub.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. Returns the details of all the VirtualHubRouteTableV2s for the VirtualHub.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVirtualHubRouteTableV2sResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: virtual_hub_route_table_v2s
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/p2svpnGateways/{p2sVpnGatewayName}/disconnectP2sVpnConnections/?api-version=2022-01-01:
    post:
      tags:
        - P2SVpnGateways
      operationId: P2sVpnGateways_DisconnectP2sVpnConnections
      description: Disconnect P2S vpn connections of the virtual wan P2SVpnGateway in the specified resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: p2sVpnGatewayName
          in: path
          description: The name of the P2S Vpn Gateway.
          required: true
          schema:
            type: string
      requestBody:
        description: The parameters are supplied to disconnect p2s vpn connections.
        required: true
        x-ms-requestBody-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/P2SVpnConnectionRequest'
      responses:
        '200':
          description: Request successful. The operation disconnects the requested vpn connections.
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: p2s_vpn_gateways
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/expressRouteGateways/?api-version=2022-01-01:
    get:
      tags:
        - ExpressRouteGateways
      operationId: ExpressRouteGateways_ListBySubscription
      description: Lists ExpressRoute gateways under a given subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteGatewayList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: express_route_gateways
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/?api-version=2022-01-01:
    get:
      tags:
        - ExpressRouteGateways
      operationId: ExpressRouteGateways_ListByResourceGroup
      description: Lists ExpressRoute gateways in a given resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Operation successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteGatewayList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: express_route_gateways
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}/?api-version=2022-01-01:
    put:
      tags:
        - ExpressRouteGateways
      operationId: ExpressRouteGateways_CreateOrUpdate
      description: Creates or updates a ExpressRoute gateway in a specified resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: expressRouteGatewayName
          in: path
          description: The name of the ExpressRoute gateway.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters required in an ExpressRoute gateway PUT operation.
        required: true
        x-ms-requestBody-name: putExpressRouteGatewayParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpressRouteGateway'
      responses:
        '200':
          description: Update successful. The operation returns the resulting ExpressRoute gateway resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteGateway'
        '201':
          description: Create successful. The operation returns the resulting ExpressRoute gateway resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteGateway'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: express_route_gateways
      x-stackQL-verb: insert
    patch:
      tags:
        - ExpressRouteGateways
      operationId: ExpressRouteGateways_UpdateTags
      description: Updates express route gateway tags.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the ExpressRouteGateway.
          required: true
          schema:
            type: string
        - name: expressRouteGatewayName
          in: path
          description: The name of the gateway.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to update a virtual wan express route gateway tags.
        required: true
        x-ms-requestBody-name: expressRouteGatewayParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Request successful. Returns the details of the updated gateway.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteGateway'
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: express_route_gateways
      x-stackQL-verb: exec
    get:
      tags:
        - ExpressRouteGateways
      operationId: ExpressRouteGateways_Get
      description: Fetches the details of a ExpressRoute gateway in a resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: expressRouteGatewayName
          in: path
          description: The name of the ExpressRoute gateway.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Operation succeeded. The operation returns the ExpressRoute gateway.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteGateway'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: express_route_gateways
      x-stackQL-verb: exec
    delete:
      tags:
        - ExpressRouteGateways
      operationId: ExpressRouteGateways_Delete
      description: Deletes the specified ExpressRoute gateway in a resource group. An ExpressRoute gateway resource can only be deleted when there are no connection subresources.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: expressRouteGatewayName
          in: path
          description: The name of the ExpressRoute gateway.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Delete successful.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: express_route_gateways
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}/expressRouteConnections/{connectionName}/?api-version=2022-01-01:
    put:
      tags:
        - ExpressRouteConnections
      operationId: ExpressRouteConnections_CreateOrUpdate
      description: Creates a connection between an ExpressRoute gateway and an ExpressRoute circuit.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: expressRouteGatewayName
          in: path
          description: The name of the ExpressRoute gateway.
          required: true
          schema:
            type: string
        - name: connectionName
          in: path
          description: The name of the connection subresource.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters required in an ExpressRouteConnection PUT operation.
        required: true
        x-ms-requestBody-name: putExpressRouteConnectionParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpressRouteConnection'
      responses:
        '200':
          description: Update successful. The operation returns the ExpressRouteConnection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteConnection'
        '201':
          description: Create successful. The operation returns the ExpressRouteConnection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: express_route_connections
      x-stackQL-verb: insert
    get:
      tags:
        - ExpressRouteConnections
      operationId: ExpressRouteConnections_Get
      description: Gets the specified ExpressRouteConnection.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: expressRouteGatewayName
          in: path
          description: The name of the ExpressRoute gateway.
          required: true
          schema:
            type: string
        - name: connectionName
          in: path
          description: The name of the ExpressRoute connection.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns the ExpressRouteConnection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: express_route_connections
      x-stackQL-verb: exec
    delete:
      tags:
        - ExpressRouteConnections
      operationId: ExpressRouteConnections_Delete
      description: Deletes a connection to a ExpressRoute circuit.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: expressRouteGatewayName
          in: path
          description: The name of the ExpressRoute gateway.
          required: true
          schema:
            type: string
        - name: connectionName
          in: path
          description: The name of the connection subresource.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted, and the operation will continue asynchronously.
        '204':
          description: Delete successful.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: express_route_connections
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}/expressRouteConnections/?api-version=2022-01-01:
    get:
      tags:
        - ExpressRouteConnections
      operationId: ExpressRouteConnections_List
      description: Lists ExpressRouteConnections.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: expressRouteGatewayName
          in: path
          description: The name of the ExpressRoute gateway.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteConnectionList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: express_route_connections
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/bgpConnections/{connectionName}/?api-version=2022-01-01:
    get:
      operationId: VirtualHubBgpConnection_Get
      description: Retrieves the details of a Virtual Hub Bgp Connection.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VirtualHub.
          required: true
          schema:
            type: string
        - name: virtualHubName
          in: path
          description: The name of the VirtualHub.
          required: true
          schema:
            type: string
        - name: connectionName
          in: path
          description: The name of the connection.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. Returns the details of the Bgp Connection retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BgpConnection'
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: virtual_hub_bgp_connection
      x-stackQL-verb: exec
    put:
      operationId: VirtualHubBgpConnection_CreateOrUpdate
      description: Creates a VirtualHubBgpConnection resource if it doesn't exist else updates the existing VirtualHubBgpConnection.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VirtualHub.
          required: true
          schema:
            type: string
        - name: virtualHubName
          in: path
          description: The name of the VirtualHub.
          required: true
          schema:
            type: string
        - name: connectionName
          in: path
          description: The name of the connection.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters of Bgp connection.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BgpConnection'
      responses:
        '200':
          description: Request successful. Returns the details of the BgpConnection created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BgpConnection'
        '201':
          description: Request received successfully. Returns the details of the BgpConnection created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BgpConnection'
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: virtual_hub_bgp_connection
      x-stackQL-verb: insert
    delete:
      operationId: VirtualHubBgpConnection_Delete
      description: Deletes a VirtualHubBgpConnection.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VirtualHubBgpConnection.
          required: true
          schema:
            type: string
        - name: virtualHubName
          in: path
          description: The name of the VirtualHub.
          required: true
          schema:
            type: string
        - name: connectionName
          in: path
          description: The name of the connection.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. VirtualHubBgpConnection deleted.
        '202':
          description: Request received successfully. VirtualHubBgpConnection deletion is in progress; follow the Location header to poll for final outcome.
        '204':
          description: No VirtualHubBgpConnection exist by the name provided.
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: virtual_hub_bgp_connection
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/bgpConnections/?api-version=2022-01-01:
    get:
      operationId: VirtualHubBgpConnections_List
      description: Retrieves the details of all VirtualHubBgpConnections.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VirtualHub.
          required: true
          schema:
            type: string
        - name: virtualHubName
          in: path
          description: The name of the VirtualHub.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. Returns the details of all the VirtualHubBgpConnections for the VirtualHub.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVirtualHubBgpConnectionResults'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: virtual_hub_bgp_connections
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{hubName}/bgpConnections/{connectionName}/learnedRoutes/?api-version=2022-01-01:
    post:
      operationId: VirtualHubBgpConnections_ListLearnedRoutes
      description: Retrieves a list of routes the virtual hub bgp connection has learned.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the virtual hub.
          required: true
          schema:
            type: string
        - name: connectionName
          in: path
          description: The name of the virtual hub bgp connection.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: List of advertised BGP routes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeerRouteList'
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: virtual_hub_bgp_connections
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{hubName}/bgpConnections/{connectionName}/advertisedRoutes/?api-version=2022-01-01:
    post:
      operationId: VirtualHubBgpConnections_ListAdvertisedRoutes
      description: Retrieves a list of routes the virtual hub bgp connection is advertising to the specified peer.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hubName
          in: path
          description: The name of the virtual hub.
          required: true
          schema:
            type: string
        - name: connectionName
          in: path
          description: The name of the virtual hub bgp connection.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: List of learned BGP routes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeerRouteList'
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: virtual_hub_bgp_connections
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/ipConfigurations/{ipConfigName}/?api-version=2022-01-01:
    get:
      operationId: VirtualHubIpConfiguration_Get
      description: Retrieves the details of a Virtual Hub Ip configuration.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VirtualHub.
          required: true
          schema:
            type: string
        - name: virtualHubName
          in: path
          description: The name of the VirtualHub.
          required: true
          schema:
            type: string
        - name: ipConfigName
          in: path
          description: The name of the ipconfig.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. Returns the details of the Bgp Connection retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubIpConfiguration'
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: virtual_hub_ip_configuration
      x-stackQL-verb: exec
    put:
      operationId: VirtualHubIpConfiguration_CreateOrUpdate
      description: Creates a VirtualHubIpConfiguration resource if it doesn't exist else updates the existing VirtualHubIpConfiguration.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VirtualHub.
          required: true
          schema:
            type: string
        - name: virtualHubName
          in: path
          description: The name of the VirtualHub.
          required: true
          schema:
            type: string
        - name: ipConfigName
          in: path
          description: The name of the ipconfig.
          required: true
          schema:
            type: string
      requestBody:
        description: Hub Ip Configuration parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HubIpConfiguration'
      responses:
        '200':
          description: Request successful. Returns the details of the IpConfiguration created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubIpConfiguration'
        '201':
          description: Request received successfully. Returns the details of the IpConfiguration created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubIpConfiguration'
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: virtual_hub_ip_configuration
      x-stackQL-verb: insert
    delete:
      operationId: VirtualHubIpConfiguration_Delete
      description: Deletes a VirtualHubIpConfiguration.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VirtualHubBgpConnection.
          required: true
          schema:
            type: string
        - name: virtualHubName
          in: path
          description: The name of the VirtualHub.
          required: true
          schema:
            type: string
        - name: ipConfigName
          in: path
          description: The name of the ipconfig.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. VirtualHubIpConfiguration deleted.
        '202':
          description: Request received successfully. VirtualHubIpConfiguration deletion is in progress; follow the Location header to poll for final outcome.
        '204':
          description: No VirtualHubIpConfiguration exist by the name provided.
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: virtual_hub_ip_configuration
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/ipConfigurations/?api-version=2022-01-01:
    get:
      operationId: VirtualHubIpConfiguration_List
      description: Retrieves the details of all VirtualHubIpConfigurations.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VirtualHub.
          required: true
          schema:
            type: string
        - name: virtualHubName
          in: path
          description: The name of the VirtualHub.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. Returns the details of all the VirtualHubIpConfigurations for the VirtualHub.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVirtualHubIpConfigurationResults'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: virtual_hub_ip_configuration
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/hubRouteTables/{routeTableName}/?api-version=2022-01-01:
    put:
      operationId: HubRouteTables_CreateOrUpdate
      description: Creates a RouteTable resource if it doesn't exist else updates the existing RouteTable.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VirtualHub.
          required: true
          schema:
            type: string
        - name: virtualHubName
          in: path
          description: The name of the VirtualHub.
          required: true
          schema:
            type: string
        - name: routeTableName
          in: path
          description: The name of the RouteTable.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to create or update RouteTable.
        required: true
        x-ms-requestBody-name: routeTableParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HubRouteTable'
      responses:
        '200':
          description: Request successful. Returns the details of the RouteTable created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubRouteTable'
        '201':
          description: Request received successfully. Returns the details of the RouteTable created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubRouteTable'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: hub_route_tables
      x-stackQL-verb: insert
    get:
      operationId: HubRouteTables_Get
      description: Retrieves the details of a RouteTable.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VirtualHub.
          required: true
          schema:
            type: string
        - name: virtualHubName
          in: path
          description: The name of the VirtualHub.
          required: true
          schema:
            type: string
        - name: routeTableName
          in: path
          description: The name of the RouteTable.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. Returns the details of the RouteTable retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubRouteTable'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: hub_route_tables
      x-stackQL-verb: exec
    delete:
      operationId: HubRouteTables_Delete
      description: Deletes a RouteTable.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the RouteTable.
          required: true
          schema:
            type: string
        - name: virtualHubName
          in: path
          description: The name of the VirtualHub.
          required: true
          schema:
            type: string
        - name: routeTableName
          in: path
          description: The name of the RouteTable.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. RouteTable deleted.
        '202':
          description: Request received successfully. RouteTable deletion is in progress; follow the Location header to poll for final outcome.
        '204':
          description: No RouteTables exist by the name provided.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: hub_route_tables
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/hubRouteTables/?api-version=2022-01-01:
    get:
      operationId: HubRouteTables_List
      description: Retrieves the details of all RouteTables.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VirtualHub.
          required: true
          schema:
            type: string
        - name: virtualHubName
          in: path
          description: The name of the VirtualHub.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. Returns the details of all the RouteTables for the VirtualHub.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHubRouteTablesResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: hub_route_tables
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/effectiveRoutes/?api-version=2022-01-01:
    post:
      operationId: VirtualHubs_GetEffectiveVirtualHubRoutes
      description: Gets the effective routes configured for the Virtual Hub resource or the specified resource .
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VirtualHub.
          required: true
          schema:
            type: string
        - name: virtualHubName
          in: path
          description: The name of the VirtualHub.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to get the effective routes for a specific resource.
        required: false
        x-ms-requestBody-name: effectiveRoutesParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EffectiveRoutesParameters'
      responses:
        '200':
          description: Request successful. Follow the location header for the effective routes list.
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: virtual_hubs
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/routingIntent/{routingIntentName}/?api-version=2022-01-01:
    put:
      operationId: RoutingIntent_CreateOrUpdate
      description: Creates a RoutingIntent resource if it doesn't exist else updates the existing RoutingIntent.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the RoutingIntent.
          required: true
          schema:
            type: string
        - name: virtualHubName
          in: path
          description: The name of the VirtualHub.
          required: true
          schema:
            type: string
        - name: routingIntentName
          in: path
          description: The name of the per VirtualHub singleton Routing Intent resource.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to create or update RoutingIntent.
        required: true
        x-ms-requestBody-name: routingIntentParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingIntent'
      responses:
        '200':
          description: Request successful. Returns the details of the RoutingIntent created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingIntent'
        '201':
          description: Request received successfully. Returns the details of the RoutingIntent created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingIntent'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: routing_intent
      x-stackQL-verb: insert
    get:
      operationId: RoutingIntent_Get
      description: Retrieves the details of a RoutingIntent.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the RoutingIntent.
          required: true
          schema:
            type: string
        - name: virtualHubName
          in: path
          description: The name of the VirtualHub.
          required: true
          schema:
            type: string
        - name: routingIntentName
          in: path
          description: The name of the RoutingIntent.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. Returns the details of the RoutingIntent retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingIntent'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: routing_intent
      x-stackQL-verb: exec
    delete:
      operationId: RoutingIntent_Delete
      description: Deletes a RoutingIntent.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the RoutingIntent.
          required: true
          schema:
            type: string
        - name: virtualHubName
          in: path
          description: The name of the VirtualHub.
          required: true
          schema:
            type: string
        - name: routingIntentName
          in: path
          description: The name of the RoutingIntent.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. RoutingIntent deleted.
        '202':
          description: Request received successfully. RoutingIntent deletion is in progress; follow the Location header to poll for final outcome.
        '204':
          description: No RoutingIntent exists by the name provided.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: routing_intent
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/routingIntent/?api-version=2022-01-01:
    get:
      operationId: RoutingIntent_List
      description: Retrieves the details of all RoutingIntent child resources of the VirtualHub.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the VirtualHub.
          required: true
          schema:
            type: string
        - name: virtualHubName
          in: path
          description: The name of the VirtualHub.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. Returns the details of all the RoutingIntent resources for the VirtualHub.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRoutingIntentResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: routing_intent
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ddosProtectionPlans/{ddosProtectionPlanName}/?api-version=2022-01-01:
    delete:
      tags:
        - DdosProtectionPlans
      operationId: DdosProtectionPlans_Delete
      description: Deletes the specified DDoS protection plan.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: ddosProtectionPlanName
          in: path
          description: The name of the DDoS protection plan.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Request successful. Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: ddos_protection_plans
      x-stackQL-verb: delete
    get:
      tags:
        - DdosProtectionPlans
      operationId: DdosProtectionPlans_Get
      description: Gets information about the specified DDoS protection plan.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: ddosProtectionPlanName
          in: path
          description: The name of the DDoS protection plan.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns the specified DDoS protection plan resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DdosProtectionPlan'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: ddos_protection_plans
      x-stackQL-verb: exec
    put:
      tags:
        - DdosProtectionPlans
      operationId: DdosProtectionPlans_CreateOrUpdate
      description: Creates or updates a DDoS protection plan.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: ddosProtectionPlanName
          in: path
          description: The name of the DDoS protection plan.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DdosProtectionPlan'
      responses:
        '200':
          description: Update successful. The operation returns the resulting DDoS protection plan resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DdosProtectionPlan'
        '201':
          description: Create successful. The operation returns the resulting DDoS protection plan resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DdosProtectionPlan'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: ddos_protection_plans
      x-stackQL-verb: insert
    patch:
      tags:
        - DdosProtectionPlans
      operationId: DdosProtectionPlans_UpdateTags
      description: Update a DDoS protection plan tags.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: ddosProtectionPlanName
          in: path
          description: The name of the DDoS protection plan.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the update DDoS protection plan resource tags.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Update successful. The operation returns the resulting DDoS protection plan resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DdosProtectionPlan'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: ddos_protection_plans
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/ddosProtectionPlans/?api-version=2022-01-01:
    get:
      tags:
        - DdosProtectionPlans
      operationId: DdosProtectionPlans_List
      description: Gets all DDoS protection plans in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of DDoS protection plan resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DdosProtectionPlanListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: ddos_protection_plans
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ddosProtectionPlans/?api-version=2022-01-01:
    get:
      tags:
        - DdosProtectionPlans
      operationId: DdosProtectionPlans_ListByResourceGroup
      description: Gets all the DDoS protection plans in a resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of DDoS protection plan resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DdosProtectionPlanListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: ddos_protection_plans
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/roleInstances/{roleInstanceName}/networkInterfaces/?api-version=2022-01-01:
    get:
      tags:
        - NetworkInterfaces
      operationId: NetworkInterfaces_ListCloudServiceRoleInstanceNetworkInterfaces
      description: Gets information about all network interfaces in a role instance in a cloud service.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: cloudServiceName
          in: path
          description: The name of the cloud service.
          required: true
          schema:
            type: string
        - name: roleInstanceName
          in: path
          description: The name of role instance.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionVmssParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of NetworkInterface resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkInterfaceListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: interfaces
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/networkInterfaces/?api-version=2022-01-01:
    get:
      tags:
        - NetworkInterfaces
      operationId: NetworkInterfaces_ListCloudServiceNetworkInterfaces
      description: Gets all network interfaces in a cloud service.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: cloudServiceName
          in: path
          description: The name of the cloud service.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionVmssParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of NetworkInterface resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkInterfaceListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: interfaces
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/roleInstances/{roleInstanceName}/networkInterfaces/{networkInterfaceName}/?api-version=2022-01-01:
    get:
      tags:
        - NetworkInterfaces
      operationId: NetworkInterfaces_GetCloudServiceNetworkInterface
      description: Get the specified network interface in a cloud service.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: cloudServiceName
          in: path
          description: The name of the cloud service.
          required: true
          schema:
            type: string
        - name: roleInstanceName
          in: path
          description: The name of role instance.
          required: true
          schema:
            type: string
        - name: networkInterfaceName
          in: path
          description: The name of the network interface.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionVmssParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $expand
          in: query
          description: Expands referenced resources.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request successful. The operation returns the resulting NetworkInterface resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkInterface'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: interfaces
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/customIpPrefixes/{customIpPrefixName}/?api-version=2022-01-01:
    delete:
      tags:
        - CustomIpPrefixes
      operationId: CustomIPPrefixes_Delete
      description: Deletes the specified custom IP prefix.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: customIpPrefixName
          in: path
          description: The name of the CustomIpPrefix.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Request successful. Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: custom_ip_prefixes
      x-stackQL-verb: delete
    get:
      tags:
        - CustomIpPrefixes
      operationId: CustomIPPrefixes_Get
      description: Gets the specified custom IP prefix in a specified resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: customIpPrefixName
          in: path
          description: The name of the custom IP prefix.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $expand
          in: query
          description: Expands referenced resources.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request successful. The operation returns the resulting CustomIpPrefix resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomIpPrefix'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: custom_ip_prefixes
      x-stackQL-verb: exec
    put:
      tags:
        - CustomIpPrefixes
      operationId: CustomIPPrefixes_CreateOrUpdate
      description: Creates or updates a custom IP prefix.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: customIpPrefixName
          in: path
          description: The name of the custom IP prefix.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update custom IP prefix operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomIpPrefix'
      responses:
        '200':
          description: Update successful. The operation returns the resulting CustomIpPrefix resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomIpPrefix'
        '201':
          description: Create successful. The operation returns the resulting CustomIpPrefix resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomIpPrefix'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: custom_ip_prefixes
      x-stackQL-verb: insert
    patch:
      tags:
        - CustomIpPrefixes
      operationId: CustomIPPrefixes_UpdateTags
      description: Updates custom IP prefix tags.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: customIpPrefixName
          in: path
          description: The name of the custom IP prefix.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to update custom IP prefix tags.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Update successful. The operation returns the resulting customIpPrefix resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomIpPrefix'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: custom_ip_prefixes
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/customIpPrefixes/?api-version=2022-01-01:
    get:
      tags:
        - CustomIpPrefixes
      operationId: CustomIPPrefixes_ListAll
      description: Gets all the custom IP prefixes in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of CustomIpPrefix resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomIpPrefixListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: custom_ip_prefixes
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/customIpPrefixes/?api-version=2022-01-01:
    get:
      tags:
        - CustomIpPrefixes
      operationId: CustomIPPrefixes_List
      description: Gets all custom IP prefixes in a resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of CustomIpPrefix resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomIpPrefixListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: custom_ip_prefixes
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateLinkServices/{serviceName}/?api-version=2022-01-01:
    delete:
      tags:
        - PrivateLinkServices
      operationId: PrivateLinkServices_Delete
      description: Deletes the specified private link service.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: serviceName
          in: path
          description: The name of the private link service.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Delete successful.
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: private_link_services
      x-stackQL-verb: delete
    get:
      tags:
        - PrivateLinkServices
      operationId: PrivateLinkServices_Get
      description: Gets the specified private link service by resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: serviceName
          in: path
          description: The name of the private link service.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $expand
          in: query
          description: Expands referenced resources.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request successful. The operation returns the resulting PrivateLinkService resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkService'
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-stackQL-resource: private_link_services
      x-stackQL-verb: exec
    put:
      tags:
        - PrivateLinkService
      operationId: PrivateLinkServices_CreateOrUpdate
      description: Creates or updates an private link service in the specified resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: serviceName
          in: path
          description: The name of the private link service.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update private link service operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateLinkService'
      responses:
        '200':
          description: Update successful. The operation returns the resulting privateLinkService resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkService'
        '201':
          description: Create successful. The operation returns the resulting privateLinkService resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkService'
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: private_link_services
      x-stackQL-verb: insert
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateLinkServices/?api-version=2022-01-01:
    get:
      tags:
        - PrivateLinkServices
      operationId: PrivateLinkServices_List
      description: Gets all private link services in a resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of privateLinkService resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkServiceListResult'
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: private_link_services
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/privateLinkServices/?api-version=2022-01-01:
    get:
      tags:
        - PrivateLinkServices
      operationId: PrivateLinkServices_ListBySubscription
      description: Gets all private link service in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of PrivateLinkService resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkServiceListResult'
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: private_link_services
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateLinkServices/{serviceName}/privateEndpointConnections/{peConnectionName}/?api-version=2022-01-01:
    get:
      tags:
        - PrivateLinkServices
      operationId: PrivateLinkServices_GetPrivateEndpointConnection
      description: Get the specific private end point connection by specific private link service in the resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: serviceName
          in: path
          description: The name of the private link service.
          required: true
          schema:
            type: string
        - name: peConnectionName
          in: path
          description: The name of the private end point connection.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $expand
          in: query
          description: Expands referenced resources.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request successful. The operation returns the resulting private end point connection resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-stackQL-resource: private_link_services
      x-stackQL-verb: exec
    put:
      tags:
        - PrivateLinkServices
      operationId: PrivateLinkServices_UpdatePrivateEndpointConnection
      description: Approve or reject private end point connection for a private link service in a subscription.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: serviceName
          in: path
          description: The name of the private link service.
          required: true
          schema:
            type: string
        - name: peConnectionName
          in: path
          description: The name of the private end point connection.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to approve or reject the private end point connection.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateEndpointConnection'
      responses:
        '200':
          description: Update successful. The operation returns the resulting PrivateEndpointConnection resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-stackQL-resource: private_link_services
      x-stackQL-verb: exec
    delete:
      tags:
        - PrivateLinkServices
      operationId: PrivateLinkServices_DeletePrivateEndpointConnection
      description: Delete private end point connection for a private link service in a subscription.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: serviceName
          in: path
          description: The name of the private link service.
          required: true
          schema:
            type: string
        - name: peConnectionName
          in: path
          description: The name of the private end point connection.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Delete successful.
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: private_link_services
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateLinkServices/{serviceName}/privateEndpointConnections/?api-version=2022-01-01:
    get:
      tags:
        - PrivateLinkServices
      operationId: PrivateLinkServices_ListPrivateEndpointConnections
      description: Gets all private end point connections for a specific private link service.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: serviceName
          in: path
          description: The name of the private link service.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of private end point connection resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnectionListResult'
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: private_link_services
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/checkPrivateLinkServiceVisibility/?api-version=2022-01-01:
    post:
      tags:
        - PrivateLinkServices
      operationId: PrivateLinkServices_CheckPrivateLinkServiceVisibility
      description: Checks whether the subscription is visible to private link service.
      parameters:
        - name: location
          in: path
          description: The location of the domain name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The request body of CheckPrivateLinkService API call.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckPrivateLinkServiceVisibilityRequest'
      responses:
        '200':
          description: Request successful. Returns whether the subscription is visible to private link service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkServiceVisibility'
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: private_link_services
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/locations/{location}/checkPrivateLinkServiceVisibility/?api-version=2022-01-01:
    post:
      tags:
        - PrivateLinkServices
      operationId: PrivateLinkServices_CheckPrivateLinkServiceVisibilityByResourceGroup
      description: Checks whether the subscription is visible to private link service in the specified resource group.
      parameters:
        - name: location
          in: path
          description: The location of the domain name.
          required: true
          schema:
            type: string
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The request body of CheckPrivateLinkService API call.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckPrivateLinkServiceVisibilityRequest'
      responses:
        '200':
          description: Request successful. Returns whether the subscription is visible to private link service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkServiceVisibility'
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: private_link_services
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/autoApprovedPrivateLinkServices/?api-version=2022-01-01:
    get:
      tags:
        - PrivateLinkServices
      operationId: PrivateLinkServices_ListAutoApprovedPrivateLinkServices
      description: Returns all of the private link service ids that can be linked to a Private Endpoint with auto approved in this subscription in this region.
      parameters:
        - name: location
          in: path
          description: The location of the domain name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. Returns all of the private link service ids that can be linked to a Private Endpoint with auto approved in this subscription in this region.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoApprovedPrivateLinkServicesResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: private_link_services
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/locations/{location}/autoApprovedPrivateLinkServices/?api-version=2022-01-01:
    get:
      tags:
        - PrivateLinkServices
      operationId: PrivateLinkServices_ListAutoApprovedPrivateLinkServicesByResourceGroup
      description: Returns all of the private link service ids that can be linked to a Private Endpoint with auto approved in this subscription in this region.
      parameters:
        - name: location
          in: path
          description: The location of the domain name.
          required: true
          schema:
            type: string
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. Returns all of the private link service ids that can be linked to a Private Endpoint with auto approved in this subscription in this region.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoApprovedPrivateLinkServicesResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: private_link_services
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/?api-version=2022-01-01:
    delete:
      tags:
        - NetworkInterfaces
      operationId: NetworkInterfaces_Delete
      description: Deletes the specified network interface.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkInterfaceName
          in: path
          description: The name of the network interface.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Request successful. Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: interfaces
      x-stackQL-verb: delete
    get:
      tags:
        - NetworkInterfaces
      operationId: NetworkInterfaces_Get
      description: Gets information about the specified network interface.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkInterfaceName
          in: path
          description: The name of the network interface.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $expand
          in: query
          description: Expands referenced resources.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request successful. The operation returns the resulting NetworkInterface resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkInterface'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: interfaces
      x-stackQL-verb: exec
    put:
      tags:
        - NetworkInterfaces
      operationId: NetworkInterfaces_CreateOrUpdate
      description: Creates or updates a network interface.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkInterfaceName
          in: path
          description: The name of the network interface.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update network interface operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkInterface'
      responses:
        '200':
          description: Update successful. The operation returns the resulting NetworkInterface resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkInterface'
        '201':
          description: Create successful. The operation returns the resulting NetworkInterface resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkInterface'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: interfaces
      x-stackQL-verb: insert
    patch:
      tags:
        - NetworkInterfaces
      operationId: NetworkInterfaces_UpdateTags
      description: Updates a network interface tags.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkInterfaceName
          in: path
          description: The name of the network interface.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to update network interface tags.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Update successful. The operation returns the resulting NetworkInterface resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkInterface'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: interfaces
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/networkInterfaces/?api-version=2022-01-01:
    get:
      tags:
        - NetworkInterfaces
      operationId: NetworkInterfaces_ListAll
      description: Gets all network interfaces in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of NetworkInterface resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkInterfaceListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: interfaces
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/?api-version=2022-01-01:
    get:
      tags:
        - NetworkInterfaces
      operationId: NetworkInterfaces_List
      description: Gets all network interfaces in a resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of NetworkInterface resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkInterfaceListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: interfaces
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/effectiveRouteTable/?api-version=2022-01-01:
    post:
      tags:
        - NetworkInterfaces
      operationId: NetworkInterfaces_GetEffectiveRouteTable
      description: Gets all route tables applied to a network interface.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkInterfaceName
          in: path
          description: The name of the network interface.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of EffectRoute resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EffectiveRouteListResult'
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: interfaces
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/effectiveNetworkSecurityGroups/?api-version=2022-01-01:
    post:
      tags:
        - NetworkInterfaces
      operationId: NetworkInterfaces_ListEffectiveNetworkSecurityGroups
      description: Gets all network security groups applied to a network interface.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkInterfaceName
          in: path
          description: The name of the network interface.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of NetworkSecurityGroup resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EffectiveNetworkSecurityGroupListResult'
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: interfaces
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/ipConfigurations/?api-version=2022-01-01:
    get:
      tags:
        - NetworkInterfaces
      operationId: NetworkInterfaceIPConfigurations_List
      description: Get all ip configurations in a network interface.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkInterfaceName
          in: path
          description: The name of the network interface.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of NetworkInterface IPConfiguration resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkInterfaceIPConfigurationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: interface_ip_configurations
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/ipConfigurations/{ipConfigurationName}/?api-version=2022-01-01:
    get:
      tags:
        - NetworkInterfaces
      operationId: NetworkInterfaceIPConfigurations_Get
      description: Gets the specified network interface ip configuration.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkInterfaceName
          in: path
          description: The name of the network interface.
          required: true
          schema:
            type: string
        - name: ipConfigurationName
          in: path
          description: The name of the ip configuration name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns the resulting NetworkInterface IPConfiguration resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkInterfaceIPConfiguration'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: interface_ip_configurations
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/loadBalancers/?api-version=2022-01-01:
    get:
      tags:
        - NetworkInterfaces
      operationId: NetworkInterfaceLoadBalancers_List
      description: List all load balancers in a network interface.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkInterfaceName
          in: path
          description: The name of the network interface.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of NetworkInterface LoadBalancer resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkInterfaceLoadBalancerListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: interface_load_balancers
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/tapConfigurations/{tapConfigurationName}/?api-version=2022-01-01:
    delete:
      tags:
        - Network Interfaces
      operationId: NetworkInterfaceTapConfigurations_Delete
      description: Deletes the specified tap configuration from the NetworkInterface.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkInterfaceName
          in: path
          description: The name of the network interface.
          required: true
          schema:
            type: string
        - name: tapConfigurationName
          in: path
          description: The name of the tap configuration.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Delete successful.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: interface_tap_configurations
      x-stackQL-verb: delete
    get:
      tags:
        - NetworkInterfaces
      operationId: NetworkInterfaceTapConfigurations_Get
      description: Get the specified tap configuration on a network interface.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkInterfaceName
          in: path
          description: The name of the network interface.
          required: true
          schema:
            type: string
        - name: tapConfigurationName
          in: path
          description: The name of the tap configuration.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a tap configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkInterfaceTapConfiguration'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: interface_tap_configurations
      x-stackQL-verb: exec
    put:
      tags:
        - Network Interfaces
      operationId: NetworkInterfaceTapConfigurations_CreateOrUpdate
      description: Creates or updates a Tap configuration in the specified NetworkInterface.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkInterfaceName
          in: path
          description: The name of the network interface.
          required: true
          schema:
            type: string
        - name: tapConfigurationName
          in: path
          description: The name of the tap configuration.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update tap configuration operation.
        required: true
        x-ms-requestBody-name: tapConfigurationParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkInterfaceTapConfiguration'
      responses:
        '200':
          description: Update successful. The operation returns the resulting Tap Configuration resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkInterfaceTapConfiguration'
        '201':
          description: Create successful. The operation returns the resulting Tap configuration resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkInterfaceTapConfiguration'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: interface_tap_configurations
      x-stackQL-verb: insert
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/tapConfigurations/?api-version=2022-01-01:
    get:
      tags:
        - NetworkInterfaces
      operationId: NetworkInterfaceTapConfigurations_List
      description: Get all Tap configurations in a network interface.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkInterfaceName
          in: path
          description: The name of the network interface.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of NetworkInterface TapConfiguration resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkInterfaceTapConfigurationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: interface_tap_configurations
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/publicipaddresses/?api-version=2018-10-01:
    get:
      operationId: PublicIPAddresses_ListVirtualMachineScaleSetPublicIPAddresses
      description: Gets information about all public IP addresses on a virtual machine scale set level.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualMachineScaleSetName
          in: path
          description: The name of the virtual machine scale set.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionVmssParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of PublicIPInterface resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicIPAddressListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: public_ip_addresses
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/virtualMachines/{virtualmachineIndex}/networkInterfaces/{networkInterfaceName}/ipconfigurations/{ipConfigurationName}/publicipaddresses/?api-version=2018-10-01:
    get:
      operationId: PublicIPAddresses_ListVirtualMachineScaleSetVMPublicIPAddresses
      description: Gets information about all public IP addresses in a virtual machine IP configuration in a virtual machine scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualMachineScaleSetName
          in: path
          description: The name of the virtual machine scale set.
          required: true
          schema:
            type: string
        - name: virtualmachineIndex
          in: path
          description: The virtual machine index.
          required: true
          schema:
            type: string
        - name: networkInterfaceName
          in: path
          description: The network interface name.
          required: true
          schema:
            type: string
        - name: ipConfigurationName
          in: path
          description: The IP configuration name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionVmssParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of PublicIPAddress resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicIPAddressListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: public_ip_addresses
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/virtualMachines/{virtualmachineIndex}/networkInterfaces/{networkInterfaceName}/ipconfigurations/{ipConfigurationName}/publicipaddresses/{publicIpAddressName}/?api-version=2018-10-01:
    get:
      operationId: PublicIPAddresses_GetVirtualMachineScaleSetPublicIPAddress
      description: Get the specified public IP address in a virtual machine scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualMachineScaleSetName
          in: path
          description: The name of the virtual machine scale set.
          required: true
          schema:
            type: string
        - name: virtualmachineIndex
          in: path
          description: The virtual machine index.
          required: true
          schema:
            type: string
        - name: networkInterfaceName
          in: path
          description: The name of the network interface.
          required: true
          schema:
            type: string
        - name: ipConfigurationName
          in: path
          description: The name of the IP configuration.
          required: true
          schema:
            type: string
        - name: publicIpAddressName
          in: path
          description: The name of the public IP Address.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionVmssParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $expand
          in: query
          description: Expands referenced resources.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request successful. The operation returns the resulting PublicIPAddress resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicIPAddress'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: public_ip_addresses
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ddosCustomPolicies/{ddosCustomPolicyName}/?api-version=2022-01-01:
    delete:
      tags:
        - ddosCustomPolicies
      operationId: DdosCustomPolicies_Delete
      description: Deletes the specified DDoS custom policy.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: ddosCustomPolicyName
          in: path
          description: The name of the DDoS custom policy.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Request successful. Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: ddos_custom_policies
      x-stackQL-verb: delete
    get:
      tags:
        - ddosCustomPolicies
      operationId: DdosCustomPolicies_Get
      description: Gets information about the specified DDoS custom policy.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: ddosCustomPolicyName
          in: path
          description: The name of the DDoS custom policy.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns the specified DDoS custom policy resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DdosCustomPolicy'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: ddos_custom_policies
      x-stackQL-verb: exec
    put:
      tags:
        - ddosCustomPolicies
      operationId: DdosCustomPolicies_CreateOrUpdate
      description: Creates or updates a DDoS custom policy.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: ddosCustomPolicyName
          in: path
          description: The name of the DDoS custom policy.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DdosCustomPolicy'
      responses:
        '200':
          description: Update successful. The operation returns the resulting DDoS custom policy resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DdosCustomPolicy'
        '201':
          description: Create successful. The operation returns the resulting DDoS custom policy resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DdosCustomPolicy'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: ddos_custom_policies
      x-stackQL-verb: insert
    patch:
      tags:
        - ddosCustomPolicies
      operationId: DdosCustomPolicies_UpdateTags
      description: Update a DDoS custom policy tags.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: ddosCustomPolicyName
          in: path
          description: The name of the DDoS custom policy.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to update DDoS custom policy resource tags.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Update successful. The operation returns the resulting DDoS custom policy resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DdosCustomPolicy'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: ddos_custom_policies
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/virtualMachines/{virtualmachineIndex}/networkInterfaces/?api-version=2018-10-01:
    get:
      tags:
        - NetworkInterfaces
      operationId: NetworkInterfaces_ListVirtualMachineScaleSetVMNetworkInterfaces
      description: Gets information about all network interfaces in a virtual machine in a virtual machine scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualMachineScaleSetName
          in: path
          description: The name of the virtual machine scale set.
          required: true
          schema:
            type: string
        - name: virtualmachineIndex
          in: path
          description: The virtual machine index.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionVmssParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of NetworkInterface resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkInterfaceListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: interfaces
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/networkInterfaces/?api-version=2018-10-01:
    get:
      tags:
        - NetworkInterfaces
      operationId: NetworkInterfaces_ListVirtualMachineScaleSetNetworkInterfaces
      description: Gets all network interfaces in a virtual machine scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualMachineScaleSetName
          in: path
          description: The name of the virtual machine scale set.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionVmssParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of NetworkInterface resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkInterfaceListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: interfaces
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/virtualMachines/{virtualmachineIndex}/networkInterfaces/{networkInterfaceName}/?api-version=2018-10-01:
    get:
      tags:
        - NetworkInterfaces
      operationId: NetworkInterfaces_GetVirtualMachineScaleSetNetworkInterface
      description: Get the specified network interface in a virtual machine scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualMachineScaleSetName
          in: path
          description: The name of the virtual machine scale set.
          required: true
          schema:
            type: string
        - name: virtualmachineIndex
          in: path
          description: The virtual machine index.
          required: true
          schema:
            type: string
        - name: networkInterfaceName
          in: path
          description: The name of the network interface.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionVmssParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $expand
          in: query
          description: Expands referenced resources.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request successful. The operation returns the resulting NetworkInterface resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkInterface'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: interfaces
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/virtualMachines/{virtualmachineIndex}/networkInterfaces/{networkInterfaceName}/ipConfigurations/?api-version=2018-10-01:
    get:
      tags:
        - NetworkInterfaces
      operationId: NetworkInterfaces_ListVirtualMachineScaleSetIpConfigurations
      description: Get the specified network interface ip configuration in a virtual machine scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualMachineScaleSetName
          in: path
          description: The name of the virtual machine scale set.
          required: true
          schema:
            type: string
        - name: virtualmachineIndex
          in: path
          description: The virtual machine index.
          required: true
          schema:
            type: string
        - name: networkInterfaceName
          in: path
          description: The name of the network interface.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionVmssParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $expand
          in: query
          description: Expands referenced resources.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request successful. The operation returns the list of resulting NetworkInterfaceIPConfigurations resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkInterfaceIPConfigurationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: interfaces
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/virtualMachines/{virtualmachineIndex}/networkInterfaces/{networkInterfaceName}/ipConfigurations/{ipConfigurationName}/?api-version=2018-10-01:
    get:
      tags:
        - NetworkInterfaces
      operationId: NetworkInterfaces_GetVirtualMachineScaleSetIpConfiguration
      description: Get the specified network interface ip configuration in a virtual machine scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualMachineScaleSetName
          in: path
          description: The name of the virtual machine scale set.
          required: true
          schema:
            type: string
        - name: virtualmachineIndex
          in: path
          description: The virtual machine index.
          required: true
          schema:
            type: string
        - name: networkInterfaceName
          in: path
          description: The name of the network interface.
          required: true
          schema:
            type: string
        - name: ipConfigurationName
          in: path
          description: The name of the ip configuration.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionVmssParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $expand
          in: query
          description: Expands referenced resources.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request successful. The operation returns the resulting NetworkInterfaceIPConfiguration resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkInterfaceIPConfiguration'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: interfaces
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/availableDelegations/?api-version=2022-01-01:
    get:
      operationId: AvailableDelegations_List
      description: Gets all of the available subnet delegations for this subscription in this region.
      parameters:
        - name: location
          in: path
          description: The location of the subnet.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. Returns all of the possible delegations for a subnet in this subscription in the region.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableDelegationsResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: available_delegations
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/locations/{location}/availableDelegations/?api-version=2022-01-01:
    get:
      operationId: AvailableResourceGroupDelegations_List
      description: Gets all of the available subnet delegations for this resource group in this region.
      parameters:
        - name: location
          in: path
          description: The location of the domain name.
          required: true
          schema:
            type: string
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. Returns all of the possible delegations for a subnet in this subscription in the region.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableDelegationsResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: available_resource_group_delegations
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/usages/?api-version=2022-01-01:
    get:
      tags:
        - Usages
      operationId: Usages_List
      description: List network usages for a subscription.
      parameters:
        - name: location
          in: path
          description: The location where resource usage is queried.
          required: true
          schema:
            pattern: ^[-\w\._ ]+$
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of Usage resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsagesListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: usages
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/?api-version=2022-01-01:
    delete:
      tags:
        - RouteFilters
      operationId: RouteFilters_Delete
      description: Deletes the specified route filter.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: routeFilterName
          in: path
          description: The name of the route filter.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Delete successful.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: route_filters
      x-stackQL-verb: delete
    get:
      tags:
        - RouteFilters
      operationId: RouteFilters_Get
      description: Gets the specified route filter.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: routeFilterName
          in: path
          description: The name of the route filter.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $expand
          in: query
          description: Expands referenced express route bgp peering resources.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request successful. The operation returns the resulting Route Filter resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteFilter'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: route_filters
      x-stackQL-verb: exec
    put:
      tags:
        - RouteFilters
      operationId: RouteFilters_CreateOrUpdate
      description: Creates or updates a route filter in a specified resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: routeFilterName
          in: path
          description: The name of the route filter.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update route filter operation.
        required: true
        x-ms-requestBody-name: routeFilterParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RouteFilter'
      responses:
        '200':
          description: Request successful. The operation returns the resulting Route Filter resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteFilter'
        '201':
          description: Create successful. The operation returns the resulting Route Filter resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteFilter'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: route_filters
      x-stackQL-verb: insert
    patch:
      tags:
        - RouteFilters
      operationId: RouteFilters_UpdateTags
      description: Updates tags of a route filter.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: routeFilterName
          in: path
          description: The name of the route filter.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to update route filter tags.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Request successful. The operation returns the resulting Route Filter resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteFilter'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: route_filters
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/?api-version=2022-01-01:
    get:
      tags:
        - RouteFilters
      operationId: RouteFilters_ListByResourceGroup
      description: Gets all route filters in a resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of Route Filter resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteFilterListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: route_filters
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/routeFilters/?api-version=2022-01-01:
    get:
      tags:
        - RouteFilters
      operationId: RouteFilters_List
      description: Gets all route filters in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of Route Filter resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteFilterListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: route_filters
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}/?api-version=2022-01-01:
    delete:
      tags:
        - RouteFilterRules
      operationId: RouteFilterRules_Delete
      description: Deletes the specified rule from a route filter.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: routeFilterName
          in: path
          description: The name of the route filter.
          required: true
          schema:
            type: string
        - name: ruleName
          in: path
          description: The name of the rule.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Accepted.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Rule was deleted or not found.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: route_filter_rules
      x-stackQL-verb: delete
    get:
      tags:
        - RouteFilterRules
      operationId: RouteFilterRules_Get
      description: Gets the specified rule from a route filter.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: routeFilterName
          in: path
          description: The name of the route filter.
          required: true
          schema:
            type: string
        - name: ruleName
          in: path
          description: The name of the rule.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns the resulting Route Filter Rule resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteFilterRule'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: route_filter_rules
      x-stackQL-verb: exec
    put:
      tags:
        - RouteFilterRules
      operationId: RouteFilterRules_CreateOrUpdate
      description: Creates or updates a route in the specified route filter.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: routeFilterName
          in: path
          description: The name of the route filter.
          required: true
          schema:
            type: string
        - name: ruleName
          in: path
          description: The name of the route filter rule.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update route filter rule operation.
        required: true
        x-ms-requestBody-name: routeFilterRuleParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RouteFilterRule'
      responses:
        '200':
          description: Update successful. The operation returns the resulting Route Filter Rule resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteFilterRule'
        '201':
          description: Create successful. The operation returns the resulting Route Filter Rule resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteFilterRule'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: route_filter_rules
      x-stackQL-verb: insert
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/?api-version=2022-01-01:
    get:
      tags:
        - RouteFilterRules
      operationId: RouteFilterRules_ListByRouteFilter
      description: Gets all RouteFilterRules in a route filter.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: routeFilterName
          in: path
          description: The name of the route filter.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of Route Filter Rule resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteFilterRuleListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: route_filter_rules
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/ExpressRoutePortsLocations/?api-version=2022-01-01:
    get:
      tags:
        - ExpressRoutePortsLocations
      operationId: ExpressRoutePortsLocations_List
      description: Retrieves all ExpressRoutePort peering locations. Does not return available bandwidths for each location. Available bandwidths can only be obtained when retrieving a specific peering location.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns the list of all ExpressRoutePort peering locations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRoutePortsLocationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: express_route_ports_locations
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/ExpressRoutePortsLocations/{locationName}/?api-version=2022-01-01:
    get:
      tags:
        - ExpressRoutePortsLocations
      operationId: ExpressRoutePortsLocations_Get
      description: Retrieves a single ExpressRoutePort peering location, including the list of available bandwidths available at said peering location.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: locationName
          in: path
          description: Name of the requested ExpressRoutePort peering location.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. The operation returns the requested ExpressRoutePort peering location.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRoutePortsLocation'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: express_route_ports_locations
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ExpressRoutePorts/{expressRoutePortName}/?api-version=2022-01-01:
    delete:
      tags:
        - ExpressRoutePorts
      operationId: ExpressRoutePorts_Delete
      description: Deletes the specified ExpressRoutePort resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: expressRoutePortName
          in: path
          description: The name of the ExpressRoutePort resource.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Request successful. Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: express_route_ports
      x-stackQL-verb: delete
    get:
      tags:
        - ExpressRoutePorts
      operationId: ExpressRoutePorts_Get
      description: Retrieves the requested ExpressRoutePort resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: expressRoutePortName
          in: path
          description: The name of ExpressRoutePort.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. The operation returns the requested ExpressRoutePort resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRoutePort'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: express_route_ports
      x-stackQL-verb: exec
    put:
      tags:
        - ExpressRoutePorts
      operationId: ExpressRoutePorts_CreateOrUpdate
      description: Creates or updates the specified ExpressRoutePort resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: expressRoutePortName
          in: path
          description: The name of the ExpressRoutePort resource.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to the create ExpressRoutePort operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpressRoutePort'
      responses:
        '200':
          description: Update successful. The operation returns the resulting ExpressRoutePort resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRoutePort'
        '201':
          description: Create successful. The operation returns the resulting ExpressRoutePort resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRoutePort'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: express_route_ports
      x-stackQL-verb: insert
    patch:
      tags:
        - ExpressRoutePorts
      operationId: ExpressRoutePorts_UpdateTags
      description: Update ExpressRoutePort tags.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: expressRoutePortName
          in: path
          description: The name of the ExpressRoutePort resource.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to update ExpressRoutePort resource tags.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Update successful. The operation returns the resulting ExpressRoutePort resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRoutePort'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: express_route_ports
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ExpressRoutePorts/?api-version=2022-01-01:
    get:
      tags:
        - ExpressRoutePorts
      operationId: ExpressRoutePorts_ListByResourceGroup
      description: List all the ExpressRoutePort resources in the specified resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. The operation returns a list of ExpressRoutePort resources. If there are no ExpressRoutePort resources then an empty list is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRoutePortListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: express_route_ports
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/ExpressRoutePorts/?api-version=2022-01-01:
    get:
      tags:
        - ExpressRoutePorts
      operationId: ExpressRoutePorts_List
      description: List all the ExpressRoutePort resources in the specified subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of ExpressRoutePort resources. If there are no ExpressRoutePort resources then an empty list is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRoutePortListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: express_route_ports
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ExpressRoutePorts/{expressRoutePortName}/links/{linkName}/?api-version=2022-01-01:
    get:
      tags:
        - ExpressRouteLinks
      operationId: ExpressRouteLinks_Get
      description: Retrieves the specified ExpressRouteLink resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: expressRoutePortName
          in: path
          description: The name of the ExpressRoutePort resource.
          required: true
          schema:
            type: string
        - name: linkName
          in: path
          description: The name of the ExpressRouteLink resource.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. The operation returns the requested ExpressRouteLink resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteLink'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: express_route_links
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ExpressRoutePorts/{expressRoutePortName}/links/?api-version=2022-01-01:
    get:
      tags:
        - ExpressRouteLinks
      operationId: ExpressRouteLinks_List
      description: Retrieve the ExpressRouteLink sub-resources of the specified ExpressRoutePort resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: expressRoutePortName
          in: path
          description: The name of the ExpressRoutePort resource.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. The operation returns a list of ExpressRouteLink resources. If there are no ExpressRouteLink resources then an empty list is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteLinkListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: express_route_links
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRoutePorts/{expressRoutePortName}/generateLoa/?api-version=2022-01-01:
    post:
      tags:
        - ExpressRoutePorts
      operationId: ExpressRoutePorts_GenerateLOA
      description: Generate a letter of authorization for the requested ExpressRoutePort resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: expressRoutePortName
          in: path
          description: The name of ExpressRoutePort.
          required: true
          schema:
            type: string
      requestBody:
        description: Request parameters supplied to generate a letter of authorization.
        required: true
        x-ms-requestBody-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateExpressRoutePortsLOARequest'
      responses:
        '200':
          description: Request successful. Returns the content as a base64 encoded string.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateExpressRoutePortsLOAResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: express_route_ports
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRoutePorts/{expressRoutePortName}/authorizations/{authorizationName}/?api-version=2022-01-01:
    delete:
      tags:
        - ExpressRoutePortAuthorizations
      operationId: ExpressRoutePortAuthorizations_Delete
      description: Deletes the specified authorization from the specified express route port.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: expressRoutePortName
          in: path
          description: The name of the express route port.
          required: true
          schema:
            type: string
        - name: authorizationName
          in: path
          description: The name of the authorization.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Request successful. Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: express_route_port_authorizations
      x-stackQL-verb: delete
    get:
      tags:
        - ExpressRoutePortAuthorizations
      operationId: ExpressRoutePortAuthorizations_Get
      description: Gets the specified authorization from the specified express route port.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: expressRoutePortName
          in: path
          description: The name of the express route port.
          required: true
          schema:
            type: string
        - name: authorizationName
          in: path
          description: The name of the authorization.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns the ExpressRoutePortAuthorization resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRoutePortAuthorization'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: express_route_port_authorizations
      x-stackQL-verb: exec
    put:
      tags:
        - ExpressRoutePortAuthorizations
      operationId: ExpressRoutePortAuthorizations_CreateOrUpdate
      description: Creates or updates an authorization in the specified express route port.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: expressRoutePortName
          in: path
          description: The name of the express route port.
          required: true
          schema:
            type: string
        - name: authorizationName
          in: path
          description: The name of the authorization.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update express route port authorization operation.
        required: true
        x-ms-requestBody-name: authorizationParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpressRoutePortAuthorization'
      responses:
        '200':
          description: Update successful. The operation returns the resulting ExpressRoutePortAuthorization resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRoutePortAuthorization'
        '201':
          description: Create successful. The operation returns the resulting ExpressRoutePortAuthorization resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRoutePortAuthorization'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: express_route_port_authorizations
      x-stackQL-verb: insert
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRoutePorts/{expressRoutePortName}/authorizations/?api-version=2022-01-01:
    get:
      tags:
        - ExpressRoutePortAuthorizations
      operationId: ExpressRoutePortAuthorizations_List
      description: Gets all authorizations in an express route port.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: expressRoutePortName
          in: path
          description: The name of the express route port.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of ExpressRoutePortAuthorization resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRoutePortAuthorizationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: express_route_port_authorizations
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/scopeConnections/{scopeConnectionName}/?api-version=2022-01-01:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/NetworkManagerNameParameter'
      - $ref: '#/components/parameters/ScopeConnectionName'
    put:
      tags:
        - ScopeConnections
      operationId: ScopeConnections_CreateOrUpdate
      description: Creates or updates scope connection from Network Manager
      requestBody:
        description: Scope connection to be created/updated.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScopeConnection'
      responses:
        '200':
          description: Updated - Returns information about the updates scope connection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopeConnection'
        '201':
          description: Created - Returns information about the new scope connection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopeConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: scope_connections
      x-stackQL-verb: insert
    get:
      tags:
        - ScopeConnections
      operationId: ScopeConnections_Get
      description: Get specified scope connection created by this Network Manager.
      responses:
        '200':
          description: OK - Returns the resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopeConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: scope_connections
      x-stackQL-verb: exec
    delete:
      tags:
        - ScopeConnections
      operationId: ScopeConnections_Delete
      description: Delete the pending scope connection created by this network manager.
      responses:
        '200':
          description: Delete Succeed.
        '204':
          description: Request successful. The resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: scope_connections
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/scopeConnections/?api-version=2022-01-01:
    get:
      tags:
        - ScopeConnections
      operationId: ScopeConnections_List
      description: List all scope connections created by this network manager.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkManagerNameParameter'
        - $ref: '#/components/parameters/ListTopParameter'
        - $ref: '#/components/parameters/ListSkipTokenParameter'
      responses:
        '200':
          description: OK - Returns information about the scope connection(s).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopeConnectionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: scope_connections
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/serviceEndpointPolicies/{serviceEndpointPolicyName}/?api-version=2022-01-01:
    delete:
      tags:
        - ServiceEndpointPolicies
      operationId: ServiceEndpointPolicies_Delete
      description: Deletes the specified service endpoint policy.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: serviceEndpointPolicyName
          in: path
          description: The name of the service endpoint policy.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Request successful. Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: service_endpoint_policies
      x-stackQL-verb: delete
    get:
      tags:
        - ServiceEndpointPolicies
      operationId: ServiceEndpointPolicies_Get
      description: Gets the specified service Endpoint Policies in a specified resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: serviceEndpointPolicyName
          in: path
          description: The name of the service endpoint policy.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $expand
          in: query
          description: Expands referenced resources.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request successful. The operation returns the resulting ServiceEndpointPolicy resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceEndpointPolicy'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: service_endpoint_policies
      x-stackQL-verb: exec
    put:
      tags:
        - ServiceEndpointPolicies
      operationId: ServiceEndpointPolicies_CreateOrUpdate
      description: Creates or updates a service Endpoint Policies.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: serviceEndpointPolicyName
          in: path
          description: The name of the service endpoint policy.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update service endpoint policy operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceEndpointPolicy'
      responses:
        '200':
          description: Update successful. The operation returns the resulting ServiceEndpointPolicy resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceEndpointPolicy'
        '201':
          description: Create successful. The operation returns the resulting ServiceEndpointPolicy resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceEndpointPolicy'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: service_endpoint_policies
      x-stackQL-verb: insert
    patch:
      tags:
        - ServiceEndpointPolicies
      operationId: ServiceEndpointPolicies_UpdateTags
      description: Updates tags of a service endpoint policy.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: serviceEndpointPolicyName
          in: path
          description: The name of the service endpoint policy.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to update service endpoint policy tags.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Update successful. The operation returns the resulting ServiceEndpointPolicy resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceEndpointPolicy'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: service_endpoint_policies
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/ServiceEndpointPolicies/?api-version=2022-01-01:
    get:
      tags:
        - ServiceEndpointPolicies
      operationId: ServiceEndpointPolicies_List
      description: Gets all the service endpoint policies in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of ServiceEndpointPolicy resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceEndpointPolicyListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: service_endpoint_policies
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/serviceEndpointPolicies/?api-version=2022-01-01:
    get:
      tags:
        - ServiceEndpointPolicies
      operationId: ServiceEndpointPolicies_ListByResourceGroup
      description: Gets all service endpoint Policies in a resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of ServiceEndpointPolicy resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceEndpointPolicyListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: service_endpoint_policies
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/serviceEndpointPolicies/{serviceEndpointPolicyName}/serviceEndpointPolicyDefinitions/{serviceEndpointPolicyDefinitionName}/?api-version=2022-01-01:
    delete:
      tags:
        - ServiceEndpointPolicyDefinitions
      operationId: ServiceEndpointPolicyDefinitions_Delete
      description: Deletes the specified ServiceEndpoint policy definitions.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: serviceEndpointPolicyName
          in: path
          description: The name of the Service Endpoint Policy.
          required: true
          schema:
            type: string
        - name: serviceEndpointPolicyDefinitionName
          in: path
          description: The name of the service endpoint policy definition.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Request successful. Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: service_endpoint_policy_definitions
      x-stackQL-verb: delete
    get:
      tags:
        - serviceEndpointPolicyDefinitions
      operationId: ServiceEndpointPolicyDefinitions_Get
      description: Get the specified service endpoint policy definitions from service endpoint policy.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: serviceEndpointPolicyName
          in: path
          description: The name of the service endpoint policy name.
          required: true
          schema:
            type: string
        - name: serviceEndpointPolicyDefinitionName
          in: path
          description: The name of the service endpoint policy definition name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns the resulting ServiceEndpointPolicyDefinition resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceEndpointPolicyDefinition'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: service_endpoint_policy_definitions
      x-stackQL-verb: exec
    put:
      tags:
        - serviceEndpointPolicyDefinitions
      operationId: ServiceEndpointPolicyDefinitions_CreateOrUpdate
      description: Creates or updates a service endpoint policy definition in the specified service endpoint policy.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: serviceEndpointPolicyName
          in: path
          description: The name of the service endpoint policy.
          required: true
          schema:
            type: string
        - name: serviceEndpointPolicyDefinitionName
          in: path
          description: The name of the service endpoint policy definition name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update service endpoint policy operation.
        required: true
        x-ms-requestBody-name: ServiceEndpointPolicyDefinitions
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceEndpointPolicyDefinition'
      responses:
        '200':
          description: Update successful. The operation returns the resulting ServiceEndpointPolicyDefinition resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceEndpointPolicyDefinition'
        '201':
          description: Create successful. The operation returns the resulting ServiceEndpointPolicyDefinition resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceEndpointPolicyDefinition'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: service_endpoint_policy_definitions
      x-stackQL-verb: insert
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/serviceEndpointPolicies/{serviceEndpointPolicyName}/serviceEndpointPolicyDefinitions/?api-version=2022-01-01:
    get:
      tags:
        - ServiceEndpointPolicyDefinitions
      operationId: ServiceEndpointPolicyDefinitions_ListByResourceGroup
      description: Gets all service endpoint policy definitions in a service end point policy.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: serviceEndpointPolicyName
          in: path
          description: The name of the service endpoint policy name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of ServiceEndpointPolicyDefinition resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceEndpointPolicyDefinitionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: service_endpoint_policy_definitions
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/listNetworkManagerEffectiveConnectivityConfigurations/?api-version=2022-01-01:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/VirtualNetworkNameParameter'
    post:
      tags:
        - NetworkManagerEffectiveConnectivityConfiguration
      requestBody:
        description: Parameters supplied to list correct page.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryRequestOptions'
      operationId: ListNetworkManagerEffectiveConnectivityConfigurations
      description: List all effective connectivity configurations applied on a virtual network.
      responses:
        '200':
          description: OK - Returns information about the configurations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkManagerEffectiveConnectivityConfigurationListResult'
        default:
          description: Resource Provider error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: network_manager_effective_connectivity_configuration
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/listNetworkManagerEffectiveSecurityAdminRules/?api-version=2022-01-01:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/VirtualNetworkNameParameter'
    post:
      tags:
        - NetworkManagerEffectiveSecurityAdminRules
      requestBody:
        description: Parameters supplied to list correct page.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryRequestOptions'
      operationId: ListNetworkManagerEffectiveSecurityAdminRules
      description: List all effective security admin rules applied on a virtual network.
      responses:
        '200':
          description: OK - Returns information about the configurations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkManagerEffectiveSecurityAdminRulesListResult'
        default:
          description: Resource Provider error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: network_manager_effective_security_admin_rules
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/connectivityConfigurations/{configurationName}/?api-version=2022-01-01:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/NetworkManagerNameParameter'
      - $ref: '#/components/parameters/ConnectivityConfigurationNameParameter'
    get:
      tags:
        - ConnectivityConfigurations
      operationId: ConnectivityConfigurations_Get
      description: Gets a Network Connectivity Configuration, specified by the resource group, network manager name, and connectivity Configuration name
      responses:
        '200':
          description: Get successful. The operation returns the specified Managed Network Connectivity Configuration resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectivityConfiguration'
        default:
          description: Resource Provider error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: connectivity_configurations
      x-stackQL-verb: exec
    put:
      tags:
        - ConnectivityConfigurations
      operationId: ConnectivityConfigurations_CreateOrUpdate
      description: Creates/Updates a new network manager connectivity configuration
      requestBody:
        description: Parameters supplied to create/update a network manager connectivity configuration
        required: true
        x-ms-requestBody-name: connectivityConfiguration
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectivityConfiguration'
      responses:
        '200':
          description: Update successful. The operation returns the resulting network manager connectivity configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectivityConfiguration'
        '201':
          description: Create successful. The operation returns the resulting network manager connectivity configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectivityConfiguration'
        default:
          description: Resource Provider error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: connectivity_configurations
      x-stackQL-verb: insert
    delete:
      tags:
        - ConnectivityConfigurations
      operationId: ConnectivityConfigurations_Delete
      description: Deletes a network manager connectivity configuration, specified by the resource group, network manager name, and connectivity configuration name
      parameters:
        - $ref: '#/components/parameters/ForceDeleteParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
              description: The URL of the resource used to check the status of the asynchronous operation.
        '204':
          description: Request successful. The resource does not exist.
        default:
          description: Resource Provider error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: connectivity_configurations
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/connectivityConfigurations/?api-version=2022-01-01:
    get:
      tags:
        - ConnectivityConfigurations
      operationId: ConnectivityConfigurations_List
      description: Lists all the network manager connectivity configuration in a specified network manager.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NetworkManagerNameParameter'
        - $ref: '#/components/parameters/ListTopParameter'
        - $ref: '#/components/parameters/ListSkipTokenParameter'
      responses:
        '200':
          description: Get successful. The operation returns all network manager connectivity configuration resources in the specified network manager, in a paginated format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectivityConfigurationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: connectivity_configurations
      x-stackQL-verb: select
  /providers/Microsoft.Network/operations/?api-version=2022-01-01:
    get:
      operationId: Operations_List
      description: Lists all of the available Network Rest API operations.
      parameters: []
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}/?api-version=2022-01-01:
    delete:
      tags:
        - NetworkSecurityGroups
      operationId: NetworkSecurityGroups_Delete
      description: Deletes the specified network security group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkSecurityGroupName
          in: path
          description: The name of the network security group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Request successful. Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: security_groups
      x-stackQL-verb: delete
    get:
      tags:
        - NetworkSecurityGroups
      operationId: NetworkSecurityGroups_Get
      description: Gets the specified network security group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkSecurityGroupName
          in: path
          description: The name of the network security group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $expand
          in: query
          description: Expands referenced resources.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request successful. The operation returns the resulting NetworkSecurityGroup resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkSecurityGroup'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: security_groups
      x-stackQL-verb: exec
    put:
      tags:
        - NetworkSecurityGroups
      operationId: NetworkSecurityGroups_CreateOrUpdate
      description: Creates or updates a network security group in the specified resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkSecurityGroupName
          in: path
          description: The name of the network security group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update network security group operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkSecurityGroup'
      responses:
        '200':
          description: Update successful. The operation returns the resulting NetworkSecurityGroup resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkSecurityGroup'
        '201':
          description: Create successful. The operation returns the resulting NetworkSecurityGroup resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkSecurityGroup'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: security_groups
      x-stackQL-verb: insert
    patch:
      tags:
        - NetworkSecurityGroups
      operationId: NetworkSecurityGroups_UpdateTags
      description: Updates a network security group tags.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkSecurityGroupName
          in: path
          description: The name of the network security group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to update network security group tags.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Update successful. The operation returns the resulting NetworkSecurityGroup resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkSecurityGroup'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: security_groups
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/networkSecurityGroups/?api-version=2022-01-01:
    get:
      tags:
        - NetworkSecurityGroups
      operationId: NetworkSecurityGroups_ListAll
      description: Gets all network security groups in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of NetworkSecurityGroup resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkSecurityGroupListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: security_groups
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/?api-version=2022-01-01:
    get:
      tags:
        - NetworkSecurityGroups
      operationId: NetworkSecurityGroups_List
      description: Gets all network security groups in a resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of NetworkSecurityGroup resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkSecurityGroupListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: security_groups
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}/securityRules/{securityRuleName}/?api-version=2022-01-01:
    delete:
      tags:
        - SecurityRules
      operationId: SecurityRules_Delete
      description: Deletes the specified network security rule.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkSecurityGroupName
          in: path
          description: The name of the network security group.
          required: true
          schema:
            type: string
        - name: securityRuleName
          in: path
          description: The name of the security rule.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Request successful. Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: security_rules
      x-stackQL-verb: delete
    get:
      tags:
        - SecurityRules
      operationId: SecurityRules_Get
      description: Get the specified network security rule.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkSecurityGroupName
          in: path
          description: The name of the network security group.
          required: true
          schema:
            type: string
        - name: securityRuleName
          in: path
          description: The name of the security rule.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns the resulting SecurityRule resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityRule'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: security_rules
      x-stackQL-verb: exec
    put:
      tags:
        - SecurityRules
      operationId: SecurityRules_CreateOrUpdate
      description: Creates or updates a security rule in the specified network security group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkSecurityGroupName
          in: path
          description: The name of the network security group.
          required: true
          schema:
            type: string
        - name: securityRuleName
          in: path
          description: The name of the security rule.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update network security rule operation.
        required: true
        x-ms-requestBody-name: securityRuleParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityRule'
      responses:
        '200':
          description: Update successful. The operation returns the resulting SecurityRule resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityRule'
        '201':
          description: Create successful. The operation returns the resulting SecurityRule resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityRule'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: security_rules
      x-stackQL-verb: insert
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}/securityRules/?api-version=2022-01-01:
    get:
      tags:
        - SecurityRules
      operationId: SecurityRules_List
      description: Gets all security rules in a network security group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkSecurityGroupName
          in: path
          description: The name of the network security group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of SecurityRule resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityRuleListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: security_rules
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}/defaultSecurityRules/?api-version=2022-01-01:
    get:
      tags:
        - SecurityRules
      operationId: DefaultSecurityRules_List
      description: Gets all default security rules in a network security group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkSecurityGroupName
          in: path
          description: The name of the network security group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of SecurityRule resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityRuleListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: default_security_rules
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}/defaultSecurityRules/{defaultSecurityRuleName}/?api-version=2022-01-01:
    get:
      tags:
        - SecurityRules
      operationId: DefaultSecurityRules_Get
      description: Get the specified default network security rule.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkSecurityGroupName
          in: path
          description: The name of the network security group.
          required: true
          schema:
            type: string
        - name: defaultSecurityRuleName
          in: path
          description: The name of the default security rule.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns the resulting SecurityRule resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityRule'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: default_security_rules
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/?api-version=2022-01-01:
    put:
      tags:
        - VirtualNetworkGateways
      operationId: VirtualNetworkGateways_CreateOrUpdate
      description: Creates or updates a virtual network gateway in the specified resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualNetworkGatewayName
          in: path
          description: The name of the virtual network gateway.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to create or update virtual network gateway operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualNetworkGateway'
      responses:
        '200':
          description: Update successful. The operation returns the resulting VirtualNetworkGateway resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkGateway'
        '201':
          description: Create successful. The operation returns the resulting VirtualNetworkGateway resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkGateway'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: virtual_network_gateways
      x-stackQL-verb: insert
    get:
      tags:
        - VirtualNetworkGateways
      operationId: VirtualNetworkGateways_Get
      description: Gets the specified virtual network gateway by resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualNetworkGatewayName
          in: path
          description: The name of the virtual network gateway.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a VirtualNetworkGateway resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkGateway'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: virtual_network_gateways
      x-stackQL-verb: exec
    delete:
      tags:
        - VirtualNetworkGateways
      operationId: VirtualNetworkGateways_Delete
      description: Deletes the specified virtual network gateway.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualNetworkGatewayName
          in: path
          description: The name of the virtual network gateway.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Delete successful.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: virtual_network_gateways
      x-stackQL-verb: delete
    patch:
      tags:
        - VirtualNetworkGateways
      operationId: VirtualNetworkGateways_UpdateTags
      description: Updates a virtual network gateway tags.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualNetworkGatewayName
          in: path
          description: The name of the virtual network gateway.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to update virtual network gateway tags.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Update successful. The operation returns the resulting VirtualNetworkGateway resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkGateway'
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: virtual_network_gateways
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/?api-version=2022-01-01:
    get:
      tags:
        - VirtualNetworkGateways
      operationId: VirtualNetworkGateways_List
      description: Gets all virtual network gateways by resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of VirtualNetworkGateway resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkGatewayListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: virtual_network_gateways
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/connections/?api-version=2022-01-01:
    get:
      tags:
        - VirtualNetworkGateways
      operationId: VirtualNetworkGateways_ListConnections
      description: Gets all the connections in a virtual network gateway.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualNetworkGatewayName
          in: path
          description: The name of the virtual network gateway.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of VirtualNetworkGatewayConnection resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkGatewayListConnectionsResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: virtual_network_gateways
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/reset/?api-version=2022-01-01:
    post:
      tags:
        - VirtualNetworkGateways
      operationId: VirtualNetworkGateways_Reset
      description: Resets the primary of the virtual network gateway in the specified resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualNetworkGatewayName
          in: path
          description: The name of the virtual network gateway.
          required: true
          schema:
            type: string
        - name: gatewayVip
          in: query
          description: Virtual network gateway vip address supplied to the begin reset of the active-active feature enabled gateway.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation reset the primary of the virtual network gateway.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkGateway'
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: virtual_network_gateways
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/resetvpnclientsharedkey/?api-version=2022-01-01:
    post:
      tags:
        - VirtualNetworkGateways
      operationId: VirtualNetworkGateways_ResetVpnClientSharedKey
      description: Resets the VPN client shared key of the virtual network gateway in the specified resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualNetworkGatewayName
          in: path
          description: The name of the virtual network gateway.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation reset the vpn client shared key of the virtual network gateway.
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: virtual_network_gateways
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/generatevpnclientpackage/?api-version=2022-01-01:
    post:
      tags:
        - VirtualNetworkGateways
      operationId: VirtualNetworkGateways_Generatevpnclientpackage
      description: Generates VPN client package for P2S client of the virtual network gateway in the specified resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualNetworkGatewayName
          in: path
          description: The name of the virtual network gateway.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the generate virtual network gateway VPN client package operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VpnClientParameters'
      responses:
        '200':
          description: VPN client package URL.
          content:
            application/json:
              schema:
                type: string
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: virtual_network_gateways
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/generatevpnprofile/?api-version=2022-01-01:
    post:
      tags:
        - VirtualNetworkGateways
      operationId: VirtualNetworkGateways_GenerateVpnProfile
      description: Generates VPN profile for P2S client of the virtual network gateway in the specified resource group. Used for IKEV2 and radius based authentication.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualNetworkGatewayName
          in: path
          description: The name of the virtual network gateway.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the generate virtual network gateway VPN client package operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VpnClientParameters'
      responses:
        '200':
          description: VPN profile package URL.
          content:
            application/json:
              schema:
                type: string
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: virtual_network_gateways
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getvpnprofilepackageurl/?api-version=2022-01-01:
    post:
      tags:
        - VirtualNetworkGateways
      operationId: VirtualNetworkGateways_GetVpnProfilePackageUrl
      description: Gets pre-generated VPN profile for P2S client of the virtual network gateway in the specified resource group. The profile needs to be generated first using generateVpnProfile.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualNetworkGatewayName
          in: path
          description: The name of the virtual network gateway.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: VPN profile package URL.
          content:
            application/json:
              schema:
                type: string
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: virtual_network_gateways
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getBgpPeerStatus/?api-version=2022-01-01:
    post:
      tags:
        - VirtualNetworkGateways
      operationId: VirtualNetworkGateways_GetBgpPeerStatus
      description: The GetBgpPeerStatus operation retrieves the status of all BGP peers.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualNetworkGatewayName
          in: path
          description: The name of the virtual network gateway.
          required: true
          schema:
            type: string
        - name: peer
          in: query
          description: The IP address of the peer to retrieve the status of.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: List of BGP peer statuses.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BgpPeerStatusListResult'
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: virtual_network_gateways
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/supportedvpndevices/?api-version=2022-01-01:
    post:
      tags:
        - VirtualNetworkGateways
      operationId: VirtualNetworkGateways_SupportedVpnDevices
      description: Gets a xml format representation for supported vpn devices.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualNetworkGatewayName
          in: path
          description: The name of the virtual network gateway.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Xml format representation for supported vpn devices.
          content:
            application/json:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: virtual_network_gateways
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getLearnedRoutes/?api-version=2022-01-01:
    post:
      tags:
        - VirtualNetworkGateways
      operationId: VirtualNetworkGateways_GetLearnedRoutes
      description: This operation retrieves a list of routes the virtual network gateway has learned, including routes learned from BGP peers.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualNetworkGatewayName
          in: path
          description: The name of the virtual network gateway.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: List of advertised BGP routes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayRouteListResult'
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: virtual_network_gateways
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getAdvertisedRoutes/?api-version=2022-01-01:
    post:
      tags:
        - VirtualNetworkGateways
      operationId: VirtualNetworkGateways_GetAdvertisedRoutes
      description: This operation retrieves a list of routes the virtual network gateway is advertising to the specified peer.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualNetworkGatewayName
          in: path
          description: The name of the virtual network gateway.
          required: true
          schema:
            type: string
        - name: peer
          in: query
          description: The IP address of the peer.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: List of learned BGP routes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayRouteListResult'
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: virtual_network_gateways
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/setvpnclientipsecparameters/?api-version=2022-01-01:
    post:
      tags:
        - VirtualNetworkGateways
      operationId: VirtualNetworkGateways_SetVpnclientIpsecParameters
      description: The Set VpnclientIpsecParameters operation sets the vpnclient ipsec policy for P2S client of virtual network gateway in the specified resource group through Network resource provider.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualNetworkGatewayName
          in: path
          description: The name of the virtual network gateway.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the Begin Set vpnclient ipsec parameters of Virtual Network Gateway P2S client operation through Network resource provider.
        required: true
        x-ms-requestBody-name: vpnclientIpsecParams
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VpnClientIPsecParameters'
      responses:
        '200':
          description: Request successful. The operation sets the specified vpnclient ipsec parameters for P2S client of the virtual network gateway.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnClientIPsecParameters'
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: virtual_network_gateways
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getvpnclientipsecparameters/?api-version=2022-01-01:
    post:
      tags:
        - VirtualNetworkGateways
      operationId: VirtualNetworkGateways_GetVpnclientIpsecParameters
      description: The Get VpnclientIpsecParameters operation retrieves information about the vpnclient ipsec policy for P2S client of virtual network gateway in the specified resource group through Network resource provider.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualNetworkGatewayName
          in: path
          description: The virtual network gateway name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns the set vpnclient ipsec parameters for P2S client of VirtualNetworkGateway resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnClientIPsecParameters'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: virtual_network_gateways
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/vpndeviceconfigurationscript/?api-version=2022-01-01:
    post:
      tags:
        - VirtualNetworkGateways
      operationId: VirtualNetworkGateways_VpnDeviceConfigurationScript
      description: Gets a xml format representation for vpn device configuration script.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualNetworkGatewayConnectionName
          in: path
          description: The name of the virtual network gateway connection for which the configuration script is generated.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the generate vpn device script operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VpnDeviceScriptParameters'
      responses:
        '200':
          description: Xml format representation for vpn device configuration script.
          content:
            application/json:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: virtual_network_gateways
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/startPacketCapture/?api-version=2022-01-01:
    post:
      tags:
        - VirtualNetworkGateways
      operationId: VirtualNetworkGateways_StartPacketCapture
      description: Starts packet capture on virtual network gateway in the specified resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualNetworkGatewayName
          in: path
          description: The name of the virtual network gateway.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Virtual network gateway packet capture parameters supplied to start packet capture on gateway.
        required: false
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VpnPacketCaptureStartParameters'
      responses:
        '200':
          description: Request successful. The operation packet capture started on virtual network gateway.
          content:
            application/json:
              schema:
                type: string
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: virtual_network_gateways
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/stopPacketCapture/?api-version=2022-01-01:
    post:
      tags:
        - VirtualNetworkGateways
      operationId: VirtualNetworkGateways_StopPacketCapture
      description: Stops packet capture on virtual network gateway in the specified resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualNetworkGatewayName
          in: path
          description: The name of the virtual network gateway.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Virtual network gateway packet capture parameters supplied to stop packet capture on gateway.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VpnPacketCaptureStopParameters'
      responses:
        '200':
          description: Request successful. The operation packet capture stopped on virtual network gateway.
          content:
            application/json:
              schema:
                type: string
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: virtual_network_gateways
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/?api-version=2022-01-01:
    put:
      tags:
        - VirtualNetworkGatewayConnections
      operationId: VirtualNetworkGatewayConnections_CreateOrUpdate
      description: Creates or updates a virtual network gateway connection in the specified resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualNetworkGatewayConnectionName
          in: path
          description: The name of the virtual network gateway connection.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update virtual network gateway connection operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualNetworkGatewayConnection'
      responses:
        '200':
          description: Update successful. The operation returns the resulting VirtualNetworkGatewayConnection resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkGatewayConnection'
        '201':
          description: Create successful. The operation returns the resulting VirtualNetworkGatewayConnection resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkGatewayConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: virtual_network_gateway_connections
      x-stackQL-verb: insert
    get:
      tags:
        - VirtualNetworkGatewayConnections
      operationId: VirtualNetworkGatewayConnections_Get
      description: Gets the specified virtual network gateway connection by resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualNetworkGatewayConnectionName
          in: path
          description: The name of the virtual network gateway connection.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns the resulting VirtualNetworkGatewayConnection resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkGatewayConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: virtual_network_gateway_connections
      x-stackQL-verb: exec
    delete:
      tags:
        - VirtualNetworkGatewayConnections
      operationId: VirtualNetworkGatewayConnections_Delete
      description: Deletes the specified virtual network Gateway connection.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualNetworkGatewayConnectionName
          in: path
          description: The name of the virtual network gateway connection.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Delete successful.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: virtual_network_gateway_connections
      x-stackQL-verb: delete
    patch:
      tags:
        - VirtualNetworkGatewayConnections
      operationId: VirtualNetworkGatewayConnections_UpdateTags
      description: Updates a virtual network gateway connection tags.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualNetworkGatewayConnectionName
          in: path
          description: The name of the virtual network gateway connection.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to update virtual network gateway connection tags.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Update successful. The operation returns the resulting VirtualNetworkGatewayConnection resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkGatewayConnection'
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: virtual_network_gateway_connections
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey/?api-version=2022-01-01:
    put:
      tags:
        - VirtualNetworkGatewayConnections
      operationId: VirtualNetworkGatewayConnections_SetSharedKey
      description: The Put VirtualNetworkGatewayConnectionSharedKey operation sets the virtual network gateway connection shared key for passed virtual network gateway connection in the specified resource group through Network resource provider.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualNetworkGatewayConnectionName
          in: path
          description: The virtual network gateway connection name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the Begin Set Virtual Network Gateway connection Shared key operation throughNetwork resource provider.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionSharedKey'
      responses:
        '200':
          description: Request successful. The operation returns the resulting ConnectionSharedKey resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionSharedKey'
        '201':
          description: Request successful. The operation returns the resulting ConnectionSharedKey resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionSharedKey'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: virtual_network_gateway_connections
      x-stackQL-verb: exec
    get:
      tags:
        - VirtualNetworkGatewayConnections
      operationId: VirtualNetworkGatewayConnections_GetSharedKey
      description: The Get VirtualNetworkGatewayConnectionSharedKey operation retrieves information about the specified virtual network gateway connection shared key through Network resource provider.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualNetworkGatewayConnectionName
          in: path
          description: The virtual network gateway connection shared key name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of VirtualNetworkGatewayConnection resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionSharedKey'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: virtual_network_gateway_connections
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/?api-version=2022-01-01:
    get:
      tags:
        - VirtualNetworkGatewayConnections
      operationId: VirtualNetworkGatewayConnections_List
      description: The List VirtualNetworkGatewayConnections operation retrieves all the virtual network gateways connections created.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation resets the virtual network gateway connection shared key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkGatewayConnectionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: virtual_network_gateway_connections
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey/reset/?api-version=2022-01-01:
    post:
      tags:
        - VirtualNetworkGatewayConnections
      operationId: VirtualNetworkGatewayConnections_ResetSharedKey
      description: The VirtualNetworkGatewayConnectionResetSharedKey operation resets the virtual network gateway connection shared key for passed virtual network gateway connection in the specified resource group through Network resource provider.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualNetworkGatewayConnectionName
          in: path
          description: The virtual network gateway connection reset shared key Name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the begin reset virtual network gateway connection shared key operation through network resource provider.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionResetSharedKey'
      responses:
        '200':
          description: Request successful. The operation sets the virtual network gateway connection shared key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionResetSharedKey'
        '202':
          description: Request successful. The operation sets the virtual network gateway connection shared key.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: virtual_network_gateway_connections
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/startPacketCapture/?api-version=2022-01-01:
    post:
      tags:
        - VirtualNetworkGatewayConnections
      operationId: VirtualNetworkGatewayConnections_StartPacketCapture
      description: Starts packet capture on virtual network gateway connection in the specified resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualNetworkGatewayConnectionName
          in: path
          description: The name of the virtual network gateway connection.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Virtual network gateway packet capture parameters supplied to start packet capture on gateway connection.
        required: false
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VpnPacketCaptureStartParameters'
      responses:
        '200':
          description: Request successful. The operation packet capture started on virtual network gateway connection.
          content:
            application/json:
              schema:
                type: string
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: virtual_network_gateway_connections
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/stopPacketCapture/?api-version=2022-01-01:
    post:
      tags:
        - VirtualNetworkGatewayConnections
      operationId: VirtualNetworkGatewayConnections_StopPacketCapture
      description: Stops packet capture on virtual network gateway connection in the specified resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualNetworkGatewayConnectionName
          in: path
          description: The name of the virtual network gateway Connection.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Virtual network gateway packet capture parameters supplied to stop packet capture on gateway connection.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VpnPacketCaptureStopParameters'
      responses:
        '200':
          description: Request successful. The operation packet capture stopped on virtual network gateway connection.
          content:
            application/json:
              schema:
                type: string
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: virtual_network_gateway_connections
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/getikesas/?api-version=2022-01-01:
    post:
      tags:
        - VirtualNetworkGatewayConnections
      operationId: VirtualNetworkGatewayConnections_GetIkeSas
      description: Lists IKE Security Associations for the virtual network gateway connection in the specified resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualNetworkGatewayConnectionName
          in: path
          description: The name of the virtual network gateway Connection.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation getikesas completed on virtual network gateway connection.
          content:
            application/json:
              schema:
                type: string
        '202':
          description: Accepted and the operation GetIkeSas will complete asynchronously.
        default:
          description: The operation GetIkeSas could not be completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: virtual_network_gateway_connections
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/resetconnection/?api-version=2022-01-01:
    post:
      tags:
        - VirtualNetworkGatewayConnections
      operationId: VirtualNetworkGatewayConnections_ResetConnection
      description: Resets the virtual network gateway connection specified.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualNetworkGatewayConnectionName
          in: path
          description: The name of the virtual network gateway Connection.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: The operation resetconnection could not be completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: virtual_network_gateway_connections
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}/?api-version=2022-01-01:
    put:
      tags:
        - LocalNetworkGateways
      operationId: LocalNetworkGateways_CreateOrUpdate
      description: Creates or updates a local network gateway in the specified resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: localNetworkGatewayName
          in: path
          description: The name of the local network gateway.
          required: true
          schema:
            minLength: 1
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update local network gateway operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocalNetworkGateway'
      responses:
        '200':
          description: Update successful. The operation returns the resulting LocalNetworkGateway resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalNetworkGateway'
        '201':
          description: Create successful. The operation returns the resulting LocalNetworkGateway resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalNetworkGateway'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: local_network_gateways
      x-stackQL-verb: insert
    get:
      tags:
        - LocalNetworkGateways
      operationId: LocalNetworkGateways_Get
      description: Gets the specified local network gateway in a resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: localNetworkGatewayName
          in: path
          description: The name of the local network gateway.
          required: true
          schema:
            minLength: 1
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns the resulting LocalNetworkGateway resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalNetworkGateway'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: local_network_gateways
      x-stackQL-verb: exec
    delete:
      tags:
        - LocalNetworkGateways
      operationId: LocalNetworkGateways_Delete
      description: Deletes the specified local network gateway.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: localNetworkGatewayName
          in: path
          description: The name of the local network gateway.
          required: true
          schema:
            minLength: 1
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Delete successful.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: local_network_gateways
      x-stackQL-verb: delete
    patch:
      tags:
        - LocalNetworkGateways
      operationId: LocalNetworkGateways_UpdateTags
      description: Updates a local network gateway tags.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: localNetworkGatewayName
          in: path
          description: The name of the local network gateway.
          required: true
          schema:
            minLength: 1
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to update local network gateway tags.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Update successful. The operation returns the resulting LocalNetworkGateway resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalNetworkGateway'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: local_network_gateways
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/?api-version=2022-01-01:
    get:
      tags:
        - LocalNetworkGateways
      operationId: LocalNetworkGateways_List
      description: Gets all the local network gateways in a resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of LocalNetworkGateway resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalNetworkGatewayListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: local_network_gateways
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getVpnClientConnectionHealth/?api-version=2022-01-01:
    post:
      tags:
        - VirtualNetworkGateways
      operationId: VirtualNetworkGateways_GetVpnclientConnectionHealth
      description: Get VPN client connection health detail per P2S client connection of the virtual network gateway in the specified resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualNetworkGatewayName
          in: path
          description: The name of the virtual network gateway.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: List of VPN client connection health details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnClientConnectionHealthDetailListResult'
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: virtual_network_gateways
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/disconnectVirtualNetworkGatewayVpnConnections/?api-version=2022-01-01:
    post:
      tags:
        - VirtualNetworkGateways
      operationId: VirtualNetworkGateways_DisconnectVirtualNetworkGatewayVpnConnections
      description: Disconnect vpn connections of virtual network gateway in the specified resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualNetworkGatewayName
          in: path
          description: The name of the virtual network gateway.
          required: true
          schema:
            type: string
      requestBody:
        description: The parameters are supplied to disconnect vpn connections.
        required: true
        x-ms-requestBody-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/P2SVpnConnectionRequest'
      responses:
        '200':
          description: Request successful. The operation disconnects the requested vpn connections.
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: virtual_network_gateways
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/natRules/{natRuleName}/?api-version=2022-01-01:
    get:
      operationId: VirtualNetworkGatewayNatRules_Get
      description: Retrieves the details of a nat rule.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the Virtual Network Gateway.
          required: true
          schema:
            type: string
        - name: virtualNetworkGatewayName
          in: path
          description: The name of the gateway.
          required: true
          schema:
            type: string
        - name: natRuleName
          in: path
          description: The name of the nat rule.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. Returns the details of the nat rule.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkGatewayNatRule'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: virtual_network_gateway_nat_rules
      x-stackQL-verb: exec
    put:
      operationId: VirtualNetworkGatewayNatRules_CreateOrUpdate
      description: Creates a nat rule to a scalable virtual network gateway if it doesn't exist else updates the existing nat rules.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the Virtual Network Gateway.
          required: true
          schema:
            type: string
        - name: virtualNetworkGatewayName
          in: path
          description: The name of the gateway.
          required: true
          schema:
            type: string
        - name: natRuleName
          in: path
          description: The name of the nat rule.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to create or Update a Nat Rule.
        required: true
        x-ms-requestBody-name: NatRuleParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualNetworkGatewayNatRule'
      responses:
        '200':
          description: Request successful. Returns the details of the nat rule created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkGatewayNatRule'
        '201':
          description: Request successful. Returns the details of the nat rule created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkGatewayNatRule'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: virtual_network_gateway_nat_rules
      x-stackQL-verb: insert
    delete:
      operationId: VirtualNetworkGatewayNatRules_Delete
      description: Deletes a nat rule.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the Virtual Network Gateway.
          required: true
          schema:
            type: string
        - name: virtualNetworkGatewayName
          in: path
          description: The name of the gateway.
          required: true
          schema:
            type: string
        - name: natRuleName
          in: path
          description: The name of the nat rule.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. Nat Rule deleted.
        '202':
          description: Request received successfully. Nat Rule deletion is in progress; follow the Location header to poll for final outcome.
        '204':
          description: No nat rules exist by the name provided.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: virtual_network_gateway_nat_rules
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/natRules/?api-version=2022-01-01:
    get:
      operationId: VirtualNetworkGatewayNatRules_ListByVirtualNetworkGateway
      description: Retrieves all nat rules for a particular virtual network gateway.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of the virtual network gateway.
          required: true
          schema:
            type: string
        - name: virtualNetworkGatewayName
          in: path
          description: The name of the gateway.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. Returns all Nat rules for a virtual network gateway.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVirtualNetworkGatewayNatRulesResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: virtual_network_gateway_nat_rules
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/IpAllocations/{ipAllocationName}/?api-version=2022-01-01:
    delete:
      tags:
        - IpAllocations
      operationId: IpAllocations_Delete
      description: Deletes the specified IpAllocation.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: ipAllocationName
          in: path
          description: The name of the IpAllocation.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Delete successful.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: ip_allocations
      x-stackQL-verb: delete
    get:
      tags:
        - IpAllocations
      operationId: IpAllocations_Get
      description: Gets the specified IpAllocation by resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: ipAllocationName
          in: path
          description: The name of the IpAllocation.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $expand
          in: query
          description: Expands referenced resources.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request successful. The operation returns the resulting IpAllocation resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpAllocation'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: ip_allocations
      x-stackQL-verb: exec
    put:
      tags:
        - IpAllocations
      operationId: IpAllocations_CreateOrUpdate
      description: Creates or updates an IpAllocation in the specified resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: ipAllocationName
          in: path
          description: The name of the IpAllocation.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update virtual network operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IpAllocation'
      responses:
        '200':
          description: Update successful. The operation returns the resulting IpAllocation resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpAllocation'
        '201':
          description: Create successful. The operation returns the resulting IpAllocation resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpAllocation'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: ip_allocations
      x-stackQL-verb: insert
    patch:
      tags:
        - IpAllocations
      operationId: IpAllocations_UpdateTags
      description: Updates a IpAllocation tags.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: ipAllocationName
          in: path
          description: The name of the IpAllocation.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to update IpAllocation tags.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Update successful. The operation returns the resulting IpAllocation resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpAllocation'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: ip_allocations
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/IpAllocations/?api-version=2022-01-01:
    get:
      tags:
        - IpAllocations
      operationId: IpAllocations_List
      description: Gets all IpAllocations in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of IpAllocation resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpAllocationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: ip_allocations
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/IpAllocations/?api-version=2022-01-01:
    get:
      tags:
        - IpAllocations
      operationId: IpAllocations_ListByResourceGroup
      description: Gets all IpAllocations in a resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of IpAllocation resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpAllocationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: ip_allocations
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ipGroups/{ipGroupsName}/?api-version=2022-01-01:
    get:
      tags:
        - IpGroups
      operationId: IpGroups_Get
      description: Gets the specified ipGroups.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: ipGroupsName
          in: path
          description: The name of the ipGroups.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $expand
          in: query
          description: Expands resourceIds (of Firewalls/Network Security Groups etc.) back referenced by the IpGroups resource.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request successful. The operation returns the resulting IpGroups resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpGroup'
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-stackQL-resource: ip_groups
      x-stackQL-verb: exec
    put:
      tags:
        - IpGroups
      operationId: IpGroups_CreateOrUpdate
      description: Creates or updates an ipGroups in a specified resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: ipGroupsName
          in: path
          description: The name of the ipGroups.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update IpGroups operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IpGroup'
      responses:
        '200':
          description: Request successful. The operation returns the resulting ipGroups resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpGroup'
        '201':
          description: Create successful. The operation returns the resulting ipGroups resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpGroup'
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: ip_groups
      x-stackQL-verb: insert
    patch:
      tags:
        - IpGroups
      operationId: IpGroups_UpdateGroups
      description: Updates tags of an IpGroups resource.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: ipGroupsName
          in: path
          description: The name of the ipGroups.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the update ipGroups operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Request successful. The operation returns the resulting ipGroups resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpGroup'
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-stackQL-resource: ip_groups
      x-stackQL-verb: exec
    delete:
      tags:
        - IpGroups
      operationId: IpGroups_Delete
      description: Deletes the specified ipGroups.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: ipGroupsName
          in: path
          description: The name of the ipGroups.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Delete successful.
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: ip_groups
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ipGroups/?api-version=2022-01-01:
    get:
      tags:
        - IpGroups
      operationId: IpGroups_ListByResourceGroup
      description: Gets all IpGroups in a resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of ipGroups resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpGroupListResult'
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: ip_groups
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/ipGroups/?api-version=2022-01-01:
    get:
      tags:
        - IpGroups
      operationId: IpGroups_List
      description: Gets all IpGroups in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of ipGroups resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpGroupListResult'
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: ip_groups
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/?api-version=2022-01-01:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/NetworkManagerNameParameter'
    get:
      tags:
        - NetworkManagers
      operationId: NetworkManagers_Get
      description: Gets the specified Network Manager.
      responses:
        '200':
          description: OK - Returns information about the network manager.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkManager'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: managers
      x-stackQL-verb: exec
    put:
      tags:
        - NetworkManagers
      operationId: NetworkManagers_CreateOrUpdate
      description: Creates or updates a Network Manager.
      requestBody:
        description: Parameters supplied to specify which network manager is.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkManager'
      responses:
        '200':
          description: Updated - Returns information about the network manager.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkManager'
        '201':
          description: Created - Returns information about the network manager.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkManager'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: managers
      x-stackQL-verb: insert
    delete:
      tags:
        - NetworkManagers
      operationId: NetworkManagers_Delete
      parameters:
        - $ref: '#/components/parameters/ForceDeleteParameter'
      description: Deletes a network manager.
      responses:
        '200':
          description: Delete Succeed.
        '202':
          description: Accepted and will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
              description: The URL of the resource used to check the status of the asynchronous operation.
        '204':
          description: Request successful. The resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: managers
      x-stackQL-verb: delete
    patch:
      tags:
        - NetworkManagers
      operationId: NetworkManagers_Patch
      description: Patch NetworkManager.
      requestBody:
        description: Parameters supplied to specify which network manager is.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchObject'
      responses:
        '200':
          description: Updated - Returns information about the network manager.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkManager'
        default:
          description: Resource Provider error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: managers
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/commit/?api-version=2022-01-01:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/NetworkManagerNameParameter'
    post:
      tags:
        - NetworkManagers
      operationId: NetworkManagerCommits_Post
      description: Post a Network Manager Commit.
      requestBody:
        description: Parameters supplied to specify which Managed Network commit is.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkManagerCommit'
      responses:
        '200':
          description: Succeed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkManagerCommit'
        '202':
          description: Accepted and the operation will complete asynchronously
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkManagerCommit'
          headers:
            Location:
              schema:
                type: string
              description: The URL of the resource used to check the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: manager_commits
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/listDeploymentStatus/?api-version=2022-01-01:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/NetworkManagerNameParameter'
    post:
      tags:
        - NetworkManagers
      operationId: NetworkManagerDeploymentStatus_List
      description: Post to List of Network Manager Deployment Status.
      requestBody:
        description: Parameters supplied to specify which Managed Network deployment status is.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkManagerDeploymentStatusParameter'
      responses:
        '200':
          description: OK - Returns a list of deployment status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkManagerDeploymentStatusListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: manager_deployment_status
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/networkManagers/?api-version=2022-01-01:
    get:
      tags:
        - NetworkManagers
      operationId: NetworkManagers_ListBySubscription
      description: List all network managers in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ListTopParameter'
        - $ref: '#/components/parameters/ListSkipTokenParameter'
      responses:
        '200':
          description: OK - Returns information about the network managers.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkManagerListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: managers
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/?api-version=2022-01-01:
    get:
      tags:
        - NetworkManagers
      operationId: NetworkManagers_List
      description: List network managers in a resource group.
      x-ms-pageable:
        nextLinkName: nextLink
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ListTopParameter'
        - $ref: '#/components/parameters/ListSkipTokenParameter'
      responses:
        '200':
          description: OK - Returns a list of network managers.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkManagerListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: managers
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies/?api-version=2022-01-01:
    get:
      tags:
        - WebApplicationFirewallPolicies
      description: Lists all of the protection policies within a resource group.
      operationId: WebApplicationFirewallPolicies_List
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApplicationFirewallPolicyListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: web_application_firewall_policies
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies/?api-version=2022-01-01:
    get:
      tags:
        - WebApplicationFirewallPolicies
      description: Gets all the WAF policies in a subscription.
      operationId: WebApplicationFirewallPolicies_ListAll
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApplicationFirewallPolicyListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: web_application_firewall_policies
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies/{policyName}/?api-version=2022-01-01:
    get:
      tags:
        - WebApplicationFirewallPolicies
      description: Retrieve protection policy with specified name within a resource group.
      operationId: WebApplicationFirewallPolicies_Get
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: policyName
          in: path
          description: The name of the policy.
          required: true
          schema:
            maxLength: 128
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApplicationFirewallPolicy'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: web_application_firewall_policies
      x-stackQL-verb: exec
    put:
      tags:
        - WebApplicationFirewallPolicies
      description: Creates or update policy with specified rule set name within a resource group.
      operationId: WebApplicationFirewallPolicies_CreateOrUpdate
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: policyName
          in: path
          description: The name of the policy.
          required: true
          schema:
            maxLength: 128
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Policy to be created.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApplicationFirewallPolicy'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApplicationFirewallPolicy'
        '201':
          description: Created. The request has been fulfilled and a new protection policy has been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApplicationFirewallPolicy'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: web_application_firewall_policies
      x-stackQL-verb: insert
    delete:
      tags:
        - WebApplicationFirewallPolicies
      description: Deletes Policy.
      operationId: WebApplicationFirewallPolicies_Delete
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: policyName
          in: path
          description: The name of the policy.
          required: true
          schema:
            maxLength: 128
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously.
        '204':
          description: No Content. The request has been accepted but the policy was not found.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: web_application_firewall_policies
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/natGateways/{natGatewayName}/?api-version=2022-01-01:
    delete:
      tags:
        - NatGateways
      operationId: NatGateways_Delete
      description: Deletes the specified nat gateway.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: natGatewayName
          in: path
          description: The name of the nat gateway.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Request successful. Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: nat_gateways
      x-stackQL-verb: delete
    get:
      tags:
        - NatGateways
      operationId: NatGateways_Get
      description: Gets the specified nat gateway in a specified resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: natGatewayName
          in: path
          description: The name of the nat gateway.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $expand
          in: query
          description: Expands referenced resources.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request successful. The operation returns the resulting NatGateway resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NatGateway'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: nat_gateways
      x-stackQL-verb: exec
    put:
      tags:
        - NatGateways
      operationId: NatGateways_CreateOrUpdate
      description: Creates or updates a nat gateway.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: natGatewayName
          in: path
          description: The name of the nat gateway.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update nat gateway operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NatGateway'
      responses:
        '200':
          description: Update successful. The operation returns the resulting NatGateway resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NatGateway'
        '201':
          description: Create successful. The operation returns the resulting NatGateway resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NatGateway'
        '202':
          description: Accepted and the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: nat_gateways
      x-stackQL-verb: insert
    patch:
      tags:
        - NatGateways
      operationId: NatGateways_UpdateTags
      description: Updates nat gateway tags.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: natGatewayName
          in: path
          description: The name of the nat gateway.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to update nat gateway tags.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Update successful. The operation returns the resulting NatGateway resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NatGateway'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: nat_gateways
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/natGateways/?api-version=2022-01-01:
    get:
      tags:
        - NatGateways
      operationId: NatGateways_ListAll
      description: Gets all the Nat Gateways in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of NatGateway resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NatGatewayListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: nat_gateways
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/natGateways/?api-version=2022-01-01:
    get:
      tags:
        - NatGateways
      operationId: NatGateways_List
      description: Gets all nat gateways in a resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of NatGateway resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NatGatewayListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: nat_gateways
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIpPrefixName}/?api-version=2022-01-01:
    delete:
      tags:
        - PublicIPPrefixes
      operationId: PublicIPPrefixes_Delete
      description: Deletes the specified public IP prefix.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: publicIpPrefixName
          in: path
          description: The name of the PublicIpPrefix.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Request successful. Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: public_ip_prefixes
      x-stackQL-verb: delete
    get:
      tags:
        - PublicIPPrefixes
      operationId: PublicIPPrefixes_Get
      description: Gets the specified public IP prefix in a specified resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: publicIpPrefixName
          in: path
          description: The name of the public IP prefix.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $expand
          in: query
          description: Expands referenced resources.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request successful. The operation returns the resulting PublicIPPrefix resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicIPPrefix'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: public_ip_prefixes
      x-stackQL-verb: exec
    put:
      tags:
        - PublicIPPrefixes
      operationId: PublicIPPrefixes_CreateOrUpdate
      description: Creates or updates a static or dynamic public IP prefix.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: publicIpPrefixName
          in: path
          description: The name of the public IP prefix.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update public IP prefix operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicIPPrefix'
      responses:
        '200':
          description: Update successful. The operation returns the resulting PublicIPPrefix resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicIPPrefix'
        '201':
          description: Create successful. The operation returns the resulting PublicIPPrefix resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicIPPrefix'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: public_ip_prefixes
      x-stackQL-verb: insert
    patch:
      tags:
        - PublicIPPrefixes
      operationId: PublicIPPrefixes_UpdateTags
      description: Updates public IP prefix tags.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: publicIpPrefixName
          in: path
          description: The name of the public IP prefix.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to update public IP prefix tags.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Update successful. The operation returns the resulting PublicIPPrefix resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicIPPrefix'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: public_ip_prefixes
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/publicIPPrefixes/?api-version=2022-01-01:
    get:
      tags:
        - PublicIPPrefixes
      operationId: PublicIPPrefixes_ListAll
      description: Gets all the public IP prefixes in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of PublicIPPrefix resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicIPPrefixListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: public_ip_prefixes
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/?api-version=2022-01-01:
    get:
      tags:
        - PublicIPPrefixes
      operationId: PublicIPPrefixes_List
      description: Gets all public IP prefixes in a resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of PublicIPPrefix resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicIPPrefixListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: public_ip_prefixes
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}/?api-version=2022-01-01:
    delete:
      tags:
        - NetworkVirtualAppliances
      operationId: NetworkVirtualAppliances_Delete
      description: Deletes the specified Network Virtual Appliance.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkVirtualApplianceName
          in: path
          description: The name of Network Virtual Appliance.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Request successful. Resource with the specified name does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: virtual_appliances
      x-stackQL-verb: delete
    get:
      tags:
        - NetworkVirtualAppliances
      operationId: NetworkVirtualAppliances_Get
      description: Gets the specified Network Virtual Appliance.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkVirtualApplianceName
          in: path
          description: The name of Network Virtual Appliance.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $expand
          in: query
          description: Expands referenced resources.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request successful. The operation returns a Network Virtual Appliance resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkVirtualAppliance'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: virtual_appliances
      x-stackQL-verb: exec
    patch:
      tags:
        - NetworkVirtualAppliances
      operationId: NetworkVirtualAppliances_UpdateTags
      description: Updates a Network Virtual Appliance.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The resource group name of Network Virtual Appliance.
          required: true
          schema:
            type: string
        - name: networkVirtualApplianceName
          in: path
          description: The name of Network Virtual Appliance being updated.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to Update Network Virtual Appliance Tags.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Request successful. Returns the details of Network Virtual Appliance updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkVirtualAppliance'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: virtual_appliances
      x-stackQL-verb: exec
    put:
      tags:
        - NetworkVirtualAppliances
      operationId: NetworkVirtualAppliances_CreateOrUpdate
      description: Creates or updates the specified Network Virtual Appliance.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkVirtualApplianceName
          in: path
          description: The name of Network Virtual Appliance.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update Network Virtual Appliance.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkVirtualAppliance'
      responses:
        '200':
          description: Request successful. The operation returns the resulting Network Virtual Appliance resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkVirtualAppliance'
        '201':
          description: Request received successfully. The operation returns the resulting Network Virtual Appliance resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkVirtualAppliance'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: virtual_appliances
      x-stackQL-verb: insert
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/?api-version=2022-01-01:
    get:
      tags:
        - NetworkVirtualAppliances
      operationId: NetworkVirtualAppliances_ListByResourceGroup
      description: Lists all Network Virtual Appliances in a resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success. The operation returns a list of Network Virtual Appliance resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkVirtualApplianceListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: virtual_appliances
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/networkVirtualAppliances/?api-version=2022-01-01:
    get:
      tags:
        - NetworkVirtualAppliances
      operationId: NetworkVirtualAppliances_List
      description: Gets all Network Virtual Appliances in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success. The operation returns a list of Network Virtual Appliance resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkVirtualApplianceListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: virtual_appliances
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}/virtualApplianceSites/{siteName}/?api-version=2022-01-01:
    delete:
      tags:
        - VirtualApplianceSites
      operationId: VirtualApplianceSites_Delete
      description: Deletes the specified site from a Virtual Appliance.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkVirtualApplianceName
          in: path
          description: The name of the Network Virtual Appliance.
          required: true
          schema:
            type: string
        - name: siteName
          in: path
          description: The name of the site.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Request successful. Resource with the specified name does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: virtual_appliance_sites
      x-stackQL-verb: delete
    get:
      tags:
        - VirtualApplianceSites
      operationId: VirtualApplianceSites_Get
      description: Gets the specified Virtual Appliance Site.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkVirtualApplianceName
          in: path
          description: The name of the Network Virtual Appliance.
          required: true
          schema:
            type: string
        - name: siteName
          in: path
          description: The name of the site.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a Network Virtual Appliance Site resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualApplianceSite'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: virtual_appliance_sites
      x-stackQL-verb: exec
    put:
      tags:
        - VirtualApplianceSites
      operationId: VirtualApplianceSites_CreateOrUpdate
      description: Creates or updates the specified Network Virtual Appliance Site.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkVirtualApplianceName
          in: path
          description: The name of the Network Virtual Appliance.
          required: true
          schema:
            type: string
        - name: siteName
          in: path
          description: The name of the site.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update Network Virtual Appliance Site operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualApplianceSite'
      responses:
        '200':
          description: Request successful. The operation returns the resulting Network Virtual Appliance Site resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualApplianceSite'
        '201':
          description: Request received successfully. The operation returns the resulting Network Virtual Appliance Site resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualApplianceSite'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: virtual_appliance_sites
      x-stackQL-verb: insert
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}/virtualApplianceSites/?api-version=2022-01-01:
    get:
      tags:
        - VirtualApplianceSites
      operationId: VirtualApplianceSites_List
      description: Lists all Network Virtual Appliance Sites in a Network Virtual Appliance resource.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkVirtualApplianceName
          in: path
          description: The name of the Network Virtual Appliance.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success. The operation returns a list of Network Virtual Appliance site resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkVirtualApplianceSiteListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: virtual_appliance_sites
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/networkVirtualApplianceSkus/?api-version=2022-01-01:
    get:
      tags:
        - VirtualApplianceSkus
      operationId: VirtualApplianceSkus_List
      description: List all SKUs available for a virtual appliance.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns the list of all virtual appliance skus.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkVirtualApplianceSkuListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: virtual_appliance_skus
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/networkVirtualApplianceSkus/{skuName}/?api-version=2022-01-01:
    get:
      tags:
        - VirtualApplianceSkus
      operationId: VirtualApplianceSkus_Get
      description: Retrieves a single available sku for network virtual appliance.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: skuName
          in: path
          description: Name of the Sku.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successful. The operation returns the requested NetworkVirtualAppliance sku information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkVirtualApplianceSku'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: virtual_appliance_skus
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}/inboundSecurityRules/{ruleCollectionName}/?api-version=2022-01-01:
    put:
      operationId: InboundSecurityRule_CreateOrUpdate
      description: Creates or updates the specified Network Virtual Appliance Inbound Security Rules.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: networkVirtualApplianceName
          in: path
          description: The name of the Network Virtual Appliance.
          required: true
          schema:
            type: string
        - name: ruleCollectionName
          in: path
          description: The name of security rule collection.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update Network Virtual Appliance Inbound Security Rules operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboundSecurityRule'
      responses:
        '200':
          description: Request successful. The operation returns the resulting Network Virtual Appliance Inbound Security Rules resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundSecurityRule'
        '201':
          description: Request received successfully. The operation returns the resulting Network Virtual Appliance Inbound Security Rules resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundSecurityRule'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: inbound_security_rule
      x-stackQL-verb: insert
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/virtualNetworkAvailableEndpointServices/?api-version=2022-01-01:
    get:
      operationId: AvailableEndpointServices_List
      description: List what values of endpoint services are available for use.
      parameters:
        - name: location
          in: path
          description: The location to check available endpoint services.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. Returns list of available endpoint services.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointServicesListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: available_endpoint_services
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/publicipaddresses/?api-version=2022-01-01:
    get:
      operationId: PublicIPAddresses_ListCloudServicePublicIPAddresses
      description: Gets information about all public IP addresses on a cloud service level.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: cloudServiceName
          in: path
          description: The name of the cloud service.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionVmssParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of PublicIPInterface resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicIPAddressListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: public_ip_addresses
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/roleInstances/{roleInstanceName}/networkInterfaces/{networkInterfaceName}/ipconfigurations/{ipConfigurationName}/publicipaddresses/?api-version=2022-01-01:
    get:
      operationId: PublicIPAddresses_ListCloudServiceRoleInstancePublicIPAddresses
      description: Gets information about all public IP addresses in a role instance IP configuration in a cloud service.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: cloudServiceName
          in: path
          description: The name of the cloud service.
          required: true
          schema:
            type: string
        - name: roleInstanceName
          in: path
          description: The name of role instance.
          required: true
          schema:
            type: string
        - name: networkInterfaceName
          in: path
          description: The network interface name.
          required: true
          schema:
            type: string
        - name: ipConfigurationName
          in: path
          description: The IP configuration name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionVmssParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of PublicIPAddress resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicIPAddressListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: public_ip_addresses
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/roleInstances/{roleInstanceName}/networkInterfaces/{networkInterfaceName}/ipconfigurations/{ipConfigurationName}/publicipaddresses/{publicIpAddressName}/?api-version=2022-01-01:
    get:
      operationId: PublicIPAddresses_GetCloudServicePublicIPAddress
      description: Get the specified public IP address in a cloud service.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: cloudServiceName
          in: path
          description: The name of the cloud service.
          required: true
          schema:
            type: string
        - name: roleInstanceName
          in: path
          description: The role instance name.
          required: true
          schema:
            type: string
        - name: networkInterfaceName
          in: path
          description: The name of the network interface.
          required: true
          schema:
            type: string
        - name: ipConfigurationName
          in: path
          description: The name of the IP configuration.
          required: true
          schema:
            type: string
        - name: publicIpAddressName
          in: path
          description: The name of the public IP Address.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionVmssParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $expand
          in: query
          description: Expands referenced resources.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request successful. The operation returns the resulting PublicIPAddress resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicIPAddress'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: public_ip_addresses
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/securityPartnerProviders/{securityPartnerProviderName}/?api-version=2022-01-01:
    delete:
      tags:
        - SecurityPartnerProviders
      operationId: SecurityPartnerProviders_Delete
      description: Deletes the specified Security Partner Provider.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: securityPartnerProviderName
          in: path
          description: The name of the Security Partner Provider.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Request successful. Resource with the specified name does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: security_partner_providers
      x-stackQL-verb: delete
    get:
      tags:
        - SecurityPartnerProviders
      operationId: SecurityPartnerProviders_Get
      description: Gets the specified Security Partner Provider.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: securityPartnerProviderName
          in: path
          description: The name of the Security Partner Provider.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a SecurityPartnerProvider resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityPartnerProvider'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: security_partner_providers
      x-stackQL-verb: exec
    put:
      tags:
        - SecurityPartnerProviders
      operationId: SecurityPartnerProviders_CreateOrUpdate
      description: Creates or updates the specified Security Partner Provider.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: securityPartnerProviderName
          in: path
          description: The name of the Security Partner Provider.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update Security Partner Provider operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityPartnerProvider'
      responses:
        '200':
          description: Update successful. The operation returns the resulting SecurityPartnerProvider resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityPartnerProvider'
        '201':
          description: Create successful. The operation returns the resulting SecurityPartnerProvider resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityPartnerProvider'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: security_partner_providers
      x-stackQL-verb: insert
    patch:
      tags:
        - SecurityPartnerProviders
      operationId: SecurityPartnerProviders_UpdateTags
      description: Updates tags of a Security Partner Provider resource.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: securityPartnerProviderName
          in: path
          description: The name of the Security Partner Provider.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to update Security Partner Provider tags.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Update successful. The operation returns the resulting SecurityPartnerProvider resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityPartnerProvider'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: security_partner_providers
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/securityPartnerProviders/?api-version=2022-01-01:
    get:
      tags:
        - SecurityPartnerProviders
      operationId: SecurityPartnerProviders_ListByResourceGroup
      description: Lists all Security Partner Providers in a resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success. The operation returns a list of SecurityPartnerProvider resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityPartnerProviderListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: security_partner_providers
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/securityPartnerProviders/?api-version=2022-01-01:
    get:
      tags:
        - SecurityPartnerProviders
      operationId: SecurityPartnerProviders_List
      description: Gets all the Security Partner Providers in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success. The operation returns a list of SecurityPartnerProvider resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityPartnerProviderListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: security_partner_providers
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/expressRouteProviderPorts/?api-version=2022-01-01:
    get:
      tags:
        - ExpressRouteProviderPorts
      operationId: ExpressRouteProviderPortsLocation_List
      description: Retrieves all the ExpressRouteProviderPorts in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $filter
          in: query
          description: The filter to apply on the operation. For example, you can use $filter=location eq '{state}'.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request successful. The operation returns a list of ExpressRouteProviderPort resources at a location. If there are no ports for the provider, an empty list is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteProviderPortListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: express_route_provider_ports_location
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/expressRouteProviderPorts/{providerport}/?api-version=2022-01-01:
    get:
      tags:
        - ExpressRouteProviderPorts
      operationId: ExpressRouteProviderPort
      description: Retrieves detail of a provider port.
      parameters:
        - name: providerport
          in: path
          description: The name of the provider port.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns detail of individual provider port resources. If there is no port, an empty result is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressRouteProviderPort'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: express_route_provider_ports
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dscpConfigurations/{dscpConfigurationName}/?api-version=2022-01-01:
    put:
      tags:
        - DscpConfiguration
      operationId: DscpConfiguration_CreateOrUpdate
      description: Creates or updates a DSCP Configuration.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: dscpConfigurationName
          in: path
          description: The name of the resource.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update dscp configuration operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DscpConfiguration'
      responses:
        '200':
          description: Update successful. The operation returns the resulting DscpConfiguration resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DscpConfiguration'
        '201':
          description: Create successful. The operation returns the resulting DscpConfiguration resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DscpConfiguration'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: dscp_configuration
      x-stackQL-verb: insert
    delete:
      tags:
        - DscpConfiguration
      operationId: DscpConfiguration_Delete
      description: Deletes a DSCP Configuration.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: dscpConfigurationName
          in: path
          description: The name of the resource.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Request successful. Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: dscp_configuration
      x-stackQL-verb: delete
    get:
      tags:
        - DscpConfiguration
      operationId: DscpConfiguration_Get
      description: Gets a DSCP Configuration.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: dscpConfigurationName
          in: path
          description: The name of the resource.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns the resulting DSCP Configuration resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DscpConfiguration'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: dscp_configuration
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dscpConfigurations/?api-version=2022-01-01:
    get:
      tags:
        - DscpConfigurations
      operationId: DscpConfiguration_List
      description: Gets a DSCP Configuration.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns the resulting DSCP Configuration resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DscpConfigurationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: dscp_configuration
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/dscpConfigurations/?api-version=2022-01-01:
    get:
      tags:
        - DscpConfigurations
      operationId: DscpConfiguration_ListAll
      description: Gets all dscp configurations in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of NetworkInterface resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DscpConfigurationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: dscp_configuration
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/azureFirewallFqdnTags/?api-version=2022-01-01:
    get:
      tags:
        - AzureFirewallFqdnTags
      operationId: AzureFirewallFqdnTags_ListAll
      description: Gets all the Azure Firewall FQDN Tags in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success. The operation returns a list of Azure Firewall FQDN Tag resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureFirewallFqdnTagListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: azure_firewall_fqdn_tags
      x-stackQL-verb: select
