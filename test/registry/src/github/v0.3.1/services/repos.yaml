paths:
  /orgs/{org}/repos:
    get:
      summary: List organization repositories
      description: Lists repositories for the specified organization.
      tags:
        - repos
      operationId: repos/list-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#list-organization-repositories
      parameters:
        - $ref: '#/components/parameters/org'
        - name: type
          description: 'Specifies the types of repositories you want returned. Can be one of `all`, `public`, `private`, `forks`, `sources`, `member`, `internal`. Note: For GitHub AE, can be one of `all`, `private`, `forks`, `sources`, `member`, `internal`. Default: `all`. If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, `type` can also be `internal`. However, the `internal` value is not yet supported when a GitHub App calls this API with an installation access token.'
          in: query
          required: false
          schema:
            type: string
            enum:
              - all
              - public
              - private
              - forks
              - sources
              - member
              - internal
        - name: sort
          description: Can be one of `created`, `updated`, `pushed`, `full_name`.
          in: query
          required: false
          schema:
            type: string
            enum:
              - created
              - updated
              - pushed
              - full_name
            default: created
        - name: direction
          description: 'Can be one of `asc` or `desc`. Default: when using `full_name`: `asc`, otherwise `desc`'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/minimal-repository'
              examples:
                default:
                  $ref: '#/components/examples/minimal-repository-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: null
    post:
      summary: Create an organization repository
      description: |-
        Creates a new repository in the specified organization. The authenticated user must be a member of the organization.

        **OAuth scope requirements**

        When using [OAuth](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), authorizations must include:

        *   `public_repo` scope or `repo` scope to create a public repository. Note: For GitHub AE, use `repo` scope to create an internal repository.
        *   `repo` scope to create a private repository
      tags:
        - repos
      operationId: repos/create-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#create-an-organization-repository
      parameters:
        - $ref: '#/components/parameters/org'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the repository.
                description:
                  type: string
                  description: A short description of the repository.
                homepage:
                  type: string
                  description: A URL with more information about the repository.
                private:
                  type: boolean
                  description: Whether the repository is private.
                  default: false
                visibility:
                  type: string
                  description: 'Can be `public` or `private`. If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, `visibility` can also be `internal`. Note: For GitHub Enterprise Server and GitHub AE, this endpoint will only list repositories available to all users on the enterprise. For more information, see "[Creating an internal repository](https://docs.github.com/en/github/creating-cloning-and-archiving-repositories/about-repository-visibility#about-internal-repositories)" in the GitHub Help documentation.'
                  enum:
                    - public
                    - private
                    - internal
                has_issues:
                  type: boolean
                  description: Either `true` to enable issues for this repository or `false` to disable them.
                  default: true
                has_projects:
                  type: boolean
                  description: Either `true` to enable projects for this repository or `false` to disable them. **Note:** If you're creating a repository in an organization that has disabled repository projects, the default is `false`, and if you pass `true`, the API returns an error.
                  default: true
                has_wiki:
                  type: boolean
                  description: Either `true` to enable the wiki for this repository or `false` to disable it.
                  default: true
                is_template:
                  type: boolean
                  description: Either `true` to make this repo available as a template repository or `false` to prevent it.
                  default: false
                team_id:
                  type: integer
                  description: The id of the team that will be granted access to this repository. This is only valid when creating a repository in an organization.
                auto_init:
                  type: boolean
                  description: Pass `true` to create an initial commit with empty README.
                  default: false
                gitignore_template:
                  type: string
                  description: Desired language or platform [.gitignore template](https://github.com/github/gitignore) to apply. Use the name of the template without the extension. For example, "Haskell".
                license_template:
                  type: string
                  description: Choose an [open source license template](https://choosealicense.com/) that best suits your needs, and then use the [license keyword](https://docs.github.com/articles/licensing-a-repository/#searching-github-by-license-type) as the `license_template` string. For example, "mit" or "mpl-2.0".
                allow_squash_merge:
                  type: boolean
                  description: Either `true` to allow squash-merging pull requests, or `false` to prevent squash-merging.
                  default: true
                allow_merge_commit:
                  type: boolean
                  description: Either `true` to allow merging pull requests with a merge commit, or `false` to prevent merging pull requests with merge commits.
                  default: true
                allow_rebase_merge:
                  type: boolean
                  description: Either `true` to allow rebase-merging pull requests, or `false` to prevent rebase-merging.
                  default: true
                allow_auto_merge:
                  type: boolean
                  description: Either `true` to allow auto-merge on pull requests, or `false` to disallow auto-merge.
                  default: false
                delete_branch_on_merge:
                  type: boolean
                  description: Either `true` to allow automatically deleting head branches when pull requests are merged, or `false` to prevent automatic deletion.
                  default: false
              required:
                - name
            example:
              name: Hello-World
              description: This is your first repository
              homepage: https://github.com
              private: false
              has_issues: true
              has_projects: true
              has_wiki: true
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/repository'
              examples:
                default:
                  $ref: '#/components/examples/repository'
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World
              schema:
                type: string
        '403':
          $ref: '#/components/responses/forbidden'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: null
  /repos/{owner}/{repo}:
    get:
      summary: Get a repository
      description: The `parent` and `source` objects are present when the repository is a fork. `parent` is the repository this repository was forked from, `source` is the ultimate source for the network.
      tags:
        - repos
      operationId: repos/get
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#get-a-repository
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/full-repository'
              examples:
                default-response:
                  $ref: '#/components/examples/full-repository-default-response'
        '301':
          $ref: '#/components/responses/moved_permanently'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: null
    patch:
      summary: Update a repository
      description: '**Note**: To edit a repository''s topics, use the [Replace all repository topics](https://docs.github.com/rest/reference/repos#replace-all-repository-topics) endpoint.'
      tags:
        - repos
      operationId: repos/update
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos/#update-a-repository
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the repository.
                description:
                  type: string
                  description: A short description of the repository.
                homepage:
                  type: string
                  description: A URL with more information about the repository.
                private:
                  type: boolean
                  description: |-
                    Either `true` to make the repository private or `false` to make it public. Default: `false`.  
                    **Note**: You will get a `422` error if the organization restricts [changing repository visibility](https://docs.github.com/articles/repository-permission-levels-for-an-organization#changing-the-visibility-of-repositories) to organization owners and a non-owner tries to change the value of private. **Note**: You will get a `422` error if the organization restricts [changing repository visibility](https://docs.github.com/articles/repository-permission-levels-for-an-organization#changing-the-visibility-of-repositories) to organization owners and a non-owner tries to change the value of private.
                  default: false
                visibility:
                  type: string
                  description: Can be `public` or `private`. If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, `visibility` can also be `internal`."
                  enum:
                    - public
                    - private
                    - internal
                security_and_analysis:
                  type: object
                  description: 'Specify which security and analysis features to enable or disable. For example, to enable GitHub Advanced Security, use this data in the body of the PATCH request: `{"security_and_analysis": {"advanced_security": {"status": "enabled"}}}`. If you have admin permissions for a private repository covered by an Advanced Security license, you can check which security and analysis features are currently enabled by using a `GET /repos/{owner}/{repo}` request.'
                  nullable: true
                  properties:
                    advanced_security:
                      type: object
                      description: Use the `status` property to enable or disable GitHub Advanced Security for this repository. For more information, see "[About GitHub Advanced Security](/github/getting-started-with-github/learning-about-github/about-github-advanced-security)."
                      properties:
                        status:
                          type: string
                          description: Can be `enabled` or `disabled`.
                    secret_scanning:
                      type: object
                      description: Use the `status` property to enable or disable secret scanning for this repository. For more information, see "[About secret scanning](/code-security/secret-security/about-secret-scanning)."
                      properties:
                        status:
                          type: string
                          description: Can be `enabled` or `disabled`.
                has_issues:
                  type: boolean
                  description: Either `true` to enable issues for this repository or `false` to disable them.
                  default: true
                has_projects:
                  type: boolean
                  description: Either `true` to enable projects for this repository or `false` to disable them. **Note:** If you're creating a repository in an organization that has disabled repository projects, the default is `false`, and if you pass `true`, the API returns an error.
                  default: true
                has_wiki:
                  type: boolean
                  description: Either `true` to enable the wiki for this repository or `false` to disable it.
                  default: true
                is_template:
                  type: boolean
                  description: Either `true` to make this repo available as a template repository or `false` to prevent it.
                  default: false
                default_branch:
                  type: string
                  description: Updates the default branch for this repository.
                allow_squash_merge:
                  type: boolean
                  description: Either `true` to allow squash-merging pull requests, or `false` to prevent squash-merging.
                  default: true
                allow_merge_commit:
                  type: boolean
                  description: Either `true` to allow merging pull requests with a merge commit, or `false` to prevent merging pull requests with merge commits.
                  default: true
                allow_rebase_merge:
                  type: boolean
                  description: Either `true` to allow rebase-merging pull requests, or `false` to prevent rebase-merging.
                  default: true
                allow_auto_merge:
                  type: boolean
                  description: Either `true` to allow auto-merge on pull requests, or `false` to disallow auto-merge.
                  default: false
                delete_branch_on_merge:
                  type: boolean
                  description: Either `true` to allow automatically deleting head branches when pull requests are merged, or `false` to prevent automatic deletion.
                  default: false
                archived:
                  type: boolean
                  description: '`true` to archive this repository. **Note**: You cannot unarchive repositories through the API.'
                  default: false
                allow_forking:
                  type: boolean
                  description: Either `true` to allow private forks, or `false` to prevent private forks.
                  default: false
            example:
              name: Hello-World
              description: This is your first repository
              homepage: https://github.com
              private: true
              has_issues: true
              has_projects: true
              has_wiki: true
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/full-repository'
              examples:
                default:
                  $ref: '#/components/examples/full-repository'
        '307':
          $ref: '#/components/responses/temporary_redirect'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: null
    delete:
      summary: Delete a repository
      description: |-
        Deleting a repository requires admin access. If OAuth is used, the `delete_repo` scope is required.

        If an organization owner has configured the organization to prevent members from deleting organization-owned
        repositories, you will get a `403 Forbidden` response.
      tags:
        - repos
      operationId: repos/delete
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#delete-a-repository
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      responses:
        '204':
          description: Response
        '307':
          $ref: '#/components/responses/temporary_redirect'
        '403':
          description: 'If an organization owner has configured the organization to prevent members from deleting organization-owned repositories, a member will get this response:'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  documentation_url:
                    type: string
              example:
                message: Organization members cannot delete repositories.
                documentation_url: https://docs.github.com/rest/reference/repos#delete-a-repository
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: null
  /repos/{owner}/{repo}/autolinks:
    get:
      summary: List all autolinks of a repository
      description: |-
        This returns a list of autolinks configured for the given repository.

        Information about autolinks are only available to repository administrators.
      tags:
        - repos
      operationId: repos/list-autolinks
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/v3/repos#list-autolinks
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/autolink'
              examples:
                default:
                  $ref: '#/components/examples/autolink-items'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: autolinks
    post:
      summary: Create an autolink reference for a repository
      description: Users with admin access to the repository can create an autolink.
      tags:
        - repos
      operationId: repos/create-autolink
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/v3/repos#create-an-autolink
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                key_prefix:
                  type: string
                  description: The prefix appended by a number will generate a link any time it is found in an issue, pull request, or commit.
                url_template:
                  type: string
                  description: The URL must contain <num> for the reference number.
              required:
                - key_prefix
                - url_template
            example:
              key_prefix: TICKET-
              url_template: https://example.com/TICKET?query=<num>
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/autolink'
              examples:
                default:
                  $ref: '#/components/examples/autolink'
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/autolinks/1
              schema:
                type: string
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: autolinks
  /repos/{owner}/{repo}/autolinks/{autolink_id}:
    get:
      summary: Get an autolink reference of a repository
      description: |-
        This returns a single autolink reference by ID that was configured for the given repository.

        Information about autolinks are only available to repository administrators.
      tags:
        - repos
      operationId: repos/get-autolink
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/v3/repos#get-autolink
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/autolink-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/autolink'
              examples:
                default:
                  $ref: '#/components/examples/autolink'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: autolinks
    delete:
      summary: Delete an autolink reference from a repository
      description: |-
        This deletes a single autolink reference by ID that was configured for the given repository.

        Information about autolinks are only available to repository administrators.
      tags:
        - repos
      operationId: repos/delete-autolink
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/v3/repos#delete-autolink
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/autolink-id'
      responses:
        '204':
          description: Response
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: autolinks
  /repos/{owner}/{repo}/automated-security-fixes:
    put:
      summary: Enable automated security fixes
      description: Enables automated security fixes for a repository. The authenticated user must have admin access to the repository. For more information, see "[Configuring automated security fixes](https://docs.github.com/en/articles/configuring-automated-security-fixes)".
      tags:
        - repos
      operationId: repos/enable-automated-security-fixes
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#enable-automated-security-fixes
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: null
    delete:
      summary: Disable automated security fixes
      description: Disables automated security fixes for a repository. The authenticated user must have admin access to the repository. For more information, see "[Configuring automated security fixes](https://docs.github.com/en/articles/configuring-automated-security-fixes)".
      tags:
        - repos
      operationId: repos/disable-automated-security-fixes
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#disable-automated-security-fixes
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: null
  /repos/{owner}/{repo}/branches:
    get:
      summary: List branches
      description: ''
      tags:
        - repos
      operationId: repos/list-branches
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#list-branches
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - name: protected
          description: Setting to `true` returns only protected branches. When set to `false`, only unprotected branches are returned. Omitting this parameter returns all branches.
          in: query
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/short-branch'
              examples:
                default:
                  $ref: '#/components/examples/short-branch-with-protection-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: branches
  /repos/{owner}/{repo}/branches/{branch}:
    get:
      summary: Get a branch
      description: ''
      tags:
        - repos
      operationId: repos/get-branch
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#get-a-branch
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/branch'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/branch-with-protection'
        '301':
          $ref: '#/components/responses/moved_permanently'
        '404':
          $ref: '#/components/responses/not_found'
        '415':
          $ref: '#/components/responses/preview_header_missing'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: branches
  /repos/{owner}/{repo}/branches/{branch}/protection:
    get:
      summary: Get branch protection
      description: Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.
      tags:
        - repos
      operationId: repos/get-branch-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#get-branch-protection
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/branch'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/branch-protection'
              examples:
                default:
                  $ref: '#/components/examples/branch-protection'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: branches
    put:
      summary: Update branch protection
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Protecting a branch requires admin or owner permissions to the repository.

        **Note**: Passing new arrays of `users` and `teams` replaces their previous values.

        **Note**: The list of users, apps, and teams in total is limited to 100 items.
      tags:
        - repos
      operationId: repos/update-branch-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#update-branch-protection
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/branch'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                required_status_checks:
                  type: object
                  description: Require status checks to pass before merging. Set to `null` to disable.
                  nullable: true
                  properties:
                    strict:
                      type: boolean
                      description: Require branches to be up to date before merging.
                    contexts:
                      type: array
                      deprecated: true
                      description: |
                        **Deprecated**: The list of status checks to require in order to merge into this branch. If any of these checks have recently been set by a particular GitHub App, they will be required to come from that app in future for the branch to merge. Use `checks` instead of `contexts` for more fine-grained control.
                      items:
                        type: string
                    checks:
                      type: array
                      description: The list of status checks to require in order to merge into this branch.
                      items:
                        type: object
                        required:
                          - context
                        properties:
                          context:
                            type: string
                            description: The name of the required check
                          app_id:
                            type: integer
                            description: The ID of the GitHub App that must provide this check. Omit this field to automatically select the GitHub App that has recently provided this check, or any app if it was not set by a GitHub App. Pass -1 to explicitly allow any app to set the status.
                  required:
                    - strict
                    - contexts
                enforce_admins:
                  type: boolean
                  description: Enforce all configured restrictions for administrators. Set to `true` to enforce required status checks for repository administrators. Set to `null` to disable.
                  nullable: true
                required_pull_request_reviews:
                  type: object
                  description: Require at least one approving review on a pull request, before merging. Set to `null` to disable.
                  nullable: true
                  properties:
                    dismissal_restrictions:
                      type: object
                      description: Specify which users and teams can dismiss pull request reviews. Pass an empty `dismissal_restrictions` object to disable. User and team `dismissal_restrictions` are only available for organization-owned repositories. Omit this parameter for personal repositories.
                      properties:
                        users:
                          type: array
                          description: The list of user `login`s with dismissal access
                          items:
                            type: string
                        teams:
                          type: array
                          description: The list of team `slug`s with dismissal access
                          items:
                            type: string
                    dismiss_stale_reviews:
                      type: boolean
                      description: Set to `true` if you want to automatically dismiss approving reviews when someone pushes a new commit.
                    require_code_owner_reviews:
                      type: boolean
                      description: Blocks merging pull requests until [code owners](https://docs.github.com/articles/about-code-owners/) review them.
                    required_approving_review_count:
                      type: integer
                      description: Specify the number of reviewers required to approve pull requests. Use a number between 1 and 6 or 0 to not require reviewers.
                    bypass_pull_request_allowances:
                      type: object
                      description: Allow specific users or teams to bypass pull request requirements. Set to `null` to disable.
                      nullable: true
                      properties:
                        users:
                          type: array
                          description: The list of user `login`s allowed to bypass pull request requirements.
                          items:
                            type: string
                        teams:
                          type: array
                          description: The list of team `slug`s allowed to bypass pull request requirements.
                          items:
                            type: string
                restrictions:
                  type: object
                  description: Restrict who can push to the protected branch. User, app, and team `restrictions` are only available for organization-owned repositories. Set to `null` to disable.
                  nullable: true
                  properties:
                    users:
                      type: array
                      description: The list of user `login`s with push access
                      items:
                        type: string
                    teams:
                      type: array
                      description: The list of team `slug`s with push access
                      items:
                        type: string
                    apps:
                      type: array
                      description: The list of app `slug`s with push access
                      items:
                        type: string
                  required:
                    - users
                    - teams
                required_linear_history:
                  type: boolean
                  description: 'Enforces a linear commit Git history, which prevents anyone from pushing merge commits to a branch. Set to `true` to enforce a linear commit history. Set to `false` to disable a linear commit Git history. Your repository must allow squash merging or rebase merging before you can enable a linear commit history. Default: `false`. For more information, see "[Requiring a linear commit history](https://docs.github.com/github/administering-a-repository/requiring-a-linear-commit-history)" in the GitHub Help documentation.'
                allow_force_pushes:
                  type: boolean
                  description: 'Permits force pushes to the protected branch by anyone with write access to the repository. Set to `true` to allow force pushes. Set to `false` or `null` to block force pushes. Default: `false`. For more information, see "[Enabling force pushes to a protected branch](https://docs.github.com/en/github/administering-a-repository/enabling-force-pushes-to-a-protected-branch)" in the GitHub Help documentation."'
                  nullable: true
                allow_deletions:
                  type: boolean
                  description: 'Allows deletion of the protected branch by anyone with write access to the repository. Set to `false` to prevent deletion of the protected branch. Default: `false`. For more information, see "[Enabling force pushes to a protected branch](https://docs.github.com/en/github/administering-a-repository/enabling-force-pushes-to-a-protected-branch)" in the GitHub Help documentation.'
                required_conversation_resolution:
                  type: boolean
                  description: 'Requires all conversations on code to be resolved before a pull request can be merged into a branch that matches this rule. Set to `false` to disable. Default: `false`.'
              required:
                - required_status_checks
                - enforce_admins
                - required_pull_request_reviews
                - restrictions
            example:
              required_status_checks:
                strict: true
                contexts:
                  - continuous-integration/travis-ci
              enforce_admins: true
              required_pull_request_reviews:
                dismissal_restrictions:
                  users:
                    - octocat
                  teams:
                    - justice-league
                dismiss_stale_reviews: true
                require_code_owner_reviews: true
                required_approving_review_count: 2
                bypass_pull_request_allowances:
                  users:
                    - octocat
                  teams:
                    - justice-league
              restrictions:
                users:
                  - octocat
                teams:
                  - justice-league
                apps:
                  - super-ci
              required_linear_history: true
              allow_force_pushes: true
              allow_deletions: true
              required_conversation_resolution: true
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protected-branch'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed_simple'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: branches
    delete:
      summary: Delete branch protection
      description: Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.
      tags:
        - repos
      operationId: repos/delete-branch-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#delete-branch-protection
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/branch'
      responses:
        '204':
          description: Response
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: branches
  /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins:
    get:
      summary: Get admin branch protection
      description: Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.
      tags:
        - repos
      operationId: repos/get-admin-branch-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#get-admin-branch-protection
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/branch'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protected-branch-admin-enforced'
              examples:
                default:
                  $ref: '#/components/examples/protected-branch-admin-enforced-2'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: branches
    post:
      summary: Set admin branch protection
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Adding admin enforcement requires admin or owner permissions to the repository and branch protection to be enabled.
      tags:
        - repos
      operationId: repos/set-admin-branch-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#set-admin-branch-protection
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/branch'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protected-branch-admin-enforced'
              examples:
                default:
                  $ref: '#/components/examples/protected-branch-admin-enforced-2'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: branches
    delete:
      summary: Delete admin branch protection
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Removing admin enforcement requires admin or owner permissions to the repository and branch protection to be enabled.
      tags:
        - repos
      operationId: repos/delete-admin-branch-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#delete-admin-branch-protection
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/branch'
      responses:
        '204':
          description: Response
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: branches
  /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews:
    get:
      summary: Get pull request review protection
      description: Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.
      tags:
        - repos
      operationId: repos/get-pull-request-review-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#get-pull-request-review-protection
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/branch'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protected-branch-pull-request-review'
              examples:
                default:
                  $ref: '#/components/examples/protected-branch-pull-request-review'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: branches
    patch:
      summary: Update pull request review protection
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Updating pull request review enforcement requires admin or owner permissions to the repository and branch protection to be enabled.

        **Note**: Passing new arrays of `users` and `teams` replaces their previous values.
      tags:
        - repos
      operationId: repos/update-pull-request-review-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#update-pull-request-review-protection
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/branch'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                dismissal_restrictions:
                  type: object
                  description: Specify which users and teams can dismiss pull request reviews. Pass an empty `dismissal_restrictions` object to disable. User and team `dismissal_restrictions` are only available for organization-owned repositories. Omit this parameter for personal repositories.
                  properties:
                    users:
                      type: array
                      description: The list of user `login`s with dismissal access
                      items:
                        type: string
                    teams:
                      type: array
                      description: The list of team `slug`s with dismissal access
                      items:
                        type: string
                dismiss_stale_reviews:
                  type: boolean
                  description: Set to `true` if you want to automatically dismiss approving reviews when someone pushes a new commit.
                require_code_owner_reviews:
                  type: boolean
                  description: Blocks merging pull requests until [code owners](https://docs.github.com/articles/about-code-owners/) have reviewed.
                required_approving_review_count:
                  type: integer
                  description: Specifies the number of reviewers required to approve pull requests. Use a number between 1 and 6 or 0 to not require reviewers.
                bypass_pull_request_allowances:
                  type: object
                  description: Allow specific users or teams to bypass pull request requirements. Set to `null` to disable.
                  nullable: true
                  properties:
                    users:
                      type: array
                      description: The list of user `login`s allowed to bypass pull request requirements.
                      items:
                        type: string
                    teams:
                      type: array
                      description: The list of team `slug`s allowed to bypass pull request requirements.
                      items:
                        type: string
            example:
              dismissal_restrictions:
                users:
                  - octocat
                teams:
                  - justice-league
              bypass_pull_request_allowances:
                users:
                  - octocat
                teams:
                  - justice-league
              dismiss_stale_reviews: true
              require_code_owner_reviews: true
              required_approving_review_count: 2
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protected-branch-pull-request-review'
              examples:
                default:
                  $ref: '#/components/examples/protected-branch-pull-request-review'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: branches
    delete:
      summary: Delete pull request review protection
      description: Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.
      tags:
        - repos
      operationId: repos/delete-pull-request-review-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#delete-pull-request-review-protection
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/branch'
      responses:
        '204':
          description: Response
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: branches
  /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures:
    get:
      summary: Get commit signature protection
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        When authenticated with admin or owner permissions to the repository, you can use this endpoint to check whether a branch requires signed commits. An enabled status of `true` indicates you must sign commits on this branch. For more information, see [Signing commits with GPG](https://docs.github.com/articles/signing-commits-with-gpg) in GitHub Help.

        **Note**: You must enable branch protection to require signed commits.
      tags:
        - repos
      operationId: repos/get-commit-signature-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#get-commit-signature-protection
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/branch'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protected-branch-admin-enforced'
              examples:
                default:
                  $ref: '#/components/examples/protected-branch-admin-enforced'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: branches
    post:
      summary: Create commit signature protection
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        When authenticated with admin or owner permissions to the repository, you can use this endpoint to require signed commits on a branch. You must enable branch protection to require signed commits.
      tags:
        - repos
      operationId: repos/create-commit-signature-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#create-commit-signature-protection
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/branch'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protected-branch-admin-enforced'
              examples:
                default:
                  $ref: '#/components/examples/protected-branch-admin-enforced'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: branches
    delete:
      summary: Delete commit signature protection
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        When authenticated with admin or owner permissions to the repository, you can use this endpoint to disable required signed commits on a branch. You must enable branch protection to require signed commits.
      tags:
        - repos
      operationId: repos/delete-commit-signature-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#delete-commit-signature-protection
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/branch'
      responses:
        '204':
          description: Response
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: branches
  /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks:
    get:
      summary: Get status checks protection
      description: Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.
      tags:
        - repos
      operationId: repos/get-status-checks-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#get-status-checks-protection
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/branch'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status-check-policy'
              examples:
                default:
                  $ref: '#/components/examples/status-check-policy'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: branches
    patch:
      summary: Update status check protection
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Updating required status checks requires admin or owner permissions to the repository and branch protection to be enabled.
      tags:
        - repos
      operationId: repos/update-status-check-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#update-status-check-protection
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/branch'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                strict:
                  type: boolean
                  description: Require branches to be up to date before merging.
                contexts:
                  type: array
                  deprecated: true
                  description: |
                    **Deprecated**: The list of status checks to require in order to merge into this branch. If any of these checks have recently been set by a particular GitHub App, they will be required to come from that app in future for the branch to merge. Use `checks` instead of `contexts` for more fine-grained control.
                  items:
                    type: string
                checks:
                  type: array
                  description: The list of status checks to require in order to merge into this branch.
                  items:
                    type: object
                    required:
                      - context
                    properties:
                      context:
                        type: string
                        description: The name of the required check
                      app_id:
                        type: integer
                        description: The ID of the GitHub App that must provide this check. Omit this field to automatically select the GitHub App that has recently provided this check, or any app if it was not set by a GitHub App. Pass -1 to explicitly allow any app to set the status.
            example:
              strict: true
              contexts:
                - continuous-integration/travis-ci
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status-check-policy'
              examples:
                default:
                  $ref: '#/components/examples/status-check-policy'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: branches
    delete:
      summary: Remove status check protection
      description: Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.
      tags:
        - repos
      operationId: repos/remove-status-check-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#remove-status-check-protection
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/branch'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: branches
  /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts:
    get:
      summary: Get all status check contexts
      description: Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.
      tags:
        - repos
      operationId: repos/get-all-status-check-contexts
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#get-all-status-check-contexts
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/branch'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
                - continuous-integration/travis-ci
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: branches
    post:
      summary: Add status check contexts
      description: Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.
      tags:
        - repos
      operationId: repos/add-status-check-contexts
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#add-status-check-contexts
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/branch'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    contexts:
                      type: array
                      description: contexts parameter
                      items:
                        type: string
                  required:
                    - contexts
                  example:
                    contexts:
                      - contexts
                - type: array
                  description: contexts parameter
                  items:
                    type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
                - continuous-integration/travis-ci
                - continuous-integration/jenkins
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        requestBodyParameterName: contexts
        category: repos
        subcategory: branches
    put:
      summary: Set status check contexts
      description: Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.
      tags:
        - repos
      operationId: repos/set-status-check-contexts
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#set-status-check-contexts
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/branch'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    contexts:
                      type: array
                      description: contexts parameter
                      items:
                        type: string
                  required:
                    - contexts
                  example:
                    contexts:
                      - contexts
                - type: array
                  description: contexts parameter
                  items:
                    type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
                - continuous-integration/travis-ci
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        requestBodyParameterName: contexts
        category: repos
        subcategory: branches
    delete:
      summary: Remove status check contexts
      description: Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.
      tags:
        - repos
      operationId: repos/remove-status-check-contexts
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#remove-status-check-contexts
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/branch'
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    contexts:
                      type: array
                      description: contexts parameter
                      items:
                        type: string
                  required:
                    - contexts
                  example:
                    contexts:
                      - contexts
                - type: array
                  description: contexts parameter
                  items:
                    type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
                - continuous-integration/travis-ci
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        requestBodyParameterName: contexts
        category: repos
        subcategory: branches
  /repos/{owner}/{repo}/branches/{branch}/protection/restrictions:
    get:
      summary: Get access restrictions
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Lists who has access to this protected branch.

        **Note**: Users, apps, and teams `restrictions` are only available for organization-owned repositories.
      tags:
        - repos
      operationId: repos/get-access-restrictions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#get-access-restrictions
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/branch'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/branch-restriction-policy'
              examples:
                default:
                  $ref: '#/components/examples/branch-restriction-policy'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: branches
    delete:
      summary: Delete access restrictions
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Disables the ability to restrict who can push to this branch.
      tags:
        - repos
      operationId: repos/delete-access-restrictions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#delete-access-restrictions
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/branch'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: branches
  /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps:
    get:
      summary: Get apps with access to the protected branch
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Lists the GitHub Apps that have push access to this branch. Only installed GitHub Apps with `write` access to the `contents` permission can be added as authorized actors on a protected branch.
      tags:
        - repos
      operationId: repos/get-apps-with-access-to-protected-branch
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#list-apps-with-access-to-the-protected-branch
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/branch'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/integration'
              examples:
                default:
                  $ref: '#/components/examples/integration-items'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: branches
    post:
      summary: Add app access restrictions
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Grants the specified apps push access for this branch. Only installed GitHub Apps with `write` access to the `contents` permission can be added as authorized actors on a protected branch.

        | Type    | Description                                                                                                                                                |
        | ------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------- |
        | `array` | The GitHub Apps that have push access to this branch. Use the app's `slug`. **Note**: The list of users, apps, and teams in total is limited to 100 items. |
      tags:
        - repos
      operationId: repos/add-app-access-restrictions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#add-app-access-restrictions
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/branch'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    apps:
                      type: array
                      description: apps parameter
                      items:
                        type: string
                  required:
                    - apps
                  example:
                    apps:
                      - my-app
                - type: array
                  items:
                    type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/integration'
              examples:
                default:
                  $ref: '#/components/examples/integration-items'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        requestBodyParameterName: apps
        category: repos
        subcategory: branches
    put:
      summary: Set app access restrictions
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Replaces the list of apps that have push access to this branch. This removes all apps that previously had push access and grants push access to the new list of apps. Only installed GitHub Apps with `write` access to the `contents` permission can be added as authorized actors on a protected branch.

        | Type    | Description                                                                                                                                                |
        | ------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------- |
        | `array` | The GitHub Apps that have push access to this branch. Use the app's `slug`. **Note**: The list of users, apps, and teams in total is limited to 100 items. |
      tags:
        - repos
      operationId: repos/set-app-access-restrictions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#set-app-access-restrictions
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/branch'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    apps:
                      type: array
                      description: apps parameter
                      items:
                        type: string
                  required:
                    - apps
                  example:
                    apps:
                      - my-app
                - type: array
                  items:
                    type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/integration'
              examples:
                default:
                  $ref: '#/components/examples/integration-items'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        requestBodyParameterName: apps
        category: repos
        subcategory: branches
    delete:
      summary: Remove app access restrictions
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Removes the ability of an app to push to this branch. Only installed GitHub Apps with `write` access to the `contents` permission can be added as authorized actors on a protected branch.

        | Type    | Description                                                                                                                                                |
        | ------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------- |
        | `array` | The GitHub Apps that have push access to this branch. Use the app's `slug`. **Note**: The list of users, apps, and teams in total is limited to 100 items. |
      tags:
        - repos
      operationId: repos/remove-app-access-restrictions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#remove-app-access-restrictions
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/branch'
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    apps:
                      type: array
                      description: apps parameter
                      items:
                        type: string
                  required:
                    - apps
                  example:
                    apps:
                      - my-app
                - type: array
                  items:
                    type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/integration'
              examples:
                default:
                  $ref: '#/components/examples/integration-items'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        requestBodyParameterName: apps
        category: repos
        subcategory: branches
  /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams:
    get:
      summary: Get teams with access to the protected branch
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Lists the teams who have push access to this branch. The list includes child teams.
      tags:
        - repos
      operationId: repos/get-teams-with-access-to-protected-branch
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#list-teams-with-access-to-the-protected-branch
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/branch'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/team'
              examples:
                default:
                  $ref: '#/components/examples/team-items'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: branches
    post:
      summary: Add team access restrictions
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Grants the specified teams push access for this branch. You can also give push access to child teams.

        | Type    | Description                                                                                                                                |
        | ------- | ------------------------------------------------------------------------------------------------------------------------------------------ |
        | `array` | The teams that can have push access. Use the team's `slug`. **Note**: The list of users, apps, and teams in total is limited to 100 items. |
      tags:
        - repos
      operationId: repos/add-team-access-restrictions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#add-team-access-restrictions
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/branch'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    teams:
                      type: array
                      description: teams parameter
                      items:
                        type: string
                  required:
                    - teams
                  example:
                    teams:
                      - my-team
                - type: array
                  description: teams parameter
                  items:
                    type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/team'
              examples:
                default:
                  $ref: '#/components/examples/team-items'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        requestBodyParameterName: teams
        category: repos
        subcategory: branches
    put:
      summary: Set team access restrictions
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Replaces the list of teams that have push access to this branch. This removes all teams that previously had push access and grants push access to the new list of teams. Team restrictions include child teams.

        | Type    | Description                                                                                                                                |
        | ------- | ------------------------------------------------------------------------------------------------------------------------------------------ |
        | `array` | The teams that can have push access. Use the team's `slug`. **Note**: The list of users, apps, and teams in total is limited to 100 items. |
      tags:
        - repos
      operationId: repos/set-team-access-restrictions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#set-team-access-restrictions
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/branch'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    teams:
                      type: array
                      description: teams parameter
                      items:
                        type: string
                  required:
                    - teams
                  example:
                    teams:
                      - my-team
                - type: array
                  description: teams parameter
                  items:
                    type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/team'
              examples:
                default:
                  $ref: '#/components/examples/team-items'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        requestBodyParameterName: teams
        category: repos
        subcategory: branches
    delete:
      summary: Remove team access restrictions
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Removes the ability of a team to push to this branch. You can also remove push access for child teams.

        | Type    | Description                                                                                                                                         |
        | ------- | --------------------------------------------------------------------------------------------------------------------------------------------------- |
        | `array` | Teams that should no longer have push access. Use the team's `slug`. **Note**: The list of users, apps, and teams in total is limited to 100 items. |
      tags:
        - repos
      operationId: repos/remove-team-access-restrictions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#remove-team-access-restrictions
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/branch'
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    teams:
                      type: array
                      description: teams parameter
                      items:
                        type: string
                  required:
                    - teams
                  example:
                    teams:
                      - my-team
                - type: array
                  description: teams parameter
                  items:
                    type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/team'
              examples:
                default:
                  $ref: '#/components/examples/team-items'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        requestBodyParameterName: teams
        category: repos
        subcategory: branches
  /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users:
    get:
      summary: Get users with access to the protected branch
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Lists the people who have push access to this branch.
      tags:
        - repos
      operationId: repos/get-users-with-access-to-protected-branch
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#list-users-with-access-to-the-protected-branch
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/branch'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/simple-user'
              examples:
                default:
                  $ref: '#/components/examples/simple-user-items'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: branches
    post:
      summary: Add user access restrictions
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Grants the specified people push access for this branch.

        | Type    | Description                                                                                                                   |
        | ------- | ----------------------------------------------------------------------------------------------------------------------------- |
        | `array` | Usernames for people who can have push access. **Note**: The list of users, apps, and teams in total is limited to 100 items. |
      tags:
        - repos
      operationId: repos/add-user-access-restrictions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#add-user-access-restrictions
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/branch'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    users:
                      type: array
                      description: users parameter
                      items:
                        type: string
                  required:
                    - users
                  example:
                    users:
                      - mona
                - type: array
                  items:
                    type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/simple-user'
              examples:
                default:
                  $ref: '#/components/examples/simple-user-items'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        requestBodyParameterName: users
        category: repos
        subcategory: branches
    put:
      summary: Set user access restrictions
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Replaces the list of people that have push access to this branch. This removes all people that previously had push access and grants push access to the new list of people.

        | Type    | Description                                                                                                                   |
        | ------- | ----------------------------------------------------------------------------------------------------------------------------- |
        | `array` | Usernames for people who can have push access. **Note**: The list of users, apps, and teams in total is limited to 100 items. |
      tags:
        - repos
      operationId: repos/set-user-access-restrictions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#set-user-access-restrictions
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/branch'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    users:
                      type: array
                      description: users parameter
                      items:
                        type: string
                  required:
                    - users
                  example:
                    users:
                      - mona
                - type: array
                  items:
                    type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/simple-user'
              examples:
                default:
                  $ref: '#/components/examples/simple-user-items'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        requestBodyParameterName: users
        category: repos
        subcategory: branches
    delete:
      summary: Remove user access restrictions
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Removes the ability of a user to push to this branch.

        | Type    | Description                                                                                                                                   |
        | ------- | --------------------------------------------------------------------------------------------------------------------------------------------- |
        | `array` | Usernames of the people who should no longer have push access. **Note**: The list of users, apps, and teams in total is limited to 100 items. |
      tags:
        - repos
      operationId: repos/remove-user-access-restrictions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#remove-user-access-restrictions
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/branch'
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    users:
                      type: array
                      description: users parameter
                      items:
                        type: string
                  required:
                    - users
                  example:
                    users:
                      - mona
                - type: array
                  items:
                    type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/simple-user'
              examples:
                default:
                  $ref: '#/components/examples/simple-user-items'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        requestBodyParameterName: users
        category: repos
        subcategory: branches
  /repos/{owner}/{repo}/branches/{branch}/rename:
    post:
      summary: Rename a branch
      description: |-
        Renames a branch in a repository.

        **Note:** Although the API responds immediately, the branch rename process might take some extra time to complete in the background. You won't be able to push to the old branch name while the rename process is in progress. For more information, see "[Renaming a branch](https://docs.github.com/github/administering-a-repository/renaming-a-branch)".

        The permissions required to use this endpoint depends on whether you are renaming the default branch.

        To rename a non-default branch:

        * Users must have push access.
        * GitHub Apps must have the `contents:write` repository permission.

        To rename the default branch:

        * Users must have admin or owner permissions.
        * GitHub Apps must have the `administration:write` repository permission.
      tags:
        - repos
      operationId: repos/rename-branch
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#rename-a-branch
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/branch'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                new_name:
                  type: string
                  description: The new name of the branch.
              required:
                - new_name
            example:
              new_name: my_renamed_branch
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/branch-with-protection'
              examples:
                default:
                  $ref: '#/components/examples/branch-with-protection'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: branches
  /repos/{owner}/{repo}/codeowners/errors:
    get:
      summary: List CODEOWNERS errors
      description: |-
        List any syntax errors that are detected in the CODEOWNERS
        file.

        For more information about the correct CODEOWNERS syntax,
        see "[About code owners](https://docs.github.com/repositories/managing-your-repositorys-settings-and-features/customizing-your-repository/about-code-owners)."
      tags:
        - repos
      operationId: repos/codeowners-errors
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#list-codeowners-errors
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - name: ref
          description: 'A branch, tag or commit name used to determine which version of the CODEOWNERS file to use. Default: the repository''s default branch (e.g. `main`)'
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/codeowners-errors'
              examples:
                default:
                  $ref: '#/components/examples/codeowners-errors'
        '404':
          description: Resource not found
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: null
  /repos/{owner}/{repo}/collaborators:
    get:
      summary: List repository collaborators
      description: |-
        For organization-owned repositories, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners.

        Team members will include the members of child teams.

        You must authenticate using an access token with the `read:org` and `repo` scopes with push access to use this
        endpoint. GitHub Apps must have the `members` organization permission and `metadata` repository permission to use this
        endpoint.
      tags:
        - repos
      operationId: repos/list-collaborators
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#list-repository-collaborators
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - name: affiliation
          description: |-
            Filter collaborators returned by their affiliation. Can be one of:  
            \* `outside`: All outside collaborators of an organization-owned repository.  
            \* `direct`: All collaborators with permissions to an organization-owned repository, regardless of organization membership status.  
            \* `all`: All collaborators the authenticated user can see.
          in: query
          required: false
          schema:
            type: string
            enum:
              - outside
              - direct
              - all
            default: all
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/collaborator'
              examples:
                default:
                  $ref: '#/components/examples/collaborator-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: collaborators
  /repos/{owner}/{repo}/collaborators/{username}:
    get:
      summary: Check if a user is a repository collaborator
      description: |-
        For organization-owned repositories, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners.

        Team members will include the members of child teams.

        You must authenticate using an access token with the `read:org` and `repo` scopes with push access to use this
        endpoint. GitHub Apps must have the `members` organization permission and `metadata` repository permission to use this
        endpoint.
      tags:
        - repos
      operationId: repos/check-collaborator
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#check-if-a-user-is-a-repository-collaborator
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/username'
      responses:
        '204':
          description: Response if user is a collaborator
        '404':
          description: Not Found if user is not a collaborator
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: collaborators
    put:
      summary: Add a repository collaborator
      description: |-
        This endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See "[Secondary rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#secondary-rate-limits)" and "[Dealing with secondary rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)" for details.

        For more information on permission levels, see "[Repository permission levels for an organization](https://docs.github.com/en/github/setting-up-and-managing-organizations-and-teams/repository-permission-levels-for-an-organization#permission-levels-for-repositories-owned-by-an-organization)". There are restrictions on which permissions can be granted to organization members when an organization base role is in place. In this case, the permission being given must be equal to or higher than the org base permission. Otherwise, the request will fail with:

        ```
        Cannot assign {member} permission of {role name}
        ```

        Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see "[HTTP verbs](https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs)."

        The invitee will receive a notification that they have been invited to the repository, which they must accept or decline. They may do this via the notifications page, the email they receive, or by using the [repository invitations API endpoints](https://docs.github.com/rest/reference/repos#invitations).

        **Rate limits**

        You are limited to sending 50 invitations to a repository per 24 hour period. Note there is no limit if you are inviting organization members to an organization repository.
      tags:
        - repos
      operationId: repos/add-collaborator
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#add-a-repository-collaborator
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/username'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                permission:
                  type: string
                  description: |-
                    The permission to grant the collaborator. **Only valid on organization-owned repositories.** Can be one of:  
                    \* `pull` - can pull, but not push to or administer this repository.  
                    \* `push` - can pull and push, but not administer this repository.  
                    \* `admin` - can pull, push and administer this repository.  
                    \* `maintain` - Recommended for project managers who need to manage the repository without access to sensitive or destructive actions.  
                    \* `triage` - Recommended for contributors who need to proactively manage issues and pull requests without write access.  
                    \* custom repository role name - A custom repository role, if the owning organization has defined any.
                  enum:
                    - pull
                    - push
                    - admin
                    - maintain
                    - triage
                  default: push
                permissions:
                  type: string
                  example: '"push"'
      responses:
        '201':
          description: Response when a new invitation is created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/repository-invitation'
              examples:
                response-when-a-new-invitation-is-created:
                  $ref: '#/components/examples/repository-invitation-response-when-a-new-invitation-is-created'
        '204':
          description: Response when person is already a collaborator
        '403':
          $ref: '#/components/responses/forbidden'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: collaborators
    delete:
      summary: Remove a repository collaborator
      description: ''
      tags:
        - repos
      operationId: repos/remove-collaborator
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#remove-a-repository-collaborator
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/username'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: collaborators
  /repos/{owner}/{repo}/collaborators/{username}/permission:
    get:
      summary: Get repository permissions for a user
      description: Checks the repository permission of a collaborator. The possible repository permissions are `admin`, `write`, `read`, and `none`.
      tags:
        - repos
      operationId: repos/get-collaborator-permission-level
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#get-repository-permissions-for-a-user
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/username'
      responses:
        '200':
          description: if user has admin permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/repository-collaborator-permission'
              examples:
                response-if-user-has-admin-permissions:
                  $ref: '#/components/examples/repository-collaborator-permission-response-if-user-has-admin-permissions'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: collaborators
  /repos/{owner}/{repo}/comments:
    get:
      summary: List commit comments for a repository
      description: |-
        Commit Comments use [these custom media types](https://docs.github.com/rest/reference/repos#custom-media-types). You can read more about the use of media types in the API [here](https://docs.github.com/rest/overview/media-types/).

        Comments are ordered by ascending ID.
      tags:
        - repos
      operationId: repos/list-commit-comments-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#list-commit-comments-for-a-repository
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/commit-comment'
              examples:
                default:
                  $ref: '#/components/examples/commit-comment-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: comments
  /repos/{owner}/{repo}/comments/{comment_id}:
    get:
      summary: Get a commit comment
      description: ''
      tags:
        - repos
      operationId: repos/get-commit-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#get-a-commit-comment
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/comment-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commit-comment'
              examples:
                default:
                  $ref: '#/components/examples/commit-comment'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: comments
    patch:
      summary: Update a commit comment
      description: ''
      tags:
        - repos
      operationId: repos/update-commit-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#update-a-commit-comment
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/comment-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: The contents of the comment
              required:
                - body
            example:
              body: Nice change
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commit-comment'
              examples:
                default:
                  $ref: '#/components/examples/commit-comment-2'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: comments
    delete:
      summary: Delete a commit comment
      description: ''
      tags:
        - repos
      operationId: repos/delete-commit-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#delete-a-commit-comment
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/comment-id'
      responses:
        '204':
          description: Response
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: comments
  /repos/{owner}/{repo}/commits:
    get:
      summary: List commits
      description: |-
        **Signature verification object**

        The response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:

        | Name | Type | Description |
        | ---- | ---- | ----------- |
        | `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |
        | `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |
        | `signature` | `string` | The signature that was extracted from the commit. |
        | `payload` | `string` | The value that was signed. |

        These are the possible values for `reason` in the `verification` object:

        | Value | Description |
        | ----- | ----------- |
        | `expired_key` | The key that made the signature is expired. |
        | `not_signing_key` | The "signing" flag is not among the usage flags in the GPG key that made the signature. |
        | `gpgverify_error` | There was an error communicating with the signature verification service. |
        | `gpgverify_unavailable` | The signature verification service is currently unavailable. |
        | `unsigned` | The object does not include a signature. |
        | `unknown_signature_type` | A non-PGP signature was found in the commit. |
        | `no_user` | No user was associated with the `committer` email address in the commit. |
        | `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |
        | `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |
        | `unknown_key` | The key that made the signature has not been registered with any user's account. |
        | `malformed_signature` | There was an error parsing the signature. |
        | `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |
        | `valid` | None of the above errors applied, so the signature is considered to be verified. |
      tags:
        - repos
      operationId: repos/list-commits
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#list-commits
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - name: sha
          description: 'SHA or branch to start listing commits from. Default: the repository’s default branch (usually `master`).'
          in: query
          required: false
          schema:
            type: string
        - name: path
          description: Only commits containing this file path will be returned.
          in: query
          required: false
          schema:
            type: string
        - name: author
          description: GitHub login or email address by which to filter by commit author.
          in: query
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/since'
        - name: until
          description: 'Only commits before this date will be returned. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.'
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/commit'
              examples:
                default:
                  $ref: '#/components/examples/commit-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '400':
          $ref: '#/components/responses/bad_request'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict'
        '500':
          $ref: '#/components/responses/internal_error'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: commits
  /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head:
    get:
      summary: List branches for HEAD commit
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Returns all branches where the given commit SHA is the HEAD, or latest commit for the branch.
      tags:
        - repos
      operationId: repos/list-branches-for-head-commit
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#list-branches-for-head-commit
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/commit-sha'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/branch-short'
              examples:
                default:
                  $ref: '#/components/examples/branch-short-items'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: commits
  /repos/{owner}/{repo}/commits/{commit_sha}/comments:
    get:
      summary: List commit comments
      description: Use the `:commit_sha` to specify the commit that will have its comments listed.
      tags:
        - repos
      operationId: repos/list-comments-for-commit
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#list-commit-comments
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/commit-sha'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/commit-comment'
              examples:
                default:
                  $ref: '#/components/examples/commit-comment-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: comments
    post:
      summary: Create a commit comment
      description: |-
        Create a comment for a commit using its `:commit_sha`.

        This endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See "[Secondary rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#secondary-rate-limits)" and "[Dealing with secondary rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)" for details.
      tags:
        - repos
      operationId: repos/create-commit-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#create-a-commit-comment
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/commit-sha'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: The contents of the comment.
                path:
                  type: string
                  description: Relative path of the file to comment on.
                position:
                  type: integer
                  description: Line index in the diff to comment on.
                line:
                  type: integer
                  description: '**Deprecated**. Use **position** parameter instead. Line number in the file to comment on.'
              required:
                - body
            example:
              body: Great stuff
              path: file1.txt
              position: 4
              line: 1
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commit-comment'
              examples:
                default:
                  $ref: '#/components/examples/commit-comment'
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/comments/1
              schema:
                type: string
        '403':
          $ref: '#/components/responses/forbidden'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: comments
  /repos/{owner}/{repo}/commits/{commit_sha}/pulls:
    get:
      summary: List pull requests associated with a commit
      description: Lists the merged pull request that introduced the commit to the repository. If the commit is not present in the default branch, additionally returns open pull requests associated with the commit. The results may include open and closed pull requests. Additional preview headers may be required to see certain details for associated pull requests, such as whether a pull request is in a draft state. For more information about previews that might affect this endpoint, see the [List pull requests](https://docs.github.com/rest/reference/pulls#list-pull-requests) endpoint.
      tags:
        - repos
      operationId: repos/list-pull-requests-associated-with-commit
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#list-pull-requests-associated-with-a-commit
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/commit-sha'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/pull-request-simple'
              examples:
                default:
                  $ref: '#/components/examples/pull-request-simple-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: commits
  /repos/{owner}/{repo}/commits/{ref}:
    get:
      summary: Get a commit
      description: |-
        Returns the contents of a single commit reference. You must have `read` access for the repository to use this endpoint.

        **Note:** If there are more than 300 files in the commit diff, the response will include pagination link headers for the remaining files, up to a limit of 3000 files. Each page contains the static commit information, and the only changes are to the file listing.

        You can pass the appropriate [media type](https://docs.github.com/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) to  fetch `diff` and `patch` formats. Diffs with binary data will have no `patch` property.

        To return only the SHA-1 hash of the commit reference, you can provide the `sha` custom [media type](https://docs.github.com/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) in the `Accept` header. You can use this endpoint to check if a remote reference's SHA-1 hash is the same as your local reference's SHA-1 hash by providing the local SHA-1 reference as the ETag.

        **Signature verification object**

        The response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:

        | Name | Type | Description |
        | ---- | ---- | ----------- |
        | `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |
        | `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |
        | `signature` | `string` | The signature that was extracted from the commit. |
        | `payload` | `string` | The value that was signed. |

        These are the possible values for `reason` in the `verification` object:

        | Value | Description |
        | ----- | ----------- |
        | `expired_key` | The key that made the signature is expired. |
        | `not_signing_key` | The "signing" flag is not among the usage flags in the GPG key that made the signature. |
        | `gpgverify_error` | There was an error communicating with the signature verification service. |
        | `gpgverify_unavailable` | The signature verification service is currently unavailable. |
        | `unsigned` | The object does not include a signature. |
        | `unknown_signature_type` | A non-PGP signature was found in the commit. |
        | `no_user` | No user was associated with the `committer` email address in the commit. |
        | `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |
        | `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |
        | `unknown_key` | The key that made the signature has not been registered with any user's account. |
        | `malformed_signature` | There was an error parsing the signature. |
        | `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |
        | `valid` | None of the above errors applied, so the signature is considered to be verified. |
      tags:
        - repos
      operationId: repos/get-commit
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#get-a-commit
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/per-page'
        - name: ref
          description: ref parameter
          in: path
          required: true
          schema:
            type: string
          x-multi-segment: true
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commit'
              examples:
                default:
                  $ref: '#/components/examples/commit'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
        '500':
          $ref: '#/components/responses/internal_error'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: commits
  /repos/{owner}/{repo}/commits/{ref}/status:
    get:
      summary: Get the combined status for a specific reference
      description: |-
        Users with pull access in a repository can access a combined view of commit statuses for a given ref. The ref can be a SHA, a branch name, or a tag name.


        Additionally, a combined `state` is returned. The `state` is one of:

        *   **failure** if any of the contexts report as `error` or `failure`
        *   **pending** if there are no statuses or a context is `pending`
        *   **success** if the latest status for all contexts is `success`
      tags:
        - repos
      operationId: repos/get-combined-status-for-ref
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#get-the-combined-status-for-a-specific-reference
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - name: ref
          description: ref parameter
          in: path
          required: true
          schema:
            type: string
          x-multi-segment: true
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/combined-commit-status'
              examples:
                default:
                  $ref: '#/components/examples/combined-commit-status'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: statuses
  /repos/{owner}/{repo}/commits/{ref}/statuses:
    get:
      summary: List commit statuses for a reference
      description: |-
        Users with pull access in a repository can view commit statuses for a given ref. The ref can be a SHA, a branch name, or a tag name. Statuses are returned in reverse chronological order. The first status in the list will be the latest one.

        This resource is also available via a legacy route: `GET /repos/:owner/:repo/statuses/:ref`.
      tags:
        - repos
      operationId: repos/list-commit-statuses-for-ref
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#list-commit-statuses-for-a-reference
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - name: ref
          description: ref parameter
          in: path
          required: true
          schema:
            type: string
          x-multi-segment: true
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/status'
              examples:
                default:
                  $ref: '#/components/examples/status-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '301':
          $ref: '#/components/responses/moved_permanently'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: statuses
  /repos/{owner}/{repo}/community/profile:
    get:
      summary: Get community profile metrics
      description: |-
        This endpoint will return all community profile metrics, including an
        overall health score, repository description, the presence of documentation, detected
        code of conduct, detected license, and the presence of ISSUE\_TEMPLATE, PULL\_REQUEST\_TEMPLATE,
        README, and CONTRIBUTING files.

        The `health_percentage` score is defined as a percentage of how many of
        these four documents are present: README, CONTRIBUTING, LICENSE, and
        CODE_OF_CONDUCT. For example, if all four documents are present, then
        the `health_percentage` is `100`. If only one is present, then the
        `health_percentage` is `25`.

        `content_reports_enabled` is only returned for organization-owned repositories.
      tags:
        - repos
      operationId: repos/get-community-profile-metrics
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#get-community-profile-metrics
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/community-profile'
              examples:
                default:
                  $ref: '#/components/examples/community-profile'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: community
  /repos/{owner}/{repo}/compare/{basehead}:
    get:
      summary: Compare two commits
      description: |-
        The `basehead` param is comprised of two parts: `base` and `head`. Both must be branch names in `repo`. To compare branches across other repositories in the same network as `repo`, use the format `<USERNAME>:branch`.

        The response from the API is equivalent to running the `git log base..head` command; however, commits are returned in chronological order. Pass the appropriate [media type](https://docs.github.com/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) to fetch diff and patch formats.

        The response also includes details on the files that were changed between the two commits. This includes the status of the change (for example, if a file was added, removed, modified, or renamed), and details of the change itself. For example, files with a `renamed` status have a `previous_filename` field showing the previous filename of the file, and files with a `modified` status have a `patch` field showing the changes made to the file.

        **Working with large comparisons**

        To process a response with a large number of commits, you can use (`per_page` or `page`) to paginate the results. When using paging, the list of changed files is only returned with page 1, but includes all changed files for the entire comparison. For more information on working with pagination, see "[Traversing with pagination](/rest/guides/traversing-with-pagination)."

        When calling this API without any paging parameters (`per_page` or `page`), the returned list is limited to 250 commits and the last commit in the list is the most recent of the entire comparison. When a paging parameter is specified, the first commit in the returned list of each page is the earliest.

        **Signature verification object**

        The response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:

        | Name | Type | Description |
        | ---- | ---- | ----------- |
        | `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |
        | `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |
        | `signature` | `string` | The signature that was extracted from the commit. |
        | `payload` | `string` | The value that was signed. |

        These are the possible values for `reason` in the `verification` object:

        | Value | Description |
        | ----- | ----------- |
        | `expired_key` | The key that made the signature is expired. |
        | `not_signing_key` | The "signing" flag is not among the usage flags in the GPG key that made the signature. |
        | `gpgverify_error` | There was an error communicating with the signature verification service. |
        | `gpgverify_unavailable` | The signature verification service is currently unavailable. |
        | `unsigned` | The object does not include a signature. |
        | `unknown_signature_type` | A non-PGP signature was found in the commit. |
        | `no_user` | No user was associated with the `committer` email address in the commit. |
        | `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |
        | `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |
        | `unknown_key` | The key that made the signature has not been registered with any user's account. |
        | `malformed_signature` | There was an error parsing the signature. |
        | `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |
        | `valid` | None of the above errors applied, so the signature is considered to be verified. |
      tags:
        - repos
      operationId: repos/compare-commits
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#compare-two-commits
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/per-page'
        - name: basehead
          description: The base branch and head branch to compare. This parameter expects the format `{base}...{head}`.
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commit-comparison'
              examples:
                default:
                  $ref: '#/components/examples/commit-comparison'
        '404':
          $ref: '#/components/responses/not_found'
        '500':
          $ref: '#/components/responses/internal_error'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: commits
  /repos/{owner}/{repo}/contents/{path}:
    get:
      summary: Get repository content
      description: |-
        Gets the contents of a file or directory in a repository. Specify the file path or directory in `:path`. If you omit
        `:path`, you will receive the contents of the repository's root directory. See the description below regarding what the API response includes for directories. 

        Files and symlinks support [a custom media type](https://docs.github.com/rest/reference/repos#custom-media-types) for
        retrieving the raw content or rendered HTML (when supported). All content types support [a custom media
        type](https://docs.github.com/rest/reference/repos#custom-media-types) to ensure the content is returned in a consistent
        object format.

        **Note**:
        *   To get a repository's contents recursively, you can [recursively get the tree](https://docs.github.com/rest/reference/git#trees).
        *   This API has an upper limit of 1,000 files for a directory. If you need to retrieve more files, use the [Git Trees
        API](https://docs.github.com/rest/reference/git#get-a-tree).
        *   This API supports files up to 1 megabyte in size.

        #### If the content is a directory
        The response will be an array of objects, one object for each item in the directory.
        When listing the contents of a directory, submodules have their "type" specified as "file". Logically, the value
        _should_ be "submodule". This behavior exists in API v3 [for backwards compatibility purposes](https://git.io/v1YCW).
        In the next major version of the API, the type will be returned as "submodule".

        #### If the content is a symlink 
        If the requested `:path` points to a symlink, and the symlink's target is a normal file in the repository, then the
        API responds with the content of the file (in the format shown in the example. Otherwise, the API responds with an object 
        describing the symlink itself.

        #### If the content is a submodule
        The `submodule_git_url` identifies the location of the submodule repository, and the `sha` identifies a specific
        commit within the submodule repository. Git uses the given URL when cloning the submodule repository, and checks out
        the submodule at that specific commit.

        If the submodule repository is not hosted on github.com, the Git URLs (`git_url` and `_links["git"]`) and the
        github.com URLs (`html_url` and `_links["html"]`) will have null values.
      tags:
        - repos
      operationId: repos/get-content
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#get-repository-content
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - name: path
          description: path parameter
          in: path
          required: true
          schema:
            type: string
          x-multi-segment: true
        - name: ref
          description: 'The name of the commit/branch/tag. Default: the repository’s default branch (usually `master`)'
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Response
          content:
            application/vnd.github.v3.object:
              schema:
                $ref: '#/components/schemas/content-tree'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/content-directory'
                  - $ref: '#/components/schemas/content-file'
                  - $ref: '#/components/schemas/content-symlink'
                  - $ref: '#/components/schemas/content-submodule'
              examples:
                response-if-content-is-a-file:
                  $ref: '#/components/examples/content-file-response-if-content-is-a-file'
                response-if-content-is-a-directory:
                  $ref: '#/components/examples/content-file-response-if-content-is-a-directory'
                response-if-content-is-a-symlink:
                  $ref: '#/components/examples/content-file-response-if-content-is-a-symlink'
                response-if-content-is-a-submodule:
                  $ref: '#/components/examples/content-file-response-if-content-is-a-submodule'
        '302':
          $ref: '#/components/responses/found'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: contents
    put:
      summary: Create or update file contents
      description: Creates a new file or replaces an existing file in a repository.
      tags:
        - repos
      operationId: repos/create-or-update-file-contents
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#create-or-update-file-contents
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - name: path
          description: path parameter
          in: path
          required: true
          schema:
            type: string
          x-multi-segment: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: The commit message.
                content:
                  type: string
                  description: The new file content, using Base64 encoding.
                sha:
                  type: string
                  description: '**Required if you are updating a file**. The blob SHA of the file being replaced.'
                branch:
                  type: string
                  description: 'The branch name. Default: the repository’s default branch (usually `master`)'
                committer:
                  type: object
                  description: 'The person that committed the file. Default: the authenticated user.'
                  properties:
                    name:
                      type: string
                      description: The name of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted.
                    email:
                      type: string
                      description: The email of the author or committer of the commit. You'll receive a `422` status code if `email` is omitted.
                    date:
                      type: string
                      example: '"2013-01-05T13:13:22+05:00"'
                  required:
                    - name
                    - email
                author:
                  type: object
                  description: 'The author of the file. Default: The `committer` or the authenticated user if you omit `committer`.'
                  properties:
                    name:
                      type: string
                      description: The name of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted.
                    email:
                      type: string
                      description: The email of the author or committer of the commit. You'll receive a `422` status code if `email` is omitted.
                    date:
                      type: string
                      example: '"2013-01-15T17:13:22+05:00"'
                  required:
                    - name
                    - email
              required:
                - message
                - content
            examples:
              example-for-creating-a-file:
                summary: Example for creating a file
                value:
                  message: my commit message
                  committer:
                    name: Monalisa Octocat
                    email: octocat@github.com
                  content: bXkgbmV3IGZpbGUgY29udGVudHM=
              example-for-updating-a-file:
                summary: Example for updating a file
                value:
                  message: a new commit message
                  committer:
                    name: Monalisa Octocat
                    email: octocat@github.com
                  content: bXkgdXBkYXRlZCBmaWxlIGNvbnRlbnRz
                  sha: 95b966ae1c166bd92f8ae7d1c313e738c731dfc3
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/file-commit'
              examples:
                example-for-updating-a-file:
                  $ref: '#/components/examples/file-commit-example-for-updating-a-file'
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/file-commit'
              examples:
                example-for-creating-a-file:
                  $ref: '#/components/examples/file-commit-example-for-creating-a-file'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: contents
    delete:
      summary: Delete a file
      description: |-
        Deletes a file in a repository.

        You can provide an additional `committer` parameter, which is an object containing information about the committer. Or, you can provide an `author` parameter, which is an object containing information about the author.

        The `author` section is optional and is filled in with the `committer` information if omitted. If the `committer` information is omitted, the authenticated user's information is used.

        You must provide values for both `name` and `email`, whether you choose to use `author` or `committer`. Otherwise, you'll receive a `422` status code.
      tags:
        - repos
      operationId: repos/delete-file
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#delete-a-file
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - name: path
          description: path parameter
          in: path
          required: true
          schema:
            type: string
          x-multi-segment: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: The commit message.
                sha:
                  type: string
                  description: The blob SHA of the file being replaced.
                branch:
                  type: string
                  description: 'The branch name. Default: the repository’s default branch (usually `master`)'
                committer:
                  type: object
                  description: object containing information about the committer.
                  properties:
                    name:
                      type: string
                      description: The name of the author (or committer) of the commit
                    email:
                      type: string
                      description: The email of the author (or committer) of the commit
                author:
                  type: object
                  description: object containing information about the author.
                  properties:
                    name:
                      type: string
                      description: The name of the author (or committer) of the commit
                    email:
                      type: string
                      description: The email of the author (or committer) of the commit
              required:
                - message
                - sha
            example:
              message: my commit message
              committer:
                name: Monalisa Octocat
                email: octocat@github.com
              sha: 329688480d39049927147c162b9d2deaf885005f
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/file-commit'
              examples:
                default:
                  $ref: '#/components/examples/file-commit'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict'
        '422':
          $ref: '#/components/responses/validation_failed'
        '503':
          $ref: '#/components/responses/service_unavailable'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: contents
  /repos/{owner}/{repo}/contributors:
    get:
      summary: List repository contributors
      description: |-
        Lists contributors to the specified repository and sorts them by the number of commits per contributor in descending order. This endpoint may return information that is a few hours old because the GitHub REST API v3 caches contributor data to improve performance.

        GitHub identifies contributors by author email address. This endpoint groups contribution counts by GitHub user, which includes all associated email addresses. To improve performance, only the first 500 author email addresses in the repository link to GitHub users. The rest will appear as anonymous contributors without associated GitHub user information.
      tags:
        - repos
      operationId: repos/list-contributors
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#list-repository-contributors
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - name: anon
          description: Set to `1` or `true` to include anonymous contributors in results.
          in: query
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: if repository contains content
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/contributor'
              examples:
                response-if-repository-contains-content:
                  $ref: '#/components/examples/contributor-items-response-if-repository-contains-content'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '204':
          description: Response if repository is empty
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: null
  /repos/{owner}/{repo}/deployments:
    get:
      summary: List deployments
      description: 'Simple filtering of deployments is available via query parameters:'
      tags:
        - repos
      operationId: repos/list-deployments
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#list-deployments
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - name: sha
          description: The SHA recorded at creation time.
          in: query
          required: false
          schema:
            type: string
            default: none
        - name: ref
          description: The name of the ref. This can be a branch, tag, or SHA.
          in: query
          required: false
          schema:
            type: string
            default: none
        - name: task
          description: The name of the task for the deployment (e.g., `deploy` or `deploy:migrations`).
          in: query
          required: false
          schema:
            type: string
            default: none
        - name: environment
          description: The name of the environment that was deployed to (e.g., `staging` or `production`).
          in: query
          required: false
          schema:
            type: string
            default: none
            nullable: true
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/deployment'
              examples:
                default:
                  $ref: '#/components/examples/deployment-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: deployments
    post:
      summary: Create a deployment
      description: |-
        Deployments offer a few configurable parameters with certain defaults.

        The `ref` parameter can be any named branch, tag, or SHA. At GitHub we often deploy branches and verify them
        before we merge a pull request.

        The `environment` parameter allows deployments to be issued to different runtime environments. Teams often have
        multiple environments for verifying their applications, such as `production`, `staging`, and `qa`. This parameter
        makes it easier to track which environments have requested deployments. The default environment is `production`.

        The `auto_merge` parameter is used to ensure that the requested ref is not behind the repository's default branch. If
        the ref _is_ behind the default branch for the repository, we will attempt to merge it for you. If the merge succeeds,
        the API will return a successful merge commit. If merge conflicts prevent the merge from succeeding, the API will
        return a failure response.

        By default, [commit statuses](https://docs.github.com/rest/reference/commits#commit-statuses) for every submitted context must be in a `success`
        state. The `required_contexts` parameter allows you to specify a subset of contexts that must be `success`, or to
        specify contexts that have not yet been submitted. You are not required to use commit statuses to deploy. If you do
        not require any contexts or create any commit statuses, the deployment will always succeed.

        The `payload` parameter is available for any extra information that a deployment system might need. It is a JSON text
        field that will be passed on when a deployment event is dispatched.

        The `task` parameter is used by the deployment system to allow different execution paths. In the web world this might
        be `deploy:migrations` to run schema changes on the system. In the compiled world this could be a flag to compile an
        application with debugging enabled.

        Users with `repo` or `repo_deployment` scopes can create a deployment for a given ref.

        #### Merged branch response
        You will see this response when GitHub automatically merges the base branch into the topic branch instead of creating
        a deployment. This auto-merge happens when:
        *   Auto-merge option is enabled in the repository
        *   Topic branch does not include the latest changes on the base branch, which is `master` in the response example
        *   There are no merge conflicts

        If there are no new commits in the base branch, a new request to create a deployment should give a successful
        response.

        #### Merge conflict response
        This error happens when the `auto_merge` option is enabled and when the default branch (in this case `master`), can't
        be merged into the branch that's being deployed (in this case `topic-branch`), due to merge conflicts.

        #### Failed commit status checks
        This error happens when the `required_contexts` parameter indicates that one or more contexts need to have a `success`
        status for the commit to be deployed, but one or more of the required contexts do not have a state of `success`.
      tags:
        - repos
      operationId: repos/create-deployment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#create-a-deployment
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ref:
                  type: string
                  description: The ref to deploy. This can be a branch, tag, or SHA.
                task:
                  type: string
                  description: Specifies a task to execute (e.g., `deploy` or `deploy:migrations`).
                  default: deploy
                auto_merge:
                  type: boolean
                  description: Attempts to automatically merge the default branch into the requested ref, if it's behind the default branch.
                  default: true
                required_contexts:
                  type: array
                  description: The [status](https://docs.github.com/rest/reference/commits#commit-statuses) contexts to verify against commit status checks. If you omit this parameter, GitHub verifies all unique contexts before creating a deployment. To bypass checking entirely, pass an empty array. Defaults to all unique contexts.
                  items:
                    type: string
                payload:
                  oneOf:
                    - type: object
                      additionalProperties: true
                    - type: string
                      description: JSON payload with extra information about the deployment.
                      default: ''
                environment:
                  type: string
                  description: Name for the target deployment environment (e.g., `production`, `staging`, `qa`).
                  default: production
                description:
                  type: string
                  description: Short description of the deployment.
                  default: ''
                  nullable: true
                transient_environment:
                  type: boolean
                  description: 'Specifies if the given environment is specific to the deployment and will no longer exist at some point in the future. Default: `false`'
                  default: false
                production_environment:
                  type: boolean
                  description: 'Specifies if the given environment is one that end-users directly interact with. Default: `true` when `environment` is `production` and `false` otherwise.'
              required:
                - ref
            examples:
              simple-example:
                summary: Simple example
                value:
                  ref: topic-branch
                  payload: '{ "deploy": "migrate" }'
                  description: Deploy request from hubot
              advanced-example:
                summary: Advanced example
                value:
                  ref: topic-branch
                  auto_merge: false
                  payload: '{ "deploy": "migrate" }'
                  description: Deploy request from hubot
                  required_contexts:
                    - ci/janky
                    - security/brakeman
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deployment'
              examples:
                simple-example:
                  $ref: '#/components/examples/deployment-simple-example'
        '202':
          description: Merged branch response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                merged-branch-response:
                  value:
                    message: Auto-merged master into topic-branch on deployment.
        '409':
          description: Conflict when there is a merge conflict or the commit's status checks failed
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: deployments
  /repos/{owner}/{repo}/deployments/{deployment_id}:
    get:
      summary: Get a deployment
      description: ''
      tags:
        - repos
      operationId: repos/get-deployment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#get-a-deployment
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/deployment-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deployment'
              examples:
                default:
                  $ref: '#/components/examples/deployment'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: deployments
    delete:
      summary: Delete a deployment
      description: |-
        If the repository only has one deployment, you can delete the deployment regardless of its status. If the repository has more than one deployment, you can only delete inactive deployments. This ensures that repositories with multiple deployments will always have an active deployment. Anyone with `repo` or `repo_deployment` scopes can delete a deployment.

        To set a deployment as inactive, you must:

        *   Create a new deployment that is active so that the system has a record of the current state, then delete the previously active deployment.
        *   Mark the active deployment as inactive by adding any non-successful deployment status.

        For more information, see "[Create a deployment](https://docs.github.com/rest/reference/repos/#create-a-deployment)" and "[Create a deployment status](https://docs.github.com/rest/reference/repos#create-a-deployment-status)."
      tags:
        - repos
      operationId: repos/delete-deployment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#delete-a-deployment
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/deployment-id'
      responses:
        '204':
          description: Response
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed_simple'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: deployments
  /repos/{owner}/{repo}/deployments/{deployment_id}/statuses:
    get:
      summary: List deployment statuses
      description: 'Users with pull access can view deployment statuses for a deployment:'
      tags:
        - repos
      operationId: repos/list-deployment-statuses
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#list-deployment-statuses
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/deployment-id'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/deployment-status'
              examples:
                default:
                  $ref: '#/components/examples/deployment-status-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: deployments
    post:
      summary: Create a deployment status
      description: |-
        Users with `push` access can create deployment statuses for a given deployment.

        GitHub Apps require `read & write` access to "Deployments" and `read-only` access to "Repo contents" (for private repos). OAuth Apps require the `repo_deployment` scope.
      tags:
        - repos
      operationId: repos/create-deployment-status
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#create-a-deployment-status
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/deployment-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                state:
                  type: string
                  description: The state of the status. Can be one of `error`, `failure`, `inactive`, `in_progress`, `queued`, `pending`, or `success`. When you set a transient deployment to `inactive`, the deployment will be shown as `destroyed` in GitHub.
                  enum:
                    - error
                    - failure
                    - inactive
                    - in_progress
                    - queued
                    - pending
                    - success
                target_url:
                  type: string
                  description: The target URL to associate with this status. This URL should contain output to keep the user updated while the task is running or serve as historical information for what happened in the deployment. **Note:** It's recommended to use the `log_url` parameter, which replaces `target_url`.
                  default: ''
                log_url:
                  type: string
                  description: 'The full URL of the deployment''s output. This parameter replaces `target_url`. We will continue to accept `target_url` to support legacy uses, but we recommend replacing `target_url` with `log_url`. Setting `log_url` will automatically set `target_url` to the same value. Default: `""`'
                  default: ''
                description:
                  type: string
                  description: A short description of the status. The maximum description length is 140 characters.
                  default: ''
                environment:
                  type: string
                  description: Name for the target deployment environment, which can be changed when setting a deploy status. For example, `production`, `staging`, or `qa`.
                  enum:
                    - production
                    - staging
                    - qa
                environment_url:
                  type: string
                  description: 'Sets the URL for accessing your environment. Default: `""`'
                  default: ''
                auto_inactive:
                  type: boolean
                  description: 'Adds a new `inactive` status to all prior non-transient, non-production environment deployments with the same repository and `environment` name as the created status''s deployment. An `inactive` status is only added to deployments that had a `success` state. Default: `true`'
              required:
                - state
            example:
              environment: production
              state: success
              log_url: https://example.com/deployment/42/output
              description: Deployment finished successfully.
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deployment-status'
              examples:
                default:
                  $ref: '#/components/examples/deployment-status'
          headers:
            Location:
              example: https://api.github.com/repos/octocat/example/deployments/42/statuses/1
              schema:
                type: string
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: deployments
  /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}:
    get:
      summary: Get a deployment status
      description: 'Users with pull access can view a deployment status for a deployment:'
      tags:
        - repos
      operationId: repos/get-deployment-status
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#get-a-deployment-status
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/deployment-id'
        - name: status_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deployment-status'
              examples:
                default:
                  $ref: '#/components/examples/deployment-status'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: deployments
  /repos/{owner}/{repo}/dispatches:
    post:
      summary: Create a repository dispatch event
      description: |-
        You can use this endpoint to trigger a webhook event called `repository_dispatch` when you want activity that happens outside of GitHub to trigger a GitHub Actions workflow or GitHub App webhook. You must configure your GitHub Actions workflow or GitHub App to run when the `repository_dispatch` event occurs. For an example `repository_dispatch` webhook payload, see "[RepositoryDispatchEvent](https://docs.github.com/webhooks/event-payloads/#repository_dispatch)."

        The `client_payload` parameter is available for any extra information that your workflow might need. This parameter is a JSON payload that will be passed on when the webhook event is dispatched. For example, the `client_payload` can include a message that a user would like to send using a GitHub Actions workflow. Or the `client_payload` can be used as a test to debug your workflow.

        This endpoint requires write access to the repository by providing either:

          - Personal access tokens with `repo` scope. For more information, see "[Creating a personal access token for the command line](https://docs.github.com/articles/creating-a-personal-access-token-for-the-command-line)" in the GitHub Help documentation.
          - GitHub Apps with both `metadata:read` and `contents:read&write` permissions.

        This input example shows how you can use the `client_payload` as a test to debug your workflow.
      tags:
        - repos
      operationId: repos/create-dispatch-event
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#create-a-repository-dispatch-event
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - event_type
              properties:
                event_type:
                  type: string
                  description: A custom webhook event name.
                  minLength: 1
                  maxLength: 100
                client_payload:
                  type: object
                  description: JSON payload with extra information about the webhook event that your action or worklow may use.
                  additionalProperties: true
                  maxProperties: 10
            example:
              event_type: on-demand-test
              client_payload:
                unit: false
                integration: true
      responses:
        '204':
          description: Response
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: null
  /repos/{owner}/{repo}/environments:
    get:
      summary: Get all environments
      description: |-
        Get all environments for a repository.

        Anyone with read access to the repository can use this endpoint. If the repository is private, you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.
      tags:
        - repos
      operationId: repos/get-all-environments
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#get-all-environments
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_count:
                    description: The number of environments in this repository
                    example: 5
                    type: integer
                  environments:
                    type: array
                    items:
                      $ref: '#/components/schemas/environment'
              examples:
                default:
                  $ref: '#/components/examples/environments'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: environments
  /repos/{owner}/{repo}/environments/{environment_name}:
    get:
      summary: Get an environment
      description: Anyone with read access to the repository can use this endpoint. If the repository is private, you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.
      tags:
        - repos
      operationId: repos/get-environment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#get-an-environment
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/environment-name'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/environment'
              examples:
                default:
                  $ref: '#/components/examples/environment'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: environments
    put:
      summary: Create or update an environment
      description: |-
        Create or update an environment with protection rules, such as required reviewers. For more information about environment protection rules, see "[Environments](/actions/reference/environments#environment-protection-rules)."

        **Note:** Although you can use this operation to specify that only branches that match specified name patterns can deploy to this environment, you must use the UI to set the name patterns. For more information, see "[Environments](/actions/reference/environments#deployment-branches)."

        **Note:** To create or update secrets for an environment, see "[Secrets](/rest/reference/actions#secrets)."

        You must authenticate using an access token with the repo scope to use this endpoint.
      tags:
        - repos
      operationId: repos/create-or-update-environment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#create-or-update-an-environment
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/environment-name'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              nullable: true
              properties:
                wait_timer:
                  $ref: '#/components/schemas/wait-timer'
                reviewers:
                  type: array
                  nullable: true
                  description: The people or teams that may review jobs that reference the environment. You can list up to six users or teams as reviewers. The reviewers must have at least read access to the repository. Only one of the required reviewers needs to approve the job for it to proceed.
                  items:
                    type: object
                    properties:
                      type:
                        $ref: '#/components/schemas/deployment-reviewer-type'
                      id:
                        type: integer
                        description: The id of the user or team who can review the deployment
                        example: 4532992
                deployment_branch_policy:
                  $ref: '#/components/schemas/deployment_branch_policy'
              additionalProperties: false
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/environment'
              examples:
                default:
                  $ref: '#/components/examples/environment'
        '422':
          description: Validation error when the environment name is invalid or when `protected_branches` and `custom_branch_policies` in `deployment_branch_policy` are set to the same value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/basic-error'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: environments
    delete:
      summary: Delete an environment
      description: You must authenticate using an access token with the repo scope to use this endpoint.
      tags:
        - repos
      operationId: repos/delete-an-environment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#delete-an-environment
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/environment-name'
      responses:
        '204':
          description: Default response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: environments
  /repos/{owner}/{repo}/forks:
    get:
      summary: List forks
      description: ''
      tags:
        - repos
      operationId: repos/list-forks
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#list-forks
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - name: sort
          description: The sort order. Can be either `newest`, `oldest`, or `stargazers`.
          in: query
          required: false
          schema:
            type: string
            enum:
              - newest
              - oldest
              - stargazers
              - watchers
            default: newest
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/minimal-repository'
              examples:
                default:
                  $ref: '#/components/examples/minimal-repository-items-2'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '400':
          $ref: '#/components/responses/bad_request'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: forks
    post:
      summary: Create a fork
      description: |-
        Create a fork for the authenticated user.

        **Note**: Forking a Repository happens asynchronously. You may have to wait a short period of time before you can access the git objects. If this takes longer than 5 minutes, be sure to contact [GitHub Support](https://support.github.com/contact?tags=dotcom-rest-api).
      tags:
        - repos
      operationId: repos/create-fork
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#create-a-fork
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              nullable: true
              properties:
                organization:
                  type: string
                  description: Optional parameter to specify the organization name if forking into an organization.
      responses:
        '202':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/full-repository'
              examples:
                default:
                  $ref: '#/components/examples/full-repository'
        '400':
          $ref: '#/components/responses/bad_request'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: forks
  /repos/{owner}/{repo}/hooks:
    get:
      summary: List repository webhooks
      description: ''
      tags:
        - repos
      operationId: repos/list-webhooks
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#list-repository-webhooks
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/hook'
              examples:
                default:
                  $ref: '#/components/examples/hook-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: webhooks
    post:
      summary: Create a repository webhook
      description: |-
        Repositories can have multiple webhooks installed. Each webhook should have a unique `config`. Multiple webhooks can
        share the same `config` as long as those webhooks do not have any `events` that overlap.
      tags:
        - repos
      operationId: repos/create-webhook
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#create-a-repository-webhook
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              nullable: true
              properties:
                name:
                  type: string
                  description: 'Use `web` to create a webhook. Default: `web`. This parameter only accepts the value `web`.'
                config:
                  type: object
                  description: Key/value pairs to provide settings for this webhook. [These are defined below](https://docs.github.com/rest/reference/repos#create-hook-config-params).
                  properties:
                    url:
                      $ref: '#/components/schemas/webhook-config-url'
                    content_type:
                      $ref: '#/components/schemas/webhook-config-content-type'
                    secret:
                      $ref: '#/components/schemas/webhook-config-secret'
                    insecure_ssl:
                      $ref: '#/components/schemas/webhook-config-insecure-ssl'
                    token:
                      type: string
                      example: '"abc"'
                    digest:
                      type: string
                      example: '"sha256"'
                events:
                  type: array
                  description: Determines what [events](https://docs.github.com/webhooks/event-payloads) the hook is triggered for.
                  default:
                    - push
                  items:
                    type: string
                active:
                  type: boolean
                  description: Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.
                  default: true
              additionalProperties: false
            example:
              name: web
              active: true
              events:
                - push
                - pull_request
              config:
                url: https://example.com/webhook
                content_type: json
                insecure_ssl: '0'
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/hook'
              examples:
                default:
                  $ref: '#/components/examples/hook'
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/hooks/12345678
              schema:
                type: string
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: webhooks
  /repos/{owner}/{repo}/hooks/{hook_id}:
    get:
      summary: Get a repository webhook
      description: Returns a webhook configured in a repository. To get only the webhook `config` properties, see "[Get a webhook configuration for a repository](/rest/reference/repos#get-a-webhook-configuration-for-a-repository)."
      tags:
        - repos
      operationId: repos/get-webhook
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#get-a-repository-webhook
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/hook-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/hook'
              examples:
                default:
                  $ref: '#/components/examples/hook'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: webhooks
    patch:
      summary: Update a repository webhook
      description: Updates a webhook configured in a repository. If you previously had a `secret` set, you must provide the same `secret` or set a new `secret` or the secret will be removed. If you are only updating individual webhook `config` properties, use "[Update a webhook configuration for a repository](/rest/reference/repos#update-a-webhook-configuration-for-a-repository)."
      tags:
        - repos
      operationId: repos/update-webhook
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#update-a-repository-webhook
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/hook-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                config:
                  type: object
                  description: Key/value pairs to provide settings for this webhook. [These are defined below](https://docs.github.com/rest/reference/repos#create-hook-config-params).
                  properties:
                    url:
                      $ref: '#/components/schemas/webhook-config-url'
                    content_type:
                      $ref: '#/components/schemas/webhook-config-content-type'
                    secret:
                      $ref: '#/components/schemas/webhook-config-secret'
                    insecure_ssl:
                      $ref: '#/components/schemas/webhook-config-insecure-ssl'
                    address:
                      type: string
                      example: '"bar@example.com"'
                    room:
                      type: string
                      example: '"The Serious Room"'
                  required:
                    - url
                events:
                  type: array
                  description: Determines what [events](https://docs.github.com/webhooks/event-payloads) the hook is triggered for. This replaces the entire array of events.
                  default:
                    - push
                  items:
                    type: string
                add_events:
                  type: array
                  description: Determines a list of events to be added to the list of events that the Hook triggers for.
                  items:
                    type: string
                remove_events:
                  type: array
                  description: Determines a list of events to be removed from the list of events that the Hook triggers for.
                  items:
                    type: string
                active:
                  type: boolean
                  description: Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.
                  default: true
            example:
              active: true
              add_events:
                - pull_request
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/hook'
              examples:
                default:
                  $ref: '#/components/examples/hook'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: webhooks
    delete:
      summary: Delete a repository webhook
      description: ''
      tags:
        - repos
      operationId: repos/delete-webhook
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#delete-a-repository-webhook
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/hook-id'
      responses:
        '204':
          description: Response
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: webhooks
  /repos/{owner}/{repo}/hooks/{hook_id}/config:
    get:
      summary: Get a webhook configuration for a repository
      description: |-
        Returns the webhook configuration for a repository. To get more information about the webhook, including the `active` state and `events`, use "[Get a repository webhook](/rest/reference/orgs#get-a-repository-webhook)."

        Access tokens must have the `read:repo_hook` or `repo` scope, and GitHub Apps must have the `repository_hooks:read` permission.
      tags:
        - repos
      operationId: repos/get-webhook-config-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#get-a-webhook-configuration-for-a-repository
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/hook-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook-config'
              examples:
                default:
                  $ref: '#/components/examples/webhook-config'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: webhooks
    patch:
      summary: Update a webhook configuration for a repository
      description: |-
        Updates the webhook configuration for a repository. To update more information about the webhook, including the `active` state and `events`, use "[Update a repository webhook](/rest/reference/orgs#update-a-repository-webhook)."

        Access tokens must have the `write:repo_hook` or `repo` scope, and GitHub Apps must have the `repository_hooks:write` permission.
      tags:
        - repos
      operationId: repos/update-webhook-config-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#update-a-webhook-configuration-for-a-repository
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/hook-id'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                url:
                  $ref: '#/components/schemas/webhook-config-url'
                content_type:
                  $ref: '#/components/schemas/webhook-config-content-type'
                secret:
                  $ref: '#/components/schemas/webhook-config-secret'
                insecure_ssl:
                  $ref: '#/components/schemas/webhook-config-insecure-ssl'
              example:
                content_type: json
                insecure_ssl: '0'
                secret: '********'
                url: https://example.com/webhook
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook-config'
              examples:
                default:
                  $ref: '#/components/examples/webhook-config'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: webhooks
  /repos/{owner}/{repo}/hooks/{hook_id}/deliveries:
    get:
      summary: List deliveries for a repository webhook
      description: Returns a list of webhook deliveries for a webhook configured in a repository.
      tags:
        - repos
      operationId: repos/list-webhook-deliveries
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#list-deliveries-for-a-repository-webhook
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/hook-id'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/cursor'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/hook-delivery-item'
              examples:
                default:
                  $ref: '#/components/examples/hook-delivery-items'
        '400':
          $ref: '#/components/responses/bad_request'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: webhooks
  /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}:
    get:
      summary: Get a delivery for a repository webhook
      description: Returns a delivery for a webhook configured in a repository.
      tags:
        - repos
      operationId: repos/get-webhook-delivery
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#get-a-delivery-for-a-repository-webhook
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/hook-id'
        - $ref: '#/components/parameters/delivery-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/hook-delivery'
              examples:
                default:
                  $ref: '#/components/examples/hook-delivery'
        '400':
          $ref: '#/components/responses/bad_request'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: webhooks
  /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts:
    post:
      summary: Redeliver a delivery for a repository webhook
      description: Redeliver a webhook delivery for a webhook configured in a repository.
      tags:
        - repos
      operationId: repos/redeliver-webhook-delivery
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#redeliver-a-delivery-for-a-repository-webhook
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/hook-id'
        - $ref: '#/components/parameters/delivery-id'
      responses:
        '202':
          $ref: '#/components/responses/accepted'
        '400':
          $ref: '#/components/responses/bad_request'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: webhooks
  /repos/{owner}/{repo}/hooks/{hook_id}/pings:
    post:
      summary: Ping a repository webhook
      description: This will trigger a [ping event](https://docs.github.com/webhooks/#ping-event) to be sent to the hook.
      tags:
        - repos
      operationId: repos/ping-webhook
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#ping-a-repository-webhook
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/hook-id'
      responses:
        '204':
          description: Response
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: webhooks
  /repos/{owner}/{repo}/hooks/{hook_id}/tests:
    post:
      summary: Test the push repository webhook
      description: |-
        This will trigger the hook with the latest push to the current repository if the hook is subscribed to `push` events. If the hook is not subscribed to `push` events, the server will respond with 204 but no test POST will be generated.

        **Note**: Previously `/repos/:owner/:repo/hooks/:hook_id/test`
      tags:
        - repos
      operationId: repos/test-push-webhook
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#test-the-push-repository-webhook
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/hook-id'
      responses:
        '204':
          description: Response
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: webhooks
  /repos/{owner}/{repo}/invitations:
    get:
      summary: List repository invitations
      description: When authenticating as a user with admin rights to a repository, this endpoint will list all currently open repository invitations.
      tags:
        - repos
      operationId: repos/list-invitations
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#list-repository-invitations
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/repository-invitation'
              examples:
                default:
                  $ref: '#/components/examples/repository-invitation-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: invitations
  /repos/{owner}/{repo}/invitations/{invitation_id}:
    patch:
      summary: Update a repository invitation
      description: ''
      tags:
        - repos
      operationId: repos/update-invitation
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#update-a-repository-invitation
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/invitation-id'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                permissions:
                  type: string
                  description: The permissions that the associated user will have on the repository. Valid values are `read`, `write`, `maintain`, `triage`, and `admin`.
                  enum:
                    - read
                    - write
                    - maintain
                    - triage
                    - admin
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/repository-invitation'
              examples:
                default:
                  $ref: '#/components/examples/repository-invitation'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: invitations
    delete:
      summary: Delete a repository invitation
      description: ''
      tags:
        - repos
      operationId: repos/delete-invitation
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#delete-a-repository-invitation
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/invitation-id'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: invitations
  /repos/{owner}/{repo}/keys:
    get:
      summary: List deploy keys
      description: ''
      tags:
        - repos
      operationId: repos/list-deploy-keys
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#list-deploy-keys
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/deploy-key'
              examples:
                default:
                  $ref: '#/components/examples/deploy-key-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: keys
    post:
      summary: Create a deploy key
      description: You can create a read-only deploy key.
      tags:
        - repos
      operationId: repos/create-deploy-key
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#create-a-deploy-key
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: A name for the key.
                key:
                  type: string
                  description: The contents of the key.
                read_only:
                  type: boolean
                  description: |-
                    If `true`, the key will only be able to read repository contents. Otherwise, the key will be able to read and write.  
                      
                    Deploy keys with write access can perform the same actions as an organization member with admin access, or a collaborator on a personal repository. For more information, see "[Repository permission levels for an organization](https://docs.github.com/articles/repository-permission-levels-for-an-organization/)" and "[Permission levels for a user account repository](https://docs.github.com/articles/permission-levels-for-a-user-account-repository/)."
              required:
                - key
            example:
              title: octocat@octomac
              key: ssh-rsa AAA...
              read_only: true
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy-key'
              examples:
                default:
                  $ref: '#/components/examples/deploy-key'
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/keys/1
              schema:
                type: string
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: keys
  /repos/{owner}/{repo}/keys/{key_id}:
    get:
      summary: Get a deploy key
      description: ''
      tags:
        - repos
      operationId: repos/get-deploy-key
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#get-a-deploy-key
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/key-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy-key'
              examples:
                default:
                  $ref: '#/components/examples/deploy-key'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: keys
    delete:
      summary: Delete a deploy key
      description: Deploy keys are immutable. If you need to update a key, remove the key and create a new one instead.
      tags:
        - repos
      operationId: repos/delete-deploy-key
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#delete-a-deploy-key
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/key-id'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: keys
  /repos/{owner}/{repo}/languages:
    get:
      summary: List repository languages
      description: Lists languages for the specified repository. The value shown for each language is the number of bytes of code written in that language.
      tags:
        - repos
      operationId: repos/list-languages
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#list-repository-languages
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/language'
              examples:
                default:
                  $ref: '#/components/examples/language'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: null
  /repos/{owner}/{repo}/lfs:
    put:
      summary: Enable Git LFS for a repository
      description: ''
      operationId: repos/enable-lfs-for-repo
      tags:
        - repos
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#enable-git-lfs-for-a-repository
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      responses:
        '202':
          $ref: '#/components/responses/accepted'
        '403':
          description: |-
            We will return a 403 with one of the following messages:

            - Git LFS support not enabled because Git LFS is globally disabled.
            - Git LFS support not enabled because Git LFS is disabled for the root repository in the network.
            - Git LFS support not enabled because Git LFS is disabled for <owner>.
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: repos
        subcategory: lfs
    delete:
      summary: Disable Git LFS for a repository
      description: ''
      operationId: repos/disable-lfs-for-repo
      tags:
        - repos
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#disable-git-lfs-for-a-repository
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: repos
        subcategory: lfs
  /repos/{owner}/{repo}/merge-upstream:
    post:
      summary: Sync a fork branch with the upstream repository
      description: Sync a branch of a forked repository to keep it up-to-date with the upstream repository.
      tags:
        - repos
      operationId: repos/merge-upstream
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#sync-a-fork-branch-with-the-upstream-repository
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                branch:
                  type: string
                  description: The name of the branch which should be updated to match upstream.
              required:
                - branch
            example:
              branch: main
      responses:
        '200':
          description: The branch has been successfully synced with the upstream repository
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/merged-upstream'
              examples:
                default:
                  $ref: '#/components/examples/merged-upstream'
        '409':
          description: The branch could not be synced because of a merge conflict
        '422':
          description: The branch could not be synced for some other reason
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: branches
  /repos/{owner}/{repo}/merges:
    post:
      summary: Merge a branch
      description: ''
      tags:
        - repos
      operationId: repos/merge
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#merge-a-branch
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                base:
                  type: string
                  description: The name of the base branch that the head will be merged into.
                head:
                  type: string
                  description: The head to merge. This can be a branch name or a commit SHA1.
                commit_message:
                  type: string
                  description: Commit message to use for the merge commit. If omitted, a default message will be used.
              required:
                - base
                - head
            example:
              base: master
              head: cool_feature
              commit_message: Shipped cool_feature!
      responses:
        '201':
          description: Successful Response (The resulting merge commit)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commit'
              examples:
                default:
                  $ref: '#/components/examples/commit'
        '204':
          description: Response when already merged
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          description: Not Found when the base or head does not exist
        '409':
          description: Conflict when there is a merge conflict
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: merging
  /repos/{owner}/{repo}/pages:
    get:
      summary: Get a GitHub Pages site
      description: ''
      tags:
        - repos
      operationId: repos/get-pages
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#get-a-github-pages-site
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/page'
              examples:
                default:
                  $ref: '#/components/examples/page'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: pages
    post:
      summary: Create a GitHub Pages site
      description: Configures a GitHub Pages site. For more information, see "[About GitHub Pages](/github/working-with-github-pages/about-github-pages)."
      tags:
        - repos
      operationId: repos/create-pages-site
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#create-a-github-pages-site
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: The source branch and directory used to publish your Pages site.
              nullable: true
              properties:
                source:
                  type: object
                  description: The source branch and directory used to publish your Pages site.
                  properties:
                    branch:
                      type: string
                      description: The repository branch used to publish your site's source files.
                    path:
                      type: string
                      description: 'The repository directory that includes the source files for the Pages site. Allowed paths are `/` or `/docs`. Default: `/`'
                      enum:
                        - /
                        - /docs
                      default: /
                  required:
                    - branch
              required:
                - source
            example:
              source:
                branch: main
                path: /docs
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/page'
              examples:
                default:
                  $ref: '#/components/examples/page'
        '409':
          $ref: '#/components/responses/conflict'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: pages
    put:
      summary: Update information about a GitHub Pages site
      description: Updates information for a GitHub Pages site. For more information, see "[About GitHub Pages](/github/working-with-github-pages/about-github-pages).
      tags:
        - repos
      operationId: repos/update-information-about-pages-site
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#update-information-about-a-github-pages-site
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cname:
                  type: string
                  description: Specify a custom domain for the repository. Sending a `null` value will remove the custom domain. For more about custom domains, see "[Using a custom domain with GitHub Pages](https://docs.github.com/articles/using-a-custom-domain-with-github-pages/)."
                  nullable: true
                https_enforced:
                  type: boolean
                  description: Specify whether HTTPS should be enforced for the repository.
                public:
                  type: boolean
                  description: Configures access controls for the GitHub Pages site. If public is set to `true`, the site is accessible to anyone on the internet. If set to `false`, the site will only be accessible to users who have at least `read` access to the repository that published the site. This includes anyone in your Enterprise if the repository is set to `internal` visibility. This feature is only available to repositories in an organization on an Enterprise plan.
                source:
                  anyOf:
                    - type: string
                      description: Update the source for the repository. Must include the branch name, and may optionally specify the subdirectory `/docs`. Possible values are `"gh-pages"`, `"master"`, and `"master /docs"`.
                      enum:
                        - gh-pages
                        - master
                        - master /docs
                    - type: object
                      description: Update the source for the repository. Must include the branch name and path.
                      properties:
                        branch:
                          type: string
                          description: The repository branch used to publish your site's source files.
                        path:
                          type: string
                          description: The repository directory that includes the source files for the Pages site. Allowed paths are `/` or `/docs`.
                          enum:
                            - /
                            - /docs
                      required:
                        - branch
                        - path
              anyOf:
                - required:
                    - source
                - required:
                    - cname
                - required:
                    - public
                - required:
                    - https_enforced
            example:
              cname: octocatblog.com
              source:
                branch: main
                path: /
      responses:
        '204':
          description: Response
        '400':
          $ref: '#/components/responses/bad_request'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: pages
    delete:
      summary: Delete a GitHub Pages site
      description: ''
      tags:
        - repos
      operationId: repos/delete-pages-site
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#delete-a-github-pages-site
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      responses:
        '204':
          description: Response
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: pages
  /repos/{owner}/{repo}/pages/builds:
    get:
      summary: List GitHub Pages builds
      description: ''
      tags:
        - repos
      operationId: repos/list-pages-builds
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#list-github-pages-builds
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/page-build'
              examples:
                default:
                  $ref: '#/components/examples/page-build-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: pages
    post:
      summary: Request a GitHub Pages build
      description: |-
        You can request that your site be built from the latest revision on the default branch. This has the same effect as pushing a commit to your default branch, but does not require an additional commit. Manually triggering page builds can be helpful when diagnosing build warnings and failures.

        Build requests are limited to one concurrent build per repository and one concurrent build per requester. If you request a build while another is still in progress, the second request will be queued until the first completes.
      tags:
        - repos
      operationId: repos/request-pages-build
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#request-a-github-pages-build
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/page-build-status'
              examples:
                default:
                  $ref: '#/components/examples/page-build-status'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: pages
  /repos/{owner}/{repo}/pages/builds/latest:
    get:
      summary: Get latest Pages build
      description: ''
      tags:
        - repos
      operationId: repos/get-latest-pages-build
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#get-latest-pages-build
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/page-build'
              examples:
                default:
                  $ref: '#/components/examples/page-build'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: pages
  /repos/{owner}/{repo}/pages/builds/{build_id}:
    get:
      summary: Get GitHub Pages build
      description: ''
      tags:
        - repos
      operationId: repos/get-pages-build
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#get-github-pages-build
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - name: build_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/page-build'
              examples:
                default:
                  $ref: '#/components/examples/page-build'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: pages
  /repos/{owner}/{repo}/pages/health:
    get:
      summary: Get a DNS health check for GitHub Pages
      description: |-
        Gets a health check of the DNS settings for the `CNAME` record configured for a repository's GitHub Pages.

        The first request to this endpoint returns a `202 Accepted` status and starts an asynchronous background task to get the results for the domain. After the background task completes, subsequent requests to this endpoint return a `200 OK` status with the health check results in the response.

        Users must have admin or owner permissions. GitHub Apps must have the `pages:write` and `administration:write` permission to use this endpoint.
      tags:
        - repos
      operationId: repos/get-pages-health-check
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#get-a-dns-health-check-for-github-pages
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pages-health-check'
              examples:
                default:
                  $ref: '#/components/examples/pages-health-check'
        '202':
          description: Empty response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty-object'
        '400':
          description: Custom domains are not available for GitHub Pages
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          description: There isn't a CNAME for this page
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: pages
  /repos/{owner}/{repo}/readme:
    get:
      summary: Get a repository README
      description: |-
        Gets the preferred README for a repository.

        READMEs support [custom media types](https://docs.github.com/rest/reference/repos#custom-media-types) for retrieving the raw content or rendered HTML.
      tags:
        - repos
      operationId: repos/get-readme
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#get-a-repository-readme
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - name: ref
          description: 'The name of the commit/branch/tag. Default: the repository’s default branch (usually `master`)'
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/content-file'
              examples:
                default:
                  $ref: '#/components/examples/content-file'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: contents
  /repos/{owner}/{repo}/readme/{dir}:
    get:
      summary: Get a repository README for a directory
      description: |-
        Gets the README from a repository directory.

        READMEs support [custom media types](https://docs.github.com/rest/reference/repos#custom-media-types) for retrieving the raw content or rendered HTML.
      tags:
        - repos
      operationId: repos/get-readme-in-directory
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#get-a-repository-directory-readme
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - name: dir
          description: The alternate path to look for a README file
          in: path
          required: true
          schema:
            type: string
          x-multi-segment: true
        - name: ref
          description: 'The name of the commit/branch/tag. Default: the repository’s default branch (usually `master`)'
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/content-file'
              examples:
                default:
                  $ref: '#/components/examples/content-file'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: contents
  /repos/{owner}/{repo}/releases:
    get:
      summary: List releases
      description: |-
        This returns a list of releases, which does not include regular Git tags that have not been associated with a release. To get a list of Git tags, use the [Repository Tags API](https://docs.github.com/rest/reference/repos#list-repository-tags).

        Information about published releases are available to everyone. Only users with push access will receive listings for draft releases.
      tags:
        - repos
      operationId: repos/list-releases
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#list-releases
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/release'
              examples:
                default:
                  $ref: '#/components/examples/release-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: releases
    post:
      summary: Create a release
      description: |-
        Users with push access to the repository can create a release.

        This endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See "[Secondary rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#secondary-rate-limits)" and "[Dealing with secondary rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)" for details.
      tags:
        - repos
      operationId: repos/create-release
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#create-a-release
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tag_name:
                  type: string
                  description: The name of the tag.
                target_commitish:
                  type: string
                  description: 'Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository''s default branch (usually `master`).'
                name:
                  type: string
                  description: The name of the release.
                body:
                  type: string
                  description: Text describing the contents of the tag.
                draft:
                  type: boolean
                  description: '`true` to create a draft (unpublished) release, `false` to create a published one.'
                  default: false
                prerelease:
                  type: boolean
                  description: '`true` to identify the release as a prerelease. `false` to identify the release as a full release.'
                  default: false
                discussion_category_name:
                  type: string
                  description: If specified, a discussion of the specified category is created and linked to the release. The value must be a category that already exists in the repository. For more information, see "[Managing categories for discussions in your repository](https://docs.github.com/discussions/managing-discussions-for-your-community/managing-categories-for-discussions-in-your-repository)."
                generate_release_notes:
                  type: boolean
                  description: Whether to automatically generate the name and body for this release. If `name` is specified, the specified name will be used; otherwise, a name will be automatically generated. If `body` is specified, the body will be pre-pended to the automatically generated notes.
                  default: false
              required:
                - tag_name
            example:
              tag_name: v1.0.0
              target_commitish: master
              name: v1.0.0
              body: Description of the release
              draft: false
              prerelease: false
              generate_release_notes: false
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/release'
              examples:
                default:
                  $ref: '#/components/examples/release'
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/releases/1
              schema:
                type: string
        '404':
          description: Not Found if the discussion category name is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/basic-error'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: releases
  /repos/{owner}/{repo}/releases/assets/{asset_id}:
    get:
      summary: Get a release asset
      description: To download the asset's binary content, set the `Accept` header of the request to [`application/octet-stream`](https://docs.github.com/rest/overview/media-types). The API will either redirect the client to the location, or stream it directly if possible. API clients should handle both a `200` or `302` response.
      tags:
        - repos
      operationId: repos/get-release-asset
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#get-a-release-asset
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/asset-id'
      responses:
        '200':
          description: To download the asset's binary content, set the `Accept` header of the request to [`application/octet-stream`](https://docs.github.com/rest/overview/media-types). The API will either redirect the client to the location, or stream it directly if possible. API clients should handle both a `200` or `302` response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/release-asset'
              examples:
                default:
                  $ref: '#/components/examples/release-asset'
        '302':
          $ref: '#/components/responses/found'
        '404':
          $ref: '#/components/responses/not_found'
        '415':
          $ref: '#/components/responses/preview_header_missing'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: releases
    patch:
      summary: Update a release asset
      description: Users with push access to the repository can edit a release asset.
      tags:
        - repos
      operationId: repos/update-release-asset
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#update-a-release-asset
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/asset-id'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The file name of the asset.
                label:
                  type: string
                  description: An alternate short description of the asset. Used in place of the filename.
                state:
                  type: string
                  example: '"uploaded"'
            example:
              name: foo-1.0.0-osx.zip
              label: Mac binary
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/release-asset'
              examples:
                default:
                  $ref: '#/components/examples/release-asset'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: releases
    delete:
      summary: Delete a release asset
      description: ''
      tags:
        - repos
      operationId: repos/delete-release-asset
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#delete-a-release-asset
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/asset-id'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: releases
  /repos/{owner}/{repo}/releases/generate-notes:
    post:
      summary: Generate release notes content for a release
      description: Generate a name and body describing a [release](https://docs.github.com/rest/reference/repos#releases). The body content will be markdown formatted and contain information like the changes since last release and users who contributed. The generated release notes are not saved anywhere. They are intended to be generated and used when creating a new release.
      tags:
        - repos
      operationId: repos/generate-release-notes
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#generate-release-notes
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tag_name:
                  type: string
                  description: The tag name for the release. This can be an existing tag or a new one.
                target_commitish:
                  type: string
                  description: Specifies the commitish value that will be the target for the release's tag. Required if the supplied tag_name does not reference an existing tag. Ignored if the tag_name already exists.
                previous_tag_name:
                  type: string
                  description: The name of the previous tag to use as the starting point for the release notes. Use to manually specify the range for the set of changes considered as part this release.
                configuration_file_path:
                  type: string
                  description: Specifies a path to a file in the repository containing configuration settings used for generating the release notes. If unspecified, the configuration file located in the repository at '.github/release.yml' or '.github/release.yaml' will be used. If that is not present, the default configuration will be used.
              required:
                - tag_name
            example:
              tag_name: v1.0.0
              target_commitish: main
              previous_tag_name: v0.9.2
              configuration_file_path: .github/custom_release_config.yml
      responses:
        '200':
          description: Name and body of generated release notes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/release-notes-content'
              examples:
                default:
                  $ref: '#/components/examples/release-notes-content'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: releases
  /repos/{owner}/{repo}/releases/latest:
    get:
      summary: Get the latest release
      description: |-
        View the latest published full release for the repository.

        The latest release is the most recent non-prerelease, non-draft release, sorted by the `created_at` attribute. The `created_at` attribute is the date of the commit used for the release, and not the date when the release was drafted or published.
      tags:
        - repos
      operationId: repos/get-latest-release
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#get-the-latest-release
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/release'
              examples:
                default:
                  $ref: '#/components/examples/release'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: releases
  /repos/{owner}/{repo}/releases/tags/{tag}:
    get:
      summary: Get a release by tag name
      description: Get a published release with the specified tag.
      tags:
        - repos
      operationId: repos/get-release-by-tag
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#get-a-release-by-tag-name
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - name: tag
          description: tag parameter
          in: path
          required: true
          schema:
            type: string
          x-multi-segment: true
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/release'
              examples:
                default:
                  $ref: '#/components/examples/release'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: releases
  /repos/{owner}/{repo}/releases/{release_id}:
    get:
      summary: Get a release
      description: '**Note:** This returns an `upload_url` key corresponding to the endpoint for uploading release assets. This key is a [hypermedia resource](https://docs.github.com/rest/overview/resources-in-the-rest-api#hypermedia).'
      tags:
        - repos
      operationId: repos/get-release
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#get-a-release
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/release-id'
      responses:
        '200':
          description: '**Note:** This returns an `upload_url` key corresponding to the endpoint for uploading release assets. This key is a [hypermedia resource](https://docs.github.com/rest/overview/resources-in-the-rest-api#hypermedia).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/release'
              examples:
                default:
                  $ref: '#/components/examples/release'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: releases
    patch:
      summary: Update a release
      description: Users with push access to the repository can edit a release.
      tags:
        - repos
      operationId: repos/update-release
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#update-a-release
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/release-id'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                tag_name:
                  type: string
                  description: The name of the tag.
                target_commitish:
                  type: string
                  description: 'Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository''s default branch (usually `master`).'
                name:
                  type: string
                  description: The name of the release.
                body:
                  type: string
                  description: Text describing the contents of the tag.
                draft:
                  type: boolean
                  description: '`true` makes the release a draft, and `false` publishes the release.'
                prerelease:
                  type: boolean
                  description: '`true` to identify the release as a prerelease, `false` to identify the release as a full release.'
                discussion_category_name:
                  type: string
                  description: If specified, a discussion of the specified category is created and linked to the release. The value must be a category that already exists in the repository. If there is already a discussion linked to the release, this parameter is ignored. For more information, see "[Managing categories for discussions in your repository](https://docs.github.com/discussions/managing-discussions-for-your-community/managing-categories-for-discussions-in-your-repository)."
            example:
              tag_name: v1.0.0
              target_commitish: master
              name: v1.0.0
              body: Description of the release
              draft: false
              prerelease: false
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/release'
              examples:
                default:
                  $ref: '#/components/examples/release'
        '404':
          description: Not Found if the discussion category name is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/basic-error'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: releases
    delete:
      summary: Delete a release
      description: Users with push access to the repository can delete a release.
      tags:
        - repos
      operationId: repos/delete-release
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#delete-a-release
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/release-id'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: releases
  /repos/{owner}/{repo}/releases/{release_id}/assets:
    get:
      summary: List release assets
      description: ''
      tags:
        - repos
      operationId: repos/list-release-assets
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#list-release-assets
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/release-id'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/release-asset'
              examples:
                default:
                  $ref: '#/components/examples/release-asset-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: releases
    post:
      summary: Upload a release asset
      description: |-
        This endpoint makes use of [a Hypermedia relation](https://docs.github.com/rest/overview/resources-in-the-rest-api#hypermedia) to determine which URL to access. The endpoint you call to upload release assets is specific to your release. Use the `upload_url` returned in
        the response of the [Create a release endpoint](https://docs.github.com/rest/reference/repos#create-a-release) to upload a release asset.

        You need to use an HTTP client which supports [SNI](http://en.wikipedia.org/wiki/Server_Name_Indication) to make calls to this endpoint.

        Most libraries will set the required `Content-Length` header automatically. Use the required `Content-Type` header to provide the media type of the asset. For a list of media types, see [Media Types](https://www.iana.org/assignments/media-types/media-types.xhtml). For example: 

        `application/zip`

        GitHub expects the asset data in its raw binary form, rather than JSON. You will send the raw binary content of the asset as the request body. Everything else about the endpoint is the same as the rest of the API. For example,
        you'll still need to pass your authentication to be able to upload an asset.

        When an upstream failure occurs, you will receive a `502 Bad Gateway` status. This may leave an empty asset with a state of `starter`. It can be safely deleted.

        **Notes:**
        *   GitHub renames asset filenames that have special characters, non-alphanumeric characters, and leading or trailing periods. The "[List assets for a release](https://docs.github.com/rest/reference/repos#list-assets-for-a-release)"
        endpoint lists the renamed filenames. For more information and help, contact [GitHub Support](https://support.github.com/contact?tags=dotcom-rest-api).
        *   If you upload an asset with the same filename as another uploaded asset, you'll receive an error and must delete the old file before you can re-upload the new asset.
      tags:
        - repos
      operationId: repos/upload-release-asset
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#upload-a-release-asset
      servers:
        - url: '{origin}'
          variables:
            origin:
              default: https://uploads.github.com
              description: The URL origin (protocol + host name + port) is included in `upload_url` returned in the response of the "Create a release" endpoint
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/release-id'
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: label
          in: query
          schema:
            type: string
      requestBody:
        required: false
        content:
          '*/*':
            schema:
              type: string
              description: The raw file data
      responses:
        '201':
          description: Response for successful upload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/release-asset'
              examples:
                response-for-successful-upload:
                  $ref: '#/components/examples/release-asset-response-for-successful-upload'
        '422':
          description: Response if you upload an asset with the same filename as another uploaded asset
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: releases
  /repos/{owner}/{repo}/stats/code_frequency:
    get:
      summary: Get the weekly commit activity
      description: Returns a weekly aggregate of the number of additions and deletions pushed to a repository.
      tags:
        - repos
      operationId: repos/get-code-frequency-stats
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#get-the-weekly-commit-activity
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      responses:
        '200':
          description: Returns a weekly aggregate of the number of additions and deletions pushed to a repository.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/code-frequency-stat'
              examples:
                default:
                  $ref: '#/components/examples/code-frequency-stat-items'
        '202':
          $ref: '#/components/responses/accepted'
        '204':
          $ref: '#/components/responses/no_content'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: statistics
  /repos/{owner}/{repo}/stats/commit_activity:
    get:
      summary: Get the last year of commit activity
      description: Returns the last year of commit activity grouped by week. The `days` array is a group of commits per day, starting on `Sunday`.
      tags:
        - repos
      operationId: repos/get-commit-activity-stats
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#get-the-last-year-of-commit-activity
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/commit-activity'
              examples:
                default:
                  $ref: '#/components/examples/commit-activity-items'
        '202':
          $ref: '#/components/responses/accepted'
        '204':
          $ref: '#/components/responses/no_content'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: statistics
  /repos/{owner}/{repo}/stats/contributors:
    get:
      summary: Get all contributor commit activity
      description: |-

        Returns the `total` number of commits authored by the contributor. In addition, the response includes a Weekly Hash (`weeks` array) with the following information:

        *   `w` - Start of the week, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time).
        *   `a` - Number of additions
        *   `d` - Number of deletions
        *   `c` - Number of commits
      tags:
        - repos
      operationId: repos/get-contributors-stats
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#get-all-contributor-commit-activity
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      responses:
        '200':
          description: |-
            *   `w` - Start of the week, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time).
            *   `a` - Number of additions
            *   `d` - Number of deletions
            *   `c` - Number of commits
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/contributor-activity'
              examples:
                default:
                  $ref: '#/components/examples/contributor-activity-items'
        '202':
          $ref: '#/components/responses/accepted'
        '204':
          $ref: '#/components/responses/no_content'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: statistics
  /repos/{owner}/{repo}/stats/participation:
    get:
      summary: Get the weekly commit count
      description: |-
        Returns the total commit counts for the `owner` and total commit counts in `all`. `all` is everyone combined, including the `owner` in the last 52 weeks. If you'd like to get the commit counts for non-owners, you can subtract `owner` from `all`.

        The array order is oldest week (index 0) to most recent week.
      tags:
        - repos
      operationId: repos/get-participation-stats
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#get-the-weekly-commit-count
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      responses:
        '200':
          description: The array order is oldest week (index 0) to most recent week.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/participation-stats'
              examples:
                default:
                  $ref: '#/components/examples/participation-stats'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: statistics
  /repos/{owner}/{repo}/stats/punch_card:
    get:
      summary: Get the hourly commit count for each day
      description: |-
        Each array contains the day number, hour number, and number of commits:

        *   `0-6`: Sunday - Saturday
        *   `0-23`: Hour of day
        *   Number of commits

        For example, `[2, 14, 25]` indicates that there were 25 total commits, during the 2:00pm hour on Tuesdays. All times are based on the time zone of individual commits.
      tags:
        - repos
      operationId: repos/get-punch-card-stats
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#get-the-hourly-commit-count-for-each-day
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      responses:
        '200':
          description: For example, `[2, 14, 25]` indicates that there were 25 total commits, during the 2:00pm hour on Tuesdays. All times are based on the time zone of individual commits.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/code-frequency-stat'
              examples:
                default:
                  $ref: '#/components/examples/code-frequency-stat-items-2'
        '204':
          $ref: '#/components/responses/no_content'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: statistics
  /repos/{owner}/{repo}/statuses/{sha}:
    post:
      summary: Create a commit status
      description: |-
        Users with push access in a repository can create commit statuses for a given SHA.

        Note: there is a limit of 1000 statuses per `sha` and `context` within a repository. Attempts to create more than 1000 statuses will result in a validation error.
      tags:
        - repos
      operationId: repos/create-commit-status
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#create-a-commit-status
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - name: sha
          in: path
          required: true
          schema:
            type: string
          x-multi-segment: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                state:
                  type: string
                  description: The state of the status. Can be one of `error`, `failure`, `pending`, or `success`.
                  enum:
                    - error
                    - failure
                    - pending
                    - success
                target_url:
                  type: string
                  description: |-
                    The target URL to associate with this status. This URL will be linked from the GitHub UI to allow users to easily see the source of the status.  
                    For example, if your continuous integration system is posting build status, you would want to provide the deep link for the build output for this specific SHA:  
                    `http://ci.example.com/user/repo/build/sha`
                description:
                  type: string
                  description: A short description of the status.
                context:
                  type: string
                  description: A string label to differentiate this status from the status of other systems. This field is case-insensitive.
                  default: default
              required:
                - state
            example:
              state: success
              target_url: https://example.com/build/status
              description: The build succeeded!
              context: continuous-integration/jenkins
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status'
              examples:
                default:
                  $ref: '#/components/examples/status'
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
              schema:
                type: string
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: statuses
  /repos/{owner}/{repo}/tags:
    get:
      summary: List repository tags
      description: ''
      tags:
        - repos
      operationId: repos/list-tags
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#list-repository-tags
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/tag'
              examples:
                default:
                  $ref: '#/components/examples/tag-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: null
  /repos/{owner}/{repo}/tarball/{ref}:
    get:
      summary: Download a repository archive (tar)
      description: |-
        Gets a redirect URL to download a tar archive for a repository. If you omit `:ref`, the repository’s default branch (usually
        `master`) will be used. Please make sure your HTTP framework is configured to follow redirects or you will need to use
        the `Location` header to make a second `GET` request.
        **Note**: For private repositories, these links are temporary and expire after five minutes.
      tags:
        - repos
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#download-a-repository-archive
      operationId: repos/download-tarball-archive
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - name: ref
          in: path
          required: true
          schema:
            type: string
      responses:
        '302':
          description: Response
          headers:
            Location:
              example: https://codeload.github.com/me/myprivate/legacy.zip/master?login=me&token=thistokenexpires
              schema:
                type: string
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: contents
  /repos/{owner}/{repo}/teams:
    get:
      summary: List repository teams
      description: ''
      tags:
        - repos
      operationId: repos/list-teams
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#list-repository-teams
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/team'
              examples:
                default:
                  $ref: '#/components/examples/team-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: null
  /repos/{owner}/{repo}/topics:
    get:
      summary: Get all repository topics
      description: ''
      tags:
        - repos
      operationId: repos/get-all-topics
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#get-all-repository-topics
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/per-page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/topic'
              examples:
                default:
                  $ref: '#/components/examples/topic'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: null
    put:
      summary: Replace all repository topics
      description: ''
      tags:
        - repos
      operationId: repos/replace-all-topics
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#replace-all-repository-topics
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                names:
                  type: array
                  description: An array of topics to add to the repository. Pass one or more topics to _replace_ the set of existing topics. Send an empty array (`[]`) to clear all topics from the repository. **Note:** Topic `names` cannot contain uppercase letters.
                  items:
                    type: string
              required:
                - names
            example:
              names:
                - octocat
                - atom
                - electron
                - api
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/topic'
              examples:
                default:
                  $ref: '#/components/examples/topic'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed_simple'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: null
  /repos/{owner}/{repo}/traffic/clones:
    get:
      summary: Get repository clones
      description: Get the total number of clones and breakdown per day or week for the last 14 days. Timestamps are aligned to UTC midnight of the beginning of the day or week. Week begins on Monday.
      tags:
        - repos
      operationId: repos/get-clones
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#get-repository-clones
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/per'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/clone-traffic'
              examples:
                default:
                  $ref: '#/components/examples/clone-traffic'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: traffic
  /repos/{owner}/{repo}/traffic/popular/paths:
    get:
      summary: Get top referral paths
      description: Get the top 10 popular contents over the last 14 days.
      tags:
        - repos
      operationId: repos/get-top-paths
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#get-top-referral-paths
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/content-traffic'
              examples:
                default:
                  $ref: '#/components/examples/content-traffic-items'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: traffic
  /repos/{owner}/{repo}/traffic/popular/referrers:
    get:
      summary: Get top referral sources
      description: Get the top 10 referrers over the last 14 days.
      tags:
        - repos
      operationId: repos/get-top-referrers
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#get-top-referral-sources
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/referrer-traffic'
              examples:
                default:
                  $ref: '#/components/examples/referrer-traffic-items'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: traffic
  /repos/{owner}/{repo}/traffic/views:
    get:
      summary: Get page views
      description: Get the total number of views and breakdown per day or week for the last 14 days. Timestamps are aligned to UTC midnight of the beginning of the day or week. Week begins on Monday.
      tags:
        - repos
      operationId: repos/get-views
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#get-page-views
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/per'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view-traffic'
              examples:
                default:
                  $ref: '#/components/examples/view-traffic'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: traffic
  /repos/{owner}/{repo}/transfer:
    post:
      summary: Transfer a repository
      description: A transfer request will need to be accepted by the new owner when transferring a personal repository to another user. The response will contain the original `owner`, and the transfer will continue asynchronously. For more details on the requirements to transfer personal and organization-owned repositories, see [about repository transfers](https://docs.github.com/articles/about-repository-transfers/).
      tags:
        - repos
      operationId: repos/transfer
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#transfer-a-repository
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                new_owner:
                  type: string
                  description: The username or organization name the repository will be transferred to.
                team_ids:
                  type: array
                  description: ID of the team or teams to add to the repository. Teams can only be added to organization-owned repositories.
                  items:
                    type: integer
              required:
                - new_owner
            example:
              new_owner: github
              team_ids:
                - 12
                - 345
      responses:
        '202':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/minimal-repository'
              examples:
                default:
                  $ref: '#/components/examples/minimal-repository'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: null
  /repos/{owner}/{repo}/vulnerability-alerts:
    get:
      summary: Check if vulnerability alerts are enabled for a repository
      description: Shows whether dependency alerts are enabled or disabled for a repository. The authenticated user must have admin access to the repository. For more information, see "[About security alerts for vulnerable dependencies](https://docs.github.com/en/articles/about-security-alerts-for-vulnerable-dependencies)".
      tags:
        - repos
      operationId: repos/check-vulnerability-alerts
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#check-if-vulnerability-alerts-are-enabled-for-a-repository
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      responses:
        '204':
          description: Response if repository is enabled with vulnerability alerts
        '404':
          description: Not Found if repository is not enabled with vulnerability alerts
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: repos
        subcategory: null
    put:
      summary: Enable vulnerability alerts
      description: Enables dependency alerts and the dependency graph for a repository. The authenticated user must have admin access to the repository. For more information, see "[About security alerts for vulnerable dependencies](https://docs.github.com/en/articles/about-security-alerts-for-vulnerable-dependencies)".
      tags:
        - repos
      operationId: repos/enable-vulnerability-alerts
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#enable-vulnerability-alerts
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: null
    delete:
      summary: Disable vulnerability alerts
      description: Disables dependency alerts and the dependency graph for a repository. The authenticated user must have admin access to the repository. For more information, see "[About security alerts for vulnerable dependencies](https://docs.github.com/en/articles/about-security-alerts-for-vulnerable-dependencies)".
      tags:
        - repos
      operationId: repos/disable-vulnerability-alerts
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#disable-vulnerability-alerts
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: null
  /repos/{owner}/{repo}/zipball/{ref}:
    get:
      summary: Download a repository archive (zip)
      description: |-
        Gets a redirect URL to download a zip archive for a repository. If you omit `:ref`, the repository’s default branch (usually
        `master`) will be used. Please make sure your HTTP framework is configured to follow redirects or you will need to use
        the `Location` header to make a second `GET` request.
        **Note**: For private repositories, these links are temporary and expire after five minutes.
      tags:
        - repos
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#download-a-repository-archive
      operationId: repos/download-zipball-archive
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - name: ref
          in: path
          required: true
          schema:
            type: string
      responses:
        '302':
          description: Response
          headers:
            Location:
              example: https://codeload.github.com/me/myprivate/legacy.zip/master?login=me&token=thistokenexpires
              schema:
                type: string
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: contents
  /repos/{template_owner}/{template_repo}/generate:
    post:
      summary: Create a repository using a template
      description: |-
        Creates a new repository using a repository template. Use the `template_owner` and `template_repo` route parameters to specify the repository to use as the template. The authenticated user must own or be a member of an organization that owns the repository. To check if a repository is available to use as a template, get the repository's information using the [Get a repository](https://docs.github.com/rest/reference/repos#get-a-repository) endpoint and check that the `is_template` key is `true`.

        **OAuth scope requirements**

        When using [OAuth](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), authorizations must include:

        *   `public_repo` scope or `repo` scope to create a public repository. Note: For GitHub AE, use `repo` scope to create an internal repository.
        *   `repo` scope to create a private repository
      tags:
        - repos
      operationId: repos/create-using-template
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#create-a-repository-using-a-template
      parameters:
        - name: template_owner
          in: path
          required: true
          schema:
            type: string
        - name: template_repo
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                owner:
                  type: string
                  description: The organization or person who will own the new repository. To create a new repository in an organization, the authenticated user must be a member of the specified organization.
                name:
                  type: string
                  description: The name of the new repository.
                description:
                  type: string
                  description: A short description of the new repository.
                include_all_branches:
                  type: boolean
                  description: 'Set to `true` to include the directory structure and files from all branches in the template repository, and not just the default branch. Default: `false`.'
                  default: false
                private:
                  type: boolean
                  description: Either `true` to create a new private repository or `false` to create a new public one.
                  default: false
              required:
                - name
            example:
              owner: octocat
              name: Hello-World
              description: This is your first repository
              include_all_branches: false
              private: false
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/repository'
              examples:
                default:
                  $ref: '#/components/examples/repository-3'
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World
              schema:
                type: string
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: repos
        subcategory: null
  /repositories:
    get:
      summary: List public repositories
      description: |-
        Lists all public repositories in the order that they were created.

        Note:
        - For GitHub Enterprise Server, this endpoint will only list repositories available to all users on the enterprise.
        - Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header) to get the URL for the next page of repositories.
      tags:
        - repos
      operationId: repos/list-public
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#list-public-repositories
      parameters:
        - $ref: '#/components/parameters/since-repo'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/minimal-repository'
              examples:
                default:
                  $ref: '#/components/examples/public-repository-items'
          headers:
            Link:
              example: <https://api.github.com/repositories?since=364>; rel="next"
              schema:
                type: string
        '304':
          $ref: '#/components/responses/not_modified'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: null
  /user/repos:
    get:
      summary: List repositories for the authenticated user
      description: |-
        Lists repositories that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access.

        The authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.
      tags:
        - repos
      operationId: repos/list-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#list-repositories-for-the-authenticated-user
      parameters:
        - name: visibility
          description: 'Can be one of `all`, `public`, or `private`. Note: For GitHub AE, can be one of `all`, `internal`, or `private`.'
          in: query
          required: false
          schema:
            type: string
            enum:
              - all
              - public
              - private
            default: all
        - name: affiliation
          description: |-
            Comma-separated list of values. Can include:  
            \* `owner`: Repositories that are owned by the authenticated user.  
            \* `collaborator`: Repositories that the user has been added to as a collaborator.  
            \* `organization_member`: Repositories that the user has access to through being a member of an organization. This includes every repository on every team that the user is on.
          in: query
          required: false
          schema:
            type: string
            default: owner,collaborator,organization_member
        - name: type
          description: |-
            Can be one of `all`, `owner`, `public`, `private`, `member`. Note: For GitHub AE, can be one of `all`, `owner`, `internal`, `private`, `member`. Default: `all`  
              
            Will cause a `422` error if used in the same request as **visibility** or **affiliation**. Will cause a `422` error if used in the same request as **visibility** or **affiliation**.
          in: query
          required: false
          schema:
            type: string
            enum:
              - all
              - owner
              - public
              - private
              - member
            default: all
        - name: sort
          description: Can be one of `created`, `updated`, `pushed`, `full_name`.
          in: query
          required: false
          schema:
            type: string
            enum:
              - created
              - updated
              - pushed
              - full_name
            default: full_name
        - name: direction
          description: 'Can be one of `asc` or `desc`. Default: `asc` when using `full_name`, otherwise `desc`'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/since'
        - $ref: '#/components/parameters/before'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/repository'
              examples:
                default:
                  $ref: '#/components/examples/repository-items-default-response'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: repos
        subcategory: null
    post:
      summary: Create a repository for the authenticated user
      description: |-
        Creates a new repository for the authenticated user.

        **OAuth scope requirements**

        When using [OAuth](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), authorizations must include:

        *   `public_repo` scope or `repo` scope to create a public repository. Note: For GitHub AE, use `repo` scope to create an internal repository.
        *   `repo` scope to create a private repository.
      tags:
        - repos
      operationId: repos/create-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#create-a-repository-for-the-authenticated-user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  description: The name of the repository.
                  type: string
                  example: Team Environment
                description:
                  description: A short description of the repository.
                  type: string
                homepage:
                  description: A URL with more information about the repository.
                  type: string
                private:
                  description: Whether the repository is private.
                  default: false
                  type: boolean
                has_issues:
                  description: Whether issues are enabled.
                  default: true
                  type: boolean
                  example: true
                has_projects:
                  description: Whether projects are enabled.
                  default: true
                  type: boolean
                  example: true
                has_wiki:
                  description: Whether the wiki is enabled.
                  default: true
                  type: boolean
                  example: true
                team_id:
                  description: The id of the team that will be granted access to this repository. This is only valid when creating a repository in an organization.
                  type: integer
                auto_init:
                  description: Whether the repository is initialized with a minimal README.
                  default: false
                  type: boolean
                gitignore_template:
                  description: The desired language or platform to apply to the .gitignore.
                  example: Haskell
                  type: string
                license_template:
                  description: The license keyword of the open source license for this repository.
                  example: mit
                  type: string
                allow_squash_merge:
                  description: Whether to allow squash merges for pull requests.
                  default: true
                  type: boolean
                  example: true
                allow_merge_commit:
                  description: Whether to allow merge commits for pull requests.
                  default: true
                  type: boolean
                  example: true
                allow_rebase_merge:
                  description: Whether to allow rebase merges for pull requests.
                  default: true
                  type: boolean
                  example: true
                allow_auto_merge:
                  description: Whether to allow Auto-merge to be used on pull requests.
                  default: false
                  type: boolean
                  example: false
                delete_branch_on_merge:
                  description: Whether to delete head branches when pull requests are merged
                  default: false
                  type: boolean
                  example: false
                has_downloads:
                  description: Whether downloads are enabled.
                  default: true
                  type: boolean
                  example: true
                is_template:
                  description: Whether this repository acts as a template that can be used to generate new repositories.
                  default: false
                  type: boolean
                  example: true
              required:
                - name
              type: object
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/repository'
              examples:
                default:
                  $ref: '#/components/examples/repository'
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World
              schema:
                type: string
        '304':
          $ref: '#/components/responses/not_modified'
        '400':
          $ref: '#/components/responses/bad_request'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: repos
        subcategory: null
  /user/repository_invitations:
    get:
      summary: List repository invitations for the authenticated user
      description: When authenticating as a user, this endpoint will list all currently open repository invitations for that user.
      tags:
        - repos
      operationId: repos/list-invitations-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#list-repository-invitations-for-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/repository-invitation'
              examples:
                default:
                  $ref: '#/components/examples/repository-invitation-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: repos
        subcategory: invitations
  /user/repository_invitations/{invitation_id}:
    patch:
      summary: Accept a repository invitation
      description: ''
      tags:
        - repos
      operationId: repos/accept-invitation-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#accept-a-repository-invitation
      parameters:
        - $ref: '#/components/parameters/invitation-id'
      responses:
        '204':
          description: Response
        '304':
          $ref: '#/components/responses/not_modified'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: repos
        subcategory: invitations
    delete:
      summary: Decline a repository invitation
      description: ''
      tags:
        - repos
      operationId: repos/decline-invitation-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#decline-a-repository-invitation
      parameters:
        - $ref: '#/components/parameters/invitation-id'
      responses:
        '204':
          description: Response
        '304':
          $ref: '#/components/responses/not_modified'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: repos
        subcategory: invitations
  /users/{username}/repos:
    get:
      summary: List repositories for a user
      description: 'Lists public repositories for the specified user. Note: For GitHub AE, this endpoint will list internal repositories for the specified user.'
      tags:
        - repos
      operationId: repos/list-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/repos#list-repositories-for-a-user
      parameters:
        - $ref: '#/components/parameters/username'
        - name: type
          description: Can be one of `all`, `owner`, `member`.
          in: query
          required: false
          schema:
            type: string
            enum:
              - all
              - owner
              - member
            default: owner
        - name: sort
          description: Can be one of `created`, `updated`, `pushed`, `full_name`.
          in: query
          required: false
          schema:
            type: string
            enum:
              - created
              - updated
              - pushed
              - full_name
            default: full_name
        - name: direction
          description: 'Can be one of `asc` or `desc`. Default: `asc` when using `full_name`, otherwise `desc`'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/minimal-repository'
              examples:
                default:
                  $ref: '#/components/examples/minimal-repository-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: null
components:
  schemas:
    minimal-repository:
      title: Minimal Repository
      description: Minimal Repository
      type: object
      properties:
        id:
          type: integer
          example: 1296269
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          type: string
          example: Hello-World
        full_name:
          type: string
          example: octocat/Hello-World
        owner:
          $ref: '#/components/schemas/simple-user'
        private:
          type: boolean
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World
        description:
          type: string
          example: This your first repo!
          nullable: true
        fork:
          type: boolean
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World
        archive_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/downloads
        events_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/events
        forks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url:
          type: string
        issue_comment_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/languages
        merges_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/merges
        milestones_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url:
          type: string
        stargazers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscription
        tags_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/tags
        teams_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/teams
        trees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url:
          type: string
        mirror_url:
          type: string
          nullable: true
        hooks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/hooks
        svn_url:
          type: string
        homepage:
          type: string
          nullable: true
        language:
          type: string
          nullable: true
        forks_count:
          type: integer
        stargazers_count:
          type: integer
        watchers_count:
          type: integer
        size:
          type: integer
        default_branch:
          type: string
        open_issues_count:
          type: integer
        is_template:
          type: boolean
        topics:
          type: array
          items:
            type: string
        has_issues:
          type: boolean
        has_projects:
          type: boolean
        has_wiki:
          type: boolean
        has_pages:
          type: boolean
        has_downloads:
          type: boolean
        archived:
          type: boolean
        disabled:
          type: boolean
        visibility:
          type: string
        pushed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:06:43Z'
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:14:43Z'
          nullable: true
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            maintain:
              type: boolean
            push:
              type: boolean
            triage:
              type: boolean
            pull:
              type: boolean
        role_name:
          type: string
          example: admin
        template_repository:
          $ref: '#/components/schemas/nullable-repository'
        temp_clone_token:
          type: string
        delete_branch_on_merge:
          type: boolean
        subscribers_count:
          type: integer
        network_count:
          type: integer
        code_of_conduct:
          $ref: '#/components/schemas/code-of-conduct'
        license:
          type: object
          properties:
            key:
              type: string
            name:
              type: string
            spdx_id:
              type: string
            url:
              type: string
            node_id:
              type: string
          nullable: true
        forks:
          type: integer
          example: 0
        open_issues:
          type: integer
          example: 0
        watchers:
          type: integer
          example: 0
        allow_forking:
          type: boolean
      required:
        - archive_url
        - assignees_url
        - blobs_url
        - branches_url
        - collaborators_url
        - comments_url
        - commits_url
        - compare_url
        - contents_url
        - contributors_url
        - deployments_url
        - description
        - downloads_url
        - events_url
        - fork
        - forks_url
        - full_name
        - git_commits_url
        - git_refs_url
        - git_tags_url
        - hooks_url
        - html_url
        - id
        - node_id
        - issue_comment_url
        - issue_events_url
        - issues_url
        - keys_url
        - labels_url
        - languages_url
        - merges_url
        - milestones_url
        - name
        - notifications_url
        - owner
        - private
        - pulls_url
        - releases_url
        - stargazers_url
        - statuses_url
        - subscribers_url
        - subscription_url
        - tags_url
        - teams_url
        - trees_url
        - url
    simple-user:
      title: Simple User
      description: Simple User
      type: object
      properties:
        name:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        login:
          type: string
          example: octocat
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        starred_at:
          type: string
          example: '"2020-07-09T00:17:55Z"'
      required:
        - avatar_url
        - events_url
        - followers_url
        - following_url
        - gists_url
        - gravatar_id
        - html_url
        - id
        - node_id
        - login
        - organizations_url
        - received_events_url
        - repos_url
        - site_admin
        - starred_url
        - subscriptions_url
        - type
        - url
    nullable-repository:
      title: Repository
      description: A git repository
      type: object
      properties:
        id:
          description: Unique identifier of the repository
          example: 42
          type: integer
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          description: The name of the repository.
          type: string
          example: Team Environment
        full_name:
          type: string
          example: octocat/Hello-World
        license:
          $ref: '#/components/schemas/nullable-license-simple'
        organization:
          $ref: '#/components/schemas/nullable-simple-user'
        forks:
          type: integer
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            pull:
              type: boolean
            triage:
              type: boolean
            push:
              type: boolean
            maintain:
              type: boolean
          required:
            - admin
            - pull
            - push
        owner:
          $ref: '#/components/schemas/simple-user'
        private:
          description: Whether the repository is private or public.
          default: false
          type: boolean
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World
        description:
          type: string
          example: This your first repo!
          nullable: true
        fork:
          type: boolean
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World
        archive_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/downloads
        events_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/events
        forks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url:
          type: string
          example: git:github.com/octocat/Hello-World.git
        issue_comment_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/languages
        merges_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/merges
        milestones_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url:
          type: string
          example: git@github.com:octocat/Hello-World.git
        stargazers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscription
        tags_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/tags
        teams_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/teams
        trees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url:
          type: string
          example: https://github.com/octocat/Hello-World.git
        mirror_url:
          type: string
          format: uri
          example: git:git.example.com/octocat/Hello-World
          nullable: true
        hooks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/hooks
        svn_url:
          type: string
          format: uri
          example: https://svn.github.com/octocat/Hello-World
        homepage:
          type: string
          format: uri
          example: https://github.com
          nullable: true
        language:
          type: string
          nullable: true
        forks_count:
          type: integer
          example: 9
        stargazers_count:
          type: integer
          example: 80
        watchers_count:
          type: integer
          example: 80
        size:
          type: integer
          example: 108
        default_branch:
          description: The default branch of the repository.
          type: string
          example: master
        open_issues_count:
          type: integer
          example: 0
        is_template:
          description: Whether this repository acts as a template that can be used to generate new repositories.
          default: false
          type: boolean
          example: true
        topics:
          type: array
          items:
            type: string
        has_issues:
          description: Whether issues are enabled.
          default: true
          type: boolean
          example: true
        has_projects:
          description: Whether projects are enabled.
          default: true
          type: boolean
          example: true
        has_wiki:
          description: Whether the wiki is enabled.
          default: true
          type: boolean
          example: true
        has_pages:
          type: boolean
        has_downloads:
          description: Whether downloads are enabled.
          default: true
          type: boolean
          example: true
        archived:
          description: Whether the repository is archived.
          default: false
          type: boolean
        disabled:
          type: boolean
          description: Returns whether or not this repository disabled.
        visibility:
          description: 'The repository visibility: public, private, or internal.'
          default: public
          type: string
        pushed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:06:43Z'
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:14:43Z'
          nullable: true
        allow_rebase_merge:
          description: Whether to allow rebase merges for pull requests.
          default: true
          type: boolean
          example: true
        template_repository:
          nullable: true
          type: object
          properties:
            id:
              type: integer
            node_id:
              type: string
            name:
              type: string
            full_name:
              type: string
            owner:
              type: object
              properties:
                login:
                  type: string
                id:
                  type: integer
                node_id:
                  type: string
                avatar_url:
                  type: string
                gravatar_id:
                  type: string
                url:
                  type: string
                html_url:
                  type: string
                followers_url:
                  type: string
                following_url:
                  type: string
                gists_url:
                  type: string
                starred_url:
                  type: string
                subscriptions_url:
                  type: string
                organizations_url:
                  type: string
                repos_url:
                  type: string
                events_url:
                  type: string
                received_events_url:
                  type: string
                type:
                  type: string
                site_admin:
                  type: boolean
            private:
              type: boolean
            html_url:
              type: string
            description:
              type: string
            fork:
              type: boolean
            url:
              type: string
            archive_url:
              type: string
            assignees_url:
              type: string
            blobs_url:
              type: string
            branches_url:
              type: string
            collaborators_url:
              type: string
            comments_url:
              type: string
            commits_url:
              type: string
            compare_url:
              type: string
            contents_url:
              type: string
            contributors_url:
              type: string
            deployments_url:
              type: string
            downloads_url:
              type: string
            events_url:
              type: string
            forks_url:
              type: string
            git_commits_url:
              type: string
            git_refs_url:
              type: string
            git_tags_url:
              type: string
            git_url:
              type: string
            issue_comment_url:
              type: string
            issue_events_url:
              type: string
            issues_url:
              type: string
            keys_url:
              type: string
            labels_url:
              type: string
            languages_url:
              type: string
            merges_url:
              type: string
            milestones_url:
              type: string
            notifications_url:
              type: string
            pulls_url:
              type: string
            releases_url:
              type: string
            ssh_url:
              type: string
            stargazers_url:
              type: string
            statuses_url:
              type: string
            subscribers_url:
              type: string
            subscription_url:
              type: string
            tags_url:
              type: string
            teams_url:
              type: string
            trees_url:
              type: string
            clone_url:
              type: string
            mirror_url:
              type: string
            hooks_url:
              type: string
            svn_url:
              type: string
            homepage:
              type: string
            language:
              type: string
            forks_count:
              type: integer
            stargazers_count:
              type: integer
            watchers_count:
              type: integer
            size:
              type: integer
            default_branch:
              type: string
            open_issues_count:
              type: integer
            is_template:
              type: boolean
            topics:
              type: array
              items:
                type: string
            has_issues:
              type: boolean
            has_projects:
              type: boolean
            has_wiki:
              type: boolean
            has_pages:
              type: boolean
            has_downloads:
              type: boolean
            archived:
              type: boolean
            disabled:
              type: boolean
            visibility:
              type: string
            pushed_at:
              type: string
            created_at:
              type: string
            updated_at:
              type: string
            permissions:
              type: object
              properties:
                admin:
                  type: boolean
                maintain:
                  type: boolean
                push:
                  type: boolean
                triage:
                  type: boolean
                pull:
                  type: boolean
            allow_rebase_merge:
              type: boolean
            temp_clone_token:
              type: string
            allow_squash_merge:
              type: boolean
            allow_auto_merge:
              type: boolean
            delete_branch_on_merge:
              type: boolean
            allow_update_branch:
              type: boolean
            allow_merge_commit:
              type: boolean
            subscribers_count:
              type: integer
            network_count:
              type: integer
        temp_clone_token:
          type: string
        allow_squash_merge:
          description: Whether to allow squash merges for pull requests.
          default: true
          type: boolean
          example: true
        allow_auto_merge:
          description: Whether to allow Auto-merge to be used on pull requests.
          default: false
          type: boolean
          example: false
        delete_branch_on_merge:
          description: Whether to delete head branches when pull requests are merged
          default: false
          type: boolean
          example: false
        allow_merge_commit:
          description: Whether to allow merge commits for pull requests.
          default: true
          type: boolean
          example: true
        allow_forking:
          description: Whether to allow forking this repo
          type: boolean
        subscribers_count:
          type: integer
        network_count:
          type: integer
        open_issues:
          type: integer
        watchers:
          type: integer
        master_branch:
          type: string
        starred_at:
          type: string
          example: '"2020-07-09T00:17:42Z"'
      required:
        - archive_url
        - assignees_url
        - blobs_url
        - branches_url
        - collaborators_url
        - comments_url
        - commits_url
        - compare_url
        - contents_url
        - contributors_url
        - deployments_url
        - description
        - downloads_url
        - events_url
        - fork
        - forks_url
        - full_name
        - git_commits_url
        - git_refs_url
        - git_tags_url
        - hooks_url
        - html_url
        - id
        - node_id
        - issue_comment_url
        - issue_events_url
        - issues_url
        - keys_url
        - labels_url
        - languages_url
        - merges_url
        - milestones_url
        - name
        - notifications_url
        - owner
        - private
        - pulls_url
        - releases_url
        - stargazers_url
        - statuses_url
        - subscribers_url
        - subscription_url
        - tags_url
        - teams_url
        - trees_url
        - url
        - clone_url
        - default_branch
        - forks
        - forks_count
        - git_url
        - has_downloads
        - has_issues
        - has_projects
        - has_wiki
        - has_pages
        - homepage
        - language
        - archived
        - disabled
        - mirror_url
        - open_issues
        - open_issues_count
        - license
        - pushed_at
        - size
        - ssh_url
        - stargazers_count
        - svn_url
        - watchers
        - watchers_count
        - created_at
        - updated_at
      nullable: true
    code-of-conduct:
      title: Code Of Conduct
      description: Code Of Conduct
      type: object
      properties:
        key:
          type: string
          example: contributor_covenant
        name:
          type: string
          example: Contributor Covenant
        url:
          type: string
          format: uri
          example: https://api.github.com/codes_of_conduct/contributor_covenant
        body:
          type: string
          example: |
            # Contributor Covenant Code of Conduct

            ## Our Pledge

            In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.

            ## Our Standards

            Examples of behavior that contributes to creating a positive environment include:

            * Using welcoming and inclusive language
            * Being respectful of differing viewpoints and experiences
            * Gracefully accepting constructive criticism
            * Focusing on what is best for the community
            * Showing empathy towards other community members

            Examples of unacceptable behavior by participants include:

            * The use of sexualized language or imagery and unwelcome sexual attention or advances
            * Trolling, insulting/derogatory comments, and personal or political attacks
            * Public or private harassment
            * Publishing others' private information, such as a physical or electronic address, without explicit permission
            * Other conduct which could reasonably be considered inappropriate in a professional setting

            ## Our Responsibilities

            Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response
                              to any instances of unacceptable behavior.

            Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.

            ## Scope

            This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,
                              posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.

            ## Enforcement

            Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.

            Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.

            ## Attribution

            This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]

            [homepage]: http://contributor-covenant.org
            [version]: http://contributor-covenant.org/version/1/4/
        html_url:
          type: string
          format: uri
          nullable: true
      required:
        - url
        - html_url
        - key
        - name
    nullable-license-simple:
      title: License Simple
      description: License Simple
      type: object
      properties:
        key:
          type: string
          example: mit
        name:
          type: string
          example: MIT License
        url:
          type: string
          nullable: true
          format: uri
          example: https://api.github.com/licenses/mit
        spdx_id:
          type: string
          nullable: true
          example: MIT
        node_id:
          type: string
          example: MDc6TGljZW5zZW1pdA==
        html_url:
          type: string
          format: uri
      required:
        - key
        - name
        - url
        - spdx_id
        - node_id
      nullable: true
    nullable-simple-user:
      title: Simple User
      description: Simple User
      type: object
      properties:
        name:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        login:
          type: string
          example: octocat
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        starred_at:
          type: string
          example: '"2020-07-09T00:17:55Z"'
      required:
        - avatar_url
        - events_url
        - followers_url
        - following_url
        - gists_url
        - gravatar_id
        - html_url
        - id
        - node_id
        - login
        - organizations_url
        - received_events_url
        - repos_url
        - site_admin
        - starred_url
        - subscriptions_url
        - type
        - url
      nullable: true
    repository:
      title: Repository
      description: A git repository
      type: object
      properties:
        id:
          description: Unique identifier of the repository
          example: 42
          type: integer
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          description: The name of the repository.
          type: string
          example: Team Environment
        full_name:
          type: string
          example: octocat/Hello-World
        license:
          $ref: '#/components/schemas/nullable-license-simple'
        organization:
          $ref: '#/components/schemas/nullable-simple-user'
        forks:
          type: integer
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            pull:
              type: boolean
            triage:
              type: boolean
            push:
              type: boolean
            maintain:
              type: boolean
          required:
            - admin
            - pull
            - push
        owner:
          $ref: '#/components/schemas/simple-user'
        private:
          description: Whether the repository is private or public.
          default: false
          type: boolean
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World
        description:
          type: string
          example: This your first repo!
          nullable: true
        fork:
          type: boolean
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World
        archive_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/downloads
        events_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/events
        forks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url:
          type: string
          example: git:github.com/octocat/Hello-World.git
        issue_comment_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/languages
        merges_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/merges
        milestones_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url:
          type: string
          example: git@github.com:octocat/Hello-World.git
        stargazers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscription
        tags_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/tags
        teams_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/teams
        trees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url:
          type: string
          example: https://github.com/octocat/Hello-World.git
        mirror_url:
          type: string
          format: uri
          example: git:git.example.com/octocat/Hello-World
          nullable: true
        hooks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/hooks
        svn_url:
          type: string
          format: uri
          example: https://svn.github.com/octocat/Hello-World
        homepage:
          type: string
          format: uri
          example: https://github.com
          nullable: true
        language:
          type: string
          nullable: true
        forks_count:
          type: integer
          example: 9
        stargazers_count:
          type: integer
          example: 80
        watchers_count:
          type: integer
          example: 80
        size:
          type: integer
          example: 108
        default_branch:
          description: The default branch of the repository.
          type: string
          example: master
        open_issues_count:
          type: integer
          example: 0
        is_template:
          description: Whether this repository acts as a template that can be used to generate new repositories.
          default: false
          type: boolean
          example: true
        topics:
          type: array
          items:
            type: string
        has_issues:
          description: Whether issues are enabled.
          default: true
          type: boolean
          example: true
        has_projects:
          description: Whether projects are enabled.
          default: true
          type: boolean
          example: true
        has_wiki:
          description: Whether the wiki is enabled.
          default: true
          type: boolean
          example: true
        has_pages:
          type: boolean
        has_downloads:
          description: Whether downloads are enabled.
          default: true
          type: boolean
          example: true
        archived:
          description: Whether the repository is archived.
          default: false
          type: boolean
        disabled:
          type: boolean
          description: Returns whether or not this repository disabled.
        visibility:
          description: 'The repository visibility: public, private, or internal.'
          default: public
          type: string
        pushed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:06:43Z'
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:14:43Z'
          nullable: true
        allow_rebase_merge:
          description: Whether to allow rebase merges for pull requests.
          default: true
          type: boolean
          example: true
        template_repository:
          nullable: true
          type: object
          properties:
            id:
              type: integer
            node_id:
              type: string
            name:
              type: string
            full_name:
              type: string
            owner:
              type: object
              properties:
                login:
                  type: string
                id:
                  type: integer
                node_id:
                  type: string
                avatar_url:
                  type: string
                gravatar_id:
                  type: string
                url:
                  type: string
                html_url:
                  type: string
                followers_url:
                  type: string
                following_url:
                  type: string
                gists_url:
                  type: string
                starred_url:
                  type: string
                subscriptions_url:
                  type: string
                organizations_url:
                  type: string
                repos_url:
                  type: string
                events_url:
                  type: string
                received_events_url:
                  type: string
                type:
                  type: string
                site_admin:
                  type: boolean
            private:
              type: boolean
            html_url:
              type: string
            description:
              type: string
            fork:
              type: boolean
            url:
              type: string
            archive_url:
              type: string
            assignees_url:
              type: string
            blobs_url:
              type: string
            branches_url:
              type: string
            collaborators_url:
              type: string
            comments_url:
              type: string
            commits_url:
              type: string
            compare_url:
              type: string
            contents_url:
              type: string
            contributors_url:
              type: string
            deployments_url:
              type: string
            downloads_url:
              type: string
            events_url:
              type: string
            forks_url:
              type: string
            git_commits_url:
              type: string
            git_refs_url:
              type: string
            git_tags_url:
              type: string
            git_url:
              type: string
            issue_comment_url:
              type: string
            issue_events_url:
              type: string
            issues_url:
              type: string
            keys_url:
              type: string
            labels_url:
              type: string
            languages_url:
              type: string
            merges_url:
              type: string
            milestones_url:
              type: string
            notifications_url:
              type: string
            pulls_url:
              type: string
            releases_url:
              type: string
            ssh_url:
              type: string
            stargazers_url:
              type: string
            statuses_url:
              type: string
            subscribers_url:
              type: string
            subscription_url:
              type: string
            tags_url:
              type: string
            teams_url:
              type: string
            trees_url:
              type: string
            clone_url:
              type: string
            mirror_url:
              type: string
            hooks_url:
              type: string
            svn_url:
              type: string
            homepage:
              type: string
            language:
              type: string
            forks_count:
              type: integer
            stargazers_count:
              type: integer
            watchers_count:
              type: integer
            size:
              type: integer
            default_branch:
              type: string
            open_issues_count:
              type: integer
            is_template:
              type: boolean
            topics:
              type: array
              items:
                type: string
            has_issues:
              type: boolean
            has_projects:
              type: boolean
            has_wiki:
              type: boolean
            has_pages:
              type: boolean
            has_downloads:
              type: boolean
            archived:
              type: boolean
            disabled:
              type: boolean
            visibility:
              type: string
            pushed_at:
              type: string
            created_at:
              type: string
            updated_at:
              type: string
            permissions:
              type: object
              properties:
                admin:
                  type: boolean
                maintain:
                  type: boolean
                push:
                  type: boolean
                triage:
                  type: boolean
                pull:
                  type: boolean
            allow_rebase_merge:
              type: boolean
            temp_clone_token:
              type: string
            allow_squash_merge:
              type: boolean
            allow_auto_merge:
              type: boolean
            delete_branch_on_merge:
              type: boolean
            allow_update_branch:
              type: boolean
            allow_merge_commit:
              type: boolean
            subscribers_count:
              type: integer
            network_count:
              type: integer
        temp_clone_token:
          type: string
        allow_squash_merge:
          description: Whether to allow squash merges for pull requests.
          default: true
          type: boolean
          example: true
        allow_auto_merge:
          description: Whether to allow Auto-merge to be used on pull requests.
          default: false
          type: boolean
          example: false
        delete_branch_on_merge:
          description: Whether to delete head branches when pull requests are merged
          default: false
          type: boolean
          example: false
        allow_merge_commit:
          description: Whether to allow merge commits for pull requests.
          default: true
          type: boolean
          example: true
        allow_forking:
          description: Whether to allow forking this repo
          type: boolean
        subscribers_count:
          type: integer
        network_count:
          type: integer
        open_issues:
          type: integer
        watchers:
          type: integer
        master_branch:
          type: string
        starred_at:
          type: string
          example: '"2020-07-09T00:17:42Z"'
      required:
        - archive_url
        - assignees_url
        - blobs_url
        - branches_url
        - collaborators_url
        - comments_url
        - commits_url
        - compare_url
        - contents_url
        - contributors_url
        - deployments_url
        - description
        - downloads_url
        - events_url
        - fork
        - forks_url
        - full_name
        - git_commits_url
        - git_refs_url
        - git_tags_url
        - hooks_url
        - html_url
        - id
        - node_id
        - issue_comment_url
        - issue_events_url
        - issues_url
        - keys_url
        - labels_url
        - languages_url
        - merges_url
        - milestones_url
        - name
        - notifications_url
        - owner
        - private
        - pulls_url
        - releases_url
        - stargazers_url
        - statuses_url
        - subscribers_url
        - subscription_url
        - tags_url
        - teams_url
        - trees_url
        - url
        - clone_url
        - default_branch
        - forks
        - forks_count
        - git_url
        - has_downloads
        - has_issues
        - has_projects
        - has_wiki
        - has_pages
        - homepage
        - language
        - archived
        - disabled
        - mirror_url
        - open_issues
        - open_issues_count
        - license
        - pushed_at
        - size
        - ssh_url
        - stargazers_count
        - svn_url
        - watchers
        - watchers_count
        - created_at
        - updated_at
    basic-error:
      title: Basic Error
      description: Basic Error
      type: object
      properties:
        message:
          type: string
        documentation_url:
          type: string
        url:
          type: string
        status:
          type: string
    validation-error:
      title: Validation Error
      description: Validation Error
      type: object
      required:
        - message
        - documentation_url
      properties:
        message:
          type: string
        documentation_url:
          type: string
        errors:
          type: array
          items:
            type: object
            required:
              - code
            properties:
              resource:
                type: string
              field:
                type: string
              message:
                type: string
              code:
                type: string
              index:
                type: integer
              value:
                oneOf:
                  - type: string
                    nullable: true
                  - type: integer
                    nullable: true
                  - type: array
                    nullable: true
                    items:
                      type: string
    full-repository:
      title: Full Repository
      description: Full Repository
      type: object
      properties:
        id:
          type: integer
          example: 1296269
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          type: string
          example: Hello-World
        full_name:
          type: string
          example: octocat/Hello-World
        owner:
          $ref: '#/components/schemas/simple-user'
        private:
          type: boolean
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World
        description:
          type: string
          example: This your first repo!
          nullable: true
        fork:
          type: boolean
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World
        archive_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/downloads
        events_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/events
        forks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url:
          type: string
          example: git:github.com/octocat/Hello-World.git
        issue_comment_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/languages
        merges_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/merges
        milestones_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url:
          type: string
          example: git@github.com:octocat/Hello-World.git
        stargazers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscription
        tags_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/tags
        teams_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/teams
        trees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url:
          type: string
          example: https://github.com/octocat/Hello-World.git
        mirror_url:
          type: string
          format: uri
          example: git:git.example.com/octocat/Hello-World
          nullable: true
        hooks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/hooks
        svn_url:
          type: string
          format: uri
          example: https://svn.github.com/octocat/Hello-World
        homepage:
          type: string
          format: uri
          example: https://github.com
          nullable: true
        language:
          type: string
          nullable: true
        forks_count:
          type: integer
          example: 9
        stargazers_count:
          type: integer
          example: 80
        watchers_count:
          type: integer
          example: 80
        size:
          type: integer
          example: 108
        default_branch:
          type: string
          example: master
        open_issues_count:
          type: integer
          example: 0
        is_template:
          type: boolean
          example: true
        topics:
          type: array
          items:
            type: string
          example:
            - octocat
            - atom
            - electron
            - API
        has_issues:
          type: boolean
          example: true
        has_projects:
          type: boolean
          example: true
        has_wiki:
          type: boolean
          example: true
        has_pages:
          type: boolean
        has_downloads:
          type: boolean
          example: true
        archived:
          type: boolean
        disabled:
          type: boolean
          description: Returns whether or not this repository disabled.
        visibility:
          description: 'The repository visibility: public, private, or internal.'
          type: string
          example: public
        pushed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:06:43Z'
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:14:43Z'
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            maintain:
              type: boolean
            push:
              type: boolean
            triage:
              type: boolean
            pull:
              type: boolean
          required:
            - admin
            - pull
            - push
        allow_rebase_merge:
          type: boolean
          example: true
        template_repository:
          $ref: '#/components/schemas/nullable-repository'
        temp_clone_token:
          type: string
          nullable: true
        allow_squash_merge:
          type: boolean
          example: true
        allow_auto_merge:
          type: boolean
          example: false
        delete_branch_on_merge:
          type: boolean
          example: false
        allow_merge_commit:
          type: boolean
          example: true
        allow_forking:
          type: boolean
          example: true
        subscribers_count:
          type: integer
          example: 42
        network_count:
          type: integer
          example: 0
        license:
          $ref: '#/components/schemas/nullable-license-simple'
        organization:
          $ref: '#/components/schemas/nullable-simple-user'
        parent:
          $ref: '#/components/schemas/repository'
        source:
          $ref: '#/components/schemas/repository'
        forks:
          type: integer
        master_branch:
          type: string
        open_issues:
          type: integer
        watchers:
          type: integer
        anonymous_access_enabled:
          description: Whether anonymous git access is allowed.
          default: true
          type: boolean
        code_of_conduct:
          $ref: '#/components/schemas/code-of-conduct-simple'
        security_and_analysis:
          nullable: true
          type: object
          properties:
            advanced_security:
              type: object
              properties:
                status:
                  type: string
                  enum:
                    - enabled
                    - disabled
            secret_scanning:
              type: object
              properties:
                status:
                  type: string
                  enum:
                    - enabled
                    - disabled
      required:
        - archive_url
        - assignees_url
        - blobs_url
        - branches_url
        - collaborators_url
        - comments_url
        - commits_url
        - compare_url
        - contents_url
        - contributors_url
        - deployments_url
        - description
        - downloads_url
        - events_url
        - fork
        - forks_url
        - full_name
        - git_commits_url
        - git_refs_url
        - git_tags_url
        - hooks_url
        - html_url
        - id
        - node_id
        - issue_comment_url
        - issue_events_url
        - issues_url
        - keys_url
        - labels_url
        - languages_url
        - merges_url
        - milestones_url
        - name
        - notifications_url
        - owner
        - private
        - pulls_url
        - releases_url
        - stargazers_url
        - statuses_url
        - subscribers_url
        - subscription_url
        - tags_url
        - teams_url
        - trees_url
        - url
        - clone_url
        - default_branch
        - forks
        - forks_count
        - git_url
        - has_downloads
        - has_issues
        - has_projects
        - has_wiki
        - has_pages
        - homepage
        - language
        - archived
        - disabled
        - mirror_url
        - open_issues
        - open_issues_count
        - license
        - pushed_at
        - size
        - ssh_url
        - stargazers_count
        - svn_url
        - watchers
        - watchers_count
        - created_at
        - updated_at
        - network_count
        - subscribers_count
    code-of-conduct-simple:
      title: Code Of Conduct Simple
      description: Code of Conduct Simple
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/github/docs/community/code_of_conduct
        key:
          type: string
          example: citizen_code_of_conduct
        name:
          type: string
          example: Citizen Code of Conduct
        html_url:
          type: string
          nullable: true
          format: uri
          example: https://github.com/github/docs/blob/main/CODE_OF_CONDUCT.md
      required:
        - url
        - key
        - name
        - html_url
    autolink:
      title: Autolink reference
      description: An autolink reference.
      type: object
      properties:
        id:
          type: integer
          example: 3
        key_prefix:
          description: The prefix of a key that is linkified.
          example: TICKET-
          type: string
        url_template:
          description: A template for the target URL that is generated if a key was found.
          example: https://example.com/TICKET?query=<num>
          type: string
      required:
        - id
        - key_prefix
        - url_template
    short-branch:
      title: Short Branch
      description: Short Branch
      type: object
      properties:
        name:
          type: string
        commit:
          type: object
          properties:
            sha:
              type: string
            url:
              type: string
              format: uri
          required:
            - sha
            - url
        protected:
          type: boolean
        protection:
          $ref: '#/components/schemas/branch-protection'
        protection_url:
          type: string
          format: uri
      required:
        - name
        - commit
        - protected
    branch-protection:
      title: Branch Protection
      description: Branch Protection
      type: object
      properties:
        url:
          type: string
        enabled:
          type: boolean
        required_status_checks:
          $ref: '#/components/schemas/protected-branch-required-status-check'
        enforce_admins:
          $ref: '#/components/schemas/protected-branch-admin-enforced'
        required_pull_request_reviews:
          $ref: '#/components/schemas/protected-branch-pull-request-review'
        restrictions:
          $ref: '#/components/schemas/branch-restriction-policy'
        required_linear_history:
          type: object
          properties:
            enabled:
              type: boolean
        allow_force_pushes:
          type: object
          properties:
            enabled:
              type: boolean
        allow_deletions:
          type: object
          properties:
            enabled:
              type: boolean
        required_conversation_resolution:
          type: object
          properties:
            enabled:
              type: boolean
        name:
          type: string
          example: '"branch/with/protection"'
        protection_url:
          type: string
          example: '"https://api.github.com/repos/owner-79e94e2d36b3fd06a32bb213/AAA_Public_Repo/branches/branch/with/protection/protection"'
        required_signatures:
          type: object
          properties:
            url:
              type: string
              format: uri
              example: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_signatures
            enabled:
              type: boolean
              example: true
          required:
            - url
            - enabled
    protected-branch-required-status-check:
      title: Protected Branch Required Status Check
      description: Protected Branch Required Status Check
      type: object
      properties:
        url:
          type: string
        enforcement_level:
          type: string
        contexts:
          type: array
          items:
            type: string
        checks:
          type: array
          items:
            type: object
            properties:
              context:
                type: string
              app_id:
                type: integer
                nullable: true
            required:
              - context
              - app_id
        contexts_url:
          type: string
        strict:
          type: boolean
      required:
        - contexts
        - checks
    protected-branch-admin-enforced:
      title: Protected Branch Admin Enforced
      description: Protected Branch Admin Enforced
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/enforce_admins
        enabled:
          type: boolean
          example: true
      required:
        - url
        - enabled
    protected-branch-pull-request-review:
      title: Protected Branch Pull Request Review
      description: Protected Branch Pull Request Review
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions
        dismissal_restrictions:
          type: object
          properties:
            users:
              description: The list of users with review dismissal access.
              type: array
              items:
                $ref: '#/components/schemas/simple-user'
            teams:
              description: The list of teams with review dismissal access.
              type: array
              items:
                $ref: '#/components/schemas/team'
            url:
              type: string
              example: '"https://api.github.com/repos/the-org/an-org-repo/branches/master/protection/dismissal_restrictions"'
            users_url:
              type: string
              example: '"https://api.github.com/repos/the-org/an-org-repo/branches/master/protection/dismissal_restrictions/users"'
            teams_url:
              type: string
              example: '"https://api.github.com/repos/the-org/an-org-repo/branches/master/protection/dismissal_restrictions/teams"'
        bypass_pull_request_allowances:
          type: object
          description: Allow specific users or teams to bypass pull request requirements. Set to `null` to disable.
          nullable: true
          properties:
            users:
              description: The list of users allowed to bypass pull request requirements.
              type: array
              items:
                $ref: '#/components/schemas/simple-user'
            teams:
              description: The list of teams allowed to bypass pull request requirements.
              type: array
              items:
                $ref: '#/components/schemas/team'
        dismiss_stale_reviews:
          type: boolean
          example: true
        require_code_owner_reviews:
          type: boolean
          example: true
        required_approving_review_count:
          type: integer
          minimum: 0
          maximum: 6
          example: 2
      required:
        - dismiss_stale_reviews
        - require_code_owner_reviews
    branch-restriction-policy:
      title: Branch Restriction Policy
      description: Branch Restriction Policy
      type: object
      properties:
        url:
          type: string
          format: uri
        users_url:
          type: string
          format: uri
        teams_url:
          type: string
          format: uri
        apps_url:
          type: string
          format: uri
        users:
          type: array
          items:
            type: object
            properties:
              login:
                type: string
              id:
                type: integer
              node_id:
                type: string
              avatar_url:
                type: string
              gravatar_id:
                type: string
              url:
                type: string
              html_url:
                type: string
              followers_url:
                type: string
              following_url:
                type: string
              gists_url:
                type: string
              starred_url:
                type: string
              subscriptions_url:
                type: string
              organizations_url:
                type: string
              repos_url:
                type: string
              events_url:
                type: string
              received_events_url:
                type: string
              type:
                type: string
              site_admin:
                type: boolean
        teams:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              node_id:
                type: string
              url:
                type: string
              html_url:
                type: string
              name:
                type: string
              slug:
                type: string
              description:
                type: string
                nullable: true
              privacy:
                type: string
              permission:
                type: string
              members_url:
                type: string
              repositories_url:
                type: string
              parent:
                type: string
                nullable: true
        apps:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              slug:
                type: string
              node_id:
                type: string
              owner:
                type: object
                properties:
                  login:
                    type: string
                  id:
                    type: integer
                  node_id:
                    type: string
                  url:
                    type: string
                  repos_url:
                    type: string
                  events_url:
                    type: string
                  hooks_url:
                    type: string
                  issues_url:
                    type: string
                  members_url:
                    type: string
                  public_members_url:
                    type: string
                  avatar_url:
                    type: string
                  description:
                    type: string
                  gravatar_id:
                    type: string
                    example: '""'
                  html_url:
                    type: string
                    example: '"https://github.com/testorg-ea8ec76d71c3af4b"'
                  followers_url:
                    type: string
                    example: '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/followers"'
                  following_url:
                    type: string
                    example: '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/following{/other_user}"'
                  gists_url:
                    type: string
                    example: '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/gists{/gist_id}"'
                  starred_url:
                    type: string
                    example: '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/starred{/owner}{/repo}"'
                  subscriptions_url:
                    type: string
                    example: '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/subscriptions"'
                  organizations_url:
                    type: string
                    example: '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/orgs"'
                  received_events_url:
                    type: string
                    example: '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/received_events"'
                  type:
                    type: string
                    example: '"Organization"'
                  site_admin:
                    type: boolean
                    example: false
              name:
                type: string
              description:
                type: string
              external_url:
                type: string
              html_url:
                type: string
              created_at:
                type: string
              updated_at:
                type: string
              permissions:
                type: object
                properties:
                  metadata:
                    type: string
                  contents:
                    type: string
                  issues:
                    type: string
                  single_file:
                    type: string
              events:
                type: array
                items:
                  type: string
      required:
        - url
        - users_url
        - teams_url
        - apps_url
        - users
        - teams
        - apps
    branch-with-protection:
      title: Branch With Protection
      description: Branch With Protection
      type: object
      properties:
        name:
          type: string
        commit:
          $ref: '#/components/schemas/commit'
        _links:
          type: object
          properties:
            html:
              type: string
            self:
              type: string
              format: uri
          required:
            - html
            - self
        protected:
          type: boolean
        protection:
          $ref: '#/components/schemas/branch-protection'
        protection_url:
          type: string
          format: uri
        pattern:
          type: string
          example: '"mas*"'
        required_approving_review_count:
          type: integer
          example: 1
      required:
        - name
        - commit
        - _links
        - protection
        - protected
        - protection_url
    team:
      title: Team
      description: Groups of organization members that gives permissions on specified repositories.
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        name:
          type: string
        slug:
          type: string
        description:
          type: string
          nullable: true
        privacy:
          type: string
        permission:
          type: string
        permissions:
          type: object
          properties:
            pull:
              type: boolean
            triage:
              type: boolean
            push:
              type: boolean
            maintain:
              type: boolean
            admin:
              type: boolean
          required:
            - pull
            - triage
            - push
            - maintain
            - admin
        url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
          example: https://github.com/orgs/rails/teams/core
        members_url:
          type: string
        repositories_url:
          type: string
          format: uri
        parent:
          $ref: '#/components/schemas/nullable-team-simple'
      required:
        - id
        - node_id
        - url
        - members_url
        - name
        - description
        - permission
        - html_url
        - repositories_url
        - slug
        - parent
    commit:
      title: Commit
      description: Commit
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
        sha:
          type: string
          example: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        node_id:
          type: string
          example: MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e
        comments_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments
        commit:
          type: object
          properties:
            url:
              type: string
              format: uri
              example: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
            author:
              $ref: '#/components/schemas/nullable-git-user'
            committer:
              $ref: '#/components/schemas/nullable-git-user'
            message:
              type: string
              example: Fix all the bugs
            comment_count:
              type: integer
              example: 0
            tree:
              type: object
              properties:
                sha:
                  type: string
                  example: 827efc6d56897b048c772eb4087f854f46256132
                url:
                  type: string
                  format: uri
                  example: https://api.github.com/repos/octocat/Hello-World/tree/827efc6d56897b048c772eb4087f854f46256132
              required:
                - sha
                - url
            verification:
              $ref: '#/components/schemas/verification'
          required:
            - author
            - committer
            - comment_count
            - message
            - tree
            - url
        author:
          $ref: '#/components/schemas/nullable-simple-user'
        committer:
          $ref: '#/components/schemas/nullable-simple-user'
        parents:
          type: array
          items:
            type: object
            properties:
              sha:
                type: string
                example: 7638417db6d59f3c431d3e1f261cc637155684cd
              url:
                type: string
                format: uri
                example: https://api.github.com/repos/octocat/Hello-World/commits/7638417db6d59f3c431d3e1f261cc637155684cd
              html_url:
                type: string
                format: uri
                example: https://github.com/octocat/Hello-World/commit/7638417db6d59f3c431d3e1f261cc637155684cd
            required:
              - sha
              - url
        stats:
          type: object
          properties:
            additions:
              type: integer
            deletions:
              type: integer
            total:
              type: integer
        files:
          type: array
          items:
            $ref: '#/components/schemas/diff-entry'
      required:
        - url
        - sha
        - node_id
        - html_url
        - comments_url
        - commit
        - author
        - committer
        - parents
    nullable-team-simple:
      title: Team Simple
      description: Groups of organization members that gives permissions on specified repositories.
      type: object
      properties:
        id:
          description: Unique identifier of the team
          type: integer
          example: 1
        node_id:
          type: string
          example: MDQ6VGVhbTE=
        url:
          description: URL for the team
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/1
        members_url:
          type: string
          example: https://api.github.com/organizations/1/team/1/members{/member}
        name:
          description: Name of the team
          type: string
          example: Justice League
        description:
          description: Description of the team
          type: string
          nullable: true
          example: A great team.
        permission:
          description: Permission that the team will have for its repositories
          type: string
          example: admin
        privacy:
          description: The level of privacy this team should have
          type: string
          example: closed
        html_url:
          type: string
          format: uri
          example: https://github.com/orgs/rails/teams/core
        repositories_url:
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/1/repos
        slug:
          type: string
          example: justice-league
        ldap_dn:
          description: Distinguished Name (DN) that team maps to within LDAP environment
          example: uid=example,ou=users,dc=github,dc=com
          type: string
      required:
        - id
        - node_id
        - url
        - members_url
        - name
        - description
        - permission
        - html_url
        - repositories_url
        - slug
      nullable: true
    nullable-git-user:
      title: Git User
      description: Metaproperties for Git author/committer information.
      type: object
      properties:
        name:
          type: string
          example: '"Chris Wanstrath"'
        email:
          type: string
          example: '"chris@ozmm.org"'
        date:
          type: string
          example: '"2007-10-29T02:42:39.000-07:00"'
      nullable: true
    verification:
      title: Verification
      type: object
      properties:
        verified:
          type: boolean
        reason:
          type: string
        payload:
          type: string
          nullable: true
        signature:
          type: string
          nullable: true
      required:
        - verified
        - reason
        - payload
        - signature
    diff-entry:
      title: Diff Entry
      description: Diff Entry
      type: object
      properties:
        sha:
          type: string
          example: bbcd538c8e72b8c175046e27cc8f907076331401
        filename:
          type: string
          example: file1.txt
        status:
          type: string
          enum:
            - added
            - removed
            - modified
            - renamed
            - copied
            - changed
            - unchanged
          example: added
        additions:
          type: integer
          example: 103
        deletions:
          type: integer
          example: 21
        changes:
          type: integer
          example: 124
        blob_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/blob/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt
        raw_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/raw/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt
        contents_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/contents/file1.txt?ref=6dcb09b5b57875f334f61aebed695e2e4193db5e
        patch:
          type: string
          example: '@@ -132,7 +132,7 @@ module Test @@ -1000,7 +1000,7 @@ module Test'
        previous_filename:
          type: string
          example: file.txt
      required:
        - additions
        - blob_url
        - changes
        - contents_url
        - deletions
        - filename
        - raw_url
        - sha
        - status
    protected-branch:
      title: Protected Branch
      description: Branch protections protect branches
      type: object
      properties:
        url:
          type: string
          format: uri
        required_status_checks:
          $ref: '#/components/schemas/status-check-policy'
        required_pull_request_reviews:
          type: object
          properties:
            url:
              type: string
              format: uri
            dismiss_stale_reviews:
              type: boolean
            require_code_owner_reviews:
              type: boolean
            required_approving_review_count:
              type: integer
            dismissal_restrictions:
              type: object
              properties:
                url:
                  type: string
                  format: uri
                users_url:
                  type: string
                  format: uri
                teams_url:
                  type: string
                  format: uri
                users:
                  type: array
                  items:
                    $ref: '#/components/schemas/simple-user'
                teams:
                  type: array
                  items:
                    $ref: '#/components/schemas/team'
              required:
                - url
                - users_url
                - teams_url
                - users
                - teams
            bypass_pull_request_allowances:
              type: object
              properties:
                users:
                  type: array
                  items:
                    $ref: '#/components/schemas/simple-user'
                teams:
                  type: array
                  items:
                    $ref: '#/components/schemas/team'
              required:
                - users
                - teams
          required:
            - url
        required_signatures:
          type: object
          properties:
            url:
              type: string
              format: uri
              example: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_signatures
            enabled:
              type: boolean
              example: true
          required:
            - url
            - enabled
        enforce_admins:
          type: object
          properties:
            url:
              type: string
              format: uri
            enabled:
              type: boolean
          additionalProperties: false
          required:
            - url
            - enabled
        required_linear_history:
          type: object
          properties:
            enabled:
              type: boolean
          additionalProperties: false
          required:
            - enabled
        allow_force_pushes:
          type: object
          properties:
            enabled:
              type: boolean
          additionalProperties: false
          required:
            - enabled
        allow_deletions:
          type: object
          properties:
            enabled:
              type: boolean
          additionalProperties: false
          required:
            - enabled
        restrictions:
          $ref: '#/components/schemas/branch-restriction-policy'
        required_conversation_resolution:
          type: object
          properties:
            enabled:
              type: boolean
          additionalProperties: false
      required:
        - url
    status-check-policy:
      title: Status Check Policy
      description: Status Check Policy
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks
        strict:
          type: boolean
          example: true
        contexts:
          type: array
          example:
            - continuous-integration/travis-ci
          items:
            type: string
        checks:
          type: array
          items:
            type: object
            properties:
              context:
                type: string
                example: continuous-integration/travis-ci
              app_id:
                type: integer
                nullable: true
            required:
              - context
              - app_id
        contexts_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks/contexts
      required:
        - url
        - contexts_url
        - strict
        - contexts
        - checks
    validation-error-simple:
      title: Validation Error Simple
      description: Validation Error Simple
      type: object
      required:
        - message
        - documentation_url
      properties:
        message:
          type: string
        documentation_url:
          type: string
        errors:
          type: array
          items:
            type: string
    integration:
      title: GitHub app
      description: GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
      type: object
      properties:
        id:
          description: Unique identifier of the GitHub app
          example: 37
          type: integer
        slug:
          description: The slug name of the GitHub app
          example: probot-owners
          type: string
        node_id:
          type: string
          example: MDExOkludGVncmF0aW9uMQ==
        owner:
          $ref: '#/components/schemas/nullable-simple-user'
        name:
          description: The name of the GitHub app
          example: Probot Owners
          type: string
        description:
          type: string
          example: The description of the app.
          nullable: true
        external_url:
          type: string
          format: uri
          example: https://example.com
        html_url:
          type: string
          format: uri
          example: https://github.com/apps/super-ci
        created_at:
          type: string
          format: date-time
          example: '2017-07-08T16:18:44-04:00'
        updated_at:
          type: string
          format: date-time
          example: '2017-07-08T16:18:44-04:00'
        permissions:
          description: The set of permissions for the GitHub app
          type: object
          properties:
            issues:
              type: string
            checks:
              type: string
            metadata:
              type: string
            contents:
              type: string
            deployments:
              type: string
          additionalProperties:
            type: string
          example:
            issues: read
            deployments: write
        events:
          description: The list of events for the GitHub app
          example:
            - label
            - deployment
          type: array
          items:
            type: string
        installations_count:
          description: The number of installations associated with the GitHub app
          example: 5
          type: integer
        client_id:
          type: string
          example: '"Iv1.25b5d1e65ffc4022"'
        client_secret:
          type: string
          example: '"1d4b2097ac622ba702d19de498f005747a8b21d3"'
        webhook_secret:
          type: string
          example: '"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"'
          nullable: true
        pem:
          type: string
          example: '"-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END RSA PRIVATE KEY-----\n"'
      required:
        - id
        - node_id
        - owner
        - name
        - description
        - external_url
        - html_url
        - created_at
        - updated_at
        - permissions
        - events
    codeowners-errors:
      title: CODEOWNERS errors
      description: A list of errors found in a repo's CODEOWNERS file
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              line:
                description: The line number where this errors occurs.
                type: integer
                example: 7
              column:
                description: The column number where this errors occurs.
                type: integer
                example: 3
              source:
                description: The contents of the line where the error occurs.
                type: string
                example: '* user'
              kind:
                description: The type of error.
                type: string
                example: Invalid owner
              suggestion:
                description: Suggested action to fix the error. This will usually be `null`, but is provided for some common errors.
                type: string
                nullable: true
                example: The pattern `/` will never match anything, did you mean `*` instead?
              message:
                description: A human-readable description of the error, combining information from multiple fields, laid out for display in a monospaced typeface (for example, a command-line setting).
                type: string
                example: |-
                  Invalid owner on line 7:

                    * user
                      ^
              path:
                description: The path of the file where the error occured.
                type: string
                example: .github/CODEOWNERS
            required:
              - line
              - column
              - kind
              - message
              - path
      required:
        - errors
    collaborator:
      title: Collaborator
      description: Collaborator
      type: object
      properties:
        login:
          type: string
          example: octocat
        id:
          type: integer
          example: 1
        email:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        permissions:
          type: object
          properties:
            pull:
              type: boolean
            triage:
              type: boolean
            push:
              type: boolean
            maintain:
              type: boolean
            admin:
              type: boolean
          required:
            - pull
            - push
            - admin
        role_name:
          type: string
          example: admin
      required:
        - avatar_url
        - events_url
        - followers_url
        - following_url
        - gists_url
        - gravatar_id
        - html_url
        - id
        - node_id
        - login
        - organizations_url
        - received_events_url
        - repos_url
        - site_admin
        - starred_url
        - subscriptions_url
        - type
        - url
        - role_name
    repository-invitation:
      title: Repository Invitation
      description: Repository invitations let you manage who you collaborate with.
      type: object
      properties:
        id:
          description: Unique identifier of the repository invitation.
          example: 42
          type: integer
        repository:
          $ref: '#/components/schemas/minimal-repository'
        invitee:
          $ref: '#/components/schemas/nullable-simple-user'
        inviter:
          $ref: '#/components/schemas/nullable-simple-user'
        permissions:
          description: The permission associated with the invitation.
          example: read
          type: string
          enum:
            - read
            - write
            - admin
            - triage
            - maintain
        created_at:
          type: string
          format: date-time
          example: '2016-06-13T14:52:50-05:00'
        expired:
          description: Whether or not the invitation has expired
          type: boolean
        url:
          description: URL for the repository invitation
          example: https://api.github.com/user/repository-invitations/1
          type: string
        html_url:
          type: string
          example: https://github.com/octocat/Hello-World/invitations
        node_id:
          type: string
      required:
        - id
        - node_id
        - permissions
        - inviter
        - invitee
        - repository
        - url
        - html_url
        - created_at
    repository-collaborator-permission:
      title: Repository Collaborator Permission
      description: Repository Collaborator Permission
      type: object
      properties:
        permission:
          type: string
        role_name:
          type: string
          example: admin
        user:
          $ref: '#/components/schemas/nullable-collaborator'
      required:
        - permission
        - role_name
        - user
    nullable-collaborator:
      title: Collaborator
      description: Collaborator
      type: object
      properties:
        login:
          type: string
          example: octocat
        id:
          type: integer
          example: 1
        email:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        permissions:
          type: object
          properties:
            pull:
              type: boolean
            triage:
              type: boolean
            push:
              type: boolean
            maintain:
              type: boolean
            admin:
              type: boolean
          required:
            - pull
            - push
            - admin
        role_name:
          type: string
          example: admin
      required:
        - avatar_url
        - events_url
        - followers_url
        - following_url
        - gists_url
        - gravatar_id
        - html_url
        - id
        - node_id
        - login
        - organizations_url
        - received_events_url
        - repos_url
        - site_admin
        - starred_url
        - subscriptions_url
        - type
        - url
        - role_name
      nullable: true
    commit-comment:
      title: Commit Comment
      description: Commit Comment
      type: object
      properties:
        html_url:
          type: string
          format: uri
        url:
          type: string
          format: uri
        id:
          type: integer
        node_id:
          type: string
        body:
          type: string
        path:
          type: string
          nullable: true
        position:
          type: integer
          nullable: true
        line:
          type: integer
          nullable: true
        commit_id:
          type: string
        user:
          $ref: '#/components/schemas/nullable-simple-user'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        author_association:
          $ref: '#/components/schemas/author_association'
        reactions:
          $ref: '#/components/schemas/reaction-rollup'
      required:
        - url
        - html_url
        - id
        - node_id
        - user
        - position
        - line
        - path
        - commit_id
        - body
        - author_association
        - created_at
        - updated_at
    author_association:
      title: author_association
      type: string
      example: OWNER
      description: How the author is associated with the repository.
      enum:
        - COLLABORATOR
        - CONTRIBUTOR
        - FIRST_TIMER
        - FIRST_TIME_CONTRIBUTOR
        - MANNEQUIN
        - MEMBER
        - NONE
        - OWNER
    reaction-rollup:
      title: Reaction Rollup
      type: object
      properties:
        url:
          type: string
          format: uri
        total_count:
          type: integer
        '+1':
          type: integer
        '-1':
          type: integer
        laugh:
          type: integer
        confused:
          type: integer
        heart:
          type: integer
        hooray:
          type: integer
        eyes:
          type: integer
        rocket:
          type: integer
      required:
        - url
        - total_count
        - '+1'
        - '-1'
        - laugh
        - confused
        - heart
        - hooray
        - eyes
        - rocket
    scim-error:
      title: Scim Error
      description: Scim Error
      type: object
      properties:
        message:
          type: string
          nullable: true
        documentation_url:
          type: string
          nullable: true
        detail:
          type: string
          nullable: true
        status:
          type: integer
        scimType:
          type: string
          nullable: true
        schemas:
          type: array
          items:
            type: string
    branch-short:
      title: Branch Short
      description: Branch Short
      type: object
      properties:
        name:
          type: string
        commit:
          type: object
          properties:
            sha:
              type: string
            url:
              type: string
          required:
            - sha
            - url
        protected:
          type: boolean
      required:
        - name
        - commit
        - protected
    pull-request-simple:
      title: Pull Request Simple
      description: Pull Request Simple
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/pulls/1347
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDExOlB1bGxSZXF1ZXN0MQ==
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/pull/1347
        diff_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/pull/1347.diff
        patch_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/pull/1347.patch
        issue_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/issues/1347
        commits_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
        review_comments_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
        review_comment_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
        comments_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
        statuses_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
        number:
          type: integer
          example: 1347
        state:
          type: string
          example: open
        locked:
          type: boolean
          example: true
        title:
          type: string
          example: new-feature
        user:
          $ref: '#/components/schemas/nullable-simple-user'
        body:
          type: string
          example: Please pull these awesome changes
          nullable: true
        labels:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                format: int64
              node_id:
                type: string
              url:
                type: string
              name:
                type: string
              description:
                type: string
              color:
                type: string
              default:
                type: boolean
            required:
              - id
              - node_id
              - url
              - name
              - description
              - color
              - default
        milestone:
          $ref: '#/components/schemas/nullable-milestone'
        active_lock_reason:
          type: string
          example: too heated
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
        closed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        merged_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        merge_commit_sha:
          type: string
          example: e5bd3914e2e596debea16f433f57875b5b90bcd6
          nullable: true
        assignee:
          $ref: '#/components/schemas/nullable-simple-user'
        assignees:
          type: array
          items:
            $ref: '#/components/schemas/simple-user'
          nullable: true
        requested_reviewers:
          type: array
          items:
            $ref: '#/components/schemas/simple-user'
          nullable: true
        requested_teams:
          type: array
          items:
            $ref: '#/components/schemas/team'
          nullable: true
        head:
          type: object
          properties:
            label:
              type: string
            ref:
              type: string
            repo:
              $ref: '#/components/schemas/repository'
            sha:
              type: string
            user:
              $ref: '#/components/schemas/nullable-simple-user'
          required:
            - label
            - ref
            - repo
            - sha
            - user
        base:
          type: object
          properties:
            label:
              type: string
            ref:
              type: string
            repo:
              $ref: '#/components/schemas/repository'
            sha:
              type: string
            user:
              $ref: '#/components/schemas/nullable-simple-user'
          required:
            - label
            - ref
            - repo
            - sha
            - user
        _links:
          type: object
          properties:
            comments:
              $ref: '#/components/schemas/link'
            commits:
              $ref: '#/components/schemas/link'
            statuses:
              $ref: '#/components/schemas/link'
            html:
              $ref: '#/components/schemas/link'
            issue:
              $ref: '#/components/schemas/link'
            review_comments:
              $ref: '#/components/schemas/link'
            review_comment:
              $ref: '#/components/schemas/link'
            self:
              $ref: '#/components/schemas/link'
          required:
            - comments
            - commits
            - statuses
            - html
            - issue
            - review_comments
            - review_comment
            - self
        author_association:
          $ref: '#/components/schemas/author_association'
        auto_merge:
          $ref: '#/components/schemas/auto_merge'
        draft:
          description: Indicates whether or not the pull request is a draft.
          example: false
          type: boolean
      required:
        - _links
        - assignee
        - labels
        - base
        - body
        - closed_at
        - comments_url
        - commits_url
        - created_at
        - diff_url
        - head
        - html_url
        - id
        - node_id
        - issue_url
        - merge_commit_sha
        - merged_at
        - milestone
        - number
        - patch_url
        - review_comment_url
        - review_comments_url
        - statuses_url
        - state
        - locked
        - title
        - updated_at
        - url
        - user
        - author_association
        - auto_merge
    nullable-milestone:
      title: Milestone
      description: A collection of related issues and pull requests.
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/milestones/1
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/milestones/v1.0
        labels_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
        id:
          type: integer
          example: 1002604
        node_id:
          type: string
          example: MDk6TWlsZXN0b25lMTAwMjYwNA==
        number:
          description: The number of the milestone.
          type: integer
          example: 42
        state:
          description: The state of the milestone.
          example: open
          type: string
          enum:
            - open
            - closed
          default: open
        title:
          description: The title of the milestone.
          example: v1.0
          type: string
        description:
          type: string
          example: Tracking milestone for version 1.0
          nullable: true
        creator:
          $ref: '#/components/schemas/nullable-simple-user'
        open_issues:
          type: integer
          example: 4
        closed_issues:
          type: integer
          example: 8
        created_at:
          type: string
          format: date-time
          example: '2011-04-10T20:09:31Z'
        updated_at:
          type: string
          format: date-time
          example: '2014-03-03T18:58:10Z'
        closed_at:
          type: string
          format: date-time
          example: '2013-02-12T13:22:01Z'
          nullable: true
        due_on:
          type: string
          format: date-time
          example: '2012-10-09T23:39:01Z'
          nullable: true
      required:
        - closed_issues
        - creator
        - description
        - due_on
        - closed_at
        - id
        - node_id
        - labels_url
        - html_url
        - number
        - open_issues
        - state
        - title
        - url
        - created_at
        - updated_at
      nullable: true
    link:
      title: Link
      description: Hypermedia Link
      type: object
      properties:
        href:
          type: string
      required:
        - href
    auto_merge:
      title: Auto merge
      description: The status of auto merging a pull request.
      type: object
      properties:
        enabled_by:
          $ref: '#/components/schemas/simple-user'
        merge_method:
          type: string
          description: The merge method to use.
          enum:
            - merge
            - squash
            - rebase
        commit_title:
          type: string
          description: Title for the merge commit message.
        commit_message:
          type: string
          description: Commit message for the merge commit.
      required:
        - enabled_by
        - merge_method
        - commit_title
        - commit_message
      nullable: true
    combined-commit-status:
      title: Combined Commit Status
      description: Combined Commit Status
      type: object
      properties:
        state:
          type: string
        statuses:
          type: array
          items:
            $ref: '#/components/schemas/simple-commit-status'
        sha:
          type: string
        total_count:
          type: integer
        repository:
          $ref: '#/components/schemas/minimal-repository'
        commit_url:
          type: string
          format: uri
        url:
          type: string
          format: uri
      required:
        - state
        - sha
        - total_count
        - statuses
        - repository
        - commit_url
        - url
    simple-commit-status:
      title: Simple Commit Status
      type: object
      properties:
        description:
          type: string
          nullable: true
        id:
          type: integer
        node_id:
          type: string
        state:
          type: string
        context:
          type: string
        target_url:
          type: string
          format: uri
        required:
          type: boolean
          nullable: true
        avatar_url:
          type: string
          nullable: true
          format: uri
        url:
          type: string
          format: uri
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - description
        - id
        - node_id
        - state
        - context
        - target_url
        - avatar_url
        - url
        - created_at
        - updated_at
    status:
      title: Status
      description: The status of a commit.
      type: object
      properties:
        url:
          type: string
        avatar_url:
          type: string
          nullable: true
        id:
          type: integer
        node_id:
          type: string
        state:
          type: string
        description:
          type: string
        target_url:
          type: string
        context:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
        creator:
          $ref: '#/components/schemas/nullable-simple-user'
      required:
        - url
        - avatar_url
        - id
        - node_id
        - state
        - description
        - target_url
        - context
        - created_at
        - updated_at
        - creator
    community-profile:
      title: Community Profile
      description: Community Profile
      type: object
      properties:
        health_percentage:
          type: integer
          example: 100
        description:
          type: string
          example: My first repository on GitHub!
          nullable: true
        documentation:
          type: string
          example: example.com
          nullable: true
        files:
          type: object
          properties:
            code_of_conduct:
              $ref: '#/components/schemas/nullable-code-of-conduct-simple'
            code_of_conduct_file:
              $ref: '#/components/schemas/nullable-community-health-file'
            license:
              $ref: '#/components/schemas/nullable-license-simple'
            contributing:
              $ref: '#/components/schemas/nullable-community-health-file'
            readme:
              $ref: '#/components/schemas/nullable-community-health-file'
            issue_template:
              $ref: '#/components/schemas/nullable-community-health-file'
            pull_request_template:
              $ref: '#/components/schemas/nullable-community-health-file'
          required:
            - code_of_conduct
            - code_of_conduct_file
            - license
            - contributing
            - readme
            - issue_template
            - pull_request_template
        updated_at:
          type: string
          format: date-time
          example: '2017-02-28T19:09:29Z'
          nullable: true
        content_reports_enabled:
          type: boolean
          example: true
      required:
        - health_percentage
        - description
        - documentation
        - files
        - updated_at
    nullable-code-of-conduct-simple:
      title: Code Of Conduct Simple
      description: Code of Conduct Simple
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/github/docs/community/code_of_conduct
        key:
          type: string
          example: citizen_code_of_conduct
        name:
          type: string
          example: Citizen Code of Conduct
        html_url:
          type: string
          nullable: true
          format: uri
          example: https://github.com/github/docs/blob/main/CODE_OF_CONDUCT.md
      required:
        - url
        - key
        - name
        - html_url
      nullable: true
    nullable-community-health-file:
      title: Community Health File
      type: object
      properties:
        url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
      required:
        - url
        - html_url
      nullable: true
    commit-comparison:
      title: Commit Comparison
      description: Commit Comparison
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/compare/master...topic
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/compare/master...topic
        permalink_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/compare/octocat:bbcd538c8e72b8c175046e27cc8f907076331401...octocat:0328041d1152db8ae77652d1618a02e57f745f17
        diff_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/compare/master...topic.diff
        patch_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/compare/master...topic.patch
        base_commit:
          $ref: '#/components/schemas/commit'
        merge_base_commit:
          $ref: '#/components/schemas/commit'
        status:
          type: string
          enum:
            - diverged
            - ahead
            - behind
            - identical
          example: ahead
        ahead_by:
          type: integer
          example: 4
        behind_by:
          type: integer
          example: 5
        total_commits:
          type: integer
          example: 6
        commits:
          type: array
          items:
            $ref: '#/components/schemas/commit'
        files:
          type: array
          items:
            $ref: '#/components/schemas/diff-entry'
      required:
        - url
        - html_url
        - permalink_url
        - diff_url
        - patch_url
        - base_commit
        - merge_base_commit
        - status
        - ahead_by
        - behind_by
        - total_commits
        - commits
    content-tree:
      title: Content Tree
      description: Content Tree
      type: object
      properties:
        type:
          type: string
        size:
          type: integer
        name:
          type: string
        path:
          type: string
        sha:
          type: string
        url:
          type: string
          format: uri
        git_url:
          type: string
          format: uri
          nullable: true
        html_url:
          type: string
          format: uri
          nullable: true
        download_url:
          type: string
          format: uri
          nullable: true
        entries:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              size:
                type: integer
              name:
                type: string
              path:
                type: string
              content:
                type: string
              sha:
                type: string
              url:
                type: string
                format: uri
              git_url:
                type: string
                format: uri
                nullable: true
              html_url:
                type: string
                format: uri
                nullable: true
              download_url:
                type: string
                format: uri
                nullable: true
              _links:
                type: object
                properties:
                  git:
                    type: string
                    format: uri
                    nullable: true
                  html:
                    type: string
                    format: uri
                    nullable: true
                  self:
                    type: string
                    format: uri
                required:
                  - git
                  - html
                  - self
            required:
              - _links
              - git_url
              - html_url
              - download_url
              - name
              - path
              - sha
              - size
              - type
              - url
        _links:
          type: object
          properties:
            git:
              type: string
              format: uri
              nullable: true
            html:
              type: string
              format: uri
              nullable: true
            self:
              type: string
              format: uri
          required:
            - git
            - html
            - self
      required:
        - _links
        - git_url
        - html_url
        - download_url
        - name
        - path
        - sha
        - size
        - type
        - url
        - content
        - encoding
    content-directory:
      title: Content Directory
      description: A list of directory items
      type: array
      items:
        type: object
        properties:
          type:
            type: string
          size:
            type: integer
          name:
            type: string
          path:
            type: string
          content:
            type: string
          sha:
            type: string
          url:
            type: string
            format: uri
          git_url:
            type: string
            format: uri
            nullable: true
          html_url:
            type: string
            format: uri
            nullable: true
          download_url:
            type: string
            format: uri
            nullable: true
          _links:
            type: object
            properties:
              git:
                type: string
                format: uri
                nullable: true
              html:
                type: string
                format: uri
                nullable: true
              self:
                type: string
                format: uri
            required:
              - git
              - html
              - self
        required:
          - _links
          - git_url
          - html_url
          - download_url
          - name
          - path
          - sha
          - size
          - type
          - url
    content-file:
      title: Content File
      description: Content File
      type: object
      properties:
        type:
          type: string
        encoding:
          type: string
        size:
          type: integer
        name:
          type: string
        path:
          type: string
        content:
          type: string
        sha:
          type: string
        url:
          type: string
          format: uri
        git_url:
          type: string
          format: uri
          nullable: true
        html_url:
          type: string
          format: uri
          nullable: true
        download_url:
          type: string
          format: uri
          nullable: true
        _links:
          type: object
          properties:
            git:
              type: string
              format: uri
              nullable: true
            html:
              type: string
              format: uri
              nullable: true
            self:
              type: string
              format: uri
          required:
            - git
            - html
            - self
        target:
          type: string
          example: '"actual/actual.md"'
        submodule_git_url:
          type: string
          example: '"git://example.com/defunkt/dotjs.git"'
      required:
        - _links
        - git_url
        - html_url
        - download_url
        - name
        - path
        - sha
        - size
        - type
        - url
        - content
        - encoding
    content-symlink:
      title: Symlink Content
      description: An object describing a symlink
      type: object
      properties:
        type:
          type: string
        target:
          type: string
        size:
          type: integer
        name:
          type: string
        path:
          type: string
        sha:
          type: string
        url:
          type: string
          format: uri
        git_url:
          type: string
          format: uri
          nullable: true
        html_url:
          type: string
          format: uri
          nullable: true
        download_url:
          type: string
          format: uri
          nullable: true
        _links:
          type: object
          properties:
            git:
              type: string
              format: uri
              nullable: true
            html:
              type: string
              format: uri
              nullable: true
            self:
              type: string
              format: uri
          required:
            - git
            - html
            - self
      required:
        - _links
        - git_url
        - html_url
        - download_url
        - name
        - path
        - sha
        - size
        - type
        - url
        - target
    content-submodule:
      title: Symlink Content
      description: An object describing a symlink
      type: object
      properties:
        type:
          type: string
        submodule_git_url:
          type: string
          format: uri
        size:
          type: integer
        name:
          type: string
        path:
          type: string
        sha:
          type: string
        url:
          type: string
          format: uri
        git_url:
          type: string
          format: uri
          nullable: true
        html_url:
          type: string
          format: uri
          nullable: true
        download_url:
          type: string
          format: uri
          nullable: true
        _links:
          type: object
          properties:
            git:
              type: string
              format: uri
              nullable: true
            html:
              type: string
              format: uri
              nullable: true
            self:
              type: string
              format: uri
          required:
            - git
            - html
            - self
      required:
        - _links
        - git_url
        - html_url
        - download_url
        - name
        - path
        - sha
        - size
        - type
        - url
        - submodule_git_url
    file-commit:
      title: File Commit
      description: File Commit
      type: object
      required:
        - content
        - commit
      properties:
        content:
          type: object
          properties:
            name:
              type: string
            path:
              type: string
            sha:
              type: string
            size:
              type: integer
            url:
              type: string
            html_url:
              type: string
            git_url:
              type: string
            download_url:
              type: string
            type:
              type: string
            _links:
              type: object
              properties:
                self:
                  type: string
                git:
                  type: string
                html:
                  type: string
          nullable: true
        commit:
          type: object
          properties:
            sha:
              type: string
            node_id:
              type: string
            url:
              type: string
            html_url:
              type: string
            author:
              type: object
              properties:
                date:
                  type: string
                name:
                  type: string
                email:
                  type: string
            committer:
              type: object
              properties:
                date:
                  type: string
                name:
                  type: string
                email:
                  type: string
            message:
              type: string
            tree:
              type: object
              properties:
                url:
                  type: string
                sha:
                  type: string
            parents:
              type: array
              items:
                type: object
                properties:
                  url:
                    type: string
                  html_url:
                    type: string
                  sha:
                    type: string
            verification:
              type: object
              properties:
                verified:
                  type: boolean
                reason:
                  type: string
                signature:
                  type: string
                  nullable: true
                payload:
                  type: string
                  nullable: true
    contributor:
      title: Contributor
      description: Contributor
      type: object
      properties:
        login:
          type: string
        id:
          type: integer
        node_id:
          type: string
        avatar_url:
          type: string
          format: uri
        gravatar_id:
          type: string
          nullable: true
        url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        followers_url:
          type: string
          format: uri
        following_url:
          type: string
        gists_url:
          type: string
        starred_url:
          type: string
        subscriptions_url:
          type: string
          format: uri
        organizations_url:
          type: string
          format: uri
        repos_url:
          type: string
          format: uri
        events_url:
          type: string
        received_events_url:
          type: string
          format: uri
        type:
          type: string
        site_admin:
          type: boolean
        contributions:
          type: integer
        email:
          type: string
        name:
          type: string
      required:
        - contributions
        - type
    deployment:
      title: Deployment
      description: A request for a specific ref(branch,sha,tag) to be deployed
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example/deployments/1
        id:
          description: Unique identifier of the deployment
          example: 42
          type: integer
        node_id:
          type: string
          example: MDEwOkRlcGxveW1lbnQx
        sha:
          type: string
          example: a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
        ref:
          description: The ref to deploy. This can be a branch, tag, or sha.
          example: topic-branch
          type: string
        task:
          description: Parameter to specify a task to execute
          example: deploy
          type: string
        payload:
          oneOf:
            - type: object
              additionalProperties: true
            - type: string
        original_environment:
          type: string
          example: staging
        environment:
          description: Name for the target deployment environment.
          example: production
          type: string
        description:
          type: string
          example: Deploy request from hubot
          nullable: true
        creator:
          $ref: '#/components/schemas/nullable-simple-user'
        created_at:
          type: string
          format: date-time
          example: '2012-07-20T01:19:13Z'
        updated_at:
          type: string
          format: date-time
          example: '2012-07-20T01:19:13Z'
        statuses_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example/deployments/1/statuses
        repository_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example
        transient_environment:
          description: 'Specifies if the given environment is will no longer exist at some point in the future. Default: false.'
          example: true
          type: boolean
        production_environment:
          description: 'Specifies if the given environment is one that end-users directly interact with. Default: false.'
          example: true
          type: boolean
        performed_via_github_app:
          $ref: '#/components/schemas/nullable-integration'
      required:
        - id
        - node_id
        - sha
        - ref
        - task
        - environment
        - creator
        - payload
        - description
        - statuses_url
        - repository_url
        - url
        - created_at
        - updated_at
    nullable-integration:
      title: GitHub app
      description: GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
      type: object
      properties:
        id:
          description: Unique identifier of the GitHub app
          example: 37
          type: integer
        slug:
          description: The slug name of the GitHub app
          example: probot-owners
          type: string
        node_id:
          type: string
          example: MDExOkludGVncmF0aW9uMQ==
        owner:
          $ref: '#/components/schemas/nullable-simple-user'
        name:
          description: The name of the GitHub app
          example: Probot Owners
          type: string
        description:
          type: string
          example: The description of the app.
          nullable: true
        external_url:
          type: string
          format: uri
          example: https://example.com
        html_url:
          type: string
          format: uri
          example: https://github.com/apps/super-ci
        created_at:
          type: string
          format: date-time
          example: '2017-07-08T16:18:44-04:00'
        updated_at:
          type: string
          format: date-time
          example: '2017-07-08T16:18:44-04:00'
        permissions:
          description: The set of permissions for the GitHub app
          type: object
          properties:
            issues:
              type: string
            checks:
              type: string
            metadata:
              type: string
            contents:
              type: string
            deployments:
              type: string
          additionalProperties:
            type: string
          example:
            issues: read
            deployments: write
        events:
          description: The list of events for the GitHub app
          example:
            - label
            - deployment
          type: array
          items:
            type: string
        installations_count:
          description: The number of installations associated with the GitHub app
          example: 5
          type: integer
        client_id:
          type: string
          example: '"Iv1.25b5d1e65ffc4022"'
        client_secret:
          type: string
          example: '"1d4b2097ac622ba702d19de498f005747a8b21d3"'
        webhook_secret:
          type: string
          example: '"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"'
          nullable: true
        pem:
          type: string
          example: '"-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END RSA PRIVATE KEY-----\n"'
      required:
        - id
        - node_id
        - owner
        - name
        - description
        - external_url
        - html_url
        - created_at
        - updated_at
        - permissions
        - events
      nullable: true
    deployment-status:
      title: Deployment Status
      description: The status of a deployment.
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example/deployments/42/statuses/1
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDE2OkRlcGxveW1lbnRTdGF0dXMx
        state:
          description: The state of the status.
          enum:
            - error
            - failure
            - inactive
            - pending
            - success
            - queued
            - in_progress
          example: success
          type: string
        creator:
          $ref: '#/components/schemas/nullable-simple-user'
        description:
          description: A short description of the status.
          default: ''
          type: string
          maxLength: 140
          example: Deployment finished successfully.
        environment:
          description: The environment of the deployment that the status is for.
          default: ''
          type: string
          example: production
        target_url:
          description: 'Deprecated: the URL to associate with this status.'
          default: ''
          type: string
          format: uri
          example: https://example.com/deployment/42/output
        created_at:
          type: string
          format: date-time
          example: '2012-07-20T01:19:13Z'
        updated_at:
          type: string
          format: date-time
          example: '2012-07-20T01:19:13Z'
        deployment_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example/deployments/42
        repository_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example
        environment_url:
          description: The URL for accessing your environment.
          default: ''
          type: string
          format: uri
          example: https://staging.example.com/
        log_url:
          description: The URL to associate with this status.
          default: ''
          type: string
          format: uri
          example: https://example.com/deployment/42/output
        performed_via_github_app:
          $ref: '#/components/schemas/nullable-integration'
      required:
        - id
        - node_id
        - state
        - creator
        - description
        - deployment_url
        - target_url
        - repository_url
        - url
        - created_at
        - updated_at
    environment:
      title: Environment
      description: Details of a deployment environment
      type: object
      properties:
        id:
          description: The id of the environment.
          example: 56780428
          type: integer
        node_id:
          type: string
          example: MDExOkVudmlyb25tZW50NTY3ODA0Mjg=
        name:
          description: The name of the environment.
          example: staging
          type: string
        url:
          type: string
          example: https://api.github.com/repos/github/hello-world/environments/staging
        html_url:
          type: string
          example: https://github.com/github/hello-world/deployments/activity_log?environments_filter=staging
        created_at:
          description: The time that the environment was created, in ISO 8601 format.
          example: '2020-11-23T22:00:40Z'
          format: date-time
          type: string
        updated_at:
          description: The time that the environment was last updated, in ISO 8601 format.
          example: '2020-11-23T22:00:40Z'
          format: date-time
          type: string
        protection_rules:
          type: array
          items:
            anyOf:
              - type: object
                properties:
                  id:
                    type: integer
                    example: 3515
                  node_id:
                    type: string
                    example: MDQ6R2F0ZTM1MTU=
                  type:
                    type: string
                    example: wait_timer
                  wait_timer:
                    $ref: '#/components/schemas/wait-timer'
                required:
                  - id
                  - node_id
                  - type
              - type: object
                properties:
                  id:
                    type: integer
                    example: 3755
                  node_id:
                    type: string
                    example: MDQ6R2F0ZTM3NTU=
                  type:
                    type: string
                    example: required_reviewers
                  reviewers:
                    type: array
                    description: The people or teams that may approve jobs that reference the environment. You can list up to six users or teams as reviewers. The reviewers must have at least read access to the repository. Only one of the required reviewers needs to approve the job for it to proceed.
                    items:
                      type: object
                      properties:
                        type:
                          $ref: '#/components/schemas/deployment-reviewer-type'
                        reviewer:
                          anyOf:
                            - $ref: '#/components/schemas/simple-user'
                            - $ref: '#/components/schemas/team'
                required:
                  - id
                  - node_id
                  - type
              - type: object
                properties:
                  id:
                    type: integer
                    example: 3515
                  node_id:
                    type: string
                    example: MDQ6R2F0ZTM1MTU=
                  type:
                    type: string
                    example: branch_policy
                required:
                  - id
                  - node_id
                  - type
        deployment_branch_policy:
          $ref: '#/components/schemas/deployment_branch_policy'
      required:
        - id
        - node_id
        - name
        - url
        - html_url
        - created_at
        - updated_at
    wait-timer:
      type: integer
      example: 30
      description: The amount of time to delay a job after the job is initially triggered. The time (in minutes) must be an integer between 0 and 43,200 (30 days).
    deployment-reviewer-type:
      type: string
      description: 'The type of reviewer. Must be one of: `User` or `Team`'
      enum:
        - User
        - Team
      example: User
    deployment_branch_policy:
      type: object
      description: The type of deployment branch policy for this environment. To allow all branches to deploy, set to `null`.
      properties:
        protected_branches:
          type: boolean
          description: Whether only branches with branch protection rules can deploy to this environment. If `protected_branches` is `true`, `custom_branch_policies` must be `false`; if `protected_branches` is `false`, `custom_branch_policies` must be `true`.
        custom_branch_policies:
          type: boolean
          description: Whether only branches that match the specified name patterns can deploy to this environment.  If `custom_branch_policies` is `true`, `protected_branches` must be `false`; if `custom_branch_policies` is `false`, `protected_branches` must be `true`.
      nullable: true
      required:
        - protected_branches
        - custom_branch_policies
    hook:
      title: Webhook
      description: Webhooks for repositories.
      type: object
      properties:
        type:
          type: string
        id:
          description: Unique identifier of the webhook.
          example: 42
          type: integer
        name:
          description: The name of a valid service, use 'web' for a webhook.
          example: web
          type: string
        active:
          description: Determines whether the hook is actually triggered on pushes.
          type: boolean
          example: true
        events:
          description: 'Determines what events the hook is triggered for. Default: [''push''].'
          type: array
          items:
            type: string
          example:
            - push
            - pull_request
        config:
          type: object
          properties:
            email:
              type: string
              example: '"foo@bar.com"'
            password:
              type: string
              example: '"foo"'
            room:
              type: string
              example: '"roomer"'
            subdomain:
              type: string
              example: '"foo"'
            url:
              $ref: '#/components/schemas/webhook-config-url'
            insecure_ssl:
              $ref: '#/components/schemas/webhook-config-insecure-ssl'
            content_type:
              $ref: '#/components/schemas/webhook-config-content-type'
            digest:
              type: string
              example: '"sha256"'
            secret:
              $ref: '#/components/schemas/webhook-config-secret'
            token:
              type: string
              example: '"abc"'
        updated_at:
          type: string
          format: date-time
          example: '2011-09-06T20:39:23Z'
        created_at:
          type: string
          format: date-time
          example: '2011-09-06T17:26:27Z'
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/hooks/1
        test_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/hooks/1/test
        ping_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/hooks/1/pings
        deliveries_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/hooks/1/deliveries
        last_response:
          $ref: '#/components/schemas/hook-response'
      required:
        - id
        - url
        - type
        - name
        - active
        - events
        - config
        - ping_url
        - created_at
        - updated_at
        - last_response
        - test_url
    webhook-config-url:
      type: string
      description: The URL to which the payloads will be delivered.
      example: https://example.com/webhook
      format: uri
    webhook-config-insecure-ssl:
      oneOf:
        - type: string
          description: Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**
          example: '"0"'
        - type: number
    webhook-config-content-type:
      type: string
      description: The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.
      example: '"json"'
    webhook-config-secret:
      type: string
      description: If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/webhooks/event-payloads/#delivery-headers).
      example: '"********"'
    hook-response:
      title: Hook Response
      type: object
      properties:
        code:
          type: integer
          nullable: true
        status:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
      required:
        - code
        - status
        - message
    webhook-config:
      title: Webhook Configuration
      description: Configuration object of the webhook
      type: object
      properties:
        url:
          $ref: '#/components/schemas/webhook-config-url'
        content_type:
          $ref: '#/components/schemas/webhook-config-content-type'
        secret:
          $ref: '#/components/schemas/webhook-config-secret'
        insecure_ssl:
          $ref: '#/components/schemas/webhook-config-insecure-ssl'
    hook-delivery-item:
      title: Simple webhook delivery
      description: Delivery made by a webhook, without request and response information.
      type: object
      properties:
        id:
          description: Unique identifier of the webhook delivery.
          type: integer
          example: 42
        guid:
          description: Unique identifier for the event (shared with all deliveries for all webhooks that subscribe to this event).
          type: string
          example: 58474f00-b361-11eb-836d-0e4f3503ccbe
        delivered_at:
          description: Time when the webhook delivery occurred.
          type: string
          format: date-time
          example: '2021-05-12T20:33:44Z'
        redelivery:
          description: Whether the webhook delivery is a redelivery.
          type: boolean
          example: false
        duration:
          description: Time spent delivering.
          type: number
          example: 0.03
        status:
          description: Describes the response returned after attempting the delivery.
          type: string
          example: failed to connect
        status_code:
          description: Status code received when delivery was made.
          type: integer
          example: 502
        event:
          description: The event that triggered the delivery.
          type: string
          example: issues
        action:
          description: The type of activity for the event that triggered the delivery.
          type: string
          example: opened
          nullable: true
        installation_id:
          description: The id of the GitHub App installation associated with this event.
          type: integer
          example: 123
          nullable: true
        repository_id:
          description: The id of the repository associated with this event.
          type: integer
          example: 123
          nullable: true
      required:
        - id
        - guid
        - delivered_at
        - redelivery
        - duration
        - status
        - status_code
        - event
        - action
        - installation_id
        - repository_id
    hook-delivery:
      title: Webhook delivery
      description: Delivery made by a webhook.
      type: object
      properties:
        id:
          description: Unique identifier of the delivery.
          type: integer
          example: 42
        guid:
          description: Unique identifier for the event (shared with all deliveries for all webhooks that subscribe to this event).
          type: string
          example: 58474f00-b361-11eb-836d-0e4f3503ccbe
        delivered_at:
          description: Time when the delivery was delivered.
          type: string
          format: date-time
          example: '2021-05-12T20:33:44Z'
        redelivery:
          description: Whether the delivery is a redelivery.
          type: boolean
          example: false
        duration:
          description: Time spent delivering.
          type: number
          example: 0.03
        status:
          description: Description of the status of the attempted delivery
          type: string
          example: failed to connect
        status_code:
          description: Status code received when delivery was made.
          type: integer
          example: 502
        event:
          description: The event that triggered the delivery.
          type: string
          example: issues
        action:
          description: The type of activity for the event that triggered the delivery.
          type: string
          example: opened
          nullable: true
        installation_id:
          description: The id of the GitHub App installation associated with this event.
          type: integer
          example: 123
          nullable: true
        repository_id:
          description: The id of the repository associated with this event.
          type: integer
          example: 123
          nullable: true
        url:
          description: The URL target of the delivery.
          type: string
          example: https://www.example.com
        request:
          type: object
          properties:
            headers:
              description: The request headers sent with the webhook delivery.
              type: object
              nullable: true
              additionalProperties: true
            payload:
              description: The webhook payload.
              type: object
              nullable: true
              additionalProperties: true
          required:
            - headers
            - payload
        response:
          type: object
          properties:
            headers:
              description: The response headers received when the delivery was made.
              type: object
              nullable: true
              additionalProperties: true
            payload:
              description: The response payload received.
              type: string
              nullable: true
              additionalProperties: true
          required:
            - headers
            - payload
      required:
        - id
        - guid
        - delivered_at
        - redelivery
        - duration
        - status
        - status_code
        - event
        - action
        - installation_id
        - repository_id
        - request
        - response
    deploy-key:
      title: Deploy Key
      description: An SSH key granting access to a single repository.
      type: object
      properties:
        id:
          type: integer
        key:
          type: string
        url:
          type: string
        title:
          type: string
        verified:
          type: boolean
        created_at:
          type: string
        read_only:
          type: boolean
      required:
        - id
        - key
        - url
        - title
        - verified
        - created_at
        - read_only
    language:
      title: Language
      description: Language
      type: object
      additionalProperties:
        type: integer
    merged-upstream:
      title: Merged upstream
      description: Results of a successful merge upstream request
      type: object
      properties:
        message:
          type: string
        merge_type:
          type: string
          enum:
            - merge
            - fast-forward
            - none
        base_branch:
          type: string
    page:
      title: GitHub Pages
      description: The configuration for GitHub Pages for a repository.
      type: object
      properties:
        url:
          type: string
          description: The API address for accessing this Page resource.
          format: uri
          example: https://api.github.com/repos/github/hello-world/pages
        status:
          type: string
          description: The status of the most recent build of the Page.
          example: built
          enum:
            - built
            - building
            - errored
          nullable: true
        cname:
          description: The Pages site's custom domain
          example: example.com
          type: string
          nullable: true
        protected_domain_state:
          type: string
          description: The state if the domain is verified
          example: pending
          nullable: true
          enum:
            - pending
            - verified
            - unverified
        pending_domain_unverified_at:
          type: string
          description: The timestamp when a pending domain becomes unverified.
          nullable: true
          format: date-time
        custom_404:
          type: boolean
          description: Whether the Page has a custom 404 page.
          example: false
          default: false
        html_url:
          type: string
          description: The web address the Page can be accessed from.
          format: uri
          example: https://example.com
        source:
          $ref: '#/components/schemas/pages-source-hash'
        public:
          type: boolean
          description: Whether the GitHub Pages site is publicly visible. If set to `true`, the site is accessible to anyone on the internet. If set to `false`, the site will only be accessible to users who have at least `read` access to the repository that published the site.
          example: true
        https_certificate:
          $ref: '#/components/schemas/pages-https-certificate'
        https_enforced:
          type: boolean
          description: Whether https is enabled on the domain
          example: true
      required:
        - url
        - status
        - cname
        - custom_404
        - public
    pages-source-hash:
      title: Pages Source Hash
      type: object
      properties:
        branch:
          type: string
        path:
          type: string
      required:
        - branch
        - path
    pages-https-certificate:
      title: Pages Https Certificate
      type: object
      properties:
        state:
          type: string
          enum:
            - new
            - authorization_created
            - authorization_pending
            - authorized
            - authorization_revoked
            - issued
            - uploaded
            - approved
            - errored
            - bad_authz
            - destroy_pending
            - dns_changed
          example: approved
        description:
          type: string
          example: Certificate is approved
        domains:
          type: array
          items:
            type: string
          description: Array of the domain set and its alternate name (if it is configured)
          example:
            - example.com
            - www.example.com
        expires_at:
          type: string
          format: date
      required:
        - state
        - description
        - domains
    page-build:
      title: Page Build
      description: Page Build
      type: object
      properties:
        url:
          type: string
          format: uri
        status:
          type: string
        error:
          type: object
          properties:
            message:
              type: string
              nullable: true
          required:
            - message
        pusher:
          $ref: '#/components/schemas/nullable-simple-user'
        commit:
          type: string
        duration:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - url
        - status
        - error
        - pusher
        - commit
        - duration
        - created_at
        - updated_at
    page-build-status:
      title: Page Build Status
      description: Page Build Status
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/github/hello-world/pages/builds/latest
        status:
          type: string
          example: queued
      required:
        - url
        - status
    pages-health-check:
      title: Pages Health Check Status
      description: Pages Health Check Status
      type: object
      properties:
        domain:
          type: object
          properties:
            host:
              type: string
            uri:
              type: string
            nameservers:
              type: string
            dns_resolves:
              type: boolean
            is_proxied:
              type: boolean
              nullable: true
            is_cloudflare_ip:
              type: boolean
              nullable: true
            is_fastly_ip:
              type: boolean
              nullable: true
            is_old_ip_address:
              type: boolean
              nullable: true
            is_a_record:
              type: boolean
              nullable: true
            has_cname_record:
              type: boolean
              nullable: true
            has_mx_records_present:
              type: boolean
              nullable: true
            is_valid_domain:
              type: boolean
            is_apex_domain:
              type: boolean
            should_be_a_record:
              type: boolean
              nullable: true
            is_cname_to_github_user_domain:
              type: boolean
              nullable: true
            is_cname_to_pages_dot_github_dot_com:
              type: boolean
              nullable: true
            is_cname_to_fastly:
              type: boolean
              nullable: true
            is_pointed_to_github_pages_ip:
              type: boolean
              nullable: true
            is_non_github_pages_ip_present:
              type: boolean
              nullable: true
            is_pages_domain:
              type: boolean
            is_served_by_pages:
              type: boolean
              nullable: true
            is_valid:
              type: boolean
            reason:
              type: string
              nullable: true
            responds_to_https:
              type: boolean
            enforces_https:
              type: boolean
            https_error:
              type: string
              nullable: true
            is_https_eligible:
              type: boolean
              nullable: true
            caa_error:
              type: string
              nullable: true
        alt_domain:
          type: object
          nullable: true
          properties:
            host:
              type: string
            uri:
              type: string
            nameservers:
              type: string
            dns_resolves:
              type: boolean
            is_proxied:
              type: boolean
              nullable: true
            is_cloudflare_ip:
              type: boolean
              nullable: true
            is_fastly_ip:
              type: boolean
              nullable: true
            is_old_ip_address:
              type: boolean
              nullable: true
            is_a_record:
              type: boolean
              nullable: true
            has_cname_record:
              type: boolean
              nullable: true
            has_mx_records_present:
              type: boolean
              nullable: true
            is_valid_domain:
              type: boolean
            is_apex_domain:
              type: boolean
            should_be_a_record:
              type: boolean
              nullable: true
            is_cname_to_github_user_domain:
              type: boolean
              nullable: true
            is_cname_to_pages_dot_github_dot_com:
              type: boolean
              nullable: true
            is_cname_to_fastly:
              type: boolean
              nullable: true
            is_pointed_to_github_pages_ip:
              type: boolean
              nullable: true
            is_non_github_pages_ip_present:
              type: boolean
              nullable: true
            is_pages_domain:
              type: boolean
            is_served_by_pages:
              type: boolean
              nullable: true
            is_valid:
              type: boolean
            reason:
              type: string
              nullable: true
            responds_to_https:
              type: boolean
            enforces_https:
              type: boolean
            https_error:
              type: string
              nullable: true
            is_https_eligible:
              type: boolean
              nullable: true
            caa_error:
              type: string
              nullable: true
    empty-object:
      title: Empty Object
      description: An object without any properties.
      type: object
      properties: {}
      additionalProperties: false
    release:
      title: Release
      description: A release.
      type: object
      properties:
        url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        assets_url:
          type: string
          format: uri
        upload_url:
          type: string
        tarball_url:
          type: string
          format: uri
          nullable: true
        zipball_url:
          type: string
          format: uri
          nullable: true
        id:
          type: integer
        node_id:
          type: string
        tag_name:
          description: The name of the tag.
          example: v1.0.0
          type: string
        target_commitish:
          description: Specifies the commitish value that determines where the Git tag is created from.
          example: master
          type: string
        name:
          type: string
          nullable: true
        body:
          type: string
          nullable: true
        draft:
          description: true to create a draft (unpublished) release, false to create a published one.
          example: false
          type: boolean
        prerelease:
          description: Whether to identify the release as a prerelease or a full release.
          example: false
          type: boolean
        created_at:
          type: string
          format: date-time
        published_at:
          type: string
          format: date-time
          nullable: true
        author:
          $ref: '#/components/schemas/simple-user'
        assets:
          type: array
          items:
            $ref: '#/components/schemas/release-asset'
        body_html:
          type: string
        body_text:
          type: string
        mentions_count:
          type: integer
        discussion_url:
          description: The URL of the release discussion.
          type: string
          format: uri
        reactions:
          $ref: '#/components/schemas/reaction-rollup'
      required:
        - assets_url
        - upload_url
        - tarball_url
        - zipball_url
        - created_at
        - published_at
        - draft
        - id
        - node_id
        - author
        - html_url
        - name
        - prerelease
        - tag_name
        - target_commitish
        - assets
        - url
    release-asset:
      title: Release Asset
      description: Data related to a release.
      type: object
      properties:
        url:
          type: string
          format: uri
        browser_download_url:
          type: string
          format: uri
        id:
          type: integer
        node_id:
          type: string
        name:
          description: The file name of the asset.
          type: string
          example: Team Environment
        label:
          type: string
          nullable: true
        state:
          description: State of the release asset.
          type: string
          enum:
            - uploaded
            - open
        content_type:
          type: string
        size:
          type: integer
        download_count:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        uploader:
          $ref: '#/components/schemas/nullable-simple-user'
      required:
        - id
        - name
        - content_type
        - size
        - state
        - url
        - node_id
        - download_count
        - label
        - uploader
        - browser_download_url
        - created_at
        - updated_at
    release-notes-content:
      title: Generated Release Notes Content
      description: Generated name and body describing a release
      type: object
      properties:
        name:
          description: The generated name of the release
          type: string
          example: Release v1.0.0 is now available!
        body:
          description: The generated body describing the contents of the release supporting markdown formatting
          type: string
      required:
        - name
        - body
    code-frequency-stat:
      title: Code Frequency Stat
      description: Code Frequency Stat
      type: array
      items:
        type: integer
    commit-activity:
      title: Commit Activity
      description: Commit Activity
      type: object
      properties:
        days:
          type: array
          example:
            - 0
            - 3
            - 26
            - 20
            - 39
            - 1
            - 0
          items:
            type: integer
        total:
          type: integer
          example: 89
        week:
          type: integer
          example: 1336280400
      required:
        - days
        - total
        - week
    contributor-activity:
      title: Contributor Activity
      description: Contributor Activity
      type: object
      properties:
        author:
          $ref: '#/components/schemas/nullable-simple-user'
        total:
          type: integer
          example: 135
        weeks:
          type: array
          example:
            - w: '1367712000'
              a: 6898
              d: 77
              c: 10
          items:
            type: object
            properties:
              w:
                type: integer
              a:
                type: integer
              d:
                type: integer
              c:
                type: integer
      required:
        - author
        - total
        - weeks
    participation-stats:
      title: Participation Stats
      type: object
      properties:
        all:
          type: array
          items:
            type: integer
        owner:
          type: array
          items:
            type: integer
      required:
        - all
        - owner
    tag:
      title: Tag
      description: Tag
      type: object
      properties:
        name:
          type: string
          example: v0.1
        commit:
          type: object
          properties:
            sha:
              type: string
            url:
              type: string
              format: uri
          required:
            - sha
            - url
        zipball_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/zipball/v0.1
        tarball_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/tarball/v0.1
        node_id:
          type: string
      required:
        - name
        - node_id
        - commit
        - zipball_url
        - tarball_url
    topic:
      title: Topic
      description: A topic aggregates entities that are related to a subject.
      type: object
      properties:
        names:
          type: array
          items:
            type: string
      required:
        - names
    clone-traffic:
      title: Clone Traffic
      description: Clone Traffic
      type: object
      properties:
        count:
          type: integer
          example: 173
        uniques:
          type: integer
          example: 128
        clones:
          type: array
          items:
            $ref: '#/components/schemas/traffic'
      required:
        - uniques
        - count
        - clones
    traffic:
      title: Traffic
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        uniques:
          type: integer
        count:
          type: integer
      required:
        - timestamp
        - uniques
        - count
    content-traffic:
      title: Content Traffic
      description: Content Traffic
      type: object
      properties:
        path:
          type: string
          example: /github/hubot
        title:
          type: string
          example: 'github/hubot: A customizable life embetterment robot.'
        count:
          type: integer
          example: 3542
        uniques:
          type: integer
          example: 2225
      required:
        - path
        - title
        - uniques
        - count
    referrer-traffic:
      title: Referrer Traffic
      description: Referrer Traffic
      type: object
      properties:
        referrer:
          type: string
          example: Google
        count:
          type: integer
          example: 4
        uniques:
          type: integer
          example: 3
      required:
        - referrer
        - uniques
        - count
    view-traffic:
      title: View Traffic
      description: View Traffic
      type: object
      properties:
        count:
          type: integer
          example: 14850
        uniques:
          type: integer
          example: 3782
        views:
          type: array
          items:
            $ref: '#/components/schemas/traffic'
      required:
        - uniques
        - count
        - views
  parameters:
    org:
      name: org
      in: path
      required: true
      schema:
        type: string
    per-page:
      name: per_page
      description: Results per page (max 100)
      in: query
      schema:
        type: integer
        default: 30
    page:
      name: page
      description: Page number of the results to fetch.
      in: query
      schema:
        type: integer
        default: 1
    owner:
      name: owner
      in: path
      required: true
      schema:
        type: string
    repo:
      name: repo
      in: path
      required: true
      schema:
        type: string
    autolink-id:
      name: autolink_id
      description: autolink_id parameter
      in: path
      required: true
      schema:
        type: integer
    branch:
      name: branch
      description: The name of the branch.
      in: path
      required: true
      schema:
        type: string
      x-multi-segment: true
    username:
      name: username
      in: path
      required: true
      schema:
        type: string
    comment-id:
      name: comment_id
      description: comment_id parameter
      in: path
      required: true
      schema:
        type: integer
    since:
      name: since
      description: 'Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.'
      in: query
      required: false
      schema:
        type: string
        format: date-time
    commit-sha:
      name: commit_sha
      description: commit_sha parameter
      in: path
      required: true
      schema:
        type: string
      x-multi-segment: true
    deployment-id:
      name: deployment_id
      description: deployment_id parameter
      in: path
      required: true
      schema:
        type: integer
    environment-name:
      name: environment_name
      in: path
      required: true
      description: The name of the environment
      schema:
        type: string
    hook-id:
      name: hook_id
      in: path
      required: true
      schema:
        type: integer
    cursor:
      name: cursor
      description: 'Used for pagination: the starting delivery from which the page of deliveries is fetched. Refer to the `link` header for the next and previous page cursors.'
      in: query
      required: false
      schema:
        type: string
    delivery-id:
      name: delivery_id
      in: path
      required: true
      schema:
        type: integer
    invitation-id:
      name: invitation_id
      description: invitation_id parameter
      in: path
      required: true
      schema:
        type: integer
    key-id:
      name: key_id
      description: key_id parameter
      in: path
      required: true
      schema:
        type: integer
    asset-id:
      name: asset_id
      description: asset_id parameter
      in: path
      required: true
      schema:
        type: integer
    release-id:
      name: release_id
      description: release_id parameter
      in: path
      required: true
      schema:
        type: integer
    per:
      name: per
      description: 'Must be one of: `day`, `week`.'
      in: query
      required: false
      schema:
        type: string
        enum:
          - ''
          - day
          - week
        default: day
    since-repo:
      name: since
      description: A repository ID. Only return repositories with an ID greater than this ID.
      in: query
      required: false
      schema:
        type: integer
    before:
      name: before
      description: 'Only show notifications updated before the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.'
      in: query
      required: false
      schema:
        type: string
        format: date-time
  responses:
    forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    validation_failed:
      description: Validation failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/validation-error'
    moved_permanently:
      description: Moved permanently
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    not_found:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    temporary_redirect:
      description: Temporary Redirect
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    preview_header_missing:
      description: Preview header missing
      content:
        application/json:
          schema:
            type: object
            required:
              - message
              - documentation_url
            properties:
              message:
                type: string
              documentation_url:
                type: string
    validation_failed_simple:
      description: Validation failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/validation-error-simple'
    bad_request:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
        application/scim+json:
          schema:
            $ref: '#/components/schemas/scim-error'
    conflict:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    internal_error:
      description: Internal Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    found:
      description: Found
    service_unavailable:
      description: Service unavailable
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
              message:
                type: string
              documentation_url:
                type: string
    accepted:
      description: Accepted
      content:
        application/json:
          schema:
            type: object
    no_content:
      description: A header with no content is returned.
    not_modified:
      description: Not modified
    requires_authentication:
      description: Requires authentication
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
  securitySchemes: {}
  callbacks: {}
  examples:
    minimal-repository-items:
      value:
        - id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World.git
          mirror_url: git:git.example.com/octocat/Hello-World
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          svn_url: https://svn.github.com/octocat/Hello-World
          homepage: https://github.com
          language: null
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          size: 108
          default_branch: master
          open_issues_count: 0
          is_template: false
          topics:
            - octocat
            - atom
            - electron
            - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            admin: false
            push: false
            pull: true
          template_repository: null
    repository:
      value:
        id: 1296269
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name: Hello-World
        full_name: octocat/Hello-World
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        private: false
        html_url: https://github.com/octocat/Hello-World
        description: This your first repo!
        fork: false
        url: https://api.github.com/repos/octocat/Hello-World
        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
        events_url: https://api.github.com/repos/octocat/Hello-World/events
        forks_url: https://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url: git:github.com/octocat/Hello-World.git
        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url: https://api.github.com/repos/octocat/Hello-World/languages
        merges_url: https://api.github.com/repos/octocat/Hello-World/merges
        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url: git@github.com:octocat/Hello-World.git
        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
        tags_url: https://api.github.com/repos/octocat/Hello-World/tags
        teams_url: https://api.github.com/repos/octocat/Hello-World/teams
        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url: https://github.com/octocat/Hello-World.git
        mirror_url: git:git.example.com/octocat/Hello-World
        hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
        svn_url: https://svn.github.com/octocat/Hello-World
        homepage: https://github.com
        organization: null
        language: null
        forks: 9
        forks_count: 9
        stargazers_count: 80
        watchers_count: 80
        watchers: 80
        size: 108
        default_branch: master
        open_issues: 0
        open_issues_count: 0
        is_template: true
        license:
          key: mit
          name: MIT License
          url: https://api.github.com/licenses/mit
          spdx_id: MIT
          node_id: MDc6TGljZW5zZW1pdA==
          html_url: https://api.github.com/licenses/mit
        topics:
          - octocat
          - atom
          - electron
          - api
        has_issues: true
        has_projects: true
        has_wiki: true
        has_pages: false
        has_downloads: true
        archived: false
        disabled: false
        visibility: public
        pushed_at: '2011-01-26T19:06:43Z'
        created_at: '2011-01-26T19:01:12Z'
        updated_at: '2011-01-26T19:14:43Z'
        permissions:
          admin: false
          push: false
          pull: true
        allow_rebase_merge: true
        template_repository: null
        temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
        allow_squash_merge: true
        allow_auto_merge: false
        delete_branch_on_merge: true
        allow_merge_commit: true
        subscribers_count: 42
        network_count: 0
    full-repository-default-response:
      summary: Default response
      value:
        id: 1296269
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name: Hello-World
        full_name: octocat/Hello-World
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        private: false
        html_url: https://github.com/octocat/Hello-World
        description: This your first repo!
        fork: false
        url: https://api.github.com/repos/octocat/Hello-World
        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
        events_url: https://api.github.com/repos/octocat/Hello-World/events
        forks_url: https://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url: git:github.com/octocat/Hello-World.git
        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url: https://api.github.com/repos/octocat/Hello-World/languages
        merges_url: https://api.github.com/repos/octocat/Hello-World/merges
        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url: git@github.com:octocat/Hello-World.git
        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
        tags_url: https://api.github.com/repos/octocat/Hello-World/tags
        teams_url: https://api.github.com/repos/octocat/Hello-World/teams
        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url: https://github.com/octocat/Hello-World.git
        mirror_url: git:git.example.com/octocat/Hello-World
        hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
        svn_url: https://svn.github.com/octocat/Hello-World
        homepage: https://github.com
        language: null
        forks_count: 9
        forks: 9
        stargazers_count: 80
        watchers_count: 80
        watchers: 80
        size: 108
        default_branch: master
        open_issues_count: 0
        open_issues: 0
        is_template: false
        topics:
          - octocat
          - atom
          - electron
          - api
        has_issues: true
        has_projects: true
        has_wiki: true
        has_pages: false
        has_downloads: true
        archived: false
        disabled: false
        visibility: public
        pushed_at: '2011-01-26T19:06:43Z'
        created_at: '2011-01-26T19:01:12Z'
        updated_at: '2011-01-26T19:14:43Z'
        permissions:
          pull: true
          push: false
          admin: false
        allow_rebase_merge: true
        template_repository:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World-Template
          full_name: octocat/Hello-World-Template
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World-Template
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World-Template
          archive_url: https://api.github.com/repos/octocat/Hello-World-Template/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World-Template/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World-Template/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World-Template/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World-Template/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World-Template/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World-Template/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World-Template/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World-Template/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World-Template/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World-Template/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World-Template/events
          forks_url: https://api.github.com/repos/octocat/Hello-World-Template/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World-Template/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World-Template/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World-Template.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World-Template/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World-Template/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World-Template/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World-Template/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World-Template/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World-Template/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World-Template/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World-Template/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World-Template/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World-Template.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World-Template/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World-Template/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World-Template/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World-Template/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World-Template/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World-Template/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World-Template/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World-Template.git
          mirror_url: git:git.example.com/octocat/Hello-World-Template
          hooks_url: https://api.github.com/repos/octocat/Hello-World-Template/hooks
          svn_url: https://svn.github.com/octocat/Hello-World-Template
          homepage: https://github.com
          language: null
          forks: 9
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          watchers: 80
          size: 108
          default_branch: master
          open_issues: 0
          open_issues_count: 0
          is_template: true
          license:
            key: mit
            name: MIT License
            url: https://api.github.com/licenses/mit
            spdx_id: MIT
            node_id: MDc6TGljZW5zZW1pdA==
            html_url: https://api.github.com/licenses/mit
          topics:
            - octocat
            - atom
            - electron
            - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            admin: false
            push: false
            pull: true
          allow_rebase_merge: true
          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
          allow_squash_merge: true
          allow_auto_merge: false
          delete_branch_on_merge: true
          allow_merge_commit: true
          subscribers_count: 42
          network_count: 0
        temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
        allow_squash_merge: true
        allow_auto_merge: false
        delete_branch_on_merge: true
        allow_merge_commit: true
        subscribers_count: 42
        network_count: 0
        license:
          key: mit
          name: MIT License
          spdx_id: MIT
          url: https://api.github.com/licenses/mit
          node_id: MDc6TGljZW5zZW1pdA==
        organization:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: Organization
          site_admin: false
        parent:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World.git
          mirror_url: git:git.example.com/octocat/Hello-World
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          svn_url: https://svn.github.com/octocat/Hello-World
          homepage: https://github.com
          language: null
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          size: 108
          default_branch: master
          open_issues_count: 0
          is_template: true
          topics:
            - octocat
            - atom
            - electron
            - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            admin: false
            push: false
            pull: true
          allow_rebase_merge: true
          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
          allow_squash_merge: true
          allow_auto_merge: false
          delete_branch_on_merge: true
          allow_merge_commit: true
          subscribers_count: 42
          network_count: 0
          license:
            key: mit
            name: MIT License
            url: https://api.github.com/licenses/mit
            spdx_id: MIT
            node_id: MDc6TGljZW5zZW1pdA==
            html_url: https://api.github.com/licenses/mit
          forks: 1
          open_issues: 1
          watchers: 1
        source:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World.git
          mirror_url: git:git.example.com/octocat/Hello-World
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          svn_url: https://svn.github.com/octocat/Hello-World
          homepage: https://github.com
          language: null
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          size: 108
          default_branch: master
          open_issues_count: 0
          is_template: true
          topics:
            - octocat
            - atom
            - electron
            - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            admin: false
            push: false
            pull: true
          allow_rebase_merge: true
          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
          allow_squash_merge: true
          allow_auto_merge: false
          delete_branch_on_merge: true
          allow_merge_commit: true
          subscribers_count: 42
          network_count: 0
          license:
            key: mit
            name: MIT License
            url: https://api.github.com/licenses/mit
            spdx_id: MIT
            node_id: MDc6TGljZW5zZW1pdA==
            html_url: https://api.github.com/licenses/mit
          forks: 1
          open_issues: 1
          watchers: 1
    full-repository:
      value:
        id: 1296269
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name: Hello-World
        full_name: octocat/Hello-World
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        private: false
        html_url: https://github.com/octocat/Hello-World
        description: This your first repo!
        fork: false
        url: https://api.github.com/repos/octocat/Hello-World
        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
        events_url: https://api.github.com/repos/octocat/Hello-World/events
        forks_url: https://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url: git:github.com/octocat/Hello-World.git
        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url: https://api.github.com/repos/octocat/Hello-World/languages
        merges_url: https://api.github.com/repos/octocat/Hello-World/merges
        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url: git@github.com:octocat/Hello-World.git
        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
        tags_url: https://api.github.com/repos/octocat/Hello-World/tags
        teams_url: https://api.github.com/repos/octocat/Hello-World/teams
        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url: https://github.com/octocat/Hello-World.git
        mirror_url: git:git.example.com/octocat/Hello-World
        hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
        svn_url: https://svn.github.com/octocat/Hello-World
        homepage: https://github.com
        license:
          key: mit
          name: MIT License
          url: https://api.github.com/licenses/mit
          spdx_id: MIT
          node_id: MDc6TGljZW5zZW1pdA==
          html_url: https://github.com/licenses/mit
        language: null
        forks_count: 9
        forks: 9
        stargazers_count: 80
        watchers_count: 80
        watchers: 80
        size: 108
        default_branch: master
        open_issues_count: 0
        open_issues: 0
        is_template: false
        topics:
          - octocat
          - atom
          - electron
          - api
        has_issues: true
        has_projects: true
        has_wiki: true
        has_pages: false
        has_downloads: true
        archived: false
        disabled: false
        visibility: public
        pushed_at: '2011-01-26T19:06:43Z'
        created_at: '2011-01-26T19:01:12Z'
        updated_at: '2011-01-26T19:14:43Z'
        permissions:
          pull: true
          push: false
          admin: false
        allow_rebase_merge: true
        template_repository:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World-Template
          full_name: octocat/Hello-World-Template
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World-Template
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World-Template
          archive_url: https://api.github.com/repos/octocat/Hello-World-Template/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World-Template/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World-Template/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World-Template/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World-Template/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World-Template/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World-Template/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World-Template/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World-Template/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World-Template/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World-Template/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World-Template/events
          forks_url: https://api.github.com/repos/octocat/Hello-World-Template/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World-Template/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World-Template/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World-Template.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World-Template/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World-Template/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World-Template/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World-Template/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World-Template/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World-Template/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World-Template/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World-Template/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World-Template/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World-Template.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World-Template/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World-Template/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World-Template/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World-Template/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World-Template/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World-Template/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World-Template/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World-Template.git
          mirror_url: git:git.example.com/octocat/Hello-World-Template
          hooks_url: https://api.github.com/repos/octocat/Hello-World-Template/hooks
          svn_url: https://svn.github.com/octocat/Hello-World-Template
          homepage: https://github.com
          language: null
          forks: 9
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          watchers: 80
          size: 108
          default_branch: master
          open_issues: 0
          open_issues_count: 0
          is_template: true
          license:
            key: mit
            name: MIT License
            url: https://api.github.com/licenses/mit
            spdx_id: MIT
            node_id: MDc6TGljZW5zZW1pdA==
            html_url: https://api.github.com/licenses/mit
          topics:
            - octocat
            - atom
            - electron
            - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            admin: false
            push: false
            pull: true
          allow_rebase_merge: true
          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
          allow_squash_merge: true
          allow_auto_merge: false
          delete_branch_on_merge: true
          allow_merge_commit: true
          subscribers_count: 42
          network_count: 0
        temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
        allow_squash_merge: true
        allow_auto_merge: false
        delete_branch_on_merge: true
        allow_merge_commit: true
        allow_forking: true
        subscribers_count: 42
        network_count: 0
        organization:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: Organization
          site_admin: false
        parent:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World.git
          mirror_url: git:git.example.com/octocat/Hello-World
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          svn_url: https://svn.github.com/octocat/Hello-World
          homepage: https://github.com
          language: null
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          size: 108
          default_branch: master
          open_issues_count: 0
          is_template: true
          topics:
            - octocat
            - atom
            - electron
            - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            admin: false
            push: false
            pull: true
          allow_rebase_merge: true
          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
          allow_squash_merge: true
          allow_auto_merge: false
          delete_branch_on_merge: true
          allow_merge_commit: true
          subscribers_count: 42
          network_count: 0
          license:
            key: mit
            name: MIT License
            url: https://api.github.com/licenses/mit
            spdx_id: MIT
            node_id: MDc6TGljZW5zZW1pdA==
            html_url: https://api.github.com/licenses/mit
          forks: 1
          open_issues: 1
          watchers: 1
        source:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World.git
          mirror_url: git:git.example.com/octocat/Hello-World
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          svn_url: https://svn.github.com/octocat/Hello-World
          homepage: https://github.com
          language: null
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          size: 108
          default_branch: master
          open_issues_count: 0
          is_template: true
          topics:
            - octocat
            - atom
            - electron
            - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            admin: false
            push: false
            pull: true
          allow_rebase_merge: true
          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
          allow_squash_merge: true
          allow_auto_merge: false
          delete_branch_on_merge: true
          allow_merge_commit: true
          subscribers_count: 42
          network_count: 0
          license:
            key: mit
            name: MIT License
            url: https://api.github.com/licenses/mit
            spdx_id: MIT
            node_id: MDc6TGljZW5zZW1pdA==
            html_url: https://api.github.com/licenses/mit
          forks: 1
          open_issues: 1
          watchers: 1
    autolink-items:
      value:
        - id: 1
          key_prefix: TICKET-
          url_template: https://example.com/TICKET?query=<num>
    autolink:
      value:
        id: 1
        key_prefix: TICKET-
        url_template: https://example.com/TICKET?query=<num>
    short-branch-with-protection-items:
      value:
        - name: master
          commit:
            sha: c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc
            url: https://api.github.com/repos/octocat/Hello-World/commits/c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc
          protected: true
          protection:
            required_status_checks:
              enforcement_level: non_admins
              contexts:
                - ci-test
                - linter
          protection_url: https://api.github.com/repos/octocat/hello-world/branches/master/protection
    branch-protection:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection
        required_status_checks:
          url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks
          contexts:
            - continuous-integration/travis-ci
          contexts_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks/contexts
          enforcement_level: non_admins
        enforce_admins:
          url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/enforce_admins
          enabled: true
        required_pull_request_reviews:
          url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_pull_request_reviews
          dismissal_restrictions:
            url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions
            users_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/users
            teams_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/teams
            users:
              - login: octocat
                id: 1
                node_id: MDQ6VXNlcjE=
                avatar_url: https://github.com/images/error/octocat_happy.gif
                gravatar_id: ''
                url: https://api.github.com/users/octocat
                html_url: https://github.com/octocat
                followers_url: https://api.github.com/users/octocat/followers
                following_url: https://api.github.com/users/octocat/following{/other_user}
                gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                subscriptions_url: https://api.github.com/users/octocat/subscriptions
                organizations_url: https://api.github.com/users/octocat/orgs
                repos_url: https://api.github.com/users/octocat/repos
                events_url: https://api.github.com/users/octocat/events{/privacy}
                received_events_url: https://api.github.com/users/octocat/received_events
                type: User
                site_admin: false
            teams:
              - id: 1
                node_id: MDQ6VGVhbTE=
                url: https://api.github.com/teams/1
                html_url: https://github.com/orgs/github/teams/justice-league
                name: Justice League
                slug: justice-league
                description: A great team.
                privacy: closed
                permission: admin
                members_url: https://api.github.com/teams/1/members{/member}
                repositories_url: https://api.github.com/teams/1/repos
                parent: null
          dismiss_stale_reviews: true
          require_code_owner_reviews: true
          required_approving_review_count: 2
        restrictions:
          url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions
          users_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/users
          teams_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/teams
          apps_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/teams
          users:
            - login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
          teams:
            - id: 1
              node_id: MDQ6VGVhbTE=
              url: https://api.github.com/teams/1
              html_url: https://github.com/orgs/github/teams/justice-league
              name: Justice League
              slug: justice-league
              description: A great team.
              privacy: closed
              permission: admin
              members_url: https://api.github.com/teams/1/members{/member}
              repositories_url: https://api.github.com/teams/1/repos
              parent: null
          apps:
            - id: 1
              slug: octoapp
              node_id: MDExOkludGVncmF0aW9uMQ==
              owner:
                login: github
                id: 1
                node_id: MDEyOk9yZ2FuaXphdGlvbjE=
                url: https://api.github.com/orgs/github
                repos_url: https://api.github.com/orgs/github/repos
                events_url: https://api.github.com/orgs/github/events
                hooks_url: https://api.github.com/orgs/github/hooks
                issues_url: https://api.github.com/orgs/github/issues
                members_url: https://api.github.com/orgs/github/members{/member}
                public_members_url: https://api.github.com/orgs/github/public_members{/member}
                avatar_url: https://github.com/images/error/octocat_happy.gif
                description: A great organization
              name: Octocat App
              description: ''
              external_url: https://example.com
              html_url: https://github.com/apps/octoapp
              created_at: '2017-07-08T16:18:44-04:00'
              updated_at: '2017-07-08T16:18:44-04:00'
              permissions:
                metadata: read
                contents: read
                issues: write
                single_file: write
              events:
                - push
                - pull_request
        required_linear_history:
          enabled: true
        allow_force_pushes:
          enabled: true
        allow_deletions:
          enabled: true
        required_conversation_resolution:
          enabled: true
    protected-branch-admin-enforced-2:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/enforce_admins
        enabled: true
    protected-branch-pull-request-review:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_pull_request_reviews
        dismissal_restrictions:
          url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions
          users_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/users
          teams_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/teams
          users:
            - login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
          teams:
            - id: 1
              node_id: MDQ6VGVhbTE=
              url: https://api.github.com/teams/1
              html_url: https://github.com/orgs/github/teams/justice-league
              name: Justice League
              slug: justice-league
              description: A great team.
              privacy: closed
              permission: admin
              members_url: https://api.github.com/teams/1/members{/member}
              repositories_url: https://api.github.com/teams/1/repos
              parent: null
        dismiss_stale_reviews: true
        require_code_owner_reviews: true
        required_approving_review_count: 2
    protected-branch-admin-enforced:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_signatures
        enabled: true
    status-check-policy:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks
        strict: true
        contexts:
          - continuous-integration/travis-ci
        contexts_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks/contexts
    branch-restriction-policy:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions
        users_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/users
        teams_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/teams
        apps_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/teams
        users:
          - login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
        teams:
          - id: 1
            node_id: MDQ6VGVhbTE=
            url: https://api.github.com/teams/1
            html_url: https://github.com/orgs/github/teams/justice-league
            name: Justice League
            slug: justice-league
            description: A great team.
            privacy: closed
            permission: admin
            members_url: https://api.github.com/teams/1/members{/member}
            repositories_url: https://api.github.com/teams/1/repos
            parent: null
        apps:
          - id: 1
            slug: octoapp
            node_id: MDExOkludGVncmF0aW9uMQ==
            owner:
              login: github
              id: 1
              node_id: MDEyOk9yZ2FuaXphdGlvbjE=
              url: https://api.github.com/orgs/github
              repos_url: https://api.github.com/orgs/github/repos
              events_url: https://api.github.com/orgs/github/events
              hooks_url: https://api.github.com/orgs/github/hooks
              issues_url: https://api.github.com/orgs/github/issues
              members_url: https://api.github.com/orgs/github/members{/member}
              public_members_url: https://api.github.com/orgs/github/public_members{/member}
              avatar_url: https://github.com/images/error/octocat_happy.gif
              description: A great organization
            name: Octocat App
            description: ''
            external_url: https://example.com
            html_url: https://github.com/apps/octoapp
            created_at: '2017-07-08T16:18:44-04:00'
            updated_at: '2017-07-08T16:18:44-04:00'
            permissions:
              metadata: read
              contents: read
              issues: write
              single_file: write
            events:
              - push
              - pull_request
    integration-items:
      value:
        - id: 1
          slug: octoapp
          node_id: MDExOkludGVncmF0aW9uMQ==
          owner:
            login: github
            id: 1
            node_id: MDEyOk9yZ2FuaXphdGlvbjE=
            url: https://api.github.com/orgs/github
            repos_url: https://api.github.com/orgs/github/repos
            events_url: https://api.github.com/orgs/github/events
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: true
          name: Octocat App
          description: ''
          external_url: https://example.com
          html_url: https://github.com/apps/octoapp
          created_at: '2017-07-08T16:18:44-04:00'
          updated_at: '2017-07-08T16:18:44-04:00'
          permissions:
            metadata: read
            contents: read
            issues: write
            single_file: write
          events:
            - push
            - pull_request
    team-items:
      value:
        - id: 1
          node_id: MDQ6VGVhbTE=
          url: https://api.github.com/teams/1
          html_url: https://github.com/orgs/github/teams/justice-league
          name: Justice League
          slug: justice-league
          description: A great team.
          privacy: closed
          permission: admin
          members_url: https://api.github.com/teams/1/members{/member}
          repositories_url: https://api.github.com/teams/1/repos
          parent: null
    simple-user-items:
      value:
        - login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    branch-with-protection:
      value:
        name: master
        commit:
          sha: 7fd1a60b01f91b314f59955a4e4d4e80d8edf11d
          node_id: MDY6Q29tbWl0N2ZkMWE2MGIwMWY5MWIzMTRmNTk5NTVhNGU0ZDRlODBkOGVkZjExZA==
          commit:
            author:
              name: The Octocat
              date: '2012-03-06T15:06:50-08:00'
              email: octocat@nowhere.com
            url: https://api.github.com/repos/octocat/Hello-World/git/commits/7fd1a60b01f91b314f59955a4e4d4e80d8edf11d
            message: |-
              Merge pull request #6 from Spaceghost/patch-1

              New line at end of file.
            tree:
              sha: b4eecafa9be2f2006ce1b709d6857b07069b4608
              url: https://api.github.com/repos/octocat/Hello-World/git/trees/b4eecafa9be2f2006ce1b709d6857b07069b4608
            committer:
              name: The Octocat
              date: '2012-03-06T15:06:50-08:00'
              email: octocat@nowhere.com
            verification:
              verified: false
              reason: unsigned
              signature: null
              payload: null
            comment_count: 0
          author:
            gravatar_id: ''
            avatar_url: https://secure.gravatar.com/avatar/7ad39074b0584bc555d0417ae3e7d974?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png
            url: https://api.github.com/users/octocat
            id: 583231
            login: octocat
            node_id: MDQ6VXNlcjE=
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: true
          parents:
            - sha: 553c2077f0edc3d5dc5d17262f6aa498e69d6f8e
              url: https://api.github.com/repos/octocat/Hello-World/commits/553c2077f0edc3d5dc5d17262f6aa498e69d6f8e
            - sha: 762941318ee16e59dabbacb1b4049eec22f0d303
              url: https://api.github.com/repos/octocat/Hello-World/commits/762941318ee16e59dabbacb1b4049eec22f0d303
          url: https://api.github.com/repos/octocat/Hello-World/commits/7fd1a60b01f91b314f59955a4e4d4e80d8edf11d
          committer:
            gravatar_id: ''
            avatar_url: https://secure.gravatar.com/avatar/7ad39074b0584bc555d0417ae3e7d974?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png
            url: https://api.github.com/users/octocat
            id: 583231
            login: octocat
            node_id: MDQ6VXNlcjE=
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: true
          html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e
          comments_url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments
        _links:
          html: https://github.com/octocat/Hello-World/tree/master
          self: https://api.github.com/repos/octocat/Hello-World/branches/master
        protected: true
        protection:
          required_status_checks:
            enforcement_level: non_admins
            contexts:
              - ci-test
              - linter
        protection_url: https://api.github.com/repos/octocat/hello-world/branches/master/protection
    codeowners-errors:
      value:
        errors:
          - line: 3
            column: 1
            kind: Invalid pattern
            source: '***/*.rb @monalisa'
            suggestion: Did you mean `**/*.rb`?
            message: |-
              Invalid pattern on line 3: Did you mean `**/*.rb`?

                ***/*.rb @monalisa
                ^
            path: .github/CODEOWNERS
          - line: 7
            column: 7
            kind: Invalid owner
            source: '*.txt docs@'
            suggestion: null
            message: |-
              Invalid owner on line 7:

                *.txt docs@
                      ^
            path: .github/CODEOWNERS
    collaborator-items:
      value:
        - login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
          permissions:
            pull: true
            triage: true
            push: true
            maintain: false
            admin: false
          role_name: write
    repository-invitation-response-when-a-new-invitation-is-created:
      value:
        id: 1
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        repository:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
        invitee:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        inviter:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        permissions: write
        created_at: '2016-06-13T14:52:50-05:00'
        url: https://api.github.com/user/repository_invitations/1296269
        html_url: https://github.com/octocat/Hello-World/invitations
    repository-collaborator-permission-response-if-user-has-admin-permissions:
      value:
        permission: admin
        role_name: admin
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    commit-comment-items:
      value:
        - html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e#commitcomment-1
          url: https://api.github.com/repos/octocat/Hello-World/comments/1
          id: 1
          node_id: MDEzOkNvbW1pdENvbW1lbnQx
          body: Great stuff
          path: file1.txt
          position: 4
          line: 14
          commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          user:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          created_at: '2011-04-14T16:00:49Z'
          updated_at: '2011-04-14T16:00:49Z'
          author_association: COLLABORATOR
    commit-comment:
      value:
        html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e#commitcomment-1
        url: https://api.github.com/repos/octocat/Hello-World/comments/1
        id: 1
        node_id: MDEzOkNvbW1pdENvbW1lbnQx
        body: Great stuff
        path: file1.txt
        position: 4
        line: 14
        commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        author_association: COLLABORATOR
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2011-04-14T16:00:49Z'
        updated_at: '2011-04-14T16:00:49Z'
    commit-comment-2:
      value:
        html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e#commitcomment-1
        url: https://api.github.com/repos/octocat/Hello-World/comments/1
        id: 1
        node_id: MDEzOkNvbW1pdENvbW1lbnQx
        body: Nice change
        path: file1.txt
        position: 4
        line: 14
        commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        author_association: COLLABORATOR
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2011-04-14T16:00:49Z'
        updated_at: '2011-04-14T16:00:49Z'
    commit-items:
      value:
        - url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          node_id: MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==
          html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e
          comments_url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments
          commit:
            url: https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
            author:
              name: Monalisa Octocat
              email: support@github.com
              date: '2011-04-14T16:00:49Z'
            committer:
              name: Monalisa Octocat
              email: support@github.com
              date: '2011-04-14T16:00:49Z'
            message: Fix all the bugs
            tree:
              url: https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e
              sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
            comment_count: 0
            verification:
              verified: false
              reason: unsigned
              signature: null
              payload: null
          author:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          committer:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          parents:
            - url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
              sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
    branch-short-items:
      value:
        - name: branch_5
          commit:
            sha: c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc
            url: https://api.github.com/repos/octocat/Hello-World/commits/c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc
          protected: false
    pull-request-simple-items:
      value:
        - url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
          id: 1
          node_id: MDExOlB1bGxSZXF1ZXN0MQ==
          html_url: https://github.com/octocat/Hello-World/pull/1347
          diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
          patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
          issue_url: https://api.github.com/repos/octocat/Hello-World/issues/1347
          commits_url: https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
          review_comments_url: https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
          review_comment_url: https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
          comments_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
          number: 1347
          state: open
          locked: true
          title: Amazing new feature
          user:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          body: Please pull these awesome changes in!
          labels:
            - id: 208045946
              node_id: MDU6TGFiZWwyMDgwNDU5NDY=
              url: https://api.github.com/repos/octocat/Hello-World/labels/bug
              name: bug
              description: Something isn't working
              color: f29513
              default: true
          milestone:
            url: https://api.github.com/repos/octocat/Hello-World/milestones/1
            html_url: https://github.com/octocat/Hello-World/milestones/v1.0
            labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
            id: 1002604
            node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
            number: 1
            state: open
            title: v1.0
            description: Tracking milestone for version 1.0
            creator:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            open_issues: 4
            closed_issues: 8
            created_at: '2011-04-10T20:09:31Z'
            updated_at: '2014-03-03T18:58:10Z'
            closed_at: '2013-02-12T13:22:01Z'
            due_on: '2012-10-09T23:39:01Z'
          active_lock_reason: too heated
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:01:12Z'
          closed_at: '2011-01-26T19:01:12Z'
          merged_at: '2011-01-26T19:01:12Z'
          merge_commit_sha: e5bd3914e2e596debea16f433f57875b5b90bcd6
          assignee:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          assignees:
            - login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            - login: hubot
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/hubot_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/hubot
              html_url: https://github.com/hubot
              followers_url: https://api.github.com/users/hubot/followers
              following_url: https://api.github.com/users/hubot/following{/other_user}
              gists_url: https://api.github.com/users/hubot/gists{/gist_id}
              starred_url: https://api.github.com/users/hubot/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/hubot/subscriptions
              organizations_url: https://api.github.com/users/hubot/orgs
              repos_url: https://api.github.com/users/hubot/repos
              events_url: https://api.github.com/users/hubot/events{/privacy}
              received_events_url: https://api.github.com/users/hubot/received_events
              type: User
              site_admin: true
          requested_reviewers:
            - login: other_user
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/other_user_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/other_user
              html_url: https://github.com/other_user
              followers_url: https://api.github.com/users/other_user/followers
              following_url: https://api.github.com/users/other_user/following{/other_user}
              gists_url: https://api.github.com/users/other_user/gists{/gist_id}
              starred_url: https://api.github.com/users/other_user/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/other_user/subscriptions
              organizations_url: https://api.github.com/users/other_user/orgs
              repos_url: https://api.github.com/users/other_user/repos
              events_url: https://api.github.com/users/other_user/events{/privacy}
              received_events_url: https://api.github.com/users/other_user/received_events
              type: User
              site_admin: false
          requested_teams:
            - id: 1
              node_id: MDQ6VGVhbTE=
              url: https://api.github.com/teams/1
              html_url: https://github.com/orgs/github/teams/justice-league
              name: Justice League
              slug: justice-league
              description: A great team.
              privacy: closed
              permission: admin
              members_url: https://api.github.com/teams/1/members{/member}
              repositories_url: https://api.github.com/teams/1/repos
              parent: null
          head:
            label: octocat:new-topic
            ref: new-topic
            sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
            user:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            repo:
              id: 1296269
              node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
              name: Hello-World
              full_name: octocat/Hello-World
              owner:
                login: octocat
                id: 1
                node_id: MDQ6VXNlcjE=
                avatar_url: https://github.com/images/error/octocat_happy.gif
                gravatar_id: ''
                url: https://api.github.com/users/octocat
                html_url: https://github.com/octocat
                followers_url: https://api.github.com/users/octocat/followers
                following_url: https://api.github.com/users/octocat/following{/other_user}
                gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                subscriptions_url: https://api.github.com/users/octocat/subscriptions
                organizations_url: https://api.github.com/users/octocat/orgs
                repos_url: https://api.github.com/users/octocat/repos
                events_url: https://api.github.com/users/octocat/events{/privacy}
                received_events_url: https://api.github.com/users/octocat/received_events
                type: User
                site_admin: false
              private: false
              html_url: https://github.com/octocat/Hello-World
              description: This your first repo!
              fork: false
              url: https://api.github.com/repos/octocat/Hello-World
              archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
              assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
              blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
              branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
              collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
              comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
              commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
              compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
              contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
              contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
              deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
              downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
              events_url: https://api.github.com/repos/octocat/Hello-World/events
              forks_url: https://api.github.com/repos/octocat/Hello-World/forks
              git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
              git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
              git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
              git_url: git:github.com/octocat/Hello-World.git
              issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
              issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
              issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
              keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
              labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
              languages_url: https://api.github.com/repos/octocat/Hello-World/languages
              merges_url: https://api.github.com/repos/octocat/Hello-World/merges
              milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
              notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
              pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
              releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
              ssh_url: git@github.com:octocat/Hello-World.git
              stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
              statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
              subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
              subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
              tags_url: https://api.github.com/repos/octocat/Hello-World/tags
              teams_url: https://api.github.com/repos/octocat/Hello-World/teams
              trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
              clone_url: https://github.com/octocat/Hello-World.git
              mirror_url: git:git.example.com/octocat/Hello-World
              hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
              svn_url: https://svn.github.com/octocat/Hello-World
              homepage: https://github.com
              language: null
              forks_count: 9
              stargazers_count: 80
              watchers_count: 80
              size: 108
              default_branch: master
              open_issues_count: 0
              is_template: true
              topics:
                - octocat
                - atom
                - electron
                - api
              has_issues: true
              has_projects: true
              has_wiki: true
              has_pages: false
              has_downloads: true
              archived: false
              disabled: false
              visibility: public
              pushed_at: '2011-01-26T19:06:43Z'
              created_at: '2011-01-26T19:01:12Z'
              updated_at: '2011-01-26T19:14:43Z'
              permissions:
                admin: false
                push: false
                pull: true
              allow_rebase_merge: true
              template_repository: null
              temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
              allow_squash_merge: true
              allow_auto_merge: false
              delete_branch_on_merge: true
              allow_merge_commit: true
              subscribers_count: 42
              network_count: 0
              license:
                key: mit
                name: MIT License
                url: https://api.github.com/licenses/mit
                spdx_id: MIT
                node_id: MDc6TGljZW5zZW1pdA==
                html_url: https://github.com/licenses/mit
              forks: 1
              open_issues: 1
              watchers: 1
          base:
            label: octocat:master
            ref: master
            sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
            user:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            repo:
              id: 1296269
              node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
              name: Hello-World
              full_name: octocat/Hello-World
              owner:
                login: octocat
                id: 1
                node_id: MDQ6VXNlcjE=
                avatar_url: https://github.com/images/error/octocat_happy.gif
                gravatar_id: ''
                url: https://api.github.com/users/octocat
                html_url: https://github.com/octocat
                followers_url: https://api.github.com/users/octocat/followers
                following_url: https://api.github.com/users/octocat/following{/other_user}
                gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                subscriptions_url: https://api.github.com/users/octocat/subscriptions
                organizations_url: https://api.github.com/users/octocat/orgs
                repos_url: https://api.github.com/users/octocat/repos
                events_url: https://api.github.com/users/octocat/events{/privacy}
                received_events_url: https://api.github.com/users/octocat/received_events
                type: User
                site_admin: false
              private: false
              html_url: https://github.com/octocat/Hello-World
              description: This your first repo!
              fork: false
              url: https://api.github.com/repos/octocat/Hello-World
              archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
              assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
              blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
              branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
              collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
              comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
              commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
              compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
              contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
              contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
              deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
              downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
              events_url: https://api.github.com/repos/octocat/Hello-World/events
              forks_url: https://api.github.com/repos/octocat/Hello-World/forks
              git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
              git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
              git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
              git_url: git:github.com/octocat/Hello-World.git
              issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
              issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
              issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
              keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
              labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
              languages_url: https://api.github.com/repos/octocat/Hello-World/languages
              merges_url: https://api.github.com/repos/octocat/Hello-World/merges
              milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
              notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
              pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
              releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
              ssh_url: git@github.com:octocat/Hello-World.git
              stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
              statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
              subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
              subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
              tags_url: https://api.github.com/repos/octocat/Hello-World/tags
              teams_url: https://api.github.com/repos/octocat/Hello-World/teams
              trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
              clone_url: https://github.com/octocat/Hello-World.git
              mirror_url: git:git.example.com/octocat/Hello-World
              hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
              svn_url: https://svn.github.com/octocat/Hello-World
              homepage: https://github.com
              language: null
              forks_count: 9
              stargazers_count: 80
              watchers_count: 80
              size: 108
              default_branch: master
              open_issues_count: 0
              is_template: true
              topics:
                - octocat
                - atom
                - electron
                - api
              has_issues: true
              has_projects: true
              has_wiki: true
              has_pages: false
              has_downloads: true
              archived: false
              disabled: false
              visibility: public
              pushed_at: '2011-01-26T19:06:43Z'
              created_at: '2011-01-26T19:01:12Z'
              updated_at: '2011-01-26T19:14:43Z'
              permissions:
                admin: false
                push: false
                pull: true
              allow_rebase_merge: true
              template_repository: null
              temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
              allow_squash_merge: true
              allow_auto_merge: false
              delete_branch_on_merge: true
              allow_merge_commit: true
              subscribers_count: 42
              network_count: 0
              license:
                key: mit
                name: MIT License
                url: https://api.github.com/licenses/mit
                spdx_id: MIT
                node_id: MDc6TGljZW5zZW1pdA==
                html_url: https://github.com/licenses/mit
              forks: 1
              open_issues: 1
              watchers: 1
          _links:
            self:
              href: https://api.github.com/repos/octocat/Hello-World/pulls/1347
            html:
              href: https://github.com/octocat/Hello-World/pull/1347
            issue:
              href: https://api.github.com/repos/octocat/Hello-World/issues/1347
            comments:
              href: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
            review_comments:
              href: https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
            review_comment:
              href: https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
            commits:
              href: https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
            statuses:
              href: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
          author_association: OWNER
          auto_merge: null
          draft: false
    commit:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
        sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        node_id: MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==
        html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e
        comments_url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments
        commit:
          url: https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
          author:
            name: Monalisa Octocat
            email: mona@github.com
            date: '2011-04-14T16:00:49Z'
          committer:
            name: Monalisa Octocat
            email: mona@github.com
            date: '2011-04-14T16:00:49Z'
          message: Fix all the bugs
          tree:
            url: https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e
            sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          comment_count: 0
          verification:
            verified: false
            reason: unsigned
            signature: null
            payload: null
        author:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        committer:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        parents:
          - url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
            sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        stats:
          additions: 104
          deletions: 4
          total: 108
        files:
          - filename: file1.txt
            additions: 10
            deletions: 2
            changes: 12
            status: modified
            raw_url: https://github.com/octocat/Hello-World/raw/7ca483543807a51b6079e54ac4cc392bc29ae284/file1.txt
            blob_url: https://github.com/octocat/Hello-World/blob/7ca483543807a51b6079e54ac4cc392bc29ae284/file1.txt
            patch: |-
              @@ -29,7 +29,7 @@
              .....
    combined-commit-status:
      value:
        state: success
        statuses:
          - url: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
            avatar_url: https://github.com/images/error/hubot_happy.gif
            id: 1
            node_id: MDY6U3RhdHVzMQ==
            state: success
            description: Build has completed successfully
            target_url: https://ci.example.com/1000/output
            context: continuous-integration/jenkins
            created_at: '2012-07-20T01:19:13Z'
            updated_at: '2012-07-20T01:19:13Z'
          - url: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
            avatar_url: https://github.com/images/error/other_user_happy.gif
            id: 2
            node_id: MDY6U3RhdHVzMg==
            state: success
            description: Testing has completed successfully
            target_url: https://ci.example.com/2000/output
            context: security/brakeman
            created_at: '2012-08-20T01:19:13Z'
            updated_at: '2012-08-20T01:19:13Z'
        sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        total_count: 2
        repository:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
        commit_url: https://api.github.com/repos/octocat/Hello-World/6dcb09b5b57875f334f61aebed695e2e4193db5e
        url: https://api.github.com/repos/octocat/Hello-World/6dcb09b5b57875f334f61aebed695e2e4193db5e/status
    status-items:
      value:
        - url: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
          avatar_url: https://github.com/images/error/hubot_happy.gif
          id: 1
          node_id: MDY6U3RhdHVzMQ==
          state: success
          description: Build has completed successfully
          target_url: https://ci.example.com/1000/output
          context: continuous-integration/jenkins
          created_at: '2012-07-20T01:19:13Z'
          updated_at: '2012-07-20T01:19:13Z'
          creator:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
    community-profile:
      value:
        health_percentage: 100
        description: My first repository on GitHub!
        documentation: null
        files:
          code_of_conduct:
            name: Contributor Covenant
            key: contributor_covenant
            url: https://api.github.com/codes_of_conduct/contributor_covenant
            html_url: https://github.com/octocat/Hello-World/blob/master/CODE_OF_CONDUCT.md
          code_of_conduct_file:
            url: https://api.github.com/repos/octocat/Hello-World/contents/CODE_OF_CONDUCT.md
            html_url: https://github.com/octocat/Hello-World/blob/master/CODE_OF_CONDUCT.md
          contributing:
            url: https://api.github.com/repos/octocat/Hello-World/contents/CONTRIBUTING
            html_url: https://github.com/octocat/Hello-World/blob/master/CONTRIBUTING
          issue_template:
            url: https://api.github.com/repos/octocat/Hello-World/contents/ISSUE_TEMPLATE
            html_url: https://github.com/octocat/Hello-World/blob/master/ISSUE_TEMPLATE
          pull_request_template:
            url: https://api.github.com/repos/octocat/Hello-World/contents/PULL_REQUEST_TEMPLATE
            html_url: https://github.com/octocat/Hello-World/blob/master/PULL_REQUEST_TEMPLATE
          license:
            name: MIT License
            key: mit
            spdx_id: MIT
            url: https://api.github.com/licenses/mit
            html_url: https://github.com/octocat/Hello-World/blob/master/LICENSE
            node_id: MDc6TGljZW5zZW1pdA==
          readme:
            url: https://api.github.com/repos/octocat/Hello-World/contents/README.md
            html_url: https://github.com/octocat/Hello-World/blob/master/README.md
        updated_at: '2017-02-28T19:09:29Z'
        content_reports_enabled: true
    commit-comparison:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/compare/master...topic
        html_url: https://github.com/octocat/Hello-World/compare/master...topic
        permalink_url: https://github.com/octocat/Hello-World/compare/octocat:bbcd538c8e72b8c175046e27cc8f907076331401...octocat:0328041d1152db8ae77652d1618a02e57f745f17
        diff_url: https://github.com/octocat/Hello-World/compare/master...topic.diff
        patch_url: https://github.com/octocat/Hello-World/compare/master...topic.patch
        base_commit:
          url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          node_id: MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==
          html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e
          comments_url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments
          commit:
            url: https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
            author:
              name: Monalisa Octocat
              email: mona@github.com
              date: '2011-04-14T16:00:49Z'
            committer:
              name: Monalisa Octocat
              email: mona@github.com
              date: '2011-04-14T16:00:49Z'
            message: Fix all the bugs
            tree:
              url: https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e
              sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
            comment_count: 0
            verification:
              verified: false
              reason: unsigned
              signature: null
              payload: null
          author:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          committer:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          parents:
            - url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
              sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        merge_base_commit:
          url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          node_id: MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==
          html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e
          comments_url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments
          commit:
            url: https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
            author:
              name: Monalisa Octocat
              email: mona@github.com
              date: '2011-04-14T16:00:49Z'
            committer:
              name: Monalisa Octocat
              email: mona@github.com
              date: '2011-04-14T16:00:49Z'
            message: Fix all the bugs
            tree:
              url: https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e
              sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
            comment_count: 0
            verification:
              verified: false
              reason: unsigned
              signature: null
              payload: null
          author:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          committer:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          parents:
            - url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
              sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        status: behind
        ahead_by: 1
        behind_by: 2
        total_commits: 1
        commits:
          - url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
            sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
            node_id: MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==
            html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e
            comments_url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments
            commit:
              url: https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
              author:
                name: Monalisa Octocat
                email: mona@github.com
                date: '2011-04-14T16:00:49Z'
              committer:
                name: Monalisa Octocat
                email: mona@github.com
                date: '2011-04-14T16:00:49Z'
              message: Fix all the bugs
              tree:
                url: https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e
                sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
              comment_count: 0
              verification:
                verified: false
                reason: unsigned
                signature: null
                payload: null
            author:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            committer:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            parents:
              - url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
                sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        files:
          - sha: bbcd538c8e72b8c175046e27cc8f907076331401
            filename: file1.txt
            status: added
            additions: 103
            deletions: 21
            changes: 124
            blob_url: https://github.com/octocat/Hello-World/blob/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt
            raw_url: https://github.com/octocat/Hello-World/raw/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/file1.txt?ref=6dcb09b5b57875f334f61aebed695e2e4193db5e
            patch: '@@ -132,7 +132,7 @@ module Test @@ -1000,7 +1000,7 @@ module Test'
    content-file-response-if-content-is-a-file:
      summary: Response if content is a file
      value:
        type: file
        encoding: base64
        size: 5362
        name: README.md
        path: README.md
        content: encoded content ...
        sha: 3d21ec53a331a6f037a91c368710b99387d012c1
        url: https://api.github.com/repos/octokit/octokit.rb/contents/README.md
        git_url: https://api.github.com/repos/octokit/octokit.rb/git/blobs/3d21ec53a331a6f037a91c368710b99387d012c1
        html_url: https://github.com/octokit/octokit.rb/blob/master/README.md
        download_url: https://raw.githubusercontent.com/octokit/octokit.rb/master/README.md
        _links:
          git: https://api.github.com/repos/octokit/octokit.rb/git/blobs/3d21ec53a331a6f037a91c368710b99387d012c1
          self: https://api.github.com/repos/octokit/octokit.rb/contents/README.md
          html: https://github.com/octokit/octokit.rb/blob/master/README.md
    content-file-response-if-content-is-a-directory:
      summary: Response if content is a directory
      value:
        - type: file
          size: 625
          name: octokit.rb
          path: lib/octokit.rb
          sha: fff6fe3a23bf1c8ea0692b4a883af99bee26fd3b
          url: https://api.github.com/repos/octokit/octokit.rb/contents/lib/octokit.rb
          git_url: https://api.github.com/repos/octokit/octokit.rb/git/blobs/fff6fe3a23bf1c8ea0692b4a883af99bee26fd3b
          html_url: https://github.com/octokit/octokit.rb/blob/master/lib/octokit.rb
          download_url: https://raw.githubusercontent.com/octokit/octokit.rb/master/lib/octokit.rb
          _links:
            self: https://api.github.com/repos/octokit/octokit.rb/contents/lib/octokit.rb
            git: https://api.github.com/repos/octokit/octokit.rb/git/blobs/fff6fe3a23bf1c8ea0692b4a883af99bee26fd3b
            html: https://github.com/octokit/octokit.rb/blob/master/lib/octokit.rb
        - type: dir
          size: 0
          name: octokit
          path: lib/octokit
          sha: a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
          url: https://api.github.com/repos/octokit/octokit.rb/contents/lib/octokit
          git_url: https://api.github.com/repos/octokit/octokit.rb/git/trees/a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
          html_url: https://github.com/octokit/octokit.rb/tree/master/lib/octokit
          download_url: null
          _links:
            self: https://api.github.com/repos/octokit/octokit.rb/contents/lib/octokit
            git: https://api.github.com/repos/octokit/octokit.rb/git/trees/a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
            html: https://github.com/octokit/octokit.rb/tree/master/lib/octokit
    content-file-response-if-content-is-a-symlink:
      summary: Response if content is a symlink
      value:
        type: symlink
        target: /path/to/symlink/target
        size: 23
        name: some-symlink
        path: bin/some-symlink
        sha: 452a98979c88e093d682cab404a3ec82babebb48
        url: https://api.github.com/repos/octokit/octokit.rb/contents/bin/some-symlink
        git_url: https://api.github.com/repos/octokit/octokit.rb/git/blobs/452a98979c88e093d682cab404a3ec82babebb48
        html_url: https://github.com/octokit/octokit.rb/blob/master/bin/some-symlink
        download_url: https://raw.githubusercontent.com/octokit/octokit.rb/master/bin/some-symlink
        _links:
          git: https://api.github.com/repos/octokit/octokit.rb/git/blobs/452a98979c88e093d682cab404a3ec82babebb48
          self: https://api.github.com/repos/octokit/octokit.rb/contents/bin/some-symlink
          html: https://github.com/octokit/octokit.rb/blob/master/bin/some-symlink
    content-file-response-if-content-is-a-submodule:
      summary: Response if content is a submodule
      value:
        type: submodule
        submodule_git_url: git://github.com/jquery/qunit.git
        size: 0
        name: qunit
        path: test/qunit
        sha: 6ca3721222109997540bd6d9ccd396902e0ad2f9
        url: https://api.github.com/repos/jquery/jquery/contents/test/qunit?ref=master
        git_url: https://api.github.com/repos/jquery/qunit/git/trees/6ca3721222109997540bd6d9ccd396902e0ad2f9
        html_url: https://github.com/jquery/qunit/tree/6ca3721222109997540bd6d9ccd396902e0ad2f9
        download_url: null
        _links:
          git: https://api.github.com/repos/jquery/qunit/git/trees/6ca3721222109997540bd6d9ccd396902e0ad2f9
          self: https://api.github.com/repos/jquery/jquery/contents/test/qunit?ref=master
          html: https://github.com/jquery/qunit/tree/6ca3721222109997540bd6d9ccd396902e0ad2f9
    file-commit-example-for-updating-a-file:
      value:
        content:
          name: hello.txt
          path: notes/hello.txt
          sha: a56507ed892d05a37c6d6128c260937ea4d287bd
          size: 9
          url: https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt
          html_url: https://github.com/octocat/Hello-World/blob/master/notes/hello.txt
          git_url: https://api.github.com/repos/octocat/Hello-World/git/blobs/a56507ed892d05a37c6d6128c260937ea4d287bd
          download_url: https://raw.githubusercontent.com/octocat/HelloWorld/master/notes/hello.txt
          type: file
          _links:
            self: https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt
            git: https://api.github.com/repos/octocat/Hello-World/git/blobs/a56507ed892d05a37c6d6128c260937ea4d287bd
            html: https://github.com/octocat/Hello-World/blob/master/notes/hello.txt
        commit:
          sha: 18a43cd8e1e3a79c786e3d808a73d23b6d212b16
          node_id: MDY6Q29tbWl0MThhNDNjZDhlMWUzYTc5Yzc4NmUzZDgwOGE3M2QyM2I2ZDIxMmIxNg==
          url: https://api.github.com/repos/octocat/Hello-World/git/commits/18a43cd8e1e3a79c786e3d808a73d23b6d212b16
          html_url: https://github.com/octocat/Hello-World/git/commit/18a43cd8e1e3a79c786e3d808a73d23b6d212b16
          author:
            date: '2014-11-07T22:01:45Z'
            name: Monalisa Octocat
            email: octocat@github.com
          committer:
            date: '2014-11-07T22:01:45Z'
            name: Monalisa Octocat
            email: octocat@github.com
          message: my commit message
          tree:
            url: https://api.github.com/repos/octocat/Hello-World/git/trees/9a21f8e2018f42ffcf369b24d2cd20bc25c9e66f
            sha: 9a21f8e2018f42ffcf369b24d2cd20bc25c9e66f
          parents:
            - url: https://api.github.com/repos/octocat/Hello-World/git/commits/da5a433788da5c255edad7979b328b67d79f53f6
              html_url: https://github.com/octocat/Hello-World/git/commit/da5a433788da5c255edad7979b328b67d79f53f6
              sha: da5a433788da5c255edad7979b328b67d79f53f6
          verification:
            verified: false
            reason: unsigned
            signature: null
            payload: null
    file-commit-example-for-creating-a-file:
      value:
        content:
          name: hello.txt
          path: notes/hello.txt
          sha: 95b966ae1c166bd92f8ae7d1c313e738c731dfc3
          size: 9
          url: https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt
          html_url: https://github.com/octocat/Hello-World/blob/master/notes/hello.txt
          git_url: https://api.github.com/repos/octocat/Hello-World/git/blobs/95b966ae1c166bd92f8ae7d1c313e738c731dfc3
          download_url: https://raw.githubusercontent.com/octocat/HelloWorld/master/notes/hello.txt
          type: file
          _links:
            self: https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt
            git: https://api.github.com/repos/octocat/Hello-World/git/blobs/95b966ae1c166bd92f8ae7d1c313e738c731dfc3
            html: https://github.com/octocat/Hello-World/blob/master/notes/hello.txt
        commit:
          sha: 7638417db6d59f3c431d3e1f261cc637155684cd
          node_id: MDY6Q29tbWl0NzYzODQxN2RiNmQ1OWYzYzQzMWQzZTFmMjYxY2M2MzcxNTU2ODRjZA==
          url: https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd
          html_url: https://github.com/octocat/Hello-World/git/commit/7638417db6d59f3c431d3e1f261cc637155684cd
          author:
            date: '2014-11-07T22:01:45Z'
            name: Monalisa Octocat
            email: octocat@github.com
          committer:
            date: '2014-11-07T22:01:45Z'
            name: Monalisa Octocat
            email: octocat@github.com
          message: my commit message
          tree:
            url: https://api.github.com/repos/octocat/Hello-World/git/trees/691272480426f78a0138979dd3ce63b77f706feb
            sha: 691272480426f78a0138979dd3ce63b77f706feb
          parents:
            - url: https://api.github.com/repos/octocat/Hello-World/git/commits/1acc419d4d6a9ce985db7be48c6349a0475975b5
              html_url: https://github.com/octocat/Hello-World/git/commit/1acc419d4d6a9ce985db7be48c6349a0475975b5
              sha: 1acc419d4d6a9ce985db7be48c6349a0475975b5
          verification:
            verified: false
            reason: unsigned
            signature: null
            payload: null
    file-commit:
      value:
        content: null
        commit:
          sha: 7638417db6d59f3c431d3e1f261cc637155684cd
          node_id: MDY6Q29tbWl0NzYzODQxN2RiNmQ1OWYzYzQzMWQzZTFmMjYxY2M2MzcxNTU2ODRjZA==
          url: https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd
          html_url: https://github.com/octocat/Hello-World/git/commit/7638417db6d59f3c431d3e1f261cc637155684cd
          author:
            date: '2014-11-07T22:01:45Z'
            name: Monalisa Octocat
            email: octocat@github.com
          committer:
            date: '2014-11-07T22:01:45Z'
            name: Monalisa Octocat
            email: octocat@github.com
          message: my commit message
          tree:
            url: https://api.github.com/repos/octocat/Hello-World/git/trees/691272480426f78a0138979dd3ce63b77f706feb
            sha: 691272480426f78a0138979dd3ce63b77f706feb
          parents:
            - url: https://api.github.com/repos/octocat/Hello-World/git/commits/1acc419d4d6a9ce985db7be48c6349a0475975b5
              html_url: https://github.com/octocat/Hello-World/git/commit/1acc419d4d6a9ce985db7be48c6349a0475975b5
              sha: 1acc419d4d6a9ce985db7be48c6349a0475975b5
          verification:
            verified: false
            reason: unsigned
            signature: null
            payload: null
    contributor-items-response-if-repository-contains-content:
      value:
        - login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
          contributions: 32
    deployment-items:
      value:
        - url: https://api.github.com/repos/octocat/example/deployments/1
          id: 1
          node_id: MDEwOkRlcGxveW1lbnQx
          sha: a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
          ref: topic-branch
          task: deploy
          payload: {}
          original_environment: staging
          environment: production
          description: Deploy request from hubot
          creator:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          created_at: '2012-07-20T01:19:13Z'
          updated_at: '2012-07-20T01:19:13Z'
          statuses_url: https://api.github.com/repos/octocat/example/deployments/1/statuses
          repository_url: https://api.github.com/repos/octocat/example
          transient_environment: false
          production_environment: true
    deployment-simple-example:
      summary: Simple example
      value:
        url: https://api.github.com/repos/octocat/example/deployments/1
        id: 1
        node_id: MDEwOkRlcGxveW1lbnQx
        sha: a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
        ref: topic-branch
        task: deploy
        payload: {}
        original_environment: staging
        environment: production
        description: Deploy request from hubot
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2012-07-20T01:19:13Z'
        updated_at: '2012-07-20T01:19:13Z'
        statuses_url: https://api.github.com/repos/octocat/example/deployments/1/statuses
        repository_url: https://api.github.com/repos/octocat/example
        transient_environment: false
        production_environment: true
    deployment:
      value:
        url: https://api.github.com/repos/octocat/example/deployments/1
        id: 1
        node_id: MDEwOkRlcGxveW1lbnQx
        sha: a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
        ref: topic-branch
        task: deploy
        payload: {}
        original_environment: staging
        environment: production
        description: Deploy request from hubot
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2012-07-20T01:19:13Z'
        updated_at: '2012-07-20T01:19:13Z'
        statuses_url: https://api.github.com/repos/octocat/example/deployments/1/statuses
        repository_url: https://api.github.com/repos/octocat/example
        transient_environment: false
        production_environment: true
    deployment-status-items:
      value:
        - url: https://api.github.com/repos/octocat/example/deployments/42/statuses/1
          id: 1
          node_id: MDE2OkRlcGxveW1lbnRTdGF0dXMx
          state: success
          creator:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          description: Deployment finished successfully.
          environment: production
          target_url: https://example.com/deployment/42/output
          created_at: '2012-07-20T01:19:13Z'
          updated_at: '2012-07-20T01:19:13Z'
          deployment_url: https://api.github.com/repos/octocat/example/deployments/42
          repository_url: https://api.github.com/repos/octocat/example
          environment_url: https://test-branch.lab.acme.com
          log_url: https://example.com/deployment/42/output
    deployment-status:
      value:
        url: https://api.github.com/repos/octocat/example/deployments/42/statuses/1
        id: 1
        node_id: MDE2OkRlcGxveW1lbnRTdGF0dXMx
        state: success
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        description: Deployment finished successfully.
        environment: production
        target_url: https://example.com/deployment/42/output
        created_at: '2012-07-20T01:19:13Z'
        updated_at: '2012-07-20T01:19:13Z'
        deployment_url: https://api.github.com/repos/octocat/example/deployments/42
        repository_url: https://api.github.com/repos/octocat/example
        environment_url: https://test-branch.lab.acme.com
        log_url: https://example.com/deployment/42/output
    environments:
      value:
        total_count: 1
        environments:
          - id: 161088068
            node_id: MDExOkVudmlyb25tZW50MTYxMDg4MDY4
            name: staging
            url: https://api.github.com/repos/github/hello-world/environments/staging
            html_url: https://github.com/github/hello-world/deployments/activity_log?environments_filter=staging
            created_at: '2020-11-23T22:00:40Z'
            updated_at: '2020-11-23T22:00:40Z'
            protection_rules:
              - id: 3736
                node_id: MDQ6R2F0ZTM3MzY=
                type: wait_timer
                wait_timer: 30
              - id: 3755
                node_id: MDQ6R2F0ZTM3NTU=
                type: required_reviewers
                reviewers:
                  - type: User
                    reviewer:
                      login: octocat
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      avatar_url: https://github.com/images/error/octocat_happy.gif
                      gravatar_id: ''
                      url: https://api.github.com/users/octocat
                      html_url: https://github.com/octocat
                      followers_url: https://api.github.com/users/octocat/followers
                      following_url: https://api.github.com/users/octocat/following{/other_user}
                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                      starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                      subscriptions_url: https://api.github.com/users/octocat/subscriptions
                      organizations_url: https://api.github.com/users/octocat/orgs
                      repos_url: https://api.github.com/users/octocat/repos
                      events_url: https://api.github.com/users/octocat/events{/privacy}
                      received_events_url: https://api.github.com/users/octocat/received_events
                      type: User
                      site_admin: false
                  - type: Team
                    reviewer:
                      id: 1
                      node_id: MDQ6VGVhbTE=
                      url: https://api.github.com/teams/1
                      html_url: https://github.com/orgs/github/teams/justice-league
                      name: Justice League
                      slug: justice-league
                      description: A great team.
                      privacy: closed
                      permission: admin
                      members_url: https://api.github.com/teams/1/members{/member}
                      repositories_url: https://api.github.com/teams/1/repos
                      parent: null
              - id: 3756
                node_id: MDQ6R2F0ZTM3NTY=
                type: branch_policy
            deployment_branch_policy:
              protected_branches: false
              custom_branch_policies: true
    environment:
      value:
        id: 161088068
        node_id: MDExOkVudmlyb25tZW50MTYxMDg4MDY4
        name: staging
        url: https://api.github.com/repos/github/hello-world/environments/staging
        html_url: https://github.com/github/hello-world/deployments/activity_log?environments_filter=staging
        created_at: '2020-11-23T22:00:40Z'
        updated_at: '2020-11-23T22:00:40Z'
        protection_rules:
          - id: 3736
            node_id: MDQ6R2F0ZTM3MzY=
            type: wait_timer
            wait_timer: 30
          - id: 3755
            node_id: MDQ6R2F0ZTM3NTU=
            type: required_reviewers
            reviewers:
              - type: User
                reviewer:
                  login: octocat
                  id: 1
                  node_id: MDQ6VXNlcjE=
                  avatar_url: https://github.com/images/error/octocat_happy.gif
                  gravatar_id: ''
                  url: https://api.github.com/users/octocat
                  html_url: https://github.com/octocat
                  followers_url: https://api.github.com/users/octocat/followers
                  following_url: https://api.github.com/users/octocat/following{/other_user}
                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                  subscriptions_url: https://api.github.com/users/octocat/subscriptions
                  organizations_url: https://api.github.com/users/octocat/orgs
                  repos_url: https://api.github.com/users/octocat/repos
                  events_url: https://api.github.com/users/octocat/events{/privacy}
                  received_events_url: https://api.github.com/users/octocat/received_events
                  type: User
                  site_admin: false
              - type: Team
                reviewer:
                  id: 1
                  node_id: MDQ6VGVhbTE=
                  url: https://api.github.com/teams/1
                  html_url: https://github.com/orgs/github/teams/justice-league
                  name: Justice League
                  slug: justice-league
                  description: A great team.
                  privacy: closed
                  permission: admin
                  members_url: https://api.github.com/teams/1/members{/member}
                  repositories_url: https://api.github.com/teams/1/repos
                  parent: null
          - id: 3756
            node_id: MDQ6R2F0ZTM3NTY=
            type: branch_policy
        deployment_branch_policy:
          protected_branches: false
          custom_branch_policies: true
    minimal-repository-items-2:
      value:
        - id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: true
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World.git
          mirror_url: git:git.example.com/octocat/Hello-World
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          svn_url: https://svn.github.com/octocat/Hello-World
          homepage: https://github.com
          language: null
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          size: 108
          default_branch: master
          open_issues_count: 0
          is_template: true
          topics:
            - octocat
            - atom
            - electron
            - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            admin: false
            push: false
            pull: true
          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
          delete_branch_on_merge: true
          subscribers_count: 42
          network_count: 0
          license:
            key: mit
            name: MIT License
            spdx_id: MIT
            url: https://api.github.com/licenses/mit
            node_id: MDc6TGljZW5zZW1pdA==
    hook-items:
      value:
        - type: Repository
          id: 12345678
          name: web
          active: true
          events:
            - push
            - pull_request
          config:
            content_type: json
            insecure_ssl: '0'
            url: https://example.com/webhook
          updated_at: '2019-06-03T00:57:16Z'
          created_at: '2019-06-03T00:57:16Z'
          url: https://api.github.com/repos/octocat/Hello-World/hooks/12345678
          test_url: https://api.github.com/repos/octocat/Hello-World/hooks/12345678/test
          ping_url: https://api.github.com/repos/octocat/Hello-World/hooks/12345678/pings
          deliveries_url: https://api.github.com/repos/octocat/Hello-World/hooks/12345678/deliveries
          last_response:
            code: null
            status: unused
            message: null
    hook:
      value:
        type: Repository
        id: 12345678
        name: web
        active: true
        events:
          - push
          - pull_request
        config:
          content_type: json
          insecure_ssl: '0'
          url: https://example.com/webhook
        updated_at: '2019-06-03T00:57:16Z'
        created_at: '2019-06-03T00:57:16Z'
        url: https://api.github.com/repos/octocat/Hello-World/hooks/12345678
        test_url: https://api.github.com/repos/octocat/Hello-World/hooks/12345678/test
        ping_url: https://api.github.com/repos/octocat/Hello-World/hooks/12345678/pings
        deliveries_url: https://api.github.com/repos/octocat/Hello-World/hooks/12345678/deliveries
        last_response:
          code: null
          status: unused
          message: null
    webhook-config:
      value:
        content_type: json
        insecure_ssl: '0'
        secret: '********'
        url: https://example.com/webhook
    hook-delivery-items:
      value:
        - id: 12345678
          guid: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          delivered_at: '2019-06-03T00:57:16Z'
          redelivery: false
          duration: 0.27
          status: OK
          status_code: 200
          event: issues
          action: opened
          installation_id: 123
          repository_id: 456
        - id: 123456789
          guid: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          delivered_at: '2019-06-04T00:57:16Z'
          redelivery: true
          duration: 0.28
          status: OK
          status_code: 200
          event: issues
          action: opened
          installation_id: 123
          repository_id: 456
    hook-delivery:
      value:
        id: 12345678
        guid: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        delivered_at: '2019-06-03T00:57:16Z'
        redelivery: false
        duration: 0.27
        status: OK
        status_code: 200
        event: issues
        action: opened
        installation_id: 123
        repository_id: 456
        url: https://www.example.com
        request:
          headers:
            X-GitHub-Delivery: 0b989ba4-242f-11e5-81e1-c7b6966d2516
            X-Hub-Signature-256: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
            Accept: '*/*'
            X-GitHub-Hook-ID: '42'
            User-Agent: GitHub-Hookshot/b8c71d8
            X-GitHub-Event: issues
            X-GitHub-Hook-Installation-Target-ID: '123'
            X-GitHub-Hook-Installation-Target-Type: repository
            content-type: application/json
            X-Hub-Signature: sha1=a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
          payload:
            action: opened
            issue:
              body: foo
            repository:
              id: 123
        response:
          headers:
            Content-Type: text/html;charset=utf-8
          payload: ok
    repository-invitation-items:
      value:
        - id: 1
          repository:
            id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World
            full_name: octocat/Hello-World
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
          invitee:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          inviter:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          permissions: write
          created_at: '2016-06-13T14:52:50-05:00'
          url: https://api.github.com/user/repository_invitations/1296269
          html_url: https://github.com/octocat/Hello-World/invitations
          node_id: MDQ6VXNlcjE=
    repository-invitation:
      value:
        id: 1
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        repository:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
        invitee:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        inviter:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        permissions: write
        created_at: '2016-06-13T14:52:50-05:00'
        expired: false
        url: https://api.github.com/user/repository_invitations/1296269
        html_url: https://github.com/octocat/Hello-World/invitations
    deploy-key-items:
      value:
        - id: 1
          key: ssh-rsa AAA...
          url: https://api.github.com/repos/octocat/Hello-World/keys/1
          title: octocat@octomac
          verified: true
          created_at: '2014-12-10T15:53:42Z'
          read_only: true
    deploy-key:
      value:
        id: 1
        key: ssh-rsa AAA...
        url: https://api.github.com/repos/octocat/Hello-World/keys/1
        title: octocat@octomac
        verified: true
        created_at: '2014-12-10T15:53:42Z'
        read_only: true
    language:
      value:
        C: 78769
        Python: 7769
    merged-upstream:
      value:
        message: Successfully fetched and fast-forwarded from upstream defunkt:main
        merge_type: fast-forward
        base_branch: defunkt:main
    page:
      value:
        url: https://api.github.com/repos/github/developer.github.com/pages
        status: built
        cname: developer.github.com
        custom_404: false
        html_url: https://developer.github.com
        source:
          branch: master
          path: /
        public: true
        https_certificate:
          state: approved
          description: Certificate is approved
          domains:
            - developer.github.com
          expires_at: '2021-05-22'
        https_enforced: true
    page-build-items:
      value:
        - url: https://api.github.com/repos/github/developer.github.com/pages/builds/5472601
          status: built
          error:
            message: null
          pusher:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          commit: 351391cdcb88ffae71ec3028c91f375a8036a26b
          duration: 2104
          created_at: '2014-02-10T19:00:49Z'
          updated_at: '2014-02-10T19:00:51Z'
    page-build-status:
      value:
        url: https://api.github.com/repos/github/developer.github.com/pages/builds/latest
        status: queued
    page-build:
      value:
        url: https://api.github.com/repos/github/developer.github.com/pages/builds/5472601
        status: built
        error:
          message: null
        pusher:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        commit: 351391cdcb88ffae71ec3028c91f375a8036a26b
        duration: 2104
        created_at: '2014-02-10T19:00:49Z'
        updated_at: '2014-02-10T19:00:51Z'
    pages-health-check:
      value:
        domain:
          host: example.com
          uri: http://example.com/
          nameservers: default
          dns_resolves: true
          is_proxied: false
          is_cloudflare_ip: false
          is_fastly_ip: false
          is_old_ip_address: false
          is_a_record: true
          has_cname_record: false
          has_mx_records_present: false
          is_valid_domain: true
          is_apex_domain: true
          should_be_a_record: true
          is_cname_to_github_user_domain: false
          is_cname_to_pages_dot_github_dot_com: false
          is_cname_to_fastly: false
          is_pointed_to_github_pages_ip: true
          is_non_github_pages_ip_present: false
          is_pages_domain: false
          is_served_by_pages: true
          is_valid: true
          reason: null
          responds_to_https: true
          enforces_https: true
          https_error: null
          is_https_eligible: true
          caa_error: null
        alt_domain:
          host: www.example.com
          uri: http://www.example.com/
          nameservers: default
          dns_resolves: true
          is_proxied: false
          is_cloudflare_ip: false
          is_fastly_ip: false
          is_old_ip_address: false
          is_a_record: true
          has_cname_record: false
          has_mx_records_present: false
          is_valid_domain: true
          is_apex_domain: true
          should_be_a_record: true
          is_cname_to_github_user_domain: false
          is_cname_to_pages_dot_github_dot_com: false
          is_cname_to_fastly: false
          is_pointed_to_github_pages_ip: true
          is_non_github_pages_ip_present: false
          is_pages_domain: false
          is_served_by_pages: true
          is_valid: true
          reason: null
          responds_to_https: true
          enforces_https: true
          https_error: null
          is_https_eligible: true
          caa_error: null
    content-file:
      value:
        type: file
        encoding: base64
        size: 5362
        name: README.md
        path: README.md
        content: encoded content ...
        sha: 3d21ec53a331a6f037a91c368710b99387d012c1
        url: https://api.github.com/repos/octokit/octokit.rb/contents/README.md
        git_url: https://api.github.com/repos/octokit/octokit.rb/git/blobs/3d21ec53a331a6f037a91c368710b99387d012c1
        html_url: https://github.com/octokit/octokit.rb/blob/master/README.md
        download_url: https://raw.githubusercontent.com/octokit/octokit.rb/master/README.md
        _links:
          git: https://api.github.com/repos/octokit/octokit.rb/git/blobs/3d21ec53a331a6f037a91c368710b99387d012c1
          self: https://api.github.com/repos/octokit/octokit.rb/contents/README.md
          html: https://github.com/octokit/octokit.rb/blob/master/README.md
    release-items:
      value:
        - url: https://api.github.com/repos/octocat/Hello-World/releases/1
          html_url: https://github.com/octocat/Hello-World/releases/v1.0.0
          assets_url: https://api.github.com/repos/octocat/Hello-World/releases/1/assets
          upload_url: https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets{?name,label}
          tarball_url: https://api.github.com/repos/octocat/Hello-World/tarball/v1.0.0
          zipball_url: https://api.github.com/repos/octocat/Hello-World/zipball/v1.0.0
          id: 1
          node_id: MDc6UmVsZWFzZTE=
          tag_name: v1.0.0
          target_commitish: master
          name: v1.0.0
          body: Description of the release
          draft: false
          prerelease: false
          created_at: '2013-02-27T19:35:32Z'
          published_at: '2013-02-27T19:35:32Z'
          author:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          assets:
            - url: https://api.github.com/repos/octocat/Hello-World/releases/assets/1
              browser_download_url: https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip
              id: 1
              node_id: MDEyOlJlbGVhc2VBc3NldDE=
              name: example.zip
              label: short description
              state: uploaded
              content_type: application/zip
              size: 1024
              download_count: 42
              created_at: '2013-02-27T19:35:32Z'
              updated_at: '2013-02-27T19:35:32Z'
              uploader:
                login: octocat
                id: 1
                node_id: MDQ6VXNlcjE=
                avatar_url: https://github.com/images/error/octocat_happy.gif
                gravatar_id: ''
                url: https://api.github.com/users/octocat
                html_url: https://github.com/octocat
                followers_url: https://api.github.com/users/octocat/followers
                following_url: https://api.github.com/users/octocat/following{/other_user}
                gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                subscriptions_url: https://api.github.com/users/octocat/subscriptions
                organizations_url: https://api.github.com/users/octocat/orgs
                repos_url: https://api.github.com/users/octocat/repos
                events_url: https://api.github.com/users/octocat/events{/privacy}
                received_events_url: https://api.github.com/users/octocat/received_events
                type: User
                site_admin: false
    release:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/releases/1
        html_url: https://github.com/octocat/Hello-World/releases/v1.0.0
        assets_url: https://api.github.com/repos/octocat/Hello-World/releases/1/assets
        upload_url: https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets{?name,label}
        tarball_url: https://api.github.com/repos/octocat/Hello-World/tarball/v1.0.0
        zipball_url: https://api.github.com/repos/octocat/Hello-World/zipball/v1.0.0
        discussion_url: https://github.com/octocat/Hello-World/discussions/90
        id: 1
        node_id: MDc6UmVsZWFzZTE=
        tag_name: v1.0.0
        target_commitish: master
        name: v1.0.0
        body: Description of the release
        draft: false
        prerelease: false
        created_at: '2013-02-27T19:35:32Z'
        published_at: '2013-02-27T19:35:32Z'
        author:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        assets:
          - url: https://api.github.com/repos/octocat/Hello-World/releases/assets/1
            browser_download_url: https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip
            id: 1
            node_id: MDEyOlJlbGVhc2VBc3NldDE=
            name: example.zip
            label: short description
            state: uploaded
            content_type: application/zip
            size: 1024
            download_count: 42
            created_at: '2013-02-27T19:35:32Z'
            updated_at: '2013-02-27T19:35:32Z'
            uploader:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
    release-asset:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/releases/assets/1
        browser_download_url: https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip
        id: 1
        node_id: MDEyOlJlbGVhc2VBc3NldDE=
        name: example.zip
        label: short description
        state: uploaded
        content_type: application/zip
        size: 1024
        download_count: 42
        created_at: '2013-02-27T19:35:32Z'
        updated_at: '2013-02-27T19:35:32Z'
        uploader:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    release-notes-content:
      value:
        name: Release v1.0.0 is now available!
        body: '##Changes in Release v1.0.0 ... ##Contributors @monalisa'
    release-asset-items:
      value:
        - url: https://api.github.com/repos/octocat/Hello-World/releases/assets/1
          browser_download_url: https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip
          id: 1
          node_id: MDEyOlJlbGVhc2VBc3NldDE=
          name: example.zip
          label: short description
          state: uploaded
          content_type: application/zip
          size: 1024
          download_count: 42
          created_at: '2013-02-27T19:35:32Z'
          updated_at: '2013-02-27T19:35:32Z'
          uploader:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
    release-asset-response-for-successful-upload:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/releases/assets/1
        browser_download_url: https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip
        id: 1
        node_id: MDEyOlJlbGVhc2VBc3NldDE=
        name: example.zip
        label: short description
        state: uploaded
        content_type: application/zip
        size: 1024
        download_count: 42
        created_at: '2013-02-27T19:35:32Z'
        updated_at: '2013-02-27T19:35:32Z'
        uploader:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    code-frequency-stat-items:
      value:
        - - 1302998400
          - 1124
          - -435
    commit-activity-items:
      value:
        - days:
            - 0
            - 3
            - 26
            - 20
            - 39
            - 1
            - 0
          total: 89
          week: 1336280400
    contributor-activity-items:
      value:
        - author:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          total: 135
          weeks:
            - w: 1367712000
              a: 6898
              d: 77
              c: 10
    participation-stats:
      value:
        all:
          - 11
          - 21
          - 15
          - 2
          - 8
          - 1
          - 8
          - 23
          - 17
          - 21
          - 11
          - 10
          - 33
          - 91
          - 38
          - 34
          - 22
          - 23
          - 32
          - 3
          - 43
          - 87
          - 71
          - 18
          - 13
          - 5
          - 13
          - 16
          - 66
          - 27
          - 12
          - 45
          - 110
          - 117
          - 13
          - 8
          - 18
          - 9
          - 19
          - 26
          - 39
          - 12
          - 20
          - 31
          - 46
          - 91
          - 45
          - 10
          - 24
          - 9
          - 29
          - 7
        owner:
          - 3
          - 2
          - 3
          - 0
          - 2
          - 0
          - 5
          - 14
          - 7
          - 9
          - 1
          - 5
          - 0
          - 48
          - 19
          - 2
          - 0
          - 1
          - 10
          - 2
          - 23
          - 40
          - 35
          - 8
          - 8
          - 2
          - 10
          - 6
          - 30
          - 0
          - 2
          - 9
          - 53
          - 104
          - 3
          - 3
          - 10
          - 4
          - 7
          - 11
          - 21
          - 4
          - 4
          - 22
          - 26
          - 63
          - 11
          - 2
          - 14
          - 1
          - 10
          - 3
    code-frequency-stat-items-2:
      value:
        - - 0
          - 0
          - 5
        - - 0
          - 1
          - 43
        - - 0
          - 2
          - 21
    status:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
        avatar_url: https://github.com/images/error/hubot_happy.gif
        id: 1
        node_id: MDY6U3RhdHVzMQ==
        state: success
        description: Build has completed successfully
        target_url: https://ci.example.com/1000/output
        context: continuous-integration/jenkins
        created_at: '2012-07-20T01:19:13Z'
        updated_at: '2012-07-20T01:19:13Z'
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    tag-items:
      value:
        - name: v0.1
          commit:
            sha: c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc
            url: https://api.github.com/repos/octocat/Hello-World/commits/c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc
          zipball_url: https://github.com/octocat/Hello-World/zipball/v0.1
          tarball_url: https://github.com/octocat/Hello-World/tarball/v0.1
          node_id: MDQ6VXNlcjE=
    topic:
      value:
        names:
          - octocat
          - atom
          - electron
          - api
    clone-traffic:
      value:
        count: 173
        uniques: 128
        clones:
          - timestamp: '2016-10-10T00:00:00Z'
            count: 2
            uniques: 1
          - timestamp: '2016-10-11T00:00:00Z'
            count: 17
            uniques: 16
          - timestamp: '2016-10-12T00:00:00Z'
            count: 21
            uniques: 15
          - timestamp: '2016-10-13T00:00:00Z'
            count: 8
            uniques: 7
          - timestamp: '2016-10-14T00:00:00Z'
            count: 5
            uniques: 5
          - timestamp: '2016-10-15T00:00:00Z'
            count: 2
            uniques: 2
          - timestamp: '2016-10-16T00:00:00Z'
            count: 8
            uniques: 7
          - timestamp: '2016-10-17T00:00:00Z'
            count: 26
            uniques: 15
          - timestamp: '2016-10-18T00:00:00Z'
            count: 19
            uniques: 17
          - timestamp: '2016-10-19T00:00:00Z'
            count: 19
            uniques: 14
          - timestamp: '2016-10-20T00:00:00Z'
            count: 19
            uniques: 15
          - timestamp: '2016-10-21T00:00:00Z'
            count: 9
            uniques: 7
          - timestamp: '2016-10-22T00:00:00Z'
            count: 5
            uniques: 5
          - timestamp: '2016-10-23T00:00:00Z'
            count: 6
            uniques: 5
          - timestamp: '2016-10-24T00:00:00Z'
            count: 7
            uniques: 5
    content-traffic-items:
      value:
        - path: /github/hubot
          title: 'github/hubot: A customizable life embetterment robot.'
          count: 3542
          uniques: 2225
        - path: /github/hubot/blob/master/docs/scripting.md
          title: hubot/scripting.md at master · github/hubot · GitHub
          count: 1707
          uniques: 804
        - path: /github/hubot/tree/master/docs
          title: hubot/docs at master · github/hubot · GitHub
          count: 685
          uniques: 435
        - path: /github/hubot/tree/master/src
          title: hubot/src at master · github/hubot · GitHub
          count: 577
          uniques: 347
        - path: /github/hubot/blob/master/docs/index.md
          title: hubot/index.md at master · github/hubot · GitHub
          count: 379
          uniques: 259
        - path: /github/hubot/blob/master/docs/adapters.md
          title: hubot/adapters.md at master · github/hubot · GitHub
          count: 354
          uniques: 201
        - path: /github/hubot/tree/master/examples
          title: hubot/examples at master · github/hubot · GitHub
          count: 340
          uniques: 260
        - path: /github/hubot/blob/master/docs/deploying/heroku.md
          title: hubot/heroku.md at master · github/hubot · GitHub
          count: 324
          uniques: 217
        - path: /github/hubot/blob/master/src/robot.coffee
          title: hubot/robot.coffee at master · github/hubot · GitHub
          count: 293
          uniques: 191
        - path: /github/hubot/blob/master/LICENSE.md
          title: hubot/LICENSE.md at master · github/hubot · GitHub
          count: 281
          uniques: 222
    referrer-traffic-items:
      value:
        - referrer: Google
          count: 4
          uniques: 3
        - referrer: stackoverflow.com
          count: 2
          uniques: 2
        - referrer: eggsonbread.com
          count: 1
          uniques: 1
        - referrer: yandex.ru
          count: 1
          uniques: 1
    view-traffic:
      value:
        count: 14850
        uniques: 3782
        views:
          - timestamp: '2016-10-10T00:00:00Z'
            count: 440
            uniques: 143
          - timestamp: '2016-10-11T00:00:00Z'
            count: 1308
            uniques: 414
          - timestamp: '2016-10-12T00:00:00Z'
            count: 1486
            uniques: 452
          - timestamp: '2016-10-13T00:00:00Z'
            count: 1170
            uniques: 401
          - timestamp: '2016-10-14T00:00:00Z'
            count: 868
            uniques: 266
          - timestamp: '2016-10-15T00:00:00Z'
            count: 495
            uniques: 157
          - timestamp: '2016-10-16T00:00:00Z'
            count: 524
            uniques: 175
          - timestamp: '2016-10-17T00:00:00Z'
            count: 1263
            uniques: 412
          - timestamp: '2016-10-18T00:00:00Z'
            count: 1402
            uniques: 417
          - timestamp: '2016-10-19T00:00:00Z'
            count: 1394
            uniques: 424
          - timestamp: '2016-10-20T00:00:00Z'
            count: 1492
            uniques: 448
          - timestamp: '2016-10-21T00:00:00Z'
            count: 1153
            uniques: 332
          - timestamp: '2016-10-22T00:00:00Z'
            count: 566
            uniques: 168
          - timestamp: '2016-10-23T00:00:00Z'
            count: 675
            uniques: 184
          - timestamp: '2016-10-24T00:00:00Z'
            count: 614
            uniques: 237
    minimal-repository:
      value:
        id: 1296269
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name: Hello-World
        full_name: octocat/Hello-World
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        private: false
        html_url: https://github.com/octocat/Hello-World
        description: This your first repo!
        fork: false
        url: https://api.github.com/repos/octocat/Hello-World
        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
        events_url: https://api.github.com/repos/octocat/Hello-World/events
        forks_url: https://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url: git:github.com/octocat/Hello-World.git
        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url: https://api.github.com/repos/octocat/Hello-World/languages
        merges_url: https://api.github.com/repos/octocat/Hello-World/merges
        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url: git@github.com:octocat/Hello-World.git
        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
        tags_url: https://api.github.com/repos/octocat/Hello-World/tags
        teams_url: https://api.github.com/repos/octocat/Hello-World/teams
        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url: https://github.com/octocat/Hello-World.git
        mirror_url: git:git.example.com/octocat/Hello-World
        hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
        svn_url: https://svn.github.com/octocat/Hello-World
        homepage: https://github.com
        language: null
        forks_count: 9
        stargazers_count: 80
        watchers_count: 80
        size: 108
        default_branch: master
        open_issues_count: 0
        is_template: false
        topics:
          - octocat
          - atom
          - electron
          - api
        has_issues: true
        has_projects: true
        has_wiki: true
        has_pages: false
        has_downloads: true
        archived: false
        disabled: false
        visibility: public
        pushed_at: '2011-01-26T19:06:43Z'
        created_at: '2011-01-26T19:01:12Z'
        updated_at: '2011-01-26T19:14:43Z'
        permissions:
          admin: false
          push: false
          pull: true
        template_repository:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World-Template
          full_name: octocat/Hello-World-Template
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World-Template
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World-Template
          archive_url: https://api.github.com/repos/octocat/Hello-World-Template/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World-Template/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World-Template/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World-Template/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World-Template/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World-Template/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World-Template/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World-Template/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World-Template/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World-Template/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World-Template/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World-Template/events
          forks_url: https://api.github.com/repos/octocat/Hello-World-Template/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World-Template/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World-Template/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World-Template.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World-Template/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World-Template/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World-Template/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World-Template/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World-Template/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World-Template/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World-Template/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World-Template/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World-Template/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World-Template.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World-Template/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World-Template/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World-Template/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World-Template/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World-Template/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World-Template/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World-Template/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World-Template.git
          mirror_url: git:git.example.com/octocat/Hello-World-Template
          hooks_url: https://api.github.com/repos/octocat/Hello-World-Template/hooks
          svn_url: https://svn.github.com/octocat/Hello-World-Template
          homepage: https://github.com
          language: null
          forks: 9
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          watchers: 80
          size: 108
          default_branch: master
          open_issues: 0
          open_issues_count: 0
          is_template: true
          license:
            key: mit
            name: MIT License
            url: https://api.github.com/licenses/mit
            spdx_id: MIT
            node_id: MDc6TGljZW5zZW1pdA==
            html_url: https://api.github.com/licenses/mit
          topics:
            - octocat
            - atom
            - electron
            - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            admin: false
            push: false
            pull: true
          allow_rebase_merge: true
          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
          allow_squash_merge: true
          allow_auto_merge: false
          delete_branch_on_merge: true
          allow_merge_commit: true
          allow_forking: true
          subscribers_count: 42
          network_count: 0
    repository-3:
      value:
        id: 1296269
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name: Hello-World
        full_name: octocat/Hello-World
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        private: false
        html_url: https://github.com/octocat/Hello-World
        description: This your first repo!
        fork: false
        url: https://api.github.com/repos/octocat/Hello-World
        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
        events_url: https://api.github.com/repos/octocat/Hello-World/events
        forks_url: https://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url: git:github.com/octocat/Hello-World.git
        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url: https://api.github.com/repos/octocat/Hello-World/languages
        merges_url: https://api.github.com/repos/octocat/Hello-World/merges
        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url: git@github.com:octocat/Hello-World.git
        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
        tags_url: https://api.github.com/repos/octocat/Hello-World/tags
        teams_url: https://api.github.com/repos/octocat/Hello-World/teams
        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url: https://github.com/octocat/Hello-World.git
        mirror_url: git:git.example.com/octocat/Hello-World
        hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
        svn_url: https://svn.github.com/octocat/Hello-World
        homepage: https://github.com
        language: null
        forks_count: 9
        forks: 9
        stargazers_count: 80
        watchers_count: 80
        watchers: 80
        size: 108
        default_branch: master
        open_issues_count: 0
        open_issues: 0
        is_template: false
        topics:
          - octocat
          - atom
          - electron
          - api
        has_issues: true
        has_projects: true
        has_wiki: true
        has_pages: false
        has_downloads: true
        archived: false
        disabled: false
        visibility: public
        pushed_at: '2011-01-26T19:06:43Z'
        created_at: '2011-01-26T19:01:12Z'
        updated_at: '2011-01-26T19:14:43Z'
        permissions:
          admin: false
          push: false
          pull: true
        allow_rebase_merge: true
        allow_auto_merge: false
        license:
          key: mit
          name: MIT License
          url: https://api.github.com/licenses/mit
          spdx_id: MIT
          node_id: MDc6TGljZW5zZW1pdA==
          html_url: https://github.com/licenses/mit
    public-repository-items:
      value:
        - id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
    repository-items-default-response:
      summary: Default response
      value:
        - id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World.git
          mirror_url: git:git.example.com/octocat/Hello-World
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          svn_url: https://svn.github.com/octocat/Hello-World
          homepage: https://github.com
          language: null
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          size: 108
          default_branch: master
          open_issues_count: 0
          is_template: true
          topics:
            - octocat
            - atom
            - electron
            - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            admin: false
            push: false
            pull: true
          allow_rebase_merge: true
          template_repository: null
          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
          allow_squash_merge: true
          allow_auto_merge: false
          delete_branch_on_merge: true
          allow_merge_commit: true
          subscribers_count: 42
          network_count: 0
          license:
            key: mit
            name: MIT License
            url: https://api.github.com/licenses/mit
            spdx_id: MIT
            node_id: MDc6TGljZW5zZW1pdA==
            html_url: https://github.com/licenses/mit
          forks: 1
          open_issues: 1
          watchers: 1
  requestBodies: {}
  headers:
    link:
      example: <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last"
      schema:
        type: string
  links: {}
  x-stackQL-resources:
    contributors:
      id: github.repos.contributors
      name: contributors
      title: Repo Contributors
      methods:
        list_contributors:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1contributors/get'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/contributors/methods/list_contributors'
        insert: []
        update: []
        delete: []
    languages:
      id: github.repos.languages
      name: languages
      title: Repo Languages
      methods:
        list_languages:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1languages/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/languages/methods/list_languages'
        insert: []
        update: []
        delete: []
    tags:
      id: github.repos.tags
      name: tags
      title: Repo Tags
      methods:
        list_tags:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1tags/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tags/methods/list_tags'
        insert: []
        update: []
        delete: []
    teams:
      id: github.repos.teams
      name: teams
      title: Repo Teams
      methods:
        list_teams:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1teams/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/teams/methods/list_teams'
        insert: []
        update: []
        delete: []
    topics:
      id: github.repos.topics
      name: topics
      title: Repo Topics
      methods:
        get_all_topics:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1topics/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        replace_all_topics:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1topics/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/topics/methods/get_all_topics'
        insert: []
        update: []
        delete: []
    public_repos:
      id: github.repos.public_repos
      name: public_repos
      title: Public Repos
      methods:
        list_public:
          operation:
            $ref: '#/paths/~1repositories/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/public_repos/methods/list_public'
        insert: []
        update: []
        delete: []
    repos:
      id: github.repos.repos
      name: repos
      title: Repos
      methods:
        list_for_org:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1repos/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_in_org:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1repos/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        get:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        enable_automated_security_fixes:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1automated-security-fixes/put'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        disable_automated_security_fixes:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1automated-security-fixes/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        codeowners_errors:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1codeowners~1errors/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_dispatch_event:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1dispatches/post'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        transfer:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1transfer/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        check_vulnerability_alerts:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1vulnerability-alerts/get'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        enable_vulnerability_alerts:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1vulnerability-alerts/put'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        disable_vulnerability_alerts:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1vulnerability-alerts/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        create_using_template:
          operation:
            $ref: '#/paths/~1repos~1{template_owner}~1{template_repo}~1generate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        list_for_authenticated_user:
          operation:
            $ref: '#/paths/~1user~1repos/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_for_authenticated_user:
          operation:
            $ref: '#/paths/~1user~1repos/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        list_for_user:
          operation:
            $ref: '#/paths/~1users~1{username}~1repos/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/repos/methods/list_for_org'
          - $ref: '#/components/x-stackQL-resources/repos/methods/list_for_user'
          - $ref: '#/components/x-stackQL-resources/repos/methods/list_for_authenticated_user'
        insert:
          - $ref: '#/components/x-stackQL-resources/repos/methods/create_using_template'
          - $ref: '#/components/x-stackQL-resources/repos/methods/create_in_org'
          - $ref: '#/components/x-stackQL-resources/repos/methods/create_for_authenticated_user'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/repos/methods/delete'
    autolinks:
      id: github.repos.autolinks
      name: autolinks
      title: Autolinks
      methods:
        list_autolinks:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1autolinks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_autolink:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1autolinks/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        get_autolink:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1autolinks~1{autolink_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_autolink:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1autolinks~1{autolink_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/autolinks/methods/get_autolink'
          - $ref: '#/components/x-stackQL-resources/autolinks/methods/list_autolinks'
        insert:
          - $ref: '#/components/x-stackQL-resources/autolinks/methods/create_autolink'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/autolinks/methods/delete_autolink'
    branch_protection:
      id: github.repos.branch_protection
      name: branch_protection
      title: Branch Protection
      methods:
        get_branch_protection:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_branch_protection:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_branch_protection:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/branch_protection/methods/get_branch_protection'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/branch_protection/methods/delete_branch_protection'
    admin_branch_protection:
      id: github.repos.admin_branch_protection
      name: admin_branch_protection
      title: Admin Branch Protection
      methods:
        get_admin_branch_protection:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1enforce_admins/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_admin_branch_protection:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1enforce_admins/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_admin_branch_protection:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1enforce_admins/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/admin_branch_protection/methods/get_admin_branch_protection'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/admin_branch_protection/methods/delete_admin_branch_protection'
    required_pull_request_reviews:
      id: github.repos.required_pull_request_reviews
      name: required_pull_request_reviews
      title: Required Pull Request Reviews
      methods:
        get_pull_request_review_protection:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1required_pull_request_reviews/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_pull_request_review_protection:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1required_pull_request_reviews/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_pull_request_review_protection:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1required_pull_request_reviews/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/required_pull_request_reviews/methods/get_pull_request_review_protection'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/required_pull_request_reviews/methods/delete_pull_request_review_protection'
    required_signatures:
      id: github.repos.required_signatures
      name: required_signatures
      title: Required Signatures
      methods:
        get_commit_signature_protection:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1required_signatures/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_commit_signature_protection:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1required_signatures/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_commit_signature_protection:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1required_signatures/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/required_signatures/methods/get_commit_signature_protection'
        insert:
          - $ref: '#/components/x-stackQL-resources/required_signatures/methods/create_commit_signature_protection'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/required_signatures/methods/delete_commit_signature_protection'
    status_check_contexts:
      id: github.repos.status_check_contexts
      name: status_check_contexts
      title: Status Checks Contexts
      methods:
        get_all_status_check_contexts:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1required_status_checks~1contexts/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        add_status_check_contexts:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1required_status_checks~1contexts/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_status_check_contexts:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1required_status_checks~1contexts/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        remove_status_check_contexts:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1required_status_checks~1contexts/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/status_check_contexts/methods/get_all_status_check_contexts'
        insert:
          - $ref: '#/components/x-stackQL-resources/status_check_contexts/methods/add_status_check_contexts'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/status_check_contexts/methods/remove_status_check_contexts'
    required_status_checks:
      id: github.repos.required_status_checks
      name: required_status_checks
      title: Required Status Checks
      methods:
        get_status_checks_protection:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1required_status_checks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_status_check_protection:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1required_status_checks/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        remove_status_check_protection:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1required_status_checks/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/required_status_checks/methods/get_status_checks_protection'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/required_status_checks/methods/remove_status_check_protection'
    access_restrictions:
      id: github.repos.access_restrictions
      name: access_restrictions
      title: Access Restrictions
      methods:
        get_access_restrictions:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1restrictions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_access_restrictions:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1restrictions/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/access_restrictions/methods/get_access_restrictions'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/access_restrictions/methods/delete_access_restrictions'
    app_access:
      id: github.repos.app_access
      name: app_access
      title: Apps with Access to Protected Branches
      methods:
        get_apps_with_access_to_protected_branch:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1restrictions~1apps/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        add_app_access_restrictions:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1restrictions~1apps/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_app_access_restrictions:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1restrictions~1apps/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        remove_app_access_restrictions:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1restrictions~1apps/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/app_access/methods/get_apps_with_access_to_protected_branch'
        insert:
          - $ref: '#/components/x-stackQL-resources/app_access/methods/add_app_access_restrictions'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/app_access/methods/remove_app_access_restrictions'
    team_access:
      id: github.repos.team_access
      name: team_access
      title: Teams with Access to Protected Branches
      methods:
        get_teams_with_access_to_protected_branch:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1restrictions~1teams/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        add_team_access_restrictions:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1restrictions~1teams/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_team_access_restrictions:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1restrictions~1teams/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        remove_team_access_restrictions:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1restrictions~1teams/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/team_access/methods/get_teams_with_access_to_protected_branch'
        insert:
          - $ref: '#/components/x-stackQL-resources/team_access/methods/add_team_access_restrictions'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/team_access/methods/remove_team_access_restrictions'
    user_access:
      id: github.repos.user_access
      name: user_access
      title: Users with Access to Protected Branches
      methods:
        get_users_with_access_to_protected_branch:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1restrictions~1users/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        add_user_access_restrictions:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1restrictions~1users/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_user_access_restrictions:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1restrictions~1users/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        remove_user_access_restrictions:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1restrictions~1users/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/user_access/methods/get_users_with_access_to_protected_branch'
        insert:
          - $ref: '#/components/x-stackQL-resources/user_access/methods/add_user_access_restrictions'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/user_access/methods/remove_user_access_restrictions'
    branches:
      id: github.repos.branches
      name: branches
      title: Branches
      methods:
        list_branches:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_branch:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        rename_branch:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1rename/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        merge_upstream:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1merge-upstream/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/branches/methods/get_branch'
          - $ref: '#/components/x-stackQL-resources/branches/methods/list_branches'
        insert: []
        update: []
        delete: []
    collaborator_permission_levels:
      id: github.repos.collaborator_permission_levels
      name: collaborator_permission_levels
      title: Collaborator Permission Levels
      methods:
        get_collaborator_permission_level:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1collaborators~1{username}~1permission/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/collaborator_permission_levels/methods/get_collaborator_permission_level'
        insert: []
        update: []
        delete: []
    collaborators:
      id: github.repos.collaborators
      name: collaborators
      title: Collaborators
      methods:
        list_collaborators:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1collaborators/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        check_collaborator:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1collaborators~1{username}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        add_collaborator:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1collaborators~1{username}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        remove_collaborator:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1collaborators~1{username}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/collaborators/methods/list_collaborators'
        insert:
          - $ref: '#/components/x-stackQL-resources/collaborators/methods/add_collaborator'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/collaborators/methods/remove_collaborator'
    comments:
      id: github.repos.comments
      name: comments
      title: Comments
      methods:
        list_commit_comments_for_repo:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1comments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_commit_comment:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1comments~1{comment_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_commit_comment:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1comments~1{comment_id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_commit_comment:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1comments~1{comment_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        list_comments_for_commit:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1commits~1{commit_sha}~1comments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_commit_comment:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1commits~1{commit_sha}~1comments/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/comments/methods/get_commit_comment'
          - $ref: '#/components/x-stackQL-resources/comments/methods/list_comments_for_commit'
          - $ref: '#/components/x-stackQL-resources/comments/methods/list_commit_comments_for_repo'
        insert:
          - $ref: '#/components/x-stackQL-resources/comments/methods/create_commit_comment'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/comments/methods/delete_commit_comment'
    commit_branches:
      id: github.repos.commit_branches
      name: commit_branches
      title: Branches for Head Commit
      methods:
        list_branches_for_head_commit:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1commits~1{commit_sha}~1branches-where-head/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/commit_branches/methods/list_branches_for_head_commit'
        insert: []
        update: []
        delete: []
    commit_pull_requests:
      id: github.repos.commit_pull_requests
      name: commit_pull_requests
      title: Pull Requests Associated with Commits
      methods:
        list_pull_requests_associated_with_commit:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1commits~1{commit_sha}~1pulls/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/commit_pull_requests/methods/list_pull_requests_associated_with_commit'
        insert: []
        update: []
        delete: []
    commits:
      id: github.repos.commits
      name: commits
      title: Commits
      methods:
        list_commits:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1commits/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_commit:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1commits~1{ref}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        compare_commits:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1compare~1{basehead}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/commits/methods/get_commit'
          - $ref: '#/components/x-stackQL-resources/commits/methods/list_commits'
        insert: []
        update: []
        delete: []
    combined_statuses:
      id: github.repos.combined_statuses
      name: combined_statuses
      title: Combined Statuses
      methods:
        get_combined_status_for_ref:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1commits~1{ref}~1status/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/combined_statuses/methods/get_combined_status_for_ref'
        insert: []
        update: []
        delete: []
    statuses:
      id: github.repos.statuses
      name: statuses
      title: Statuses
      methods:
        list_commit_statuses_for_ref:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1commits~1{ref}~1statuses/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_commit_status:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1statuses~1{sha}/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/statuses/methods/list_commit_statuses_for_ref'
        insert:
          - $ref: '#/components/x-stackQL-resources/statuses/methods/create_commit_status'
        update: []
        delete: []
    community:
      id: github.repos.community
      name: community
      title: Community
      methods:
        get_community_profile_metrics:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1community~1profile/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/community/methods/get_community_profile_metrics'
        insert: []
        update: []
        delete: []
    contents:
      id: github.repos.contents
      name: contents
      title: Contents
      methods:
        get_content:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1contents~1{path}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update_file_contents:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1contents~1{path}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        delete_file:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1contents~1{path}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_readme:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1readme/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_readme_in_directory:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1readme~1{dir}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        download_tarball_archive:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1tarball~1{ref}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        download_zipball_archive:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1zipball~1{ref}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/contents/methods/get_readme_in_directory'
          - $ref: '#/components/x-stackQL-resources/contents/methods/get_readme'
        insert:
          - $ref: '#/components/x-stackQL-resources/contents/methods/create_or_update_file_contents'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/contents/methods/delete_file'
    deployment_statuses:
      id: github.repos.deployment_statuses
      name: deployment_statuses
      title: Deployments statuses_url
      methods:
        list_deployment_statuses:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1deployments~1{deployment_id}~1statuses/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_deployment_status:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1deployments~1{deployment_id}~1statuses/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        get_deployment_status:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1deployments~1{deployment_id}~1statuses~1{status_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/deployment_statuses/methods/get_deployment_status'
          - $ref: '#/components/x-stackQL-resources/deployment_statuses/methods/list_deployment_statuses'
        insert:
          - $ref: '#/components/x-stackQL-resources/deployment_statuses/methods/create_deployment_status'
        update: []
        delete: []
    deployments:
      id: github.repos.deployments
      name: deployments
      title: Deployments
      methods:
        list_deployments:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1deployments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_deployment:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1deployments/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        get_deployment:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1deployments~1{deployment_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_deployment:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1deployments~1{deployment_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/deployments/methods/get_deployment'
          - $ref: '#/components/x-stackQL-resources/deployments/methods/list_deployments'
        insert:
          - $ref: '#/components/x-stackQL-resources/deployments/methods/create_deployment'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/deployments/methods/delete_deployment'
    environments:
      id: github.repos.environments
      name: environments
      title: Environments
      methods:
        get_all_environments:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1environments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_environment:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1environments~1{environment_name}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update_environment:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1environments~1{environment_name}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_an_environment:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1environments~1{environment_name}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/environments/methods/get_environment'
          - $ref: '#/components/x-stackQL-resources/environments/methods/get_all_environments'
        insert:
          - $ref: '#/components/x-stackQL-resources/environments/methods/create_or_update_environment'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/environments/methods/delete_an_environment'
    forks:
      id: github.repos.forks
      name: forks
      title: Forks
      methods:
        list_forks:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1forks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_fork:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1forks/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/forks/methods/list_forks'
        insert:
          - $ref: '#/components/x-stackQL-resources/forks/methods/create_fork'
        update: []
        delete: []
    webhook_deliveries:
      id: github.repos.webhook_deliveries
      name: webhook_deliveries
      title: Webhook Deliveries
      methods:
        list_webhook_deliveries:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1hooks~1{hook_id}~1deliveries/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_webhook_delivery:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1hooks~1{hook_id}~1deliveries~1{delivery_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        redeliver_webhook_delivery:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1hooks~1{hook_id}~1deliveries~1{delivery_id}~1attempts/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/webhook_deliveries/methods/get_webhook_delivery'
          - $ref: '#/components/x-stackQL-resources/webhook_deliveries/methods/list_webhook_deliveries'
        insert: []
        update: []
        delete: []
    webhook_config:
      id: github.repos.webhook_config
      name: webhook_config
      title: Webhook Config
      methods:
        get_webhook_config_for_repo:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1hooks~1{hook_id}~1config/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_webhook_config_for_repo:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1hooks~1{hook_id}~1config/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/webhook_config/methods/get_webhook_config_for_repo'
        insert: []
        update: []
        delete: []
    webhooks:
      id: github.repos.webhooks
      name: webhooks
      title: Webhooks
      methods:
        list_webhooks:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1hooks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_webhook:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1hooks/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        get_webhook:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1hooks~1{hook_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_webhook:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1hooks~1{hook_id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_webhook:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1hooks~1{hook_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        ping_webhook:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1hooks~1{hook_id}~1pings/post'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        test_push_webhook:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1hooks~1{hook_id}~1tests/post'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/webhooks/methods/get_webhook'
          - $ref: '#/components/x-stackQL-resources/webhooks/methods/list_webhooks'
        insert:
          - $ref: '#/components/x-stackQL-resources/webhooks/methods/create_webhook'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/webhooks/methods/delete_webhook'
    invitations:
      id: github.repos.invitations
      name: invitations
      title: Invitations
      methods:
        list_invitations:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1invitations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_invitation:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1invitations~1{invitation_id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_invitation:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1invitations~1{invitation_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        list_invitations_for_authenticated_user:
          operation:
            $ref: '#/paths/~1user~1repository_invitations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accept_invitation_for_authenticated_user:
          operation:
            $ref: '#/paths/~1user~1repository_invitations~1{invitation_id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        decline_invitation_for_authenticated_user:
          operation:
            $ref: '#/paths/~1user~1repository_invitations~1{invitation_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/invitations/methods/list_invitations'
          - $ref: '#/components/x-stackQL-resources/invitations/methods/list_invitations_for_authenticated_user'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/invitations/methods/delete_invitation'
    keys:
      id: github.repos.keys
      name: keys
      title: Keys
      methods:
        list_deploy_keys:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1keys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_deploy_key:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1keys/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        get_deploy_key:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1keys~1{key_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_deploy_key:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1keys~1{key_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/keys/methods/get_deploy_key'
          - $ref: '#/components/x-stackQL-resources/keys/methods/list_deploy_keys'
        insert:
          - $ref: '#/components/x-stackQL-resources/keys/methods/create_deploy_key'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/keys/methods/delete_deploy_key'
    lfs:
      id: github.repos.lfs
      name: lfs
      title: Lfs
      methods:
        enable_lfs_for_repo:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1lfs/put'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        disable_lfs_for_repo:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1lfs/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    merging:
      id: github.repos.merging
      name: merging
      title: Merging
      methods:
        merge:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1merges/post'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    pages_build_latest:
      id: github.repos.pages_build_latest
      name: pages_build_latest
      title: Pages Builds Latest
      methods:
        get_latest_pages_build:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1pages~1builds~1latest/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/pages_build_latest/methods/get_latest_pages_build'
        insert: []
        update: []
        delete: []
    pages_builds:
      id: github.repos.pages_builds
      name: pages_builds
      title: Pages Builds
      methods:
        list_pages_builds:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1pages~1builds/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        request_pages_build:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1pages~1builds/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        get_pages_build:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1pages~1builds~1{build_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/pages_builds/methods/get_pages_build'
          - $ref: '#/components/x-stackQL-resources/pages_builds/methods/list_pages_builds'
        insert: []
        update: []
        delete: []
    pages_health_checks:
      id: github.repos.pages_health_checks
      name: pages_health_checks
      title: Pages Health Checks
      methods:
        get_pages_health_check:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1pages~1health/get'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/pages_health_checks/methods/get_pages_health_check'
    pages:
      id: github.repos.pages
      name: pages
      title: Pages
      methods:
        get_pages:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1pages/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_pages_site:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1pages/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        update_information_about_pages_site:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1pages/put'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        delete_pages_site:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1pages/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/pages/methods/get_pages'
        insert:
          - $ref: '#/components/x-stackQL-resources/pages/methods/create_pages_site'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/pages/methods/delete_pages_site'
    release_assets:
      id: github.repos.release_assets
      name: release_assets
      title: Releases Assets
      methods:
        get_release_asset:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1releases~1assets~1{asset_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_release_asset:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1releases~1assets~1{asset_id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_release_asset:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1releases~1assets~1{asset_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        list_release_assets:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1releases~1{release_id}~1assets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        upload_release_asset:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1releases~1{release_id}~1assets/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/release_assets/methods/get_release_asset'
          - $ref: '#/components/x-stackQL-resources/release_assets/methods/list_release_assets'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/release_assets/methods/delete_release_asset'
    latest_releases:
      id: github.repos.latest_releases
      name: latest_releases
      title: Latest Releases
      methods:
        get_latest_release:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1releases~1latest/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/latest_releases/methods/get_latest_release'
        insert: []
        update: []
        delete: []
    releases:
      id: github.repos.releases
      name: releases
      title: Releases
      methods:
        list_releases:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1releases/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_release:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1releases/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        generate_release_notes:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1releases~1generate-notes/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_release_by_tag:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1releases~1tags~1{tag}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_release:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1releases~1{release_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_release:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1releases~1{release_id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_release:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1releases~1{release_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/releases/methods/get_release_by_tag'
          - $ref: '#/components/x-stackQL-resources/releases/methods/get_release'
          - $ref: '#/components/x-stackQL-resources/releases/methods/list_releases'
        insert:
          - $ref: '#/components/x-stackQL-resources/releases/methods/create_release'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/releases/methods/delete_release'
    statistics_commit_activity:
      id: github.repos.statistics_commit_activity
      name: statistics_commit_activity
      title: Statistics Commit Activity
      methods:
        get_commit_activity_stats:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1stats~1commit_activity/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/statistics_commit_activity/methods/get_commit_activity_stats'
        insert: []
        update: []
        delete: []
    statistics_contributor_activity:
      id: github.repos.statistics_contributor_activity
      name: statistics_contributor_activity
      title: Statistics Contributors Activity
      methods:
        get_contributors_stats:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1stats~1contributors/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/statistics_contributor_activity/methods/get_contributors_stats'
        insert: []
        update: []
        delete: []
    statistics_participation:
      id: github.repos.statistics_participation
      name: statistics_participation
      title: Statistics Participation
      methods:
        get_participation_stats:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1stats~1participation/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/statistics_participation/methods/get_participation_stats'
        insert: []
        update: []
        delete: []
    statistics_punch_cards:
      id: github.repos.statistics_punch_cards
      name: statistics_punch_cards
      title: Statistics Punch Cards
      methods:
        get_punch_card_stats:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1stats~1punch_card/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/statistics_punch_cards/methods/get_punch_card_stats'
        insert: []
        update: []
        delete: []
    statistics_code_frequency:
      id: github.repos.statistics_code_frequency
      name: statistics_code_frequency
      title: Statistics Code Frequency
      methods:
        get_code_frequency_stats:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1stats~1code_frequency/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/statistics_code_frequency/methods/get_code_frequency_stats'
        insert: []
        update: []
        delete: []
    clone_traffic:
      id: github.repos.clone_traffic
      name: clone_traffic
      title: Clone Traffic
      methods:
        get_clones:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1traffic~1clones/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/clone_traffic/methods/get_clones'
        insert: []
        update: []
        delete: []
    content_traffic:
      id: github.repos.content_traffic
      name: content_traffic
      title: Content Traffic
      methods:
        get_top_paths:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1traffic~1popular~1paths/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/content_traffic/methods/get_top_paths'
    referrer_traffic:
      id: github.repos.referrer_traffic
      name: referrer_traffic
      title: Referrer Traffic
      methods:
        get_top_referrers:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1traffic~1popular~1referrers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/referrer_traffic/methods/get_top_referrers'
        insert: []
        update: []
        delete: []
    traffic:
      id: github.repos.traffic
      name: traffic
      title: Traffic
      methods:
        get_views:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1traffic~1views/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/traffic/methods/get_views'
        insert: []
        update: []
        delete: []
openapi: 3.0.3
servers:
  - url: https://api.github.com
tags:
  - name: actions
    description: Endpoints to manage GitHub Actions using the REST API.
  - name: activity
    description: Activity APIs provide access to notifications, subscriptions, and timelines.
  - name: apps
    description: Information for integrations and installations.
  - name: billing
    description: Monitor charges and usage from Actions and Packages.
  - name: checks
    description: Rich interactions with checks run by your integrations.
  - name: code-scanning
    description: Retrieve code scanning alerts from a repository.
  - name: codes-of-conduct
    description: Insight into codes of conduct for your communities.
  - name: codespaces
    description: Endpoints to manage Codespaces using the REST API.
  - name: emojis
    description: List emojis available to use on GitHub.
  - name: enterprise-admin
    description: Administer a GitHub enterprise.
  - name: dependabot
    description: Endpoints to manage Dependabot.
  - name: gists
    description: View, modify your gists.
  - name: git
    description: Raw Git functionality.
  - name: gitignore
    description: View gitignore templates
  - name: interactions
    description: Owner or admin management of users interactions.
  - name: issues
    description: Interact with GitHub Issues.
  - name: licenses
    description: View various OSS licenses.
  - name: markdown
    description: Render GitHub flavored markdown
  - name: meta
    description: Endpoints that give information about the API.
  - name: migrations
    description: Move projects to or from GitHub.
  - name: oauth-authorizations
    description: Manage access of OAuth applications
  - name: orgs
    description: Interact with GitHub Orgs.
  - name: packages
    description: Manage packages for authenticated users and organizations.
  - name: projects
    description: Interact with GitHub Projects.
  - name: pulls
    description: Interact with GitHub Pull Requests.
  - name: rate-limit
    description: Check your current rate limit status
  - name: reactions
    description: Interact with reactions to various GitHub entities.
  - name: repos
    description: Interact with GitHub Repos.
  - name: scim
    description: Provisioning of GitHub organization membership for SCIM-enabled providers.
  - name: search
    description: Look for stuff on GitHub.
  - name: secret-scanning
    description: Retrieve secret scanning alerts from a repository.
  - name: server-statistics
    description: GHES statistics
  - name: teams
    description: Interact with GitHub Teams.
  - name: users
    description: Interact with and view information about users and also current user.
externalDocs:
  description: GitHub v3 REST API
  url: https://docs.github.com/rest/
info:
  version: 1.1.4
  title: GitHub v3 REST API - repos
  description: Interact with GitHub Repos.
  license:
    name: MIT
    url: https://spdx.org/licenses/MIT
  termsOfService: https://docs.github.com/articles/github-terms-of-service
  contact:
    name: Support
    url: https://support.github.com/contact?tags=dotcom-rest-api
